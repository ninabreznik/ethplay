{
  "address": "0x4bcba674eec03d47a24f607518eb59e400dd2acf",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Lottery",
  "compilerVersion": "v0.4.26+commit.4563c3fc",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-24\n*/\n\npragma solidity ^0.4.23;\n\npragma solidity ^0.4.23;\n\npragma solidity ^0.4.23;\n\n\npragma solidity ^0.4.23;\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\npragma solidity ^0.4.23;\n\n/// @author https://BlockChainArchitect.iocontract Bank is CutiePluginBase\ncontract PluginInterface\n{\n    /// @dev simply a boolean to indicate this is the contract we expect to be\n    function isPluginInterface() public pure returns (bool);\n\n    function onRemove() public;\n\n    /// @dev Begins new feature.\n    /// @param _cutieId - ID of token to auction, sender must be owner.\n    /// @param _parameter - arbitrary parameter\n    /// @param _seller - Old owner, if not the message sender\n    function run(\n        uint40 _cutieId,\n        uint256 _parameter,\n        address _seller\n    ) \n    public\n    payable;\n\n    /// @dev Begins new feature, approved and signed by COO.\n    /// @param _cutieId - ID of token to auction, sender must be owner.\n    /// @param _parameter - arbitrary parameter\n    function runSigned(\n        uint40 _cutieId,\n        uint256 _parameter,\n        address _owner\n    )\n    external\n    payable;\n\n    function withdraw() public;\n}\n\npragma solidity ^0.4.23;\n\npragma solidity ^0.4.23;\n\n/// @title BlockchainCuties: Collectible and breedable cuties on the Ethereum blockchain.\n/// @author https://BlockChainArchitect.io\n/// @dev This is the BlockchainCuties configuration. It can be changed redeploying another version.\ninterface ConfigInterface\n{\n    function isConfig() external pure returns (bool);\n\n    function getCooldownIndexFromGeneration(uint16 _generation, uint40 _cutieId) external view returns (uint16);\n    function getCooldownEndTimeFromIndex(uint16 _cooldownIndex, uint40 _cutieId) external view returns (uint40);\n    function getCooldownIndexFromGeneration(uint16 _generation) external view returns (uint16);\n    function getCooldownEndTimeFromIndex(uint16 _cooldownIndex) external view returns (uint40);\n\n    function getCooldownIndexCount() external view returns (uint256);\n\n    function getBabyGenFromId(uint40 _momId, uint40 _dadId) external view returns (uint16);\n    function getBabyGen(uint16 _momGen, uint16 _dadGen) external pure returns (uint16);\n\n    function getTutorialBabyGen(uint16 _dadGen) external pure returns (uint16);\n\n    function getBreedingFee(uint40 _momId, uint40 _dadId) external view returns (uint256);\n}\n\n\ncontract CutieCoreInterface\n{\n    function isCutieCore() pure public returns (bool);\n\n    ConfigInterface public config;\n\n    function transferFrom(address _from, address _to, uint256 _cutieId) external;\n    function transfer(address _to, uint256 _cutieId) external;\n\n    function ownerOf(uint256 _cutieId)\n        external\n        view\n        returns (address owner);\n\n    function getCutie(uint40 _id)\n        external\n        view\n        returns (\n        uint256 genes,\n        uint40 birthTime,\n        uint40 cooldownEndTime,\n        uint40 momId,\n        uint40 dadId,\n        uint16 cooldownIndex,\n        uint16 generation\n    );\n\n    function getGenes(uint40 _id)\n        public\n        view\n        returns (\n        uint256 genes\n    );\n\n\n    function getCooldownEndTime(uint40 _id)\n        public\n        view\n        returns (\n        uint40 cooldownEndTime\n    );\n\n    function getCooldownIndex(uint40 _id)\n        public\n        view\n        returns (\n        uint16 cooldownIndex\n    );\n\n\n    function getGeneration(uint40 _id)\n        public\n        view\n        returns (\n        uint16 generation\n    );\n\n    function getOptional(uint40 _id)\n        public\n        view\n        returns (\n        uint64 optional\n    );\n\n\n    function changeGenes(\n        uint40 _cutieId,\n        uint256 _genes)\n        public;\n\n    function changeCooldownEndTime(\n        uint40 _cutieId,\n        uint40 _cooldownEndTime)\n        public;\n\n    function changeCooldownIndex(\n        uint40 _cutieId,\n        uint16 _cooldownIndex)\n        public;\n\n    function changeOptional(\n        uint40 _cutieId,\n        uint64 _optional)\n        public;\n\n    function changeGeneration(\n        uint40 _cutieId,\n        uint16 _generation)\n        public;\n\n    function createSaleAuction(\n        uint40 _cutieId,\n        uint128 _startPrice,\n        uint128 _endPrice,\n        uint40 _duration\n    )\n    public;\n\n    function getApproved(uint256 _tokenId) external returns (address);\n    function totalSupply() view external returns (uint256);\n    function createPromoCutie(uint256 _genes, address _owner) external;\n    function checkOwnerAndApprove(address _claimant, uint40 _cutieId, address _pluginsContract) external view;\n    function breedWith(uint40 _momId, uint40 _dadId) public payable returns (uint40);\n    function getBreedingFee(uint40 _momId, uint40 _dadId) public view returns (uint256);\n}\n\n\n/// @author https://BlockChainArchitect.iocontract Bank is CutiePluginBase\ncontract CutiePluginBase is PluginInterface, Pausable\n{\n    function isPluginInterface() public pure returns (bool)\n    {\n        return true;\n    }\n\n    // Reference to contract tracking NFT ownership\n    CutieCoreInterface public coreContract;\n    address public pluginsContract;\n\n    // Cut owner takes on each auction, measured in basis points (1/100 of a percent).\n    // Values 0-10,000 map to 0%-100%\n    uint16 public ownerFee;\n\n    // @dev Throws if called by any account other than the owner.\n    modifier onlyCore() {\n        require(msg.sender == address(coreContract));\n        _;\n    }\n\n    modifier onlyPlugins() {\n        require(msg.sender == pluginsContract);\n        _;\n    }\n\n    /// @dev Constructor creates a reference to the NFT ownership contract\n    ///  and verifies the owner cut is in the valid range.\n    /// @param _coreAddress - address of a deployed contract implementing\n    ///  the Nonfungible Interface.\n    /// @param _fee - percent cut the owner takes on each auction, must be\n    ///  between 0-10,000.\n    function setup(address _coreAddress, address _pluginsContract, uint16 _fee) public {\n        require(_fee <= 10000);\n        require(msg.sender == owner);\n        ownerFee = _fee;\n        \n        CutieCoreInterface candidateContract = CutieCoreInterface(_coreAddress);\n        require(candidateContract.isCutieCore());\n        coreContract = candidateContract;\n\n        pluginsContract = _pluginsContract;\n    }\n\n    // @dev Set the owner's fee.\n    //  @param fee should be between 0-10,000.\n    function setFee(uint16 _fee) public\n    {\n        require(_fee <= 10000);\n        require(msg.sender == owner);\n\n        ownerFee = _fee;\n    }\n\n    /// @dev Returns true if the claimant owns the token.\n    /// @param _claimant - Address claiming to own the token.\n    /// @param _cutieId - ID of token whose ownership to verify.\n    function _isOwner(address _claimant, uint40 _cutieId) internal view returns (bool) {\n        return (coreContract.ownerOf(_cutieId) == _claimant);\n    }\n\n    /// @dev Escrows the NFT, assigning ownership to this contract.\n    /// Throws if the escrow fails.\n    /// @param _owner - Current owner address of token to escrow.\n    /// @param _cutieId - ID of token whose approval to verify.\n    function _escrow(address _owner, uint40 _cutieId) internal {\n        // it will throw if transfer fails\n        coreContract.transferFrom(_owner, this, _cutieId);\n    }\n\n    /// @dev Transfers an NFT owned by this contract to another address.\n    /// Returns true if the transfer succeeds.\n    /// @param _receiver - Address to transfer NFT to.\n    /// @param _cutieId - ID of token to transfer.\n    function _transfer(address _receiver, uint40 _cutieId) internal {\n        // it will throw if transfer fails\n        coreContract.transfer(_receiver, _cutieId);\n    }\n\n    /// @dev Computes owner's cut of a sale.\n    /// @param _price - Sale price of NFT.\n    function _computeFee(uint128 _price) internal view returns (uint128) {\n        // NOTE: We don't use SafeMath (or similar) in this function because\n        //  all of our entry functions carefully cap the maximum values for\n        //  currency (at 128-bits), and ownerFee <= 10000 (see the require()\n        //  statement in the ClockAuction constructor). The result of this\n        //  function is always guaranteed to be <= _price.\n        return _price * ownerFee / 10000;\n    }\n\n    function withdraw() public\n    {\n        require(\n            msg.sender == owner ||\n            msg.sender == address(coreContract)\n        );\n        _withdraw();\n    }\n\n    function _withdraw() internal\n    {\n        if (address(this).balance > 0)\n        {\n            address(coreContract).transfer(address(this).balance);\n        }\n    }\n\n    function onRemove() public onlyPlugins\n    {\n        _withdraw();\n    }\n\n    function run(\n        uint40,\n        uint256,\n        address\n    ) \n        public\n        payable\n        onlyCore\n    {\n        revert();\n    }\n}\n\n\n/// @dev Receives payments for payd features from players for Blockchain Cuties\n/// @author https://BlockChainArchitect.io\ncontract Lottery is CutiePluginBase\n{\n    event Lottery(address player);\n\n    function run(\n        uint40,\n        uint256,\n        address\n    )\n        public\n        payable\n        onlyPlugins\n    {\n        // just accept bid\n    }\n\n    function runSigned(uint40, uint256, address)\n        external\n        payable\n        onlyPlugins\n    {\n        // just accept bid\n    }\n\n    function runLottery() external\n    {\n        emit Lottery(msg.sender);\n    }\n}",
  "bytecode": "608060405260008054600160a860020a03191633179055610709806100256000396000f3006080604052600436106100e55763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631195236981146100ea5780632c5959f9146101015780633ccfd60b1461012f5780633f4ba83a146101445780635674a3ed146101595780635c975abb1461016e5780638456cb59146101975780638da5cb5b146101ac5780638e005553146101dd57806394a89233146101f95780639652713e1461020e578063976ef75b1461022f578063a055d4551461020e578063d5b2a01a14610244578063e80db5db14610270578063f2fde38b14610285575b600080fd5b3480156100f657600080fd5b506100ff6102a6565b005b34801561010d57600080fd5b506100ff600160a060020a036004358116906024351661ffff604435166102c7565b34801561013b57600080fd5b506100ff6103e2565b34801561015057600080fd5b506100ff610410565b34801561016557600080fd5b506100ff610486565b34801561017a57600080fd5b506101836104bb565b604080519115158252519081900360200190f35b3480156101a357600080fd5b506100ff6104cb565b3480156101b857600080fd5b506101c1610546565b60408051600160a060020a039092168252519081900360200190f35b3480156101e957600080fd5b506100ff61ffff60043516610555565b34801561020557600080fd5b506101836105b2565b6100ff64ffffffffff60043516602435600160a060020a03604435166105b7565b34801561023b57600080fd5b506101c16105d3565b34801561025057600080fd5b506102596105e2565b6040805161ffff9092168252519081900360200190f35b34801561027c57600080fd5b506101c16105f3565b34801561029157600080fd5b506100ff600160a060020a0360043516610602565b600254600160a060020a031633146102bd57600080fd5b6102c5610696565b565b600061271061ffff831611156102dc57600080fd5b600054600160a060020a031633146102f357600080fd5b81600260146101000a81548161ffff021916908361ffff16021790555083905080600160a060020a0316634d6a813a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561036a57600080fd5b505af115801561037e573d6000803e3d6000fd5b505050506040513d602081101561039457600080fd5b505115156103a157600080fd5b60018054600160a060020a0392831673ffffffffffffffffffffffffffffffffffffffff199182161790915560028054949092169316929092179091555050565b600054600160a060020a03163314806104055750600154600160a060020a031633145b15156102bd57600080fd5b600054600160a060020a0316331461042757600080fd5b60005460a060020a900460ff16151561043f57600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b6040805133815290517fd0c39f144bb16967ca6ff5ae28c63eb24510961d2fea9e5b07b6c696921ae0c69181900360200190a1565b60005460a060020a900460ff1681565b600054600160a060020a031633146104e257600080fd5b60005460a060020a900460ff16156104f957600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b61271061ffff8216111561056857600080fd5b600054600160a060020a0316331461057f57600080fd5b6002805461ffff90921660a060020a0275ffff000000000000000000000000000000000000000019909216919091179055565b600190565b600254600160a060020a031633146105ce57600080fd5b505050565b600254600160a060020a031681565b60025460a060020a900461ffff1681565b600154600160a060020a031681565b600054600160a060020a0316331461061957600080fd5b600160a060020a038116151561062e57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000303111156102c557600154604051600160a060020a0390911690303180156108fc02916000818181858888f193505050501580156106da573d6000803e3d6000fd5b505600a165627a7a723058205ef7203afac93bd5da0f33e471dd79336f6cb9a976a91c6a283e05bdabae9f790029"
}