{
  "address": "0x980c744ae810d643b18ac3e8780c54a7bc6ee81f",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TournamentTicketSale",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-30\n*/\n\npragma solidity >=0.4.22 <0.6.0;\n\n// * Gods Unchained Ticket Sale\n//\n// * Version 1.0\n//\n// * A dedicated contract selling tickets for the Gods Unchained tournament.\n//\n// * https://gu.cards\n\ncontract ERC20Interface {\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n}\n\ncontract TournamentTicket is ERC20Interface {}\n\ncontract TournamentTicketSale {\n\n    //////// V A R I A B L E S\n    //\n    // The ticket owner\n    //\n    address payable constant public ticketOwner = 0x317D875cA3B9f8d14f960486C0d1D1913be74e90;\n    //\n    // The ticket contract\n    //\n    TournamentTicket constant public ticketContract = TournamentTicket(0x22365168c8705E95B2D08876C23a8c13E3ad72E2);\n    //\n    // In case the sale is paused.\n    //\n    bool public paused;\n    //\n    // Price per ticket.\n    //\n    uint public pricePerTicket;\n    //\n    // Standard contract ownership.\n    //\n    address payable public owner;\n\n    //////// M O D I F I E R S\n    //\n    // Invokable only by contract owner.\n    //\n    modifier onlyContractOwner {\n        require(msg.sender == owner, \"Function called by non-owner.\");\n        _;\n    }\n    //\n    // Invokable only if exchange is not paused.\n    //\n    modifier onlyUnpaused {\n        require(paused == false, \"Exchange is paused.\");\n        _;\n    }\n\n    //////// C O N S T R U C T O R\n    //\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    //////// F U N C T I O N S\n    //\n    // Buy a single ticket.\n    //\n    function buyOne() onlyUnpaused payable external {\n        require(msg.value == pricePerTicket, \"The amout sent is not corresponding with the ticket price!\");\n        \n        require(\n            ticketContract.transferFrom(ticketOwner, msg.sender, 1),\n            \"Ticket transfer failed!\"\n        );\n    }\n    //\n    // Sets current ticket price.\n    //\n    function setTicketPrice(uint price) external onlyContractOwner {\n        pricePerTicket = price;\n    }\n    //\n    // Set paused\n    //\n    function setPaused(bool value) external onlyContractOwner {\n        paused = value;\n    }\n    //\n    // Funds withdrawal to cover operational costs\n    //\n    function withdrawFunds(uint withdrawAmount) external onlyContractOwner {\n        ticketOwner.transfer(withdrawAmount);\n    }\n    //\n    // Contract may be destroyed only when there are no ongoing bets,\n    // either settled or refunded. All funds are transferred to contract owner.\n    //\n    function kill() external onlyContractOwner {\n        selfdestruct(owner);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"ticketOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setTicketPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ticketContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyOne\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pricePerTicket\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]",
  "bytecode": "608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109dc806100616000396000f3fe6080604052600436106100905760003560e01c806358a86e1d1161005957806358a86e1d146101b65780635c975abb1461020d5780636b5e28961461023c5780638da5cb5b14610246578063e98741061461029d57610090565b8062641e8b14610095578063155dd5ee146100ec578063159816501461012757806316c38b3c1461016257806341c0e1b51461019f575b600080fd5b3480156100a157600080fd5b506100aa6102c8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100f857600080fd5b506101256004803603602081101561010f57600080fd5b81019080803590602001909291905050506102e0565b005b34801561013357600080fd5b506101606004803603602081101561014a57600080fd5b8101908080359060200190929190505050610401565b005b34801561016e57600080fd5b5061019d6004803603602081101561018557600080fd5b810190808035151590602001909291905050506104ce565b005b3480156101ab57600080fd5b506101b46105ad565b005b3480156101c257600080fd5b506101cb6106ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021957600080fd5b506102226106c3565b604051808215151515815260200191505060405180910390f35b6102446106d5565b005b34801561025257600080fd5b5061025b61094a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102a957600080fd5b506102b2610970565b6040518082815260200191505060405180910390f35b73317d875ca3b9f8d14f960486c0d1d1913be74e9081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f46756e6374696f6e2063616c6c6564206279206e6f6e2d6f776e65722e00000081525060200191505060405180910390fd5b73317d875ca3b9f8d14f960486c0d1d1913be74e9073ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103fd573d6000803e3d6000fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f46756e6374696f6e2063616c6c6564206279206e6f6e2d6f776e65722e00000081525060200191505060405180910390fd5b8060018190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f46756e6374696f6e2063616c6c6564206279206e6f6e2d6f776e65722e00000081525060200191505060405180910390fd5b806000806101000a81548160ff02191690831515021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f46756e6374696f6e2063616c6c6564206279206e6f6e2d6f776e65722e00000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b7322365168c8705e95b2d08876c23a8c13e3ad72e281565b6000809054906101000a900460ff1681565b600015156000809054906101000a900460ff1615151461075d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f45786368616e6765206973207061757365642e0000000000000000000000000081525060200191505060405180910390fd5b60015434146107b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180610977603a913960400191505060405180910390fd5b7322365168c8705e95b2d08876c23a8c13e3ad72e273ffffffffffffffffffffffffffffffffffffffff166323b872dd73317d875ca3b9f8d14f960486c0d1d1913be74e903360016040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561089b57600080fd5b505af11580156108af573d6000803e3d6000fd5b505050506040513d60208110156108c557600080fd5b8101908080519060200190929190505050610948576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5469636b6574207472616e73666572206661696c65642100000000000000000081525060200191505060405180910390fd5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001548156fe54686520616d6f75742073656e74206973206e6f7420636f72726573706f6e64696e67207769746820746865207469636b657420707269636521a165627a7a72305820a8e4dc27267bddb1d97005d023df9825ccb8d75504199eda012d39d6d913daa30029"
}