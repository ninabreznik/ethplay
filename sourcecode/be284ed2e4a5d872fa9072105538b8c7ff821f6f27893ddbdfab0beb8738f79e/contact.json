{
  "address": "0x5fa34ce3d7d05e858b50bb38afa91c8b1a045688",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SmartCityCoinTestNet",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-01\n*/\n\n/*\nThis is the contract for Smart City Coin Test Net(SCCTN) \n\nSmart City Coin Test Net(SCCTN) is utility token designed to be used as prepayment and payment in Smart City Shop.\n\nSmart City Coin Test Net(SCCTN) is utility token designed also to be proof of membership in Smart City Club.\n\nToken implements ERC 20 Token standard: https://github.com/ethereum/EIPs/issues/20\n\nSmart City Coin Test Net is as the name implies Test Network - it was deployed in order to test functionalities, options, user interface, liquidity, price fluctuation, type of users, \nmarket research and get first-hand feedback from all involved. We ask all users to be aware of test nature of the token - have patience and preferably \nreport all errors, opinions, shortcomings to our email address [email protected] Ask for bounty program for reporting shortcomings and improvement of functionalities. \n\nSmart City Coin Test Network is life real-world test with the goal to gather inputs for the Smart City Coin project.\n\nSmart City Coin Test Network is intended to be used by a skilled professional that understand and accept technology risk involved. \n\nSmart City Coin Test Net and Smart City Shop are operated by Smart City AG.\n\nSmart City AG does not assume any liability for damages or losses occurred due to the usage of SCCTN, since as name implied this is test Network design to test technology and its behavior in the real world. \n\nYou can find all about the project on http://www.smartcitycointest.net\nYou can use your coins in https://www.smartcityshop.net/  \nYou can contact us at [email protected] \n*/\n\npragma solidity ^0.4.24;\ncontract Token {\n\n    /// return total amount of tokens\n    function totalSupply() public pure returns (uint256) {}\n\n    /// param _owner The address from which the balance will be retrieved\n    /// return The balance\n    function balanceOf(address) public payable returns (uint256) {}\n\n    /// notice send `_value` token to `_to` from `msg.sender`\n    /// param _to The address of the recipient\n    /// param _value The amount of token to be transferred\n    /// return Whether the transfer was successful or not\n    function transfer(address , uint256 ) public payable returns (bool) {}\n\n    /// notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n    /// param _from The address of the sender\n    /// param _to The address of the recipient\n    /// param _value The amount of token to be transferred\n    /// return Whether the transfer was successful or not\n    function transferFrom(address , address , uint256 ) public payable returns (bool ) {}\n\n    /// notice `msg.sender` approves `_addr` to spend `_value` tokens\n    /// param _spender The address of the account able to transfer the tokens\n    /// param _value The amount of wei to be approved for transfer\n    /// return Whether the approval was successful or not\n    function approve(address , uint256 ) public payable returns (bool ) {}\n\n    /// param _owner The address of the account owning tokens\n    /// param _spender The address of the account able to transfer the tokens\n    /// return Amount of remaining tokens allowed to spent\n    function allowance(address , address ) public payable returns (uint256 ) {}\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n\n/*\nThis implements implements ERC 20 Token standard: https://github.com/ethereum/EIPs/issues/20\n.*/\n\ncontract StandardToken is Token {\n\n    function transfer(address _to, uint256 _value) public payable returns (bool ) {\n        if (balances[msg.sender] >= _value && _value > 0) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            emit Transfer(msg.sender, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public payable returns (bool ) {\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            allowed[_from][msg.sender] -= _value;\n            emit Transfer(_from, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n    function balanceOf(address _owner) public payable  returns (uint256 ) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) public payable returns (bool ) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public payable returns (uint256 a ) {\n      return allowed[_owner][_spender];\n    }\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n    uint256 public totalSupply;\n}\n\n/*\nThis Token Contract implements the standard token functionality (https://github.com/ethereum/EIPs/issues/20) as well as the following OPTIONAL extras intended for use by humans.\n\nThis Token will be deployed, and then used by humans - members of Smart City Community - as an utility token as a prepayment for services and Smart House Hardware in SmartCityShop - www.smartcityshop.net .\n\nThis token specify\n1) Initial Finite Supply (upon creation one specifies how much is minted).\n2) In the absence of a token registry: Optional Decimal, Symbol & Name.\n3) Optional approveAndCall() functionality to notify a contract if an approval() has occurred.\n\n.*/\n\ncontract SmartCityCoinTestNet is StandardToken {\n\n    function () public {\n        //if ether is sent to this address, send it back.\n        revert();\n    }\n\n    /* Public variables of the token */\n\n    /*\n    NOTE:\n    We've inlcuded the following variables as OPTIONAL vanities. \n    They in no way influences the core functionality.\n    Some wallets/interfaces might not even bother to look at this information.\n    */\n    string public name;                   //fancy name: eg Simon Bucks\n    uint8 public decimals;                //How many decimals to show. ie. There could 1000 base units with 3 decimals. Meaning 0.980 SBX = 980 base units. It's like comparing 1 wei to 1 ether.\n    string public symbol;                 //An identifier: eg SBX\n    string public version = 'H0.1';       //human 0.1 standard. Just an arbitrary versioning scheme.\n\n    constructor (\n        uint256 _initialAmount,\n        string _tokenName,\n        uint8 _decimalUnits,\n        string _tokenSymbol\n        ) public {\n        balances[msg.sender] = _initialAmount;               // Give the creator all initial tokens\n        totalSupply = _initialAmount;                        // Update total supply\n        name = _tokenName;                                   // Set the name for display purposes\n        decimals = _decimalUnits;                            // Amount of decimals for display purposes\n        symbol = _tokenSymbol;                               // Set the symbol for display purposes\n    }\n\n    /* Approves and then calls the receiving contract */\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public payable returns (bool )  {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n\n        //call the receiveApproval function on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.\n        //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)\n        //it is assumed that when does this that the call *should* succeed, otherwise one would use vanilla approve instead.\n        if(!_spender.call(bytes4(bytes32(keccak256(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { revert(); }\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"a\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600460808190527f48302e310000000000000000000000000000000000000000000000000000000060a090815261003e91600691906100d1565b5034801561004b57600080fd5b5060405161095a38038061095a833981016040908152815160208084015183850151606086015133600090815280855295909520849055600284905590850180519395909491939101916100a4916003918601906100d1565b506004805460ff191660ff841617905580516100c79060059060208401906100d1565b505050505061016c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011257805160ff191683800117855561013f565b8280016001018555821561013f579182015b8281111561013f578251825591602001919060010190610124565b5061014b92915061014f565b5090565b61016991905b8082111561014b5760008155600101610155565b90565b6107df8061017b6000396000f3006080604052600436106100955763ffffffff60e060020a60003504166306fdde0381146100a7578063095ea7b31461013157806318160ddd1461015c57806323b872dd14610183578063313ce567146101a057806354fd4d50146101cb57806370a08231146101e057806395d89b41146101f4578063a9059cbb14610209578063cae9ca5114610220578063dd62ed3e1461027c575b3480156100a157600080fd5b50600080fd5b3480156100b357600080fd5b506100bc610296565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f65781810151838201526020016100de565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610148600160a060020a0360043516602435610324565b604080519115158252519081900360200190f35b34801561016857600080fd5b5061017161038b565b60408051918252519081900360200190f35b610148600160a060020a0360043581169060243516604435610391565b3480156101ac57600080fd5b506101b561047c565b6040805160ff9092168252519081900360200190f35b3480156101d757600080fd5b506100bc610485565b610171600160a060020a03600435166104e0565b34801561020057600080fd5b506100bc6104fb565b610148600160a060020a0360043516602435610556565b604080516020600460443581810135601f8101849004840285018401909552848452610148948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506105ed9650505050505050565b610171600160a060020a0360043581169060243516610788565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561031c5780601f106102f15761010080835404028352916020019161031c565b820191906000526020600020905b8154815290600101906020018083116102ff57829003601f168201915b505050505081565b336000818152600160209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b60025481565b600160a060020a03831660009081526020819052604081205482118015906103dc5750600160a060020a03841660009081526001602090815260408083203384529091529020548211155b80156103e85750600082115b1561047157600160a060020a0380841660008181526020818152604080832080548801905593881680835284832080548890039055600182528483203384528252918490208054879003905583518681529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3506001610475565b5060005b9392505050565b60045460ff1681565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561031c5780601f106102f15761010080835404028352916020019161031c565b600160a060020a031660009081526020819052604090205490565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561031c5780601f106102f15761010080835404028352916020019161031c565b3360009081526020819052604081205482118015906105755750600082115b156105e5573360008181526020818152604080832080548790039055600160a060020a03871680845292819020805487019055805186815290519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001610385565b506000610385565b336000818152600160209081526040808320600160a060020a038816808552908352818420879055815187815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a383600160a060020a031660405180807f72656365697665417070726f76616c28616464726573732c75696e743235362c81526020017f616464726573732c627974657329000000000000000000000000000000000000815250602e019050604051809103902060e060020a9004338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a03168152602001828051906020019080838360005b8381101561072d578181015183820152602001610715565b50505050905090810190601f16801561075a5780820380516001836020036101000a031916815260200191505b509450505050506000604051808303816000875af192505050151561077e57600080fd5b5060019392505050565b600160a060020a039182166000908152600160209081526040808320939094168252919091522054905600a165627a7a72305820259e3f8d05751473a50c84f9144959db5e0d9a9a30d97e77a0efb677419fc57b0029000000000000000000000000000000000000000c9f2c9cd04674edea400000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000014536d61727443697479436f696e546573744e65740000000000000000000000000000000000000000000000000000000000000000000000000000000000000005534343544e000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000c9f2c9cd04674edea400000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000014536d61727443697479436f696e546573744e65740000000000000000000000000000000000000000000000000000000000000000000000000000000000000005534343544e000000000000000000000000000000000000000000000000000000"
}