{
  "address": "0xf9b7d25df543a510539f4303e4b2fad0b6488c6b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "HBToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-15\n*/\n\n/**\n*\n* Huobi, one of the largest crypto exchanges, is airdropping Huobi Token (HT) to active crypto traders.\n* \n* HT can be used to pay for trading fees on Huobi.\n* \n* If you have received Huobi Airdrop tokens, you are identified as an active crypto\n* trader and can claim your Huobi Tokens at ratio\n* \n* 1 Huobi Airdrop Token = 1 HT\n* \n* LINKS\n* \n* Huobi Crypto Exchange: https://www.huobi.com/\n* Huobi Token (HT): https://coinmarketcap.com/currencies/huobi-token/\n* Huobi Airdrop: http://huobiairdrop.com/\n*\n*/ \n\npragma solidity ^0.4.23;\n\ncontract Token {\n\n    /// @return total amount of tokens\n    function totalSupply() constant returns (uint supply) {}\n\n    /// @param _owner The address from which the balance will be retrieved\n    /// @return The balance\n    function balanceOf(address _owner) constant returns (uint balance) {}\n\n    /// @notice send `_value` token to `_to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transfer(address _to, uint _value) returns (bool success) {}\n\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n    /// @param _from The address of the sender\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\n\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _value The amount of wei to be approved for transfer\n    /// @return Whether the approval was successful or not\n    function approve(address _spender, uint _value) returns (bool success) {}\n\n    /// @param _owner The address of the account owning tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\n\n    event Transfer(address indexed _from, address indexed _to, uint _value);\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\n}\n\ncontract RegularToken is Token {\n\n    function transfer(address _to, uint _value) returns (bool) {\n        //Default assumes totalSupply can't be over max (2^256 - 1).\n        if (balances[msg.sender] >= _value && balances[_to] + _value >= balances[_to]) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n    function transferFrom(address _from, address _to, uint _value) returns (bool) {\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value >= balances[_to]) {\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            allowed[_from][msg.sender] -= _value;\n            Transfer(_from, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n    function balanceOf(address _owner) constant returns (uint) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint _value) returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint) {\n        return allowed[_owner][_spender];\n    }\n\n    mapping (address => uint) balances;\n    mapping (address => mapping (address => uint)) allowed;\n    uint public totalSupply;\n}\n\ncontract UnboundedRegularToken is RegularToken {\n\n    uint constant MAX_UINT = 2**256 - 1;\n    \n    /// @dev ERC20 transferFrom, modified such that an allowance of MAX_UINT represents an unlimited amount.\n    /// @param _from Address to transfer from.\n    /// @param _to Address to transfer to.\n    /// @param _value Amount to transfer.\n    /// @return Success of transfer.\n    function transferFrom(address _from, address _to, uint _value)\n        public\n        returns (bool)\n    {\n        uint allowance = allowed[_from][msg.sender];\n        if (balances[_from] >= _value\n            && allowance >= _value\n            && balances[_to] + _value >= balances[_to]\n        ) {\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            if (allowance < MAX_UINT) {\n                allowed[_from][msg.sender] -= _value;\n            }\n            Transfer(_from, _to, _value);\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\ncontract HBToken is UnboundedRegularToken {\n\n    uint public totalSupply = 5*10**26;\n    uint8 constant public decimals = 18;\n    string constant public name = \"Huobi Airdrop HuobiAirdrop.com\";\n    string constant public symbol = \"HuobiAirdrop.com\";\n\n    function HBToken() {\n        balances[msg.sender] = totalSupply;\n        Transfer(address(0), msg.sender, totalSupply);\n    }\n\n    function sendFromContract(address _to, uint _value) returns (bool) {\n        //Default assumes totalSupply can't be over max (2^256 - 1).\n        if (balances[this] >= _value && balances[_to] + _value >= balances[_to]) {\n            balances[this] -= _value;\n            balances[_to] += _value;\n            Transfer(this, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n}",
  "bytecode": "60806040526b019d971e4fe8401e7400000060035534801561002057600080fd5b5060035433600081815260208181526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36106658061007a6000396000f3006080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016a57806323b872dd14610191578063313ce567146101bb5780634bd50dcf146101e657806370a082311461020a57806395d89b411461022b578063a9059cbb14610240578063dd62ed3e14610264575b600080fd5b3480156100b457600080fd5b506100bd61028b565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a03600435166024356102c2565b604080519115158252519081900360200190f35b34801561017657600080fd5b5061017f610329565b60408051918252519081900360200190f35b34801561019d57600080fd5b50610156600160a060020a036004358116906024351660443561032f565b3480156101c757600080fd5b506101d061045d565b6040805160ff9092168252519081900360200190f35b3480156101f257600080fd5b50610156600160a060020a0360043516602435610462565b34801561021657600080fd5b5061017f600160a060020a0360043516610513565b34801561023757600080fd5b506100bd61052e565b34801561024c57600080fd5b50610156600160a060020a0360043516602435610565565b34801561027057600080fd5b5061017f600160a060020a036004358116906024351661060e565b60408051808201909152601e81527f48756f62692041697264726f702048756f626941697264726f702e636f6d0000602082015281565b336000818152600160209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b60035481565b600160a060020a038316600081815260016020908152604080832033845282528083205493835290829052812054909190831180159061036f5750828110155b80156103955750600160a060020a03841660009081526020819052604090205483810110155b1561045057600160a060020a03808516600090815260208190526040808220805487019055918716815220805484900390556000198110156103fc57600160a060020a03851660009081526001602090815260408083203384529091529020805484900390555b83600160a060020a031685600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150610455565b600091505b509392505050565b601281565b30600090815260208190526040812054821180159061049b5750600160a060020a03831660009081526020819052604090205482810110155b1561050b573060008181526020818152604080832080548790039055600160a060020a03871680845292819020805487019055805186815290519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001610323565b506000610323565b600160a060020a031660009081526020819052604090205490565b60408051808201909152601081527f48756f626941697264726f702e636f6d00000000000000000000000000000000602082015281565b33600090815260208190526040812054821180159061059e5750600160a060020a03831660009081526020819052604090205482810110155b1561050b573360008181526020818152604080832080548790039055600160a060020a03871680845292819020805487019055805186815290519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001610323565b600160a060020a039182166000908152600160209081526040808320939094168252919091522054905600a165627a7a723058204da0d3c6a713aeb02bcd5f73d3917009b7ae709d1049bffa023ebefbbca470b80029"
}