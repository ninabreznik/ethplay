{
  "address": "0xd52a7503051deaad31a7a8b49b4685e3058eed91",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BHIToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-10\n*/\n\npragma solidity ^0.4.21;\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract ERC20Basic {\n    uint256 public totalSupply;\n    function balanceOf(address who) public constant returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public constant returns (uint256);\n    function transferFrom(address from, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract BHIToken is ERC20 {\n\n    using SafeMath for uint256;\n\n    address public owner;\n\n    mapping (address => uint256) balances;\n\n    mapping (address => mapping (address => uint256)) allowed;\n\n    string public name = \"BHIToken\";\n    string public constant symbol = \"BHI\";\n    uint public constant decimals = 18;\n    bool public stopped;\n    \n    modifier stoppable {\n        assert(!stopped);\n        _;\n    }\n    \n    uint256 public totalSupply = 1000000000*(10**18);\n\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    //init 10,0000,00000 token\n    constructor() public {\n        owner = msg.sender;\n        balances[msg.sender] = totalSupply;\n    }\n\n    function stop() onlyOwner public {\n        stopped = true;\n    }\n    function start() onlyOwner public {\n        stopped = false;\n    }\n    \n    function transferOwnership(address _newOwner) onlyOwner public {\n        if (_newOwner != address(0)) {\n            owner = _newOwner;\n        }\n    }\n\n    //receive eth\n    function () public payable {\n        address myAddress = this;\n        emit Transfer(msg.sender, myAddress, msg.value);\n     }\n\n    function balanceOf(address _owner) constant public returns (uint256) {\n        return balances[_owner];\n    }\n    \n    function transfer(address _to, uint256 _amount) stoppable  public returns (bool success) {\n        require(_to != address(0));\n        require(_amount <= balances[msg.sender]);\n        \n        balances[msg.sender] = balances[msg.sender].sub(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        emit Transfer(msg.sender, _to, _amount);\n        return true;\n    }\n    \n    function transferFrom(address _from, uint256 _amount) stoppable public returns (bool success) {\n        require(_amount <= balances[_from]);\n        require(_amount <= allowed[_from][msg.sender]);\n        \n        balances[_from] = balances[_from].sub(_amount);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n        balances[msg.sender] = balances[msg.sender].add(_amount);\n        emit Transfer(_from, msg.sender, _amount);\n        return true;\n    }\n    \n    function approve(address _spender, uint256 _value) stoppable public returns (bool success) {\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    //burn token\n    function burn(address _from,uint256 _amount) onlyOwner public returns (bool) {\n        require(_amount <= balances[_from]);\n        balances[_from] = balances[_from].sub(_amount);\n        totalSupply = totalSupply.sub(_amount);\n        emit Transfer(_from, address(0), _amount);\n        return true;\n    }\n    \n    function allowance(address _owner, address _spender)  constant public returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n    \n    //extract eth\n    function withdraw() onlyOwner public {\n        address myAddress = this;\n        uint256 etherBalance = myAddress.balance;\n        owner.transfer(etherBalance);\n    }\n    \n    function kill() onlyOwner public {\n       selfdestruct(msg.sender);\n    }\n    \n\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600860808190527f424849546f6b656e00000000000000000000000000000000000000000000000060a090815261003e9160049190610089565b506b033b2e3c9fd0803ce800000060065534801561005b57600080fd5b5060018054600160a060020a0319163390811790915560065460009182526002602052604090912055610124565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100ca57805160ff19168380011785556100f7565b828001600101855582156100f7579182015b828111156100f75782518255916020019190600101906100dc565b50610103929150610107565b5090565b61012191905b80821115610103576000815560010161010d565b90565b610a10806101336000396000f3006080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301c6adc3811461011b57806306fdde031461015357806307da68f5146101dd578063095ea7b3146101f457806318160ddd14610218578063313ce5671461023f5780633ccfd60b1461025457806341c0e1b51461026957806370a082311461027e57806375f12b211461029f5780638da5cb5b146102b457806395d89b41146102e55780639dc29fac146102fa578063a9059cbb1461031e578063be9a655514610342578063dd62ed3e14610357578063f2fde38b1461037e575b6040805134815290513091829133916000805160206109c5833981519152919081900360200190a350005b34801561012757600080fd5b5061013f600160a060020a036004351660243561039f565b604080519115158252519081900360200190f35b34801561015f57600080fd5b506101686104f4565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a257818101518382015260200161018a565b50505050905090810190601f1680156101cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101e957600080fd5b506101f2610582565b005b34801561020057600080fd5b5061013f600160a060020a03600435166024356105a8565b34801561022457600080fd5b5061022d61065d565b60408051918252519081900360200190f35b34801561024b57600080fd5b5061022d610663565b34801561026057600080fd5b506101f2610668565b34801561027557600080fd5b506101f26106ca565b34801561028a57600080fd5b5061022d600160a060020a03600435166106e4565b3480156102ab57600080fd5b5061013f6106ff565b3480156102c057600080fd5b506102c9610708565b60408051600160a060020a039092168252519081900360200190f35b3480156102f157600080fd5b50610168610717565b34801561030657600080fd5b5061013f600160a060020a036004351660243561074e565b34801561032a57600080fd5b5061013f600160a060020a036004351660243561081d565b34801561034e57600080fd5b506101f26108fc565b34801561036357600080fd5b5061022d600160a060020a036004358116906024351661091f565b34801561038a57600080fd5b506101f2600160a060020a036004351661094a565b60055460009060ff16156103af57fe5b600160a060020a0383166000908152600260205260409020548211156103d457600080fd5b600160a060020a038316600090815260036020908152604080832033845290915290205482111561040457600080fd5b600160a060020a03831660009081526002602052604090205461042d908363ffffffff61099c16565b600160a060020a038416600090815260026020908152604080832093909355600381528282203383529052205461046a908363ffffffff61099c16565b600160a060020a03841660009081526003602090815260408083203384528252808320939093556002905220546104a7908363ffffffff6109ae16565b3360008181526002602090815260409182902093909355805185815290519192600160a060020a038716926000805160206109c58339815191529281900390910190a35060015b92915050565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561057a5780601f1061054f5761010080835404028352916020019161057a565b820191906000526020600020905b81548152906001019060200180831161055d57829003601f168201915b505050505081565b600154600160a060020a0316331461059957600080fd5b6005805460ff19166001179055565b60055460009060ff16156105b857fe5b81158015906105e95750336000908152600360209081526040808320600160a060020a038716845290915290205415155b156105f6575060006104ee565b336000818152600360209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60065481565b601281565b6001546000908190600160a060020a0316331461068457600080fd5b50506001546040513091823191600160a060020a03909116906108fc8315029083906000818181858888f193505050501580156106c5573d6000803e3d6000fd5b505050565b600154600160a060020a031633146106e157600080fd5b33ff5b600160a060020a031660009081526002602052604090205490565b60055460ff1681565b600154600160a060020a031681565b60408051808201909152600381527f4248490000000000000000000000000000000000000000000000000000000000602082015281565b600154600090600160a060020a0316331461076857600080fd5b600160a060020a03831660009081526002602052604090205482111561078d57600080fd5b600160a060020a0383166000908152600260205260409020546107b6908363ffffffff61099c16565b600160a060020a0384166000908152600260205260409020556006546107e2908363ffffffff61099c16565b600655604080518381529051600091600160a060020a038616916000805160206109c58339815191529181900360200190a350600192915050565b60055460009060ff161561082d57fe5b600160a060020a038316151561084257600080fd5b3360009081526002602052604090205482111561085e57600080fd5b3360009081526002602052604090205461087e908363ffffffff61099c16565b3360009081526002602052604080822092909255600160a060020a038516815220546108b0908363ffffffff6109ae16565b600160a060020a0384166000818152600260209081526040918290209390935580518581529051919233926000805160206109c58339815191529281900390910190a350600192915050565b600154600160a060020a0316331461091357600080fd5b6005805460ff19169055565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b600154600160a060020a0316331461096157600080fd5b600160a060020a03811615610999576001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b6000828211156109a857fe5b50900390565b6000828201838110156109bd57fe5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820403231a99ec41a9bef367b0605a0a6c02478f5f8ee930c05e595f19b0a049a100029"
}