{
  "address": "0x27e06500263d6b27a3f8b7be636aabc7adc186be",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "EasyInvestForeverNeverending",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-07\n*/\n\npragma solidity ^0.4.25;\n\n/**\n *\n * Easy Invest FOREVER NEVERENDING Contract\n *  - GAIN VARIABLE INTEREST EVERY 5900 blocks (approx. 24 hours) UP TO 10% PER DAY (dependent on incoming and outgoing ETH) but minimum of 0.05% for longevity.\n *  - ZERO SUM GAME WITH ADDED LINKED DAPPS BRINGING POSITIVE EXPECTATION\n *  - NO FEES are collected by the owner, in fact, there is no owner at all (just look at the code)\n *  - ADDED GAME ELEMENT OF CHOOSING THE BEST TIME TO WITHDRAW TO MAXIMIZE INTEREST (less frequent withdrawals at higher interest rates will return faster)\n *  - ONLY 90ETH balance increase per day above previous high needed for 10% interest so whales will boost the contract to newer heights to receive higher interest.\n *  - NO USA ALLOWED - - NO COMMISSION on your investment (every ether stays in contract's balance)\n *  - For Fairness on high interest days, a maximum of only 10% of total investment can be returned per withdrawal so you should make withdrawals regularly or lose the extra interest.\n * \n * How to use:\n *  1. Send any amount of ether to make an investment\n *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're spending too much on GAS)\n *  OR\n *  2b. Send more ether to reinvest AND get your profit at the same time\n *\n * RECOMMENDED GAS LIMIT: 70000\n * RECOMMENDED GAS PRICE: https://ethgasstation.info/\n *\n * Contract reviewed and approved by pros!\n *\n */\ncontract EasyInvestForeverNeverending {\n    mapping (address => uint256) public invested;   // records amounts invested\n    mapping (address => uint256) public atBlock;    // records blocks at which investments were made\n\tuint256 public previousBalance = 0;             // stores the HIGHEST previous contract balance in steps of 5900 blocks (for current interest calculation)\n\tuint256 public calculatedLow = 0;\t\t\t    // stores the next calculated low after a NEW HIGH is reached, assuming no further investment, based on the calculated interest for the new high and the total investment up until then\n\tuint256 public investedTotal = 0;\t\t\t\t// stores the total invested for the calculation of calculatedLow\n\tuint256 public interestRate = 100;              // stores current interest percentage rate multiplied by 100 - i.e. 1000 is 10% and minimum is 5 or 0.05%\n\tuint256 public nextBlock = block.number + 5900; // next block number to adjust interestRate\n\t\n    // this function called every time anyone sends a transaction to this contract\n    function () external payable {\n\t\tinvestedTotal += msg.value;                 // update total invested amount\n\t\t        \n        if (block.number >= nextBlock) {            // update interestRate, calculatedLow, previousBalance and nextBlock if block.number has increased enough (every 5900 blocks)\n\t\t    uint256 currentBalance= address(this).balance;\n\t\t    if (currentBalance < previousBalance) currentBalance = previousBalance; else calculatedLow = 0; // added code to recalculate low only after a new high is reached\n\t\t\tinterestRate = (currentBalance - previousBalance) / 10e16 + 100;            // 1% interest base percentage increments 1% for every 10ETH balance increase each period\n\t\t\tinterestRate = (interestRate > 1000) ? 1000 : interestRate;  // enforce max of 10% (min is automatically 1% - lower amounts refined later)\n\t\t\tpreviousBalance = currentBalance ;      // if contract has fallen, currentBalance remains at the previous high and balance has to catch up for higher interest\n\t\t\tif (calculatedLow == 0) calculatedLow = currentBalance - (investedTotal * interestRate / 10000); // new high has been reached so new calculatedLow must be determined based on the new interest rate\n\t\t\tuint256 currentGrowth = 0;              // temp variable which stores magnitude of progress towards high from calculatedLow\n\t\t\tcurrentBalance= address(this).balance;  // this needs to be reassigned now for the case where it was assigned the highest balance\n\t\t\tif (currentBalance > calculatedLow) currentGrowth = currentBalance - calculatedLow;\n\t\t\tif (interestRate == 100) interestRate = 100 * currentGrowth / (previousBalance - calculatedLow + 1);  // interest hasn't gone over 1% so calculate the true interest rate and remove possiblity of divide by zero\n\t\t\tinterestRate = (interestRate < 5) ? 5 : interestRate; // enforce minimum interest rate of 0.05%\n\t\t\tnextBlock += 5900 * ((block.number - nextBlock) / 5900 + 1);            // covers rare cases where there have been no transactions for over a day (unlikely)\n\t\t}\n\t\t\n\t\tif (invested[msg.sender] != 0) {            // if sender (aka YOU) is invested more than 0 ether\n            uint256 amount = invested[msg.sender] * interestRate / 10000 * (block.number - atBlock[msg.sender]) / 5900;   // interest amount = (amount invested) * interestRate% * (blocks since last transaction) / 5900\n            amount = (amount > invested[msg.sender] / 10) ? invested[msg.sender] / 10 : amount;  // limit interest to no more than 10% of invested amount per withdrawal\n            msg.sender.transfer(amount);            // send calculated amount of ether directly to sender (aka YOU)\n        }\n\n        atBlock[msg.sender] = block.number;         // record block number of this transaction\n\t\tinvested[msg.sender] += msg.value;          // update invested amount (msg.value) of this transaction\n\t\t\n\t\t\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"calculatedLow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investedTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"invested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"interestRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"atBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"previousBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]",
  "bytecode": "6080604052600060025560006003556000600455606460055561170c430160065534801561002c57600080fd5b5061064f8061003c6000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ca896ad146104505780635e7dc7c11461047b57806366b3f6bf146104a65780637c3a00fd146104fd57806383788fce146105285780638aac136214610553578063b113e7ce146105aa575b600080600034600460008282540192505081905550600654431015156101e4573073ffffffffffffffffffffffffffffffffffffffff163192506002548310156100d15760025492506100da565b60006003819055505b606467016345785d8a000060025485038115156100f357fe5b04016005819055506103e86005541161010e57600554610112565b6103e85b6005819055508260028190555060006003541415610147576127106005546004540281151561013d57fe5b0483036003819055505b600091503073ffffffffffffffffffffffffffffffffffffffff1631925060035483111561017757600354830391505b606460055414156101a157600160035460025403018260640281151561019957fe5b046005819055505b60058054106101b2576005546101b5565b60055b600581905550600161170c60065443038115156101ce57fe5b040161170c026006600082825401925050819055505b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415156103bb5761170c600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205443036127106005546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054028115156102c057fe5b04028115156102cb57fe5b049050600a6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481151561031857fe5b0481116103255780610371565b600a6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481151561036f57fe5b045b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103b9573d6000803e3d6000fd5b505b43600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550505050005b34801561045c57600080fd5b506104656105d5565b6040518082815260200191505060405180910390f35b34801561048757600080fd5b506104906105db565b6040518082815260200191505060405180910390f35b3480156104b257600080fd5b506104e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105e1565b6040518082815260200191505060405180910390f35b34801561050957600080fd5b506105126105f9565b6040518082815260200191505060405180910390f35b34801561053457600080fd5b5061053d6105ff565b6040518082815260200191505060405180910390f35b34801561055f57600080fd5b50610594600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610605565b6040518082815260200191505060405180910390f35b3480156105b657600080fd5b506105bf61061d565b6040518082815260200191505060405180910390f35b60035481565b60045481565b60006020528060005260406000206000915090505481565b60055481565b60065481565b60016020528060005260406000206000915090505481565b600254815600a165627a7a7230582021553ec870910e63a3b1c20cafd59d53c0284ed7865fd0cfb98e499e78b1c2940029"
}