{
  "address": "0xe49214e4c92dc9bcb3b56c1309afe0d626dd730e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SynchroCoin",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-13\n*/\n\npragma solidity ^0.4.23;\n\n// File: node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n// File: node_modules/zeppelin-solidity/contracts/ownership/Claimable.sol\n\n/**\n * @title Claimable\n * @dev Extension for the Ownable contract, where the ownership needs to be claimed.\n * This allows the new owner to accept the transfer.\n */\ncontract Claimable is Ownable {\n  address public pendingOwner;\n\n  /**\n   * @dev Modifier throws if called by any account other than the pendingOwner.\n   */\n  modifier onlyPendingOwner() {\n    require(msg.sender == pendingOwner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to set the pendingOwner address.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    pendingOwner = newOwner;\n  }\n\n  /**\n   * @dev Allows the pendingOwner address to finalize the transfer.\n   */\n  function claimOwnership() onlyPendingOwner public {\n    emit OwnershipTransferred(owner, pendingOwner);\n    owner = pendingOwner;\n    pendingOwner = address(0);\n  }\n}\n\n// File: node_modules/zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n}\n\n// File: node_modules/zeppelin-solidity/contracts/token/ERC20/ERC20.sol\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n// File: node_modules/zeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  function safeTransfer(ERC20Basic token, address to, uint256 value) internal {\n    require(token.transfer(to, value));\n  }\n\n  function safeTransferFrom(\n    ERC20 token,\n    address from,\n    address to,\n    uint256 value\n  )\n    internal\n  {\n    require(token.transferFrom(from, to, value));\n  }\n\n  function safeApprove(ERC20 token, address spender, uint256 value) internal {\n    require(token.approve(spender, value));\n  }\n}\n\n// File: node_modules/zeppelin-solidity/contracts/token/ERC20/TokenTimelock.sol\n\n/**\n * @title TokenTimelock\n * @dev TokenTimelock is a token holder contract that will allow a\n * beneficiary to extract the tokens after a given release time\n */\ncontract TokenTimelock {\n  using SafeERC20 for ERC20Basic;\n\n  // ERC20 basic token contract being held\n  ERC20Basic public token;\n\n  // beneficiary of tokens after they are released\n  address public beneficiary;\n\n  // timestamp when token release is enabled\n  uint256 public releaseTime;\n\n  function TokenTimelock(ERC20Basic _token, address _beneficiary, uint256 _releaseTime) public {\n    // solium-disable-next-line security/no-block-members\n    require(_releaseTime > block.timestamp);\n    token = _token;\n    beneficiary = _beneficiary;\n    releaseTime = _releaseTime;\n  }\n\n  /**\n   * @notice Transfers tokens held by timelock to beneficiary.\n   */\n  function release() public {\n    // solium-disable-next-line security/no-block-members\n    require(block.timestamp >= releaseTime);\n\n    uint256 amount = token.balanceOf(this);\n    require(amount > 0);\n\n    token.safeTransfer(beneficiary, amount);\n  }\n}\n\n// File: node_modules/zeppelin-solidity/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n// File: node_modules/zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n}\n\n// File: node_modules/zeppelin-solidity/contracts/lifecycle/Pausable.sol\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n// File: node_modules/zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n}\n\n// File: contracts/ERC223.sol\n\ncontract ERC223 is ERC20 {\n    function transfer(address to, uint256 value, bytes data) public returns (bool);\n    function transferFrom(address from, address to, uint256 value, bytes data) public returns (bool);\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _value, bytes _data);\n}\n\n// File: contracts/ERC223Receiver.sol\n\n/*\n  * @title Contract that will work with ERC223 tokens.\n  */\n \ncontract ERC223Receiver { \n/*\n * @dev Standard ERC223 function that will handle incoming token transfers.\n *\n * @param _from  Token sender address.\n * @param _value Amount of tokens.\n * @param _data  Transaction metadata.\n */\n    function tokenFallback(address _from, uint _value, bytes _data) public;\n}\n\n// File: contracts/ERC223Token.sol\n\n/**\n * @title ERC223 token implementation.\n * @dev Standard ERC223 implementation with capability of deactivating ERC223 functionalities.\n *      Contracts that are known to support ERC20 tokens can be whitelisted to bypass tokenfallback call.\n */\ncontract ERC223Token is ERC223, StandardToken, Ownable {\n    using SafeMath for uint256;\n\n    // If true will invoke token fallback else it will act as an ERC20 token\n    bool public erc223Activated;\n    // List of contracts which are known to have support for ERC20 tokens.\n    // Needed to maintain compatibility with contracts that support ERC20 tokens but not ERC223 tokens.                      \n    mapping (address => bool) public supportedContracts;\n    // List of contracts which users allowed to bypass tokenFallback.\n    // Needed in case user wants to send tokens to contracts that do not support ERC223 tokens, i.e. multisig wallets.\n    mapping (address => mapping (address => bool)) public userAcknowledgedContracts;\n\n    function setErc223Activated(bool _activated) external onlyOwner {\n        erc223Activated = _activated;\n    }\n\n    function setSupportedContract(address _address, bool _supported) external onlyOwner {\n        supportedContracts[_address] = _supported;\n    }\n\n    function setUserAcknowledgedContract(address _address, bool _acknowledged) external {\n        userAcknowledgedContracts[msg.sender][_address] = _acknowledged;\n    }\n\n    /**\n     * @dev Checks if target address is a contract.\n     * @param _address The address to check.\n     */\n    function isContract(address _address) internal returns (bool) {\n        uint256 codeLength;\n        assembly {\n            // Retrieve the size of the code on target address\n            codeLength := extcodesize(_address)\n        }\n        return codeLength > 0;\n    }\n\n    /**\n     * @dev Calls the tokenFallback function of the token receiver.\n     * @param _from  Token sender address.\n     * @param _to  Token receiver address.\n     * @param _value Amount of tokens.\n     * @param _data  Transaction metadata.\n     */\n    function invokeTokenReceiver(address _from, address _to, uint256 _value, bytes _data) internal {\n        ERC223Receiver receiver = ERC223Receiver(_to);\n        receiver.tokenFallback(_from, _value, _data);\n        emit Transfer(_from, _to, _value, _data);\n    }\n\n    /**\n     * @dev Transfer specified amount of tokens to the specified address.\n     *      Added to maintain ERC20 compatibility.\n     * @param _to Receiver address.\n     * @param _value Amount of tokens to be transferred.\n     */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        bytes memory emptyData;\n        return transfer(_to, _value, emptyData);\n    }\n\n    /**\n     * @dev Transfer specified amount of tokens to the specified address.\n     *      Invokes tokenFallback if the recipient is a contract.\n     *      Transaction to contracts without implementation of tokenFallback will revert.\n     * @param _to Receiver address.\n     * @param _value Amount of tokens to be transferred.\n     * @param _data Transaction metadata.\n     */\n    function transfer(address _to, uint256 _value, bytes _data) public returns (bool) {\n        bool status = super.transfer(_to, _value);\n\n        // Invoke token receiver only when erc223 is activate, not listed on the whitelist and is a contract.\n        if (erc223Activated \n            && isContract(_to)\n            && supportedContracts[_to] == false \n            && userAcknowledgedContracts[msg.sender][_to] == false\n            && status == true) {\n            invokeTokenReceiver(msg.sender, _to, _value, _data);\n        }\n        return status;\n    }\n\n    /**\n     * @dev Transfer specified amount of tokens from one address to another.\n     *      Added to maintain ERC20 compatibility.\n     * @param _from Sender address.\n     * @param _to Receiver address.\n     * @param _value Amount of tokens to be transferred.\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        bytes memory emptyData;\n        return transferFrom(_from, _to, _value, emptyData);\n    }\n\n    /**\n     * @dev Transfer specified amount of tokens from one address to another.\n     *      Invokes tokenFallback if the recipient is a contract.\n     *      Transaction to contracts without implementation of tokenFallback will revert.\n     * @param _from Sender address.\n     * @param _to Receiver address.\n     * @param _value Amount of tokens to be transferred.\n     * @param _data Transaction metadata.\n     */\n    function transferFrom(address _from, address _to, uint256 _value, bytes _data) public returns (bool) {\n        bool status = super.transferFrom(_from, _to, _value);\n\n        if (erc223Activated \n            && isContract(_to)\n            && supportedContracts[_to] == false \n            && userAcknowledgedContracts[msg.sender][_to] == false\n            && status == true) {\n            invokeTokenReceiver(_from, _to, _value, _data);\n        }\n        return status;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        return super.approve(_spender, _value);\n    }\n}\n\n// File: contracts/PausableERC223Token.sol\n\n/**\n * @title ERC223 token implementation.\n * @dev Standard ERC223 implementation with Pausable feature.      \n */\n\ncontract PausableERC223Token is ERC223Token, Pausable {\n\n    function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n        return super.transfer(_to, _value);\n    }\n\n    function transfer(address _to, uint256 _value, bytes _data) public whenNotPaused returns (bool) {\n        return super.transfer(_to, _value, _data);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value, bytes _data) public whenNotPaused returns (bool) {\n        return super.transferFrom(_from, _to, _value, _data);\n    }\n\n    function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n        return super.approve(_spender, _value);\n    }\n}\n\n// File: contracts/SynchroCoin.sol\n\n/* @title SynchroCoin SYC Token\n * @dev New SynchroCoin SYC Token migration from legacy contract.\n */\n\ncontract SynchroCoin is PausableERC223Token, Claimable {\n    string public constant name = \"SynchroCoin\";\n    string public constant symbol = \"SYC\";\n    uint8 public constant decimals = 18;\n    MigrationAgent public migrationAgent;\n\n    function SynchroCoin(address _legacySycAddress, uint256 _timelockReleaseTime) public {        \n        migrationAgent = new MigrationAgent(_legacySycAddress, this, _timelockReleaseTime);\n        migrationAgent.transferOwnership(msg.sender);\n\n        ERC20 legacySycContract = ERC20(_legacySycAddress);\n        totalSupply_ = legacySycContract.totalSupply();\n        balances[migrationAgent] = balances[migrationAgent].add(totalSupply_);\n\n        pause();\n    }\n}\n\n// File: contracts/MigrationAgent.sol\n\n/**\n *  @title MigrationAgent\n *  @dev Contract that keeps track of the migration process from one token contract to another. \n */\ncontract MigrationAgent is Ownable {\n    using SafeMath for uint256;\n\n    ERC20 public legacySycContract;    // Previous Token Contract\n    ERC20 public sycContract;       // New Token Contract to migrate to\n    uint256 public targetSupply;    // Target supply amount to meet\n    uint256 public migratedSupply;  // Total amount of tokens migrated\n\n    mapping (address => bool) public migrated;  // Flags to keep track of addresses already migrated\n\n    uint256 public timelockReleaseTime; // Timelocked token release time\n    TokenTimelock public tokenTimelock; // TokenTimelock for Synchrolife team, advisors and partners\n\n    event Migrate(address indexed holder, uint256 balance);\n\n    function MigrationAgent(address _legacySycAddress, address _sycAddress, uint256 _timelockReleaseTime) public {\n        require(_legacySycAddress != address(0));\n        require(_sycAddress != address(0));\n\n        legacySycContract = ERC20(_legacySycAddress);\n        targetSupply = legacySycContract.totalSupply();\n        timelockReleaseTime = _timelockReleaseTime;\n        sycContract = ERC20(_sycAddress);\n    }\n\n    /**\n     * @dev Create a new timelock to replace the old one.\n     * @param _legacyVaultAddress Address of the vault contract from previous SynchroCoin contract.\n     */\n    function migrateVault(address _legacyVaultAddress) onlyOwner external { \n        require(_legacyVaultAddress != address(0));\n        require(!migrated[_legacyVaultAddress]);\n        require(tokenTimelock == address(0));\n\n        // Lock up the tokens for the team/advisors/partners.\n        migrated[_legacyVaultAddress] = true;        \n        uint256 timelockAmount = legacySycContract.balanceOf(_legacyVaultAddress);\n        tokenTimelock = new TokenTimelock(sycContract, msg.sender, timelockReleaseTime);\n        sycContract.transfer(tokenTimelock, timelockAmount);\n        migratedSupply = migratedSupply.add(timelockAmount);\n        emit Migrate(_legacyVaultAddress, timelockAmount);\n    }\n\n    /**\n     * @dev Copies the balance of given addresses from the legacy contract\n     * @param _tokenHolders Array of addresses to migrate balance from the legacy contract\n     * @return True if operation was completed\n     */\n    function migrateBalances(address[] _tokenHolders) onlyOwner external {\n        for (uint256 i = 0; i < _tokenHolders.length; i++) {\n            migrateBalance(_tokenHolders[i]);\n        }\n    }\n\n    /**\n     * @dev Copies the balance of a given address from the legacy contract\n     * @param _tokenHolder Address to migrate balance from the legacy contract\n     * @return True if balance was copied. False if balance had already been migrated or if address has zero balance in the legacy contract\n     */\n    function migrateBalance(address _tokenHolder) onlyOwner public returns (bool) {\n        if (migrated[_tokenHolder]) {\n            return false;   // Already migrated, therefore do nothing.\n        }\n\n        uint256 balance = legacySycContract.balanceOf(_tokenHolder);\n        if (balance == 0) {\n            return false;   // Has no balance in legacy contract, therefore do nothing.\n        }\n\n        // Copy balance\n        migrated[_tokenHolder] = true;\n        sycContract.transfer(_tokenHolder, balance);\n        migratedSupply = migratedSupply.add(balance);\n        emit Migrate(_tokenHolder, balance);\n        return true;\n    }\n\n    /**\n     * @dev Destructs the contract and sends any remaining ETH/SYC to the owner.\n     */\n    function kill() onlyOwner public {\n        uint256 balance = sycContract.balanceOf(this);\n        sycContract.transfer(owner, balance);\n        selfdestruct(owner);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_acknowledged\",\"type\":\"bool\"}],\"name\":\"setUserAcknowledgedContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc223Activated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_activated\",\"type\":\"bool\"}],\"name\":\"setErc223Activated\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migrationAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userAcknowledgedContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_supported\",\"type\":\"bool\"}],\"name\":\"setSupportedContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_legacySycAddress\",\"type\":\"address\"},{\"name\":\"_timelockReleaseTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040526006805460ff191690553480156200001b57600080fd5b506040516040806200215b83398101604052805160209091015160038054600160a060020a0319163317905560008230836200005662000296565b600160a060020a039384168152919092166020820152604080820192909252905190819003606001906000f08015801562000095573d6000803e3d6000fd5b5060078054600160a060020a031916600160a060020a039283161790819055604080517ff2fde38b0000000000000000000000000000000000000000000000000000000081523360048201529051919092169163f2fde38b91602480830192600092919082900301818387803b1580156200010f57600080fd5b505af115801562000124573d6000803e3d6000fd5b5050505082905080600160a060020a03166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200018357600080fd5b505af115801562000198573d6000803e3d6000fd5b505050506040513d6020811015620001af57600080fd5b50516001819055600754600160a060020a0316600090815260208190526040902054620001ea91640100000000620010086200022182021704565b600754600160a060020a03166000908152602081905260409020556200021864010000000062000235810204565b505050620002a7565b818101828110156200022f57fe5b92915050565b600354600160a060020a031633146200024d57600080fd5b60065460ff16156200025e57600080fd5b6006805460ff191660011790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b604051610e5d80620012fe83390190565b61104780620002b76000396000f3006080604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461014d578063095ea7b3146101d757806318160ddd1461020f5780631ccc150c1461023657806323b872dd1461025e578063313ce567146102885780633664b12d146102b35780633f4ba83a146102c857806340d70664146102dd5780634e71e0c8146102f75780635c975abb1461030c57806370a08231146103215780638328dbcd146103425780638456cb59146103735780638da5cb5b1461038857806395d89b411461039d578063a9059cbb146103b2578063ab67aa58146103d6578063b7ff920e14610445578063be45fd6214610466578063c79b85b1146104cf578063dd62ed3e146104f6578063e30c39781461051d578063f2fde38b14610532578063f559ec1014610553575b600080fd5b34801561015957600080fd5b50610162610579565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019c578181015183820152602001610184565b50505050905090810190601f1680156101c95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101e357600080fd5b506101fb600160a060020a03600435166024356105b0565b604080519115158252519081900360200190f35b34801561021b57600080fd5b506102246105d4565b60408051918252519081900360200190f35b34801561024257600080fd5b5061025c600160a060020a036004351660243515156105da565b005b34801561026a57600080fd5b506101fb600160a060020a0360043581169060243516604435610612565b34801561029457600080fd5b5061029d610638565b6040805160ff9092168252519081900360200190f35b3480156102bf57600080fd5b506101fb61063d565b3480156102d457600080fd5b5061025c61065e565b3480156102e957600080fd5b5061025c60043515156106bb565b34801561030357600080fd5b5061025c610712565b34801561031857600080fd5b506101fb6107be565b34801561032d57600080fd5b50610224600160a060020a03600435166107c7565b34801561034e57600080fd5b506103576107e2565b60408051600160a060020a039092168252519081900360200190f35b34801561037f57600080fd5b5061025c6107f1565b34801561039457600080fd5b50610357610850565b3480156103a957600080fd5b5061016261085f565b3480156103be57600080fd5b506101fb600160a060020a0360043516602435610896565b3480156103e257600080fd5b50604080516020601f6064356004818101359283018490048402850184019095528184526101fb94600160a060020a0381358116956024803590921695604435953695608494019181908401838280828437509497506108b39650505050505050565b34801561045157600080fd5b506101fb600160a060020a03600435166108db565b34801561047257600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101fb948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506108f09650505050505050565b3480156104db57600080fd5b506101fb600160a060020a036004358116906024351661090e565b34801561050257600080fd5b50610224600160a060020a036004358116906024351661092e565b34801561052957600080fd5b50610357610959565b34801561053e57600080fd5b5061025c600160a060020a036004351661096d565b34801561055f57600080fd5b5061025c600160a060020a036004351660243515156109b9565b60408051808201909152600b81527f53796e6368726f436f696e000000000000000000000000000000000000000000602082015281565b60065460009060ff16156105c357600080fd5b6105cd83836109fb565b9392505050565b60015490565b336000908152600560209081526040808320600160a060020a0395909516835293905291909120805460ff1916911515919091179055565b60065460009060ff161561062557600080fd5b610630848484610a07565b949350505050565b601281565b60035474010000000000000000000000000000000000000000900460ff1681565b600354600160a060020a0316331461067557600080fd5b60065460ff16151561068657600080fd5b6006805460ff191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600354600160a060020a031633146106d257600080fd5b60038054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b6006546101009004600160a060020a0316331461072e57600080fd5b600654600354604051610100909204600160a060020a03908116929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600680546003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0361010084041617905574ffffffffffffffffffffffffffffffffffffffff0019169055565b60065460ff1681565b600160a060020a031660009081526020819052604090205490565b600754600160a060020a031681565b600354600160a060020a0316331461080857600080fd5b60065460ff161561081857600080fd5b6006805460ff191660011790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600354600160a060020a031681565b60408051808201909152600381527f5359430000000000000000000000000000000000000000000000000000000000602082015281565b60065460009060ff16156108a957600080fd5b6105cd8383610a17565b60065460009060ff16156108c657600080fd5b6108d285858585610a26565b95945050505050565b60046020526000908152604090205460ff1681565b60065460009060ff161561090357600080fd5b610630848484610ad9565b600560209081526000928352604080842090915290825290205460ff1681565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6006546101009004600160a060020a031681565b600354600160a060020a0316331461098457600080fd5b60068054600160a060020a039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b600354600160a060020a031633146109d057600080fd5b600160a060020a03919091166000908152600460205260409020805460ff1916911515919091179055565b60006105cd8383610b8b565b600060606108d2858585846108b3565b600060606106308484836108f0565b600080610a34868686610bf1565b60035490915074010000000000000000000000000000000000000000900460ff168015610a655750610a6585610d68565b8015610a8a5750600160a060020a03851660009081526004602052604090205460ff16155b8015610aba5750336000908152600560209081526040808320600160a060020a038916845290915290205460ff16155b8015610ac857506001811515145b156108d2576108d286868686610d70565b600080610ae68585610f15565b60035490915074010000000000000000000000000000000000000000900460ff168015610b175750610b1785610d68565b8015610b3c5750600160a060020a03851660009081526004602052604090205460ff16155b8015610b6c5750336000908152600560209081526040808320600160a060020a038916845290915290205460ff16155b8015610b7a57506001811515145b156106305761063033868686610d70565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6000600160a060020a0383161515610c0857600080fd5b600160a060020a038416600090815260208190526040902054821115610c2d57600080fd5b600160a060020a0384166000908152600260209081526040808320338452909152902054821115610c5d57600080fd5b600160a060020a038416600090815260208190526040902054610c86908363ffffffff610ff616565b600160a060020a038086166000908152602081905260408082209390935590851681522054610cbb908363ffffffff61100816565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610cfd908363ffffffff610ff616565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b6000903b1190565b6040517fc0ee0b8a000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483019081526024830185905260606044840190815284516064850152845187949385169363c0ee0b8a938a938993899360840190602085019080838360005b83811015610dfa578181015183820152602001610de2565b50505050905090810190601f168015610e275780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610e4857600080fd5b505af1158015610e5c573d6000803e3d6000fd5b505050508284600160a060020a031686600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16856040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ed4578181015183820152602001610ebc565b50505050905090810190601f168015610f015780820380516001836020036101000a031916815260200191505b509250505060405180910390a45050505050565b6000600160a060020a0383161515610f2c57600080fd5b33600090815260208190526040902054821115610f4857600080fd5b33600090815260208190526040902054610f68908363ffffffff610ff616565b3360009081526020819052604080822092909255600160a060020a03851681522054610f9a908363ffffffff61100816565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60008282111561100257fe5b50900390565b8181018281101561101557fe5b929150505600a165627a7a72305820721337ffa28eaf9f6759ad715e2c077ebf0ea780e964a1d1f031abd316c362830029608060405234801561001057600080fd5b50604051606080610e5d83398101604090815281516020830151919092015160008054600160a060020a03191633179055600160a060020a038316151561005657600080fd5b600160a060020a038216151561006b57600080fd5b60018054600160a060020a031916600160a060020a038581169190911791829055604080517f18160ddd000000000000000000000000000000000000000000000000000000008152905192909116916318160ddd916004808201926020929091908290030181600087803b1580156100e257600080fd5b505af11580156100f6573d6000803e3d6000fd5b505050506040513d602081101561010c57600080fd5b505160035560065560028054600160a060020a031916600160a060020a039290921691909117905550610d19806101446000396000f3006080604052600436106100c45763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416632712b53981146100c95780632988e36b146100ec5780632a1eafd91461012157806333c45fa31461014857806341c0e1b51461015d5780634b92738e146101725780634ba0a5ee14610192578063509941dd146101b35780638da5cb5b146101e4578063bba52516146101f9578063c942abcf1461020e578063db27cdeb14610223578063f2fde38b14610238575b600080fd5b3480156100d557600080fd5b506100ea600160a060020a0360043516610259565b005b3480156100f857600080fd5b5061010d600160a060020a03600435166104df565b604080519115158252519081900360200190f35b34801561012d57600080fd5b506101366106db565b60408051918252519081900360200190f35b34801561015457600080fd5b506101366106e1565b34801561016957600080fd5b506100ea6106e7565b34801561017e57600080fd5b506100ea6004803560248101910135610840565b34801561019e57600080fd5b5061010d600160a060020a0360043516610896565b3480156101bf57600080fd5b506101c86108ab565b60408051600160a060020a039092168252519081900360200190f35b3480156101f057600080fd5b506101c86108ba565b34801561020557600080fd5b506101c86108c9565b34801561021a57600080fd5b506101c86108d8565b34801561022f57600080fd5b506101366108e7565b34801561024457600080fd5b506100ea600160a060020a03600435166108ed565b60008054600160a060020a0316331461027157600080fd5b600160a060020a038216151561028657600080fd5b600160a060020a03821660009081526005602052604090205460ff16156102ac57600080fd5b600754600160a060020a0316156102c257600080fd5b600160a060020a038083166000818152600560209081526040808320805460ff191660019081179091555481517f70a08231000000000000000000000000000000000000000000000000000000008152600481019590955290519416936370a0823193602480820194918390030190829087803b15801561034257600080fd5b505af1158015610356573d6000803e3d6000fd5b505050506040513d602081101561036c57600080fd5b5051600254600654919250600160a060020a031690339061038b610994565b600160a060020a039384168152919092166020820152604080820192909252905190819003606001906000f0801580156103c9573d6000803e3d6000fd5b506007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039283161790819055600254604080517fa9059cbb0000000000000000000000000000000000000000000000000000000081529284166004840152602483018590525192169163a9059cbb916044808201926020929091908290030181600087803b15801561045a57600080fd5b505af115801561046e573d6000803e3d6000fd5b505050506040513d602081101561048457600080fd5b5050600454610499908263ffffffff61098116565b600455604080518281529051600160a060020a038416917fa59785389b00cbd19745afbe8d59b28e3161395c6b1e3525861a2b0dede0b90d919081900360200190a25050565b600080548190600160a060020a031633146104f957600080fd5b600160a060020a03831660009081526005602052604090205460ff161561052357600091506106d5565b600154604080517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152915191909216916370a082319160248083019260209291908290030181600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505050506040513d60208110156105b557600080fd5b505190508015156105c957600091506106d5565b600160a060020a038084166000818152600560209081526040808320805460ff1916600117905560025481517fa9059cbb000000000000000000000000000000000000000000000000000000008152600481019590955260248501879052905194169363a9059cbb93604480820194918390030190829087803b15801561064f57600080fd5b505af1158015610663573d6000803e3d6000fd5b505050506040513d602081101561067957600080fd5b505060045461068e908263ffffffff61098116565b600455604080518281529051600160a060020a038516917fa59785389b00cbd19745afbe8d59b28e3161395c6b1e3525861a2b0dede0b90d919081900360200190a2600191505b50919050565b60035481565b60065481565b60008054600160a060020a031633146106ff57600080fd5b600254604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a03909216916370a08231916024808201926020929091908290030181600087803b15801561076557600080fd5b505af1158015610779573d6000803e3d6000fd5b505050506040513d602081101561078f57600080fd5b505160025460008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03928316600482015260248101869052905194955092169263a9059cbb926044808201936020939283900390910190829087803b15801561080657600080fd5b505af115801561081a573d6000803e3d6000fd5b505050506040513d602081101561083057600080fd5b5050600054600160a060020a0316ff5b60008054600160a060020a0316331461085857600080fd5b5060005b818110156108915761088883838381811061087357fe5b90506020020135600160a060020a03166104df565b5060010161085c565b505050565b60056020526000908152604090205460ff1681565b600254600160a060020a031681565b600054600160a060020a031681565b600754600160a060020a031681565b600154600160a060020a031681565b60045481565b600054600160a060020a0316331461090457600080fd5b600160a060020a038116151561091957600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b8181018281101561098e57fe5b92915050565b604051610349806109a5833901905600608060405234801561001057600080fd5b5060405160608061034983398101604090815281516020830151919092015142811161003b57600080fd5b60008054600160a060020a03948516600160a060020a03199182161790915560018054939094169216919091179091556002556102cc8061007d6000396000f3006080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166338af3eed811461006657806386d1a69f14610097578063b91d4001146100ae578063fc0c546a146100d5575b600080fd5b34801561007257600080fd5b5061007b6100ea565b60408051600160a060020a039092168252519081900360200190f35b3480156100a357600080fd5b506100ac6100f9565b005b3480156100ba57600080fd5b506100c36101d3565b60408051918252519081900360200190f35b3480156100e157600080fd5b5061007b6101d9565b600154600160a060020a031681565b60025460009042101561010b57600080fd5b60008054604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a03909216926370a08231926024808401936020939083900390910190829087803b15801561017257600080fd5b505af1158015610186573d6000803e3d6000fd5b505050506040513d602081101561019c57600080fd5b50519050600081116101ad57600080fd5b6001546000546101d091600160a060020a0391821691168363ffffffff6101e816565b50565b60025481565b600054600160a060020a031681565b82600160a060020a031663a9059cbb83836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561026457600080fd5b505af1158015610278573d6000803e3d6000fd5b505050506040513d602081101561028e57600080fd5b5051151561029b57600080fd5b5050505600a165627a7a72305820c618d30a9d675730f193f5f78b309ddda1b8316704354690b65299e35f12fd910029a165627a7a72305820b7c09735f1add7843154b6cf3e95d790be8e4cac31f2fec14566c89854706b760029000000000000000000000000f149230261f14f75c78206b7358e0cc391d85c98000000000000000000000000000000000000000000000000000000005bcb42f0",
  "constructorArguments": "000000000000000000000000f149230261f14f75c78206b7358e0cc391d85c98000000000000000000000000000000000000000000000000000000005bcb42f0"
}