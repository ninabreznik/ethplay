{
  "address": "0x7176fa45cd326d122b33d97d67a8b55d747411e8",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "USHCToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-08\n*/\n\npragma solidity ^0.4.24;\n\nlibrary SafeMath {\n\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\n      if (_a == 0) {\n          return 0;\n        }\n      uint256 c = _a * _b;\n      assert(c / _a == _b);\n      return c;\n  }\n\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n      require(_b > 0);\n      uint256 c = _a / _b;\n      return c;\n  }\n\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n      assert(_b <= _a);\n      uint256 c = _a - _b;\n      return c;\n  }\n\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256) {\n      uint256 c = _a + _b;\n      assert(c >= _a);\n      return c;\n  }\n}\n\ncontract ERC20 {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address _who) public view returns (uint256);\n  function allowance(address _owner, address _spender) public view returns (uint256);\n  function transfer(address _to, uint256 _value) public returns (bool);\n  function approve(address _spender, uint256 _value) public returns (bool);\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract StandardToken is ERC20 {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n  mapping (address => mapping (address => uint256)) internal allowed;\n  uint256 totalSupply_;\n\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_value <= balances[msg.sender]);\n    require(_to != address(0));\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n}\n\ncontract USHCToken is StandardToken{\n    using SafeMath for uint256;\n    \n    string public name=\"USHCToken\";\n    string public symbol=\"USHC\";\n    uint256 public decimals=18;\n    address owner;\n    \n    event Burn(uint256 amount);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    constructor(uint256 initialSupply) public {\n        totalSupply_ = initialSupply * (10 ** decimals);\n        balances[msg.sender]=totalSupply_;\n        owner=msg.sender;\n    }\n    \n    function burn(uint256 _amount) onlyOwner public returns (bool) {\n        require(0 < _amount && _amount <= balances[msg.sender]);\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\n        totalSupply_ = totalSupply_.sub(_amount);\n        emit Burn(_amount);\n        return true;\n    }\n    \n    function transferOwnership(address newOwner) onlyOwner public {\n        _transferOwnership(newOwner);\n    }\n    \n    function _transferOwnership(address newOwner) internal {\n        owner = newOwner;\n    }\n}",
  "bytecode": "60c0604052600960808190527f55534843546f6b656e000000000000000000000000000000000000000000000060a090815261003e91600391906100dc565b506040805180820190915260048082527f5553484300000000000000000000000000000000000000000000000000000000602090920191825261008191816100dc565b50601260055534801561009357600080fd5b5060405160208061092c8339810160409081529051600554600a0a0260028190553360008181526020819052929092205560068054600160a060020a0319169091179055610177565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011d57805160ff191683800117855561014a565b8280016001018555821561014a579182015b8281111561014a57825182559160200191906001019061012f565b5061015692915061015a565b5090565b61017491905b808211156101565760008155600101610160565b90565b6107a6806101866000396000f3006080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b3578063095ea7b31461013d57806318160ddd1461017557806323b872dd1461019c578063313ce567146101c657806342966c68146101db57806370a08231146101f357806395d89b4114610214578063a9059cbb14610229578063dd62ed3e1461024d578063f2fde38b14610274575b600080fd5b3480156100bf57600080fd5b506100c8610297565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101025781810151838201526020016100ea565b50505050905090810190601f16801561012f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014957600080fd5b50610161600160a060020a0360043516602435610325565b604080519115158252519081900360200190f35b34801561018157600080fd5b5061018a61038b565b60408051918252519081900360200190f35b3480156101a857600080fd5b50610161600160a060020a0360043581169060243516604435610391565b3480156101d257600080fd5b5061018a6104b3565b3480156101e757600080fd5b506101616004356104b9565b3480156101ff57600080fd5b5061018a600160a060020a036004351661057e565b34801561022057600080fd5b506100c8610599565b34801561023557600080fd5b50610161600160a060020a03600435166024356105f4565b34801561025957600080fd5b5061018a600160a060020a03600435811690602435166106d3565b34801561028057600080fd5b50610295600160a060020a03600435166106fe565b005b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561031d5780601f106102f25761010080835404028352916020019161031d565b820191906000526020600020905b81548152906001019060200180831161030057829003601f168201915b505050505081565b336000818152600160209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60025490565b6000600160a060020a03831615156103a857600080fd5b600160a060020a0384166000908152602081905260409020546103d1908363ffffffff61072116565b600160a060020a038086166000908152602081905260408082209390935590851681522054610406908363ffffffff61073516565b600160a060020a03808516600090815260208181526040808320949094559187168152600182528281203382529091522054610448908363ffffffff61072116565b600160a060020a03808616600081815260016020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60055481565b600654600090600160a060020a031633146104d357600080fd5b8160001080156104f25750336000908152602081905260409020548211155b15156104fd57600080fd5b3360009081526020819052604090205461051d908363ffffffff61072116565b33600090815260208190526040902055600254610540908363ffffffff61072116565b6002556040805183815290517fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb9181900360200190a1506001919050565b600160a060020a031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561031d5780601f106102f25761010080835404028352916020019161031d565b3360009081526020819052604081205482111561061057600080fd5b600160a060020a038316151561062557600080fd5b33600090815260208190526040902054610645908363ffffffff61072116565b3360009081526020819052604080822092909255600160a060020a03851681522054610677908363ffffffff61073516565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600654600160a060020a0316331461071557600080fd5b61071e8161074b565b50565b6000808383111561072e57fe5b5050900390565b60008282018381101561074457fe5b9392505050565b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820e3142092108de4bfdd02ee625b51645af8c1d3d8cdc7f52f220d8004c9b2b0cf00290000000000000000000000000000000000000000000000000000000007735940",
  "constructorArguments": "0000000000000000000000000000000000000000000000000000000007735940"
}