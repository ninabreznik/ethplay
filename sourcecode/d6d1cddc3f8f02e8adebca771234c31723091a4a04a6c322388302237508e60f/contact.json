{
  "address": "0x9f00f10e226ec430e888d6311e3f65e62093a9ac",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BATSafe",
  "compilerVersion": "v0.4.10+commit.f0d539ae",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-12-13\n*/\n\npragma solidity ^0.4.10;\n\ncontract Token {\n    uint256 public totalSupply;\n    function balanceOf(address _owner) constant returns (uint256 balance);\n    function transfer(address _to, uint256 _value) returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n    function approve(address _spender, uint256 _value) returns (bool success);\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n\n/*  ERC 20 token */\ncontract StandardToken is Token {\n\n    function transfer(address _to, uint256 _value) returns (bool success) {\n      if (balances[msg.sender] >= _value && _value > 0) {\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        Transfer(msg.sender, _to, _value);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\n        balances[_to] += _value;\n        balances[_from] -= _value;\n        allowed[_from][msg.sender] -= _value;\n        Transfer(_from, _to, _value);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n}\n\n\n// requires 133,650,000 BAT deposited here\ncontract BATSafe {\n  mapping (address => uint256) allocations;\n  uint256 public unlockDate;\n  address public BAT;\n  uint256 public constant exponent = 10**18;\n\n  function BATSafe(address _BAT) {\n    BAT = _BAT;\n    unlockDate = now + 6 * 30 days;\n    allocations[0xc504E7BF907fccc389d08A1C302d03B7baB4E5DC] = 2000000;\n    allocations[0x2Cb6882D101d300694918e93F18b52327AA95302] = 2000000;\n  }\n\n  function unlock() external {\n    if(now < unlockDate) throw;\n    uint256 entitled = allocations[msg.sender];\n    allocations[msg.sender] = 0;\n    if(!StandardToken(BAT).transfer(msg.sender, entitled * exponent)) throw;\n  }\n\n}",
  "bytecode": "6060604052341561000c57fe5b60405160208061029683398101604052515b60028054600160a060020a031916600160a060020a0383161790554262ed4e000160015560006020819052621e84807fc2c02d23dd9242fede9fdd10eba24d5cb5da689b78371b098115e191abefff2d819055732cb6882d101d300694918e93f18b52327aa953029091527f71a1c3029eb6fd9f76496fdceec6cbef8809f5e9ad03dc9282b520fb273ef37c555b505b6101d9806100bd6000396000f300606060405263ffffffff60e060020a60003504166352f6ee5881146100425780635b7ab8911461006457806369ac572114610090578063a69df4b5146100b2575bfe5b341561004a57fe5b6100526100c4565b60408051918252519081900360200190f35b341561006c57fe5b6100746100d0565b60408051600160a060020a039092168252519081900360200190f35b341561009857fe5b6100526100df565b60408051918252519081900360200190f35b34156100ba57fe5b6100c26100e5565b005b670de0b6b3a764000081565b600254600160a060020a031681565b60015481565b60006001544210156100f75760006000fd5b50600160a060020a033381166000818152602081815260408083208054908490556002548251840185905282517fa9059cbb0000000000000000000000000000000000000000000000000000000081526004810196909652670de0b6b3a76400008202602487015291519095919091169363a9059cbb9360448083019493928390030190829087803b151561018857fe5b60325a03f1151561019557fe5b505060405151151590506101a95760006000fd5b5b505600a165627a7a7230582090304daf28316bff4ddfb099f1430b927a734bee63526f7e65dd23a1c30b5dfb00290000000000000000000000000d8775f648430679a709e98d2b0cb6250d2887ef",
  "constructorArguments": "0000000000000000000000000d8775f648430679a709e98d2b0cb6250d2887ef"
}