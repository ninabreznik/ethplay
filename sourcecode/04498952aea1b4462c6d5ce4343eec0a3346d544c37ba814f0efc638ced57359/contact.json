{
  "address": "0x3b4ed9e1d31f6dc1fde75f464438f7f3a0b3bde8",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BigerToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-25\n*/\n\npragma solidity ^0.4.21;\n\ncontract Ownable {\n    address public owner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    function Ownable() public {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n}\n/**\n * Math operations with safety checks\n */\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract BigerToken is Ownable {\n   /**\n  * @dev Fix for the ERC20 short address attack.\n   */\n  modifier onlyPayloadSize(uint256 size) {\n    require(size > 0);\n    require(msg.data.length >= size + 4) ;\n    _;\n  }\n  using SafeMath for uint256;\n    \n  string public constant name = \"BigerToken\";\n  string public constant symbol = \"BG\";\n  uint256 public constant decimals = 18;\n  string public version = \"1.0\";\n  uint256 public  totalSupply = 100 * (10**8) * 10**decimals;   // 100*10^8 BG total\n  //address public owner;\n    /* This creates an array with all balances */\n    mapping (address => uint256) public balanceOf;\n\tmapping (address => uint256) public freezeOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n\n    /* This generates a public event on the blockchain that will notify clients */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /* This notifies clients about the amount burnt */\n    event Burn(address indexed from, uint256 value);\n\t\n\t/* This notifies clients about the amount frozen */\n    event Freeze(address indexed from, uint256 value);\n\t\n\t/* This notifies clients about the amount unfrozen */\n    event Unfreeze(address indexed from, uint256 value);\n\n    /* Initializes contract with initial supply tokens to the creator of the contract  constructor() public */\n function BigerToken() public {\n    balanceOf[msg.sender] = totalSupply;\n    owner = msg.sender;\n    emit Transfer(0x0, msg.sender, totalSupply);\n  }\n\n    /* Send coins */\n    function transfer(address _to, uint256 _value) onlyPayloadSize(2 * 32) public returns (bool){\n        require (_to != 0x0);                               // Prevent transfer to 0x0 address. Use burn() instead\n        require(_to != address(this)); //Prevent to contract address\n\t\trequire(0 <= _value); \n        require(_value <= balanceOf[msg.sender]);           // Check if the sender has enough\n        require(balanceOf[_to] <= balanceOf[_to] + _value); // Check for overflows\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);                     // Subtract from the sender\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);                            // Add the same to the recipient\n        emit Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place\n        return true;\n    }\n\n    /* Allow another contract to spend some tokens in your behalf */\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n\t\trequire (0 <= _value ) ; \n        allowance[msg.sender][_spender] = _value;\n        return true;\n    }\n       \n\n    /* A contract attempts to get the coins */\n    function transferFrom(address _from, address _to, uint256 _value) onlyPayloadSize(3 * 32) public returns (bool success) {\n        require (_to != 0x0);             // Prevent transfer to 0x0 address. Use burn() instead\n        require(_to != address(this));        //Prevent to contract address\n\t\trequire( 0 <= _value); \n        require(_value <= balanceOf[_from]);                 // Check if the sender has enough\n        require( balanceOf[_to] <= balanceOf[_to] + _value) ;  // Check for overflows\n        require(_value <= allowance[_from][msg.sender]) ;     // Check allowance\n        balanceOf[_from] = SafeMath.safeSub(balanceOf[_from], _value);                           // Subtract from the sender\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);                             // Add the same to the recipient\n        allowance[_from][msg.sender] = SafeMath.safeSub(allowance[_from][msg.sender], _value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function burn(uint256 _value) onlyOwner public returns (bool success) {\n        require(_value <= balanceOf[msg.sender]);            // Check if the sender has enough\n\t\trequire(0 <= _value); \n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);                      // Subtract from the sender\n        totalSupply = SafeMath.safeSub(totalSupply,_value);                                // Updates totalSupply\n        emit Burn(msg.sender, _value);\n        return true;\n    }\n\t\n\tfunction freeze(uint256 _value) onlyOwner public returns (bool success) {\n        require(_value <= balanceOf[msg.sender]);            // Check if the sender has enough\n\t\trequire(0 <= _value); \n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);                      // Subtract from the sender\n        freezeOf[msg.sender] = SafeMath.safeAdd(freezeOf[msg.sender], _value);                                // Updates totalSupply\n        emit Freeze(msg.sender, _value);\n        return true;\n    }\n\t\n\tfunction unfreeze(uint256 _value) onlyOwner public returns (bool success) {\n        require( _value <= freezeOf[msg.sender]);            // Check if the sender has enough\n\t\trequire(0 <= _value) ; \n        freezeOf[msg.sender] = SafeMath.safeSub(freezeOf[msg.sender], _value);                      // Subtract from the sender\n\t\tbalanceOf[msg.sender] = SafeMath.safeAdd(balanceOf[msg.sender], _value);\n        emit Unfreeze(msg.sender, _value);\n        return true;\n    }\n\t\n\t// can not accept ether\n\tfunction() payable public {\n\t     revert();\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600360808190527f312e30000000000000000000000000000000000000000000000000000000000060a090815261003e91600191906100c7565b506b204fce5e3e2502611000000060025534801561005b57600080fd5b506000805433600160a060020a031991821681178355600254818452600360209081526040808620839055855490941683178555835191825292519193927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3610162565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061010857805160ff1916838001178555610135565b82800160010185558215610135579182015b8281111561013557825182559160200191906001019061011a565b50610141929150610145565b5090565b61015f91905b80821115610141576000815560010161014b565b90565b610b36806101716000396000f3006080604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100ea578063095ea7b31461017457806318160ddd146101ac57806323b872dd146101d3578063313ce567146101fd57806342966c681461021257806354fd4d501461022a5780636623fc461461023f57806370a08231146102575780638da5cb5b1461027857806395d89b41146102a9578063a9059cbb146102be578063cd4217c1146102e2578063d7a78db814610303578063dd62ed3e1461031b578063f2fde38b14610342575b600080fd5b3480156100f657600080fd5b506100ff610365565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610139578181015183820152602001610121565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018057600080fd5b50610198600160a060020a036004351660243561039c565b604080519115158252519081900360200190f35b3480156101b857600080fd5b506101c16103d9565b60408051918252519081900360200190f35b3480156101df57600080fd5b50610198600160a060020a03600435811690602435166044356103df565b34801561020957600080fd5b506101c16105a2565b34801561021e57600080fd5b506101986004356105a7565b34801561023657600080fd5b506100ff610661565b34801561024b57600080fd5b506101986004356106ee565b34801561026357600080fd5b506101c1600160a060020a03600435166107c1565b34801561028457600080fd5b5061028d6107d3565b60408051600160a060020a039092168252519081900360200190f35b3480156102b557600080fd5b506100ff6107e2565b3480156102ca57600080fd5b50610198600160a060020a0360043516602435610819565b3480156102ee57600080fd5b506101c1600160a060020a036004351661094c565b34801561030f57600080fd5b5061019860043561095e565b34801561032757600080fd5b506101c1600160a060020a0360043581169060243516610a31565b34801561034e57600080fd5b50610363600160a060020a0360043516610a4e565b005b60408051808201909152600a81527f4269676572546f6b656e00000000000000000000000000000000000000000000602082015281565b6000818111156103ab57600080fd5b50336000908152600560209081526040808320600160a060020a039590951683529390529190912055600190565b60025481565b6000606060643610156103f157600080fd5b600160a060020a038416151561040657600080fd5b600160a060020a03841630141561041c57600080fd5b600083101561042a57600080fd5b600160a060020a03851660009081526003602052604090205483111561044f57600080fd5b600160a060020a038416600090815260036020526040902054808401101561047657600080fd5b600160a060020a03851660009081526005602090815260408083203384529091529020548311156104a657600080fd5b600160a060020a0385166000908152600360205260409020546104c99084610ae2565b600160a060020a0380871660009081526003602052604080822093909355908616815220546104f89084610af4565b600160a060020a0380861660009081526003602090815260408083209490945591881681526005825282812033825290915220546105369084610ae2565b600160a060020a03808716600081815260056020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001949350505050565b601281565b60008054600160a060020a031633146105bf57600080fd5b336000908152600360205260409020548211156105db57600080fd5b60008210156105e957600080fd5b336000908152600360205260409020546106039083610ae2565b336000908152600360205260409020556002546106209083610ae2565b60025560408051838152905133917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2506001919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106e65780601f106106bb576101008083540402835291602001916106e6565b820191906000526020600020905b8154815290600101906020018083116106c957829003601f168201915b505050505081565b60008054600160a060020a0316331461070657600080fd5b3360009081526004602052604090205482111561072257600080fd5b600082101561073057600080fd5b3360009081526004602052604090205461074a9083610ae2565b336000908152600460209081526040808320939093556003905220546107709083610af4565b33600081815260036020908152604091829020939093558051858152905191927f2cfce4af01bcb9d6cf6c84ee1b7c491100b8695368264146a94d71e10a63083f92918290030190a2506001919050565b60036020526000908152604090205481565b600054600160a060020a031681565b60408051808201909152600281527f4247000000000000000000000000000000000000000000000000000000000000602082015281565b60006040604436101561082b57600080fd5b600160a060020a038416151561084057600080fd5b600160a060020a03841630141561085657600080fd5b600083101561086457600080fd5b3360009081526003602052604090205483111561088057600080fd5b600160a060020a03841660009081526003602052604090205480840110156108a757600080fd5b336000908152600360205260409020546108c19084610ae2565b3360009081526003602052604080822092909255600160a060020a038616815220546108ed9084610af4565b600160a060020a0385166000818152600360209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b60046020526000908152604090205481565b60008054600160a060020a0316331461097657600080fd5b3360009081526003602052604090205482111561099257600080fd5b60008210156109a057600080fd5b336000908152600360205260409020546109ba9083610ae2565b336000908152600360209081526040808320939093556004905220546109e09083610af4565b33600081815260046020908152604091829020939093558051858152905191927ff97a274face0b5517365ad396b1fdba6f68bd3135ef603e44272adba3af5a1e092918290030190a2506001919050565b600560209081526000928352604080842090915290825290205481565b600054600160a060020a03163314610a6557600080fd5b600160a060020a0381161515610a7a57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610aee57fe5b50900390565b600082820183811015610b0357fe5b93925050505600a165627a7a72305820fec3016fa9cb97b5d8911eb5fcf8fe37462150d6289fcfad56660d1a1fa66ed20029"
}