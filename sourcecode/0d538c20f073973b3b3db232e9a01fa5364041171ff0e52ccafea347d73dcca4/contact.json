{
  "address": "0x9a794dc1939f1d78fa48613b89b8f9d0a20da00e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "ABX Token",
  "contractName": "ABXToken",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-01-12\n*/\n\n/* Simple token - simple token for PreICO and ICO\n   Copyright (C) 2017  Sergey Sherkunov <[email protected]>\n   Copyright (C) 2017  OOM.AG <[email protected]>\n\n   This file is part of simple token.\n\n   Token is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */\n\npragma solidity ^0.4.18;\n\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n\n        assert(c >= a);\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        assert(b <= a);\n\n        c = a - b;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a * b;\n\n        assert(c / a == b);\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a / b;\n    }\n\n    function mod(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a % b;\n    }\n\n    function min(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a;\n\n        if(a > b)\n           c = b;\n    }\n}\n\ncontract ABXToken {\n    using SafeMath for uint256;\n\n    address public owner;\n\n    address public minter;\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public decimals;\n\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    event Transfer(address indexed oldTokensHolder,\n                   address indexed newTokensHolder, uint256 tokensNumber);\n\n    //An Attack Vector on Approve/TransferFrom Methods:\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    event Transfer(address indexed tokensSpender,\n                   address indexed oldTokensHolder,\n                   address indexed newTokensHolder, uint256 tokensNumber);\n\n    event Approval(address indexed tokensHolder, address indexed tokensSpender,\n                   uint256 newTokensNumber);\n\n    //An Attack Vector on Approve/TransferFrom Methods:\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    event Approval(address indexed tokensHolder, address indexed tokensSpender,\n                   uint256 oldTokensNumber, uint256 newTokensNumber);\n\n    modifier onlyOwner {\n        require(owner == msg.sender);\n\n        _;\n    }\n\n    //ERC20 Short Address Attack:\n    //https://vessenes.com/the-erc20-short-address-attack-explained\n    //https://blog.golemproject.net/how-to-find-10m-by-just-reading-blockchain-6ae9d39fcd95\n    //https://ericrafaloff.com/analyzing-the-erc20-short-address-attack\n    modifier checkPayloadSize(uint256 size) {\n        require(msg.data.length == size + 4);\n\n        _;\n    }\n\n    modifier onlyNotNullTokenHolder(address tokenHolder) {\n        require(tokenHolder != address(0));\n\n        _;\n    }\n\n    function ABXToken(string _name, string _symbol, uint8 _decimals,\n                      uint256 _totalSupply) public {\n        owner = msg.sender;\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        totalSupply = _totalSupply.mul(10 ** uint256(decimals));\n\n        require(decimals <= 77);\n\n        balanceOf[this] = totalSupply;\n    }\n\n    function setOwner(address _owner) public onlyOwner returns(bool) {\n        owner = _owner;\n\n        return true;\n    }\n\n    function setMinter(address _minter) public onlyOwner returns(bool) {\n        safeApprove(this, minter, 0);\n\n        minter = _minter;\n\n        safeApprove(this, minter, balanceOf[this]);\n\n        return true;\n    }\n\n    //ERC20 Short Address Attack:\n    //https://vessenes.com/the-erc20-short-address-attack-explained\n    //https://blog.golemproject.net/how-to-find-10m-by-just-reading-blockchain-6ae9d39fcd95\n    //https://ericrafaloff.com/analyzing-the-erc20-short-address-attack\n    function transfer(address newTokensHolder, uint256 tokensNumber) public\n                     checkPayloadSize(2 * 32) returns(bool) {\n        transfer(msg.sender, newTokensHolder, tokensNumber);\n\n        return true;\n    }\n\n    //An Attack Vector on Approve/TransferFrom Methods:\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    //\n    //ERC20 Short Address Attack:\n    //https://vessenes.com/the-erc20-short-address-attack-explained\n    //https://blog.golemproject.net/how-to-find-10m-by-just-reading-blockchain-6ae9d39fcd95\n    //https://ericrafaloff.com/analyzing-the-erc20-short-address-attack\n    function transferFrom(address oldTokensHolder, address newTokensHolder,\n                          uint256 tokensNumber) public checkPayloadSize(3 * 32)\n                         returns(bool) {\n        allowance[oldTokensHolder][msg.sender] =\n            allowance[oldTokensHolder][msg.sender].sub(tokensNumber);\n\n        transfer(oldTokensHolder, newTokensHolder, tokensNumber);\n\n        Transfer(msg.sender, oldTokensHolder, newTokensHolder, tokensNumber);\n\n        return true;\n    }\n\n    //ERC20 Short Address Attack:\n    //https://vessenes.com/the-erc20-short-address-attack-explained\n    //https://blog.golemproject.net/how-to-find-10m-by-just-reading-blockchain-6ae9d39fcd95\n    //https://ericrafaloff.com/analyzing-the-erc20-short-address-attack\n    function approve(address tokensSpender, uint256 newTokensNumber) public\n                    checkPayloadSize(2 * 32) returns(bool) {\n        safeApprove(msg.sender, tokensSpender, newTokensNumber);\n\n        return true;\n    }\n\n    //An Attack Vector on Approve/TransferFrom Methods:\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    //\n    //ERC20 Short Address Attack:\n    //https://vessenes.com/the-erc20-short-address-attack-explained\n    //https://blog.golemproject.net/how-to-find-10m-by-just-reading-blockchain-6ae9d39fcd95\n    //https://ericrafaloff.com/analyzing-the-erc20-short-address-attack\n    function approve(address tokensSpender, uint256 oldTokensNumber,\n                     uint256 newTokensNumber) public checkPayloadSize(3 * 32)\n                    returns(bool) {\n        require(allowance[msg.sender][tokensSpender] == oldTokensNumber);\n\n        unsafeApprove(msg.sender, tokensSpender, newTokensNumber);\n\n        Approval(msg.sender, tokensSpender, oldTokensNumber, newTokensNumber);\n\n        return true;\n    }\n\n    function transfer(address oldTokensHolder, address newTokensHolder,\n                      uint256 tokensNumber) private\n                      onlyNotNullTokenHolder(oldTokensHolder) {\n        balanceOf[oldTokensHolder] =\n            balanceOf[oldTokensHolder].sub(tokensNumber);\n\n        balanceOf[newTokensHolder] =\n            balanceOf[newTokensHolder].add(tokensNumber);\n\n        Transfer(oldTokensHolder, newTokensHolder, tokensNumber);\n    }\n\n    //An Attack Vector on Approve/TransferFrom Methods:\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    function unsafeApprove(address tokensHolder, address tokensSpender,\n                           uint256 newTokensNumber) private\n                          onlyNotNullTokenHolder(tokensHolder) {\n        allowance[tokensHolder][tokensSpender] = newTokensNumber;\n\n        Approval(msg.sender, tokensSpender, newTokensNumber);\n    }\n    \n    //An Attack Vector on Approve/TransferFrom Methods:\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    function safeApprove(address tokensHolder, address tokensSpender,\n                         uint256 newTokensNumber) private {\n        require(allowance[tokensHolder][tokensSpender] == 0 ||\n                newTokensNumber == 0);\n\n        unsafeApprove(tokensHolder, tokensSpender, newTokensNumber);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokensSpender\",\"type\":\"address\"},{\"name\":\"newTokensNumber\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oldTokensHolder\",\"type\":\"address\"},{\"name\":\"newTokensHolder\",\"type\":\"address\"},{\"name\":\"tokensNumber\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokensSpender\",\"type\":\"address\"},{\"name\":\"oldTokensNumber\",\"type\":\"uint256\"},{\"name\":\"newTokensNumber\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTokensHolder\",\"type\":\"address\"},{\"name\":\"tokensNumber\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldTokensHolder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newTokensHolder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokensNumber\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokensSpender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"oldTokensHolder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newTokensHolder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokensNumber\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokensHolder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokensSpender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newTokensNumber\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokensHolder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokensSpender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"oldTokensNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newTokensNumber\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b604051610ae4380380610ae4833981016040528080518201919060200180518201919060200180519190602001805160008054600160a060020a03191633600160a060020a0316179055915060029050848051610070929160200190610111565b506003838051610084929160200190610111565b506004805460ff191660ff84811691909117918290556100b691839116600a0a6401000000006100f481026108e61704565b600555600454604d60ff90911611156100ce57600080fd5b5050600554600160a060020a033016600090815260066020526040902055506101ac9050565b81810281838281151561010357fe5b041461010b57fe5b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015257805160ff191683800117855561017f565b8280016001018555821561017f579182015b8281111561017f578251825591602001919060010190610164565b5061018b92915061018f565b5090565b6101a991905b8082111561018b5760008155600101610195565b90565b610929806101bb6000396000f3006060604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d4578063075461721461015e578063095ea7b31461018d57806313af4035146101c357806318160ddd146101e257806323b872dd14610207578063313ce5671461022f578063426a84931461025857806370a082311461027d5780638da5cb5b1461029c57806395d89b41146102af578063a9059cbb146102c2578063dd62ed3e146102e4578063fca3b5aa14610309575b600080fd5b34156100df57600080fd5b6100e7610328565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012357808201518382015260200161010b565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016957600080fd5b6101716103c6565b604051600160a060020a03909116815260200160405180910390f35b341561019857600080fd5b6101af600160a060020a03600435166024356103d5565b604051901515815260200160405180910390f35b34156101ce57600080fd5b6101af600160a060020a03600435166103fb565b34156101ed57600080fd5b6101f5610449565b60405190815260200160405180910390f35b341561021257600080fd5b6101af600160a060020a036004358116906024351660443561044f565b341561023a57600080fd5b610242610525565b60405160ff909116815260200160405180910390f35b341561026357600080fd5b6101af600160a060020a036004351660243560443561052e565b341561028857600080fd5b6101f5600160a060020a03600435166105d4565b34156102a757600080fd5b6101716105e6565b34156102ba57600080fd5b6100e76105f5565b34156102cd57600080fd5b6101af600160a060020a0360043516602435610660565b34156102ef57600080fd5b6101f5600160a060020a036004358116906024351661067c565b341561031457600080fd5b6101af600160a060020a0360043516610699565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b505050505081565b600154600160a060020a031681565b60006040366044146103e657600080fd5b6103f1338585610727565b5060019392505050565b6000805433600160a060020a0390811691161461041757600080fd5b5060008054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff199091161790556001919050565b60055481565b600060603660641461046057600080fd5b600160a060020a0380861660009081526007602090815260408083203390941683529290522054610497908463ffffffff61077216565b600160a060020a03808716600090815260076020908152604080832033909416835292905220556104c9858585610784565b83600160a060020a031685600160a060020a031633600160a060020a03167fd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f8660405190815260200160405180910390a4506001949350505050565b60045460ff1681565b600060603660641461053f57600080fd5b600160a060020a03338116600090815260076020908152604080832093891683529290522054841461057057600080fd5b61057b338685610855565b84600160a060020a031633600160a060020a03167fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7868660405191825260208201526040908101905180910390a3506001949350505050565b60066020526000908152604090205481565b600054600160a060020a031681565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103be5780601f10610393576101008083540402835291602001916103be565b600060403660441461067157600080fd5b6103f1338585610784565b600760209081526000928352604080842090915290825290205481565b6000805433600160a060020a039081169116146106b557600080fd5b6001546106ce903090600160a060020a03166000610727565b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384811691909117918290553080821660009081526006602052604090205461071f9391929190911690610727565b506001919050565b600160a060020a038084166000908152600760209081526040808320938616835292905220541580610757575080155b151561076257600080fd5b61076d838383610855565b505050565b60008282111561077e57fe5b50900390565b82600160a060020a038116151561079a57600080fd5b600160a060020a0384166000908152600660205260409020546107c3908363ffffffff61077216565b600160a060020a0380861660009081526006602052604080822093909355908516815220546107f8908363ffffffff6108d316565b600160a060020a03808516600081815260066020526040908190209390935591908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350505050565b82600160a060020a038116151561086b57600080fd5b600160a060020a038085166000908152600760209081526040808320878516808552925291829020859055913316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350505050565b818101828110156108e057fe5b92915050565b8181028183828115156108f557fe5b04146108e057fe00a165627a7a72305820b344239db350975828399b39cb18076db8bf7a662c64cd47f81451dbdf436cb30029000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000017d7840000000000000000000000000000000000000000000000000000000000000000941425820546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034142580000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000017d7840000000000000000000000000000000000000000000000000000000000000000941425820546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034142580000000000000000000000000000000000000000000000000000000000"
}