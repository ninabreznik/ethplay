{
  "address": "0xf20e484056d9cb18733eaf6f2865257e23f92af1",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Eterbase: Old Token 2",
  "contractName": "xbase",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-01\n*/\n\npragma solidity ^0.5.7;\n\ninterface ERC20 {\n  function balanceOf(address who) external view returns (uint256);\n  function transfer(address to, uint256 value) external returns (bool);\n  function allowance(address owner, address spender) external view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\n  function approve(address spender, uint256 value) external returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ninterface ERC223 {\n    function transfer(address to, uint value, bytes calldata data) external;\n    event Transfer(address indexed from, address indexed to, uint value, bytes indexed data);\n}\n\ncontract ERC223ReceivingContract { \n    function tokenFallback(address _from, uint _value, bytes memory _data) public;\n}\n\n/**\n * @title SafeMath\n * @dev Unsigned math operations with safety checks that revert on error.\n */\nlibrary SafeMath {\n    /**\n     * @dev Multiplies two unsigned integers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Adds two unsigned integers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    /**\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\n\ncontract StandardToken is ERC20, ERC223 {\n  uint256 public totalSupply;\n  \n  using SafeMath for uint;\n    \n    mapping (address => uint256) internal balances;\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n   function transfer(address _to, uint256 _value) public returns (bool) {\n     require(_to != address(0));\n     require(_value <= balances[msg.sender]);\n     balances[msg.sender] = SafeMath.sub(balances[msg.sender], _value);\n     balances[_to] = SafeMath.add(balances[_to], _value);\n     emit Transfer(msg.sender, _to, _value);\n     return true;\n   }\n\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n   }\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n     require(_value <= balances[_from]);\n     require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = SafeMath.sub(balances[_from], _value);\n     balances[_to] = SafeMath.add(balances[_to], _value);\n     allowed[_from][msg.sender] = SafeMath.sub(allowed[_from][msg.sender], _value);\n    emit Transfer(_from, _to, _value);\n     return true;\n   }\n\n   function approve(address _spender, uint256 _value) public returns (bool) {\n     allowed[msg.sender][_spender] = _value;\n     emit Approval(msg.sender, _spender, _value);\n     return true;\n   }\n\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n     return allowed[_owner][_spender];\n   }\n\n   function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n     allowed[msg.sender][_spender] = SafeMath.add(allowed[msg.sender][_spender], _addedValue);\n     emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n     return true;\n   }\n\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n     uint oldValue = allowed[msg.sender][_spender];\n     if (_subtractedValue > oldValue) {\n       allowed[msg.sender][_spender] = 0;\n     } else {\n       allowed[msg.sender][_spender] = SafeMath.sub(oldValue, _subtractedValue);\n    }\n     emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n     return true;\n   }\n   \n  function transfer(address _to, uint _value, bytes memory _data) public {\n    require(_value > 0 );\n    if(isContract(_to)) {\n        ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n        receiver.tokenFallback(msg.sender, _value, _data);\n    }\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value, _data);\n    }\n    \n  function isContract(address _addr) private returns (bool is_contract) {\n      uint length;\n      assembly {\n            //retrieve the size of the code on target address, this needs assembly\n            length := extcodesize(_addr)\n      }\n      return (length>0);\n    }\n}\n\ncontract xbase is StandardToken {\n    string public constant name = \"Eterbase Cash\";\n    string public constant symbol = \"XBASE\";\n    uint8 public constant decimals = 18;\n    uint256 public constant initialSupply = 1000000000 * 10 ** uint256(decimals);\n\n    function xbasecash() public {\n      totalSupply = initialSupply;\n      balances[msg.sender] = initialSupply;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"xbasecash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50610b23806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063661884631161008c578063a9059cbb11610066578063a9059cbb14610286578063be45fd62146102b2578063d73dd6231461036d578063dd62ed3e14610399576100ea565b8063661884631461022c57806370a082311461025857806395d89b411461027e576100ea565b806318160ddd116100c857806318160ddd146101b657806323b872dd146101d0578063313ce56714610206578063378dc3dc14610224576100ea565b806306fdde03146100ef578063072b08511461016c578063095ea7b314610176575b600080fd5b6100f76103c7565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610174610400565b005b6101a26004803603604081101561018c57600080fd5b506001600160a01b038135169060200135610421565b604080519115158252519081900360200190f35b6101be610487565b60408051918252519081900360200190f35b6101a2600480360360608110156101e657600080fd5b506001600160a01b0381358116916020810135909116906040013561048d565b61020e6105f2565b6040805160ff9092168252519081900360200190f35b6101be6105f7565b6101a26004803603604081101561024257600080fd5b506001600160a01b038135169060200135610607565b6101be6004803603602081101561026e57600080fd5b50356001600160a01b03166106f1565b6100f761070c565b6101a26004803603604081101561029c57600080fd5b506001600160a01b038135169060200135610730565b610174600480360360608110156102c857600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156102f857600080fd5b82018360208201111561030a57600080fd5b8035906020019184600183028401116401000000008311171561032c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610805945050505050565b6101a26004803603604081101561038357600080fd5b506001600160a01b038135169060200135610a05565b6101be600480360360408110156103af57600080fd5b506001600160a01b0381358116916020013516610a98565b6040518060400160405280600d81526020017f457465726261736520436173680000000000000000000000000000000000000081525081565b6b033b2e3c9fd0803ce8000000600081815533815260016020526040902055565b3360008181526002602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60005481565b60006001600160a01b0383166104a257600080fd5b6001600160a01b0384166000908152600160205260409020548211156104c757600080fd5b6001600160a01b03841660009081526002602090815260408083203384529091529020548211156104f757600080fd5b6001600160a01b03841660009081526001602052604090205461051a9083610ac3565b6001600160a01b0380861660009081526001602052604080822093909355908516815220546105499083610ad8565b6001600160a01b0380851660009081526001602090815260408083209490945591871681526002825282812033825290915220546105879083610ac3565b6001600160a01b03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b601281565b6b033b2e3c9fd0803ce800000081565b3360009081526002602090815260408083206001600160a01b03861684529091528120548083111561065c573360009081526002602090815260408083206001600160a01b038816845290915281205561068b565b6106668184610ac3565b3360009081526002602090815260408083206001600160a01b03891684529091529020555b3360008181526002602090815260408083206001600160a01b0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6001600160a01b031660009081526001602052604090205490565b604051806040016040528060058152602001600160d81b6458424153450281525081565b60006001600160a01b03831661074557600080fd5b3360009081526001602052604090205482111561076157600080fd5b3360009081526001602052604090205461077b9083610ac3565b33600090815260016020526040808220929092556001600160a01b038516815220546107a79083610ad8565b6001600160a01b0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b6000821161081257600080fd5b61081b83610af1565b156108f957604051600160e11b63607705c502815233600482018181526024830185905260606044840190815284516064850152845187946001600160a01b0386169463c0ee0b8a9490938993899360840190602085019080838360005b83811015610891578181015183820152602001610879565b50505050905090810190601f1680156108be5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156108df57600080fd5b505af11580156108f3573d6000803e3d6000fd5b50505050505b33600090815260016020526040902054610919908363ffffffff610ac316565b33600090815260016020526040808220929092556001600160a01b0385168152205461094b908363ffffffff610ad816565b6001600160a01b0384166000908152600160209081526040918290209290925551825183928291908401908083835b602083106109995780518252601f19909201916020918201910161097a565b51815160209384036101000a60001901801990921691161790526040805192909401829003822088835293519395506001600160a01b038916945033937fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c169350918290030190a4505050565b3360009081526002602090815260408083206001600160a01b0386168452909152812054610a339083610ad8565b3360008181526002602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b600082821115610ad257600080fd5b50900390565b600082820183811015610aea57600080fd5b9392505050565b3b15159056fea165627a7a7230582087d0d8bab4ee3f0688b621888967e62462a486764daa0778033b0a1f275fc6af0029"
}