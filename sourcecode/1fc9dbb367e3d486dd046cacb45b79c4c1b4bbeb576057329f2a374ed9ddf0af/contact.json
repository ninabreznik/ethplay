{
  "address": "0x66208d03526fc7435caa36fc4fe698c9c02a4aed",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ManualToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-18\n*/\n\npragma solidity ^0.4.24;\n\ncontract Manager {\n    address public owner;\n    address public newOwner;\n\n    address public manager;\n    address public newManager;\n\n    event TransferOwnership(address oldaddr, address newaddr);\n    event TransferManager(address oldaddr, address newaddr);\n\n    modifier onlyOwner() {require(msg.sender == owner);\n        _;}\n    modifier onlyAdmin() {require(msg.sender == owner || msg.sender == manager);\n        _;}\n\n\n    constructor() public {\n        owner = msg.sender;\n        manager = msg.sender;\n    }\n\n    function transferOwnership(address _newOwner) onlyOwner public {\n        newOwner = _newOwner;\n    }\n\n    function transferManager(address _newManager) onlyAdmin public {\n        newManager = _newManager;\n    }\n\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        address oldaddr = owner;\n        owner = newOwner;\n        newOwner = address(0);\n        emit TransferOwnership(oldaddr, owner);\n    }\n\n    function acceptManager() public {\n        require(msg.sender == newManager);\n        address oldaddr = manager;\n        manager = newManager;\n        newManager = address(0);\n        emit TransferManager(oldaddr, manager);\n    }\n}\n\n\nlibrary SafeMath {\n\n    function mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        if (_a == 0) {\n            return 0;\n        }\n        uint256 c = _a * _b;\n        require(c / _a == _b);\n\n        return c;\n    }\n\n    function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        require(_b > 0);\n        uint256 c = _a / _b;\n\n        return c;\n    }\n\n    function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        require(_b <= _a);\n        uint256 c = _a - _b;\n\n        return c;\n    }\n\n    function add(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        uint256 c = _a + _b;\n        require(c >= _a);\n\n        return c;\n    }\n\n    function mod(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        require(_b != 0);\n        return _a % _b;\n    }\n}\n\n// ----------------------------------------------------------------------------\n// ERC Token Standard #20 Interface\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n// ----------------------------------------------------------------------------\ncontract ERC20Interface {\n    function totalSupply() public view returns (uint256);\n\n    function balanceOf(address _owner) public view returns (uint256 balance);\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\n\n    function transfer(address _to, uint256 _value) public returns (bool success);\n\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success);\n\n    function approve(address _spender, uint256 _value) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\n\ncontract ReentrancyGuard {\n    uint256 private guardCounter = 1;\n\n    modifier noReentrant() {\n        guardCounter += 1;\n        uint256 localCounter = guardCounter;\n        _;\n        require(localCounter == guardCounter);\n    }\n}\n\n\ninterface tokenRecipient {\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external;\n}\n\n\ncontract ERC20Base is ERC20Interface, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    string public name;\n    string public symbol;\n    uint8 public decimals = 18;\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    constructor() public {}\n\n    function() payable public {\n        revert();\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return totalSupply;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balanceOf[_owner];\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowance[_owner][_spender];\n    }\n\n    function _transfer(address _from, address _to, uint256 _value) internal returns (bool success) {\n        require(_to != 0x0);\n        require(balanceOf[_from] >= _value);\n        if (balanceOf[_to].add(_value) <= balanceOf[_to]) {\n            revert();\n        }\n\n        uint256 previousBalances = balanceOf[_from].add(balanceOf[_to]);\n        balanceOf[_from] = balanceOf[_from].sub(_value);\n        balanceOf[_to] = balanceOf[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n        assert(balanceOf[_from].add(balanceOf[_to]) == previousBalances);\n\n        return true;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        return _transfer(msg.sender, _to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\n        return _transfer(_from, _to, _value);\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function increaseApproval(address _spender, uint256 _addedValue) public returns (bool) {\n        allowance[msg.sender][_spender] = (\n        allowance[msg.sender][_spender].add(_addedValue));\n        emit Approval(msg.sender, _spender, allowance[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval(address _spender, uint256 _subtractedValue) public returns (bool) {\n        uint256 oldValue = allowance[msg.sender][_spender];\n        if (_subtractedValue >= oldValue) {\n            allowance[msg.sender][_spender] = 0;\n        } else {\n            allowance[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowance[msg.sender][_spender]);\n        return true;\n    }\n\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) noReentrant public returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n}\n\ncontract ManualToken is Manager, ERC20Base {\n    bool public isTokenLocked;\n    bool public isUseFreeze;\n\n    struct Frozen {\n        uint256 amount;\n    }\n\n    mapping(address => Frozen) public frozenAccount;\n\n    event FrozenFunds(address indexed target, uint256 freezeAmount);\n\n    constructor()\n    ERC20Base()\n    public\n    {\n        name = \"AllPet\";\n        symbol = \"PET\";\n        totalSupply = 5000000000 * 1 ether;\n        isUseFreeze = true;\n        isTokenLocked = false;\n        balanceOf[msg.sender] = totalSupply;\n        emit Transfer(address(0), msg.sender, totalSupply);\n    }\n\n    modifier tokenLock() {\n        require(isTokenLocked == false);\n        _;\n    }\n\n    function setLockToken(bool _lock) onlyOwner public {\n        isTokenLocked = _lock;\n    }\n\n    function setUseFreeze(bool _useOrNot) onlyAdmin public {\n        isUseFreeze = _useOrNot;\n    }\n\n    function freezeAmount(address target, uint256 amountFreeze) onlyAdmin public {\n        frozenAccount[target].amount = amountFreeze;\n        emit FrozenFunds(target, amountFreeze);\n    }\n\n    function isFrozen(address target) public view returns (uint256) {\n        return frozenAccount[target].amount;\n    }\n\n    function _transfer(address _from, address _to, uint256 _value) tokenLock internal returns (bool success) {\n        require(balanceOf[_from] >= _value);\n\n        if (balanceOf[_to].add(_value) <= balanceOf[_to]) {\n            revert();\n        }\n\n        if (isUseFreeze == true) {\n            require(balanceOf[_from].sub(_value)>=frozenAccount[_from].amount);\n        }\n\n        balanceOf[_from] = balanceOf[_from].sub(_value);\n        balanceOf[_to] = balanceOf[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_useOrNot\",\"type\":\"bool\"}],\"name\":\"setUseFreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"amountFreeze\",\"type\":\"uint256\"}],\"name\":\"freezeAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lock\",\"type\":\"bool\"}],\"name\":\"setLockToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"transferManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isTokenLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isUseFreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"freezeAmount\",\"type\":\"uint256\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldaddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newaddr\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldaddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newaddr\",\"type\":\"address\"}],\"name\":\"TransferManager\",\"type\":\"event\"}]",
  "bytecode": "608060405260016004556007805460ff191660121790553480156200002357600080fd5b506000805433600160a060020a031991821681179092556002805490911690911790556040805180820190915260068082527f416c6c506574000000000000000000000000000000000000000000000000000060209092019182526200008c916005916200014a565b506040805180820190915260038082527f50455400000000000000000000000000000000000000000000000000000000006020909201918252620000d3916006916200014a565b506b1027e72f1f128130880000006008819055600b805460ff1961ff001990911661010017169055336000818152600960209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3620001ef565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200018d57805160ff1916838001178555620001bd565b82800160010185558215620001bd579182015b82811115620001bd578251825591602001919060010190620001a0565b50620001cb929150620001cf565b5090565b620001ec91905b80821115620001cb5760008155600101620001d6565b90565b610f9d80620001ff6000396000f30060806040526004361061015e5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610163578063095ea7b3146101ed57806318160ddd1461022557806323b872dd1461024c578063313ce5671461027657806342906029146102a1578063481c6a75146102d257806348ff15b3146102e75780635131d3e9146102fe578063661884631461031857806370a082311461033c57806378fd98d11461035d57806379ba5097146103815780637d240b9c146103965780638da5cb5b146103b057806395d89b41146103c5578063a9059cbb146103da578063b414d4b6146103fe578063ba0e930a1461041f578063bdfe4eba14610440578063cae9ca5114610455578063cc1aa9c6146104be578063d4ee1d90146104d3578063d73dd623146104e8578063dd62ed3e1461050c578063e583983614610533578063f2fde38b14610554575b600080fd5b34801561016f57600080fd5b50610178610575565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b257818101518382015260200161019a565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f957600080fd5b50610211600160a060020a0360043516602435610603565b604080519115158252519081900360200190f35b34801561023157600080fd5b5061023a610669565b60408051918252519081900360200190f35b34801561025857600080fd5b50610211600160a060020a036004358116906024351660443561066f565b34801561028257600080fd5b5061028b61070a565b6040805160ff9092168252519081900360200190f35b3480156102ad57600080fd5b506102b6610713565b60408051600160a060020a039092168252519081900360200190f35b3480156102de57600080fd5b506102b6610722565b3480156102f357600080fd5b506102fc610731565b005b34801561030a57600080fd5b506102fc60043515156107c7565b34801561032457600080fd5b50610211600160a060020a036004351660243561080f565b34801561034857600080fd5b5061023a600160a060020a03600435166108fe565b34801561036957600080fd5b506102fc600160a060020a0360043516602435610919565b34801561038d57600080fd5b506102fc61099b565b3480156103a257600080fd5b506102fc6004351515610a31565b3480156103bc57600080fd5b506102b6610a5b565b3480156103d157600080fd5b50610178610a6a565b3480156103e657600080fd5b50610211600160a060020a0360043516602435610ac5565b34801561040a57600080fd5b5061023a600160a060020a0360043516610ad9565b34801561042b57600080fd5b506102fc600160a060020a0360043516610aeb565b34801561044c57600080fd5b50610211610b48565b34801561046157600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610211948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610b519650505050505050565b3480156104ca57600080fd5b50610211610c86565b3480156104df57600080fd5b506102b6610c94565b3480156104f457600080fd5b50610211600160a060020a0360043516602435610ca3565b34801561051857600080fd5b5061023a600160a060020a0360043581169060243516610d3c565b34801561053f57600080fd5b5061023a600160a060020a0360043516610d67565b34801561056057600080fd5b506102fc600160a060020a0360043516610d82565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105fb5780601f106105d0576101008083540402835291602001916105fb565b820191906000526020600020905b8154815290600101906020018083116105de57829003601f168201915b505050505081565b336000818152600a60209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60085490565b600160a060020a0383166000908152600a6020908152604080832033845290915281205482111561069f57600080fd5b600160a060020a0384166000908152600a602090815260408083203384529091529020546106d3908363ffffffff610dc816565b600160a060020a0385166000908152600a60209081526040808320338452909152902055610702848484610ddf565b949350505050565b60075460ff1681565b600354600160a060020a031681565b600254600160a060020a031681565b600354600090600160a060020a0316331461074b57600080fd5b50600280546003805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091556040805192821680845293909116602083015280517f3eadceefe02aa6afb5514ad1b2ab3f21eb26dd571b170168413057c70615606b9281900390910190a150565b600054600160a060020a03163314806107ea5750600254600160a060020a031633145b15156107f557600080fd5b600b80549115156101000261ff0019909216919091179055565b336000908152600a60209081526040808320600160a060020a038616845290915281205480831061086357336000908152600a60209081526040808320600160a060020a0388168452909152812055610898565b610873818463ffffffff610dc816565b336000908152600a60209081526040808320600160a060020a03891684529091529020555b336000818152600a60209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526009602052604090205490565b600054600160a060020a031633148061093c5750600254600160a060020a031633145b151561094757600080fd5b600160a060020a0382166000818152600c6020908152604091829020849055815184815291517fb4d1971fab77c7179a15c1d5959be5ccdf22f58dc394dfab76d4f27098d981df9281900390910190a25050565b600154600090600160a060020a031633146109b557600080fd5b50600080546001805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091556040805192821680845293909116602083015280517f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c9281900390910190a150565b600054600160a060020a03163314610a4857600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105fb5780601f106105d0576101008083540402835291602001916105fb565b6000610ad2338484610ddf565b9392505050565b600c6020526000908152604090205481565b600054600160a060020a0316331480610b0e5750600254600160a060020a031633145b1515610b1957600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600b5460ff1681565b60048054600101908190556000908490610b6b8286610603565b15610c6f576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018890523060448401819052608060648501908152885160848601528851600160a060020a03881695638f4ffcb195948c94938c939192909160a490910190602085019080838360005b83811015610c03578181015183820152602001610beb565b50505050905090810190601f168015610c305780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610c5257600080fd5b505af1158015610c66573d6000803e3d6000fd5b50505050600192505b6004548114610c7d57600080fd5b50509392505050565b600b54610100900460ff1681565b600154600160a060020a031681565b336000908152600a60209081526040808320600160a060020a0386168452909152812054610cd7908363ffffffff610f5f16565b336000818152600a60209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a039182166000908152600a6020908152604080832093909416825291909152205490565b600160a060020a03166000908152600c602052604090205490565b600054600160a060020a03163314610d9957600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008083831115610dd857600080fd5b5050900390565b600b5460009060ff1615610df257600080fd5b600160a060020a038416600090815260096020526040902054821115610e1757600080fd5b600160a060020a038316600090815260096020526040902054610e40818463ffffffff610f5f16565b11610e4a57600080fd5b600b5460ff61010090910416151560011415610ea057600160a060020a0384166000908152600c6020908152604080832054600990925290912054610e95908463ffffffff610dc816565b1015610ea057600080fd5b600160a060020a038416600090815260096020526040902054610ec9908363ffffffff610dc816565b600160a060020a038086166000908152600960205260408082209390935590851681522054610efe908363ffffffff610f5f16565b600160a060020a0380851660008181526009602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b600082820183811015610ad257600080fd00a165627a7a723058201eb558337743bc69fe017497caa81f42bf6c9b8d448150edaf987a43efe2c5560029"
}