{
  "address": "0x9206dadafd7555baf1bf004af18911152bf7f55b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BIDTToken",
  "compilerVersion": "v0.4.11+commit.68ef5810",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-07\n*/\n\npragma solidity ^0.4.11;\n\nlibrary SafeMath {\n\tfunction mul(uint a, uint b) internal returns(uint) {\n\t\tuint c = a * b;\n\t\tassert(a == 0 || c / a == b);\n\t\treturn c;\n\t}\n\n\tfunction div(uint a, uint b) internal returns(uint) {\n\t\tuint c = a / b;\n\t\treturn c; \n\t}\n\n\tfunction sub(uint a, uint b) internal returns(uint) {\n\t\tassert(b <= a);\n\t\treturn a - b;\n\t}\n\n\tfunction add(uint a, uint b) internal returns(uint) {\n\t\tuint c = a + b;\n\t\tassert(c >= a);\n\t\treturn c;\n\t}\n\tfunction max64(uint64 a, uint64 b) internal constant returns(uint64) {\n\t\treturn a >= b ? a : b;\n\t}\n\n\tfunction min64(uint64 a, uint64 b) internal constant returns(uint64) {\n\t\treturn a < b ? a : b;\n\t}\n\n\tfunction max256(uint256 a, uint256 b) internal constant returns(uint256) {\n\t\treturn a >= b ? a : b;\n\t}\n\n\tfunction min256(uint256 a, uint256 b) internal constant returns(uint256) {\n\t\treturn a < b ? a : b;\n\t}\n\n\tfunction assert(bool assertion) internal {\n\t\tif(!assertion) {\n\t\t\tthrow;\n\t\t}\n\t}\n}\n\ncontract ERC20Basic {\n\tuint public totalSupply;\n\tfunction balanceOf(address who) constant returns(uint);\n\tfunction transfer(address to, uint value);\n\tevent Transfer(address indexed from, address indexed to, uint value);\n}\n\ncontract BasicToken is ERC20Basic {\n\tusing SafeMath \tfor uint;\n\tmapping(address => uint) balances;\n\n\tmodifier onlyPayloadSize(uint size) {\n\t\tif(msg.data.length < size + 4) {\n\t\t\tthrow;\n\t\t}\n\t\t_;\n\t}\n\n\tfunction transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\n\t\tbalances[_to] = balances[_to].add(_value);\n\t\tTransfer(msg.sender, _to, _value);\n\t}\n\n\tfunction balanceOf(address _owner) constant returns(uint balance) {\n\t\treturn balances[_owner];\n\t}\n\n}\n\ncontract ERC20 is ERC20Basic {\n\tfunction allowance(address owner, address spender) constant returns(uint);\n\tfunction transferFrom(address from, address to, uint value);\n\tfunction approve(address spender, uint value);\n\tevent Approval(address indexed owner, address indexed spender, uint value);\n}\n\ncontract StandardToken is BasicToken, ERC20 {\n\tmapping(address => mapping(address => uint)) allowed;\n\tfunction transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {\n\t\tvar _allowance = allowed[_from][msg.sender];\n\t\tbalances[_to] = balances[_to].add(_value);\n\t\tbalances[_from] = balances[_from].sub(_value);\n\t\tallowed[_from][msg.sender] = _allowance.sub(_value);\n\t\tTransfer(_from, _to, _value);\n\t}\n\n\tfunction approve(address _spender, uint _value) {\n\t\tif((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;\n\t\tallowed[msg.sender][_spender] = _value;\n\t\tApproval(msg.sender, _spender, _value);\n\t}\n\n\tfunction allowance(address _owner, address _spender) constant returns(uint remaining) {\n\t\treturn allowed[_owner][_spender];\n\t}\n\n}\n\ncontract BIDTToken is StandardToken {\n\tstring public constant symbol = \"BIDT\";\n\tstring public constant name = \"Block IDentity Token\";\n\tuint8 public constant decimals = 18;\n\taddress public target;\n\t\n\tuint public baseRate=0;\n\tbool public allowedBuy = false;\n\tuint public  basePublicPlacement  = 1;\n\tevent InvalidCaller(address caller);\n\n\tmodifier onlyOwner {\n\t\tif(target == msg.sender) {\n\t\t\t_;\n\t\t} else {\n\t\t\tInvalidCaller(msg.sender);\n\t\t\tthrow;\n\t\t}\n\t}\n\n\tfunction setRate(uint rate) public onlyOwner {\n\t\tbaseRate = rate;\n\t}\n\tfunction setPublicPlacementNum(uint publicPlacement) public onlyOwner {\n\t\tbasePublicPlacement = publicPlacement;\n\t}\n\n\tfunction openBuy() public onlyOwner {\n\t\tallowedBuy = true;\n\t}\n\t\n\tfunction closeBuy() public onlyOwner {\n\t\tallowedBuy = false;\n\t}\n\n\tfunction BIDTToken(address _target) {\n\t\ttarget = _target;\n\t\ttotalSupply = 45.5 * 100000000 * 10 ** 18;\n\t\tbalances[target] = totalSupply.div(1000).mul(100);\n\t\t\n\t\tbalances[0xBE4C612DE6221F557799b7eD456572F0c0A14BD1] = totalSupply.div(1000).mul(180);\n\t\tbalances[0xA29459226F9aFa33b2b22093f5f9FCB9B16a9851] = totalSupply.div(1000).mul(20);\n\t\t\n\t\tbalances[0x7E7C8b920d2Fd52b6552805C2212d40792b77f6b] = totalSupply.div(1000).mul(40);\n\t\tbalances[0xC6eB2f5C7938F687F58516B5EA6438B8A4803Ee3] = totalSupply.div(1000).mul(5);\n\t\tbalances[0x15dA32920eecaf05C0594C039633F8565471cb5C] = totalSupply.div(1000).mul(5);\n\t\t\n\t\tbalances[0xCD2C7D18325B7E09DA08DBA6f58D0E6F0e6BDf68] = totalSupply.div(1000).mul(30);\n\t\tbalances[0x2968d05dCF6e706F68ca8fC16F6e430fd822d742] = totalSupply.div(1000).mul(170);\n\n\t\tbalances[0xD20D3CaC06BfC68f1d0e84855c3395D2D10CDb14] = totalSupply.div(1000).mul(450);\n\t}\n\n\tfunction() payable {\n\t\tissueToken();\n\t}\n\n\tfunction issueToken() payable {\n\t    if(allowedBuy){\n\t        assert(msg.value >= 1 ether );\n    \t\tassert(msg.value <= 50 ether );\n    \t\tuint tokens = computeTokenAmount(msg.value);\n    \t\tbalances[msg.sender] = balances[msg.sender].add(tokens);\n    \t\tbalances[target] = balances[target].sub(tokens);\n\t    }else{\n\t       \tthrow;\n\t    }\n\t\tif(!target.send(msg.value)) {\n\t\t\tthrow;\n\t\t}\n\t}\n\n\tfunction computeTokenAmount(uint ethAmount) internal constant returns(uint tokens) {\n\t\tuint tokenBase = ethAmount.mul(baseRate);\n\t\tif(\tbalances[target] > (totalSupply.div(100)).mul(8-basePublicPlacement)){\n\t\t    \ttokens = tokenBase;\n\t\t}else{\n\t\t   \tthrow;\n\t\t}\n\t\t    \n\t}\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basePublicPlacement\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"publicPlacement\",\"type\":\"uint256\"}],\"name\":\"setPublicPlacementNum\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"issueToken\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeBuy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowedBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openBuy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"InvalidCaller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "606060405260006004556000600560006101000a81548160ff021916908315150217905550600160065534156200003257fe5b60405160208062001af1833981016040528080519060200190919050505b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506b0eb3abfa3d8e477b86000000600081905550620000ee6064620000d16103e86000546200066464010000000002620013a6179091906401000000009004565b620006826401000000000262001371179091906401000000009004565b60016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200019d60b4620001806103e86000546200066464010000000002620013a6179091906401000000009004565b620006826401000000000262001371179091906401000000009004565b6001600073be4c612de6221f557799b7ed456572f0c0a14bd173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200023e6014620002216103e86000546200066464010000000002620013a6179091906401000000009004565b620006826401000000000262001371179091906401000000009004565b6001600073a29459226f9afa33b2b22093f5f9fcb9b16a985173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620002df6028620002c26103e86000546200066464010000000002620013a6179091906401000000009004565b620006826401000000000262001371179091906401000000009004565b60016000737e7c8b920d2fd52b6552805c2212d40792b77f6b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620003806005620003636103e86000546200066464010000000002620013a6179091906401000000009004565b620006826401000000000262001371179091906401000000009004565b6001600073c6eb2f5c7938f687f58516b5ea6438b8a4803ee373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620004216005620004046103e86000546200066464010000000002620013a6179091906401000000009004565b620006826401000000000262001371179091906401000000009004565b600160007315da32920eecaf05c0594c039633f8565471cb5c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620004c2601e620004a56103e86000546200066464010000000002620013a6179091906401000000009004565b620006826401000000000262001371179091906401000000009004565b6001600073cd2c7d18325b7e09da08dba6f58d0e6f0e6bdf6873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200056360aa620005466103e86000546200066464010000000002620013a6179091906401000000009004565b620006826401000000000262001371179091906401000000009004565b60016000732968d05dcf6e706f68ca8fc16f6e430fd822d74273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620006056101c2620005e86103e86000546200066464010000000002620013a6179091906401000000009004565b620006826401000000000262001371179091906401000000009004565b6001600073d20d3cac06bfc68f1d0e84855c3395d2d10cdb1473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50620006e1565b6000600082848115156200067457fe5b0490508091505b5092915050565b600060008284029050620006c46000851480620006aa5750838583811515620006a757fe5b04145b620006cf64010000000002620013c3176401000000009004565b8091505b5092915050565b801515620006dd5760006000fd5b5b50565b61140080620006f16000396000f300606060405236156100fa576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461010b578063095ea7b3146101a457806318160ddd146101e35780631f68f20a1461020957806323b872dd1461022f578063313ce5671461028d57806334fcf437146102b95780633d619212146102d957806370a08231146102ff57806395d89b41146103495780639b480435146103e2578063a1ee8c7814610402578063a9059cbb1461040c578063c6ab5cdc1461044b578063cb795a641461045d578063d4a6793014610487578063d4b8399214610499578063dd62ed3e146104eb575b6101095b610106610554565b5b565b005b341561011357fe5b61011b610782565b604051808060200182810382528381815181526020019150805190602001908083836000831461016a575b80518252602083111561016a57602082019150602081019050602083039250610146565b505050905090810190601f1680156101965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ac57fe5b6101e1600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506107bc565b005b34156101eb57fe5b6101f3610940565b6040518082815260200191505060405180910390f35b341561021157fe5b610219610946565b6040518082815260200191505060405180910390f35b341561023757fe5b61028b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061094c565b005b341561029557fe5b61029d610c0f565b604051808260ff1660ff16815260200191505060405180910390f35b34156102c157fe5b6102d76004808035906020019091905050610c14565b005b34156102e157fe5b6102e9610ce4565b6040518082815260200191505060405180910390f35b341561030757fe5b610333600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cea565b6040518082815260200191505060405180910390f35b341561035157fe5b610359610d34565b60405180806020018281038252838181518152602001915080519060200190808383600083146103a8575b8051825260208311156103a857602082019150602081019050602083039250610384565b505050905090810190601f1680156103d45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103ea57fe5b6104006004808035906020019091905050610d6e565b005b61040a610554565b005b341561041457fe5b610449600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e3e565b005b341561045357fe5b61045b610feb565b005b341561046557fe5b61046d6110ce565b604051808215151515815260200191505060405180910390f35b341561048f57fe5b6104976110e1565b005b34156104a157fe5b6104a96111c4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104f357fe5b61053e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ea565b6040518082815260200191505060405180910390f35b6000600560009054906101000a900460ff161561071257670de0b6b3a7640000341015151561057f57fe5b6802b5e3af16b1880000341115151561059457fe5b61059d34611272565b90506105f181600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133790919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106a88160016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461135790919063ffffffff16565b60016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610718565b60006000fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f19350505050151561077e5760006000fd5b5b50565b604060405190810160405280601481526020017f426c6f636b204944656e7469747920546f6b656e00000000000000000000000081525081565b6000811415801561084a57506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156108555760006000fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b60005481565b60045481565b6000606060048101600036905010156109655760006000fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150610a3683600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133790919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610acb83600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461135790919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b21838361135790919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b5b5050505050565b601281565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c7757806004819055505b610ce0565b7fcbd9d2e0b97a08f1b662bf4d639e76b32edd97a5d890cafbd2b3cf1b803243a433604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160006000fd5b5b50565b60065481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b604060405190810160405280600481526020017f424944540000000000000000000000000000000000000000000000000000000081525081565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610dd157806006819055505b610e3a565b7fcbd9d2e0b97a08f1b662bf4d639e76b32edd97a5d890cafbd2b3cf1b803243a433604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160006000fd5b5b50565b60406004810160003690501015610e555760006000fd5b610ea782600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461135790919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f3c82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133790919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35b5b505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611062576000600560006101000a81548160ff0219169083151502179055505b6110cb565b7fcbd9d2e0b97a08f1b662bf4d639e76b32edd97a5d890cafbd2b3cf1b803243a433604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160006000fd5b5b565b600560009054906101000a900460ff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611158576001600560006101000a81548160ff0219169083151502179055505b6111c1565b7fcbd9d2e0b97a08f1b662bf4d639e76b32edd97a5d890cafbd2b3cf1b803243a433604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160006000fd5b5b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b6000600061128b6004548461137190919063ffffffff16565b90506112ba6006546008036112ac60646000546113a690919063ffffffff16565b61137190919063ffffffff16565b60016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561132a57809150611330565b60006000fd5b5b50919050565b60006000828401905061134c848210156113c3565b8091505b5092915050565b6000611365838311156113c3565b81830390505b92915050565b60006000828402905061139b6000851480611396575083858381151561139357fe5b04145b6113c3565b8091505b5092915050565b6000600082848115156113b557fe5b0490508091505b5092915050565b8015156113d05760006000fd5b5b505600a165627a7a72305820e7e371b9e5ddc04e0c50e663067c46acceddb7bebe57ce1b49d84c0525a581a600290000000000000000000000009138d3b9d45cd8901ad1c2e670428bc51f85c350",
  "constructorArguments": "0000000000000000000000009138d3b9d45cd8901ad1c2e670428bc51f85c350"
}