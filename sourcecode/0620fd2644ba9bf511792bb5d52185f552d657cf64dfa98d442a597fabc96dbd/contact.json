{
  "address": "0x020c710646e23ab868dbe5b88004892797fe4efb",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Golfcoin",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-01\n*/\n\npragma solidity ^0.4.24;\n\n// ----------------------------------------------------------------------------\n// Ownership functionality for authorization controls and user permissions\n// ----------------------------------------------------------------------------\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n        newOwner = address(0);\n    }\n}\n\n\n// ----------------------------------------------------------------------------\n// Pause functionality\n// ----------------------------------------------------------------------------\ncontract Pausable is Owned {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  // Modifier to make a function callable only when the contract is not paused.\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  // Modifier to make a function callable only when the contract is paused.\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  // Called by the owner to pause, triggers stopped state\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  // Called by the owner to unpause, returns to normal state\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Safe maths\n// ----------------------------------------------------------------------------\ncontract SafeMath {\n    function safeAdd(uint a, uint b) public pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n    function safeSub(uint a, uint b) public pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    function safeMul(uint a, uint b) public pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    function safeDiv(uint a, uint b) public pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n}\n\n\n// ----------------------------------------------------------------------------\n// ERC20 Standard Interface\n// ----------------------------------------------------------------------------\ncontract ERC20 {\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\n\n// ----------------------------------------------------------------------------\n// 'GOLF' 'Golfcoin' token contract\n// Symbol      : GOLF\n// Name        : Golfcoin\n// Total supply: 100,000,000,000\n// Decimals    : 18\n// ----------------------------------------------------------------------------\n\n\n// ----------------------------------------------------------------------------\n// ERC20 Token. Specifies symbol, name, decimals, and total supply\n// ----------------------------------------------------------------------------\ncontract Golfcoin is Pausable, SafeMath, ERC20 {\n\tstring public symbol;\n    string public  name;\n    uint8 public decimals;\n    uint public _totalSupply;\n\n\n\n    mapping(address => uint) public balances;\n    mapping(address => mapping(address => uint)) internal allowed;\n\n    event Burned(address indexed burner, uint256 value);\n    event Mint(address indexed to, uint256 amount);\n\n\n    // ------------------------------------------------------------------------\n    // Constructor\n    // ------------------------------------------------------------------------\n    constructor() public {\n        symbol = \"GOLF\";\n        name = \"Golfcoin\";\n        decimals = 18;\n        _totalSupply = 100000000000 * 10**uint(decimals);\n        balances[owner] = _totalSupply;\n        emit Transfer(address(0), owner, _totalSupply);\n    }\n\n    // ------------------------------------------------------------------------\n    // Total supply\n    // ------------------------------------------------------------------------\n    function totalSupply() public constant returns (uint) {\n        return _totalSupply;\n    }\n\n    // ------------------------------------------------------------------------\n    // Get the token balance for account `tokenOwner`\n    // ------------------------------------------------------------------------\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n        return balances[tokenOwner];\n    }\n\n    // ------------------------------------------------------------------------\n    // Transfer the balance from token owner's account to `to` account\n    // - Owner's account must have sufficient balance to transfer\n    // - 0 value transfers are allowed\n    // ------------------------------------------------------------------------\n    function transfer(address to, uint tokens) public whenNotPaused returns (bool success) {\n        require(to != address(this)); //make sure we're not transfering to this contract\n\n        //check edge cases\n        if (balances[msg.sender] >= tokens\n            && tokens > 0) {\n\n                //update balances\n                balances[msg.sender] = safeSub(balances[msg.sender], tokens);\n                balances[to] = safeAdd(balances[to], tokens);\n\n                //log event\n                emit Transfer(msg.sender, to, tokens);\n                return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    // ------------------------------------------------------------------------\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n    // from the token owner's account\n    // ------------------------------------------------------------------------\n    function approve(address spender, uint tokens) public whenNotPaused returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n\n    // ------------------------------------------------------------------------\n    // Transfer `tokens` from the `from` account to the `to` account\n    //\n    // The calling account must already have sufficient tokens approve(...)-d\n    // for spending from the `from` account and\n    // - From account must have sufficient balance to transfer\n    // - Spender must have sufficient allowance to transfer\n    // ------------------------------------------------------------------------\n    function transferFrom(address from, address to, uint tokens) public whenNotPaused returns (bool success) {\n        require(to != address(this));\n\n        //check edge cases\n        if (allowed[from][msg.sender] >= tokens\n            && balances[from] >= tokens\n            && tokens > 0) {\n\n            //update balances and allowances\n            balances[from] = safeSub(balances[from], tokens);\n            allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\n            balances[to] = safeAdd(balances[to], tokens);\n\n            //log event\n            emit Transfer(from, to, tokens);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    // ------------------------------------------------------------------------\n    // Returns the amount of tokens approved by the owner that can be\n    // transferred to the spender's account\n    // ------------------------------------------------------------------------\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n        return allowed[tokenOwner][spender];\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Burns a specific number of tokens\n    // ------------------------------------------------------------------------\n    function burn(uint256 _value) public onlyOwner {\n        require(_value > 0);\n\n        address burner = msg.sender;\n        balances[burner] = safeSub(balances[burner], _value);\n        _totalSupply = safeSub(_totalSupply, _value);\n        emit Burned(burner, _value);\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Mints a specific number of tokens to a wallet address\n    // ------------------------------------------------------------------------\n    function mint(address _to, uint256 _amount) public onlyOwner returns (bool) {\n    \t_totalSupply = safeAdd(_totalSupply, _amount);\n    \tbalances[_to] = safeAdd(balances[_to], _amount);\n    \t\n    \temit Mint(_to, _amount);\n    \temit Transfer(address(0), _to, _amount);\n    \t\n    \treturn true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Doesn't Accept Eth\n    // ------------------------------------------------------------------------\n    function () public payable {\n        revert();\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeDiv\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60806040526001805460a060020a60ff021916905534801561002057600080fd5b5060008054600160a060020a031916331790556040805180820190915260048082527f474f4c460000000000000000000000000000000000000000000000000000000060209092019182526100779160029161013c565b506040805180820190915260088082527f476f6c66636f696e00000000000000000000000000000000000000000000000060209092019182526100bc9160039161013c565b5060048054601260ff19909116179081905560ff16600a0a64174876e80002600581905560008054600160a060020a0390811682526006602090815260408084208590558354815195865290519216937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36101d7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017d57805160ff19168380011785556101aa565b828001600101855582156101aa579182015b828111156101aa57825182559160200191906001019061018f565b506101b69291506101ba565b5090565b6101d491905b808211156101b657600081556001016101c0565b90565b610d18806101e66000396000f30060806040526004361061013d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610142578063095ea7b3146101cc57806318160ddd1461020457806323b872dd1461022b57806327e235e314610255578063313ce567146102765780633eaaf86b146102a15780633f4ba83a146102b657806340c10f19146102cd57806342966c68146102f15780635c975abb1461030957806370a082311461031e57806379ba50971461033f5780638456cb59146103545780638da5cb5b1461036957806395d89b411461039a578063a293d1e8146103af578063a9059cbb146103ca578063b5931f7c146103ee578063d05c78da14610409578063d4ee1d9014610424578063dd62ed3e14610439578063e6cb901314610460578063f2fde38b1461047b575b600080fd5b34801561014e57600080fd5b5061015761049c565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610191578181015183820152602001610179565b50505050905090810190601f1680156101be5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101d857600080fd5b506101f0600160a060020a036004351660243561052a565b604080519115158252519081900360200190f35b34801561021057600080fd5b506102196105ac565b60408051918252519081900360200190f35b34801561023757600080fd5b506101f0600160a060020a03600435811690602435166044356105b2565b34801561026157600080fd5b50610219600160a060020a0360043516610740565b34801561028257600080fd5b5061028b610752565b6040805160ff9092168252519081900360200190f35b3480156102ad57600080fd5b5061021961075b565b3480156102c257600080fd5b506102cb610761565b005b3480156102d957600080fd5b506101f0600160a060020a03600435166024356107d9565b3480156102fd57600080fd5b506102cb6004356108bf565b34801561031557600080fd5b506101f061096b565b34801561032a57600080fd5b50610219600160a060020a036004351661097b565b34801561034b57600080fd5b506102cb610996565b34801561036057600080fd5b506102cb610a1e565b34801561037557600080fd5b5061037e610a9b565b60408051600160a060020a039092168252519081900360200190f35b3480156103a657600080fd5b50610157610aaa565b3480156103bb57600080fd5b50610219600435602435610b02565b3480156103d657600080fd5b506101f0600160a060020a0360043516602435610b17565b3480156103fa57600080fd5b50610219600435602435610c16565b34801561041557600080fd5b50610219600435602435610c37565b34801561043057600080fd5b5061037e610c5c565b34801561044557600080fd5b50610219600160a060020a0360043581169060243516610c6b565b34801561046c57600080fd5b50610219600435602435610c96565b34801561048757600080fd5b506102cb600160a060020a0360043516610ca6565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105225780601f106104f757610100808354040283529160200191610522565b820191906000526020600020905b81548152906001019060200180831161050557829003601f168201915b505050505081565b60015460009060a060020a900460ff161561054457600080fd5b336000818152600760209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60055490565b60015460009060a060020a900460ff16156105cc57600080fd5b600160a060020a0383163014156105e257600080fd5b600160a060020a0384166000908152600760209081526040808320338452909152902054821180159061062d5750600160a060020a0384166000908152600660205260409020548211155b80156106395750600082115b1561073557600160a060020a0384166000908152600660205260409020546106619083610b02565b600160a060020a03851660009081526006602090815260408083209390935560078152828220338352905220546106989083610b02565b600160a060020a0380861660009081526007602090815260408083203384528252808320949094559186168152600690915220546106d69083610c96565b600160a060020a0380851660008181526006602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3506001610739565b5060005b9392505050565b60066020526000908152604090205481565b60045460ff1681565b60055481565b600054600160a060020a0316331461077857600080fd5b60015460a060020a900460ff16151561079057600080fd5b6001805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b60008054600160a060020a031633146107f157600080fd5b6107fd60055483610c96565b600555600160a060020a0383166000908152600660205260409020546108239083610c96565b600160a060020a038416600081815260066020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b60008054600160a060020a031633146108d757600080fd5b600082116108e457600080fd5b50336000818152600660205260409020546108ff9083610b02565b600160a060020a0382166000908152600660205260409020556005546109259083610b02565b600555604080518381529051600160a060020a038316917f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7919081900360200190a25050565b60015460a060020a900460ff1681565b600160a060020a031660009081526006602052604090205490565b600154600160a060020a031633146109ad57600080fd5b60015460008054604051600160a060020a0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a03163314610a3557600080fd5b60015460a060020a900460ff1615610a4c57600080fd5b6001805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600054600160a060020a031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156105225780601f106104f757610100808354040283529160200191610522565b600082821115610b1157600080fd5b50900390565b60015460009060a060020a900460ff1615610b3157600080fd5b600160a060020a038316301415610b4757600080fd5b336000908152600660205260409020548211801590610b665750600082115b15610c0e5733600090815260066020526040902054610b859083610b02565b3360009081526006602052604080822092909255600160a060020a03851681522054610bb19083610c96565b600160a060020a0384166000818152600660209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060016105a6565b5060006105a6565b6000808211610c2457600080fd5b8183811515610c2f57fe5b049392505050565b818102821580610c515750818382811515610c4e57fe5b04145b15156105a657600080fd5b600154600160a060020a031681565b600160a060020a03918216600090815260076020908152604080832093909416825291909152205490565b818101828110156105a657600080fd5b600054600160a060020a03163314610cbd57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058203e08f83efa70fa74f7a54f4c7b6431db1e1bbc8ca2739a1f4e13e13d41d621310029"
}