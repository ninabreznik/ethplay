{
  "address": "0x861a6b1233240a41efd24e3f2f4b9d235ee9b760",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenVesting",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-01\n*/\n\npragma solidity ^0.4.24;\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address _who) public view returns (uint256);\n  function transfer(address _to, uint256 _value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address _owner, address _spender)\n    public view returns (uint256);\n\n  function transferFrom(address _from, address _to, uint256 _value)\n    public returns (bool);\n\n  function approve(address _spender, uint256 _value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (_a == 0) {\n      return 0;\n    }\n\n    c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = _a / _b;\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n    return _a / _b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    c = _a + _b;\n    assert(c >= _a);\n    return c;\n  }\n}\n\n// File: contracts/TokenVesting.sol\n\ncontract TokenVesting is Ownable {\n  using SafeMath for uint;\n\n  ERC20 public token;\n  address public receiver;\n  uint256 public startTime;\n  uint256 public cliff;\n  uint256 public totalPeriods;\n  uint256 public timePerPeriod;\n  uint256 public totalTokens;\n  uint256 public tokensClaimed;\n\n  event VestingFunded(uint256 totalTokens);\n  event TokensClaimed(uint256 tokensClaimed);\n  event VestingKilled();\n\n  /**\n  *@dev contructor\n  *@param _token address of erc20 token\n  *@param _receiver address entitle to claim tokens\n  *@param _startTime moment when counting time starts\n  *@param _cliff delay from _startTime after which vesting starts\n  *@param _totalPeriods total amount of vesting periods\n  *@param _timePerPeriod time in seconds for every vesting period\n  */\n  constructor(\n    address _token,\n    address _receiver,\n    uint256 _startTime,\n    uint256 _cliff,\n    uint256 _totalPeriods,\n    uint256 _timePerPeriod\n  ) public {\n    token = ERC20(_token);\n    receiver = _receiver;\n    startTime = _startTime;\n    cliff = _cliff;\n    totalPeriods = _totalPeriods;\n    timePerPeriod = _timePerPeriod;\n  }\n\n  /*\n  *@dev function responsible for supplying tokens that will be vested\n  *@param _totalTokens amount of tokens that will be supplied to this contract\n  */\n  function fundVesting(uint256 _totalTokens) public onlyOwner {\n    require(totalTokens == 0, \"Vesting already funded\");\n    require(token.allowance(owner, address(this)) == _totalTokens);\n    totalTokens = _totalTokens;\n    token.transferFrom(owner, address(this), totalTokens);\n    emit VestingFunded(_totalTokens);\n  }\n\n  /*\n  *@dev Function that allows the contract owner to change tokens receiver\n  *@param newReceiver the new receiver address\n  */\n  function changeReceiver(address newReceiver) public onlyOwner {\n    require(newReceiver != address(0));\n    receiver = newReceiver;\n  }\n\n  /**\n  *@dev function that allows receiver to claim tokens, can be called only by\n    receiver\n  */\n  function claimTokens() public {\n\n    require(totalTokens > 0, \"Vesting has not been funded yet\");\n    require(msg.sender == receiver, \"Only receiver can claim tokens\");\n    require(now > startTime.add(cliff), \"Vesting hasnt started yet\");\n\n    uint256 timePassed = now.sub(startTime.add(cliff));\n    uint256 tokensToClaim = totalTokens\n      .div(totalPeriods)\n      .mul(timePassed.div(timePerPeriod))\n      .sub(tokensClaimed);\n\n    token.transfer(receiver, tokensToClaim);\n    tokensClaimed = tokensClaimed.add(tokensToClaim);\n\n    emit TokensClaimed(tokensToClaim);\n\n  }\n\n  /**\n  *@dev function that allows cancel vesting, can be called only by the owner\n  */\n  function killVesting() public onlyOwner {\n    token.transfer(owner, totalTokens.sub(tokensClaimed));\n    tokensClaimed = totalTokens;\n    emit VestingKilled();\n  }\n\n}",
  "abi": "[{\"constant\":false,\"inputs\":[],\"name\":\"killVesting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newReceiver\",\"type\":\"address\"}],\"name\":\"changeReceiver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_totalTokens\",\"type\":\"uint256\"}],\"name\":\"fundVesting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timePerPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalPeriods\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_startTime\",\"type\":\"uint256\"},{\"name\":\"_cliff\",\"type\":\"uint256\"},{\"name\":\"_totalPeriods\",\"type\":\"uint256\"},{\"name\":\"_timePerPeriod\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"totalTokens\",\"type\":\"uint256\"}],\"name\":\"VestingFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokensClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VestingKilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060405160c080610ade83398101604090815281516020830151918301516060840151608085015160a09095015160008054600160a060020a0319908116331790915560018054600160a060020a039687169083161790556002805495909616941693909317909355600355600491909155600591909155600655610a448061009a6000396000f3006080604052600436106100da5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630a0a287681146100df57806313d033c0146100f657806348c54b9d1461011d578063547e3f0614610132578063715018a614610153578063739135451461016857806378e97925146101805780637e1c0c09146101955780638da5cb5b146101aa578063b44df72d146101db578063cf0f0e9c146101f0578063f2fde38b14610205578063f7260d3e14610226578063fc0c546a1461023b578063fea708f614610250575b600080fd5b3480156100eb57600080fd5b506100f4610265565b005b34801561010257600080fd5b5061010b610374565b60408051918252519081900360200190f35b34801561012957600080fd5b506100f461037a565b34801561013e57600080fd5b506100f4600160a060020a0360043516610607565b34801561015f57600080fd5b506100f4610662565b34801561017457600080fd5b506100f46004356106ce565b34801561018c57600080fd5b5061010b6108cb565b3480156101a157600080fd5b5061010b6108d1565b3480156101b657600080fd5b506101bf6108d7565b60408051600160a060020a039092168252519081900360200190f35b3480156101e757600080fd5b5061010b6108e6565b3480156101fc57600080fd5b5061010b6108ec565b34801561021157600080fd5b506100f4600160a060020a03600435166108f2565b34801561023257600080fd5b506101bf610915565b34801561024757600080fd5b506101bf610924565b34801561025c57600080fd5b5061010b610933565b600054600160a060020a0316331461027c57600080fd5b600154600054600854600754600160a060020a039384169363a9059cbb9316916102ac919063ffffffff61093916565b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561031757600080fd5b505af115801561032b573d6000803e3d6000fd5b505050506040513d602081101561034157600080fd5b50506007546008556040517fd38ca5fd57087e5a22bcf14ccd90e9f65afea4dd27a820d610a57596463755b290600090a1565b60045481565b60008060006007541115156103d9576040805160e560020a62461bcd02815260206004820152601f60248201527f56657374696e6720686173206e6f74206265656e2066756e6465642079657400604482015290519081900360640190fd5b600254600160a060020a0316331461043b576040805160e560020a62461bcd02815260206004820152601e60248201527f4f6e6c792072656365697665722063616e20636c61696d20746f6b656e730000604482015290519081900360640190fd5b6004546003546104509163ffffffff61095016565b42116104a6576040805160e560020a62461bcd02815260206004820152601960248201527f56657374696e67206861736e7420737461727465642079657400000000000000604482015290519081900360640190fd5b6104cd6104c060045460035461095090919063ffffffff16565b429063ffffffff61093916565b915061051a60085461050e6104ed6006548661095d90919063ffffffff16565b6005546007546105029163ffffffff61095d16565b9063ffffffff61097216565b9063ffffffff61093916565b600154600254604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03928316600482015260248101859052905193945091169163a9059cbb916044808201926020929091908290030181600087803b15801561058e57600080fd5b505af11580156105a2573d6000803e3d6000fd5b505050506040513d60208110156105b857600080fd5b50506008546105cd908263ffffffff61095016565b6008556040805182815290517fcff788b65ecc4ee1e06954505390b4d87e536462f29c25f160ab35cdb6ef6aea9181900360200190a15050565b600054600160a060020a0316331461061e57600080fd5b600160a060020a038116151561063357600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a0316331461067957600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031633146106e557600080fd5b6007541561073d576040805160e560020a62461bcd02815260206004820152601660248201527f56657374696e6720616c72656164792066756e64656400000000000000000000604482015290519081900360640190fd5b60015460008054604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a03928316600482015230602482015290518594929092169263dd62ed3e926044808401936020939083900390910190829087803b1580156107b257600080fd5b505af11580156107c6573d6000803e3d6000fd5b505050506040513d60208110156107dc57600080fd5b5051146107e857600080fd5b600781905560015460008054604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a03928316600482015230602482015260448101869052905191909316926323b872dd9260648083019360209390929083900390910190829087803b15801561086957600080fd5b505af115801561087d573d6000803e3d6000fd5b505050506040513d602081101561089357600080fd5b50506040805182815290517f3677c9434f5ab443cebe570bd0549adb7149a47c57a250985034f42dbea50e469181900360200190a150565b60035481565b60075481565b600054600160a060020a031681565b60085481565b60065481565b600054600160a060020a0316331461090957600080fd5b6109128161099b565b50565b600254600160a060020a031681565b600154600160a060020a031681565b60055481565b60008282111561094557fe5b508082035b92915050565b8181018281101561094a57fe5b6000818381151561096a57fe5b049392505050565b60008215156109835750600061094a565b5081810281838281151561099357fe5b041461094a57fe5b600160a060020a03811615156109b057600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a7230582000801eadf6b90fb3aba3f7763d474617da378d1f79a16e9de33cdb9b47c270260029000000000000000000000000eb9951021698b42e4399f9cbb6267aa35f82d59d00000000000000000000000072190f5af11d1fee36ccd0540c5d1c8d8b880637000000000000000000000000000000000000000000000000000000005c7876000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000278d00",
  "constructorArguments": "000000000000000000000000eb9951021698b42e4399f9cbb6267aa35f82d59d00000000000000000000000072190f5af11d1fee36ccd0540c5d1c8d8b880637000000000000000000000000000000000000000000000000000000005c7876000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000278d00"
}