{
  "address": "0xb5b8f5616fe42d5ceca3e87f3fddbdd8f496d760",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Zper Token",
  "contractName": "ZperToken",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-11\n*/\n\npragma solidity ^0.4.21;\n\nlibrary SafeMath {\n\n/**\n * @dev Multiplies two numbers, throws on overflow.\n */\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n\t\tif (a == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tc = a * b;\n\t\tassert(c / a == b);\n\t\treturn c;\n\t}\n\n/**\n * @dev Integer division of two numbers, truncating the quotient.\n */\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\t// assert(b > 0); // Solidity automatically throws when dividing by 0\n\t\t// uint256 c = a / b;\n\t\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\t\treturn a / b;\n\t}\n\n/**\n * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n */\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tassert(b <= a);\n\t\treturn a - b;\n\t}\n\n/**\n * @dev Adds two numbers, throws on overflow.\n */\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n\t\tc = a + b;\n\t\tassert(c >= a);\n\t\treturn c;\n\t}\n}\n\ncontract ZperToken {\n\tusing SafeMath for uint256;\n\n\taddress public owner;\n\tuint256 public totalSupply;\n\tuint256 public cap;\n\tstring public constant name = \"ZperToken\";\n\tstring public constant symbol = \"ZPR\";\n\tuint8 public constant decimals = 18;\n\n\n\tmapping (address => uint256) public balances;\n\tmapping (address => mapping (address => uint256)) public allowed;\n\n\tevent Mint(address indexed to, uint256 amount);\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\tevent Burn(address indexed burner, uint256 value);\n\n\tfunction ZperToken (address _owner, uint256 _totalSupply, uint256 _cap) public {\n\t\trequire(_owner != address(0));\n\t\trequire(_cap > _totalSupply && _totalSupply > 0);\n\t\t\n\t\ttotalSupply = _totalSupply * (10 ** 18);\n\t\tcap = _cap * (10 ** 18);\n\t\towner = _owner;\n\n\t\tbalances[owner] = totalSupply;\n\t}\n\n\tmodifier onlyOwner() {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n\n\tfunction transferOwnership(address newOwner) onlyOwner public {\n\t\trequire(newOwner != address(0));\n\t\towner = newOwner;\n\t\temit OwnershipTransferred(owner, newOwner);\n\t}\n\n\tfunction transfer(address _to, uint256 _value) public returns (bool success) {\n\t\trequire(_to != address(0));\n\t\trequire(balances[msg.sender] >= _value);\n\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\n\t\tbalances[_to] = balances[_to].add(_value);\n\t\t\n\t\temit Transfer(msg.sender, _to, _value);\n\t\treturn true;\n\t}\n\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n\t\trequire(_to != address(0));\n\t\trequire(balances[_from] >= _value && allowed[_from][msg.sender] >= _value);\n\n\t\tbalances[_from] = balances[_from].sub(_value);\n\t\tbalances[_to] = balances[_to].add(_value);\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\n\t\temit Transfer(_from, _to, _value);\n\t\treturn true;\n\t}\n\n\tfunction balanceOf(address _owner) public constant returns (uint256 balance) {\n\t\treturn balances[_owner];\n\t}\n\n\tfunction approve(address _spender, uint256 _value) public returns (bool success) {\n\t\tallowed[msg.sender][_spender] = _value;\n\n\t\temit Approval(msg.sender, _spender, _value);\n\t\treturn true;\n\t}\n\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n\t\treturn allowed[_owner][_spender];\n\t}\n\n\tfunction mint(address _to, uint256 _amount) onlyOwner public returns (bool) {\n\t\trequire(_to != address(0));\n\t\trequire(cap >= totalSupply.add(_amount));\n\n\t\ttotalSupply = totalSupply.add(_amount);\n\t\tbalances[_to] = balances[_to].add(_amount);\n\n\t\temit Mint(_to, _amount);\n\t\temit Transfer(address(0), _to, _amount);\n\n\t\treturn true;\n\t}\n\n\tfunction burn(uint256 _value) public returns (bool) {\n\t\trequire(_value <= balances[msg.sender]);\n\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\n\t\ttotalSupply = totalSupply.sub(_value);\n\n\t\temit Burn(msg.sender, _value);\n\t\temit Transfer(msg.sender, address(0), _value);\n\n\t\treturn true;\n\t}\n\n\tfunction batchTransfer(address[] _tos, uint256[] _amount) onlyOwner public returns (bool success) {\n\t\trequire(_tos.length == _amount.length);\n\t\tuint256 i;\n\t\tuint256 sum = 0;\n\n\t\tfor(i = 0; i < _amount.length; i++) {\n\t\t\tsum = sum.add(_amount[i]);\n\t\t\trequire(_tos[i] != address(0));\n\t\t}\n\n\t\trequire(balances[msg.sender] >= sum);\n\n\t\tfor(i = 0; i < _tos.length; i++)\n\t\t\ttransfer(_tos[i], _amount[i]);\n\n\t\treturn true;\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"name\":\"_cap\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b604051606080610cb6833981016040528080519190602001805191906020018051915050600160a060020a038316151561004857600080fd5b81811180156100575750600082115b151561006257600080fd5b670de0b6b3a76400009182026001819055910260025560008054600160a060020a031916600160a060020a0393841617808255909216825260036020526040822055610c029081906100b490396000f3006060604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101b557806323b872dd146101da57806327e235e314610202578063313ce56714610221578063355274ea1461024a57806340c10f191461025d57806342966c681461027f5780635c6581651461029557806370a08231146102ba57806388d695b2146102d95780638da5cb5b1461036857806395d89b4114610397578063a9059cbb146103aa578063dd62ed3e146103cc578063f2fde38b146103f1575b600080fd5b341561010057600080fd5b610108610412565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561014457808201518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018a57600080fd5b6101a1600160a060020a0360043516602435610449565b604051901515815260200160405180910390f35b34156101c057600080fd5b6101c86104b5565b60405190815260200160405180910390f35b34156101e557600080fd5b6101a1600160a060020a03600435811690602435166044356104bb565b341561020d57600080fd5b6101c8600160a060020a036004351661062e565b341561022c57600080fd5b610234610640565b60405160ff909116815260200160405180910390f35b341561025557600080fd5b6101c8610645565b341561026857600080fd5b6101a1600160a060020a036004351660243561064b565b341561028a57600080fd5b6101a1600435610764565b34156102a057600080fd5b6101c8600160a060020a0360043581169060243516610853565b34156102c557600080fd5b6101c8600160a060020a0360043516610870565b34156102e457600080fd5b6101a160046024813581810190830135806020818102016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284375094965061088b95505050505050565b341561037357600080fd5b61037b6109a7565b604051600160a060020a03909116815260200160405180910390f35b34156103a257600080fd5b6101086109b6565b34156103b557600080fd5b6101a1600160a060020a03600435166024356109ed565b34156103d757600080fd5b6101c8600160a060020a0360043581169060243516610ad7565b34156103fc57600080fd5b610410600160a060020a0360043516610b02565b005b60408051908101604052600981527f5a706572546f6b656e0000000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260046020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60015481565b6000600160a060020a03831615156104d257600080fd5b600160a060020a0384166000908152600360205260409020548290108015906105225750600160a060020a0380851660009081526004602090815260408083203390941683529290522054829010155b151561052d57600080fd5b600160a060020a038416600090815260036020526040902054610556908363ffffffff610b9116565b600160a060020a03808616600090815260036020526040808220939093559085168152205461058b908363ffffffff610ba316565b600160a060020a038085166000908152600360209081526040808320949094558783168252600481528382203390931682529190915220546105d3908363ffffffff610b9116565b600160a060020a0380861660008181526004602090815260408083203386168452909152908190209390935590851691600080516020610bb78339815191529085905190815260200160405180910390a35060019392505050565b60036020526000908152604090205481565b601281565b60025481565b6000805433600160a060020a0390811691161461066757600080fd5b600160a060020a038316151561067c57600080fd5b60015461068f908363ffffffff610ba316565b600254101561069d57600080fd5b6001546106b0908363ffffffff610ba316565b600155600160a060020a0383166000908152600360205260409020546106dc908363ffffffff610ba316565b600160a060020a0384166000818152600360205260409081902092909255907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859084905190815260200160405180910390a2600160a060020a0383166000600080516020610bb78339815191528460405190815260200160405180910390a350600192915050565b600160a060020a03331660009081526003602052604081205482111561078957600080fd5b600160a060020a0333166000908152600360205260409020546107b2908363ffffffff610b9116565b600160a060020a0333166000908152600360205260409020556001546107de908363ffffffff610b9116565b600155600160a060020a0333167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58360405190815260200160405180910390a2600033600160a060020a0316600080516020610bb78339815191528460405190815260200160405180910390a3506001919050565b600460209081526000928352604080842090915290825290205481565b600160a060020a031660009081526003602052604090205490565b600080548190819033600160a060020a039081169116146108ab57600080fd5b83518551146108b957600080fd5b5060009050805b8351821015610928576108ef8483815181106108d857fe5b90602001906020020151829063ffffffff610ba316565b905060008583815181106108ff57fe5b90602001906020020151600160a060020a0316141561091d57600080fd5b6001909101906108c0565b600160a060020a0333166000908152600360205260409020548190101561094e57600080fd5b600091505b845182101561099c5761099085838151811061096b57fe5b9060200190602002015185848151811061098157fe5b906020019060200201516109ed565b50600190910190610953565b506001949350505050565b600054600160a060020a031681565b60408051908101604052600381527f5a50520000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a0383161515610a0457600080fd5b600160a060020a03331660009081526003602052604090205482901015610a2a57600080fd5b600160a060020a033316600090815260036020526040902054610a53908363ffffffff610b9116565b600160a060020a033381166000908152600360205260408082209390935590851681522054610a88908363ffffffff610ba316565b600160a060020a038085166000818152600360205260409081902093909355913390911690600080516020610bb78339815191529085905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205490565b60005433600160a060020a03908116911614610b1d57600080fd5b600160a060020a0381161515610b3257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116918217928390559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600082821115610b9d57fe5b50900390565b81810182811015610bb057fe5b929150505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058203ffd48f64a91f6f6912bf23ace3baa9924f008ff5672a96d71e2b32004d0fc010029000000000000000000000000a91b7609aba6116f75e948411797317ec0d772e2000000000000000000000000000000000000000000000000000000008321560000000000000000000000000000000000000000000000000000000000d09dc300",
  "constructorArguments": "000000000000000000000000a91b7609aba6116f75e948411797317ec0d772e2000000000000000000000000000000000000000000000000000000008321560000000000000000000000000000000000000000000000000000000000d09dc300"
}