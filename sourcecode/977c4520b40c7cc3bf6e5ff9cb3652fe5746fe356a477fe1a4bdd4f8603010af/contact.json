{
  "address": "0x06b300e1ef7c4cce6560c5c7719c92cde07ad944",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "EthicHubCMC",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-17\n*/\n\npragma solidity ^0.4.13;\n\ncontract EthicHubBase {\n\n    uint8 public version;\n\n    EthicHubStorageInterface public ethicHubStorage = EthicHubStorageInterface(0);\n\n    constructor(address _storageAddress) public {\n        require(_storageAddress != address(0));\n        ethicHubStorage = EthicHubStorageInterface(_storageAddress);\n    }\n\n}\n\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\ncontract EthicHubStorageInterface {\n\n    //modifier for access in sets and deletes\n    modifier onlyEthicHubContracts() {_;}\n\n    // Setters\n    function setAddress(bytes32 _key, address _value) external;\n    function setUint(bytes32 _key, uint _value) external;\n    function setString(bytes32 _key, string _value) external;\n    function setBytes(bytes32 _key, bytes _value) external;\n    function setBool(bytes32 _key, bool _value) external;\n    function setInt(bytes32 _key, int _value) external;\n    // Deleters\n    function deleteAddress(bytes32 _key) external;\n    function deleteUint(bytes32 _key) external;\n    function deleteString(bytes32 _key) external;\n    function deleteBytes(bytes32 _key) external;\n    function deleteBool(bytes32 _key) external;\n    function deleteInt(bytes32 _key) external;\n\n    // Getters\n    function getAddress(bytes32 _key) external view returns (address);\n    function getUint(bytes32 _key) external view returns (uint);\n    function getString(bytes32 _key) external view returns (string);\n    function getBytes(bytes32 _key) external view returns (bytes);\n    function getBool(bytes32 _key) external view returns (bool);\n    function getInt(bytes32 _key) external view returns (int);\n}\n\ncontract EthicHubCMC is EthicHubBase, Ownable {\n\n    event ContractUpgraded (\n        address indexed _oldContractAddress,                    // Address of the contract being upgraded\n        address indexed _newContractAddress,                    // Address of the new contract\n        uint256 created                                         // Creation timestamp\n    );\n\n    modifier onlyOwnerOrLocalNode() {\n        bool isLocalNode = ethicHubStorage.getBool(keccak256(\"user\", \"localNode\", msg.sender));\n        require(isLocalNode || owner == msg.sender);\n        _;\n    }\n\n    constructor(address _storageAddress) EthicHubBase(_storageAddress) public {\n        // Version\n        version = 1;\n    }\n\n    function addNewLendingContract(address _lendingAddress) public onlyOwnerOrLocalNode {\n        require(_lendingAddress != address(0));\n        ethicHubStorage.setAddress(keccak256(\"contract.address\", _lendingAddress), _lendingAddress);\n    }\n\n    function upgradeContract(address _newContractAddress, string _contractName) public onlyOwner {\n        require(_newContractAddress != address(0));\n        require(keccak256(\"contract.name\",\"\") != keccak256(\"contract.name\",_contractName));\n        address oldAddress = ethicHubStorage.getAddress(keccak256(\"contract.name\", _contractName));\n        ethicHubStorage.setAddress(keccak256(\"contract.address\", _newContractAddress), _newContractAddress);\n        ethicHubStorage.setAddress(keccak256(\"contract.name\", _contractName), _newContractAddress);\n        ethicHubStorage.deleteAddress(keccak256(\"contract.address\", oldAddress));\n        emit ContractUpgraded(oldAddress, _newContractAddress, now);\n    }\n    \n}",
  "bytecode": "60806040526000805461010060a860020a031916905534801561002157600080fd5b50604051602080610a5e833981016040525180600160a060020a038116151561004957600080fd5b6000805460018054600160a060020a031916600160a060020a0333811691909117825561010060a860020a031990921661010094909216939093021760ff191690911781556109bf9150819061009f90396000f3006080604052600436106100695763ffffffff60e060020a60003504166354fd4d50811461006e5780636745396914610099578063715018a6146100ca57806373e5ec47146100e15780638da5cb5b14610102578063d4eb342514610117578063f2fde38b1461017e575b600080fd5b34801561007a57600080fd5b5061008361019f565b6040805160ff9092168252519081900360200190f35b3480156100a557600080fd5b506100ae6101a8565b60408051600160a060020a039092168252519081900360200190f35b3480156100d657600080fd5b506100df6101bc565b005b3480156100ed57600080fd5b506100df600160a060020a036004351661022e565b34801561010e57600080fd5b506100ae610441565b34801561012357600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100df958335600160a060020a03169536956044949193909101919081908401838280828437509497506104509650505050505050565b34801561018a57600080fd5b506100df600160a060020a03600435166108ce565b60005460ff1681565b6000546101009004600160a060020a031681565b60015433600160a060020a039081169116146101d757600080fd5b600154604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26001805473ffffffffffffffffffffffffffffffffffffffff19169055565b60008054604080517f757365720000000000000000000000000000000000000000000000000000000081527f6c6f63616c4e6f64650000000000000000000000000000000000000000000000600480830191909152600160a060020a033381166c0100000000000000000000000002600d84015283516021938190039390930183207f7ae1cfca00000000000000000000000000000000000000000000000000000000845291830191909152915161010090930490911691637ae1cfca9160248082019260209290919082900301818787803b15801561030d57600080fd5b505af1158015610321573d6000803e3d6000fd5b505050506040513d602081101561033757600080fd5b505190508080610355575060015433600160a060020a039081169116145b151561036057600080fd5b600160a060020a038216151561037557600080fd5b60008054604080517f636f6e74726163742e61646472657373000000000000000000000000000000008152600160a060020a038681166c01000000000000000000000000810260108401528351602493819003840181207fca446dd900000000000000000000000000000000000000000000000000000000825260048201529283015291516101009093049091169263ca446dd99260448084019382900301818387803b15801561042557600080fd5b505af1158015610439573d6000803e3d6000fd5b505050505050565b600154600160a060020a031681565b60015460009033600160a060020a0390811691161461046e57600080fd5b600160a060020a038316151561048357600080fd5b816040518080600080516020610974833981519152815250600d0182805190602001908083835b602083106104c95780518252601f1990920191602091820191016104aa565b5181516000196020949094036101000a93909301928316921916919091179052604080519390910183900383206000805160206109748339815191528452905192839003600d0190922090911415925061052591505057600080fd5b60005460405160008051602061097483398151915281528351610100909204600160a060020a0316916321f8a721918591600d82019060208401908083835b602083106105835780518252601f199092019160209182019101610564565b51815160209384036101000a60001901801990921691161790526040805192909401829003822063ffffffff881660e060020a0283526004830152925160248083019650939450929083900301905081600087803b1580156105e457600080fd5b505af11580156105f8573d6000803e3d6000fd5b505050506040513d602081101561060e57600080fd5b505160008054604080517f636f6e74726163742e61646472657373000000000000000000000000000000008152600160a060020a038881166c01000000000000000000000000810260108401528351602493819003840181207fca446dd90000000000000000000000000000000000000000000000000000000082526004820152928301529151949550610100909204169263ca446dd99260448084019391929182900301818387803b1580156106c457600080fd5b505af11580156106d8573d6000803e3d6000fd5b505060005460405160008051602061097483398151915281528551610100909204600160a060020a0316935063ca446dd992508591600d82019060208401908083835b6020831061073a5780518252601f19909201916020918201910161071b565b5181516020939093036101000a60001901801990911692169190911790526040805191909301819003812063ffffffff871660e060020a0282526004820152600160a060020a038a166024820152915160448084019550600094509092839003019050818387803b1580156107ae57600080fd5b505af11580156107c2573d6000803e3d6000fd5b505060008054604080517f636f6e74726163742e61646472657373000000000000000000000000000000008152600160a060020a038781166c010000000000000000000000000260108301528251602492819003830181207f0e14a37600000000000000000000000000000000000000000000000000000000825260048201529251610100909404169550630e14a376945080820193929182900301818387803b15801561086f57600080fd5b505af1158015610883573d6000803e3d6000fd5b5050604080514281529051600160a060020a038088169450851692507f81daf9335a6378204a43cc5467ad9282348d3864c1e3788e40b879f41b187aa59181900360200190a3505050565b60015433600160a060020a039081169116146108e957600080fd5b6108f2816108f5565b50565b600160a060020a038116151561090a57600080fd5b600154604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600636f6e74726163742e6e616d6500000000000000000000000000000000000000a165627a7a72305820aa51a5a072050e6d96e93d244e89b7d7108d719dee31a80a54b533c2c85c8b0700290000000000000000000000006b79b0baed86a69f146c9256ecd268ebaa81bfca",
  "constructorArguments": "0000000000000000000000006b79b0baed86a69f146c9256ecd268ebaa81bfca"
}