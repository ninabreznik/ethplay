{
  "address": "0x84fe204e5d9f612d2fc92623f6b9bf980e816cb9",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "RGO",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-02\n*/\n\npragma solidity ^0.4.19;\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\n\ncontract ERC20Basic {\n    uint256 public totalSupply;\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public view returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract RGOinterface {\n    \n     function RGOFallback(address _from, uint _value, uint _code);\n    \n}\n\ncontract RGO is ERC20 {\n    \n    using SafeMath for uint256;\n    address owner = msg.sender;\n  \n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n    mapping (address => bool) public blacklist;\n\n    string public constant name = \"RGO CHAIN\";\n    string public constant symbol = \"RGO\";\n    uint public constant decimals = 8;\n    uint256 public totalSupply = 100000000e8;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    \n   \n   \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n    \n \n    \n    function RGO () public {\n        owner = msg.sender;\n        balances[owner]= 100000000e8;\n        Transfer(address(0), owner, 100000000e8);\n    }\n    \n    function transferOwnership(address newOwner) onlyOwner public {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n  \n    function () public payable {\n    }\n    \n   \n   \n    function balanceOf(address _owner)public view  returns (uint256) {\n        return balances[_owner];\n    }\n\n    // mitigates the ERC20 short address attack\n    modifier onlyPayloadSize(uint size) {\n        assert(msg.data.length >= size + 4);\n        _;\n    }\n    \n \n    \n    function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {\n        require(_to != address(0));\n        require(_amount <= balances[_from]);\n        require(_amount <= allowed[_from][msg.sender]);\n        \n        balances[_from] = balances[_from].sub(_amount);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        Transfer(_from, _to, _amount);\n        return true;\n    }\n    \n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        // mitigates the ERC20 spend/approval race condition\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    \n    function allowance(address _owner, address _spender) view public returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n    \n    \n    \n    function withdraw() onlyOwner public {\n        uint256 etherBalance = this.balance;\n        owner.transfer(etherBalance);\n    }\n    function transfer(address _to, uint _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n    \n    // SafeMath.sub will throw if there is not enough balance.\n        if(!isContract(_to)){\n            balances[msg.sender] = balances[msg.sender].sub(_value);\n            balances[_to] = balances[_to].add(_value);\n            Transfer(msg.sender, _to, _value);\n            return true;\n            }\n        else{\n            balances[msg.sender] = balanceOf(msg.sender).sub(_value);\n            balances[_to] = balanceOf(_to).add(_value);\n            RGOinterface receiver = RGOinterface(_to);\n            receiver.RGOFallback(msg.sender, _value, 0);\n            Transfer(msg.sender, _to, _value);\n            return true;\n        }\n    }\n\n    function transfer(address _to, uint _value,uint _code) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n    \n    // SafeMath.sub will throw if there is not enough balance.\n        if(!isContract(_to)){\n            balances[msg.sender] = balances[msg.sender].sub(_value);\n            balances[_to] = balances[_to].add(_value);\n            Transfer(msg.sender, _to, _value);\n            return true;\n        }\n        else{\n            balances[msg.sender] = balanceOf(msg.sender).sub(_value);\n            balances[_to] = balanceOf(_to).add(_value);\n            RGOinterface receiver = RGOinterface(_to);\n            receiver.RGOFallback(msg.sender, _value, _code);\n            Transfer(msg.sender, _to, _value);\n            return true;\n        }\n    }\n    \n\n    function isContract(address _addr) private returns (bool is_contract) {\n    uint length;\n    assembly {\n        //retrieve the size of the code on target address, this needs assembly\n        length := extcodesize(_addr)\n    }\n    return (length>0);\n  }\n\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_code\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "606060405260018054600160a060020a03191633600160a060020a0316179055662386f26fc10000600555341561003557600080fd5b60018054600160a060020a03191633600160a060020a03908116919091178083558116600090815260026020526040808220662386f26fc100009081905593549092169290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91905190815260200160405180910390a3610aef806100bc6000396000f3006060604052600436106100ab5763ffffffff60e060020a60003504166306fdde0381146100ad578063095bcdb614610137578063095ea7b31461017057806318160ddd1461019257806323b872dd146101b7578063313ce567146101df5780633ccfd60b146101f257806370a082311461020557806395d89b4114610224578063a9059cbb14610237578063dd62ed3e14610259578063f2fde38b1461027e578063f9f92be41461029d575b005b34156100b857600080fd5b6100c06102bc565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100fc5780820151838201526020016100e4565b50505050905090810190601f1680156101295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014257600080fd5b61015c600160a060020a03600435166024356044356102f3565b604051901515815260200160405180910390f35b341561017b57600080fd5b61015c600160a060020a0360043516602435610504565b341561019d57600080fd5b6101a56105b0565b60405190815260200160405180910390f35b34156101c257600080fd5b61015c600160a060020a03600435811690602435166044356105b6565b34156101ea57600080fd5b6101a5610734565b34156101fd57600080fd5b6100ab610739565b341561021057600080fd5b6101a5600160a060020a0360043516610793565b341561022f57600080fd5b6100c06107ae565b341561024257600080fd5b61015c600160a060020a03600435166024356107e5565b341561026457600080fd5b6101a5600160a060020a03600435811690602435166109dc565b341561028957600080fd5b6100ab600160a060020a0360043516610a07565b34156102a857600080fd5b61015c600160a060020a0360043516610a5e565b60408051908101604052600981527f52474f20434841494e0000000000000000000000000000000000000000000000602082015281565b600080600160a060020a038516151561030b57600080fd5b600160a060020a03331660009081526002602052604090205484111561033057600080fd5b61033985610a73565b15156103ec57600160a060020a033316600090815260026020526040902054610368908563ffffffff610a7b16565b600160a060020a03338116600090815260026020526040808220939093559087168152205461039d908563ffffffff610a8d16565b600160a060020a038087166000818152600260205260409081902093909355913390911690600080516020610aa48339815191529087905190815260200160405180910390a3600191506104fc565b610405846103f933610793565b9063ffffffff610a7b16565b600160a060020a0333166000908152600260205260409020556104378461042b87610793565b9063ffffffff610a8d16565b600160a060020a038616600081815260026020526040908190209290925586925090630e13709a903390879087905160e060020a63ffffffff8616028152600160a060020a03909316600484015260248301919091526044820152606401600060405180830381600087803b15156104ae57600080fd5b6102c65a03f115156104bf57600080fd5b50505084600160a060020a031633600160a060020a0316600080516020610aa48339815191528660405190815260200160405180910390a3600191505b509392505050565b600081158015906105395750600160a060020a0333811660009081526003602090815260408083209387168352929052205415155b15610546575060006105aa565b600160a060020a03338116600081815260036020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60055481565b6000606060643610156105c557fe5b600160a060020a03841615156105da57600080fd5b600160a060020a0385166000908152600260205260409020548311156105ff57600080fd5b600160a060020a038086166000908152600360209081526040808320339094168352929052205483111561063257600080fd5b600160a060020a03851660009081526002602052604090205461065b908463ffffffff610a7b16565b600160a060020a038087166000908152600260209081526040808320949094556003815283822033909316825291909152205461069e908463ffffffff610a7b16565b600160a060020a03808716600090815260036020908152604080832033851684528252808320949094559187168152600290915220546106e4908463ffffffff610a8d16565b600160a060020a0380861660008181526002602052604090819020939093559190871690600080516020610aa48339815191529086905190815260200160405180910390a3506001949350505050565b600881565b60015460009033600160a060020a0390811691161461075757600080fd5b50600154600160a060020a0330811631911681156108fc0282604051600060405180830381858888f19350505050151561079057600080fd5b50565b600160a060020a031660009081526002602052604090205490565b60408051908101604052600381527f52474f0000000000000000000000000000000000000000000000000000000000602082015281565b600080600160a060020a03841615156107fd57600080fd5b600160a060020a03331660009081526002602052604090205483111561082257600080fd5b61082b84610a73565b15156108de57600160a060020a03331660009081526002602052604090205461085a908463ffffffff610a7b16565b600160a060020a03338116600090815260026020526040808220939093559086168152205461088f908463ffffffff610a8d16565b600160a060020a038086166000818152600260205260409081902093909355913390911690600080516020610aa48339815191529086905190815260200160405180910390a3600191506109d5565b6108eb836103f933610793565b600160a060020a0333166000908152600260205260409020556109118361042b86610793565b600160a060020a038516600081815260026020526040808220939093558693509091630e13709a9133918791905160e060020a63ffffffff8616028152600160a060020a03909316600484015260248301919091526044820152606401600060405180830381600087803b151561098757600080fd5b6102c65a03f1151561099857600080fd5b50505083600160a060020a031633600160a060020a0316600080516020610aa48339815191528560405190815260200160405180910390a3600191505b5092915050565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b60015433600160a060020a03908116911614610a2257600080fd5b600160a060020a038116156107905760018054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff1990911617905550565b60046020526000908152604090205460ff1681565b6000903b1190565b600082821115610a8757fe5b50900390565b600082820183811015610a9c57fe5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582018f9d755732ba75549ef6d809428b58b18b862b9035c79c961a1b9e9f3ea2c670029"
}