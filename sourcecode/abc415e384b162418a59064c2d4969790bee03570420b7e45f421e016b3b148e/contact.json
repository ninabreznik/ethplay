{
  "address": "0x925faac3bfb26571237a1b70a0486a24786256cf",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "RockzToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-25\n*/\n\npragma solidity ^0.4.23;\n\n/**\n * Math operations with safety checks\n */\nlibrary SafeMath {\n  function mul(uint a, uint b) internal pure returns (uint) {\n    uint c = a * b;\n    require(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint a, uint b) internal pure returns (uint) {\n    uint c = a / b;\n    return c;\n  }\n\n  function sub(uint a, uint b) internal pure returns (uint) {\n    require(b <= a);\n    return a - b;\n  }\n\n  function add(uint a, uint b) internal pure returns (uint) {\n    uint c = a + b;\n    require(c >= a);\n    return c;\n  }\n\n  function max64(uint64 a, uint64 b) internal pure returns (uint64) {\n    return a >= b ? a : b;\n\n  }\n\n  function min64(uint64 a, uint64 b) internal pure returns (uint64) {\n    return a < b ? a : b;\n  }\n\n  function max256(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a >= b ? a : b;\n  }\n\n  function min256(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a < b ? a : b;\n  }\n\n}\n\ncontract RockzToken {\n\n    using SafeMath for uint;\n\n    // ERC20 State\n    mapping(address => uint256) public balances;\n    mapping(address => mapping(address => uint256)) public allowances;\n    uint256 public totalSupply;\n\n    // Human State\n    string public name;\n    uint8 public decimals;\n    string public symbol;\n\n    // Minter State\n    address public centralMinter;\n\n    // Owner State\n    address public owner;\n\n    // Modifiers\n    modifier onlyMinter {\n        require(msg.sender == centralMinter);\n        _;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    // ERC20 Events\n    event Transfer(address indexed _from, address indexed _to, uint256 _value, bytes _data);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    // Rockz Events\n    event Mint(address indexed _minter, address indexed _to, uint256 _value, bytes _data);\n    event Mint(address indexed _to, uint256 _value);\n    event Burn(address indexed _who, uint256 _value, bytes _data);\n    event Burn(address indexed _who, uint256 _value);\n\n    // Constructor\n    constructor() public {\n        totalSupply = 0;\n        name = \"Rockz Coin\";\n        decimals = 2;\n        symbol = \"RKZ\";\n        owner = msg.sender;\n    }\n\n    // ERC20 Methods\n\n\n    /**\n     * @dev Get balance of specified address.\n     *\n     * @param _address   Tokens owner address.\n     */\n    function balanceOf(address _address) public view returns (uint256 balance) {\n        return balances[_address];\n    }\n\n    /**\n     * @dev Get amount of tokens allowed to be transferred by 3-rd party.\n     *\n     * @param _owner    Tokens owner address.\n     * @param _spender  Spender address.\n     */\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowances[_owner][_spender];\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param _spender The address which will spend the funds.\n     * @param _value The amount of tokens to be spent.\n     */\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        require(_spender != address(0));\n        allowances[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Transfer the specified amount of tokens from one address to another.\n     *      This function allows 3-rd party to transfer tokens if there is an allowance\n     *      approved by tokens owner.\n     *\n     * @param _owner    Tokens owner address.\n     * @param _to       Tokens receiver address.\n     * @param _value    Amount of tokens to transfer.\n     */\n    function transferFrom(address _owner, address _to, uint256 _value) public returns (bool success) {\n        require(_to != address(0));\n        require(balances[_owner] >= _value);\n        require(allowances[_owner][msg.sender] >= _value);\n        balances[_owner] = balances[_owner].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowances[_owner][msg.sender] = allowances[_owner][msg.sender].sub(_value);\n        bytes memory empty;\n        emit Transfer(_owner, _to, _value, empty);\n        emit Transfer(_owner, _to, _value);\n        return true;\n    }\n    // ERC20 Methods END\n\n\n    // ERC223 Methods\n\n    /**\n     * @dev Transfer the specified amount of tokens to the specified address.\n     *      This function works the same with the previous one\n     *      but doesn't contain `_data` param.\n     *      Added due to backwards compatibility reasons.\n     *\n     * @param _to    Receiver address.\n     * @param _value Amount of tokens that will be transferred.\n     */\n    function transfer(address _to, uint _value) public {\n        bytes memory empty;\n\n        require(_to != address(0));\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value, empty);\n        emit Transfer(msg.sender, _to, _value);\n    }\n\n    /**\n     * @dev Transfer the specified amount of tokens to the specified address.\n     *      Invokes the `tokenFallback` function if the recipient is a contract.\n     *      The token transfer fails if the recipient is a contract\n     *      but does not implement the `tokenFallback` function\n     *      or the fallback function to receive funds.\n     *\n     * @param _to    Receiver address.\n     * @param _value Amount of tokens that will be transferred.\n     * @param _data  Transaction metadata.\n     */\n    function transfer(address _to, uint _value, bytes memory _data) public {\n        // Standard function transfer similar to ERC20 transfer with no _data .\n        // Added due to backwards compatibility reasons .\n        require(_to != address(0));\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value, _data);\n        emit Transfer(msg.sender, _to, _value);\n    }\n\n    // ERC223 Methods END\n\n\n    // Minter Functions\n    /**\n     * @dev Mint the specified amount of tokens to the central minter address.\n     *\n     * @param _amountToMint    Amount of tokens to mint.\n     * @param _data Data to be passed to Transfer and Mint events.\n     */\n    function mint(uint256 _amountToMint, bytes memory _data) public onlyMinter {\n        balances[centralMinter] = balances[centralMinter].add(_amountToMint);\n        totalSupply = totalSupply.add(_amountToMint);\n\n        emit Mint(centralMinter, centralMinter, _amountToMint, _data);\n        emit Mint(centralMinter, _amountToMint);\n        emit Transfer(owner, centralMinter, _amountToMint, _data);\n        emit Transfer(owner, centralMinter, _amountToMint);\n    }\n\n    /**\n     * @dev Burn the specified amount of tokens from the central minter address.\n     *\n     * @param _amountToBurn    Amount of tokens to burn.\n     * @param _data Data to be passed to Burn event.\n     */\n    function burn(uint256 _amountToBurn, bytes memory _data) public onlyMinter returns (bool success) {\n        require(balances[centralMinter] >= _amountToBurn);\n        balances[centralMinter] = balances[msg.sender].sub(_amountToBurn);\n        totalSupply = totalSupply.sub(_amountToBurn);\n        emit Burn(centralMinter, _amountToBurn, _data);\n        emit Burn(centralMinter, _amountToBurn);\n        return true;\n    }\n\n    // Minter Functions END\n\n    // Owner functions\n    /**\n     * @dev Transfer central minter address to specified address.\n     *\n     * @param _newMinter    New minter address\n     */\n    function transferMinter(address _newMinter) public onlyOwner {\n        require(_newMinter != address(0));\n        centralMinter = _newMinter;\n    }\n    // Owner functions END\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"centralMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amountToMint\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newMinter\",\"type\":\"address\"}],\"name\":\"transferMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amountToBurn\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_minter\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_who\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_who\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50600060025560408051808201909152600a8082527f526f636b7a20436f696e00000000000000000000000000000000000000000000602090920191825261005a916003916100c4565b506004805460ff191660021790556040805180820190915260038082527f524b5a000000000000000000000000000000000000000000000000000000000060209092019182526100ac916005916100c4565b5060078054600160a060020a0319163317905561015f565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061010557805160ff1916838001178555610132565b82800160010185558215610132579182015b82811115610132578251825591602001919060010190610117565b5061013e929150610142565b5090565b61015c91905b8082111561013e5760008155600101610148565b90565b610f1a806200016f6000396000f3006080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101b757806323b872dd146101de57806327e235e314610208578063313ce5671461022957806355b6ed5c1461025457806370a082311461027b5780638da5cb5b1461029c57806395d89b41146102cd578063a9059cbb146102e2578063be45fd6214610308578063d9f0187814610371578063db7fd40814610386578063dd62ed3e146103e4578063fe99ad5a1461040b578063fe9d93031461042c575b600080fd5b34801561010157600080fd5b5061010a61048a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014457818101518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018b57600080fd5b506101a3600160a060020a0360043516602435610518565b604080519115158252519081900360200190f35b3480156101c357600080fd5b506101cc610596565b60408051918252519081900360200190f35b3480156101ea57600080fd5b506101a3600160a060020a036004358116906024351660443561059c565b34801561021457600080fd5b506101cc600160a060020a03600435166107ce565b34801561023557600080fd5b5061023e6107e0565b6040805160ff9092168252519081900360200190f35b34801561026057600080fd5b506101cc600160a060020a03600435811690602435166107e9565b34801561028757600080fd5b506101cc600160a060020a0360043516610806565b3480156102a857600080fd5b506102b1610821565b60408051600160a060020a039092168252519081900360200190f35b3480156102d957600080fd5b5061010a610830565b3480156102ee57600080fd5b50610306600160a060020a036004351660243561088b565b005b34801561031457600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610306948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610a169650505050505050565b34801561037d57600080fd5b506102b1610a2b565b34801561039257600080fd5b5060408051602060046024803582810135601f8101859004850286018501909652858552610306958335953695604494919390910191908190840183828082843750949750610a3a9650505050505050565b3480156103f057600080fd5b506101cc600160a060020a0360043581169060243516610cab565b34801561041757600080fd5b50610306600160a060020a0360043516610cd6565b34801561043857600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526101a3958335953695604494919390910191908190840183828082843750949750610d319650505050505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105105780601f106104e557610100808354040283529160200191610510565b820191906000526020600020905b8154815290600101906020018083116104f357829003601f168201915b505050505081565b6000600160a060020a038316151561052f57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025481565b60006060600160a060020a03841615156105b557600080fd5b600160a060020a0385166000908152602081905260409020548311156105da57600080fd5b600160a060020a038516600090815260016020908152604080832033845290915290205483111561060a57600080fd5b600160a060020a038516600090815260208190526040902054610633908463ffffffff610ec016565b600160a060020a038087166000908152602081905260408082209390935590861681522054610668908463ffffffff610ed516565b600160a060020a038086166000908152602081815260408083209490945591881681526001825282812033825290915220546106aa908463ffffffff610ec016565b600160a060020a03808716600081815260016020908152604080832033845282528083209590955584518881528082018681528751968201969096528651948a169593947fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16948a948994919260608501928601918190849084905b8381101561073d578181015183820152602001610725565b50505050905090810190601f16801561076a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a383600160a060020a031685600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3506001949350505050565b60006020819052908152604090205481565b60045460ff1681565b600160209081526000928352604080842090915290825290205481565b600160a060020a031660009081526020819052604090205490565b600754600160a060020a031681565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105105780601f106104e557610100808354040283529160200191610510565b6060600160a060020a03831615156108a257600080fd5b336000908152602081905260409020546108c2908363ffffffff610ec016565b3360009081526020819052604080822092909255600160a060020a038516815220546108f4908363ffffffff610ed516565b60008085600160a060020a0316600160a060020a031681526020019081526020016000208190555082600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1684846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561099657818101518382015260200161097e565b50505050905090810190601f1680156109c35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3604080518381529051600160a060020a0385169133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3505050565b600160a060020a03831615156108a257600080fd5b600654600160a060020a031681565b600654600160a060020a03163314610a5157600080fd5b600654600160a060020a0316600090815260208190526040902054610a7c908363ffffffff610ed516565b600654600160a060020a0316600090815260208190526040902055600254610aaa908363ffffffff610ed516565b6002556006546040805184815260208082018381528551938301939093528451600160a060020a039094169384937f30c99b8e9449992bd7616d2645b02ee0a2b6f229a45d6b56b686963ff0c534979388938893919291606084019185019080838360005b83811015610b27578181015183820152602001610b0f565b50505050905090810190601f168015610b545780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3600654604080518481529051600160a060020a03909216917f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859181900360200190a26006546007546040805185815260208082018381528651938301939093528551600160a060020a0395861695909416937fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1693889388939092606084019185019080838360005b83811015610c22578181015183820152602001610c0a565b50505050905090810190601f168015610c4f5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3600654600754604080518581529051600160a060020a039384169392909216917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600754600160a060020a03163314610ced57600080fd5b600160a060020a0381161515610d0257600080fd5b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600654600090600160a060020a03163314610d4b57600080fd5b600654600160a060020a0316600090815260208190526040902054831115610d7257600080fd5b33600090815260208190526040902054610d92908463ffffffff610ec016565b600654600160a060020a0316600090815260208190526040902055600254610dc0908463ffffffff610ec016565b6002556006546040805185815260208082018381528651938301939093528551600160a060020a03909416937f8d38f5a0c1764ff1cca876ce8fe136163fddfce925659e6ad05437cfff6fd39293889388939092606084019185019080838360005b83811015610e3a578181015183820152602001610e22565b50505050905090810190601f168015610e675780820380516001836020036101000a031916815260200191505b50935050505060405180910390a2600654604080518581529051600160a060020a03909216917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59181900360200190a250600192915050565b600082821115610ecf57600080fd5b50900390565b600082820183811015610ee757600080fd5b93925050505600a165627a7a72305820e551a89d01a732d6468e2332809b81d49b18bdd7e15dc743ba1d84dd8644d4b40029"
}