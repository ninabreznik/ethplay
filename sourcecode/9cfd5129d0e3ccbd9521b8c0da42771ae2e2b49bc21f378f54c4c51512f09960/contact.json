{
  "address": "0x3091d37ef18cb33af72cf7ca63714733172ce724",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Gateway",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-04-26\n*/\n\npragma solidity ^0.4.18;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract Token {\n  /// @return total amount of tokens\n  function totalSupply() public constant returns (uint256 supply);\n\n  /// @param _owner The address from which the balance will be retrieved\n  /// @return The balance\n  function balanceOf(address _owner) public constant returns (uint256 balance);\n\n  /// @notice send `_value` token to `_to` from `msg.sender`\n  /// @param _to The address of the recipient\n  /// @param _value The amount of token to be transferred\n  /// @return Whether the transfer was successful or not\n  function transfer(address _to, uint256 _value) public returns (bool success);\n\n  /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n  /// @param _from The address of the sender\n  /// @param _to The address of the recipient\n  /// @param _value The amount of token to be transferred\n  /// @return Whether the transfer was successful or not\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n\n  /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\n  /// @param _spender The address of the account able to transfer the tokens\n  /// @param _value The amount of wei to be approved for transfer\n  /// @return Whether the approval was successful or not\n  function approve(address _spender, uint256 _value) public returns (bool success);\n\n  /// @param _owner The address of the account owning tokens\n  /// @param _spender The address of the account able to transfer the tokens\n  /// @return Amount of remaining tokens allowed to spent\n  function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n  uint public decimals;\n  string public name;\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    \n  address public owner;\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));      \n    owner = newOwner;\n  }\n\n}\ncontract Gateway is Ownable{\n    using SafeMath for uint;\n    address public feeAccount1 = 0x703f9037088A93853163aEaaEd650f3e66aD7A4e; //the account1 that will receive fees\n    address public feeAccount2 = 0xc94cac4a4537865753ecdf2ad48F00112dC09ea8; //the account2 that will receive fees\n    \n    struct BuyInfo {\n      address buyerAddress; \n      address sellerAddress;\n      uint value;\n      address currency;\n    }\n    \n    mapping(address => mapping(uint => BuyInfo)) public payment;\n   \n    mapping(address => uint) public balances;\n    uint balanceFee;\n    uint public feePercent;\n    uint public maxFee;\n    constructor() public{\n       feePercent = 1500000; // decimals 6. 1,5% fee by default\n       maxFee = 3000000; // fee can not exceed 3%\n    }\n    \n    \n    function getBuyerAddressPayment(address _sellerAddress, uint _orderId) public constant returns(address){\n      return  payment[_sellerAddress][_orderId].buyerAddress;\n    }    \n    function getSellerAddressPayment(address _sellerAddress, uint _orderId) public constant returns(address){\n      return  payment[_sellerAddress][_orderId].sellerAddress;\n    }    \n    \n    function getValuePayment(address _sellerAddress, uint _orderId) public constant returns(uint){\n      return  payment[_sellerAddress][_orderId].value;\n    }    \n    \n    function getCurrencyPayment(address _sellerAddress, uint _orderId) public constant returns(address){\n      return  payment[_sellerAddress][_orderId].currency;\n    }\n    \n    \n    function setFeeAccount1(address _feeAccount1) onlyOwner public{\n      feeAccount1 = _feeAccount1;  \n    }\n    function setFeeAccount2(address _feeAccount2) onlyOwner public{\n      feeAccount2 = _feeAccount2;  \n    }\n    function setFeePercent(uint _feePercent) onlyOwner public{\n      require(_feePercent <= maxFee);\n      feePercent = _feePercent;  \n    }    \n    function payToken(address _tokenAddress, address _sellerAddress, uint _orderId,  uint _value) public returns (bool success){\n      require(_tokenAddress != address(0));\n      require(_sellerAddress != address(0)); \n      require(_value > 0);\n      Token token = Token(_tokenAddress);\n      require(token.allowance(msg.sender, this) >= _value);\n      token.transferFrom(msg.sender, _sellerAddress, _value);\n      payment[_sellerAddress][_orderId] = BuyInfo(msg.sender, _sellerAddress, _value, _tokenAddress);\n      success = true;\n    }\n    function payEth(address _sellerAddress, uint _orderId, uint _value) public returns  (bool success){\n      require(_sellerAddress != address(0)); \n      require(_value > 0);\n      require(balances[msg.sender] >= _value);\n      uint fee = _value.mul(feePercent).div(100000000);\n      balances[msg.sender] = balances[msg.sender].sub(_value);\n      _sellerAddress.transfer(_value.sub(fee));\n      balanceFee = balanceFee.add(fee);\n      payment[_sellerAddress][_orderId] = BuyInfo(msg.sender, _sellerAddress, _value, 0x0000000000000000000000000000000000000001);    \n      success = true;\n    }\n    function transferFee() onlyOwner public{\n      uint valfee1 = balanceFee.div(2);\n      feeAccount1.transfer(valfee1);\n      balanceFee = balanceFee.sub(valfee1);\n      feeAccount2.transfer(balanceFee);\n      balanceFee = 0;\n    }\n    function balanceOfToken(address _tokenAddress, address _Address) public constant returns (uint) {\n      Token token = Token(_tokenAddress);\n      return token.balanceOf(_Address);\n    }\n    function balanceOfEthFee() public constant returns (uint) {\n      return balanceFee;\n    }\n    function refund() public{\n      require(balances[msg.sender] > 0);\n      uint value = balances[msg.sender];\n      balances[msg.sender] = 0;\n      msg.sender.transfer(value);\n    }\n    function getBalanceEth() public constant returns(uint){\n      return balances[msg.sender];    \n    }\n    function() external payable {\n      balances[msg.sender] = balances[msg.sender].add(msg.value);    \n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"maxFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"getSellerAddressPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"getBuyerAddressPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"getValuePayment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfEthFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"payment\",\"outputs\":[{\"name\":\"buyerAddress\",\"type\":\"address\"},{\"name\":\"sellerAddress\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"currency\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeAccount2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"payEth\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"getCurrencyPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalanceEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeAccount1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transferFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feeAccount1\",\"type\":\"address\"}],\"name\":\"setFeeAccount1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feeAccount2\",\"type\":\"address\"}],\"name\":\"setFeeAccount2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_Address\",\"type\":\"address\"}],\"name\":\"balanceOfToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"payToken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]",
  "bytecode": "608060405260018054600160a060020a031990811673703f9037088a93853163aeaaed650f3e66ad7a4e179091556002805490911673c94cac4a4537865753ecdf2ad48f00112dc09ea817905534801561005857600080fd5b5060008054600160a060020a033316600160a060020a03199091161790556216e360600655622dc6c0600755610d38806100936000396000f3006080604052600436106101275763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301f59d16811461016b5780631987e50c1461019257806323146c20146101d257806327e235e3146101f65780633b8ea9e7146102175780633ed08dc91461023b578063590e1ae31461025057806367a09c23146102675780636d736fac146102bf5780637ce3489b146102d45780637fd6f15c146102ec5780638a7c2be2146103015780638da5cb5b1461033c57806398445e6f146103515780639caf34c414610375578063a01799491461038a578063acb2ad6f1461039f578063bc0aca61146103b4578063e7b89977146103d5578063f2fde38b146103f6578063f59e38b714610417578063f64ccca61461043e575b600160a060020a033316600090815260046020526040902054610150903463ffffffff61046b16565b600160a060020a033316600090815260046020526040902055005b34801561017757600080fd5b50610180610485565b60408051918252519081900360200190f35b34801561019e57600080fd5b506101b6600160a060020a036004351660243561048b565b60408051600160a060020a039092168252519081900360200190f35b3480156101de57600080fd5b506101b6600160a060020a03600435166024356104b6565b34801561020257600080fd5b50610180600160a060020a03600435166104de565b34801561022357600080fd5b50610180600160a060020a03600435166024356104f0565b34801561024757600080fd5b5061018061051b565b34801561025c57600080fd5b50610265610521565b005b34801561027357600080fd5b5061028b600160a060020a0360043516602435610594565b60408051600160a060020a039586168152938516602085015283810192909252909216606082015290519081900360800190f35b3480156102cb57600080fd5b506101b66105d2565b3480156102e057600080fd5b506102656004356105e1565b3480156102f857600080fd5b50610180610610565b34801561030d57600080fd5b50610328600160a060020a0360043516602435604435610616565b604080519115158252519081900360200190f35b34801561034857600080fd5b506101b66107c6565b34801561035d57600080fd5b506101b6600160a060020a03600435166024356107d5565b34801561038157600080fd5b50610180610800565b34801561039657600080fd5b506101b661081c565b3480156103ab57600080fd5b5061026561082b565b3480156103c057600080fd5b50610265600160a060020a03600435166108f0565b3480156103e157600080fd5b50610265600160a060020a036004351661093a565b34801561040257600080fd5b50610265600160a060020a0360043516610984565b34801561042357600080fd5b50610180600160a060020a03600435811690602435166109e3565b34801561044a57600080fd5b50610328600160a060020a0360043581169060243516604435606435610a91565b60008282018381101561047a57fe5b8091505b5092915050565b60075481565b600160a060020a03918216600090815260036020908152604080832093835292905220600101541690565b600160a060020a03918216600090815260036020908152604080832093835292905220541690565b60046020526000908152604090205481565b600160a060020a03919091166000908152600360209081526040808320938352929052206002015490565b60055490565b600160a060020a033316600090815260046020526040812054811061054557600080fd5b50600160a060020a033316600081815260046020526040808220805490839055905190929183156108fc02918491818181858888f19350505050158015610590573d6000803e3d6000fd5b5050565b600360208181526000938452604080852090915291835291208054600182015460028301549290930154600160a060020a0391821693821692911684565b600254600160a060020a031681565b60005433600160a060020a039081169116146105fc57600080fd5b60075481111561060b57600080fd5b600655565b60065481565b600080600160a060020a038516151561062e57600080fd5b6000831161063b57600080fd5b600160a060020a03331660009081526004602052604090205483111561066057600080fd5b6106896305f5e10061067d60065486610cb890919063ffffffff16565b9063ffffffff610ce316565b600160a060020a0333166000908152600460205260409020549091506106b5908463ffffffff610cfa16565b600160a060020a0333811660009081526004602052604090209190915585166108fc6106e7858463ffffffff610cfa16565b6040518115909202916000818181858888f1935050505015801561070f573d6000803e3d6000fd5b50600554610723908263ffffffff61046b16565b600555505060408051608081018252600160a060020a03338116825294851660208083018281528385019586526001606085018181526000948552600380855287862099865298909352949092209251835490881673ffffffffffffffffffffffffffffffffffffffff19918216178455915183850180549189169184169190911790559351600283015592519301805493909416929091169190911790915590565b600054600160a060020a031681565b600160a060020a03918216600090815260036020818152604080842094845293905291902001541690565b600160a060020a03331660009081526004602052604090205490565b600154600160a060020a031681565b6000805433600160a060020a0390811691161461084757600080fd5b60055461085b90600263ffffffff610ce316565b600154604051919250600160a060020a03169082156108fc029083906000818181858888f19350505050158015610896573d6000803e3d6000fd5b506005546108aa908263ffffffff610cfa16565b6005819055600254604051600160a060020a039091169180156108fc02916000818181858888f193505050501580156108e7573d6000803e3d6000fd5b50506000600555565b60005433600160a060020a0390811691161461090b57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60005433600160a060020a0390811691161461095557600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60005433600160a060020a0390811691161461099f57600080fd5b600160a060020a03811615156109b457600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008083905080600160a060020a03166370a08231846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610a5d57600080fd5b505af1158015610a71573d6000803e3d6000fd5b505050506040513d6020811015610a8757600080fd5b5051949350505050565b600080600160a060020a0386161515610aa957600080fd5b600160a060020a0385161515610abe57600080fd5b60008311610acb57600080fd5b50604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a03338116600483015230811660248301529151879285929084169163dd62ed3e916044808201926020929091908290030181600087803b158015610b3d57600080fd5b505af1158015610b51573d6000803e3d6000fd5b505050506040513d6020811015610b6757600080fd5b50511015610b7457600080fd5b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a0333811660048301528781166024830152604482018690529151918316916323b872dd916064808201926020929091908290030181600087803b158015610be857600080fd5b505af1158015610bfc573d6000803e3d6000fd5b505050506040513d6020811015610c1257600080fd5b505060408051608081018252600160a060020a03338116825296871660208281018281528385019788529989166060840190815260009283526003808352858420998452989091529290209051815490881673ffffffffffffffffffffffffffffffffffffffff19918216178255975160018083018054928a16928b16929092179091559451600282015590519401805494909516939095169290921790925550919050565b600080831515610ccb576000915061047e565b50828202828482811515610cdb57fe5b041461047a57fe5b6000808284811515610cf157fe5b04949350505050565b600082821115610d0657fe5b509003905600a165627a7a72305820e99e4f546c8211fcf5a4c353a534de431495cee102cb3d2d7489252a108a5d3c0029"
}