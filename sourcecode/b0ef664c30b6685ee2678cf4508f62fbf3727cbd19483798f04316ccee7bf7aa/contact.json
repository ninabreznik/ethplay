{
  "address": "0xd95e7d16000cbeb66acbf70b4a843d4346ff4555",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "KOZJIN",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-24\n*/\n\npragma solidity 0.5.8;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    require(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a);\n    return c;\n  }\n}\n\ncontract ERC20 {\n  function totalSupply()public view returns (uint256 total_Supply);\n  function balanceOf(address who)public view returns (uint256);\n  function allowance(address owner, address spender)public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value)public returns (bool ok);\n  function approve(address spender, uint256 value)public returns (bool ok);\n  function transfer(address to, uint256 value)public returns (bool ok);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract KOZJIN is ERC20 { \n    using SafeMath for uint256;\n    //--- Token configurations ----// \n    string private constant _name = \"KOZJIN Token\";\n    string private constant _symbol = \"KOZ\";\n    uint8 private constant _decimals = 18;\n    uint256 private constant _maxCap = 300000000 ether;\n    uint256 private _icoStartDate = 1560744000;   // 17-06-2019 12:00 GMT+8\n    uint256 private _icoEndDate = 1562558400;     // 08-07-2019 12:00 GMT+8\n    \n    //--- Token allocations -------//\n    uint256 private _totalsupply;\n\n    //--- Address -----------------//\n    address private _owner;\n    address payable private _ethFundMain;\n   \n    //--- Variables ---------------//\n    bool private _lockToken = true;\n    bool private _allowICO = true;\n    \n    mapping(address => uint256) private balances;\n    mapping(address => mapping(address => uint256)) private allowed;\n    mapping(address => bool) private locked;\n    \n    event Mint(address indexed from, address indexed to, uint256 amount);\n    event Burn(address indexed from, uint256 amount);\n    event ChangeReceiveWallet(address indexed newAddress);\n    event ChangeOwnerShip(address indexed newOwner);\n    event ChangeLockStatusFrom(address indexed investor, bool locked);\n    event ChangeTokenLockStatus(bool locked);\n    event ChangeAllowICOStatus(bool allow);\n    \n    modifier onlyOwner() {\n        require(msg.sender == _owner, \"Only owner is allowed\");\n        _;\n    }\n\n    modifier onlyICO() {\n        require(now >= _icoStartDate && now < _icoEndDate, \"CrowdSale is not running\");\n        _;\n    }\n\n    modifier onlyFinishedICO() {\n        require(now >= _icoEndDate, \"CrowdSale is running\");\n        _;\n    }\n    \n    modifier onlyAllowICO() {\n        require(_allowICO, \"ICO stopped\");\n        _;\n    }\n    \n    modifier onlyUnlockToken() {\n        require(!_lockToken, \"Token locked\");\n        _;\n    }\n\n    constructor() public\n    {\n        _owner = msg.sender;\n    }\n    \n    function name() public pure returns (string memory) {\n        return _name;\n    }\n    \n    function symbol() public pure returns (string memory) {\n        return _symbol;\n    }\n    \n    function decimals() public pure returns (uint8) {\n        return _decimals;\n    }\n    \n    function maxCap() public pure returns (uint256) {\n        return _maxCap;\n    }\n    \n    function owner() public view returns (address) {\n        return _owner;\n    }\n    \n    function ethFundMain() public view returns (address) {\n        return _ethFundMain;\n    }\n    \n    function icoStartDate() public view returns (uint256) {\n        return _icoStartDate;\n    }\n    \n    function icoEndDate() public view returns (uint256) {\n        return _icoEndDate;\n    }\n    \n    function lockToken() public view returns (bool) {\n        return _lockToken;\n    }\n    \n    function allowICO() public view returns (bool) {\n        return _allowICO;\n    }\n    \n    function lockStatusOf(address investor) public view returns (bool) {\n        return locked[investor];\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalsupply;\n    }\n    \n    function balanceOf(address investor) public view returns (uint256) {\n        return balances[investor];\n    }\n    \n    function approve(address _spender, uint256 _amount) public onlyFinishedICO onlyUnlockToken returns (bool)  {\n        require( _spender != address(0), \"Address can not be 0x0\");\n        require(balances[msg.sender] >= _amount, \"Balance does not have enough tokens\");\n        require(!locked[msg.sender], \"Sender address is locked\");\n        require(!locked[_spender], \"Spender address is locked\");\n        allowed[msg.sender][_spender] = _amount;\n        emit Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n  \n    function allowance(address _from, address _spender) public view returns (uint256) {\n        return allowed[_from][_spender];\n    }\n\n    function transfer(address _to, uint256 _amount) public onlyFinishedICO onlyUnlockToken returns (bool) {\n        require( _to != address(0), \"Receiver can not be 0x0\");\n        require(!locked[msg.sender], \"Sender address is locked\");\n        require(!locked[_to], \"Receiver address is locked\");\n        balances[msg.sender] = (balances[msg.sender]).sub(_amount);\n        balances[_to] = (balances[_to]).add(_amount);\n        emit Transfer(msg.sender, _to, _amount);\n        return true;\n    }\n    \n    function transferFrom( address _from, address _to, uint256 _amount ) public onlyFinishedICO onlyUnlockToken returns (bool)  {\n        require( _to != address(0), \"Receiver can not be 0x0\");\n        require(!locked[_from], \"From address is locked\");\n        require(!locked[_to], \"Receiver address is locked\");\n        balances[_from] = (balances[_from]).sub(_amount);\n        allowed[_from][msg.sender] = (allowed[_from][msg.sender]).sub(_amount);\n        balances[_to] = (balances[_to]).add(_amount);\n        emit Transfer(_from, _to, _amount);\n        return true;\n    }\n\n    function burn(uint256 _value) public onlyOwner returns (bool) {\n        balances[msg.sender] = (balances[msg.sender]).sub(_value);            \n        _totalsupply = _totalsupply.sub(_value);                     \n        emit Burn(msg.sender, _value);\n        return true;\n    }\n\n    function stopTransferToken() external onlyOwner {\n        _lockToken = true;\n        emit ChangeTokenLockStatus(true);\n    }\n\n    function startTransferToken() external onlyOwner {\n        _lockToken = false;\n        emit ChangeTokenLockStatus(false);\n    }\n\n    function () external payable onlyICO onlyAllowICO {\n        \n    }\n\n    function manualMint(address receiver, uint256 _value) public onlyOwner{\n        uint256 value = _value.mul(10 ** 18);\n        mint(_owner, receiver, value);\n    }\n\n    function mint(address from, address receiver, uint256 value) internal {\n        require(receiver != address(0), \"Address can not be 0x0\");\n        require(value > 0, \"Value should larger than 0\");\n        balances[receiver] = balances[receiver].add(value);\n        _totalsupply = _totalsupply.add(value);\n        require(_totalsupply <= _maxCap, \"CrowdSale hit max cap\");\n        emit Mint(from, receiver, value);\n        emit Transfer(address(0), receiver, value);\n    }\n    \n    function haltCrowdSale() external onlyOwner {\n        _allowICO = false;\n        emit ChangeAllowICOStatus(false);\n    }\n\n    function resumeCrowdSale() external onlyOwner {\n        _allowICO = true;\n        emit ChangeAllowICOStatus(true);\n    }\n\n    function changeReceiveWallet(address payable newAddress) external onlyOwner {\n        require(newAddress != address(0), \"Address can not be 0x0\");\n        _ethFundMain = newAddress;\n        emit ChangeReceiveWallet(newAddress);\n    }\n\n\tfunction assignOwnership(address newOwner) external onlyOwner {\n\t    require(newOwner != address(0), \"Address can not be 0x0\");\n\t    _owner = newOwner;\n\t    emit ChangeOwnerShip(newOwner);\n\t}\n\n    function forwardFunds() external onlyOwner {\n        require(_ethFundMain != address(0));\n        _ethFundMain.transfer(address(this).balance);\n    }\n\n    function haltTokenTransferFromAddress(address investor) external onlyOwner {\n        locked[investor] = true;\n        emit ChangeLockStatusFrom(investor, true);\n    }\n\n    function resumeTokenTransferFromAddress(address investor) external onlyOwner {\n        locked[investor] = false;\n        emit ChangeLockStatusFrom(investor, false);\n    }\n}",
  "bytecode": "6080604052635d071040600055635d22bfc06001556001600460146101000a81548160ff0219169083151502179055506001600460156101000a81548160ff02191690831515021790555034801561005657600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061300a806100a76000396000f3fe6080604052600436106101b75760003560e01c80638da5cb5b116100ec578063bca7a9e21161008a578063d73019e911610064578063d73019e91461099e578063dd62ed3e146109c9578063e34e32c014610a4e578063e4c5ff4614610a9f576101b7565b8063bca7a9e214610907578063c3e06be914610936578063d344e01b14610987576101b7565b80639d735286116100c65780639d735286146108375780639e542af91461084e578063a9059cbb1461087d578063b57934e4146108f0576101b7565b80638da5cb5b146106ff57806395d89b41146107565780639610b1bc146107e6576101b7565b80632a62738b11610159578063551a537611610133578063551a5376146105db5780636bf82d741461062c57806370a08231146106835780637d4d3128146106e8576101b7565b80632a62738b1461052c578063313ce5671461055757806342966c6814610588576101b7565b80630fe09c1f116101955780630fe09c1f146103da57806318160ddd1461044357806323548b8b1461046e57806323b872dd14610499576101b7565b8063037c983a146102c057806306fdde03146102d7578063095ea7b314610367575b60005442101580156101ca575060015442105b61023c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f43726f776453616c65206973206e6f742072756e6e696e67000000000000000081525060200191505060405180910390fd5b600460159054906101000a900460ff166102be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f49434f2073746f7070656400000000000000000000000000000000000000000081525060200191505060405180910390fd5b005b3480156102cc57600080fd5b506102d5610afa565b005b3480156102e357600080fd5b506102ec610c16565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561032c578082015181840152602081019050610311565b50505050905090810190601f1680156103595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561037357600080fd5b506103c06004803603604081101561038a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c53565b604051808215151515815260200191505060405180910390f35b3480156103e657600080fd5b50610429600480360360208110156103fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110fb565b604051808215151515815260200191505060405180910390f35b34801561044f57600080fd5b50610458611151565b6040518082815260200191505060405180910390f35b34801561047a57600080fd5b5061048361115b565b6040518082815260200191505060405180910390f35b3480156104a557600080fd5b50610512600480360360608110156104bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061116e565b604051808215151515815260200191505060405180910390f35b34801561053857600080fd5b50610541611737565b6040518082815260200191505060405180910390f35b34801561056357600080fd5b5061056c611741565b604051808260ff1660ff16815260200191505060405180910390f35b34801561059457600080fd5b506105c1600480360360208110156105ab57600080fd5b810190808035906020019092919050505061174a565b604051808215151515815260200191505060405180910390f35b3480156105e757600080fd5b5061062a600480360360208110156105fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611916565b005b34801561063857600080fd5b50610641611a87565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561068f57600080fd5b506106d2600480360360208110156106a657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ab1565b6040518082815260200191505060405180910390f35b3480156106f457600080fd5b506106fd611afa565b005b34801561070b57600080fd5b50610714611c16565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561076257600080fd5b5061076b611c40565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107ab578082015181840152602081019050610790565b50505050905090810190601f1680156107d85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156107f257600080fd5b506108356004803603602081101561080957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c7d565b005b34801561084357600080fd5b5061084c611dee565b005b34801561085a57600080fd5b50610863611f8f565b604051808215151515815260200191505060405180910390f35b34801561088957600080fd5b506108d6600480360360408110156108a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611fa6565b604051808215151515815260200191505060405180910390f35b3480156108fc57600080fd5b5061090561245f565b005b34801561091357600080fd5b5061091c61257b565b604051808215151515815260200191505060405180910390f35b34801561094257600080fd5b506109856004803603602081101561095957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612592565b005b34801561099357600080fd5b5061099c61277f565b005b3480156109aa57600080fd5b506109b361289b565b6040518082815260200191505060405180910390f35b3480156109d557600080fd5b50610a38600480360360408110156109ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128a4565b6040518082815260200191505060405180910390f35b348015610a5a57600080fd5b50610a9d60048036036020811015610a7157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061292b565b005b348015610aab57600080fd5b50610af860048036036040811015610ac257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612b18565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f6e6c79206f776e657220697320616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b6001600460156101000a81548160ff0219169083151502179055507f5571373430bfff0f943720da3e22ef49c5abb2e8d16cae3f14d4f14836d544286001604051808215151515815260200191505060405180910390a1565b60606040518060400160405280600c81526020017f4b4f5a4a494e20546f6b656e0000000000000000000000000000000000000000815250905090565b6000600154421015610ccd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776453616c652069732072756e6e696e6700000000000000000000000081525060200191505060405180910390fd5b600460149054906101000a900460ff1615610d50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f546f6b656e206c6f636b6564000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610df3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f416464726573732063616e206e6f74206265203078300000000000000000000081525060200191505060405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610e8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612fbc6023913960400191505060405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610f4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f53656e6465722061646472657373206973206c6f636b6564000000000000000081525060200191505060405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561100b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f5370656e6465722061646472657373206973206c6f636b65640000000000000081525060200191505060405180910390fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600254905090565b60006af8277896582678ac000000905090565b60006001544210156111e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776453616c652069732072756e6e696e6700000000000000000000000081525060200191505060405180910390fd5b600460149054906101000a900460ff161561126b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f546f6b656e206c6f636b6564000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561130e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f52656365697665722063616e206e6f742062652030783000000000000000000081525060200191505060405180910390fd5b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156113ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f46726f6d2061646472657373206973206c6f636b65640000000000000000000081525060200191505060405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561148e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f52656365697665722061646472657373206973206c6f636b656400000000000081525060200191505060405180910390fd5b6114e082600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c2c90919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115b282600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c2c90919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061168482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c4690919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000600154905090565b60006012905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461180f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f6e6c79206f776e657220697320616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b61186182600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c2c90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118b982600254612c2c90919063ffffffff16565b6002819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a260019050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f6e6c79206f776e657220697320616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f187fdc040fcaca1dc87d7e02d75429a92dc3a848899b7b3a4b30669748cefa156001604051808215151515815260200191505060405180910390a250565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611bbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f6e6c79206f776e657220697320616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b6000600460146101000a81548160ff0219169083151502179055507f894c72eea98e97be029b3bcd6b96500cb0cc6369765f319984805cfe84d7dd9a6000604051808215151515815260200191505060405180910390a1565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606040518060400160405280600381526020017f4b4f5a0000000000000000000000000000000000000000000000000000000000815250905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f6e6c79206f776e657220697320616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f187fdc040fcaca1dc87d7e02d75429a92dc3a848899b7b3a4b30669748cefa156000604051808215151515815260200191505060405180910390a250565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611eb1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f6e6c79206f776e657220697320616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f0d57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015611f8c573d6000803e3d6000fd5b50565b6000600460159054906101000a900460ff16905090565b6000600154421015612020576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776453616c652069732072756e6e696e6700000000000000000000000081525060200191505060405180910390fd5b600460149054906101000a900460ff16156120a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f546f6b656e206c6f636b6564000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612146576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f52656365697665722063616e206e6f742062652030783000000000000000000081525060200191505060405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f53656e6465722061646472657373206973206c6f636b6564000000000000000081525060200191505060405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156122c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f52656365697665722061646472657373206973206c6f636b656400000000000081525060200191505060405180910390fd5b61231882600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c2c90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506123ad82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c4690919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612522576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f6e6c79206f776e657220697320616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b6000600460156101000a81548160ff0219169083151502179055507f5571373430bfff0f943720da3e22ef49c5abb2e8d16cae3f14d4f14836d544286000604051808215151515815260200191505060405180910390a1565b6000600460149054906101000a900460ff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612655576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f6e6c79206f776e657220697320616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156126f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f416464726573732063616e206e6f74206265203078300000000000000000000081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f4a2ec18264bbdd16b633de13edfc2756c0c761c927de5a7bdb87e3071a6009cd60405160405180910390a250565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612842576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f6e6c79206f776e657220697320616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b6001600460146101000a81548160ff0219169083151502179055507f894c72eea98e97be029b3bcd6b96500cb0cc6369765f319984805cfe84d7dd9a6001604051808215151515815260200191505060405180910390a1565b60008054905090565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146129ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f6e6c79206f776e657220697320616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612a91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f416464726573732063616e206e6f74206265203078300000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167ff853f657890f173ede6ab1b601d3d7f6b228bdd2916ef68c8b060c377c82e7cb60405160405180910390a250565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612bdb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f6e6c79206f776e657220697320616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b6000612bf8670de0b6b3a764000083612c6590919063ffffffff16565b9050612c27600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168483612c9f565b505050565b600082821115612c3b57600080fd5b818303905092915050565b600080828401905083811015612c5b57600080fd5b8091505092915050565b600080831415612c785760009050612c99565b6000828402905082848281612c8957fe5b0414612c9457600080fd5b809150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612d42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f416464726573732063616e206e6f74206265203078300000000000000000000081525060200191505060405180910390fd5b60008111612db8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f56616c75652073686f756c64206c6172676572207468616e203000000000000081525060200191505060405180910390fd5b612e0a81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c4690919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612e6281600254612c4690919063ffffffff16565b6002819055506af8277896582678ac0000006002541115612eeb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f43726f776453616c6520686974206d617820636170000000000000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8836040518082815260200191505060405180910390a38173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505056fe42616c616e636520646f6573206e6f74206861766520656e6f75676820746f6b656e73a165627a7a723058206c7645e5c0b8a383b78b4fd55731eaf139d212f16c1245d0dc6e175774cb451b0029"
}