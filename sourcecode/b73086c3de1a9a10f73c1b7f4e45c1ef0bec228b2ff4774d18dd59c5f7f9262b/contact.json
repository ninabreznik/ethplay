{
  "address": "0x4fb2445742d0c413a917b2484960b0d80950b540",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Bible",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-04\n*/\n\npragma solidity ^0.4.16;\n\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external; }\n\ncontract SafeMath {\n    function add(uint256 x, uint256 y) pure internal returns(uint256) {\n      uint256 z = x + y;\n      assert((z >= x) && (z >= y));\n      return z;\n    }\n\n    function subtract(uint256 x, uint256 y) pure internal returns(uint256) {\n      assert(x >= y);\n      uint256 z = x - y;\n      return z;\n    }\n}\n\ncontract ERC20 {\n    function totalSupply() constant public returns (uint supply);\n    function balanceOf(address _owner) constant public returns (uint256 balance);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool balance);\n    function approve(address _spender, uint256 _value) public returns (bool balance);\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Burn(address indexed from, uint256 value);\n}\n\ncontract Bible is ERC20, SafeMath {\n\n    string public name = \"Bible\";      //  token name\n    string public symbol = \"GIB\";           //  token symbol\n    uint256 public decimals = 18;            //  token digit\n    uint256 public totalSupply = 0;\n    string public version = \"1.0.0\";\n    address creator = 0x0;\n    /**\n     *  0 : init, 1 : limited, 2 : running, 3 : finishing\n     */\n    uint8 public tokenStatus = 0;\n      \n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n    \n    function Bible() public {\n        creator = msg.sender;\n        tokenStatus = 2;\n        totalSupply = 11000000000 * 10 ** uint256(decimals);\n        balanceOf[msg.sender] = totalSupply;\n    }\n\n    modifier isCreator {\n        assert(creator == msg.sender);\n        _;\n    }\n\n    modifier isRunning {\n        assert(tokenStatus == 2);\n        _;\n    }\n\n    modifier validAddress {\n        assert(0x0 != msg.sender);\n        _;\n    }\n\n    function status(uint8 _status) isCreator public {\n        tokenStatus = _status;\n    }\n    \n    function getStatus() constant public returns (uint8 _status) {\n        return tokenStatus;\n    }\n    \n    function totalSupply() constant public returns (uint supply) {\n        return totalSupply;\n    }\n\n    function balanceOf(address _owner) constant public returns (uint256 balance) {\n        return balanceOf[_owner];\n    }\n    \n    function _transfer(address _from, address _to, uint _value) isRunning validAddress internal {\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        uint previousBalances = SafeMath.add(balanceOf[_from], balanceOf[_to]);\n        balanceOf[_from] = SafeMath.subtract(balanceOf[_from], _value);\n        balanceOf[_to] = SafeMath.add(balanceOf[_to], _value);\n        emit Transfer(_from, _to, _value);\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n    \n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n    \n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n    \n    function approve(address _spender, uint256 _value) isRunning validAddress public returns (bool success) {\n        require(_value == 0 || allowance[msg.sender][_spender] == 0);\n        allowance[msg.sender][_spender] = _value;\n        return true;\n    }\n    \n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n    \n    function burn(uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough\n        balanceOf[msg.sender] -= _value;            // Subtract from the sender\n        totalSupply -= _value;                      // Updates totalSupply\n        emit Burn(msg.sender, _value);\n        return true;\n    }\n    \n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] >= _value);                // Check if the targeted balance is enough\n        require(_value <= allowance[_from][msg.sender]);    // Check allowance\n        balanceOf[_from] -= _value;                         // Subtract from the targeted balance\n        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance\n        totalSupply -= _value;                              // Update totalSupply\n        emit Burn(_from, _value);\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStatus\",\"outputs\":[{\"name\":\"_status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"status\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600560808190527f4269626c6500000000000000000000000000000000000000000000000000000060a090815261003e916000919061014e565b506040805180820190915260038082527f474942000000000000000000000000000000000000000000000000000000000060209092019182526100839160019161014e565b50601260025560006003556040805180820190915260058082527f312e302e3000000000000000000000000000000000000000000000000000000060209092019182526100d29160049161014e565b5060058054600160a860020a03191690553480156100ef57600080fd5b506005805433600160a060020a0319909116811760a060020a60ff0219167402000000000000000000000000000000000000000017909155600254600a0a64028fa6ae00026003819055600091825260066020526040909120556101e9565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061018f57805160ff19168380011785556101bc565b828001600101855582156101bc579182015b828111156101bc5782518255916020019190600101906101a1565b506101c89291506101cc565b5090565b6101e691905b808211156101c857600081556001016101d2565b90565b610ae3806101f86000396000f3006080604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100ea578063095ea7b31461017457806318160ddd146101ac57806323b872dd146101d3578063313ce567146101fd57806342966c68146102125780634e69d5601461022a57806354fd4d501461025557806370a082311461026a57806379cc67901461028b57806395d89b41146102af578063a189a487146102c4578063a6921956146102e1578063a9059cbb146102f6578063cae9ca511461031a578063dd62ed3e14610383575b600080fd5b3480156100f657600080fd5b506100ff6103aa565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610139578181015183820152602001610121565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018057600080fd5b50610198600160a060020a0360043516602435610438565b604080519115158252519081900360200190f35b3480156101b857600080fd5b506101c16104c1565b60408051918252519081900360200190f35b3480156101df57600080fd5b50610198600160a060020a03600435811690602435166044356104c7565b34801561020957600080fd5b506101c1610536565b34801561021e57600080fd5b5061019860043561053c565b34801561023657600080fd5b5061023f6105b4565b6040805160ff9092168252519081900360200190f35b34801561026157600080fd5b506100ff6105c4565b34801561027657600080fd5b506101c1600160a060020a036004351661061f565b34801561029757600080fd5b50610198600160a060020a036004351660243561063a565b3480156102bb57600080fd5b506100ff61070b565b3480156102d057600080fd5b506102df60ff60043516610765565b005b3480156102ed57600080fd5b5061023f6107aa565b34801561030257600080fd5b50610198600160a060020a03600435166024356107ba565b34801561032657600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610198948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506107d09650505050505050565b34801561038f57600080fd5b506101c1600160a060020a03600435811690602435166108e9565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104305780601f1061040557610100808354040283529160200191610430565b820191906000526020600020905b81548152906001019060200180831161041357829003601f168201915b505050505081565b60055460009060a060020a900460ff1660021461045157fe5b33151561045a57fe5b8115806104885750336000908152600760209081526040808320600160a060020a0387168452909152902054155b151561049357600080fd5b50336000908152600760209081526040808320600160a060020a039590951683529390529190912055600190565b60035490565b600160a060020a03831660009081526007602090815260408083203384529091528120548211156104f757600080fd5b600160a060020a038416600090815260076020908152604080832033845290915290208054839003905561052c848484610906565b5060019392505050565b60025481565b3360009081526006602052604081205482111561055857600080fd5b3360008181526006602090815260409182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b60055460a060020a900460ff1690565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104305780601f1061040557610100808354040283529160200191610430565b600160a060020a031660009081526006602052604090205490565b600160a060020a03821660009081526006602052604081205482111561065f57600080fd5b600160a060020a038316600090815260076020908152604080832033845290915290205482111561068f57600080fd5b600160a060020a0383166000818152600660209081526040808320805487900390556007825280832033845282529182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a250600192915050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104305780601f1061040557610100808354040283529160200191610430565b600554600160a060020a0316331461077957fe5b6005805460ff90921660a060020a0274ff000000000000000000000000000000000000000019909216919091179055565b60055460a060020a900460ff1681565b60006107c7338484610906565b50600192915050565b6000836107dd8185610438565b156108e1576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b8381101561087557818101518382015260200161085d565b50505050905090810190601f1680156108a25780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156108c457600080fd5b505af11580156108d8573d6000803e3d6000fd5b50505050600191505b509392505050565b600760209081526000928352604080842090915290825290205481565b60055460009060a060020a900460ff1660021461091f57fe5b33151561092857fe5b600160a060020a03841660009081526006602052604090205482111561094d57600080fd5b600160a060020a038316600090815260066020526040902054828101101561097457600080fd5b600160a060020a038085166000908152600660205260408082205492861682529020546109a19190610a7f565b600160a060020a0385166000908152600660205260409020549091506109c79083610aa3565b600160a060020a0380861660009081526006602052604080822093909355908516815220546109f69083610a7f565b600160a060020a0380851660008181526006602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3600160a060020a03808416600090815260066020526040808220549287168252902054018114610a7957fe5b50505050565b6000828201838110801590610a945750828110155b1515610a9c57fe5b9392505050565b60008082841015610ab057fe5b50509003905600a165627a7a72305820a195ad2951d63a541348a71dd0e83f2bafcacb293991404f31c0e6100c539daf0029"
}