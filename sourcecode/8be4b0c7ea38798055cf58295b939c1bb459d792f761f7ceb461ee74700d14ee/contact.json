{
  "address": "0xd8a1db7aa1e0ec45e77b0108006dc311cd9d00e7",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Pandemica",
  "compilerVersion": "v0.2.1+commit.91a6b35",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-11\n*/\n\ncontract Pandemica\n{\n    struct _Tx {\n        address txuser;\n        uint txvalue;\n    }\n    _Tx[] public Tx;\n    uint public counter;\n    \n    address owner;\n    \n    \n    modifier onlyowner\n    {\n        if (msg.sender == owner)\n        _\n    }\n    function Pandemica() {\n        owner = msg.sender;\n        \n    }\n    \n    function() {\n        Sort();\n        if (msg.sender == owner )\n        {\n            Count();\n        }\n    }\n    \n    function Sort() internal\n    {\n        uint feecounter;\n            feecounter+=msg.value/5;\n\t        owner.send(feecounter);\n\t  \n\t        feecounter=0;\n\t   uint txcounter=Tx.length;     \n\t   counter=Tx.length;\n\t   Tx.length++;\n\t   Tx[txcounter].txuser=msg.sender;\n\t   Tx[txcounter].txvalue=msg.value;   \n    }\n    \n    function Count() onlyowner {\n        while (counter>0) {\n            Tx[counter].txuser.send((Tx[counter].txvalue/100)*3);\n            counter-=1;\n        }\n    }\n       \n}",
  "bytecode": "606060405260028054600160a060020a03191633179055610317806100246000396000f3606060405236156100355760e060020a60003504633327d22f81146100d357806361bc221a1461014657806393a8333e1461014f575b6102216102236002546040516005340491600091600160a060020a03909116908290849082818181858883f1505081546001818155810180845592955093508392508491905082801582901161027c5760020281600202836000526020600020918201910161027c91905b8082111561031357805473ffffffffffffffffffffffffffffffffffffffff1916815560006001919091019081556100a0565b610244600435600080548290811015610002575080526002027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638101547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5649190910154600160a060020a03919091169082565b61026a60015481565b6102215b60025433600160a060020a0390811691161415610242575b600154600090111561024257600154600080549091908110156100025781805260015482546002929092027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154600160a060020a031692916064918391811015610002576040516002919091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5640154929092046003029190818181858883f15050600180546000190190555061016b915050565b005b60025433600160a060020a039081169116141561024257610242610153565b565b6040518083600160a060020a031681526020018281526020019250505060405180910390f35b60408051918252519081900360200190f35b50505050336000600050828154811015610002578180526002027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301805473ffffffffffffffffffffffffffffffffffffffff191690921790915580543491908390811015610002576002027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5640191909155505050565b509056",
  "constructorArguments": "19091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5640154929092046003029190818181858883f15050600180546000190190555061016b915050565b005b60025433600160a060020a039081169116141561024257610242610153565b565b6040518083600160a060020a031681526020018281526020019250505060405180910390f35b60408051918252519081900360200190f35b50505050336000600050828154811015610002578180526002027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301805473ffffffffffffffffffffffffffffffffffffffff191690921790915580543491908390811015610002576002027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5640191909155505050565b509056"
}