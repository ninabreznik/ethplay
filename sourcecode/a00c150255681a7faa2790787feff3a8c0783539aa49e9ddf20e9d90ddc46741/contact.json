{
  "address": "0x9ed3b46d93f942d1f967584fb3099ef5262a95b1",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BitNauticCrowdsale",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-01\n*/\n\npragma solidity ^0.4.13;\n\ncontract Ownable {\n  address internal owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public returns (bool) {\n    require(newOwner != address(0x0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n\n    return true;\n  }\n}\n\ncontract BitNauticWhitelist is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public usdPerEth;\n\n    constructor(uint256 _usdPerEth) public {\n        usdPerEth = _usdPerEth;\n    }\n\n    mapping(address => bool) public AMLWhitelisted;\n    mapping(address => uint256) public contributionCap;\n\n    /**\n     * @dev add an address to the whitelist\n     * @param addr address\n     * @return true if the address was added to the whitelist, false if the address was already in the whitelist\n     */\n    function setKYCLevel(address addr, uint8 level) onlyOwner public returns (bool) {\n        if (level >= 3) {\n            contributionCap[addr] = 50000 ether; // crowdsale hard cap\n        } else if (level == 2) {\n            contributionCap[addr] = SafeMath.div(500000 * 10 ** 18, usdPerEth); // KYC Tier 2 - 500k USD\n        } else if (level == 1) {\n            contributionCap[addr] = SafeMath.div(3000 * 10 ** 18, usdPerEth); // KYC Tier 1 - 3k USD\n        } else {\n            contributionCap[addr] = 0;\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev add addresses to the whitelist\n     * @param addrs addresses\n     * @return true if at least one address was added to the whitelist,\n     * false if all addresses were already in the whitelist\n     */\n    function setKYCLevelsBulk(address[] addrs, uint8[] levels) onlyOwner external returns (bool success) {\n        require(addrs.length == levels.length);\n\n        for (uint256 i = 0; i < addrs.length; i++) {\n            assert(setKYCLevel(addrs[i], levels[i]));\n        }\n\n        return true;\n    }\n\n    function setAMLWhitelisted(address addr, bool whitelisted) onlyOwner public returns (bool) {\n        AMLWhitelisted[addr] = whitelisted;\n\n        return true;\n    }\n\n    function setAMLWhitelistedBulk(address[] addrs, bool[] whitelisted) onlyOwner external returns (bool) {\n        require(addrs.length == whitelisted.length);\n\n        for (uint256 i = 0; i < addrs.length; i++) {\n            assert(setAMLWhitelisted(addrs[i], whitelisted[i]));\n        }\n\n        return true;\n    }\n}\n\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\nlibrary SafeMath {\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        if (a == 0) {\n            return 0;\n        }\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        // uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return a / b;\n    }\n\n    /**\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract Crowdsale is Ownable, Pausable {\n    using SafeMath for uint256;\n\n    // The token being sold\n    MintableToken public token;\n\n    // start and end timestamps where investments are allowed (both inclusive)\n    uint256 public ICOStartTime;\n    uint256 public ICOEndTime;\n\n    // wallet address where funds will be saved\n    address internal wallet;\n\n    // amount of raised money in wei\n    uint256 public weiRaised; // internal\n\n    // Public Supply\n    uint256 public publicSupply;\n\n    /**\n     * event for token purchase logging\n     * @param purchaser who paid for the tokens\n     * @param beneficiary who got the tokens\n     * @param value weis paid for purchase\n     * @param amount amount of tokens purchased\n     */\n    event TokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\n\n    // BitNautic Crowdsale constructor\n    constructor(MintableToken _token, uint256 _publicSupply, uint256 _startTime, uint256 _endTime, address _wallet) public {\n        require(_endTime >= _startTime);\n        require(_wallet != 0x0);\n\n        // BitNautic token creation\n        token = _token;\n\n        // total supply of token for the crowdsale\n        publicSupply = _publicSupply;\n\n        // Pre-ICO start Time\n        ICOStartTime = _startTime;\n\n        // ICO end Time\n        ICOEndTime = _endTime;\n\n        // wallet where funds will be saved\n        wallet = _wallet;\n    }\n\n    // fallback function can be used to buy tokens\n    function() public payable {\n        buyTokens(msg.sender);\n    }\n\n    // High level token purchase function\n    function buyTokens(address beneficiary) whenNotPaused public payable {\n        require(beneficiary != 0x0);\n        require(validPurchase());\n\n        // minimum investment should be 0.05 ETH\n        uint256 lowerPurchaseLimit = 0.05 ether;\n        require(msg.value >= lowerPurchaseLimit);\n\n        assert(_tokenPurchased(msg.sender, beneficiary, msg.value));\n\n        // update state\n        weiRaised = weiRaised.add(msg.value);\n\n        forwardFunds();\n    }\n\n    function _tokenPurchased(address /* buyer */, address /* beneficiary */, uint256 /* weiAmount */) internal returns (bool) {\n        // TO BE OVERLOADED IN SUBCLASSES\n        return true;\n    }\n\n    // send ether to the fund collection wallet\n    // override to create custom fund forwarding mechanisms\n    function forwardFunds() internal {\n        wallet.transfer(msg.value);\n    }\n\n    // @return true if the transaction can buy tokens\n    function validPurchase() internal constant returns (bool) {\n        bool withinPeriod = ICOStartTime <= now && now <= ICOEndTime;\n        bool nonZeroPurchase = msg.value != 0;\n\n        return withinPeriod && nonZeroPurchase;\n    }\n\n    // @return true if crowdsale event has ended\n    function hasEnded() public constant returns (bool) {\n        return now > ICOEndTime;\n    }\n\n    bool public checkBurnTokens = false;\n\n    function burnTokens() onlyOwner public returns (bool) {\n        require(hasEnded());\n        require(!checkBurnTokens);\n\n        token.mint(0x0, publicSupply);\n        token.burnTokens(publicSupply);\n        publicSupply = 0;\n        checkBurnTokens = true;\n\n        return true;\n    }\n\n    function getTokenAddress() onlyOwner public view returns (address) {\n        return address(token);\n    }\n}\n\ncontract CappedCrowdsale is Crowdsale {\n  using SafeMath for uint256;\n\n  uint256 internal cap;\n\n  constructor(uint256 _cap) public {\n    require(_cap > 0);\n    cap = _cap;\n  }\n\n  // overriding Crowdsale#validPurchase to add extra cap logic\n  // @return true if investors can buy at the moment\n  function validPurchase() internal constant returns (bool) {\n    bool withinCap = weiRaised.add(msg.value) <= cap;\n    return super.validPurchase() && withinCap;\n  }\n\n  // overriding Crowdsale#hasEnded to add cap logic\n  // @return true if crowdsale event has ended\n  function hasEnded() public constant returns (bool) {\n    bool capReached = weiRaised >= cap;\n    return super.hasEnded() || capReached;\n  }\n\n}\n\ncontract FinalizableCrowdsale is Crowdsale {\n    using SafeMath for uint256;\n\n    bool isFinalized = false;\n\n    event Finalized();\n\n    /**\n     * @dev Must be called after crowdsale ends, to do some extra finalization\n     * work. Calls the contract's finalization function.\n     */\n    function finalizeCrowdsale() onlyOwner public {\n        require(!isFinalized);\n        require(hasEnded());\n\n        finalization();\n        emit Finalized();\n\n        isFinalized = true;\n    }\n\n\n    /**\n     * @dev Can be overridden to add finalization logic. The overriding function\n     * should call super.finalization() to ensure the chain of finalization is\n     * executed entirely.\n     */\n    function finalization() internal {\n    }\n}\n\ncontract RefundVault is Ownable {\n  using SafeMath for uint256;\n\n  enum State { Active, Refunding, Closed }\n\n  mapping (address => uint256) public deposited;\n  address public wallet;\n  State public state;\n\n  event Closed();\n  event RefundsEnabled();\n  event Refunded(address indexed beneficiary, uint256 weiAmount);\n\n  constructor(address _wallet) public {\n    require(_wallet != 0x0);\n    wallet = _wallet;\n    state = State.Active;\n  }\n\n  function deposit(address investor) onlyOwner public payable {\n    require(state == State.Active);\n    deposited[investor] = deposited[investor].add(msg.value);\n  }\n\n  function close() onlyOwner public {\n    require(state == State.Active);\n    state = State.Closed;\n    emit Closed();\n    wallet.transfer(address(this).balance);\n  }\n\n  function enableRefunds() onlyOwner public {\n    require(state == State.Active);\n    state = State.Refunding;\n    emit RefundsEnabled();\n  }\n\n  function refund(address investor) public {\n    require(state == State.Refunding);\n    uint256 depositedValue = deposited[investor];\n    deposited[investor] = 0;\n    investor.transfer(depositedValue);\n    emit Refunded(investor, depositedValue);\n  }\n}\n\ncontract RefundableCrowdsale is FinalizableCrowdsale {\n    using SafeMath for uint256;\n\n    // minimum amount of funds to be raised in weis\n    uint256 internal goal;\n    bool internal _goalReached = false;\n    // refund vault used to hold funds while crowdsale is running\n    RefundVault private vault;\n\n    constructor(uint256 _goal) public {\n        require(_goal > 0);\n        vault = new RefundVault(wallet);\n        goal = _goal;\n    }\n\n    // We're overriding the fund forwarding from Crowdsale.\n    // In addition to sending the funds, we want to call\n    // the RefundVault deposit function\n    function forwardFunds() internal {\n        vault.deposit.value(msg.value)(msg.sender);\n    }\n\n    // if crowdsale is unsuccessful, investors can claim refunds here\n    function claimRefund() public {\n        require(isFinalized);\n        require(!goalReached());\n\n        vault.refund(msg.sender);\n    }\n\n    // vault finalization task, called when owner calls finalize()\n    function finalization() internal {\n        if (goalReached()) {\n            vault.close();\n        } else {\n            vault.enableRefunds();\n        }\n        super.finalization();\n    }\n\n    function goalReached() public returns (bool) {\n        if (weiRaised >= goal) {\n            _goalReached = true;\n        }\n\n        return _goalReached;\n    }\n\n    //  function updateGoalCheck() onlyOwner public {\n    //    _goalReached = true;\n    //  }\n\n    function getVaultAddress() onlyOwner public view returns (address) {\n        return vault;\n    }\n}\n\ncontract BitNauticCrowdsale is CappedCrowdsale, RefundableCrowdsale {\n    uint256 constant public crowdsaleInitialSupply = 35000000 * 10 ** 18; // 70% of token cap\n//    uint256 constant public crowdsaleSoftCap = 2 ether;\n//    uint256 constant public crowdsaleHardCap = 10 ether;\n    uint256 constant public crowdsaleSoftCap = 5000 ether;\n    uint256 constant public crowdsaleHardCap = 50000 ether;\n\n    uint256 constant public preICOStartTime = 1525132800;          // 2018-05-01 00:00 GMT+0\n    uint256 constant public mainICOStartTime = 1527811200;         // 2018-06-01 00:00 GMT+0\n    uint256 constant public mainICOFirstWeekEndTime = 1528416000;  // 2018-06-08 00:00 GMT+0\n    uint256 constant public mainICOSecondWeekEndTime = 1529020800; // 2018-06-15 00:00 GMT+0\n    uint256 constant public mainICOThirdWeekEndTime = 1529625600;  // 2018-06-22 00:00 GMT+0\n    uint256 constant public mainICOFourthWeekEndTime = 1530403200; // 2018-07-01 00:00 GMT+0\n    uint256 constant public mainICOEndTime = 1532995200;           // 2018-07-31 00:00 GMT+0\n\n//    uint256 public preICOStartTime = now;          // 2018-05-01 00:00 GMT+0\n//    uint256 constant public mainICOStartTime = preICOStartTime;         // 2018-06-01 00:00 GMT+0\n//    uint256 constant public mainICOFirstWeekEndTime = mainICOStartTime;  // 2018-06-08 00:00 GMT+0\n//    uint256 constant public mainICOSecondWeekEndTime = mainICOFirstWeekEndTime; // 2018-06-15 00:00 GMT+0\n//    uint256 constant public mainICOThirdWeekEndTime = mainICOSecondWeekEndTime;  // 2018-06-22 00:00 GMT+0\n//    uint256 constant public mainICOFourthWeekEndTime = mainICOThirdWeekEndTime; // 2018-07-01 00:00 GMT+0\n//    uint256 constant public mainICOEndTime = mainICOFourthWeekEndTime + 5 minutes;           // 2018-07-30 00:00 GMT+0\n\n    uint256 constant public tokenBaseRate = 500; // 1 ETH = 500 BTNT\n\n    // bonuses in percentage\n    uint256 constant public preICOBonus = 30;\n    uint256 constant public firstWeekBonus = 20;\n    uint256 constant public secondWeekBonus = 15;\n    uint256 constant public thirdWeekBonus = 10;\n    uint256 constant public fourthWeekBonus = 5;\n\n    uint256 public teamSupply =     3000000 * 10 ** 18; // 6% of token cap\n    uint256 public bountySupply =   2500000 * 10 ** 18; // 5% of token cap\n    uint256 public reserveSupply =  5000000 * 10 ** 18; // 10% of token cap\n    uint256 public advisorSupply =  2500000 * 10 ** 18; // 5% of token cap\n    uint256 public founderSupply =  2000000 * 10 ** 18; // 4% of token cap\n\n    // amount of tokens each address will receive at the end of the crowdsale\n    mapping (address => uint256) public creditOf;\n\n    mapping (address => uint256) public weiInvestedBy;\n\n    BitNauticWhitelist public whitelist;\n\n    /** Constructor BitNauticICO */\n    constructor(BitNauticToken _token, BitNauticWhitelist _whitelist, address _wallet)\n    CappedCrowdsale(crowdsaleHardCap)\n    FinalizableCrowdsale()\n    RefundableCrowdsale(crowdsaleSoftCap)\n    Crowdsale(_token, crowdsaleInitialSupply, preICOStartTime, mainICOEndTime, _wallet) public\n    {\n        whitelist = _whitelist;\n    }\n\n    function _tokenPurchased(address buyer, address beneficiary, uint256 weiAmount) internal returns (bool) {\n        require(SafeMath.add(weiInvestedBy[buyer], weiAmount) <= whitelist.contributionCap(buyer));\n\n        uint256 tokens = SafeMath.mul(weiAmount, tokenBaseRate);\n\n        tokens = tokens.add(SafeMath.mul(tokens, getCurrentBonus()).div(100));\n\n        require(publicSupply >= tokens);\n\n        publicSupply = publicSupply.sub(tokens);\n\n        creditOf[beneficiary] = creditOf[beneficiary].add(tokens);\n        weiInvestedBy[buyer] = SafeMath.add(weiInvestedBy[buyer], weiAmount);\n\n        emit TokenPurchase(buyer, beneficiary, weiAmount, tokens);\n\n        return true;\n    }\n\n    address constant public privateSaleWallet = 0x5A01D561AE864006c6B733f21f8D4311d1E1B42a;\n\n    function goalReached() public returns (bool) {\n        if (weiRaised + privateSaleWallet.balance >= goal) {\n            _goalReached = true;\n        }\n\n        return _goalReached;\n    }\n\n    function getCurrentBonus() public view returns (uint256) {\n        if (now < mainICOStartTime) {\n            return preICOBonus;\n        } else if (now < mainICOFirstWeekEndTime) {\n            return firstWeekBonus;\n        } else if (now < mainICOSecondWeekEndTime) {\n            return secondWeekBonus;\n        } else if (now < mainICOThirdWeekEndTime) {\n            return thirdWeekBonus;\n        } else if (now < mainICOFourthWeekEndTime) {\n            return fourthWeekBonus;\n        } else {\n            return 0;\n        }\n    }\n\n    function claimBitNauticTokens() public returns (bool) {\n        return grantInvestorTokens(msg.sender);\n    }\n\n    function grantInvestorTokens(address investor) public returns (bool) {\n        require(creditOf[investor] > 0);\n        require(now > mainICOEndTime && whitelist.AMLWhitelisted(investor));\n        require(goalReached());\n\n        assert(token.mint(investor, creditOf[investor]));\n        creditOf[investor] = 0;\n\n        return true;\n    }\n\n    function grantInvestorsTokens(address[] investors) public returns (bool) {\n        require(now > mainICOEndTime);\n        require(goalReached());\n\n        for (uint256 i = 0; i < investors.length; i++) {\n            if (creditOf[investors[i]] > 0 && whitelist.AMLWhitelisted(investors[i])) {\n                token.mint(investors[i], creditOf[investors[i]]);\n                creditOf[investors[i]] = 0;\n            }\n        }\n\n        return true;\n    }\n\n    function bountyDrop(address[] recipients, uint256[] values) onlyOwner public returns (bool) {\n        require(now > mainICOEndTime);\n        require(goalReached());\n        require(recipients.length == values.length);\n\n        for (uint256 i = 0; i < recipients.length; i++) {\n            values[i] = SafeMath.mul(values[i], 1 ether);\n            if (bountySupply >= values[i]) {\n                return false;\n            }\n            bountySupply = SafeMath.sub(bountySupply, values[i]);\n            token.mint(recipients[i], values[i]);\n        }\n\n        return true;\n    }\n\n    uint256 public teamTimeLock = mainICOEndTime;\n    uint256 public founderTimeLock = mainICOEndTime + 365 days;\n    uint256 public advisorTimeLock = mainICOEndTime + 180 days;\n    uint256 public reserveTimeLock = mainICOEndTime;\n\n    function grantAdvisorTokens(address advisorAddress) onlyOwner public {\n        require((advisorSupply > 0) && (advisorTimeLock < now));\n        require(goalReached());\n\n        token.mint(advisorAddress, advisorSupply);\n        advisorSupply = 0;\n    }\n\n    uint256 public teamVestingCounter = 0; // months of vesting\n\n    function grantTeamTokens(address teamAddress) onlyOwner public {\n        require((teamVestingCounter < 12) && (teamTimeLock < now));\n        require(goalReached());\n\n        teamTimeLock = SafeMath.add(teamTimeLock, 4 weeks);\n        token.mint(teamAddress, SafeMath.div(teamSupply, 12));\n        teamVestingCounter = SafeMath.add(teamVestingCounter, 1);\n    }\n\n    function grantFounderTokens(address founderAddress) onlyOwner public {\n        require((founderSupply > 0) && (founderTimeLock < now));\n        require(goalReached());\n\n        token.mint(founderAddress, founderSupply);\n        founderSupply = 0;\n    }\n\n    function grantReserveTokens(address beneficiary) onlyOwner public {\n        require((reserveSupply > 0) && (now > reserveTimeLock));\n        require(goalReached());\n\n        token.mint(beneficiary, reserveSupply);\n        reserveSupply = 0;\n    }\n\n    function transferTokenOwnership(address newTokenOwner) onlyOwner public returns (bool) {\n        return token.transferOwnership(newTokenOwner);\n    }\n}\n\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public constant returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public constant returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n}\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public constant returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract StandardToken is ERC20, BasicToken {\n  mapping (address => mapping (address => uint256)) allowed;\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n\n    uint256 _allowance = allowed[_from][msg.sender];\n\n    // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n    // require (_value <= _allowance);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = _allowance.sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   */\n  function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n}\n\ncontract MintableToken is StandardToken, Ownable {\n  event Mint(address indexed to, uint256 amount);\n  event MintFinished();\n\n  bool public mintingFinished = false;\n\n  modifier canMint() {\n    require(!mintingFinished);\n    _;\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n\n  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\n    totalSupply = SafeMath.add(totalSupply, _amount);\n    balances[_to] = balances[_to].add(_amount);\n    emit Mint(_to, _amount);\n    emit Transfer(0x0, _to, _amount);\n    return true;\n  }\n\n  /**\n   * @dev Function to stop minting new tokens.\n   * @return True if the operation was successful.\n   */\n//  function finishMinting() onlyOwner public returns (bool) {\n//    mintingFinished = true;\n//    emit MintFinished();\n//    return true;\n//  }\n\n  function burnTokens(uint256 _unsoldTokens) onlyOwner canMint public returns (bool) {\n    totalSupply = SafeMath.sub(totalSupply, _unsoldTokens);\n  }\n}\n\ncontract CappedToken is MintableToken {\n  uint256 public cap;\n\n  constructor(uint256 _cap) public {\n    require(_cap > 0);\n    cap = _cap;\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\n    require(totalSupply.add(_amount) <= cap);\n\n    return super.mint(_to, _amount);\n  }\n}\n\ncontract BitNauticToken is CappedToken {\n  string public constant name = \"BitNautic Token\";\n  string public constant symbol = \"BTNT\";\n  uint8 public constant decimals = 18;\n\n  uint256 public totalSupply = 0;\n\n  constructor()\n  CappedToken(50000000 * 10 ** uint256(decimals)) public\n  {\n\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"ICOStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preICOBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burnTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalizeCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkBurnTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleInitialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamVestingCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"grantInvestorTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTokenOwner\",\"type\":\"address\"}],\"name\":\"transferTokenOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fourthWeekBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderTimeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamTimeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveTimeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVaultAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainICOSecondWeekEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleHardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"creditOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"weiInvestedBy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenBaseRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainICOStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisorSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"goalReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"advisorAddress\",\"type\":\"address\"}],\"name\":\"grantAdvisorTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"founderAddress\",\"type\":\"address\"}],\"name\":\"grantFounderTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountySupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"thirdWeekBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondWeekBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainICOFourthWeekEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"grantReserveTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstWeekBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimBitNauticTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainICOEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisorTimeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimRefund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"bountyDrop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preICOStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"investors\",\"type\":\"address[]\"}],\"name\":\"grantInvestorsTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainICOThirdWeekEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainICOFirstWeekEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"teamAddress\",\"type\":\"address\"}],\"name\":\"grantTeamTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleSoftCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"privateSaleWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_whitelist\",\"type\":\"address\"},{\"name\":\"_wallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60806040526000805460a060020a60ff02191681556007805460ff199081169091556009805482169055600b805490911690556a027b46536c66c8e3000000600c556a0211654585005212800000600d8190556a0422ca8b0a00a425000000600e55600f556a01a784379d99db42000000601055635b5fa6806014819055635d40da00601555635c4cf480601655601755601855348015620000a057600080fd5b50604051606080620026bf83398101604090815281516020830151919092015160008054600160a060020a03191633600160a060020a031617905569010f0cf064dd59200000690a968163f0a57b400000846a1cf389cd46047d03000000635ae7ae00635b5fa68086600160a060020a03811615156200011f57600080fd5b60018054600160a060020a03968716600160a060020a03199182161790915560069490945560029290925560035560048054919093169116179055600081116200016857600080fd5b600855600081116200017957600080fd5b600454600160a060020a03166200018f62000207565b600160a060020a03909116815260405190819003602001906000f080158015620001bd573d6000803e3d6000fd5b50600b805461010060a860020a031916610100600160a060020a0393841602179055600a9190915560138054600160a060020a031916939091169290921790915550620002189050565b6040516105fc80620020c383390190565b611e9b80620002286000396000f30060806040526004361061029a5763ffffffff60e060020a60003504166303652c4e81146102a557806303d41eb6146102cc57806306f7ec97146102e157806308003f78146102f65780630bf318a31461031f5780630c92b17b1461033457806310fe9ae8146103495780631c92b4971461037a5780631f69f9291461038f578063207cb710146103a457806321e6b53d146103c55780632cfac6ec146103e65780632ea60e35146103fb57806334bb1a9e1461041057806338dacaab146104255780633f4ba83a1461043a5780634042b66f1461044f57806357e5eea514610464578063598f6dec146104795780635c975abb1461048e5780635e84d723146104a357806365cacaa4146104b85780636f32b4cb146104cd578063744bb8d2146104e257806375807250146104f757806376e087391461051857806376e6dbc71461053957806376ee3a871461054e578063798bede1146105635780637d3d6522146105785780638105aa551461058d57806383f12f91146105ae5780638456cb59146105cf57806386852fd7146105e457806391125fb7146105f957806393e59dc11461060e5780639694f03914610623578063973fe7ef146106385780639b9b0b871461064d5780639d8d22f414610662578063a1b258c114610683578063a242f04914610698578063a85b13b9146106ad578063a8c2c4a7146106c2578063b0d1a26c146106d7578063b5545a3c146106ec578063b749b22514610701578063bfcdbae91461078f578063c47fc244146107a4578063d77c96f8146107f9578063dc661aaa1461080e578063e40a955c14610823578063e6a43d6314610844578063ea50342914610859578063ec8ac4d81461086e578063ecb70fb714610882578063f2fde38b14610897578063fc0c546a146108b8575b6102a3336108cd565b005b3480156102b157600080fd5b506102ba610958565b60408051918252519081900360200190f35b3480156102d857600080fd5b506102ba61095e565b3480156102ed57600080fd5b506102ba610964565b34801561030257600080fd5b5061030b610969565b604080519115158252519081900360200190f35b34801561032b57600080fd5b506102a3610ae3565b34801561034057600080fd5b5061030b610b61565b34801561035557600080fd5b5061035e610b6a565b60408051600160a060020a039092168252519081900360200190f35b34801561038657600080fd5b506102ba610b96565b34801561039b57600080fd5b506102ba610ba5565b3480156103b057600080fd5b5061030b600160a060020a0360043516610bab565b3480156103d157600080fd5b5061030b600160a060020a0360043516610d4a565b3480156103f257600080fd5b506102ba610e00565b34801561040757600080fd5b506102ba610e06565b34801561041c57600080fd5b506102ba610e0b565b34801561043157600080fd5b506102ba610e11565b34801561044657600080fd5b506102a3610e17565b34801561045b57600080fd5b506102ba610e91565b34801561047057600080fd5b506102ba610e97565b34801561048557600080fd5b506102ba610f05565b34801561049a57600080fd5b5061030b610f0b565b3480156104af57600080fd5b506102ba610f1b565b3480156104c457600080fd5b5061035e610f21565b3480156104d957600080fd5b506102ba610f52565b3480156104ee57600080fd5b506102ba610f5a565b34801561050357600080fd5b506102ba600160a060020a0360043516610f68565b34801561052457600080fd5b506102ba600160a060020a0360043516610f7a565b34801561054557600080fd5b506102ba610f8c565b34801561055a57600080fd5b506102ba610f92565b34801561056f57600080fd5b506102ba610f9a565b34801561058457600080fd5b5061030b610fa0565b34801561059957600080fd5b506102a3600160a060020a0360043516610fe7565b3480156105ba57600080fd5b506102a3600160a060020a03600435166110c4565b3480156105db57600080fd5b506102a36111a1565b3480156105f057600080fd5b506102ba611220565b34801561060557600080fd5b506102ba611226565b34801561061a57600080fd5b5061035e61122b565b34801561062f57600080fd5b506102ba61123a565b34801561064457600080fd5b506102ba611240565b34801561065957600080fd5b506102ba611245565b34801561066e57600080fd5b506102a3600160a060020a036004351661124d565b34801561068f57600080fd5b506102ba61132a565b3480156106a457600080fd5b506102ba61132f565b3480156106b957600080fd5b5061030b611335565b3480156106ce57600080fd5b506102ba611345565b3480156106e357600080fd5b506102ba61134d565b3480156106f857600080fd5b506102a3611353565b34801561070d57600080fd5b506040805160206004803580820135838102808601850190965280855261030b95369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506113fd9650505050505050565b34801561079b57600080fd5b506102ba6115c0565b3480156107b057600080fd5b506040805160206004803580820135838102808601850190965280855261030b953695939460249493850192918291850190849080828437509497506115c89650505050505050565b34801561080557600080fd5b506102ba61181f565b34801561081a57600080fd5b506102ba611827565b34801561082f57600080fd5b506102a3600160a060020a036004351661182f565b34801561085057600080fd5b506102ba611943565b34801561086557600080fd5b5061035e611951565b6102a3600160a060020a03600435166108cd565b34801561088e57600080fd5b5061030b611969565b3480156108a357600080fd5b5061030b600160a060020a036004351661198a565b3480156108c457600080fd5b5061035e611a26565b6000805460a060020a900460ff16156108e557600080fd5b600160a060020a03821615156108fa57600080fd5b610902611a35565b151561090d57600080fd5b5066b1a2bc2ec500003481111561092357600080fd5b61092e338334611a68565b151561093657fe5b600554610949903463ffffffff611c5c16565b600555610954611c6f565b5050565b60025481565b600e5481565b601e81565b6000805433600160a060020a0390811691161461098557600080fd5b61098d611969565b151561099857600080fd5b60075460ff16156109a857600080fd5b6001546006546040805160e060020a6340c10f1902815260006004820181905260248201939093529051600160a060020a03909316926340c10f1992604480840193602093929083900390910190829087803b158015610a0757600080fd5b505af1158015610a1b573d6000803e3d6000fd5b505050506040513d6020811015610a3157600080fd5b5050600154600654604080517f6d1b229d000000000000000000000000000000000000000000000000000000008152600481019290925251600160a060020a0390921691636d1b229d916024808201926020929091908290030181600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b505050506040513d6020811015610ac757600080fd5b50506000600655506007805460ff191660019081179091555b90565b60005433600160a060020a03908116911614610afe57600080fd5b60095460ff1615610b0e57600080fd5b610b16611969565b1515610b2157600080fd5b610b29611cf8565b6040517f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768190600090a16009805460ff19166001179055565b60075460ff1681565b6000805433600160a060020a03908116911614610b8657600080fd5b50600154600160a060020a031690565b6a1cf389cd46047d0300000081565b60185481565b600160a060020a0381166000908152601160205260408120548110610bcf57600080fd5b635b5fa68042118015610c725750601354604080517f26b797b0000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916326b797b09160248083019260209291908290030181600087803b158015610c4557600080fd5b505af1158015610c59573d6000803e3d6000fd5b505050506040513d6020811015610c6f57600080fd5b50515b1515610c7d57600080fd5b610c85610fa0565b1515610c9057600080fd5b600154600160a060020a03838116600081815260116020908152604080832054815160e060020a6340c10f19028152600481019590955260248501525193909416936340c10f1993604480850194929391928390030190829087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b505050506040513d6020811015610d2257600080fd5b50511515610d2c57fe5b50600160a060020a0316600090815260116020526040812055600190565b6000805433600160a060020a03908116911614610d6657600080fd5b600154604080517ff2fde38b000000000000000000000000000000000000000000000000000000008152600160a060020a0385811660048301529151919092169163f2fde38b9160248083019260209291908290030181600087803b158015610dce57600080fd5b505af1158015610de2573d6000803e3d6000fd5b505050506040513d6020811015610df857600080fd5b505192915050565b600c5481565b600581565b60155481565b60145481565b60005433600160a060020a03908116911614610e3257600080fd5b60005460a060020a900460ff161515610e4a57600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60055481565b6000635b108c80421015610ead5750601e610ae0565b635b19c700421015610ec157506014610ae0565b635b230180421015610ed55750600f610ae0565b635b2c3c00421015610ee95750600a610ae0565b635b381980421015610efd57506005610ae0565b506000610ae0565b60175481565b60005460a060020a900460ff1681565b60065481565b6000805433600160a060020a03908116911614610f3d57600080fd5b50600b546101009004600160a060020a031690565b635b23018081565b690a968163f0a57b40000081565b60116020526000908152604090205481565b60126020526000908152604090205481565b6101f481565b635b108c8081565b600f5481565b6000600a54735a01d561ae864006c6b733f21f8d4311d1e1b42a600160a060020a03163160055401101515610fdd57600b805460ff191660011790555b50600b5460ff1690565b60005433600160a060020a0390811691161461100257600080fd5b6000600f54118015611015575042601654105b151561102057600080fd5b611028610fa0565b151561103357600080fd5b600154600f546040805160e060020a6340c10f19028152600160a060020a0385811660048301526024820193909352905191909216916340c10f199160448083019260209291908290030181600087803b15801561109057600080fd5b505af11580156110a4573d6000803e3d6000fd5b505050506040513d60208110156110ba57600080fd5b50506000600f5550565b60005433600160a060020a039081169116146110df57600080fd5b60006010541180156110f2575042601554105b15156110fd57600080fd5b611105610fa0565b151561111057600080fd5b6001546010546040805160e060020a6340c10f19028152600160a060020a0385811660048301526024820193909352905191909216916340c10f199160448083019260209291908290030181600087803b15801561116d57600080fd5b505af1158015611181573d6000803e3d6000fd5b505050506040513d602081101561119757600080fd5b5050600060105550565b60005433600160a060020a039081169116146111bc57600080fd5b60005460a060020a900460ff16156111d357600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600d5481565b600a81565b601354600160a060020a031681565b60105481565b600f81565b635b38198081565b60005433600160a060020a0390811691161461126857600080fd5b6000600e5411801561127b575060175442115b151561128657600080fd5b61128e610fa0565b151561129957600080fd5b600154600e546040805160e060020a6340c10f19028152600160a060020a0385811660048301526024820193909352905191909216916340c10f199160448083019260209291908290030181600087803b1580156112f657600080fd5b505af115801561130a573d6000803e3d6000fd5b505050506040513d602081101561132057600080fd5b50506000600e5550565b601481565b60035481565b600061134033610bab565b905090565b635b5fa68081565b60165481565b60095460ff16151561136457600080fd5b61136c610fa0565b1561137657600080fd5b600b54604080517ffa89401a000000000000000000000000000000000000000000000000000000008152600160a060020a03338116600483015291516101009093049091169163fa89401a9160248082019260009290919082900301818387803b1580156113e357600080fd5b505af11580156113f7573d6000803e3d6000fd5b50505050565b60008054819033600160a060020a0390811691161461141b57600080fd5b635b5fa680421161142b57600080fd5b611433610fa0565b151561143e57600080fd5b825184511461144c57600080fd5b5060005b83518110156115b457611482838281518110151561146a57fe5b90602001906020020151670de0b6b3a7640000611de7565b838281518110151561149057fe5b6020908102909101015282518390829081106114a857fe5b60209081029091010151600d54106114c357600091506115b9565b6114e6600d5484838151811015156114d757fe5b90602001906020020151611e10565b600d556001548451600160a060020a03909116906340c10f199086908490811061150c57fe5b90602001906020020151858481518110151561152457fe5b906020019060200201516040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561158057600080fd5b505af1158015611594573d6000803e3d6000fd5b505050506040513d60208110156115aa57600080fd5b5050600101611450565b600191505b5092915050565b635ae7ae0081565b600080635b5fa68042116115db57600080fd5b6115e3610fa0565b15156115ee57600080fd5b5060005b825181101561181657600060116000858481518110151561160f57fe5b90602001906020020151600160a060020a0316600160a060020a03168152602001908152602001600020541180156116e757506013548351600160a060020a03909116906326b797b09085908490811061166557fe5b906020019060200201516040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156116ba57600080fd5b505af11580156116ce573d6000803e3d6000fd5b505050506040513d60208110156116e457600080fd5b50515b1561180e576001548351600160a060020a03909116906340c10f199085908490811061170f57fe5b9060200190602002015160116000878681518110151561172b57fe5b90602001906020020151600160a060020a0316600160a060020a03168152602001908152602001600020546040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156117a857600080fd5b505af11580156117bc573d6000803e3d6000fd5b505050506040513d60208110156117d257600080fd5b5050825160009060119082908690859081106117ea57fe5b6020908102909101810151600160a060020a03168252810191909152604001600020555b6001016115f2565b50600192915050565b635b2c3c0081565b635b19c70081565b60005433600160a060020a0390811691161461184a57600080fd5b600c60185410801561185d575042601454105b151561186857600080fd5b611870610fa0565b151561187b57600080fd5b61188a6014546224ea00611c5c565b601455600154600c8054600160a060020a03909216916340c10f199184916118b191611e22565b6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561190357600080fd5b505af1158015611917573d6000803e3d6000fd5b505050506040513d602081101561192d57600080fd5b505060185461193d906001611c5c565b60185550565b69010f0cf064dd5920000081565b735a01d561ae864006c6b733f21f8d4311d1e1b42a81565b600854600554600091111561197c611e37565b806119845750805b91505090565b6000805433600160a060020a039081169116146119a657600080fd5b600160a060020a03821615156119bb57600080fd5b60008054604051600160a060020a03808616939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35060008054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff199091161790556001919050565b600154600160a060020a031681565b600080600854611a5034600554611c5c90919063ffffffff16565b11159050611a5c611e3f565b80156119845750919050565b601354604080517ffb678f29000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015291516000938493169163fb678f2991602480830192602092919082900301818787803b158015611ad157600080fd5b505af1158015611ae5573d6000803e3d6000fd5b505050506040513d6020811015611afb57600080fd5b5051600160a060020a038616600090815260126020526040902054611b209085611c5c565b1115611b2b57600080fd5b611b37836101f4611de7565b9050611b6b611b5e6064611b5284611b4d610e97565b611de7565b9063ffffffff611e2216565b829063ffffffff611c5c16565b90508060065410151515611b7e57600080fd5b600654611b91908263ffffffff611e1016565b600655600160a060020a038416600090815260116020526040902054611bbd908263ffffffff611c5c16565b600160a060020a03808616600090815260116020908152604080832094909455918816815260129091522054611bf39084611c5c565b600160a060020a0380871660008181526012602090815260409182902094909455805187815293840185905280519288169391927f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad189281900390910190a3506001949350505050565b81810182811015611c6957fe5b92915050565b600b54604080517ff340fa01000000000000000000000000000000000000000000000000000000008152600160a060020a03338116600483015291516101009093049091169163f340fa01913491602480830192600092919082900301818588803b158015611cdd57600080fd5b505af1158015611cf1573d6000803e3d6000fd5b5050505050565b611d00610fa0565b15611d7557600b60019054906101000a9004600160a060020a0316600160a060020a03166343d726d66040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015611d5857600080fd5b505af1158015611d6c573d6000803e3d6000fd5b50505050611de1565b600b60019054906101000a9004600160a060020a0316600160a060020a0316638c52dc416040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015611dc857600080fd5b505af1158015611ddc573d6000803e3d6000fd5b505050505b611de55b565b6000821515611df857506000611c69565b50818102818382811515611e0857fe5b0414611c6957fe5b600082821115611e1c57fe5b50900390565b60008183811515611e2f57fe5b049392505050565b600354421190565b60008060004260025411158015611e5857506003544211155b915050341515818015611e685750805b92505050905600a165627a7a72305820ca31089261d9dd9cb28d464bd1657a2b49f956d1d6c22cdedd8aaa3ed4bab75a0029608060405234801561001057600080fd5b506040516020806105fc833981016040525160008054600160a060020a03191633600160a060020a03908116919091179091558116151561005057600080fd5b60028054600160a060020a031916600160a060020a03929092169190911760a060020a60ff0219169055610573806100896000396000f30060806040526004361061008d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166343d726d68114610092578063521eb273146100a95780638c52dc41146100da578063c19d93fb146100ef578063cb13cddb14610128578063f2fde38b1461015b578063f340fa0114610190578063fa89401a146101a4575b600080fd5b34801561009e57600080fd5b506100a76101c5565b005b3480156100b557600080fd5b506100be6102a0565b60408051600160a060020a039092168252519081900360200190f35b3480156100e657600080fd5b506100a76102af565b3480156100fb57600080fd5b5061010461033d565b6040518082600281111561011457fe5b60ff16815260200191505060405180910390f35b34801561013457600080fd5b50610149600160a060020a036004351661034d565b60408051918252519081900360200190f35b34801561016757600080fd5b5061017c600160a060020a036004351661035f565b604080519115158252519081900360200190f35b6100a7600160a060020a03600435166103fb565b3480156101b057600080fd5b506100a7600160a060020a036004351661047f565b60005433600160a060020a039081169116146101e057600080fd5b60006002805460a060020a900460ff16908111156101fa57fe5b1461020457600080fd5b6002805474ff00000000000000000000000000000000000000001916740200000000000000000000000000000000000000001790556040517f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a90600090a1600254604051600160a060020a039182169130163180156108fc02916000818181858888f1935050505015801561029d573d6000803e3d6000fd5b50565b600254600160a060020a031681565b60005433600160a060020a039081169116146102ca57600080fd5b60006002805460a060020a900460ff16908111156102e457fe5b146102ee57600080fd5b6002805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8990600090a1565b60025460a060020a900460ff1681565b60016020526000908152604090205481565b6000805433600160a060020a0390811691161461037b57600080fd5b600160a060020a038216151561039057600080fd5b60008054604051600160a060020a03808616939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35060008054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff199091161790556001919050565b60005433600160a060020a0390811691161461041657600080fd5b60006002805460a060020a900460ff169081111561043057fe5b1461043a57600080fd5b600160a060020a038116600090815260016020526040902054610463903463ffffffff61053416565b600160a060020a03909116600090815260016020526040902055565b600060016002805460a060020a900460ff169081111561049b57fe5b146104a557600080fd5b50600160a060020a038116600081815260016020526040808220805490839055905190929183156108fc02918491818181858888f193505050501580156104f0573d6000803e3d6000fd5b50604080518281529051600160a060020a038416917fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651919081900360200190a25050565b8181018281101561054157fe5b929150505600a165627a7a7230582042d29af5cb69698d26d32cd58d207238074aab87373d8f8ca0fc4b2a31bc9b0a002900000000000000000000000047010bfcdebde5c6f0cb3426cee269a96f7ac6ce00000000000000000000000019fefe079d1035ca7ca9fcc058ba44542f5393e4000000000000000000000000c0c356867322042e571846ab4f856542646f102e",
  "constructorArguments": "00000000000000000000000047010bfcdebde5c6f0cb3426cee269a96f7ac6ce00000000000000000000000019fefe079d1035ca7ca9fcc058ba44542f5393e4000000000000000000000000c0c356867322042e571846ab4f856542646f102e"
}