{
  "address": "0x69657e421c993a65e31f571b4ce742fafb318bd4",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "WOMG",
  "compilerVersion": "v0.5.4+commit.9549d8ff",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-03\n*/\n\npragma solidity ^0.5.4;\n\n/**\n * @title SafeMath\n * @dev Unsigned math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n    /**\n    * @dev Multiplies two unsigned integers, reverts on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n    * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n    * @dev Adds two unsigned integers, reverts on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    /**\n    * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n    * reverts when dividing by zero.\n    */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\n\ninterface OMGInterface {\n\n    function totalSupply() external view returns (uint);\n    function balanceOf(address tokenOwner) external view returns (uint balance);\n    function allowance(address tokenOwner, address spender) external view returns (uint remaining);\n    function transfer(address to, uint tokens) external;\n    function approve(address spender, uint tokens) external;\n    function transferFrom(address from, address to, uint tokens) external;\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\ninterface ERC20Interface {\n\n    function totalSupply() external view returns (uint);\n    function balanceOf(address tokenOwner) external view returns (uint balance);\n    function allowance(address tokenOwner, address spender) external view returns (uint remaining);\n    function transfer(address to, uint tokens) external returns (bool success);\n    function approve(address spender, uint tokens) external returns (bool success);\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\ncontract WOMG is ERC20Interface {\n    using SafeMath for uint256;\n\n    string public name     = \"Wrapped OMG\";\n    string public symbol   = \"WOMG\";\n    uint8  public decimals = 18;\n\n    event  Deposit(address indexed _tokenHolder, uint256 _amount);\n    event  Withdrawal(address indexed _tokenHolder, uint _amount);\n\n    mapping (address => uint256)                       public  balanceOf;\n    mapping (address => mapping (address => uint256))  public  allowance;\n\n    OMGInterface public omg;\n\n    constructor (address _omg) public {\n        omg = OMGInterface(_omg);\n    }\n\n    function deposit(uint256 _amount) public {\n        omg.transferFrom(msg.sender, address(this), _amount);\n        balanceOf[msg.sender] = balanceOf[msg.sender].add(_amount);\n        emit Deposit(msg.sender, _amount);\n    }\n\n    function withdraw(uint256 _amount) public {\n        require(balanceOf[msg.sender] >= _amount);\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_amount);\n        omg.transfer(msg.sender, _amount);\n        emit Withdrawal(msg.sender, _amount);\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return omg.balanceOf(address(this));\n    }\n\n    function approve(address _spender, uint256 _amount) public returns (bool) {\n        allowance[msg.sender][_spender] = _amount;\n        emit Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n\n    function transfer(address _to, uint256 _amount) public returns (bool) {\n        return transferFrom(msg.sender, _to, _amount);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _amount)\n        public\n        returns (bool)\n    {\n        require(balanceOf[_from] >= _amount);\n\n        if (_from != msg.sender && allowance[_from][msg.sender] != uint(-1)) {\n            require(allowance[_from][msg.sender] >= _amount);\n            allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_amount);\n        }\n\n        balanceOf[_from] = balanceOf[_from].sub(_amount);\n        balanceOf[_to] = balanceOf[_to].add(_amount);\n\n        emit Transfer(_from, _to, _amount);\n\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"omg\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_omg\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600b60808190527f57726170706564204f4d4700000000000000000000000000000000000000000060a090815261003e91600091906100e3565b506040805180820190915260048082527f574f4d47000000000000000000000000000000000000000000000000000000006020909201918252610083916001916100e3565b506002805460ff1916601217905534801561009d57600080fd5b50604051602080610ab7833981018060405260208110156100bd57600080fd5b505160058054600160a060020a031916600160a060020a0390921691909117905561017e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012457805160ff1916838001178555610151565b82800160010185558215610151579182015b82811115610151578251825591602001919060010190610136565b5061015d929150610161565b5090565b61017b91905b8082111561015d5760008155600101610167565b90565b61092a8061018d6000396000f3fe608060405234801561001057600080fd5b50600436106100d1576000357c01000000000000000000000000000000000000000000000000000000009004806370a082311161008e57806370a082311461022057806395d89b4114610246578063a9059cbb1461024e578063b24374a21461027a578063b6b55f251461029e578063dd62ed3e146102bb576100d1565b806306fdde03146100d6578063095ea7b31461015357806318160ddd1461019357806323b872dd146101ad5780632e1a7d4d146101e3578063313ce56714610202575b600080fd5b6100de6102e9565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610118578181015183820152602001610100565b50505050905090810190601f1680156101455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017f6004803603604081101561016957600080fd5b50600160a060020a038135169060200135610377565b604080519115158252519081900360200190f35b61019b6103dd565b60408051918252519081900360200190f35b61017f600480360360608110156101c357600080fd5b50600160a060020a03813581169160208101359091169060400135610472565b610200600480360360208110156101f957600080fd5b5035610622565b005b61020a61072b565b6040805160ff9092168252519081900360200190f35b61019b6004803603602081101561023657600080fd5b5035600160a060020a0316610734565b6100de610746565b61017f6004803603604081101561026457600080fd5b50600160a060020a0381351690602001356107a0565b6102826107b4565b60408051600160a060020a039092168252519081900360200190f35b610200600480360360208110156102b457600080fd5b50356107c3565b61019b600480360360408110156102d157600080fd5b50600160a060020a03813581169160200135166108ba565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b505050505081565b336000818152600460209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600554604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600092600160a060020a0316916370a08231916024808301926020929190829003018186803b15801561044157600080fd5b505afa158015610455573d6000803e3d6000fd5b505050506040513d602081101561046b57600080fd5b5051905090565b600160a060020a03831660009081526003602052604081205482111561049757600080fd5b600160a060020a03841633148015906104d55750600160a060020a038416600090815260046020908152604080832033845290915290205460001914155b1561056357600160a060020a038416600090815260046020908152604080832033845290915290205482111561050a57600080fd5b600160a060020a038416600090815260046020908152604080832033845290915290205461053e908363ffffffff6108d716565b600160a060020a03851660009081526004602090815260408083203384529091529020555b600160a060020a03841660009081526003602052604090205461058c908363ffffffff6108d716565b600160a060020a0380861660009081526003602052604080822093909355908516815220546105c1908363ffffffff6108ec16565b600160a060020a0380851660008181526003602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b3360009081526003602052604090205481111561063e57600080fd5b3360009081526003602052604090205461065e908263ffffffff6108d716565b336000818152600360205260408082209390935560055483517fa9059cbb0000000000000000000000000000000000000000000000000000000081526004810193909352602483018590529251600160a060020a039093169263a9059cbb92604480820193929182900301818387803b1580156106da57600080fd5b505af11580156106ee573d6000803e3d6000fd5b50506040805184815290513393507f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6592509081900360200190a250565b60025460ff1681565b60036020526000908152604090205481565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561036f5780601f106103445761010080835404028352916020019161036f565b60006107ad338484610472565b9392505050565b600554600160a060020a031681565b600554604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490529051600160a060020a03909216916323b872dd9160648082019260009290919082900301818387803b15801561083557600080fd5b505af1158015610849573d6000803e3d6000fd5b50503360009081526003602052604090205461086e925090508263ffffffff6108ec16565b33600081815260036020908152604091829020939093558051848152905191927fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c92918290030190a250565b600460209081526000928352604080842090915290825290205481565b6000828211156108e657600080fd5b50900390565b6000828201838110156107ad57600080fdfea165627a7a72305820c24aca4f4b4865f1077913e7b6847477bc2084e929258611c07d1e0dc319093c0029000000000000000000000000d26114cd6ee289accf82350c8d8487fedb8a0c07",
  "constructorArguments": "000000000000000000000000d26114cd6ee289accf82350c8d8487fedb8a0c07"
}