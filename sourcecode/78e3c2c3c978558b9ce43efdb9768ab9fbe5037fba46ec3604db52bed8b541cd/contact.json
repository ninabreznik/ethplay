{
  "address": "0x9bd4810a407812042f938d2f69f673843301cfa6",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "JCCoin",
  "compilerVersion": "v0.4.11+commit.68ef5810",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-11-28\n*/\n\npragma solidity ^0.4.11;\n\n/**\n * ERC 20 token\n *\n * https://github.com/ethereum/EIPs/issues/20\n */\ncontract JCCoin  {\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n\n    mapping(address => uint256) balances;\n\n    mapping (address => mapping (address => uint256)) allowed;\n\n    string public name = \"JC Coin\";\n    string public symbol = \"JCC\";\n    uint public decimals = 18;\n\n\n    // Initial founder address (set in constructor)\n    // All deposited ETH will be instantly forwarded to this address.\n    address public founder = 0x0;\n\n    uint256 public totalSupply = 2000000000 * 10**decimals;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    //constructor\n    function JCCoin(address founderInput) {\n        founder = founderInput;\n        balances[founder] = totalSupply;\n    }\n\n\n    function transfer(address _to, uint256 _value) returns (bool success) {\n\n        if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else { return false; }\n\n    }\n\n\t\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n        if (msg.sender != founder) revert();\n\n        //same as above. Replace this line with the following if you want to protect against wrapping uints.\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            allowed[_from][msg.sender] -= _value;\n            Transfer(_from, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n\n\t\n    function() {\n        revert();\n    }\n\n    // only owner can kill\n    function kill() { \n        if (msg.sender == founder) suicide(founder); \n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"founderInput\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60a0604052600760608190527f4a4320436f696e00000000000000000000000000000000000000000000000000608090815261003e91600291906100fd565b506040805180820190915260038082527f4a43430000000000000000000000000000000000000000000000000000000000602090920191825261008191816100fd565b50601260045560058054600160a060020a03191690556b06765c793fa10079d000000060065534156100af57fe5b60405160208061093f83398101604052515b60058054600160a060020a031916600160a060020a03838116919091179182905560065491166000908152602081905260409020555b5061019d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013e57805160ff191683800117855561016b565b8280016001018555821561016b579182015b8281111561016b578251825591602001919060010190610150565b5b5061017892915061017c565b5090565b61019a91905b808211156101785760008155600101610182565b5090565b90565b610793806101ac6000396000f300606060405236156100ac5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100c2578063095ea7b31461015257806318160ddd1461018557806323b872dd146101a7578063313ce567146101e057806341c0e1b5146102025780634d853ee51461021457806370a082311461024057806395d89b411461026e578063a9059cbb146102fe578063dd62ed3e14610331575b34156100b457fe5b6100c05b60006000fd5b565b005b34156100ca57fe5b6100d2610365565b604080516020808252835181830152835191928392908301918501908083838215610118575b80518252602083111561011857601f1990920191602091820191016100f8565b505050905090810190601f1680156101445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015a57fe5b610171600160a060020a03600435166024356103f0565b604080519115158252519081900360200190f35b341561018d57fe5b61019561045b565b60408051918252519081900360200190f35b34156101af57fe5b610171600160a060020a0360043581169060243516604435610461565b604080519115158252519081900360200190f35b34156101e857fe5b61019561058d565b60408051918252519081900360200190f35b341561020a57fe5b6100c0610593565b005b341561021c57fe5b6102246105bb565b60408051600160a060020a039092168252519081900360200190f35b341561024857fe5b610195600160a060020a03600435166105ca565b60408051918252519081900360200190f35b341561027657fe5b6100d26105e9565b604080516020808252835181830152835191928392908301918501908083838215610118575b80518252602083111561011857601f1990920191602091820191016100f8565b505050905090810190601f1680156101445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561030657fe5b610171600160a060020a0360043516602435610677565b604080519115158252519081900360200190f35b341561033957fe5b610195600160a060020a036004358116906024351661073a565b60408051918252519081900360200190f35b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103e85780601f106103bd576101008083540402835291602001916103e8565b820191906000526020600020905b8154815290600101906020018083116103cb57829003601f168201915b505050505081565b600160a060020a03338116600081815260016020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60065481565b60055460009033600160a060020a039081169116146104805760006000fd5b600160a060020a0384166000908152602081905260409020548290108015906104d05750600160a060020a0380851660009081526001602090815260408083203390941683529290522054829010155b80156104f55750600160a060020a038316600090815260208190526040902054828101115b1561058157600160a060020a0380841660008181526020818152604080832080548801905588851680845281842080548990039055600183528184203390961684529482529182902080548790039055815186815291519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3506001610585565b5060005b5b9392505050565b60045481565b60055433600160a060020a03908116911614156100be57600554600160a060020a0316ff5b5b565b600554600160a060020a031681565b600160a060020a0381166000908152602081905260409020545b919050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103e85780601f106103bd576101008083540402835291602001916103e8565b820191906000526020600020905b8154815290600101906020018083116103cb57829003601f168201915b505050505081565b600160a060020a0333166000908152602081905260408120548290108015906106b95750600160a060020a038316600090815260208190526040902054828101115b1561072b57600160a060020a0333811660008181526020818152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3506001610455565b506000610455565b5b92915050565b600160a060020a038083166000908152600160209081526040808320938516835292905220545b929150505600a165627a7a72305820379a4dd5fc2fd5144912bb69311732334441a13d6c8f11e8a91b37ac8637513a0029000000000000000000000000c82a9ee04ebed62a8f20d43fe0b17b12fbc0fdfc",
  "constructorArguments": "000000000000000000000000C82A9Ee04ebeD62a8f20D43fE0b17b12Fbc0FDfC"
}