{
  "address": "0x0d416ffd6964fd122ee13d9a229fd3bb08b2deec",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Registry",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-04\n*/\n\n// TAKEN FROM https://github.com/OpenZeppelin/openzeppelin-solidity/commit/5daaf60d11ee2075260d0f3adfb22b1c536db983\npragma solidity ^0.4.24;\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n\n// This is an implementation (with some adaptations) of uPort erc780: https://etherscan.io/address/0xdb55d40684e7dc04655a9789937214b493a2c2c6#code && https://github.com/ethereum/EIPs/issues/780\n\ncontract Registry is Ownable {\n\n    mapping(address =>\n    mapping(address =>\n    mapping(bytes32 =>\n    mapping(bytes32 => bytes32)))) registry;\n\n    event ClaimSet(\n        address indexed subject,\n        address indexed issuer,\n        bytes32 indexed id,\n        bytes32 key,\n        bytes32 data,\n        uint updatedAt\n    );\n\n    event ClaimRemoved(\n        address indexed subject,\n        address indexed issuer,\n        bytes32 indexed id,\n        bytes32 key,\n        uint removedAt\n    );\n\n    function setClaim(\n        address subject,\n        address issuer,\n        bytes32 id,\n        bytes32 key,\n        bytes32 data\n    ) public {\n        require(msg.sender == issuer || msg.sender == owner);\n        registry[subject][issuer][id][key] = data;\n        emit ClaimSet(subject, issuer, id, key, data, now);\n    }\n\n    function getClaim(\n        address subject,\n        address issuer,\n        bytes32 id,\n        bytes32 key\n    )\n    public view returns(bytes32) {\n        return registry[subject][issuer][id][key];\n    }\n\n    function removeClaim(\n        address subject,\n        address issuer,\n        bytes32 id,\n        bytes32 key\n    ) public {\n        require(\n            msg.sender == subject || msg.sender == issuer || msg.sender == owner\n        );\n        delete registry[subject][issuer][id][key];\n        emit ClaimRemoved(subject, issuer, id, key, now);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"subject\",\"type\":\"address\"},{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"bytes32\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"subject\",\"type\":\"address\"},{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"bytes32\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"subject\",\"type\":\"address\"},{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"bytes32\"},{\"name\":\"key\",\"type\":\"bytes32\"},{\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"setClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"subject\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"ClaimSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"subject\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"removedAt\",\"type\":\"uint256\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "608060405260008054600160a060020a03191633179055610470806100256000396000f3006080604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630eb62699811461007c578063715018a6146100bb5780638da5cb5b146100d2578063d395394414610103578063e9f6063e14610130578063f2fde38b14610160575b600080fd5b34801561008857600080fd5b506100a9600160a060020a0360043581169060243516604435606435610181565b60408051918252519081900360200190f35b3480156100c757600080fd5b506100d06101bd565b005b3480156100de57600080fd5b506100e7610229565b60408051600160a060020a039092168252519081900360200190f35b34801561010f57600080fd5b506100d0600160a060020a0360043581169060243516604435606435610238565b34801561013c57600080fd5b506100d0600160a060020a03600435811690602435166044356064356084356102f4565b34801561016c57600080fd5b506100d0600160a060020a03600435166103a4565b600160a060020a039384166000908152600160209081526040808320959096168252938452848120928152918352838220908252909152205490565b600054600160a060020a031633146101d457600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b33600160a060020a0385161480610257575033600160a060020a038416145b8061026c5750600054600160a060020a031633145b151561027757600080fd5b600160a060020a0380851660008181526001602090815260408083209488168084529482528083208784528252808320868452825280832092909255815185815242918101919091528151869493927fab1becf5c2499ad261b146bd10b18f626724242f55207bdd9f57c19f7b4aa863928290030190a450505050565b33600160a060020a03851614806103155750600054600160a060020a031633145b151561032057600080fd5b600160a060020a0380861660008181526001602090815260408083209489168084529482528083208884528252808320878452825291829020859055815186815290810185905242818301529051869392917ffd62056b5eaee89c8612d04850d81260c02d8824288386f31a9adec01067c4b1919081900360600190a45050505050565b600054600160a060020a031633146103bb57600080fd5b6103c4816103c7565b50565b600160a060020a03811615156103dc57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a7230582063e278a0be1f9679ed8d933e25fdaa6544bc372345a3b3472ff5eace21a612980029"
}