{
  "address": "0xb72e75ebd3fe02a95bc081d2c422f3416d50f5f3",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Token",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-20\n*/\n\ncontract Token {\n    \n\t/* Public variables of the token */\n\tstring public name;\n\tstring public symbol;\n\tuint8 public decimals;\n\tuint256 public totalSupply;\n    \n\t/* This creates an array with all balances */\n\tmapping (address => uint256) public balanceOf;\n\n\t/* This generates a public event on the blockchain that will notify clients */\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\n\n\tfunction Token() {\n\t    totalSupply = 10*(10**8)*(10**18);\n\t\tbalanceOf[msg.sender] = 10*(10**8)*(10**18);              // Give the creator all initial tokens\n\t\tname = \"otoken\";                                   // Set the name for display purposes\n\t\tsymbol = \"OT\";                               // Set the symbol for display purposes\n\t\tdecimals = 18;                            // Amount of decimals for display purposes\n\t}\n\n\tfunction transfer(address _to, uint256 _value) {\n\t/* Check if sender has balance and for overflows */\n\tif (balanceOf[msg.sender] < _value || balanceOf[_to] + _value < balanceOf[_to])\n\t\trevert();\n\t/* Add and subtract new balances */\n\tbalanceOf[msg.sender] -= _value;\n\tbalanceOf[_to] += _value;\n\t/* Notifiy anyone listening that this transfer took place */\n\tTransfer(msg.sender, _to, _value);\n\t}\n\n\t/* This unnamed function is called whenever someone tries to send ether to it */\n\tfunction () {\n\trevert();     // Prevents accidental sending of ether\n\t}\n}",
  "bytecode": "608060405234801561001057600080fd5b506b033b2e3c9fd0803ce80000006003819055506b033b2e3c9fd0803ce8000000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506040805190810160405280600681526020017f6f746f6b656e0000000000000000000000000000000000000000000000000000815250600090805190602001906100bf92919061012d565b506040805190810160405280600281526020017f4f540000000000000000000000000000000000000000000000000000000000008152506001908051906020019061010b92919061012d565b506012600260006101000a81548160ff021916908360ff1602179055506101d2565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061016e57805160ff191683800117855561019c565b8280016001018555821561019c579182015b8281111561019b578251825591602001919060010190610180565b5b5090506101a991906101ad565b5090565b6101cf91905b808211156101cb5760008160009055506001016101b3565b5090565b90565b61061c806101e16000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461008a57806318160ddd1461011a578063313ce5671461014557806370a082311461017657806395d89b41146101cd578063a9059cbb1461025d575b34801561008457600080fd5b50600080fd5b34801561009657600080fd5b5061009f6102aa565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100df5780820151818401526020810190506100c4565b50505050905090810190601f16801561010c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012657600080fd5b5061012f610348565b6040518082815260200191505060405180910390f35b34801561015157600080fd5b5061015a61034e565b604051808260ff1660ff16815260200191505060405180910390f35b34801561018257600080fd5b506101b7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610361565b6040518082815260200191505060405180910390f35b3480156101d957600080fd5b506101e2610379565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610222578082015181840152602081019050610207565b50505050905090810190601f16801561024f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026957600080fd5b506102a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610417565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103405780601f1061031557610100808354040283529160200191610340565b820191906000526020600020905b81548152906001019060200180831161032357829003601f168201915b505050505081565b60035481565b600260009054906101000a900460ff1681565b60046020528060005260406000206000915090505481565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b505050505081565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410806104e35750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401105b156104ed57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505600a165627a7a72305820972573a1aa0794012fe42785b670d72dbf858b827eddce2339b7c8f69d2c99b30029"
}