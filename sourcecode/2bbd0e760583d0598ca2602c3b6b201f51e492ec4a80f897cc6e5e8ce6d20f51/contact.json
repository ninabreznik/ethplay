{
  "address": "0x5a4c67d9ba86b77f0a8f3d5fc55590486b6579e6",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "F1C_1",
  "compilerVersion": "v0.4.20+commit.3155dd80",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-04\n*/\n\npragma solidity ^0.4.20;\ncontract Token {\n    bytes32 public standard;\n    bytes32 public name;\n    bytes32 public symbol;\n    uint256 public totalSupply;\n    uint8 public decimals;\n    bool public allowTransactions;\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowed;\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function approveAndCall(address _spender, uint256 _value, bytes memory _extraData) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n}\n\ncontract F1C_1\n {\n    address public adminaddr; \n    address public useraddr; \n    address public owner;\n    mapping (address => mapping(address => uint256)) public dep_token;\n    mapping (address => uint256) public dep_ETH;\n\n \n    function F1C_1() public\n    {\n         adminaddr = msg.sender; \n    }\n    \n        modifier onlyOwner() {\n       // require(msg.sender == owner, \"Must be owner\");\n        _;\n    }\n    \n    function safeAdd(uint crtbal, uint depbal) public  returns (uint) \n    {\n        uint totalbal = crtbal + depbal;\n        return totalbal;\n    }\n    \n    function safeSub(uint crtbal, uint depbal) public  returns (uint) \n    {\n        uint totalbal = crtbal - depbal;\n        return totalbal;\n    }\n        \n    function balanceOf(address token,address user) public  returns(uint256)            // show bal of perticular token in user add\n    {\n        return Token(token).balanceOf(user);\n    }\n\n    \n    \n    function transfer(address token, uint256 tokens)public payable                         // deposit perticular token balance to contract address (site address), can depoit multiple token   \n    {\n       // Token(token).approve.value(msg.sender)(address(this),tokens);\n        if(Token(token).approve(address(this),tokens))\n        {\n            dep_token[msg.sender][token] = safeAdd(dep_token[msg.sender][token], tokens);\n            Token(token).transferFrom(msg.sender,address(this), tokens);\n        }\n    }\n    \n    function token_withdraw(address token, address to, uint256 tokens)public payable                    // withdraw perticular token balance from contract to user    \n    {\n        if(adminaddr==msg.sender)\n        {  \n            dep_token[msg.sender][token] = safeSub(dep_token[msg.sender][token] , tokens) ;   \n            Token(token).transfer(to, tokens);\n        }\n    }\n    \n     function admin_token_withdraw(address token, address to, uint256 tokens)public payable  // withdraw perticular token balance from contract to user    \n    {\n        if(adminaddr==msg.sender)\n        {                                                              // here only admin can withdraw token                    \n            if(dep_token[msg.sender][token]>=tokens) \n            {\n                dep_token[msg.sender][token] = safeSub(dep_token[msg.sender][token] , tokens) ;   \n                Token(token).transfer(to, tokens);\n            }\n        }\n    }\n    \n    function tok_bal_contract(address token) public view returns(uint256)                       // show balance of contract address\n    {\n        return Token(token).balanceOf(address(this));\n    }\n    \n \n    function depositETH() payable external                                                      // this function deposit eth in contract address\n    { \n        \n    }\n    \n    function withdrawETH(address  to, uint256 value) public payable returns (bool)                            // this will withdraw eth from contract  to address(to)\n    {\n             to.transfer(value);\n             return true;\n    }\n \n    function admin_withdrawETH(address  to, uint256 value) public payable returns (bool)  // this will withdraw eth from contract  to address(to)\n    {\n        \n        if(adminaddr==msg.sender)\n        {                                                               // only admin can withdraw ETH from user\n                 to.transfer(value);\n                 return true;\n    \n         }\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tok_bal_contract\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dep_token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"admin_token_withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"token_withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"useraddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"crtbal\",\"type\":\"uint256\"},{\"name\":\"depbal\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminaddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dep_ETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"admin_withdrawETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"crtbal\",\"type\":\"uint256\"},{\"name\":\"depbal\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]",
  "bytecode": "6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110858061005e6000396000f3006060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063146104e1146100e05780633baed1d61461012d5780634782f779146101995780635ed15d91146101e85780636975fd821461023e5780637e0bb111146102945780638da5cb5b146102e9578063a293d1e81461033e578063a9059cbb1461037e578063ac3d84cd146103b5578063b51502e31461040a578063cfc3f13014610457578063e6cb9013146104a6578063f6326fb3146104e6578063f7888aec146104f0575b600080fd5b34156100eb57600080fd5b610117600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061055c565b6040518082815260200191505060405180910390f35b341561013857600080fd5b610183600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610623565b6040518082815260200191505060405180910390f35b6101ce600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610648565b604051808215151515815260200191505060405180910390f35b61023c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610694565b005b610292600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610942565b005b341561029f57600080fd5b6102a7610b6a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102f457600080fd5b6102fc610b90565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561034957600080fd5b6103686004808035906020019091908035906020019091905050610bb6565b6040518082815260200191505060405180910390f35b6103b3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610bc8565b005b34156103c057600080fd5b6103c8610e99565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561041557600080fd5b610441600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ebe565b6040518082815260200191505060405180910390f35b61048c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ed6565b604051808215151515815260200191505060405180910390f35b34156104b157600080fd5b6104d06004808035906020019091908035906020019091905050610f7d565b6040518082815260200191505060405180910390f35b6104ee610f8f565b005b34156104fb57600080fd5b610546600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610f91565b6040518082815260200191505060405180910390f35b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561060157600080fd5b6102c65a03f1151561061257600080fd5b505050604051805190509050919050565b6003602052816000526040600020602052806000526040600020600091509150505481565b60008273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151561068a57600080fd5b6001905092915050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561093d5780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561093c576107f4600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482610bb6565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561091f57600080fd5b6102c65a03f1151561093057600080fd5b50505060405180519050505b5b505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b6557610a1d600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482610bb6565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610b4857600080fd5b6102c65a03f11515610b5957600080fd5b50505060405180519050505b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008082840390508091505092915050565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610c7357600080fd5b6102c65a03f11515610c8457600080fd5b5050506040518051905015610e9557610d19600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482610f7d565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1515610e7857600080fd5b6102c65a03f11515610e8957600080fd5b50505060405180519050505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f76578273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501515610f6d57600080fd5b60019050610f77565b5b92915050565b60008082840190508091505092915050565b565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561103657600080fd5b6102c65a03f1151561104757600080fd5b505050604051805190509050929150505600a165627a7a72305820b89142785aafda50d0f5cc7fd4e9ce7eabe840bf94b564d115a5810b4c4662420029"
}