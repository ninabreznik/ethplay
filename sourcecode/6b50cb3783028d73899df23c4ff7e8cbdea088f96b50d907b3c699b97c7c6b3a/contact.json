{
  "address": "0x301dcb06f8928b37cf623d930206464f948ab5fc",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "LINIXSB",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-17\n*/\n\npragma solidity ^0.5.0;\n//LNSB token can be swapped with LNX when LNX ends its sale. \n//LNSB toekn has 1:1 ratio with LNX token\n//total number of LNSB is 2,625,000 = 2,500,000(regular sale amount) + 125,000(bonus sale amount)\n//LNSB token is bound to transaction hash ( 0x15c8982c85033ef01fe55abefd5f5544b9960777ffd80d178bf9839cfccc814c ) and transaction hash (0x52f28919791119b2a9fcef828618f4e9df3302ae596f997902503d47ef940cd7 )\n//transfer of regular sale amount = 0x15c8982c85033ef01fe55abefd5f5544b9960777ffd80d178bf9839cfccc814c\n//transfer of bonus sale amount = 0x52f28919791119b2a9fcef828618f4e9df3302ae596f997902503d47ef940cd7\n//bound LNX token is owned by seedblock( 0xbCaA9Fb04aBBCD5C39f7681028bdbd597E0d12fD ) until LINIX ends its sale. \n//if \"Owner_master\" of LNSB token is not equal to \"Owner_master\" of LNX token, the certain token cannot be swapped with LNX token.\n\nlibrary SafeMath{\n  \tfunction mul(uint256 a, uint256 b) internal pure returns (uint256)\n    \t{\n\t\tuint256 c = a * b;\n\t\tassert(a == 0 || c / a == b);\n\n\t\treturn c;\n  \t}\n\n  \tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\n\t{\n\t\tuint256 c = a / b;\n\n\t\treturn c;\n  \t}\n\n  \tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\n\t{\n\t\tassert(b <= a);\n\n\t\treturn a - b;\n  \t}\n\n  \tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\n\t{\n\t\tuint256 c = a + b;\n\t\tassert(c >= a);\n\n\t\treturn c;\n  \t}\n}\n\ncontract Ownable\n{\n  \taddress public Owner_master;\n  \taddress public Owner_creator;\n  \taddress public Owner_manager;\n\n  \tevent ChangeOwner_master(address indexed _from, address indexed _to);\n  \tevent ChangeOwner_creator(address indexed _from, address indexed _to);\n  \tevent ChangeOwner_manager(address indexed _from, address indexed _to);\n\n  \tmodifier onlyOwner_master{ \n          require(msg.sender == Owner_master);\t_; \t}\n  \tmodifier onlyOwner_creator{ \n          require(msg.sender == Owner_creator); _; }\n  \tmodifier onlyOwner_manager{ \n          require(msg.sender == Owner_manager); _; }\n  \tconstructor() public { \n          Owner_master = msg.sender; }\n  \t\n    \n    \n    \n    \n    \n    function transferOwnership_master(address _to) onlyOwner_master public{\n        \trequire(_to != Owner_master);\n        \trequire(_to != Owner_creator);\n        \trequire(_to != Owner_manager);\n        \trequire(_to != address(0x0));\n\n\t\taddress from = Owner_master;\n  \t    \tOwner_master = _to;\n  \t    \n  \t    \temit ChangeOwner_master(from, _to);}\n\n  \tfunction transferOwner_creator(address _to) onlyOwner_master public{\n\t        require(_to != Owner_master);\n        \trequire(_to != Owner_creator);\n        \trequire(_to != Owner_manager);\n\t        require(_to != address(0x0));\n\n\t\taddress from = Owner_creator;        \n\t    \tOwner_creator = _to;\n        \n    \t\temit ChangeOwner_creator(from, _to);}\n\n  \tfunction transferOwner_manager(address _to) onlyOwner_master public{\n\t        require(_to != Owner_master);\n\t        require(_to != Owner_creator);\n        \trequire(_to != Owner_manager);\n\t        require(_to != address(0x0));\n        \t\n\t\taddress from = Owner_manager;\n    \t\tOwner_manager = _to;\n        \n\t    \temit ChangeOwner_manager(from, _to);}\n}\n\ncontract Helper\n{\n    event Transfer( address indexed _from, address indexed _to, uint _value);\n    event Approval( address indexed _owner, address indexed _spender, uint _value);\n    \n    function totalSupply() view public returns (uint _supply);\n    function balanceOf( address _who ) public view returns (uint _value);\n    function transfer( address _to, uint _value) public returns (bool _success);\n    function approve( address _spender, uint _value ) public returns (bool _success);\n    function allowance( address _owner, address _spender ) public view returns (uint _allowance);\n    function transferFrom( address _from, address _to, uint _value) public returns (bool _success);\n}\n\ncontract LINIXSB is Helper, Ownable\n{\n    using SafeMath for uint;\n    \n    string public name;\n    string public symbol;\n    uint public decimals;\n    \n    uint constant private zeroAfterDecimal = 10**18;\n    \n    uint constant public maxSupply             = 2625000 * zeroAfterDecimal;\n    \n    uint constant public maxSupply_SeedBlock        =   2625000 * zeroAfterDecimal;\n\n    \n    uint public issueToken_Total;\n    \n    uint public issueToken_SeedBlock;\n    \n    uint public burnTokenAmount;\n    \n    mapping (address => uint) public balances;\n    mapping (address => mapping ( address => uint )) public approvals;\n\n    bool public tokenLock = true;\n    bool public saleTime = true;\n    uint public endSaleTime = 0;\n    \n    event Burn(address indexed _from, uint _value);\n    \n    event Issue_SeedBlock(address indexed _to, uint _tokens);\n    \n    event TokenUnLock(address indexed _to, uint _tokens);\n\n    \n    constructor() public\n    {\n        name        = \"LINIXSB\";\n        decimals    = 18;\n        symbol      = \"LNSB\";\n        \n        issueToken_Total      = 0;\n        \n        issueToken_SeedBlock     = 0;\n\n        \n        require(maxSupply == maxSupply_SeedBlock);\n\n    }\n    \n    // ERC - 20 Interface -----\n\n    function totalSupply() view public returns (uint) {\n        return issueToken_Total;}\n    \n    function balanceOf(address _who) view public returns (uint) {\n        uint balance = balances[_who];\n        \n        return balance;}\n    \n    function transfer(address _to, uint _value) public returns (bool) {\n        require(isTransferable() == true);\n        require(balances[msg.sender] >= _value);\n        \n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        \n        emit Transfer(msg.sender, _to, _value);\n        \n        return true;}\n    \n    function approve(address _spender, uint _value) public returns (bool){\n        require(isTransferable() == true);\n        require(balances[msg.sender] >= _value);\n        \n        approvals[msg.sender][_spender] = _value;\n        \n        emit Approval(msg.sender, _spender, _value);\n        \n        return true; }\n    \n    function allowance(address _owner, address _spender) view public returns (uint) {\n        return approvals[_owner][_spender];}\n\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\n        require(isTransferable() == true);\n        require(balances[_from] >= _value);\n        require(approvals[_from][msg.sender] >= _value);\n        \n        approvals[_from][msg.sender] = approvals[_from][msg.sender].sub(_value);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to]  = balances[_to].add(_value);\n        \n        emit Transfer(_from, _to, _value);\n        \n        return true;}\n    \n    // -----\n    \n    // Issue Function -----\n\n\n    function issue_noVesting_Public(address _to, uint _value) onlyOwner_creator public\n    {\n        uint tokens = _value * zeroAfterDecimal;\n        require(maxSupply_SeedBlock >= issueToken_SeedBlock.add(tokens));\n        \n        balances[_to] = balances[_to].add(tokens);\n        \n        issueToken_Total = issueToken_Total.add(tokens);\n        issueToken_SeedBlock = issueToken_SeedBlock.add(tokens);\n        \n        emit Issue_SeedBlock(_to, tokens);\n    }    \n    \n       // Lock Function -----\n    \n    function isTransferable() private view returns (bool)\n    {\n        if(tokenLock == false)\n        {\n            return true;\n        }\n        else if(msg.sender == Owner_manager)\n        {\n            return true;\n        }\n        \n        return false;\n    }\n    \n    function setTokenUnlock() onlyOwner_manager public\n    {\n        require(tokenLock == true);\n        require(saleTime == false);\n        \n        tokenLock = false;\n    }\n    \n    function setTokenLock() onlyOwner_manager public\n    {\n        require(tokenLock == false);\n        \n        tokenLock = true;\n    }\n    \n    // -----\n    \n    // ETC / Burn Function -----\n    \n    function () payable external\n    {\n        revert();\n    }\n    \n    function endSale() onlyOwner_manager public\n    {\n        require(saleTime == true);\n        \n        saleTime = false;\n        \n        uint time = now;\n        \n        endSaleTime = time;\n        \n    }\n    \n    function withdrawTokens(address _contract, uint _decimals, uint _value) onlyOwner_manager public\n    {\n\n        if(_contract == address(0x0))\n        {\n            uint eth = _value.mul(10 ** _decimals);\n            msg.sender.transfer(eth);\n        }\n        else\n        {\n            uint tokens = _value.mul(10 ** _decimals);\n            Helper(_contract).transfer(msg.sender, tokens);\n            \n            emit Transfer(address(0x0), msg.sender, tokens);\n        }\n    }\n    \n    function burnToken(uint _value) onlyOwner_manager public\n    {\n        uint tokens = _value * zeroAfterDecimal;\n        \n        require(balances[msg.sender] >= tokens);\n        \n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n        \n        burnTokenAmount = burnTokenAmount.add(tokens);\n        issueToken_Total = issueToken_Total.sub(tokens);\n        \n        emit Burn(msg.sender, tokens);\n    }\n    \n    function close() onlyOwner_master public\n    {\n        selfdestruct(msg.sender);\n    }\n    \n    // -----\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwner_creator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_decimals\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issueToken_SeedBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endSaleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupply_SeedBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership_master\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner_master\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner_manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner_creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnTokenAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issueToken_Total\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"issue_noVesting_Public\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwner_manager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Issue_SeedBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TokenUnLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner_master\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner_creator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner_manager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040526001600b60006101000a81548160ff0219169083151502179055506001600b60016101000a81548160ff0219169083151502179055506000600c553480156200004c57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600781526020017f4c494e495853420000000000000000000000000000000000000000000000000081525060039080519060200190620000da9291906200016e565b5060126005819055506040518060400160405280600481526020017f4c4e53420000000000000000000000000000000000000000000000000000000081525060049080519060200190620001309291906200016e565b5060006006819055506000600781905550670de0b6b3a764000062280de802670de0b6b3a764000062280de802146200016857600080fd5b6200021d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001b157805160ff1916838001178555620001e2565b82800160010185558215620001e2579182015b82811115620001e1578251825591602001919060010190620001c4565b5b509050620001f19190620001f5565b5090565b6200021a91905b8082111562000216576000816000905550600101620001fc565b5090565b90565b6125f5806200022d6000396000f3fe6080604052600436106101e35760003560e01c80638db7e83311610102578063b672edfe11610095578063e405c46211610064578063e405c46214610a54578063e718234d14610a7f578063ec6976c314610aae578063f40c291814610b09576101e3565b8063b672edfe14610922578063b6ab61a714610979578063d5abeb01146109a4578063dd62ed3e146109cf576101e3565b8063a32ce11e116100d1578063a32ce11e1461077c578063a3e05c1814610801578063a9059cbb14610858578063af9f47c0146108cb576101e3565b80638db7e833146106595780638ece19f61461068457806395d89b411461069b578063a07bbbfe1461072b576101e3565b8063380d831b1161017a57806358371ccd1161014957806358371ccd1461057757806370a08231146105a25780637b47ec1a146106075780638430085914610642576101e3565b8063380d831b146104b957806343d726d6146104d05780634c1d1fde146104e7578063546265871461054c576101e3565b806323b872dd116101b657806323b872dd1461034557806327e235e3146103d85780632d8c58111461043d578063313ce5671461048e576101e3565b806306fdde03146101e8578063095ea7b3146102785780631596facb146102eb57806318160ddd1461031a575b600080fd5b3480156101f457600080fd5b506101fd610b5a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023d578082015181840152602081019050610222565b50505050905090810190601f16801561026a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028457600080fd5b506102d16004803603604081101561029b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bf8565b604051808215151515815260200191505060405180910390f35b3480156102f757600080fd5b50610300610d4e565b604051808215151515815260200191505060405180910390f35b34801561032657600080fd5b5061032f610d61565b6040518082815260200191505060405180910390f35b34801561035157600080fd5b506103be6004803603606081101561036857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d6b565b604051808215151515815260200191505060405180910390f35b3480156103e457600080fd5b50610427600480360360208110156103fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611103565b6040518082815260200191505060405180910390f35b34801561044957600080fd5b5061048c6004803603602081101561046057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061111b565b005b34801561049a57600080fd5b506104a3611384565b6040518082815260200191505060405180910390f35b3480156104c557600080fd5b506104ce61138a565b005b3480156104dc57600080fd5b506104e561142e565b005b3480156104f357600080fd5b5061054a6004803603606081101561050a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506114a0565b005b34801561055857600080fd5b506105616116e0565b6040518082815260200191505060405180910390f35b34801561058357600080fd5b5061058c6116e6565b6040518082815260200191505060405180910390f35b3480156105ae57600080fd5b506105f1600480360360208110156105c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116ec565b6040518082815260200191505060405180910390f35b34801561061357600080fd5b506106406004803603602081101561062a57600080fd5b810190808035906020019092919050505061173a565b005b34801561064e57600080fd5b5061065761190c565b005b34801561066557600080fd5b5061066e6119c3565b6040518082815260200191505060405180910390f35b34801561069057600080fd5b506106996119d4565b005b3480156106a757600080fd5b506106b0611a6b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106f05780820151818401526020810190506106d5565b50505050905090810190601f16801561071d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561073757600080fd5b5061077a6004803603602081101561074e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b09565b005b34801561078857600080fd5b506107eb6004803603604081101561079f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d70565b6040518082815260200191505060405180910390f35b34801561080d57600080fd5b50610816611d95565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561086457600080fd5b506108b16004803603604081101561087b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611dba565b604051808215151515815260200191505060405180910390f35b3480156108d757600080fd5b506108e0611fb9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561092e57600080fd5b50610937611fdf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561098557600080fd5b5061098e612005565b6040518082815260200191505060405180910390f35b3480156109b057600080fd5b506109b961200b565b6040518082815260200191505060405180910390f35b3480156109db57600080fd5b50610a3e600480360360408110156109f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061201c565b6040518082815260200191505060405180910390f35b348015610a6057600080fd5b50610a696120a3565b6040518082815260200191505060405180910390f35b348015610a8b57600080fd5b50610a946120a9565b604051808215151515815260200191505060405180910390f35b348015610aba57600080fd5b50610b0760048036036040811015610ad157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120bc565b005b348015610b1557600080fd5b50610b5860048036036020811015610b2c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612271565b005b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bf05780601f10610bc557610100808354040283529160200191610bf0565b820191906000526020600020905b815481529060010190602001808311610bd357829003601f168201915b505050505081565b600060011515610c066124da565b151514610c1257600080fd5b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c5e57600080fd5b81600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600b60019054906101000a900460ff1681565b6000600654905090565b600060011515610d796124da565b151514610d8557600080fd5b81600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610dd157600080fd5b81600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610e5a57600080fd5b610ee982600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461256790919063ffffffff16565b600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fbb82600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461256790919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061105082600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257e90919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60096020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461117457600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111ce57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561122957600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561128457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112be57600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f844a4a077632ba562a663615fa01ad4f6a684b0009ab71fda6ff9b1e65917f4e60405160405180910390a35050565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113e457600080fd5b60011515600b60019054906101000a900460ff1615151461140457600080fd5b6000600b60016101000a81548160ff021916908315150217905550600042905080600c8190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461148757600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114fa57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561159657600061154783600a0a8361259a90919063ffffffff16565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561158f573d6000803e3d6000fd5b50506116db565b60006115ae83600a0a8361259a90919063ffffffff16565b90508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561163757600080fd5b505af115801561164b573d6000803e3d6000fd5b505050506040513d602081101561166157600080fd5b8101908080519060200190929190505050503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505b505050565b60075481565b600c5481565b600080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080915050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461179457600080fd5b6000670de0b6b3a76400008202905080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156117ef57600080fd5b61184181600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461256790919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118998160085461257e90919063ffffffff16565b6008819055506118b48160065461256790919063ffffffff16565b6006819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461196657600080fd5b60011515600b60009054906101000a900460ff1615151461198657600080fd5b60001515600b60019054906101000a900460ff161515146119a657600080fd5b6000600b60006101000a81548160ff021916908315150217905550565b670de0b6b3a764000062280de80281565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a2e57600080fd5b60001515600b60009054906101000a900460ff16151514611a4e57600080fd5b6001600b60006101000a81548160ff021916908315150217905550565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b015780601f10611ad657610100808354040283529160200191611b01565b820191906000526020600020905b815481529060010190602001808311611ae457829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b6257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bbc57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c1757600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c7257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611cac57600080fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ffb59157e8f879f9a78b5e0577ec7f6bd968ad0c68e256dbb77ae94085af124b160405160405180910390a35050565b600a602052816000526040600020602052806000526040600020600091509150505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515611dc86124da565b151514611dd457600080fd5b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611e2057600080fd5b611e7282600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461256790919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611f0782600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257e90919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b670de0b6b3a764000062280de80281565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60065481565b600b60009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461211657600080fd5b6000670de0b6b3a76400008202905061213a8160075461257e90919063ffffffff16565b670de0b6b3a764000062280de802101561215357600080fd5b6121a581600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257e90919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506121fd8160065461257e90919063ffffffff16565b6006819055506122188160075461257e90919063ffffffff16565b6007819055508273ffffffffffffffffffffffffffffffffffffffff167f82dd79f391425e3a623f8b4ee8f1b152a372170d9e0b366a4e42ce7635baa2ca826040518082815260200191505060405180910390a2505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146122ca57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561232457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561237f57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156123da57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561241457600080fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fde74b34baf2abeca966c14b8764bc969fc3ae0bdc270dce243d3e61e0f0343a660405160405180910390a35050565b6000801515600b60009054906101000a900460ff16151514156125005760019050612564565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561255f5760019050612564565b600090505b90565b60008282111561257357fe5b818303905092915050565b60008082840190508381101561259057fe5b8091505092915050565b600080828402905060008414806125b95750828482816125b657fe5b04145b6125bf57fe5b809150509291505056fea165627a7a72305820b0ebcaafd09ca2dd012bfbbda0d8ff2dc3af946a752d993c316aae5995cce5db0029"
}