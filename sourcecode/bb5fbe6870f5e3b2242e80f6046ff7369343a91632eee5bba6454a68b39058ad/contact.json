{
  "address": "0xa4d17ab1ee0efdd23edc2869e7ba96b89eecf9ab",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TRUEToken",
  "compilerVersion": "v0.4.16-nightly.2017.8.9+commit.81887bc7",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-03\n*/\n\n/**\n * Overflow aware uint math functions.\n *\n * Inspired by https://github.com/MakerDAO/maker-otc/blob/master/contracts/simple_market.sol\n */\npragma solidity ^0.4.11;\n\n/**\n * ERC 20 token\n *\n * https://github.com/ethereum/EIPs/issues/20\n */\ncontract TRUEToken  {\n    string public constant name = \"TRUE Token\";\n    string public constant symbol = \"TRUE\";\n    uint public constant decimals = 18;\n    uint256 _totalSupply    = 100000000 * 10**decimals;\n\n    function totalSupply() constant returns (uint256 supply) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n\n    mapping(address => uint256) balances; //list of balance of each address\n    mapping(address => mapping (address => uint256)) allowed;\n\n    uint public baseStartTime; //All other time spots are calculated based on this time spot.\n\n    address public founder = 0x0;\n\n    uint256 public distributed = 0;\n\n    event AllocateFounderTokens(address indexed sender);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    //constructor\n    function TRUEToken(address _founder) {\n        founder = _founder;\n    }\n\n    function setStartTime(uint _startTime) {\n        if (msg.sender!=founder) revert();\n        baseStartTime = _startTime;\n    }\n\n    /**\n     * Distribute tokens out.\n     *\n     * Security review\n     *\n     * Applicable tests:\n     *\n     *\n     */\n    function distribute(uint256 _amount, address _to) {\n        if (msg.sender!=founder) revert();\n        if (distributed + _amount > _totalSupply) revert();\n\n        distributed += _amount;\n\n        balances[_to] += _amount;\n        Transfer(this, _to, _amount);\n    }\n\n\n\n    /**\n     * ERC 20 Standard Token interface transfer function\n     *\n     * Prevent transfers until freeze period is over.\n     *\n     * Applicable tests:\n     *\n     * - Test restricted early transfer\n     * - Test transfer after restricted period\n     */\n    function transfer(address _to, uint256 _value) returns (bool success) {\n        if (now < baseStartTime) revert();\n\n        //Default assumes totalSupply can't be over max (2^256 - 1).\n        //If your token leaves out totalSupply and can issue more tokens as time goes on, you need to check if it doesn't wrap.\n        //Replace the if with this one instead.\n        if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Change founder address (where ICO ETH is being forwarded).\n     *\n     * Applicable tests:\n     *\n     * - Test founder change by hacker\n     * - Test founder change\n     * - Test founder token allocation twice\n     */\n    function changeFounder(address newFounder) {\n        if (msg.sender!=founder) revert();\n        founder = newFounder;\n    }\n\n    /**\n     * ERC 20 Standard Token interface transfer function\n     *\n     * Prevent transfers until freeze period is over.\n     */\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n        if (msg.sender != founder) revert();\n\n        //same as above. Replace this line with the following if you want to protect against wrapping uints.\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\n\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            allowed[_from][msg.sender] -= _value;\n            Transfer(_from, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n    // forward all eth to founder\n    function() payable {\n        if (!founder.call.value(msg.value)()) revert(); \n    }\n\n    // only owner can kill\n    function kill() { \n        if (msg.sender == founder) {\n            suicide(founder); \n        }\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newFounder\",\"type\":\"address\"}],\"name\":\"changeFounder\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_founder\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllocateFounderTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526a52b7d2dcc80cd2e4000000600090815560048054600160a060020a0319169055600555341561003357600080fd5b60405160208061098e833981016040528080519150505b60048054600160a060020a031916600160a060020a0383161790555b505b610917806100776000396000f300606060405236156100e35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610117578063095ea7b3146101a25780630f7503c9146101d857806318160ddd146101fd57806323b872dd14610222578063313ce5671461025e5780633e0a322d1461028357806341c0e1b51461029b5780634d853ee5146102b057806370a08231146102df57806393c32e061461031057806395d89b4114610331578063a9059cbb146103bc578063dd62ed3e146103f2578063e1fa8b0214610429578063f84b903e1461044d575b5b600454600160a060020a03163460405160006040518083038185876187965a03f192505050151561011457600080fd5b5b005b341561012257600080fd5b61012a610472565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101675780820151818401525b60200161014e565b50505050905090810190601f1680156101945780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ad57600080fd5b6101c4600160a060020a03600435166024356104a9565b604051901515815260200160405180910390f35b34156101e357600080fd5b6101eb610516565b60405190815260200160405180910390f35b341561020857600080fd5b6101eb61051c565b60405190815260200160405180910390f35b341561022d57600080fd5b6101c4600160a060020a0360043581169060243516604435610523565b604051901515815260200160405180910390f35b341561026957600080fd5b6101eb610653565b60405190815260200160405180910390f35b341561028e57600080fd5b610114600435610658565b005b34156102a657600080fd5b61011461067c565b005b34156102bb57600080fd5b6102c36106a4565b604051600160a060020a03909116815260200160405180910390f35b34156102ea57600080fd5b6101eb600160a060020a03600435166106b3565b60405190815260200160405180910390f35b341561031b57600080fd5b610114600160a060020a03600435166106d2565b005b341561033c57600080fd5b61012a610719565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101675780820151818401525b60200161014e565b50505050905090810190601f1680156101945780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103c757600080fd5b6101c4600160a060020a0360043516602435610750565b604051901515815260200160405180910390f35b34156103fd57600080fd5b6101eb600160a060020a0360043581169060243516610824565b60405190815260200160405180910390f35b341561043457600080fd5b610114600435600160a060020a0360243516610851565b005b341561045857600080fd5b6101eb6108e5565b60405190815260200160405180910390f35b60408051908101604052600a81527f5452554520546f6b656e00000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60035481565b6000545b90565b60045460009033600160a060020a0390811691161461054157600080fd5b600160a060020a0384166000908152600160205260409020548290108015906105915750600160a060020a0380851660009081526002602090815260408083203390941683529290522054829010155b80156105b65750600160a060020a038316600090815260016020526040902054828101115b1561064757600160a060020a03808416600081815260016020908152604080832080548801905588851680845281842080548990039055600283528184203390961684529490915290819020805486900390559091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600161064b565b5060005b5b9392505050565b601281565b60045433600160a060020a0390811691161461067357600080fd5b60038190555b50565b60045433600160a060020a03908116911614156106a157600454600160a060020a0316ff5b5b565b600454600160a060020a031681565b600160a060020a0381166000908152600160205260409020545b919050565b60045433600160a060020a039081169116146106ed57600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b60408051908101604052600481527f5452554500000000000000000000000000000000000000000000000000000000602082015281565b600060035442101561076157600080fd5b600160a060020a0333166000908152600160205260409020548290108015906107a35750600160a060020a038316600090815260016020526040902054828101115b1561081557600160a060020a033381166000818152600160205260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610510565b506000610510565b5b92915050565b600160a060020a038083166000908152600260209081526040808320938516835292905220545b92915050565b60045433600160a060020a0390811691161461086c57600080fd5b6000548260055401111561087f57600080fd5b6005805483019055600160a060020a038082166000818152600160205260409081902080548601905590913016907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35b5050565b600554815600a165627a7a72305820f8218b733ea4576d9249756371a061572cb064c3f8bbaa299bcf667172d2fedf0029000000000000000000000000e04aee1dd91b2cd256bd196d09271756498ca143",
  "constructorArguments": "000000000000000000000000e04aee1dd91b2cd256bd196d09271756498ca143"
}