{
  "address": "0x9dfe4643c04078a46803edcc30a3291b76d4c20c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "GenesisToken",
  "compilerVersion": "v0.4.16+commit.d7661dd9",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-10-18\n*/\n\npragma solidity ^0.4.16;\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n  \n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\n    return a >= b ? a : b;\n  }\n\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\n    return a < b ? a : b;\n  }\n\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\n    return a >= b ? a : b;\n  }\n\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\n    return a < b ? a : b;\n  }\n\n}\n\n contract ERC20Interface {\n     function balanceOf(address _owner) constant returns (uint256 balance);\n     function transfer(address _to, uint256 _value) returns (bool success);\n     function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n     function approve(address _spender, uint256 _value) returns (bool success);\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n        \n     event Transfer(address indexed _from, address indexed _to, uint256 _value);\n     event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    }\ncontract GenesisToken is ERC20Interface {\n     \n     using SafeMath for uint256;\n     \n     string public constant symbol = \"GEN\";\n     string public constant name = \"Genesis\";\n     uint8 public constant decimals = 18;\n     uint256 public _totalSupply = 16000000000000000000000000;\n     \n     address public owner;\n \n    mapping(address => uint256) balances;\n    \n    mapping(address => mapping (address => uint256)) allowed;\n    \n    modifier onlyOwner() {\n         if (msg.sender != owner) {\n             revert();\n         }\n         _;\n     }\n     \n    function GenesisToken() {\n        owner = msg.sender;\n        balances[owner] = _totalSupply;\n    } \n    \n    function totalSupply() constant returns (uint256) {        \n\t\treturn _totalSupply;\n    }\n    \n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n    \n    function transfer(address _to, uint256 _amount) returns (bool success) {\n        if (balances[msg.sender] >= _amount \n             && _amount > 0\n             && balances[_to] + _amount > balances[_to]) {\n             balances[msg.sender] = balances[msg.sender].sub(_amount);\n             balances[_to] = balances[_to].add(_amount);\n             Transfer(msg.sender, _to, _amount);\n             return true;\n         } else {\n             return false;\n         }\n    }\n    \n    function transferFrom(\n            address _from,\n            address _to,\n            uint256 _amount\n        )   returns (bool success) {\n            if (balances[_from] >= _amount\n             && allowed[_from][msg.sender] >= _amount\n             && _amount > 0\n             && balances[_to] + _amount > balances[_to]) {\n             balances[_from] = balances[_from].sub(_amount);\n             allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n             balances[_to] = balances[_to].add(_amount);\n             Transfer(_from, _to, _amount);\n             return true;\n         }  else {\n             return false;\n         }\n    }\n    \n    function approve(address _spender, uint256 _amount) returns (bool success) {\n         allowed[msg.sender][_spender] = _amount;\n         Approval(msg.sender, _spender, _amount);\n         return true;\n    }\n    \n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n         return allowed[_owner][_spender];\n    }\n    \n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}",
  "bytecode": "60606040526a0d3c21bcecceda10000000600055341561001e57600080fd5b5b60018054600160a060020a03191633600160a060020a03908116919091179182905560008054929091168152600260205260409020555b5b6107e1806100666000396000f300606060405236156100ac5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b1578063095ea7b31461013c57806318160ddd1461017257806323b872dd14610197578063313ce567146101d35780633eaaf86b146101fc57806370a08231146102215780638da5cb5b1461025257806395d89b4114610281578063a9059cbb1461030c578063dd62ed3e14610342575b600080fd5b34156100bc57600080fd5b6100c4610379565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101015780820151818401525b6020016100e8565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014757600080fd5b61015e600160a060020a03600435166024356103b0565b604051901515815260200160405180910390f35b341561017d57600080fd5b61018561041d565b60405190815260200160405180910390f35b34156101a257600080fd5b61015e600160a060020a0360043581169060243516604435610424565b604051901515815260200160405180910390f35b34156101de57600080fd5b6101e66105c7565b60405160ff909116815260200160405180910390f35b341561020757600080fd5b6101856105cc565b60405190815260200160405180910390f35b341561022c57600080fd5b610185600160a060020a03600435166105d2565b60405190815260200160405180910390f35b341561025d57600080fd5b6102656105f1565b604051600160a060020a03909116815260200160405180910390f35b341561028c57600080fd5b6100c4610600565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101015780820151818401525b6020016100e8565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561031757600080fd5b61015e600160a060020a0360043516602435610637565b604051901515815260200160405180910390f35b341561034d57600080fd5b610185600160a060020a0360043581169060243516610757565b60405190815260200160405180910390f35b60408051908101604052600781527f47656e6573697300000000000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260036020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b6000545b90565b600160a060020a0383166000908152600260205260408120548290108015906104745750600160a060020a0380851660009081526003602090815260408083203390941683529290522054829010155b80156104805750600082115b80156104a55750600160a060020a038316600090815260026020526040902054828101115b156105bb57600160a060020a0384166000908152600260205260409020546104d3908363ffffffff61078416565b600160a060020a0380861660009081526002602090815260408083209490945560038152838220339093168252919091522054610516908363ffffffff61078416565b600160a060020a038086166000908152600360209081526040808320338516845282528083209490945591861681526002909152205461055c908363ffffffff61079b16565b600160a060020a03808516600081815260026020526040908190209390935591908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060016105bf565b5060005b5b9392505050565b601281565b60005481565b600160a060020a0381166000908152600260205260409020545b919050565b600154600160a060020a031681565b60408051908101604052600381527f47454e0000000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a0333166000908152600260205260408120548290108015906106605750600082115b80156106855750600160a060020a038316600090815260026020526040902054828101115b1561074857600160a060020a0333166000908152600260205260409020546106b3908363ffffffff61078416565b600160a060020a0333811660009081526002602052604080822093909355908516815220546106e8908363ffffffff61079b16565b600160a060020a0380851660008181526002602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610417565b506000610417565b5b92915050565b600160a060020a038083166000908152600360209081526040808320938516835292905220545b92915050565b60008282111561079057fe5b508082035b92915050565b6000828201838110156107aa57fe5b8091505b50929150505600a165627a7a72305820818b0224b17b3981f36abbbde38a458eaf8e54ddbe9e13d7b4d6c53e5df620a70029"
}