{
  "address": "0xf4ba4c2aa5bc3c373537ec85f61a02afdb697106",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Wallet",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-06-03\n*/\n\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\npragma solidity ^0.4.24;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (_a == 0) {\n      return 0;\n    }\n\n    c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = _a / _b;\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n    return _a / _b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    c = _a + _b;\n    assert(c >= _a);\n    return c;\n  }\n}\n\n// File: contracts/Interfaces/IWallet.sol\n\npragma solidity ^0.4.24;\n\n/**\n * @title Wallet interface.\n * @dev The interface of the SC that own the assets.\n */\ninterface IWallet {\n\n  function transferAssetTo(\n    address _assetAddress,\n    address _to,\n    uint _amount\n  ) external payable returns (bool);\n\n  function withdrawAsset(\n    address _assetAddress,\n    uint _amount\n  ) external returns (bool);\n\n  function setTokenSwapAllowance (\n    address _tokenSwapAddress,\n    bool _allowance\n  ) external returns(bool);\n}\n\n// File: contracts/Interfaces/IBadERC20.sol\n\npragma solidity ^0.4.24;\n\n/**\n * @title Bad formed ERC20 token interface.\n * @dev The interface of the a bad formed ERC20 token.\n */\ninterface IBadERC20 {\n    function transfer(address to, uint256 value) external;\n    function approve(address spender, uint256 value) external;\n    function transferFrom(\n      address from,\n      address to,\n      uint256 value\n    ) external;\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(\n      address who\n    ) external view returns (uint256);\n\n    function allowance(\n      address owner,\n      address spender\n    ) external view returns (uint256);\n\n    event Transfer(\n      address indexed from,\n      address indexed to,\n      uint256 value\n    );\n    event Approval(\n      address indexed owner,\n      address indexed spender,\n      uint256 value\n    );\n}\n\n// File: contracts/Utils/Ownable.sol\n\npragma solidity ^0.4.24;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner, \"msg.sender not owner\");\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0), \"_newOwner == 0\");\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n// File: contracts/Utils/Destructible.sol\n\npragma solidity ^0.4.24;\n\n\n/**\n * @title Destructible\n * @dev Base contract that can be destroyed by owner. All funds in contract will be sent to the owner.\n */\ncontract Destructible is Ownable {\n  /**\n   * @dev Transfers the current balance to the owner and terminates the contract.\n   */\n  function destroy() public onlyOwner {\n    selfdestruct(owner);\n  }\n\n  function destroyAndSend(address _recipient) public onlyOwner {\n    selfdestruct(_recipient);\n  }\n}\n\n// File: contracts/Utils/SafeTransfer.sol\n\npragma solidity ^0.4.24;\n\n\n/**\n * @title SafeTransfer\n * @dev Transfer Bad ERC20 tokens\n */\nlibrary SafeTransfer {\n/**\n   * @dev Wrapping the ERC20 transferFrom function to avoid missing returns.\n   * @param _tokenAddress The address of bad formed ERC20 token.\n   * @param _from Transfer sender.\n   * @param _to Transfer receiver.\n   * @param _value Amount to be transfered.\n   * @return Success of the safeTransferFrom.\n   */\n\n  function _safeTransferFrom(\n    address _tokenAddress,\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    internal\n    returns (bool result)\n  {\n    IBadERC20(_tokenAddress).transferFrom(_from, _to, _value);\n\n    assembly {\n      switch returndatasize()\n      case 0 {                      // This is our BadToken\n        result := not(0)            // result is true\n      }\n      case 32 {                     // This is our GoodToken\n        returndatacopy(0, 0, 32)\n        result := mload(0)          // result == returndata of external call\n      }\n      default {                     // This is not an ERC20 token\n        revert(0, 0)\n      }\n    }\n  }\n\n  /**\n   * @dev Wrapping the ERC20 transfer function to avoid missing returns.\n   * @param _tokenAddress The address of bad formed ERC20 token.\n   * @param _to Transfer receiver.\n   * @param _amount Amount to be transfered.\n   * @return Success of the safeTransfer.\n   */\n  function _safeTransfer(\n    address _tokenAddress,\n    address _to,\n    uint _amount\n  )\n    internal\n    returns (bool result)\n  {\n    IBadERC20(_tokenAddress).transfer(_to, _amount);\n\n    assembly {\n      switch returndatasize()\n      case 0 {                      // This is our BadToken\n        result := not(0)            // result is true\n      }\n      case 32 {                     // This is our GoodToken\n        returndatacopy(0, 0, 32)\n        result := mload(0)          // result == returndata of external call\n      }\n      default {                     // This is not an ERC20 token\n        revert(0, 0)\n      }\n    }\n  }\n}\n\n// File: contracts/Wallet.sol\n\npragma solidity ^0.4.24;\n\n\n\n\n\n\n/**\n * @title Wallet.\n * The wallet that will manage the TokenSwap contract liquidity.\n */\ncontract Wallet is IWallet, Destructible {\n  using SafeMath for uint;\n\n  mapping (address => bool) public isTokenSwapAllowed;\n\n  event LogTransferAssetTo(\n    address indexed _assetAddress,\n    address indexed _to,\n    uint _amount\n  );\n  event LogWithdrawAsset(\n    address indexed _assetAddress,\n    address indexed _from,\n    uint _amount\n  );\n  event LogSetTokenSwapAllowance(\n    address indexed _tokenSwapAddress,\n    bool _allowance\n  );\n\n  constructor(address[] memory _tokenSwapContractsAddress) public {\n    for (uint i = 0; i < _tokenSwapContractsAddress.length; i++) {\n      isTokenSwapAllowed[_tokenSwapContractsAddress[i]] = true;\n    }\n  }\n\n  /**\n   * @dev Throws if called by any TokenSwap not allowed.\n   */\n  modifier onlyTokenSwapAllowed() {\n    require(\n      isTokenSwapAllowed[msg.sender],\n      \"msg.sender is not one of the allowed TokenSwap smart contract\"\n    );\n    _;\n  }\n\n  /**\n   * @dev Fallback function.\n   * So the contract is able to receive ETH.\n   */\n  function() external payable {}\n\n  /**\n   * @dev Transfer an asset from this wallet to a receiver.\n   * This function can be call only from allowed TokenSwap smart contracts.\n   * @param _assetAddress The asset address.\n   * @param _to The asset receiver.\n   * @param _amount The amount to be received.\n   */\n  function transferAssetTo(\n    address _assetAddress,\n    address _to,\n    uint _amount\n  )\n    external\n    payable\n    onlyTokenSwapAllowed\n    returns (bool)\n  {\n    require(_to != address(0), \"_to == 0\");\n    if (isETH(_assetAddress)) {\n      require(address(this).balance >= _amount, \"ETH balance not sufficient\");\n      _to.transfer(_amount);\n    } else {\n      require(\n        IBadERC20(_assetAddress).balanceOf(address(this)) >= _amount,\n        \"Token balance not sufficient\"\n      );\n      require(\n        SafeTransfer._safeTransfer(\n          _assetAddress,\n          _to,\n          _amount\n        ),\n        \"Token transfer failed\"\n      );\n    }\n    emit LogTransferAssetTo(_assetAddress, _to, _amount);\n    return true;\n  }\n\n  /**\n   * @dev Asset withdraw.\n   * This function can be call only from the owner of the Wallet smart contract.\n   * @param _assetAddress The asset address.\n   * @param _amount The amount to be received.\n   */\n  function withdrawAsset(\n    address _assetAddress,\n    uint _amount\n  )\n    external\n    onlyOwner\n    returns(bool)\n  {\n    if (isETH(_assetAddress)) {\n      require(\n        address(this).balance >= _amount,\n        \"ETH balance not sufficient\"\n      );\n      msg.sender.transfer(_amount);\n    } else {\n      require(\n        IBadERC20(_assetAddress).balanceOf(address(this)) >= _amount,\n        \"Token balance not sufficient\"\n      );\n      require(\n        SafeTransfer._safeTransfer(\n          _assetAddress,\n          msg.sender,\n          _amount\n        ),\n        \"Token transfer failed\"\n      );\n    }\n    emit LogWithdrawAsset(_assetAddress, msg.sender, _amount);\n    return true;\n  }\n\n  /**\n   * @dev Add or remove Token Swap allowance.\n   * @param _tokenSwapAddress The token swap sc address.\n   * @param _allowance The allowance TRUE or FALSE.\n   */\n  function setTokenSwapAllowance (\n    address _tokenSwapAddress,\n    bool _allowance\n  ) external onlyOwner returns(bool) {\n    emit LogSetTokenSwapAllowance(\n      _tokenSwapAddress,\n      _allowance\n    );\n    isTokenSwapAllowed[_tokenSwapAddress] = _allowance;\n    return true;\n  }\n\n  /**\n   * @dev Understand if the token is ETH or not.\n   * @param _tokenAddress The token address to be checked.\n   */\n  function isETH(address _tokenAddress)\n    public\n    pure\n    returns (bool)\n  {\n    return _tokenAddress == 0;\n  }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_assetAddress\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAsset\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTokenSwapAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenSwapAddress\",\"type\":\"address\"},{\"name\":\"_allowance\",\"type\":\"bool\"}],\"name\":\"setTokenSwapAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_assetAddress\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferAssetTo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"isETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenSwapContractsAddress\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LogTransferAssetTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdrawAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_tokenSwapAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_allowance\",\"type\":\"bool\"}],\"name\":\"LogSetTokenSwapAllowance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50604051610cc4380380610cc483398101604052805160008054600160a060020a031916331781559101905b8151811015610092576001806000848481518110151561005857fe5b602090810291909101810151600160a060020a03168252810191909152604001600020805460ff191691151591909117905560010161003c565b5050610c21806100a36000396000f3006080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166338e4f06481146100a557806361acdf70146100dd578063715018a6146100fe57806383197ef0146101135780638da5cb5b14610128578063df5c833814610159578063f2fde38b1461017f578063f46e62f0146101a0578063f5074f41146101bd578063f70a2508146101de575b005b3480156100b157600080fd5b506100c9600160a060020a03600435166024356101ff565b604080519115158252519081900360200190f35b3480156100e957600080fd5b506100c9600160a060020a036004351661047a565b34801561010a57600080fd5b506100a361048f565b34801561011f57600080fd5b506100a3610534565b34801561013457600080fd5b5061013d610592565b60408051600160a060020a039092168252519081900360200190f35b34801561016557600080fd5b506100c9600160a060020a036004351660243515156105a1565b34801561018b57600080fd5b506100a3600160a060020a0360043516610663565b6100c9600160a060020a03600435811690602435166044356106bf565b3480156101c957600080fd5b506100a3600160a060020a03600435166109ed565b3480156101ea57600080fd5b506100c9600160a060020a0360043516610a49565b60008054600160a060020a03163314610250576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bd6833981519152604482015290519081900360640190fd5b61025983610a49565b156102ea5730318211156102b7576040805160e560020a62461bcd02815260206004820152601a60248201527f4554482062616c616e6365206e6f742073756666696369656e74000000000000604482015290519081900360640190fd5b604051339083156108fc029084906000818181858888f193505050501580156102e4573d6000803e3d6000fd5b50610431565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600160a060020a038616916370a08231916024808201926020929091908290030181600087803b15801561034e57600080fd5b505af1158015610362573d6000803e3d6000fd5b505050506040513d602081101561037857600080fd5b505110156103d0576040805160e560020a62461bcd02815260206004820152601c60248201527f546f6b656e2062616c616e6365206e6f742073756666696369656e7400000000604482015290519081900360640190fd5b6103db833384610a56565b1515610431576040805160e560020a62461bcd02815260206004820152601560248201527f546f6b656e207472616e73666572206661696c65640000000000000000000000604482015290519081900360640190fd5b6040805183815290513391600160a060020a038616917f9eee58f2a65397b5d83268766f2ef5bcdae50480bdc3e350b0e0b81732555a399181900360200190a350600192915050565b60016020526000908152604090205460ff1681565b600054600160a060020a031633146104df576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bd6833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a03163314610584576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bd6833981519152604482015290519081900360640190fd5b600054600160a060020a0316ff5b600054600160a060020a031681565b60008054600160a060020a031633146105f2576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bd6833981519152604482015290519081900360640190fd5b6040805183151581529051600160a060020a038516917fbb30081a0ed5b8b57574d10de11d818e723dd006e844f87c9eab2f3ef44f3f3e919081900360200190a250600160a060020a0382166000908152600160208190526040909120805483151560ff1990911617905592915050565b600054600160a060020a031633146106b3576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bd6833981519152604482015290519081900360640190fd5b6106bc81610b0d565b50565b3360009081526001602052604081205460ff16151561074e576040805160e560020a62461bcd02815260206004820152603d60248201527f6d73672e73656e646572206973206e6f74206f6e65206f662074686520616c6c60448201527f6f77656420546f6b656e5377617020736d61727420636f6e7472616374000000606482015290519081900360840190fd5b600160a060020a03831615156107ae576040805160e560020a62461bcd02815260206004820152600860248201527f5f746f203d3d2030000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6107b784610a49565b15610851573031821115610815576040805160e560020a62461bcd02815260206004820152601a60248201527f4554482062616c616e6365206e6f742073756666696369656e74000000000000604482015290519081900360640190fd5b604051600160a060020a0384169083156108fc029084906000818181858888f1935050505015801561084b573d6000803e3d6000fd5b50610998565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600160a060020a038716916370a08231916024808201926020929091908290030181600087803b1580156108b557600080fd5b505af11580156108c9573d6000803e3d6000fd5b505050506040513d60208110156108df57600080fd5b50511015610937576040805160e560020a62461bcd02815260206004820152601c60248201527f546f6b656e2062616c616e6365206e6f742073756666696369656e7400000000604482015290519081900360640190fd5b610942848484610a56565b1515610998576040805160e560020a62461bcd02815260206004820152601560248201527f546f6b656e207472616e73666572206661696c65640000000000000000000000604482015290519081900360640190fd5b82600160a060020a031684600160a060020a03167fbf74501c3ae032b3e21c87ef8918787f8eabeeb62dc12152070f52fd8d443775846040518082815260200191505060405180910390a35060019392505050565b600054600160a060020a03163314610a3d576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bd6833981519152604482015290519081900360640190fd5b80600160a060020a0316ff5b600160a060020a03161590565b604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03848116600483015260248201849052915160009286169163a9059cbb916044808301928692919082900301818387803b158015610ac157600080fd5b505af1158015610ad5573d6000803e3d6000fd5b505050503d60008114610aef5760208114610af957600080fd5b6000199150610b05565b60206000803e60005191505b509392505050565b600160a060020a0381161515610b6d576040805160e560020a62461bcd02815260206004820152600e60248201527f5f6e65774f776e6572203d3d2030000000000000000000000000000000000000604482015290519081900360640190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556006d73672e73656e646572206e6f74206f776e6572000000000000000000000000a165627a7a72305820d0103a715da00c447ddee1f9a9e340b0c6b5e7379cf6820a7f972c525b05f4fc002900000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000"
}