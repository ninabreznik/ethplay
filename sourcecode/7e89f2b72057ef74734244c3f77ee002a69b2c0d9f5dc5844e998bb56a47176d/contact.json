{
  "address": "0xef11dcd9f162207d4e751d9afbdea3cb78e6efc1",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Vesting",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-02-12\n*/\n\npragma solidity 0.4.19;\n/// @title ERC223 interface\ninterface ERC223 {\n\n    function totalSupply() public view returns (uint);\n    function name() public view returns (string);\n    function symbol() public view returns (string);\n    function decimals() public view returns (uint8);\n    function balanceOf(address _owner) public view returns (uint);\n    function transfer(address _to, uint _value) public returns (bool);\n    function transfer(address _to, uint _value, bytes _data) public returns (bool);\n\n    event Transfer(address indexed _from, address indexed _to, uint indexed _value, bytes _data);\n}\n\n/// @title Interface for the contract that will work with ERC223 tokens.\ninterface ERC223ReceivingContract { \n    /**\n     * @dev Standard ERC223 function that will handle incoming token transfers.\n     *\n     * @param _from  Token sender address.\n     * @param _value Amount of tokens.\n     * @param _data  Transaction data.\n     */\n    function tokenFallback(address _from, uint _value, bytes _data) public;\n}\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n\n\n/**\n * @title Vesting of DGTX tokens\n * @dev Vesting contract allows to lock in DGTX tokens and withdraw them according to the predefined scheme.\n *   The planned amount to lock-in is 100,000,000 DGTX.\n * @author SmartDec\n */\ncontract Vesting is Ownable, ERC223ReceivingContract {\n    address public token;\n    uint public totalTokens = 0;\n    uint public constant FIRST_UNLOCK = 1531612800; // 15 July 2018 00:00 GMT\n    uint public constant TOTAL_TOKENS = 100000000 * (uint(10) ** 18); // 100 000 000 DGTX tokens\n    bool public tokenReceived = false;\n\n    event Withdraw(address _to, uint _value);\n\n    /**\n     * @param _token token that will be received by vesting\n     */\n    function Vesting(address _token) public Ownable() {\n        token = _token;\n    }\n\n    /**\n     * @dev Function to receive ERC223 tokens. Receives tokens once.\n     *   Checks that transfered amount is exactly as planned (100 000 000 DGTX)\n     * @param _value Number of transfered tokens in 10**(decimal)th\n     */\n    function tokenFallback(address, uint _value, bytes) public {\n        require(!tokenReceived);\n        require(msg.sender == token);\n        require(_value == TOTAL_TOKENS);\n        tokenReceived = true;\n    }\n\n    /**\n     * @dev withdraw less or equals than available tokens. Throws if there are not enough tokens available.\n     * @param _amount amount of tokens to withdraw.\n     */\n    function withdraw(uint _amount) public onlyOwner {\n        uint availableTokens = ERC223(token).balanceOf(this) - lockedAmount();\n        require(_amount <= availableTokens);\n        ERC223(token).transfer(msg.sender, _amount);\n        Withdraw(msg.sender, _amount);\n    }\n\n    /**\n     * @dev withdraw all available tokens.\n     */\n    function withdrawAll() public onlyOwner {\n        uint availableTokens = ERC223(token).balanceOf(this) - lockedAmount();\n        ERC223(token).transfer(msg.sender, availableTokens);\n        Withdraw(msg.sender, availableTokens);\n    }\n    \n    /**\n     * @dev Internal function that tells how many tokens are locked at the moment.\n     * @return {\n     *    \"lockedTokens\": \"amount of locked tokens\"\n     * }\n     */\n    function lockedAmount() internal view returns (uint) {\n        if (now < FIRST_UNLOCK) {\n            return TOTAL_TOKENS;  \n        }\n\n        uint quarters = (now - FIRST_UNLOCK) / 0.25 years; // quarters past\n        uint effectiveQuarters = quarters <= 12 ? quarters : 12; // all tokens unlocked in 3 years after FIRST_UNLOCK\n        uint locked = TOTAL_TOKENS * (7500 - effectiveQuarters * 625) / 10000; // unlocks 25% plus 6.25% per quarter\n\n        return locked;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_TOKENS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FIRST_UNLOCK\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "606060405260006002556003805460ff19169055341561001e57600080fd5b6040516020806106f88339810160405280805160008054600160a060020a03338116600160a060020a03199283161790925560018054929093169116179055505061068a8061006e6000396000f30060606040526004361061008a5763ffffffff60e060020a6000350416630b7abf77811461008f5780632e1a7d4d146100b45780637e1c0c09146100cc578063853828b6146100df5780638da5cb5b146100f2578063be1b7b4c14610121578063c0ee0b8a14610134578063eae19df414610199578063f2fde38b146101c0578063fc0c546a146101df575b600080fd5b341561009a57600080fd5b6100a26101f2565b60405190815260200160405180910390f35b34156100bf57600080fd5b6100ca600435610201565b005b34156100d757600080fd5b6100a261036e565b34156100ea57600080fd5b6100ca610374565b34156100fd57600080fd5b6101056104d2565b604051600160a060020a03909116815260200160405180910390f35b341561012c57600080fd5b6100a26104e1565b341561013f57600080fd5b6100ca60048035600160a060020a03169060248035919060649060443590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506104e995505050505050565b34156101a457600080fd5b6101ac61053d565b604051901515815260200160405180910390f35b34156101cb57600080fd5b6100ca600160a060020a0360043516610546565b34156101ea57600080fd5b6101056105e1565b6a52b7d2dcc80cd2e400000081565b6000805433600160a060020a0390811691161461021d57600080fd5b6102256105f0565b600154600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561027e57600080fd5b6102c65a03f1151561028f57600080fd5b505050604051805190500390508082111515156102ab57600080fd5b600154600160a060020a031663a9059cbb338460006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561030a57600080fd5b6102c65a03f1151561031b57600080fd5b50505060405180519050507f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643383604051600160a060020a03909216825260208201526040908101905180910390a15050565b60025481565b6000805433600160a060020a0390811691161461039057600080fd5b6103986105f0565b600154600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156103f157600080fd5b6102c65a03f1151561040257600080fd5b5050506040518051600154929003925050600160a060020a031663a9059cbb338360006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561046f57600080fd5b6102c65a03f1151561048057600080fd5b50505060405180519050507f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643382604051600160a060020a03909216825260208201526040908101905180910390a150565b600054600160a060020a031681565b635b4a8e8081565b60035460ff16156104f957600080fd5b60015433600160a060020a0390811691161461051457600080fd5b6a52b7d2dcc80cd2e4000000821461052b57600080fd5b50506003805460ff1916600117905550565b60035460ff1681565b60005433600160a060020a0390811691161461056157600080fd5b600160a060020a038116151561057657600080fd5b600054600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600154600160a060020a031681565b600080600080635b4a8e80421015610615576a52b7d2dcc80cd2e40000009350610658565b62784ce0635b4a8e7f194201049250600c83111561063457600c610636565b825b91506127106a52b7d2dcc80cd2e40000006102718402611d4c03020490508093505b505050905600a165627a7a72305820559dbfa7c9084f8c1b5822ad05c158d730eda82a0bec815cb75be772277b57e500290000000000000000000000001c83501478f1320977047008496dacbd60bb15ef",
  "constructorArguments": "0000000000000000000000001c83501478f1320977047008496dacbd60bb15ef"
}