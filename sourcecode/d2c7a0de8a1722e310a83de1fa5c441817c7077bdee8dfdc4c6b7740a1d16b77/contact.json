{
  "address": "0x07fc349cfc5d39fdc050b5c1123a91ebbaf004f5",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "COM",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-14\n*/\n\npragma  solidity ^ 0.4.24 ;\n\n// ----------------------------------------------------------------------------\n// 安全的加减乘除\n// ----------------------------------------------------------------------------\nlibrary SafeMath {\n\tfunction add(uint a, uint b) internal pure returns(uint c) {\n\t\tc = a + b;\n\t\trequire(c >= a);\n\t}\n\n\tfunction sub(uint a, uint b) internal pure returns(uint c) {\n\t\trequire(b <= a);\n\t\tc = a - b;\n\t}\n\n\tfunction mul(uint a, uint b) internal pure returns(uint c) {\n\t\tc = a * b;\n\t\trequire(a == 0 || c / a == b);\n\t}\n\n\tfunction div(uint a, uint b) internal pure returns(uint c) {\n\t\trequire(b > 0);\n\t\tc = a / b;\n\t}\n}\n\n\ncontract COM  {\n\tusing SafeMath for uint;\n\taddress public owner; \n    \n    address public backaddress1;\n    address public backaddress2;\n    uint public per1 = 150 ;\n    uint public per2 = 850 ;\n    \n\t\n\tmodifier onlyOwner {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n\t\n\tmodifier onlyConf(address _back1,uint _limit1,address _back2,uint _limit2) {\n\t    require(_back1 !=address(0x0) && _back1 != address(this));\n\t    require(_back2 !=address(0x0) && _back2 != address(this));\n\t    require(_back2 != _back1);\n\t    require(_limit1 >0 && _limit2 >0 && _limit1.add(_limit2)==1000);\n\t    _;\n\t}\n\t\n\tevent Transfer(address from,address to,uint value);\n\tevent Setowner(address newowner,address oldower);\n\t\n\tconstructor(address back1,address back2)  public{\n\t    require(back1 !=address(0x0) && back1 != address(this));\n\t    require(back2 !=address(0x0) && back2 != address(this));\n\t    require(back2 != back1);\n\t    owner = msg.sender;\n\t    backaddress1 = back1;\n\t    backaddress2 = back2;\n\t}\n\t\n\tfunction setconf(address _back1,uint _limit1,address _back2,uint _limit2) onlyOwner onlyConf( _back1, _limit1, _back2, _limit2) public {\n\t    backaddress1 = _back1;\n\t    backaddress2 = _back2;\n\t    per1 = _limit1;\n\t    per2 = _limit2;\n\t}\n\tfunction setowner(address _newowner) onlyOwner public {\n\t    require(_newowner !=owner && _newowner !=address(this) && _newowner !=address(0x0));\n\t    address  oldower = owner;\n\t    owner = _newowner;\n\t    emit Setowner(_newowner,oldower);\n\t}\n\t\n\tfunction transfer() public payable  {\n\t  emit Transfer(msg.sender,address(this),msg.value);\n\t  backaddress1.transfer(msg.value * per1 / 1000);\n\t  emit Transfer(address(this),backaddress1,msg.value * per1 / 1000);\n\t  backaddress2.transfer(msg.value * per2 / 1000);\n\t  emit Transfer(address(this),backaddress2,msg.value * per2 / 1000);\n\t}\n\t\n\tfunction () public payable  {\n\t  transfer();\n\t}\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"per2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newowner\",\"type\":\"address\"}],\"name\":\"setowner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"per1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_back1\",\"type\":\"address\"},{\"name\":\"_limit1\",\"type\":\"uint256\"},{\"name\":\"_back2\",\"type\":\"address\"},{\"name\":\"_limit2\",\"type\":\"uint256\"}],\"name\":\"setconf\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"backaddress1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"backaddress2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"back1\",\"type\":\"address\"},{\"name\":\"back2\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newowner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"oldower\",\"type\":\"address\"}],\"name\":\"Setowner\",\"type\":\"event\"}]",
  "bytecode": "6080604052609660035561035260045534801561001b57600080fd5b5060405160408061063a833981016040528051602090910151600160a060020a038216158015906100555750600160a060020a0382163014155b151561006057600080fd5b600160a060020a038116158015906100815750600160a060020a0381163014155b151561008c57600080fd5b600160a060020a0381811690831614156100a557600080fd5b60008054600160a060020a0319908116331790915560018054600160a060020a039485169083161790556002805492909316911617905561054f806100eb6000396000f30060806040526004361061008d5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630b9b047e8114610097578063592bd705146100be5780638a4068dd1461008d5780638da5cb5b146100df578063a8c5232a14610110578063b674421314610125578063b7d67ede14610153578063f669e8e314610168575b61009561017d565b005b3480156100a357600080fd5b506100ac6102f9565b60408051918252519081900360200190f35b3480156100ca57600080fd5b50610095600160a060020a03600435166102ff565b3480156100eb57600080fd5b506100f46103cb565b60408051600160a060020a039092168252519081900360200190f35b34801561011c57600080fd5b506100ac6103da565b34801561013157600080fd5b50610095600160a060020a0360043581169060243590604435166064356103e0565b34801561015f57600080fd5b506100f46104ef565b34801561017457600080fd5b506100f46104fe565b60408051338152306020820152348183015290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1600154600354604051600160a060020a03909216916103e8349092029190910480156108fc02916000818181858888f19350505050158015610201573d6000803e3d6000fd5b5060015460035460408051308152600160a060020a0390931660208401526103e8349092029190910482820152517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1600254600454604051600160a060020a03909216916103e8349092029190910480156108fc02916000818181858888f1935050505015801561029f573d6000803e3d6000fd5b5060025460045460408051308152600160a060020a0390931660208401526103e8349092029190910482820152517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1565b60045481565b60008054600160a060020a0316331461031757600080fd5b600054600160a060020a0383811691161480159061033e5750600160a060020a0382163014155b80156103525750600160a060020a03821615155b151561035d57600080fd5b5060008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff198316811790935560408051938452911660208301819052815190927f03266a17e8366a613ebc7d1ed3fc8e3174d190e39c71696a96df0c1bd40ff32f92908290030190a15050565b600054600160a060020a031681565b60035481565b600054600160a060020a031633146103f757600080fd5b83838383600160a060020a0384161580159061041c5750600160a060020a0384163014155b151561042757600080fd5b600160a060020a038216158015906104485750600160a060020a0382163014155b151561045357600080fd5b600160a060020a03828116908516141561046c57600080fd5b60008311801561047c5750600081115b80156104985750610493838263ffffffff61050d16565b6103e8145b15156104a357600080fd5b505060018054600160a060020a0397881673ffffffffffffffffffffffffffffffffffffffff199182161790915560028054959097169416939093179094556003929092555060045550565b600154600160a060020a031681565b600254600160a060020a031681565b8181018281101561051d57600080fd5b929150505600a165627a7a7230582063e49b62fb680ba696f6c8614f8af7eb03e7f7f7298586334b167675a60d76ce0029000000000000000000000000b6c59f0bf566a5006833cec3ec43a4ae1ddf2ad40000000000000000000000009dabda29bd0d6a3a30227f3782b025c61f37c36d",
  "constructorArguments": "000000000000000000000000b6c59f0bf566a5006833cec3ec43a4ae1ddf2ad40000000000000000000000009dabda29bd0d6a3a30227f3782b025c61f37c36d"
}