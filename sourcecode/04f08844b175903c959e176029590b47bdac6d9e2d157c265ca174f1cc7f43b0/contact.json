{
  "address": "0x6a9633ac967c6da43bca00a601d9cd8c74d4c099",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "HashStore",
  "compilerVersion": "v0.5.0+commit.1d4f565a",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-17\n*/\n\npragma solidity 0.5.0;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @return the address of the owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n\n    /**\n     * @return true if `msg.sender` is the owner of the contract.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n/**\n * @title StateDrivenHashStore\n * @dev The contract has his state and getters\n */\ncontract HashStore is Ownable {\n    mapping(bytes32 => uint256) private _hashes;\n    event HashAdded(bytes32 hash);\n\n    function addHash(bytes32 rootHash) external onlyOwner {\n        require(_hashes[rootHash] == 0, \"addHash: this hash was already deployed\");\n\n        _hashes[rootHash] = block.timestamp;\n        emit HashAdded(rootHash);\n    }\n\n    function getHashTimestamp(bytes32 rootHash) external view returns (uint256) {\n        return _hashes[rootHash];\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"rootHash\",\"type\":\"bytes32\"}],\"name\":\"addHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"rootHash\",\"type\":\"bytes32\"}],\"name\":\"getHashTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"HashAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "6080604081905260008054600160a060020a0319163317808255600160a060020a0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361035d806100576000396000f3fe60806040526004361061006c5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166343e08ad1811461007157806382eed7cd1461009d5780638da5cb5b146100d95780638f32d59b1461010a578063f2fde38b14610133575b600080fd5b34801561007d57600080fd5b5061009b6004803603602081101561009457600080fd5b5035610166565b005b3480156100a957600080fd5b506100c7600480360360208110156100c057600080fd5b5035610263565b60408051918252519081900360200190f35b3480156100e557600080fd5b506100ee610275565b60408051600160a060020a039092168252519081900360200190f35b34801561011657600080fd5b5061011f610284565b604080519115158252519081900360200190f35b34801561013f57600080fd5b5061009b6004803603602081101561015657600080fd5b5035600160a060020a0316610295565b61016e610284565b151561017957600080fd5b6000818152600160205260409020541561021a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f616464486173683a207468697320686173682077617320616c7265616479206460448201527f65706c6f79656400000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600081815260016020908152604091829020429055815183815291517f43af73c832d9fe061da0a995686f56bf3de033272274905119d6d7441fa1d89c9281900390910190a150565b60009081526001602052604090205490565b600054600160a060020a031690565b600054600160a060020a0316331490565b61029d610284565b15156102a857600080fd5b6102b1816102b4565b50565b600160a060020a03811615156102c957600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a72305820032b5bad7acee1dbf72a7cd9aa01c54e0cf632d0f6ba33b031bb3d609ccf54870029"
}