{
  "address": "0x62a56a4a2ef4d355d34d10fbf837e747504d38d4",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Paypex",
  "compilerVersion": "v0.4.17+commit.bdeb9e52",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-10-17\n*/\n\npragma solidity ^ 0.4 .9;\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal constant returns(uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal constant returns(uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal constant returns(uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal constant returns(uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\ncontract Paypex {\n    using SafeMath\n    for uint256;\n    mapping(address => mapping(address => uint256)) allowed;\n    mapping(address => uint256) balances;\n    uint256 public totalSupply;\n    uint256 public decimals;\n    address public owner;\n    bytes32 public symbol;\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed _owner, address indexed spender, uint256 value);\n\n    function Paypex() {\n        totalSupply = 15000000000;\n        symbol = 'PAYX';\n        owner = 0xBF686c453bf32bb162B6CEFF083AD88AB7498BBE;\n        balances[owner] = totalSupply;\n        decimals = 2;\n    }\n\n    function balanceOf(address _owner) constant returns(uint256 balance) {\n        return balances[_owner];\n    }\n\n    function allowance(address _owner, address _spender) constant returns(uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    function transfer(address _to, uint256 _value) returns(bool) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) returns(bool) {\n        var _allowance = allowed[_from][msg.sender];\n        balances[_to] = balances[_to].add(_value);\n        balances[_from] = balances[_from].sub(_value);\n        allowed[_from][msg.sender] = _allowance.sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) returns(bool) {\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function() {\n        revert();\n    }\n}",
  "bytecode": "6060604052341561000f57600080fd5b64037e11d6006002819055507f50415958000000000000000000000000000000000000000000000000000000006005816000191690555073bf686c453bf32bb162b6ceff083ad88ab7498bbe600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060025460016000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002600381905550610a9d8061011a6000396000f30060606040523615610097576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100a757806318160ddd1461010157806323b872dd1461012a578063313ce567146101a357806370a08231146101cc5780638da5cb5b1461021957806395d89b411461026e578063a9059cbb1461029f578063dd62ed3e146102f9575b34156100a257600080fd5b600080fd5b34156100b257600080fd5b6100e7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610365565b604051808215151515815260200191505060405180910390f35b341561010c57600080fd5b6101146104ea565b6040518082815260200191505060405180910390f35b341561013557600080fd5b610189600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506104f0565b604051808215151515815260200191505060405180910390f35b34156101ae57600080fd5b6101b661079e565b6040518082815260200191505060405180910390f35b34156101d757600080fd5b610203600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506107a4565b6040518082815260200191505060405180910390f35b341561022457600080fd5b61022c6107ed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561027957600080fd5b610281610813565b60405180826000191660001916815260200191505060405180910390f35b34156102aa57600080fd5b6102df600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610819565b604051808215151515815260200191505060405180910390f35b341561030457600080fd5b61034f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109b4565b6040518082815260200191505060405180910390f35b6000808214806103f0575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b15156103fb57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60025481565b6000806000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506105c383600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a3a90919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061065883600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a5890919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106ae8382610a5890919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60035481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b600061086d82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a5890919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061090282600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a3a90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284019050838110151515610a4e57fe5b8091505092915050565b6000828211151515610a6657fe5b8183039050929150505600a165627a7a72305820377a8c690272297d9e6817bad557c94dea3cd25e62af989024a93a759a36f0b00029"
}