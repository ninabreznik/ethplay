{
  "address": "0xcdd6e4a8af49493ed5984d57e5e5c292feb9596d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DSToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-15\n*/\n\npragma solidity ^0.4.24;\ncontract DSNote {\n    event LogNote(\n        bytes4   indexed  sig,\n        address  indexed  guy,\n        bytes32  indexed  foo,\n        bytes32  indexed  bar,\n        uint              wad,\n        bytes             fax\n    ) anonymous;\n\n    modifier note {\n        bytes32 foo;\n        bytes32 bar;\n\n        assembly {\n            foo := calldataload(4)\n            bar := calldataload(36)\n        }\n\n        emit LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);\n\n        _;\n    }\n}\n\ncontract DSAuthority {\n    function canCall(\n        address src, address dst, bytes4 sig\n    ) public view returns (bool);\n}\n\ncontract DSAuthEvents {\n    event LogSetOwner     (address indexed owner);\n}\n\ncontract DSAuth is DSAuthEvents {\n    address      public  owner;\n\n    constructor() public {\n        owner = msg.sender;\n        emit LogSetOwner(msg.sender);\n    }\n\n    modifier auth {\n        require(isAuthorized(msg.sender));\n        _;\n    }\n\n    function isAuthorized(address src) internal view returns (bool) {\n        if (src == address(this)) {\n            return true;\n        } else if (src == owner) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\ncontract DSStop is DSNote, DSAuth {\n\n    bool public stopped;\n\n    modifier stoppable {\n        require(!stopped);\n        _;\n    }\n    function stop() public auth note {\n        stopped = true;\n    }\n    function start() public auth note {\n        stopped = false;\n    }\n\n}\n\ncontract DSMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x);\n    }\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x);\n    }\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x);\n    }\n}\n\ncontract ERC20Events {\n    event Approval(address indexed src, address indexed guy, uint wad);\n    event Transfer(address indexed src, address indexed dst, uint wad);\n}\n\ncontract ERC20 is ERC20Events {\n    function totalSupply() public view returns (uint);\n    function balanceOf(address guy) public view returns (uint);\n    function frozenFunds(address guy) public view returns (uint);\n    function allowance(address src, address guy) public view returns (uint);\n\n    function approve(address guy, uint wad) public returns (bool);\n    function transfer(address dst, uint wad) public returns (bool);\n    function transferFrom(\n        address src, address dst, uint wad\n    ) public returns (bool);\n}\n\ncontract DSTokenBase is ERC20, DSMath {\n    uint256                                            _supply;\n    mapping (address => uint256)                       _balances;\n    mapping (address => uint256)                       _frozens;\n    mapping (address => mapping (address => uint256))  _approvals;\n\n    constructor(uint supply) public {\n        _balances[msg.sender] = supply;\n        _supply = supply;\n    }\n\n    function totalSupply() public view returns (uint) {\n        return _supply;\n    }\n    function balanceOf(address src) public view returns (uint) {\n        return _balances[src];\n    }\n    function frozenFunds(address src) public view returns (uint) {\n        return _frozens[src];\n    }\n    function allowance(address src, address guy) public view returns (uint) {\n        return _approvals[src][guy];\n    }\n\n    function transfer(address dst, uint wad) public returns (bool) {\n        return transferFrom(msg.sender, dst, wad);\n    }\n\n    function transferFrom(address src, address dst, uint wad)\n        public\n        returns (bool)\n    {\n        if (src != msg.sender) {\n            _approvals[src][msg.sender] = sub(_approvals[src][msg.sender], wad);\n        }\n\n        _balances[src] = sub(_balances[src], wad);\n        _balances[dst] = add(_balances[dst], wad);\n\n        emit Transfer(src, dst, wad);\n\n        return true;\n    }\n\n    function approve(address guy, uint wad) public returns (bool) {\n        _approvals[msg.sender][guy] = wad;\n\n        emit Approval(msg.sender, guy, wad);\n\n        return true;\n    }\n}\n\ncontract DSToken is DSTokenBase(7000000000000000000000000000), DSStop {\n\n    string  public  symbol = \"MYT\";\n    uint8  public  decimals = 18; // standard token precision. override to customize\n    event Freeze(address indexed guy, uint wad);\n\n    function approve(address guy) public stoppable returns (bool) {\n        return super.approve(guy, uint(-1));\n    }\n\n    function approve(address guy, uint wad) public stoppable returns (bool) {\n        return super.approve(guy, wad);\n    }\n\n    function transferFrom(address src, address dst, uint wad)\n        public\n        stoppable\n        returns (bool)\n    {\n        require(_balances[src] - _frozens[src] >= wad);\n        \n        if (src != msg.sender && _approvals[src][msg.sender] != uint(-1)) {\n            _approvals[src][msg.sender] = sub(_approvals[src][msg.sender], wad);\n        }\n\n        _balances[src] = sub(_balances[src], wad);\n        _balances[dst] = add(_balances[dst], wad);\n\n        emit Transfer(src, dst, wad);\n\n        return true;\n    }\n    function transferMulti(address[] dsts, uint wad)  public auth returns (bool) {  \n        require(dsts.length > 0);\n        require(_balances[msg.sender] - _frozens[msg.sender] >= mul(wad, dsts.length));\n        \n        for(uint32 i=0; i<dsts.length; i++){\n            transfer(dsts[i], wad);\n        }  \n        return true;\n    }\n    \n    function push(address dst, uint wad) public {\n        transferFrom(msg.sender, dst, wad);\n    }\n    \n    function pull(address src, uint wad) public {\n        transferFrom(src, msg.sender, wad);\n    }\n    \n    function move(address src, address dst, uint wad) public {\n        transferFrom(src, dst, wad);\n    }\n    \n    function freezeAccount(address guy, uint wad) public auth {\n        require(_balances[guy] >= wad);\n        \n        _frozens[guy] = add(0, wad);\n        emit Freeze(guy, wad);\n    }\n\n    string   public  name = \"MeYou Token\";\n\n    function setName(string name_) public auth {\n        name = name_;\n    }\n    \n    function setSymbol(string symbol_) public auth {\n        symbol = symbol_;\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"dsts\",\"type\":\"address[]\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferMulti\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"symbol_\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"frozenFunds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600360808190527f4d5954000000000000000000000000000000000000000000000000000000000060a090815261003e91600591906100f0565b506006805460ff1916601217905560408051808201909152600b8082527f4d65596f7520546f6b656e0000000000000000000000000000000000000000006020909201918252610090916007916100f0565b50336000818152600160205260408082206b169e43a85eb381aa5800000090819055825560048054600160a060020a03191684179055517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed949190a261018b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013157805160ff191683800117855561015e565b8280016001018555821561015e579182015b8281111561015e578251825591602001919060010190610143565b5061016a92915061016e565b5090565b61018891905b8082111561016a5760008155600101610174565b90565b610d5e8061019a6000396000f3006080604052600436106101275763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166304f016c9811461012c57806306fdde031461019757806307da68f514610221578063095ea7b31461023857806318160ddd1461025c57806323b872dd1461028357806329846afe146102ad578063313ce567146102d157806370a08231146102fc57806375f12b211461031d5780638da5cb5b1461033257806395d89b4114610363578063a9059cbb14610378578063b753a98c1461039c578063b84c8246146103c0578063bb35783b14610419578063be9a655514610443578063c47f002714610458578063d553adf0146104b1578063daea85c5146104d2578063dd62ed3e146104f3578063f2d5d56b1461051a575b600080fd5b34801561013857600080fd5b506040805160206004803580820135838102808601850190965280855261018395369593946024949385019291829185019084908082843750949750509335945061053e9350505050565b604080519115158252519081900360200190f35b3480156101a357600080fd5b506101ac6105e3565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e65781810151838201526020016101ce565b50505050905090810190601f1680156102135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022d57600080fd5b50610236610671565b005b34801561024457600080fd5b50610183600160a060020a0360043516602435610713565b34801561026857600080fd5b50610271610740565b60408051918252519081900360200190f35b34801561028f57600080fd5b50610183600160a060020a0360043581169060243516604435610747565b3480156102b957600080fd5b50610236600160a060020a03600435166024356108dc565b3480156102dd57600080fd5b506102e6610976565b6040805160ff9092168252519081900360200190f35b34801561030857600080fd5b50610271600160a060020a036004351661097f565b34801561032957600080fd5b5061018361099e565b34801561033e57600080fd5b506103476109ae565b60408051600160a060020a039092168252519081900360200190f35b34801561036f57600080fd5b506101ac6109bd565b34801561038457600080fd5b50610183600160a060020a0360043516602435610a18565b3480156103a857600080fd5b50610236600160a060020a0360043516602435610a25565b3480156103cc57600080fd5b506040805160206004803580820135601f8101849004840285018401909552848452610236943694929360249392840191908190840183828082843750949750610a359650505050505050565b34801561042557600080fd5b50610236600160a060020a0360043581169060243516604435610a60565b34801561044f57600080fd5b50610236610a71565b34801561046457600080fd5b506040805160206004803580820135601f8101849004840285018401909552848452610236943694929360249392840191908190840183828082843750949750610b0d9650505050505050565b3480156104bd57600080fd5b50610271600160a060020a0360043516610b34565b3480156104de57600080fd5b50610183600160a060020a0360043516610b4f565b3480156104ff57600080fd5b50610271600160a060020a0360043581169060243516610b75565b34801561052657600080fd5b50610236600160a060020a0360043516602435610ba0565b60008061054a33610bab565b151561055557600080fd5b835160001061056357600080fd5b61056e838551610bec565b3360009081526002602090815260408083205460019092529091205403101561059657600080fd5b5060005b83518163ffffffff1610156105d9576105d0848263ffffffff168151811015156105c057fe5b9060200190602002015184610a18565b5060010161059a565b5060019392505050565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106695780601f1061063e57610100808354040283529160200191610669565b820191906000526020600020905b81548152906001019060200180831161064c57829003601f168201915b505050505081565b61067a33610bab565b151561068557600080fd5b604080513480825260208201838152369383018490526004359360243593849386933393600080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916949092606082018484808284376040519201829003965090945050505050a450506004805474ff0000000000000000000000000000000000000000191660a060020a179055565b60045460009060a060020a900460ff161561072d57600080fd5b6107378383610c14565b90505b92915050565b6000545b90565b60045460009060a060020a900460ff161561076157600080fd5b600160a060020a0384166000908152600260209081526040808320546001909252909120540382111561079357600080fd5b600160a060020a03841633148015906107d15750600160a060020a038416600090815260036020908152604080832033845290915290205460001914155b1561082957600160a060020a03841660009081526003602090815260408083203384529091529020546108049083610c7a565b600160a060020a03851660009081526003602090815260408083203384529091529020555b600160a060020a03841660009081526001602052604090205461084c9083610c7a565b600160a060020a03808616600090815260016020526040808220939093559085168152205461087b9083610c8a565b600160a060020a0380851660008181526001602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b6108e533610bab565b15156108f057600080fd5b600160a060020a03821660009081526001602052604090205481111561091557600080fd5b610920600082610c8a565b600160a060020a038316600081815260026020908152604091829020939093558051848152905191927ff97a274face0b5517365ad396b1fdba6f68bd3135ef603e44272adba3af5a1e092918290030190a25050565b60065460ff1681565b600160a060020a0381166000908152600160205260409020545b919050565b60045460a060020a900460ff1681565b600454600160a060020a031681565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106695780601f1061063e57610100808354040283529160200191610669565b6000610737338484610747565b610a30338383610747565b505050565b610a3e33610bab565b1515610a4957600080fd5b8051610a5c906005906020840190610c9a565b5050565b610a6b838383610747565b50505050565b610a7a33610bab565b1515610a8557600080fd5b604080513480825260208201838152369383018490526004359360243593849386933393600080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916949092606082018484808284376040519201829003965090945050505050a450506004805474ff000000000000000000000000000000000000000019169055565b610b1633610bab565b1515610b2157600080fd5b8051610a5c906007906020840190610c9a565b600160a060020a031660009081526002602052604090205490565b60045460009060a060020a900460ff1615610b6957600080fd5b61073a82600019610c14565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b610a30823383610747565b6000600160a060020a038216301415610bc657506001610999565b600454600160a060020a0383811691161415610be457506001610999565b506000610999565b6000811580610c09575050808202828282811515610c0657fe5b04145b151561073a57600080fd5b336000818152600360209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b8082038281111561073a57600080fd5b8082018281101561073a57600080fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610cdb57805160ff1916838001178555610d08565b82800160010185558215610d08579182015b82811115610d08578251825591602001919060010190610ced565b50610d14929150610d18565b5090565b61074491905b80821115610d145760008155600101610d1e5600a165627a7a7230582011b9218fbcbd48a422bf68141f22374db4019615a563170da0fbd3da6699174a0029"
}