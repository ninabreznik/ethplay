{
  "address": "0x92bf969865c80eda082fd5d8b4e28da4d58e1c3a",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "LUNA",
  "compilerVersion": "v0.5.2+commit.1df8f40c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-22\n*/\n\npragma solidity ^0.5.2;\n\n// File: contracts/math/SafeMath.sol\n\nlibrary SafeMath {\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    require(c >= a);\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    require(b <= a);\n    return a - b;\n  }\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    require(c / a == b);\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Since Solidity automatically asserts when dividing by 0,\n    // but we only need it to revert.\n    require(b > 0);\n    return a / b;\n  }\n\n  function mod(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Same reason as `div`.\n    require(b > 0);\n    return a % b;\n  }\n\n  function ceilingDiv(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    return add(div(a, b), mod(a, b) > 0 ? 1 : 0);\n  }\n\n  function subU64(uint64 a, uint64 b) internal pure returns (uint64 c) {\n    require(b <= a);\n    return a - b;\n  }\n\n  function addU8(uint8 a, uint8 b) internal pure returns (uint8 c) {\n    c = a + b;\n    require(c >= a);\n  }\n}\n\n// File: contracts/token/erc20/IERC20.sol\n\ninterface IERC20 {\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n  function totalSupply() external view returns (uint256 _supply);\n  function balanceOf(address _owner) external view returns (uint256 _balance);\n\n  function approve(address _spender, uint256 _value) external returns (bool _success);\n  function allowance(address _owner, address _spender) external view returns (uint256 _value);\n\n  function transfer(address _to, uint256 _value) external returns (bool _success);\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool _success);\n}\n\n// File: contracts/token/erc20/ERC20.sol\n\ncontract ERC20 is IERC20 {\n  using SafeMath for uint256;\n\n  uint256 public totalSupply;\n  mapping (address => uint256) public balanceOf;\n  mapping (address => mapping (address => uint256)) public allowance;\n\n  function approve(address _spender, uint256 _value) public returns (bool _success) {\n    allowance[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function transfer(address _to, uint256 _value) public returns (bool _success) {\n    require(_to != address(0));\n    balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\n    balanceOf[_to] = balanceOf[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool _success) {\n    require(_to != address(0));\n    balanceOf[_from] = balanceOf[_from].sub(_value);\n    balanceOf[_to] = balanceOf[_to].add(_value);\n    allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n}\n\n// File: contracts/token/erc20/IERC20Burnable.sol\n\ninterface IERC20Burnable {\n  function burn(uint256 _value) external returns (bool _success);\n  function burnFrom(address _from, uint256 _value) external returns (bool _success);\n}\n\n// File: contracts/token/erc20/ERC20Burnable.sol\n\ncontract ERC20Burnable is ERC20, IERC20Burnable {\n  function burn(uint256 _value) public returns (bool _success) {\n    totalSupply = totalSupply.sub(_value);\n    balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\n    emit Transfer(msg.sender, address(0), _value);\n    return true;\n  }\n\n  function burnFrom(address _from, uint256 _value) public returns (bool _success) {\n    totalSupply = totalSupply.sub(_value);\n    balanceOf[_from] = balanceOf[_from].sub(_value);\n    allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\n    emit Transfer(_from, address(0), _value);\n    return true;\n  }\n}\n\n// File: contracts/access/HasAdmin.sol\n\ncontract HasAdmin {\n  event AdminChanged(address indexed _oldAdmin, address indexed _newAdmin);\n  event AdminRemoved(address indexed _oldAdmin);\n\n  address public admin;\n\n  modifier onlyAdmin {\n    require(msg.sender == admin);\n    _;\n  }\n\n  constructor() internal {\n    admin = msg.sender;\n    emit AdminChanged(address(0), admin);\n  }\n\n  function changeAdmin(address _newAdmin) external onlyAdmin {\n    require(_newAdmin != address(0));\n    emit AdminChanged(admin, _newAdmin);\n    admin = _newAdmin;\n  }\n\n  function removeAdmin() external onlyAdmin {\n    emit AdminRemoved(admin);\n    admin = address(0);\n  }\n}\n\n// File: contracts/access/HasMinters.sol\n\ncontract HasMinters is HasAdmin {\n  event MinterAdded(address indexed _minter);\n  event MinterRemoved(address indexed _minter);\n\n  address[] public minters;\n  mapping (address => bool) public minter;\n\n  modifier onlyMinter {\n    require(minter[msg.sender]);\n    _;\n  }\n\n  function addMinters(address[] memory _addedMinters) public onlyAdmin {\n    address _minter;\n\n    for (uint256 i = 0; i < _addedMinters.length; i++) {\n      _minter = _addedMinters[i];\n\n      if (!minter[_minter]) {\n        minters.push(_minter);\n        minter[_minter] = true;\n        emit MinterAdded(_minter);\n      }\n    }\n  }\n\n  function removeMinters(address[] memory _removedMinters) public onlyAdmin {\n    address _minter;\n\n    for (uint256 i = 0; i < _removedMinters.length; i++) {\n      _minter = _removedMinters[i];\n\n      if (minter[_minter]) {\n        minter[_minter] = false;\n        emit MinterRemoved(_minter);\n      }\n    }\n\n    uint256 i = 0;\n\n    while (i < minters.length) {\n      _minter = minters[i];\n\n      if (!minter[_minter]) {\n        minters[i] = minters[minters.length - 1];\n        delete minters[minters.length - 1];\n        minters.length--;\n      } else {\n        i++;\n      }\n    }\n  }\n}\n\n// File: contracts/token/erc20/ERC20Mintable.sol\n\ncontract ERC20Mintable is HasMinters, ERC20 {\n  function mint(address _to, uint256 _value) public onlyMinter returns (bool _success) {\n    totalSupply = totalSupply.add(_value);\n    balanceOf[_to] = balanceOf[_to].add(_value);\n    emit Transfer(address(0), _to, _value);\n    return true;\n  }\n}\n\n// File: contracts/token/erc20/ERC20Capped.sol\n\ncontract ERC20Capped is ERC20Mintable, ERC20Burnable {\n  uint256 public cappedSupply;\n\n  constructor(uint256 _cappedSupply) public {\n    cappedSupply = _cappedSupply;\n  }\n\n  function mint(address _to, uint256 _value) public returns (bool _success) {\n    require(totalSupply.add(_value) <= cappedSupply);\n    return super.mint(_to, _value);\n  }\n\n  function burn(uint256 _value) public returns (bool _success) {\n    cappedSupply = cappedSupply.sub(_value);\n    return super.burn(_value);\n  }\n\n  function burnFrom(address _from, uint256 _value) public returns (bool _success) {\n    cappedSupply = cappedSupply.sub(_value);\n    return super.burnFrom(_from, _value);\n  }\n}\n\n// File: contracts/token/erc20/IERC20Detailed.sol\n\ninterface IERC20Detailed {\n  function name() external view returns (string memory _name);\n  function symbol() external view returns (string memory _symbol);\n  function decimals() external view returns (uint8 _decimals);\n}\n\n// File: contracts/token/erc20/ERC20Detailed.sol\n\ncontract ERC20Detailed is ERC20, IERC20Detailed {\n  string public name;\n  string public symbol;\n  uint8 public decimals;\n\n  constructor(string memory _name, string memory _symbol, uint8 _decimals) public {\n    name = _name;\n    symbol = _symbol;\n    decimals = _decimals;\n  }\n}\n\n// File: contracts/token/erc20/IERC20Receiver.sol\n\ninterface IERC20Receiver {\n  function receiveApproval(\n    address _from,\n    uint256 _value,\n    address _tokenAddress,\n    bytes calldata _data\n  )\n    external;\n}\n\n// File: contracts/token/erc20/ERC20Extended.sol\n\ncontract ERC20Extended is ERC20 {\n  function approveAndCall(\n    IERC20Receiver _spender,\n    uint256 _value,\n    bytes calldata _data\n  )\n    external\n    returns (bool _success)\n  {\n    require(approve(address(_spender), _value));\n    _spender.receiveApproval(msg.sender, _value, address(this), _data);\n    return true;\n  }\n}\n\n// File: contracts/token/erc20/ERC20Full.sol\n\ncontract LUNA is ERC20Detailed, ERC20Extended, ERC20Capped {\n  constructor(\n    string memory _name,\n    string memory _symbol,\n    uint8 _decimals,\n    uint256 _cappedSupply\n  )\n    public\n    ERC20Detailed(_name, _symbol, _decimals)\n    ERC20Capped(_cappedSupply.mul(uint256(10)**_decimals))\n  {\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"minter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_removedMinters\",\"type\":\"address[]\"}],\"name\":\"removeMinters\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cappedSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addedMinters\",\"type\":\"address[]\"}],\"name\":\"addMinters\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minters\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_cappedSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oldAdmin\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"}]",
  "bytecode": "60806040523480156200001157600080fd5b506040516200141538038062001415833981018060405260808110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b50506020820151604090920151909350909150620000fe8160ff8416600a0a640100000000620011156200019d82021704565b60008054600160a060020a0319163317808255604051879287928792600160a060020a039190911691907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f908290a3825162000162906006906020860190620001d3565b50815162000178906007906020850190620001d3565b506008805460ff191660ff929092169190911790555050600955506200027892505050565b6000821515620001b057506000620001cd565b50818102818382811515620001c157fe5b0414620001cd57600080fd5b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200021657805160ff191683800117855562000246565b8280016001018555821562000246579182015b828111156200024657825182559160200191906001019062000229565b506200025492915062000258565b5090565b6200027591905b808211156200025457600081556001016200025f565b90565b61118d80620002886000396000f3fe608060405234801561001057600080fd5b5060043610610154576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100d557806395d89b411161009957806395d89b41146104f45780639a202d47146104fc578063a9059cbb14610504578063cae9ca5114610530578063dd62ed3e146105b5578063f851a440146105e357610154565b806370a08231146103a057806371e2a657146103c657806379cc6790146104695780638623ec7b146104955780638f283970146104ce57610154565b80633dd08c381161011c5780633dd08c381461028457806340c10f19146102aa57806342966c68146102d65780635fc1964f146102f35780636de23a161461039857610154565b806306fdde0314610159578063095ea7b3146101d657806318160ddd1461021657806323b872dd14610230578063313ce56714610266575b600080fd5b6101616105eb565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019b578181015183820152602001610183565b50505050905090810190601f1680156101c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610202600480360360408110156101ec57600080fd5b50600160a060020a038135169060200135610679565b604080519115158252519081900360200190f35b61021e6106e0565b60408051918252519081900360200190f35b6102026004803603606081101561024657600080fd5b50600160a060020a038135811691602081013590911690604001356106e6565b61026e6107f8565b6040805160ff9092168252519081900360200190f35b6102026004803603602081101561029a57600080fd5b5035600160a060020a0316610801565b610202600480360360408110156102c057600080fd5b50600160a060020a038135169060200135610816565b610202600480360360208110156102ec57600080fd5b503561084c565b6103966004803603602081101561030957600080fd5b81019060208101813564010000000081111561032457600080fd5b82018360208201111561033657600080fd5b8035906020019184602083028401116401000000008311171561035857600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061086e945050505050565b005b61021e610a39565b61021e600480360360208110156103b657600080fd5b5035600160a060020a0316610a3f565b610396600480360360208110156103dc57600080fd5b8101906020810181356401000000008111156103f757600080fd5b82018360208201111561040957600080fd5b8035906020019184602083028401116401000000008311171561042b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610a51945050505050565b6102026004803603604081101561047f57600080fd5b50600160a060020a038135169060200135610b53565b6104b2600480360360208110156104ab57600080fd5b5035610b76565b60408051600160a060020a039092168252519081900360200190f35b610396600480360360208110156104e457600080fd5b5035600160a060020a0316610b9e565b610161610c32565b610396610c8d565b6102026004803603604081101561051a57600080fd5b50600160a060020a038135169060200135610cf9565b6102026004803603606081101561054657600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561057657600080fd5b82018360208201111561058857600080fd5b803590602001918460018302840111640100000000831117156105aa57600080fd5b509092509050610dae565b61021e600480360360408110156105cb57600080fd5b50600160a060020a0381358116916020013516610e92565b6104b2610eaf565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106715780601f1061064657610100808354040283529160200191610671565b820191906000526020600020905b81548152906001019060200180831161065457829003601f168201915b505050505081565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b60035481565b6000600160a060020a03831615156106fd57600080fd5b600160a060020a038416600090815260046020526040902054610726908363ffffffff610ebe16565b600160a060020a03808616600090815260046020526040808220939093559085168152205461075b908363ffffffff610ed316565b600160a060020a03808516600090815260046020908152604080832094909455918716815260058252828120338252909152205461079f908363ffffffff610ebe16565b600160a060020a0380861660008181526005602090815260408083203384528252918290209490945580518681529051928716939192600080516020611142833981519152929181900390910190a35060019392505050565b60085460ff1681565b60026020526000908152604090205460ff1681565b600060095461083083600354610ed390919063ffffffff16565b111561083b57600080fd5b6108458383610ee3565b9392505050565b600954600090610862908363ffffffff610ebe16565b6009556106da82610f8b565b600054600160a060020a0316331461088557600080fd5b6000805b825181101561091f5782818151811015156108a057fe5b6020908102909101810151600160a060020a0381166000908152600290925260409091205490925060ff161561091757600160a060020a038216600081815260026020526040808220805460ff19169055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a25b600101610889565b5060005b600154811015610a3457600180548290811061093b57fe5b6000918252602080832090910154600160a060020a0316808352600290915260409091205490925060ff161515610a2b5760018054600019810190811061097e57fe5b60009182526020909120015460018054600160a060020a0390921691839081106109a457fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556001805460001981019081106109ec57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff191690556001805490610a259060001983016110d5565b50610a2f565b6001015b610923565b505050565b60095481565b60046020526000908152604090205481565b600054600160a060020a03163314610a6857600080fd5b6000805b8251811015610a34578281815181101515610a8357fe5b6020908102909101810151600160a060020a0381166000908152600290925260409091205490925060ff161515610b4b576001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038516908117909155600081815260026020526040808220805460ff1916909417909355915190917f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f691a25b600101610a6c565b600954600090610b69908363ffffffff610ebe16565b6009556108458383611004565b6001805482908110610b8457fe5b600091825260209091200154600160a060020a0316905081565b600054600160a060020a03163314610bb557600080fd5b600160a060020a0381161515610bca57600080fd5b60008054604051600160a060020a03808516939216917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f91a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106715780601f1061064657610100808354040283529160200191610671565b600054600160a060020a03163314610ca457600080fd5b60008054604051600160a060020a03909116917fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f91a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000600160a060020a0383161515610d1057600080fd5b33600090815260046020526040902054610d30908363ffffffff610ebe16565b3360009081526004602052604080822092909255600160a060020a03851681522054610d62908363ffffffff610ed316565b600160a060020a0384166000818152600460209081526040918290209390935580518581529051919233926000805160206111428339815191529281900390910190a350600192915050565b6000610dba8585610679565b1515610dc557600080fd5b6040517f8f4ffcb1000000000000000000000000000000000000000000000000000000008152336004820181815260248301879052306044840181905260806064850190815260848501879052600160a060020a038a1694638f4ffcb194938a93928a928a92919060a401848480828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b158015610e6f57600080fd5b505af1158015610e83573d6000803e3d6000fd5b50600198975050505050505050565b600560209081526000928352604080842090915290825290205481565b600054600160a060020a031681565b600082821115610ecd57600080fd5b50900390565b818101828110156106da57600080fd5b3360009081526002602052604081205460ff161515610f0157600080fd5b600354610f14908363ffffffff610ed316565b600355600160a060020a038316600090815260046020526040902054610f40908363ffffffff610ed316565b600160a060020a03841660008181526004602090815260408083209490945583518681529351929391926000805160206111428339815191529281900390910190a350600192915050565b600354600090610fa1908363ffffffff610ebe16565b60035533600090815260046020526040902054610fc4908363ffffffff610ebe16565b33600081815260046020908152604080832094909455835186815293519193600080516020611142833981519152929081900390910190a3506001919050565b60035460009061101a908363ffffffff610ebe16565b600355600160a060020a038316600090815260046020526040902054611046908363ffffffff610ebe16565b600160a060020a0384166000908152600460209081526040808320939093556005815282822033835290522054611083908363ffffffff610ebe16565b600160a060020a0384166000818152600560209081526040808320338452825280832094909455835186815293519193600080516020611142833981519152929081900390910190a350600192915050565b815481835581811115610a3457600083815260209020610a3491810190830161111291905b8082111561110e57600081556001016110fa565b5090565b90565b6000821515611126575060006106da565b5081810281838281151561113657fe5b04146106da57600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820c20aea2743324564194727792808d179e1acd51791e79e07744fcd24d7670f480029000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000001908b10000000000000000000000000000000000000000000000000000000000000000044c756e610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044c554e4100000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000001908b10000000000000000000000000000000000000000000000000000000000000000044c756e610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044c554e4100000000000000000000000000000000000000000000000000000000"
}