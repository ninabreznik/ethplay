{
  "address": "0xa842844d1a0e2a7bf17c55a3ead3a144a1d51ed7",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ACCToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-09\n*/\n\npragma solidity 0.4.24;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner and manager address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public owner;\n    address public manager;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n    event ManagerTransfer(address indexed oldaddr, address indexed newaddr);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor() public {\n        owner = msg.sender;\n        manager = msg.sender;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    modifier onlyManager() {\n        require(msg.sender == manager);\n        _;\n    }\n    modifier onlyAdmin() {\n        require(msg.sender == owner || msg.sender == manager);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param _newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address _newOwner) public onlyOwner {\n        _transferOwnership(_newOwner);\n    }\n\n    function transferManager(address _newManager) onlyAdmin public {\n        require(_newManager != address(0));\n        emit ManagerTransfer(manager, _newManager);\n        manager = _newManager;\n    }\n\n    /**\n     * @dev Transfers control of the contract to a newOwner.\n     * @param _newOwner The address to transfer ownership to.\n     */\n    function _transferOwnership(address _newOwner) internal {\n        require(_newOwner != address(0));\n        emit OwnershipTransferred(owner, _newOwner);\n        owner = _newOwner;\n    }\n}\n\ncontract Pausable is Ownable {\n\n    event Pause();\n    event Unpause();\n\n    bool public paused = false;\n\n    /**\n     * @dev modifier to allow actions only when the contract IS paused\n     */\n    modifier whenNotPaused() {\n        require(!paused);\n        _;\n    }\n\n    /**\n     * @dev modifier to allow actions only when the contract IS NOT paused\n     */\n    modifier whenPaused {\n        require(paused);\n        _;\n    }\n\n    /**\n     * @dev called by the owner to pause, triggers stopped state\n     */\n    function pause() onlyOwner whenNotPaused public returns (bool) {\n        paused = true;\n        emit Pause();\n        return true;\n    }\n\n    /**\n     * @dev called by the owner to unpause, returns to normal state\n     */\n    function unpause() onlyOwner whenPaused public returns (bool) {\n        paused = false;\n        emit Unpause();\n        return true;\n    }\n}\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        if (a == 0) {\n            return 0;\n        }\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        // uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return a / b;\n    }\n\n    /**\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\nlibrary ContractLib {\n    /*\n    * assemble the given address bytecode. If bytecode exists then the _addr is a contract.\n    */\n    function isContract(address _addr) internal view returns (bool) {\n        uint length;\n        assembly {\n        //retrieve the size of the code on target address, this needs assembly\n            length := extcodesize(_addr)\n        }\n        return (length > 0);\n    }\n}\n\n/*\n* Contract that is working with ERC223 tokens\n*/\ncontract ContractReceiver {\n    function tokenFallback(address _from, uint _value, bytes _data) public pure;\n}\n\n// ERC Token Standard #20 Interface\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\ncontract ERC20Interface {\n\n    function totalSupply() public constant returns (uint);\n\n    function balanceOf(address tokenOwner) public constant returns (uint);\n\n    function allowance(address tokenOwner, address spender) public constant returns (uint);\n\n    function transfer(address to, uint tokens) public returns (bool);\n\n    function approve(address spender, uint tokens) public returns (bool);\n\n    function transferFrom(address from, address to, uint tokens) public returns (bool);\n\n    function name() public constant returns (string);\n\n    function symbol() public constant returns (string);\n\n    function decimals() public constant returns (uint8);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\n}\n\n\n/**\n* ERC223 token by Dexaran\n*\n* https://github.com/Dexaran/ERC223-token-standard\n*/\n\ncontract ERC223 is ERC20Interface {\n\n    function transfer(address to, uint value, bytes data) public returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Transfer(address indexed from, address indexed to, uint value, bytes data);\n\n}\n\ncontract Lock is Ownable {\n    bool public useLock = true;\n    //accounts that is locked\n    mapping(address => bool) public lockedAccount;\n\n    event Locked(address indexed target, bool locked);\n    modifier tokenLock() {\n        if (useLock == true) {\n            require(!lockedAccount[msg.sender], \"account is locked\");\n        }\n        _;\n    }\n\n    function setLockToken(bool _lock) onlyAdmin public {\n        useLock = _lock;\n    }\n\n    function lockAccounts(address[] targets) onlyAdmin public returns (bool){\n        for (uint8 i = 0; i < targets.length; i++) {\n            lockedAccount[targets[i]] = true;\n            emit Locked(targets[i], true);\n        }\n        return true;\n    }\n\n    function unlockAccounts(address[] targets) onlyAdmin public returns (bool){\n        for (uint8 i = 0; i < targets.length; i++) {\n            lockedAccount[targets[i]] = false;\n            emit Locked(targets[i], false);\n        }\n        return true;\n    }\n}\n\ncontract ACCToken is ERC223, Lock, Pausable {\n\n    using SafeMath for uint256;\n    using ContractLib for address;\n\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 public totalSupply;\n\n    event Burn(address indexed from, uint256 value);\n\n    constructor() public {\n        symbol = \"ACC\";\n        name = \"AlphaCityCoin\";\n        decimals = 18;\n        totalSupply = 100000000000 * 1 ether;\n        balances[msg.sender] = totalSupply;\n        emit Transfer(address(0), msg.sender, totalSupply);\n    }\n\n    // Function to access name of token .\n    function name() public constant returns (string) {\n        return name;\n    }\n\n    // Function to access symbol of token .\n    function symbol() public constant returns (string) {\n        return symbol;\n    }\n\n    // Function to access decimals of token .\n    function decimals() public constant returns (uint8) {\n        return decimals;\n    }\n\n    // Function to access total supply of tokens .\n    function totalSupply() public constant returns (uint256) {\n        return totalSupply;\n    }\n\n    // Function that is called when a user or another contract wants to transfer funds .\n    function transfer(address _to, uint _value, bytes _data) public whenNotPaused tokenLock returns (bool) {\n        require(_to != 0x0);\n        if (_to.isContract()) {\n            return transferToContract(_to, _value, _data);\n        }\n        else {\n            return transferToAddress(_to, _value, _data);\n        }\n    }\n\n    // Standard function transfer similar to ERC20 transfer with no _data .\n    // Added due to backwards compatibility reasons .\n    function transfer(address _to, uint _value) public whenNotPaused tokenLock returns (bool) {\n        require(_to != 0x0);\n\n        bytes memory empty;\n        if (_to.isContract()) {\n            return transferToContract(_to, _value, empty);\n        }\n        else {\n            return transferToAddress(_to, _value, empty);\n        }\n    }\n\n    // function that is called when transaction target is an address\n    function transferToAddress(address _to, uint _value, bytes _data) private returns (bool) {\n        balances[msg.sender] = balanceOf(msg.sender).sub(_value);\n        balances[_to] = balanceOf(_to).add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        emit Transfer(msg.sender, _to, _value, _data);\n        return true;\n    }\n\n    // function that is called when transaction target is a contract\n    function transferToContract(address _to, uint _value, bytes _data) private returns (bool success) {\n        balances[msg.sender] = balanceOf(msg.sender).sub(_value);\n        balances[_to] = balanceOf(_to).add(_value);\n        ContractReceiver receiver = ContractReceiver(_to);\n        receiver.tokenFallback(msg.sender, _value, _data);\n        emit Transfer(msg.sender, _to, _value);\n        emit Transfer(msg.sender, _to, _value, _data);\n        return true;\n    }\n\n    // get the address of balance\n    function balanceOf(address _owner) public constant returns (uint) {\n        return balances[_owner];\n    }\n\n    function burn(uint256 _value) public whenNotPaused returns (bool) {\n        require(_value > 0);\n        require(balanceOf(msg.sender) >= _value);\n        // Check if the sender has enough\n        balances[msg.sender] = balanceOf(msg.sender).sub(_value);\n        // Subtract from the sender\n        totalSupply = totalSupply.sub(_value);\n        // Updates totalSupply\n        emit Burn(msg.sender, _value);\n        return true;\n    }\n\n    ///@dev Token owner can approve for `spender` to transferFrom() `tokens`\n    ///from the token owner's account\n    function approve(address spender, uint tokens) public whenNotPaused returns (bool) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n\n    function increaseApproval(address _spender, uint _addedValue) public whenNotPaused\n    returns (bool success) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused\n    returns (bool success) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    ///@dev Transfer `tokens` from the `from` account to the `to` account\n    function transferFrom(address from, address to, uint tokens) public whenNotPaused tokenLock returns (bool) {\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n        balances[from] = balances[from].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(from, to, tokens);\n        return true;\n    }\n\n    function allowance(address tokenOwner, address spender) public constant returns (uint) {\n        return allowed[tokenOwner][spender];\n    }\n\n    function() public payable {\n        revert();\n    }\n\n    // Owner can transfer out any accidentally sent ERC20 tokens\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool) {\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lock\",\"type\":\"bool\"}],\"name\":\"setLockToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"useLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"lockAccounts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"transferManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"unlockAccounts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldaddr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newaddr\",\"type\":\"address\"}],\"name\":\"ManagerTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040526001805460a060020a60ff021916740100000000000000000000000000000000000000001790556003805460ff191690553480156200004257600080fd5b506000805433600160a060020a031991821681179092556001805490911690911790556040805180820190915260038082527f41434300000000000000000000000000000000000000000000000000000000006020909201918252620000ab9160079162000162565b5060408051808201909152600d8082527f416c70686143697479436f696e000000000000000000000000000000000000006020909201918252620000f29160069162000162565b506008805460ff191660121790556c01431e0fae6d7217caa00000006009819055336000818152600460209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a362000207565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001a557805160ff1916838001178555620001d5565b82800160010185558215620001d5579182015b82811115620001d5578251825591602001919060010190620001b8565b50620001e3929150620001e7565b5090565b6200020491905b80821115620001e35760008155600101620001ee565b90565b6116b880620002176000396000f3006080604052600436106101535763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610158578063095ea7b3146101e257806318160ddd1461021a57806323b872dd14610241578063313ce5671461026b5780633f4ba83a1461029657806342966c68146102ab578063481c6a75146102c35780635c975abb146102f4578063661884631461030957806370a082311461032d578063718ccce91461034e5780637d240b9c1461036f5780638456cb591461038b5780638da5cb5b146103a057806395d89b41146103b5578063972b78d0146103ca578063a848f9b3146103df578063a9059cbb14610434578063ba0e930a14610458578063be45fd6214610479578063d73dd623146104e2578063dc39d06d14610506578063dd62ed3e1461052a578063ebaddea714610551578063f2fde38b146105a6575b600080fd5b34801561016457600080fd5b5061016d6105c7565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a757818101518382015260200161018f565b50505050905090810190601f1680156101d45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ee57600080fd5b50610206600160a060020a036004351660243561065d565b604080519115158252519081900360200190f35b34801561022657600080fd5b5061022f6106d7565b60408051918252519081900360200190f35b34801561024d57600080fd5b50610206600160a060020a03600435811690602435166044356106dd565b34801561027757600080fd5b50610280610891565b6040805160ff9092168252519081900360200190f35b3480156102a257600080fd5b5061020661089a565b3480156102b757600080fd5b506102066004356108fc565b3480156102cf57600080fd5b506102d86109ae565b60408051600160a060020a039092168252519081900360200190f35b34801561030057600080fd5b506102066109bd565b34801561031557600080fd5b50610206600160a060020a03600435166024356109c6565b34801561033957600080fd5b5061022f600160a060020a0360043516610ace565b34801561035a57600080fd5b50610206600160a060020a0360043516610ae9565b34801561037b57600080fd5b506103896004351515610afe565b005b34801561039757600080fd5b50610206610b5b565b3480156103ac57600080fd5b506102d8610bbf565b3480156103c157600080fd5b5061016d610bce565b3480156103d657600080fd5b50610206610c2f565b3480156103eb57600080fd5b506040805160206004803580820135838102808601850190965280855261020695369593946024949385019291829185019084908082843750949750610c3f9650505050505050565b34801561044057600080fd5b50610206600160a060020a0360043516602435610d35565b34801561046457600080fd5b50610389600160a060020a0360043516610e29565b34801561048557600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610206948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610ed59650505050505050565b3480156104ee57600080fd5b50610206600160a060020a0360043516602435610fc6565b34801561051257600080fd5b50610206600160a060020a0360043516602435611072565b34801561053657600080fd5b5061022f600160a060020a036004358116906024351661112d565b34801561055d57600080fd5b5060408051602060048035808201358381028086018501909652808552610206953695939460249493850192918291850190849080828437509497506111589650505050505050565b3480156105b257600080fd5b50610389600160a060020a0360043516611245565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106535780601f1061062857610100808354040283529160200191610653565b820191906000526020600020905b81548152906001019060200180831161063657829003601f168201915b5050505050905090565b60035460009060ff161561067057600080fd5b336000818152600560209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60095490565b60035460009060ff16156106f057600080fd5b6001805460a060020a900460ff1615151415610785573360009081526002602052604090205460ff161561078557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6163636f756e74206973206c6f636b6564000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a03841660009081526005602090815260408083203384529091529020546107b9908363ffffffff61126816565b600160a060020a0385166000818152600560209081526040808320338452825280832094909455918152600490915220546107fa908363ffffffff61126816565b600160a060020a03808616600090815260046020526040808220939093559085168152205461082f908363ffffffff61127a16565b600160a060020a0380851660008181526004602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060015b9392505050565b60085460ff1690565b60008054600160a060020a031633146108b257600080fd5b60035460ff1615156108c357600080fd5b6003805460ff191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a150600190565b60035460009060ff161561090f57600080fd5b6000821161091c57600080fd5b8161092633610ace565b101561093157600080fd5b61094a8261093e33610ace565b9063ffffffff61126816565b3360009081526004602052604090205560095461096d908363ffffffff61126816565b60095560408051838152905133917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2506001919050565b600154600160a060020a031681565b60035460ff1681565b600354600090819060ff16156109db57600080fd5b50336000908152600560209081526040808320600160a060020a038716845290915290205480831115610a3157336000908152600560209081526040808320600160a060020a0388168452909152812055610a66565b610a41818463ffffffff61126816565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3600191505b5092915050565b600160a060020a031660009081526004602052604090205490565b60026020526000908152604090205460ff1681565b600054600160a060020a0316331480610b215750600154600160a060020a031633145b1515610b2c57600080fd5b6001805491151560a060020a0274ff000000000000000000000000000000000000000019909216919091179055565b60008054600160a060020a03163314610b7357600080fd5b60035460ff1615610b8357600080fd5b6003805460ff191660011790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a150600190565b600054600160a060020a031681565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106535780601f1061062857610100808354040283529160200191610653565b60015460a060020a900460ff1681565b600080548190600160a060020a0316331480610c655750600154600160a060020a031633145b1515610c7057600080fd5b5060005b82518160ff161015610d2c57600160026000858460ff16815181101515610c9757fe5b602090810291909101810151600160a060020a03168252810191909152604001600020805460ff19169115159190911790558251839060ff8316908110610cda57fe5b602090810290910181015160408051600181529051600160a060020a03909216927fcaf46096bdd957e9271a7e46a00ff61870b80644805049e7ea814162a2b606bc92918290030190a2600101610c74565b50600192915050565b60035460009060609060ff1615610d4b57600080fd5b6001805460a060020a900460ff1615151415610de0573360009081526002602052604090205460ff1615610de057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6163636f756e74206973206c6f636b6564000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a0384161515610df557600080fd5b610e0784600160a060020a031661128d565b15610e1e57610e17848483611295565b9150610ac7565b610e178484836114cf565b600054600160a060020a0316331480610e4c5750600154600160a060020a031633145b1515610e5757600080fd5b600160a060020a0381161515610e6c57600080fd5b600154604051600160a060020a038084169216907fae079fc8ad8ad273ebd2c4cc2d4df285576c6e587bd7af477dac8f9b1c9ea44190600090a36001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60035460009060ff1615610ee857600080fd5b6001805460a060020a900460ff1615151415610f7d573360009081526002602052604090205460ff1615610f7d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6163636f756e74206973206c6f636b6564000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a0384161515610f9257600080fd5b610fa484600160a060020a031661128d565b15610fbb57610fb4848484611295565b905061088a565b610fb48484846114cf565b60035460009060ff1615610fd957600080fd5b336000908152600560209081526040808320600160a060020a038716845290915290205461100d908363ffffffff61127a16565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60008054600160a060020a0316331461108a57600080fd5b60008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810186905290519186169263a9059cbb926044808401936020939083900390910190829087803b1580156110fa57600080fd5b505af115801561110e573d6000803e3d6000fd5b505050506040513d602081101561112457600080fd5b50519392505050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600080548190600160a060020a031633148061117e5750600154600160a060020a031633145b151561118957600080fd5b5060005b82518160ff161015610d2c57600060026000858460ff168151811015156111b057fe5b602090810291909101810151600160a060020a03168252810191909152604001600020805460ff19169115159190911790558251839060ff83169081106111f357fe5b602090810290910181015160408051600081529051600160a060020a03909216927fcaf46096bdd957e9271a7e46a00ff61870b80644805049e7ea814162a2b606bc92918290030190a260010161118d565b600054600160a060020a0316331461125c57600080fd5b6112658161160f565b50565b60008282111561127457fe5b50900390565b8181018281101561128757fe5b92915050565b6000903b1190565b6000806112a58461093e33610ace565b336000908152600460205260409020556112ce846112c287610ace565b9063ffffffff61127a16565b600160a060020a03861660008181526004602081815260408084209590955593517fc0ee0b8a00000000000000000000000000000000000000000000000000000000815233918101828152602482018a90526060604483019081528951606484015289518c9850959663c0ee0b8a9694958c958c95608401928601918190849084905b83811015611369578181015183820152602001611351565b50505050905090810190601f1680156113965780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156113b757600080fd5b505af11580156113cb573d6000803e3d6000fd5b5050604080518781529051600160a060020a03891693503392507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a384600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1686866040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611489578181015183820152602001611471565b50505050905090810190601f1680156114b65780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3506001949350505050565b60006114de8361093e33610ace565b336000908152600460205260409020556114fb836112c286610ace565b600160a060020a0385166000818152600460209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a383600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1685856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156115ca5781810151838201526020016115b2565b50505050905090810190601f1680156115f75780820380516001836020036101000a031916815260200191505b50935050505060405180910390a35060019392505050565b600160a060020a038116151561162457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a7230582061121f4ec43ce4eda547905118c1236fab0155ee18dfc338f93aeb6d36caa5110029"
}