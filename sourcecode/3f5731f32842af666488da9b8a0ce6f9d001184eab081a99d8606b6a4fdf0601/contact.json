{
  "address": "0xf3982707feddd07ba639d99f7ac35361b95464d4",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Operator",
  "compilerVersion": "v0.5.3+commit.10d17f24",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-05\n*/\n\npragma solidity ^0.5.3;\n// TODO remove all comments\ncontract Operator {\n    uint256 public ONE_DAY = 86400;\n    // TODO set to 1 ether\n    uint256 public MIN_DEP = 0.1 ether;\n    uint256 public MAX_DEP = 100 ether;\n    address public admin;\n    address public admin2;\n    address public querierAddress;\n    uint256 public depositedAmountGross = 0;\n    uint256 public paySystemCommissionTimes = 1;\n    uint256 public payDailyIncomeTimes = 1;\n    uint256 public lastPaySystemCommission = now;\n    uint256 public lastPayDailyIncome = now;\n    uint256 public contractStartAt = now;\n    uint256 public lastReset = now;\n    // TODO change operator address\n    address payable public operationFund = 0x4357DE4549a18731fA8bF3c7b69439E87FAff8F6;\n    address[] public investorAddresses;\n    bytes32[] public investmentIds;\n    bytes32[] public withdrawalIds;\n    bytes32[] public maxOutIds;\n    mapping (address => Investor) investors;\n    mapping (bytes32 => Investment) public investments;\n    mapping (bytes32 => Withdrawal) public withdrawals;\n    mapping (bytes32 => MaxOut) public maxOuts;\n    mapping (address => WithdrawAccount) public withdrawAccounts;\n    uint256 additionNow = 0;\n\n    uint256 public maxLevelsAddSale = 200;\n    uint256 public maximumMaxOutInWeek = 2;\n    bool public importing = true;\n\n    Vote public currentVote;\n\n    struct WithdrawAccount {\n        address initialAddress;\n        address currentWithdrawalAddress;\n        address requestingWithdrawalAddress;\n    }\n\n    struct Vote {\n        uint256 startTime;\n        string reason;\n        mapping (address => uint8) votes; // 1 means no, 2 means yes, 3 vote processed\n        address payable emergencyAddress;\n        uint256 yesPoint;\n        uint256 noPoint;\n        uint256 totalPoint;\n    }\n\n    struct Investment {\n        bytes32 id;\n        uint256 at;\n        uint256 amount;\n        address investor;\n        address nextInvestor;\n        bool nextBranch;\n    }\n\n    struct Withdrawal {\n        bytes32 id;\n        uint256 at;\n        uint256 amount;\n        address investor;\n        address presentee;\n        uint256 reason;\n        uint256 times;\n    }\n\n    struct Investor {\n        address parent;\n        address leftChild;\n        address rightChild;\n        address presenter;\n        uint256 generation;\n        uint256 depositedAmount;\n        uint256 withdrewAmount;\n        bool isDisabled;\n        uint256 lastMaxOut;\n        uint256 maxOutTimes;\n        uint256 maxOutTimesInWeek;\n        uint256 totalSell;\n        uint256 sellThisMonth;\n        uint256 rightSell;\n        uint256 leftSell;\n        uint256 reserveCommission;\n        uint256 dailyIncomeWithrewAmount;\n        uint256 registerTime;\n        uint256 minDeposit;\n        bytes32[] investments;\n        bytes32[] withdrawals;\n    }\n\n    struct MaxOut {\n        bytes32 id;\n        address investor;\n        uint256 times;\n        uint256 at;\n    }\n\n    constructor () public { admin = msg.sender; }\n}",
  "bytecode": "60806040526201518060005567016345785d8a000060015568056bc75e2d631000006002556000600655600160075560016008554260095542600a5542600b5542600c55734357de4549a18731fa8bf3c7b69439e87faff8f6600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060175560c860185560026019556001601a60006101000a81548160ff0219169083151502179055503480156100ce57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610de78061011f6000396000f3fe608060405234801561001057600080fd5b50600436106101ab576000357c01000000000000000000000000000000000000000000000000000000009004806394dd27d2116100fb578063d7eb9379116100b4578063efbf64a71161008e578063efbf64a71461075c578063f6610aa614610820578063f851a4401461083e578063f9b137d714610888576101ab565b8063d7eb93791461060f578063e5448048146106d0578063e83a25c51461071a576101ab565b806394dd27d21461050b57806395a25efa14610529578063a363fc9614610597578063a9e4176f146105b5578063b30e3b38146105d3578063c9a1e7b2146105f1576101ab565b80633865079f11610168578063863e76db11610142578063863e76db1461039b578063892611ef146103b95780638a97fce0146104a35780638ed24df1146104ed576101ab565b80633865079f146102b85780636a86e8fd146102fa5780637a9506ed1461037d576101ab565b806306a8f8a2146101b0578063097d42e0146101fa57806314e53a4014610218578063152ad4331461023657806327f6ae8c146102545780632fb011fa14610276575b600080fd5b6101b861095a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610202610980565b6040518082815260200191505060405180910390f35b610220610986565b6040518082815260200191505060405180910390f35b61023e61098c565b6040518082815260200191505060405180910390f35b61025c610992565b604051808215151515815260200191505060405180910390f35b6102a26004803603602081101561028c57600080fd5b81019080803590602001909291905050506109a5565b6040518082815260200191505060405180910390f35b6102e4600480360360208110156102ce57600080fd5b81019080803590602001909291905050506109c8565b6040518082815260200191505060405180910390f35b6103266004803603602081101561031057600080fd5b81019080803590602001909291905050506109eb565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390f35b610385610a3b565b6040518082815260200191505060405180910390f35b6103a3610a41565b6040518082815260200191505060405180910390f35b6103fb600480360360208110156103cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a47565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b6104ab610ad1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104f5610af7565b6040518082815260200191505060405180910390f35b610513610afd565b6040518082815260200191505060405180910390f35b6105556004803603602081101561053f57600080fd5b8101908080359060200190929190505050610b03565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61059f610b41565b6040518082815260200191505060405180910390f35b6105bd610b47565b6040518082815260200191505060405180910390f35b6105db610b4d565b6040518082815260200191505060405180910390f35b6105f9610b53565b6040518082815260200191505060405180910390f35b61063b6004803603602081101561062557600080fd5b8101908080359060200190929190505050610b59565b604051808781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001965050505050505060405180910390f35b6106d8610be2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107466004803603602081101561073057600080fd5b8101908080359060200190929190505050610c08565b6040518082815260200191505060405180910390f35b6107886004803603602081101561077257600080fd5b8101908080359060200190929190505050610c2b565b604051808881526020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200197505050505050505060405180910390f35b610828610cad565b6040518082815260200191505060405180910390f35b610846610cb3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610890610cd9565b60405180878152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561091a5780820151818401526020810190506108ff565b50505050905090810190601f1680156109475780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60075481565b600a5481565b601a60009054906101000a900460ff1681565b6010818154811015156109b457fe5b906000526020600020016000915090505481565b6011818154811015156109d757fe5b906000526020600020016000915090505481565b60156020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b60015481565b60005481565b60166020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60195481565b60095481565b600e81815481101515610b1257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b60025481565b60085481565b600c5481565b60136020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff16905086565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f81815481101515610c1757fe5b906000526020600020016000915090505481565b60146020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154905087565b60185481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601b806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d795780601f10610d4e57610100808354040283529160200191610d79565b820191906000526020600020905b815481529060010190602001808311610d5c57829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806004015490806005015490806006015490508656fea165627a7a72305820bc35a861894dc3388441a73f39cb6a16e1f6c29877620bf1d16b8b2c43e9e1b10029"
}