{
  "address": "0x6f0097b8bd23f6fe8eada580a6bf3feaece27031",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ldoh",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-15\n*/\n\npragma solidity ^0.4.25;\n\n/**\n\n\n\t\t\t\t\t.----------------.  .----------------.  .----------------.  .----------------. \n\t\t\t\t\t| .--------------. || .--------------. || .--------------. || .--------------. |\n\t\t\t\t\t| |  ____  ____  | || |     ____     | || |   _____      | || |  ________    | |\n\t\t\t\t\t| | |_   ||   _| | || |   .'    `.   | || |  |_   _|     | || | |_   ___ `.  | |\n\t\t\t\t\t| |   | |__| |   | || |  /  .--.  \\  | || |    | |       | || |   | |   `. \\ | |\n\t\t\t\t\t| |   |  __  |   | || |  | |    | |  | || |    | |   _   | || |   | |    | | | |\n\t\t\t\t\t| |  _| |  | |_  | || |  \\  `--'  /  | || |   _| |__/ |  | || |  _| |___.' / | |\n\t\t\t\t\t| | |____||____| | || |   `.____.'   | || |  |________|  | || | |________.'  | |\n\t\t\t\t\t| |              | || |              | || |              | || |              | |\n\t\t\t\t\t| '--------------' || '--------------' || '--------------' || '--------------' |\n\t\t\t\t\t'----------------'  '----------------'  '----------------'  '----------------' \n\n \n*/\n\n\t/*==============================\n    =          Version 7.4         =\n    ==============================*/\n\t\ncontract EthereumSmartContract {    \n    address EthereumNodes; \n\t\n    constructor() public { \n        EthereumNodes = msg.sender;\n    }\n    modifier restricted() {\n        require(msg.sender == EthereumNodes);\n        _;\n    } \n\t\n    function GetEthereumNodes() public view returns (address owner) { return EthereumNodes; }\n}\n\ncontract ldoh is EthereumSmartContract {\n\t\n\n\t\n\t\t\t\n\tmapping (address => mapping (address => mapping (uint256 => uint256))) public Statistics;\n\t//3rd uint256, Category >>> 1 = LifetimeContribution, 2 = LifetimePayments, 3 = Affiliatevault, 4 = Affiliateprofit, 5 = ActiveContribution\n\t\n\t\n\t\t// Airdrop - Hold Platform (HPM)\n\t\t\t\t\t\t\t\t\n\taddress public Holdplatform_address;\t\n\tuint256 public Holdplatform_balance; \t\n\tmapping(address => bool) \tpublic Holdplatform_status;\n\tmapping(address => uint256) public Holdplatform_ratio; \t\n\t\n \n\t\n\t/*==============================\n    =          CONSTRUCTOR         =\n    ==============================*/  \t\n   \n    constructor() public {     \t \t\n\t\tHoldplatform_address\t= 0x23bAdee11Bf49c40669e9b09035f048e9146213e;\t//Change before deploy\n    }\n    \n\t\n\t/*==============================\n    =    AVAILABLE FOR EVERYONE    =\n    ==============================*/  \n\n\n//-------o Function 03 - Contribute \n\n\t//--o 01\n    function HodlTokens(address tokenAddress, uint256 amount) public {\n\t\t\n\t\tERC20Interface token \t\t\t= ERC20Interface(tokenAddress);       \n        require(token.transferFrom(msg.sender, address(this), amount));\t\n\t\t\n\t\tHodlTokens4(tokenAddress, amount);\t\t\t\t\t\t\n\t}\n\t\n\t//--o 04\t\n    function HodlTokens4(address ERC, uint256 amount) private {\n\t\t\n\t\tif (Holdplatform_status[ERC] == true) {\n\t\trequire(Holdplatform_balance > 0);\n\t\t\t\n\t\tuint256 Airdrop\t= div(mul(Holdplatform_ratio[ERC], amount), 100000);\n\t\t\n\t\tERC20Interface token \t= ERC20Interface(Holdplatform_address);        \n        require(token.balanceOf(address(this)) >= Airdrop);\n\n        token.transfer(msg.sender, Airdrop);\n\t\t}\t\t\n\t}\n\t\n\n\t/*==============================\n    =          RESTRICTED          =\n    ==============================*/  \t\n\n\n\t\n//-------o 05 Hold Platform\n    function Holdplatform_Airdrop(address tokenAddress, bool HPM_status, uint256 HPM_ratio) public restricted {\n\t\trequire(HPM_ratio <= 100000 );\n\t\t\n\t\tHoldplatform_status[tokenAddress] \t= HPM_status;\t\n\t\tHoldplatform_ratio[tokenAddress] \t= HPM_ratio;\t// 100% = 100.000\n\t\n    }\t\n\t\n\tfunction Holdplatform_Deposit(uint256 amount) restricted public {\n\t\trequire(amount > 0 );\n        \n       \tERC20Interface token = ERC20Interface(Holdplatform_address);       \n        require(token.transferFrom(msg.sender, address(this), amount));\n\t\t\n\t\tuint256 newbalance\t\t= add(Holdplatform_balance, amount) ;\n\t\tHoldplatform_balance \t= newbalance;\n    }\n\t\n\tfunction Holdplatform_Withdraw(uint256 amount) restricted public {\n        require(Holdplatform_balance > 0);\n        \n\t\tuint256 newbalance\t\t= sub(Holdplatform_balance, amount) ;\n\t\tHoldplatform_balance \t= newbalance;\n        \n        ERC20Interface token = ERC20Interface(Holdplatform_address);\n        \n        require(token.balanceOf(address(this)) >= amount);\n        token.transfer(msg.sender, amount);\n    }\n\t\n\n\t\n\t\n\t/*==============================\n    =      SAFE MATH FUNCTIONS     =\n    ==============================*/  \t\n\t\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tif (a == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tuint256 c = a * b; \n\t\trequire(c / a == b);\n\t\treturn c;\n\t}\n\t\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\trequire(b > 0); \n\t\tuint256 c = a / b;\n\t\treturn c;\n\t}\n\t\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\trequire(b <= a);\n\t\tuint256 c = a - b;\n\t\treturn c;\n\t}\n\t\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tuint256 c = a + b;\n\t\trequire(c >= a);\n\t\treturn c;\n\t}\n    \n}\n\n\n\t/*==============================\n    =        ERC20 Interface       =\n    ==============================*/ \n\ncontract ERC20Interface {\n\n    uint256 public totalSupply;\n    uint256 public decimals;\n    \n    function symbol() public view returns (string);\n    function balanceOf(address _owner) public view returns (uint256 balance);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value); \n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Statistics\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetEthereumNodes\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Holdplatform_Withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Holdplatform_ratio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Holdplatform_balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Holdplatform_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Holdplatform_Deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"HPM_status\",\"type\":\"bool\"},{\"name\":\"HPM_ratio\",\"type\":\"uint256\"}],\"name\":\"Holdplatform_Airdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"HodlTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Holdplatform_status\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]",
  "bytecode": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507323badee11bf49c40669e9b09035f048e9146213e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e75806100b56000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327a02110146100a957806331b78a921461012a57806336c07a69146101815780636019e8d3146101ae578063900771031461020557806395006c3014610230578063be37ec1114610287578063d6387b1e146102b4578063e61021e81461030d578063ec80571b1461035a575b600080fd5b3480156100b557600080fd5b50610114600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103b5565b6040518082815260200191505060405180910390f35b34801561013657600080fd5b5061013f6103e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018d57600080fd5b506101ac60048036038101908080359060200190929190505050610410565b005b3480156101ba57600080fd5b506101ef600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610681565b6040518082815260200191505060405180910390f35b34801561021157600080fd5b5061021a610699565b6040518082815260200191505060405180910390f35b34801561023c57600080fd5b5061024561069f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029357600080fd5b506102b2600480360381019080803590602001909291905050506106c5565b005b3480156102c057600080fd5b5061030b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291908035906020019092919050505061088e565b005b34801561031957600080fd5b50610358600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061099b565b005b34801561036657600080fd5b5061039b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610acc565b604051808215151515815260200191505060405180910390f35b600160205282600052604060002060205281600052604060002060205280600052604060002060009250925050505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561046e57600080fd5b600060035411151561047f57600080fd5b61048b60035484610aec565b915081600381905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561055557600080fd5b505af1158015610569573d6000803e3d6000fd5b505050506040513d602081101561057f57600080fd5b81019080805190602001909291905050501015151561059d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561064057600080fd5b505af1158015610654573d6000803e3d6000fd5b505050506040513d602081101561066a57600080fd5b810190808051906020019092919050505050505050565b60056020528060005260406000206000915090505481565b60035481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561072357600080fd5b60008311151561073257600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561082e57600080fd5b505af1158015610842573d6000803e3d6000fd5b505050506040513d602081101561085857600080fd5b8101908080519060200190929190505050151561087457600080fd5b61088060035484610b0d565b905080600381905550505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108e957600080fd5b620186a081111515156108fb57600080fd5b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b60008290508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610a7757600080fd5b505af1158015610a8b573d6000803e3d6000fd5b505050506040513d6020811015610aa157600080fd5b81019080805190602001909291905050501515610abd57600080fd5b610ac78383610b2e565b505050565b60046020528060005260406000206000915054906101000a900460ff1681565b600080838311151515610afe57600080fd5b82840390508091505092915050565b6000808284019050838110151515610b2457600080fd5b8091505092915050565b60008060011515600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610ddb576000600354111515610b9b57600080fd5b610bf0610be7600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610de1565b620186a0610e1f565b9150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050818173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610cb357600080fd5b505af1158015610cc7573d6000803e3d6000fd5b505050506040513d6020811015610cdd57600080fd5b810190808051906020019092919050505010151515610cfb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610d9e57600080fd5b505af1158015610db2573d6000803e3d6000fd5b505050506040513d6020811015610dc857600080fd5b8101908080519060200190929190505050505b50505050565b6000806000841415610df65760009150610e18565b8284029050828482811515610e0757fe5b04141515610e1457600080fd5b8091505b5092915050565b600080600083111515610e3157600080fd5b8284811515610e3c57fe5b04905080915050929150505600a165627a7a72305820d3fdcad074dc819f698dbb0cb13cd1e29fa003a51624cc96dd8a23bb972127fa0029"
}