{
  "address": "0x35d28772130c325403b5ed3cc591368f3baa8250",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "tokenTrust",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-26\n*/\n\npragma solidity ^0.4.21;\n\ncontract ForeignToken {\n    function balanceOf(address _owner) constant returns (uint256);\n    function transfer(address _to, uint256 _value) returns (bool);\n}\n\n\ncontract tokenTrust {\n    event Hodl(address indexed hodler, uint indexed amount);\n    event Party(address indexed hodler, uint indexed amount);\n    mapping (address => uint) public hodlers;\n    uint partyTime = 1521975140; // Sundays\n    function() payable {\n        hodlers[msg.sender] += msg.value;\n        Hodl(msg.sender, msg.value);\n    }\n    function party() {\n        require (block.timestamp > partyTime && hodlers[msg.sender] > 0);\n        uint value = hodlers[msg.sender];\n        uint amount = value/104;\n        msg.sender.transfer(amount);\n        Party(msg.sender, amount);\n        partyTime = partyTime + 604800;\n    }\n    function withdrawForeignTokens(address _tokenContract) returns (bool) {\n        if (msg.sender != 0x239C09c910ea910994B320ebdC6bB159E71d0b30) { throw; }\n        require (block.timestamp > partyTime);\n        \n        ForeignToken token = ForeignToken(_tokenContract);\n\n        uint256 amount = token.balanceOf(address(this))/104;\n        return token.transfer(0x239C09c910ea910994B320ebdC6bB159E71d0b30, amount);\n        partyTime = partyTime + 604800;\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[],\"name\":\"party\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"hodlers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hodler\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Hodl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hodler\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Party\",\"type\":\"event\"}]",
  "bytecode": "6060604052635ab77f64600155341561001757600080fd5b61051e806100266000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063354284f2146100e95780634a3f17e7146100fe578063e58fc54c1461014b575b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550343373ffffffffffffffffffffffffffffffffffffffff167f115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e309160405160405180910390a3005b34156100f457600080fd5b6100fc61019c565b005b341561010957600080fd5b610135600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102df565b6040518082815260200191505060405180910390f35b341561015657600080fd5b610182600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102f7565b604051808215151515815260200191505060405180910390f35b600080600154421180156101ee575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b15156101f957600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915060688281151561024657fe5b0490503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561028957600080fd5b803373ffffffffffffffffffffffffffffffffffffffff167f0dc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e760405160405180910390a362093a80600154016001819055505050565b60006020528060005260406000206000915090505481565b600080600073239c09c910ea910994b320ebdc6bb159e71d0b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034a57600080fd5b6001544211151561035a57600080fd5b83915060688273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156103f957600080fd5b5af1151561040657600080fd5b5050506040518051905081151561041957fe5b0490508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb73239c09c910ea910994b320ebdc6bb159e71d0b30836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156104d257600080fd5b5af115156104df57600080fd5b50505060405180519050925050509190505600a165627a7a72305820175d786b65cb3a187160e02cb9e19f6b3882f0d48e2e1000c42bc7d3369174470029"
}