{
  "address": "0x9c666c69595c278063278a604ff12c70691ab234",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Sale",
  "compilerVersion": "v0.5.4+commit.9549d8ff",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-28\n*/\n\npragma solidity 0.5.4;\n\ninterface IDGTXToken {\n    function transfer(address to, uint value) external returns (bool);\n    function balanceOf(address) external view returns (uint256);\n}\n\ninterface IWhitelist {\n    function approved(address user) external view returns (bool);\n}\n\ninterface ITreasury {\n    function phaseNum() external view returns (uint256);\n}\n\ncontract Sale {\n    address public owner;\n    address public whitelist;\n    address public token;\n    address public treasury;\n\n    mapping(address => mapping(uint256 => uint256)) public purchased;\n\n    uint256 internal rate;\n    uint256 internal constant RATE_DELIMITER = 1000;\n    uint256 internal constant ONE_TOKEN = 1e18; //1 DGTX\n    uint256 internal constant PURCHASE_LIMIT = 1e24; //1 000 000 DGTX\n\n    uint256 internal oldRate;\n    uint256 internal constant RATE_UPDATE_DELAY = 15 minutes;\n    uint256 internal rateBecomesValidAt;\n\n    event Purchase(address indexed buyer, uint256 amount);\n    event RateUpdate(uint256 newRate, uint256 rateBecomesValidAt);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event TokensReceived(uint256 amount);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    modifier onlyWhitelisted() {\n        require(IWhitelist(whitelist).approved(msg.sender));\n        _;\n    }\n\n    constructor(address _token, address _whitelist, address _treasury, uint256 _rate) public {\n        require(_token != address(0));\n        require(_whitelist != address(0));\n        require(_treasury != address(0));\n        require(_rate != 0);\n\n        owner = msg.sender;\n        token = _token;\n        whitelist = _whitelist;\n        treasury = _treasury;\n        rate = _rate;\n    }\n\n    function() external payable {\n        require(msg.data.length == 0);\n\n        buy();\n    }\n\n    function updateRate(uint256 newRate) external onlyOwner {\n        require(newRate != 0);\n\n        if (now > rateBecomesValidAt) {\n            oldRate = rate;\n        }\n        rate = newRate;\n        rateBecomesValidAt = now + RATE_UPDATE_DELAY;\n        emit RateUpdate(newRate, rateBecomesValidAt);\n    }\n\n    function withdraw() external onlyOwner {\n        require(address(this).balance > 0);\n\n        msg.sender.transfer(address(this).balance);\n    }\n\n    function withdraw(address payable to) external onlyOwner {\n        require(address(this).balance > 0);\n\n        to.transfer(address(this).balance);\n    }\n\n    function transferOwnership(address _owner) external onlyOwner {\n        require(_owner != address(0));\n\n        emit OwnershipTransferred(owner, _owner);\n\n        owner = _owner;\n    }\n\n    function tokenFallback(address, uint value, bytes calldata) external {\n        require(msg.sender == token);\n\n        emit TokensReceived(value);\n    }\n\n    function availablePersonal(address user) external view returns (uint256) {\n        if (IWhitelist(whitelist).approved(user)) {\n            uint256 currentPhase = ITreasury(treasury).phaseNum();\n            return PURCHASE_LIMIT - purchased[user][currentPhase];\n        }\n        return 0;\n    }\n\n    function buy() public payable onlyWhitelisted() returns (uint256) {\n        uint256 availableTotal = availableTokens();\n        require(availableTotal > 0);\n\n        uint256 currentPhase = ITreasury(treasury).phaseNum();\n        uint256 personalRestrictions = PURCHASE_LIMIT - purchased[msg.sender][currentPhase];\n        require(personalRestrictions > 0);\n\n        uint256 amount = weiToTokens(msg.value);\n        require(amount >= ONE_TOKEN); // 1 DGTX\n\n        // actual = min(amount, availableTotal, availablePersonal)\n        uint256 actual = amount < availableTotal ? amount : availableTotal;\n        actual = actual < personalRestrictions ? actual : personalRestrictions;\n\n        purchased[msg.sender][currentPhase] += actual;\n\n        require(IDGTXToken(token).transfer(msg.sender, actual));\n\n        if (amount != actual) {\n            uint256 weiRefund = msg.value - tokensToWei(actual);\n            msg.sender.transfer(weiRefund);\n        }\n\n        emit Purchase(msg.sender, actual);\n\n        return actual;\n    }\n\n    function currentRate() public view returns (uint256) {\n        return (now < rateBecomesValidAt) ? oldRate : rate;\n    }\n\n    function weiToTokens(uint256 weiAmount) public view returns (uint256) {\n        uint256 exchangeRate = currentRate();\n\n        return weiAmount * exchangeRate / RATE_DELIMITER;\n    }\n\n    function tokensToWei(uint256 tokensAmount) public view returns (uint256) {\n        uint256 exchangeRate = currentRate();\n\n        return tokensAmount * RATE_DELIMITER / exchangeRate;\n    }\n\n    function futureRate() public view returns (uint256, uint256) {\n        return (now < rateBecomesValidAt) ? (rate, rateBecomesValidAt - now) : (rate, 0);\n    }\n\n    function availableTokens() public view returns (uint256) {\n        return IDGTXToken(token).balanceOf(address(this));\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"weiToTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"futureRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"updateRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokensAmount\",\"type\":\"uint256\"}],\"name\":\"tokensToWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"availablePersonal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"purchased\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_whitelist\",\"type\":\"address\"},{\"name\":\"_treasury\",\"type\":\"address\"},{\"name\":\"_rate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rateBecomesValidAt\",\"type\":\"uint256\"}],\"name\":\"RateUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReceived\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50604051608080610d148339810180604052608081101561003057600080fd5b5080516020820151604083015160609093015191929091600160a060020a038416151561005c57600080fd5b600160a060020a038316151561007157600080fd5b600160a060020a038216151561008657600080fd5b80151561009257600080fd5b60008054600160a060020a0319908116331790915560028054600160a060020a03968716908316179055600180549486169482169490941790935560038054929094169190921617909155600555610c25806100ef6000396000f3fe60806040526004361061011b576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100b2578063c0ee0b8a11610081578063c0ee0b8a146102e4578063e597ef1214610376578063f2fde38b146103af578063f9f8bdb7146103e2578063fc0c546a146103f75761011b565b80638da5cb5b1461027f57806393e59dc114610294578063a6f2ae3a146102a9578063aa72fcf8146102b15761011b565b80636622483c116100ee5780636622483c146101e857806369bb4dc21461021657806369ea17711461022b5780637346ec57146102555761011b565b80633ccfd60b1461013157806351cff8d91461014857806353aaef7d1461017b57806361d027b3146101b7575b361561012657600080fd5b61012e61040c565b50005b34801561013d57600080fd5b50610146610710565b005b34801561015457600080fd5b506101466004803603602081101561016b57600080fd5b5035600160a060020a0316610765565b34801561018757600080fd5b506101a56004803603602081101561019e57600080fd5b50356107c4565b60408051918252519081900360200190f35b3480156101c357600080fd5b506101cc6107e2565b60408051600160a060020a039092168252519081900360200190f35b3480156101f457600080fd5b506101fd6107f1565b6040805192835260208301919091528051918290030190f35b34801561022257600080fd5b506101a5610818565b34801561023757600080fd5b506101466004803603602081101561024e57600080fd5b50356108ad565b34801561026157600080fd5b506101a56004803603602081101561027857600080fd5b503561092e565b34801561028b57600080fd5b506101cc61094a565b3480156102a057600080fd5b506101cc610959565b6101a561040c565b3480156102bd57600080fd5b506101a5600480360360208110156102d457600080fd5b5035600160a060020a0316610968565b3480156102f057600080fd5b506101466004803603606081101561030757600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561033757600080fd5b82018360208201111561034957600080fd5b8035906020019184600183028401116401000000008311171561036b57600080fd5b509092509050610acd565b34801561038257600080fd5b506101a56004803603604081101561039957600080fd5b50600160a060020a038135169060200135610b1d565b3480156103bb57600080fd5b50610146600480360360208110156103d257600080fd5b5035600160a060020a0316610b3a565b3480156103ee57600080fd5b506101a5610bce565b34801561040357600080fd5b506101cc610bea565b600154604080517fd8b964e60000000000000000000000000000000000000000000000000000000081523360048201529051600092600160a060020a03169163d8b964e6916024808301926020929190829003018186803b15801561047057600080fd5b505afa158015610484573d6000803e3d6000fd5b505050506040513d602081101561049a57600080fd5b505115156104a757600080fd5b60006104b1610818565b9050600081116104c057600080fd5b600354604080517ff3f983820000000000000000000000000000000000000000000000000000000081529051600092600160a060020a03169163f3f98382916004808301926020929190829003018186803b15801561051e57600080fd5b505afa158015610532573d6000803e3d6000fd5b505050506040513d602081101561054857600080fd5b505133600090815260046020908152604080832084845290915281205491925069d3c21bcecceda10000009190910390811161058357600080fd5b600061058e346107c4565b9050670de0b6b3a76400008110156105a557600080fd5b60008482106105b457846105b6565b815b90508281106105c557826105c7565b805b3360008181526004602081815260408084208a8552825280842080548701905560025481517fa9059cbb000000000000000000000000000000000000000000000000000000008152938401959095526024830186905251949550600160a060020a039093169363a9059cbb9360448084019491938390030190829087803b15801561065157600080fd5b505af1158015610665573d6000803e3d6000fd5b505050506040513d602081101561067b57600080fd5b5051151561068857600080fd5b8181146106d157600061069a8261092e565b60405134919091039150339082156108fc029083906000818181858888f193505050501580156106ce573d6000803e3d6000fd5b50505b60408051828152905133917f2499a5330ab0979cc612135e7883ebc3cd5c9f7a8508f042540c34723348f632919081900360200190a294505050505090565b600054600160a060020a0316331461072757600080fd5b600030311161073557600080fd5b6040513390303180156108fc02916000818181858888f19350505050158015610762573d6000803e3d6000fd5b50565b600054600160a060020a0316331461077c57600080fd5b600030311161078a57600080fd5b604051600160a060020a03821690303180156108fc02916000818181858888f193505050501580156107c0573d6000803e3d6000fd5b5050565b6000806107cf610bce565b90506103e88382025b049150505b919050565b600354600160a060020a031681565b6000806007544210610807576005546000610810565b60055442600754035b915091509091565b600254604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600092600160a060020a0316916370a08231916024808301926020929190829003018186803b15801561087c57600080fd5b505afa158015610890573d6000803e3d6000fd5b505050506040513d60208110156108a657600080fd5b5051905090565b600054600160a060020a031633146108c457600080fd5b8015156108d057600080fd5b6007544211156108e1576005546006555b60058190554261038401600781905560408051838152602081019290925280517f516c8bdb823996757c901b6b9bd210afa82c6ec8d550f0e57cd3f64896f7319c9281900390910190a150565b600080610939610bce565b9050806103e884028115156107d857fe5b600054600160a060020a031681565b600154600160a060020a031681565b600154604080517fd8b964e6000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301529151600093929092169163d8b964e691602480820192602092909190829003018186803b1580156109d257600080fd5b505afa1580156109e6573d6000803e3d6000fd5b505050506040513d60208110156109fc57600080fd5b505115610ac557600354604080517ff3f983820000000000000000000000000000000000000000000000000000000081529051600092600160a060020a03169163f3f98382916004808301926020929190829003018186803b158015610a6157600080fd5b505afa158015610a75573d6000803e3d6000fd5b505050506040513d6020811015610a8b57600080fd5b5051600160a060020a0384166000908152600460209081526040808320938352929052205469d3c21bcecceda10000000391506107dd9050565b506000919050565b600254600160a060020a03163314610ae457600080fd5b6040805184815290517f17cca138a663106b4c25a247e2d9238888fe37188d83b7bb7287bc1c0a4df82a9181900360200190a150505050565b600460209081526000928352604080842090915290825290205481565b600054600160a060020a03163314610b5157600080fd5b600160a060020a0381161515610b6657600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60006007544210610be157600554610be5565b6006545b905090565b600254600160a060020a03168156fea165627a7a7230582028f4018d4a7008260b949b05c4486958d6c35e550deac0a46a314f9f5815b05e00290000000000000000000000001c83501478f1320977047008496dacbd60bb15ef000000000000000000000000371a6a413fd23c5c906180769b87701d3be624a8000000000000000000000000099a9f22d1bcb5a90e0b8fa0cb0fc47350f113ea00000000000000000000000000000000000000000000000000000000000186a0",
  "constructorArguments": "0000000000000000000000001c83501478f1320977047008496dacbd60bb15ef000000000000000000000000371a6a413fd23c5c906180769b87701d3be624a8000000000000000000000000099a9f22d1bcb5a90e0b8fa0cb0fc47350f113ea00000000000000000000000000000000000000000000000000000000000186a0"
}