{
  "address": "0x27dce1ec4d3f72c3e457cc50354f1f975ddef488",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "AirToken",
  "contractName": "Token",
  "compilerVersion": "v0.4.14+commit.c2215d46",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-09-11\n*/\n\n// Copyright New Alchemy Limited, 2017. All rights reserved.\n\npragma solidity >=0.4.10;\n\n// from Zeppelin\ncontract SafeMath {\n\tfunction safeMul(uint a, uint b) internal returns (uint) {\n\t\tuint c = a * b;\n\t\trequire(a == 0 || c / a == b);\n\t\treturn c;\n\t}\n\n\tfunction safeSub(uint a, uint b) internal returns (uint) {\n\t\trequire(b <= a);\n\t\treturn a - b;\n\t}\n\n\tfunction safeAdd(uint a, uint b) internal returns (uint) {\n\t\tuint c = a + b;\n\t\trequire(c>=a && c>=b);\n\t\treturn c;\n\t}\n}\n\ncontract Owned {\n\taddress public owner;\n\taddress newOwner;\n\n\tfunction Owned() {\n\t\towner = msg.sender;\n\t}\n\n\tmodifier onlyOwner() {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n\n\tfunction changeOwner(address _newOwner) onlyOwner {\n\t\tnewOwner = _newOwner;\n\t}\n\n\tfunction acceptOwnership() {\n\t\tif (msg.sender == newOwner) {\n\t\t\towner = newOwner;\n\t\t}\n\t}\n}\n\ncontract Pausable is Owned {\n\tbool public paused;\n\n\tfunction pause() onlyOwner {\n\t\tpaused = true;\n\t}\n\n\tfunction unpause() onlyOwner {\n\t\tpaused = false;\n\t}\n\n\tmodifier notPaused() {\n\t\trequire(!paused);\n\t\t_;\n\t}\n}\n\ncontract Finalizable is Owned {\n\tbool public finalized;\n\n\tfunction finalize() onlyOwner {\n\t\tfinalized = true;\n\t}\n\n\tmodifier notFinalized() {\n\t\trequire(!finalized);\n\t\t_;\n\t}\n}\n\ncontract IToken {\n\tfunction transfer(address _to, uint _value) returns (bool);\n\tfunction balanceOf(address owner) returns(uint);\n}\n\n// In case someone accidentally sends token to one of these contracts,\n// add a way to get them back out.\ncontract TokenReceivable is Owned {\n\tfunction claimTokens(address _token, address _to) onlyOwner returns (bool) {\n\t\tIToken token = IToken(_token);\n\t\treturn token.transfer(_to, token.balanceOf(this));\n\t}\n}\n\ncontract EventDefinitions {\n\tevent Transfer(address indexed from, address indexed to, uint value);\n\tevent TransferInternalLedgerAT(address indexed _from, address _to, uint256 indexed _value, bytes32 indexed mdn);\n\tevent Approval(address indexed owner, address indexed spender, uint value);\n}\n\ncontract Token is Finalizable, TokenReceivable, SafeMath, EventDefinitions, Pausable {\n\t// Set these appropriately before you deploy\n\tstring constant public name = \"AirToken\";\n\tuint8 constant public decimals = 8;\n\tstring constant public symbol = \"AIR\";\n\tController public controller;\n\tstring public motd;\n\taddress public atFundDeposit;\n\tevent Motd(string message);\n\n\t// functions below this line are onlyOwner\n\n\t// set \"message of the day\"\n\tfunction setMotd(string _m) onlyOwner {\n\t\tmotd = _m;\n\t\tMotd(_m);\n\t}\n\n\tfunction setController(address _c) onlyOwner notFinalized {\n\t\tcontroller = Controller(_c);\n\t}\n\n\tfunction setBeneficiary(address _beneficiary) onlyOwner {\n\t\tatFundDeposit = _beneficiary;\n\t}\n\n\t// functions below this line are public\n\n\tfunction balanceOf(address a) constant returns (uint) {\n\t\treturn controller.balanceOf(a);\n\t}\n\n\tfunction totalSupply() constant returns (uint) {\n\t\treturn controller.totalSupply();\n\t}\n\n\tfunction allowance(address _owner, address _spender) constant returns (uint) {\n\t\treturn controller.allowance(_owner, _spender);\n\t}\n\n\tfunction transfer(address _to, uint _value) onlyPayloadSize(2) notPaused returns (bool success) {\n\t\tif (controller.transfer(msg.sender, _to, _value)) {\n\t\t\tTransfer(msg.sender, _to, _value);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3) notPaused returns (bool success) {\n\t\tif (controller.transferFrom(msg.sender, _from, _to, _value)) {\n\t\t\tTransfer(_from, _to, _value);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction approve(address _spender, uint _value) onlyPayloadSize(2) notPaused returns (bool success) {\n\t\t// promote safe user behavior\n\t\tif (controller.approve(msg.sender, _spender, _value)) {\n\t\t\tApproval(msg.sender, _spender, _value);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction increaseApproval (address _spender, uint _addedValue) onlyPayloadSize(2) notPaused returns (bool success) {\n\t\tif (controller.increaseApproval(msg.sender, _spender, _addedValue)) {\n\t\t\tuint newval = controller.allowance(msg.sender, _spender);\n\t\t\tApproval(msg.sender, _spender, newval);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction decreaseApproval (address _spender, uint _subtractedValue) onlyPayloadSize(2) notPaused returns (bool success) {\n\t\tif (controller.decreaseApproval(msg.sender, _spender, _subtractedValue)) {\n\t\t\tuint newval = controller.allowance(msg.sender, _spender);\n\t\t\tApproval(msg.sender, _spender, newval);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tmodifier onlyPayloadSize(uint numwords) {\n\t\tassert(msg.data.length >= numwords * 32 + 4);\n\t\t_;\n\t}\n\n\tfunction burn(uint _amount) notPaused {\n\t\tcontroller.burn(msg.sender, _amount);\n\t\tTransfer(msg.sender, 0x0, _amount);\n\t}\n\n\tfunction transferToInternalLedger(uint256 _value, bytes32 _mdn) external returns (bool success) {\n\t\trequire(atFundDeposit != 0);\n\t\tif (transfer(atFundDeposit, _value)) {\n\t\t\tTransferInternalLedgerAT(msg.sender, atFundDeposit, _value, _mdn);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// functions below this line are onlyController\n\n\tmodifier onlyController() {\n\t\tassert(msg.sender == address(controller));\n\t\t_;\n\t}\n\n\n\tfunction controllerTransfer(address _from, address _to, uint _value) onlyController {\n\t\tTransfer(_from, _to, _value);\n\t}\n\n\tfunction controllerApprove(address _owner, address _spender, uint _value) onlyController {\n\t\tApproval(_owner, _spender, _value);\n\t}\n}\n\ncontract Controller is Owned, Finalizable {\n\tLedger public ledger;\n\tToken public token;\n\n\tfunction Controller() {\n\t}\n\n\t// functions below this line are onlyOwner\n\n\tfunction setToken(address _token) onlyOwner {\n\t\ttoken = Token(_token);\n\t}\n\n\tfunction setLedger(address _ledger) onlyOwner {\n\t\tledger = Ledger(_ledger);\n\t}\n\n\tmodifier onlyToken() {\n\t\trequire(msg.sender == address(token));\n\t\t_;\n\t}\n\n\tmodifier onlyLedger() {\n\t\trequire(msg.sender == address(ledger));\n\t\t_;\n\t}\n\n\t// public functions\n\n\tfunction totalSupply() constant returns (uint) {\n\t\treturn ledger.totalSupply();\n\t}\n\n\tfunction balanceOf(address _a) constant returns (uint) {\n\t\treturn ledger.balanceOf(_a);\n\t}\n\n\tfunction allowance(address _owner, address _spender) constant returns (uint) {\n\t\treturn ledger.allowance(_owner, _spender);\n\t}\n\n\t// functions below this line are onlyLedger\n\n\tfunction ledgerTransfer(address from, address to, uint val) onlyLedger {\n\t\ttoken.controllerTransfer(from, to, val);\n\t}\n\n\t// functions below this line are onlyToken\n\n\tfunction transfer(address _from, address _to, uint _value) onlyToken returns (bool success) {\n\t\treturn ledger.transfer(_from, _to, _value);\n\t}\n\n\tfunction transferFrom(address _spender, address _from, address _to, uint _value) onlyToken returns (bool success) {\n\t\treturn ledger.transferFrom(_spender, _from, _to, _value);\n\t}\n\n\tfunction approve(address _owner, address _spender, uint _value) onlyToken returns (bool success) {\n\t\treturn ledger.approve(_owner, _spender, _value);\n\t}\n\n\tfunction increaseApproval (address _owner, address _spender, uint _addedValue) onlyToken returns (bool success) {\n\t\treturn ledger.increaseApproval(_owner, _spender, _addedValue);\n\t}\n\n\tfunction decreaseApproval (address _owner, address _spender, uint _subtractedValue) onlyToken returns (bool success) {\n\t\treturn ledger.decreaseApproval(_owner, _spender, _subtractedValue);\n\t}\n\n\tfunction burn(address _owner, uint _amount) onlyToken {\n\t\tledger.burn(_owner, _amount);\n\t}\n}\n\ncontract Ledger is Owned, SafeMath, Finalizable {\n\tController public controller;\n\tmapping(address => uint) public balanceOf;\n\tmapping (address => mapping (address => uint)) public allowance;\n\tuint public totalSupply;\n\tuint public mintingNonce;\n\tbool public mintingStopped;\n\n\t// functions below this line are onlyOwner\n\n\tfunction Ledger() {\n\t}\n\n\tfunction setController(address _controller) onlyOwner notFinalized {\n\t\tcontroller = Controller(_controller);\n\t}\n\n\tfunction stopMinting() onlyOwner {\n\t\tmintingStopped = true;\n\t}\n\n\tfunction multiMint(uint nonce, uint256[] bits) onlyOwner {\n\t\trequire(!mintingStopped);\n\t\tif (nonce != mintingNonce) return;\n\t\tmintingNonce += 1;\n\t\tuint256 lomask = (1 << 96) - 1;\n\t\tuint created = 0;\n\t\tfor (uint i=0; i<bits.length; i++) {\n\t\t\taddress a = address(bits[i]>>96);\n\t\t\tuint value = bits[i]&lomask;\n\t\t\tbalanceOf[a] = balanceOf[a] + value;\n\t\t\tcontroller.ledgerTransfer(0, a, value);\n\t\t\tcreated += value;\n\t\t}\n\t\ttotalSupply += created;\n\t}\n\n\t// functions below this line are onlyController\n\n\tmodifier onlyController() {\n\t\trequire(msg.sender == address(controller));\n\t\t_;\n\t}\n\n\tfunction transfer(address _from, address _to, uint _value) onlyController returns (bool success) {\n\t\tif (balanceOf[_from] < _value) return false;\n\n\t\tbalanceOf[_from] = safeSub(balanceOf[_from], _value);\n\t\tbalanceOf[_to] = safeAdd(balanceOf[_to], _value);\n\t\treturn true;\n\t}\n\n\tfunction transferFrom(address _spender, address _from, address _to, uint _value) onlyController returns (bool success) {\n\t\tif (balanceOf[_from] < _value) return false;\n\n\t\tvar allowed = allowance[_from][_spender];\n\t\tif (allowed < _value) return false;\n\n\t\tbalanceOf[_to] = safeAdd(balanceOf[_to], _value);\n\t\tbalanceOf[_from] = safeSub(balanceOf[_from], _value);\n\t\tallowance[_from][_spender] = safeSub(allowed, _value);\n\t\treturn true;\n\t}\n\n\tfunction approve(address _owner, address _spender, uint _value) onlyController returns (bool success) {\n\t\t// require user to set to zero before resetting to nonzero\n\t\tif ((_value != 0) && (allowance[_owner][_spender] != 0)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tallowance[_owner][_spender] = _value;\n\t\treturn true;\n\t}\n\n\tfunction increaseApproval (address _owner, address _spender, uint _addedValue) onlyController returns (bool success) {\n\t\tuint oldValue = allowance[_owner][_spender];\n\t\tallowance[_owner][_spender] = safeAdd(oldValue, _addedValue);\n\t\treturn true;\n\t}\n\n\tfunction decreaseApproval (address _owner, address _spender, uint _subtractedValue) onlyController returns (bool success) {\n\t\tuint oldValue = allowance[_owner][_spender];\n\t\tif (_subtractedValue > oldValue) {\n\t\t\tallowance[_owner][_spender] = 0;\n\t\t} else {\n\t\t\tallowance[_owner][_spender] = safeSub(oldValue, _subtractedValue);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction burn(address _owner, uint _amount) onlyController {\n\t\tbalanceOf[_owner] = safeSub(balanceOf[_owner], _amount);\n\t\ttotalSupply = safeSub(totalSupply, _amount);\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"setBeneficiary\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"atFundDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_mdn\",\"type\":\"bytes32\"}],\"name\":\"transferToInternalLedger\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"motd\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_m\",\"type\":\"string\"}],\"name\":\"setMotd\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"controllerApprove\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_c\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"controllerTransfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Motd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"mdn\",\"type\":\"bytes32\"}],\"name\":\"TransferInternalLedgerAT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040525b60008054600160a060020a03191633600160a060020a03161790555b5b61175c806100316000396000f300606060405236156101645763ffffffff60e060020a60003504166306fdde038114610169578063095ea7b3146101f457806318160ddd1461022a5780631c31f7101461024f578063208e8914146102705780632168c9881461029f57806323b872dd146102cc578063313ce567146103085780633f4ba83a1461033157806342966c68146103465780634bb278f31461035e5780635aab4ac8146103735780635c975abb146103fe5780635fe59b9d14610425578063661884631461047857806369ffa08a146104ae57806370a08231146104e757806379ba5097146105185780638456cb591461052d5780638da5cb5b146105425780638e339b661461057157806392eefe9b1461059b57806395d89b41146105bc5780639b50438714610647578063a6f9dae114610671578063a9059cbb14610692578063b3f05b97146106c8578063d73dd623146106ef578063dd62ed3e14610725578063f77c47911461075c575b600080fd5b341561017457600080fd5b61017c61078b565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101b95780820151818401525b6020016101a0565b50505050905090810190601f1680156101e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ff57600080fd5b610216600160a060020a03600435166024356107c2565b604051901515815260200160405180910390f35b341561023557600080fd5b61023d6108c0565b60405190815260200160405180910390f35b341561025a57600080fd5b61026e600160a060020a036004351661092a565b005b341561027b57600080fd5b610283610972565b604051600160a060020a03909116815260200160405180910390f35b34156102aa57600080fd5b610216600435602435610981565b604051901515815260200160405180910390f35b34156102d757600080fd5b610216600160a060020a0360043581169060243516604435610a19565b604051901515815260200160405180910390f35b341561031357600080fd5b61031b610b1f565b60405160ff909116815260200160405180910390f35b341561033c57600080fd5b61026e610b24565b005b341561035157600080fd5b61026e600435610b62565b005b341561036957600080fd5b61026e610c15565b005b341561037e57600080fd5b61017c610c69565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101b95780820151818401525b6020016101a0565b50505050905090810190601f1680156101e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561040957600080fd5b610216610d07565b604051901515815260200160405180910390f35b341561043057600080fd5b61026e60046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610d1795505050505050565b005b341561048357600080fd5b610216600160a060020a0360043516602435610de4565b604051901515815260200160405180910390f35b34156104b957600080fd5b610216600160a060020a0360043581169060243516610f62565b604051901515815260200160405180910390f35b34156104f257600080fd5b61023d600160a060020a036004351661106c565b60405190815260200160405180910390f35b341561052357600080fd5b61026e6110e9565b005b341561053857600080fd5b61026e611133565b005b341561054d57600080fd5b610283611177565b604051600160a060020a03909116815260200160405180910390f35b341561057c57600080fd5b61026e600160a060020a0360043581169060243516604435611186565b005b34156105a657600080fd5b61026e600160a060020a03600435166111da565b005b34156105c757600080fd5b61017c61124b565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101b95780820151818401525b6020016101a0565b50505050905090810190601f1680156101e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561065257600080fd5b61026e600160a060020a0360043581169060243516604435611282565b005b341561067c57600080fd5b61026e600160a060020a03600435166112d6565b005b341561069d57600080fd5b610216600160a060020a036004351660243561131e565b604051901515815260200160405180910390f35b34156106d357600080fd5b61021661141c565b604051901515815260200160405180910390f35b34156106fa57600080fd5b610216600160a060020a036004351660243561143d565b604051901515815260200160405180910390f35b341561073057600080fd5b61023d600160a060020a03600435811690602435166115bb565b60405190815260200160405180910390f35b341561076757600080fd5b610283611641565b604051600160a060020a03909116815260200160405180910390f35b60408051908101604052600881527f416972546f6b656e000000000000000000000000000000000000000000000000602082015281565b6000600260443610156107d157fe5b60015460a860020a900460ff16156107e857600080fd5b600254600160a060020a031663e1f21c6733868660006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561085457600080fd5b6102c65a03f1151561086557600080fd5b50505060405180519050156108b25783600160a060020a031633600160a060020a03166000805160206117118339815191528560405190815260200160405180910390a3600191506108b7565b600091505b5b5b5092915050565b600254600090600160a060020a03166318160ddd82604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561090a57600080fd5b6102c65a03f1151561091b57600080fd5b50505060405180519150505b90565b60005433600160a060020a0390811691161461094557600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b600454600160a060020a031681565b600454600090600160a060020a0316151561099b57600080fd5b6004546109b190600160a060020a03168461131e565b15610a0f5760045482908490600160a060020a03338116917f86908b3f3f9828632b7dca74c7eebc45084def3494635a3089c029a7e3be3f2b9116604051600160a060020a03909116815260200160405180910390a4506001610a13565b5060005b92915050565b600060036064361015610a2857fe5b60015460a860020a900460ff1615610a3f57600080fd5b600254600160a060020a03166315dacbea3387878760006040516020015260405160e060020a63ffffffff8716028152600160a060020a0394851660048201529284166024840152921660448201526064810191909152608401602060405180830381600087803b1515610ab257600080fd5b6102c65a03f11515610ac357600080fd5b5050506040518051905015610b105783600160a060020a031685600160a060020a03166000805160206116f18339815191528560405190815260200160405180910390a360019150610b15565b600091505b5b5b509392505050565b600881565b60005433600160a060020a03908116911614610b3f57600080fd5b6001805475ff000000000000000000000000000000000000000000191690555b5b565b60015460a860020a900460ff1615610b7957600080fd5b600254600160a060020a0316639dc29fac338360405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b1515610bcf57600080fd5b6102c65a03f11515610be057600080fd5b505050600033600160a060020a03166000805160206116f18339815191528360405190815260200160405180910390a35b5b50565b60005433600160a060020a03908116911614610c3057600080fd5b6001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790555b5b565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cff5780601f10610cd457610100808354040283529160200191610cff565b820191906000526020600020905b815481529060010190602001808311610ce257829003601f168201915b505050505081565b60015460a860020a900460ff1681565b60005433600160a060020a03908116911614610d3257600080fd5b6003818051610d45929160200190611650565b507f6e7666d68b6b7c619b2fe5a2c3dd0564bf3e02b0508b217d7a28ce5805583eab8160405160208082528190810183818151815260200191508051906020019080838360005b83811015610da55780820151818401525b602001610d8c565b50505050905090810190601f168015610dd25780820380516001836020036101000a031916815260200191505b509250505060405180910390a15b5b50565b60008060026044361015610df457fe5b60015460a860020a900460ff1615610e0b57600080fd5b600254600160a060020a031663f019c26733878760006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b1515610e7757600080fd5b6102c65a03f11515610e8857600080fd5b5050506040518051905015610f5357600254600160a060020a031663dd62ed3e338760006040516020015260405160e060020a63ffffffff8516028152600160a060020a03928316600482015291166024820152604401602060405180830381600087803b1515610ef857600080fd5b6102c65a03f11515610f0957600080fd5b50505060405180519050915084600160a060020a031633600160a060020a03166000805160206117118339815191528460405190815260200160405180910390a360019250610f58565b600092505b5b5b505092915050565b60008054819033600160a060020a03908116911614610f8057600080fd5b5082600160a060020a03811663a9059cbb84826370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610fe057600080fd5b6102c65a03f11515610ff157600080fd5b5050506040518051905060006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561104757600080fd5b6102c65a03f1151561105857600080fd5b50505060405180519250505b5b5092915050565b600254600090600160a060020a03166370a0823183836040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156110c757600080fd5b6102c65a03f115156110d857600080fd5b50505060405180519150505b919050565b60015433600160a060020a0390811691161415610b5f576001546000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555b5b565b60005433600160a060020a0390811691161461114e57600080fd5b6001805475ff000000000000000000000000000000000000000000191660a860020a1790555b5b565b600054600160a060020a031681565b60025433600160a060020a0390811691161461119e57fe5b81600160a060020a031683600160a060020a03166000805160206117118339815191528360405190815260200160405180910390a35b5b505050565b60005433600160a060020a039081169116146111f557600080fd5b60015474010000000000000000000000000000000000000000900460ff161561121d57600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b5b50565b60408051908101604052600381527f4149520000000000000000000000000000000000000000000000000000000000602082015281565b60025433600160a060020a0390811691161461129a57fe5b81600160a060020a031683600160a060020a03166000805160206116f18339815191528360405190815260200160405180910390a35b5b505050565b60005433600160a060020a039081169116146112f157600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b60006002604436101561132d57fe5b60015460a860020a900460ff161561134457600080fd5b600254600160a060020a031663beabacc833868660006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b15156113b057600080fd5b6102c65a03f115156113c157600080fd5b50505060405180519050156108b25783600160a060020a031633600160a060020a03166000805160206116f18339815191528560405190815260200160405180910390a3600191506108b7565b600091505b5b5b5092915050565b60015474010000000000000000000000000000000000000000900460ff1681565b6000806002604436101561144d57fe5b60015460a860020a900460ff161561146457600080fd5b600254600160a060020a031663bcdd612133878760006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b1515610e7757600080fd5b6102c65a03f11515610e8857600080fd5b5050506040518051905015610f5357600254600160a060020a031663dd62ed3e338760006040516020015260405160e060020a63ffffffff8516028152600160a060020a03928316600482015291166024820152604401602060405180830381600087803b1515610ef857600080fd5b6102c65a03f11515610f0957600080fd5b50505060405180519050915084600160a060020a031633600160a060020a03166000805160206117118339815191528460405190815260200160405180910390a360019250610f58565b600092505b5b5b505092915050565b600254600090600160a060020a031663dd62ed3e8484846040516020015260405160e060020a63ffffffff8516028152600160a060020a03928316600482015291166024820152604401602060405180830381600087803b151561161e57600080fd5b6102c65a03f1151561162f57600080fd5b50505060405180519150505b92915050565b600254600160a060020a031681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061169157805160ff19168380011785556116be565b828001600101855582156116be579182015b828111156116be5782518255916020019190600101906116a3565b5b506116cb9291506116cf565b5090565b61092791905b808211156116cb57600081556001016116d5565b5090565b905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820e818ad9a2a6fb409c2977e754612e416958ee850489676bea1b13c9d330dab130029"
}