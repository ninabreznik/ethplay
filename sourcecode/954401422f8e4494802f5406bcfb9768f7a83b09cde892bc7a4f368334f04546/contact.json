{
  "address": "0x51a4f65463597ca4609c9a90ea3d5ab219fbc85d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BitwingsToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-21\n*/\n\npragma solidity 0.4.25;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    /**\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n\n    uint256 totalSupply_;\n\n    /**\n    * @dev total number of tokens in existence\n    */\n    function totalSupply() public view returns (uint256) {\n        return totalSupply_;\n    }\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n\n        // SafeMath.sub will throw if there is not enough balance.\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public view returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n    /**\n     * @dev Transfer tokens from one address to another\n     * @param _from address The address which you want to send tokens from\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     *\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param _spender The address which will spend the funds.\n     * @param _value The amount of tokens to be spent.\n     */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param _owner address The address which owns the funds.\n     * @param _spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n     * approve should be called when allowed[_spender] == 0. To increment\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     */\n    function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n}\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    function safeTransfer(ERC20Basic token, address to, uint256 value) internal {\n        assert(token.transfer(to, value));\n    }\n\n    function safeTransferFrom(ERC20 token, address from, address to, uint256 value) internal {\n        assert(token.transferFrom(from, to, value));\n    }\n\n    function safeApprove(ERC20 token, address spender, uint256 value) internal {\n        assert(token.approve(spender, value));\n    }\n}\n\n/**\n * @title TokenTimelock\n * @dev TokenTimelock is a token holder contract that will allow a\n * beneficiary to extract the tokens after a given release time\n */\ncontract TokenTimelock {\n    using SafeERC20 for ERC20Basic;\n\n    // ERC20 basic token contract being held\n    ERC20Basic public token;\n\n    // beneficiary of tokens after they are released\n    address public beneficiary;\n\n    // timestamp when token release is enabled\n    uint64 public releaseTime;\n\n    constructor(ERC20Basic _token, address _beneficiary, uint64 _releaseTime) public {\n        require(_releaseTime > uint64(block.timestamp));\n        token = _token;\n        beneficiary = _beneficiary;\n        releaseTime = _releaseTime;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function release() public {\n        require(uint64(block.timestamp) >= releaseTime);\n\n        uint256 amount = token.balanceOf(this);\n        require(amount > 0);\n\n        token.safeTransfer(beneficiary, amount);\n    }\n}\n\ncontract Owned {\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n}\n\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract BurnableToken is StandardToken {\n\n    event Burn(address indexed burner, uint256 value);\n\n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param _value The amount of token to be burned.\n     */\n    function burn(uint256 _value) public {\n        require(_value > 0);\n        require(_value <= balances[msg.sender]);\n        // no need to require value <= totalSupply, since that would imply the\n        // sender's balance is greater than the totalSupply, which *should* be an assertion failure\n\n        address burner = msg.sender;\n        balances[burner] = balances[burner].sub(_value);\n        totalSupply_ = totalSupply_.sub(_value);\n        emit Burn(burner, _value);\n    }\n}\n\ncontract BitwingsToken is BurnableToken, Owned {\n    string public constant name = \"BITWINGS TOKEN\";\n    string public constant symbol = \"BWN\";\n    uint8 public constant decimals = 18;\n\n    /// Maximum tokens to be allocated (300 million BWN)\n    uint256 public constant HARD_CAP = 300000000 * 10**uint256(decimals);\n\n    /// This address will hold the Bitwings team and advisors tokens\n    address public teamAdvisorsTokensAddress;\n\n    /// This address is used to keep the tokens for sale\n    address public saleTokensAddress;\n\n    /// This address is used to keep the reserve tokens\n    address public reserveTokensAddress;\n\n    /// This address is used to keep the tokens for Gold founder, bounty and airdrop\n    address public bountyAirdropTokensAddress;\n\n    /// This address is used to keep the tokens for referrals\n    address public referralTokensAddress;\n\n    /// when the token sale is closed, the unsold tokens are allocated to the reserve\n    bool public saleClosed = false;\n\n    /// Some addresses are whitelisted in order to be able to distribute advisors tokens before the trading is open\n    mapping(address => bool) public whitelisted;\n\n    /// Only allowed to execute before the token sale is closed\n    modifier beforeSaleClosed {\n        require(!saleClosed);\n        _;\n    }\n\n    constructor(address _teamAdvisorsTokensAddress, address _reserveTokensAddress,\n                address _saleTokensAddress, address _bountyAirdropTokensAddress, address _referralTokensAddress) public {\n        require(_teamAdvisorsTokensAddress != address(0));\n        require(_reserveTokensAddress != address(0));\n        require(_saleTokensAddress != address(0));\n        require(_bountyAirdropTokensAddress != address(0));\n        require(_referralTokensAddress != address(0));\n\n        teamAdvisorsTokensAddress = _teamAdvisorsTokensAddress;\n        reserveTokensAddress = _reserveTokensAddress;\n        saleTokensAddress = _saleTokensAddress;\n        bountyAirdropTokensAddress = _bountyAirdropTokensAddress;\n        referralTokensAddress = _referralTokensAddress;\n\n        /// Maximum tokens to be allocated on the sale\n        /// 189 million BWN\n        uint256 saleTokens = 189000000 * 10**uint256(decimals);\n        totalSupply_ = saleTokens;\n        balances[saleTokensAddress] = saleTokens;\n        emit Transfer(address(0), saleTokensAddress, balances[saleTokensAddress]);\n\n        /// Team and advisors tokens - 15 million BWN\n        uint256 teamAdvisorsTokens = 15000000 * 10**uint256(decimals);\n        totalSupply_ = totalSupply_.add(teamAdvisorsTokens);\n        balances[teamAdvisorsTokensAddress] = teamAdvisorsTokens;\n        emit Transfer(address(0), teamAdvisorsTokensAddress, balances[teamAdvisorsTokensAddress]);\n\n        /// Reserve tokens - 60 million BWN\n        uint256 reserveTokens = 60000000 * 10**uint256(decimals);\n        totalSupply_ = totalSupply_.add(reserveTokens);\n        balances[reserveTokensAddress] = reserveTokens;\n        emit Transfer(address(0), reserveTokensAddress, balances[reserveTokensAddress]);\n\n        /// Gold founder, bounty and airdrop tokens - 31 million BWN\n        uint256 bountyAirdropTokens = 31000000 * 10**uint256(decimals);\n        totalSupply_ = totalSupply_.add(bountyAirdropTokens);\n        balances[bountyAirdropTokensAddress] = bountyAirdropTokens;\n        emit Transfer(address(0), bountyAirdropTokensAddress, balances[bountyAirdropTokensAddress]);\n\n        /// Referral tokens - 5 million BWN\n        uint256 referralTokens = 5000000 * 10**uint256(decimals);\n        totalSupply_ = totalSupply_.add(referralTokens);\n        balances[referralTokensAddress] = referralTokens;\n        emit Transfer(address(0), referralTokensAddress, balances[referralTokensAddress]);\n\n        whitelisted[saleTokensAddress] = true;\n        whitelisted[teamAdvisorsTokensAddress] = true;\n        whitelisted[bountyAirdropTokensAddress] = true;\n        whitelisted[referralTokensAddress] = true;\n\n        require(totalSupply_ == HARD_CAP);\n    }\n\n    /// @dev reallocates the unsold tokens\n    function closeSale() external onlyOwner beforeSaleClosed {\n        /// The unsold and unallocated bounty tokens are allocated to the reserve\n\n        uint256 unsoldTokens = balances[saleTokensAddress];\n        balances[reserveTokensAddress] = balances[reserveTokensAddress].add(unsoldTokens);\n        balances[saleTokensAddress] = 0;\n        emit Transfer(saleTokensAddress, reserveTokensAddress, unsoldTokens);\n\n        saleClosed = true;\n    }\n\n    /// @dev whitelist an address so it's able to transfer\n    /// before the trading is opened\n    function whitelist(address _address) external onlyOwner {\n        whitelisted[_address] = true;\n    }\n\n    /// @dev Trading limited\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        if(saleClosed) {\n            return super.transferFrom(_from, _to, _value);\n        }\n        return false;\n    }\n\n    /// @dev Trading limited\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        if(saleClosed || whitelisted[msg.sender]) {\n            return super.transfer(_to, _value);\n        }\n        return false;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HARD_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamAdvisorsTokensAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"referralTokensAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleTokensAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveTokensAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyAirdropTokensAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_teamAdvisorsTokensAddress\",\"type\":\"address\"},{\"name\":\"_reserveTokensAddress\",\"type\":\"address\"},{\"name\":\"_saleTokensAddress\",\"type\":\"address\"},{\"name\":\"_bountyAirdropTokensAddress\",\"type\":\"address\"},{\"name\":\"_referralTokensAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040526008805460a060020a60ff02191690553480156200002157600080fd5b5060405160a0806200110e8339810160409081528151602083015191830151606084015160809094015160038054600160a060020a0319163317905591939091600080808080600160a060020a038a1615156200007d57600080fd5b600160a060020a03891615156200009357600080fd5b600160a060020a0388161515620000a957600080fd5b600160a060020a0387161515620000bf57600080fd5b600160a060020a0386161515620000d557600080fd5b60048054600160a060020a0319908116600160a060020a038d8116919091179092556006805482168c84161790556005805482168b8416178082556007805484168c8616179055600880549093168a8516179092556a9c564e87ad4b6fdd000000600181905591831660009081526020818152604080832085905592549094168082528282205483519081529251939950939092600080516020620010ee8339815191529281900390910190a36001546a0c685fa11e01ec6f0000009450620001ad908564010000000062000c8a6200040282021704565b60015560048054600160a060020a039081166000908152602081815260408083208990559354909216808252838220548451908152935190939192600080516020620010ee833981519152928290030190a36001546a31a17e847807b1bc00000093506200022a908464010000000062000c8a6200040282021704565b60015560068054600160a060020a039081166000908152602081815260408083208890559354909216808252838220548451908152935190939192600080516020620010ee833981519152928290030190a36001546a19a4815e0ad0c67f0000009250620002a7908364010000000062000c8a6200040282021704565b60015560078054600160a060020a039081166000908152602081815260408083208790559354909216808252838220548451908152935190939192600080516020620010ee833981519152928290030190a3506001546a0422ca8b0a00a4250000009062000324908264010000000062000c8a6200040282021704565b60015560088054600160a060020a039081166000908152602081815260408083208690559354909216808252838220548451908152935190939192600080516020620010ee833981519152928290030190a3600554600160a060020a039081166000908152600960205260408082208054600160ff1991821681179092556004548516845282842080548216831790556007548516845282842080548216831790556008549094168352912080549092168117909155546af8277896582678ac00000014620003f257600080fd5b5050505050505050505062000419565b6000828201838110156200041257fe5b9392505050565b610cc580620004296000396000f3006080604052600436106101325763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610137578063095ea7b3146101c157806318160ddd146101f957806323b872dd14610220578063313ce5671461024a5780633a03171c1461027557806342966c681461028a57806366188463146102a457806370a08231146102c8578063876cc901146102e95780638da5cb5b1461031a5780638f4d874a1461032f57806395d89b41146103445780639b19251a14610359578063a9059cbb1461037a578063afa317441461039e578063b8c766b8146103b3578063c611ded7146103c8578063c805c8ad146103dd578063d73dd623146103f2578063d936547e14610416578063dd62ed3e14610437578063ee55efee1461045e575b600080fd5b34801561014357600080fd5b5061014c610473565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018657818101518382015260200161016e565b50505050905090810190601f1680156101b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101cd57600080fd5b506101e5600160a060020a03600435166024356104aa565b604080519115158252519081900360200190f35b34801561020557600080fd5b5061020e610511565b60408051918252519081900360200190f35b34801561022c57600080fd5b506101e5600160a060020a0360043581169060243516604435610517565b34801561025657600080fd5b5061025f610549565b6040805160ff9092168252519081900360200190f35b34801561028157600080fd5b5061020e61054e565b34801561029657600080fd5b506102a260043561055d565b005b3480156102b057600080fd5b506101e5600160a060020a036004351660243561061a565b3480156102d457600080fd5b5061020e600160a060020a036004351661070a565b3480156102f557600080fd5b506102fe610725565b60408051600160a060020a039092168252519081900360200190f35b34801561032657600080fd5b506102fe610734565b34801561033b57600080fd5b506102fe610743565b34801561035057600080fd5b5061014c610752565b34801561036557600080fd5b506102a2600160a060020a0360043516610789565b34801561038657600080fd5b506101e5600160a060020a03600435166024356107c4565b3480156103aa57600080fd5b506102fe61080d565b3480156103bf57600080fd5b506101e561081c565b3480156103d457600080fd5b506102fe61082c565b3480156103e957600080fd5b506102fe61083b565b3480156103fe57600080fd5b506101e5600160a060020a036004351660243561084a565b34801561042257600080fd5b506101e5600160a060020a03600435166108e3565b34801561044357600080fd5b5061020e600160a060020a03600435811690602435166108f8565b34801561046a57600080fd5b506102a2610923565b60408051808201909152600e81527f42495457494e475320544f4b454e000000000000000000000000000000000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b60015490565b60085460009060a060020a900460ff161561053e57610537848484610a20565b9050610542565b5060005b9392505050565b601281565b6af8277896582678ac00000081565b600080821161056b57600080fd5b3360009081526020819052604090205482111561058757600080fd5b50336000818152602081905260409020546105a8908363ffffffff610b9716565b600160a060020a0382166000908152602081905260409020556001546105d4908363ffffffff610b9716565b600155604080518381529051600160a060020a038316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25050565b336000908152600260209081526040808320600160a060020a03861684529091528120548083111561066f57336000908152600260209081526040808320600160a060020a03881684529091528120556106a4565b61067f818463ffffffff610b9716565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600454600160a060020a031681565b600354600160a060020a031681565b600854600160a060020a031681565b60408051808201909152600381527f42574e0000000000000000000000000000000000000000000000000000000000602082015281565b600354600160a060020a031633146107a057600080fd5b600160a060020a03166000908152600960205260409020805460ff19166001179055565b60085460009060a060020a900460ff16806107ee57503360009081526009602052604090205460ff165b15610804576107fd8383610ba9565b905061050b565b50600092915050565b600554600160a060020a031681565b60085460a060020a900460ff1681565b600654600160a060020a031681565b600754600160a060020a031681565b336000908152600260209081526040808320600160a060020a038616845290915281205461087e908363ffffffff610c8a16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60096020526000908152604090205460ff1681565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600090600160a060020a0316331461093d57600080fd5b60085460a060020a900460ff161561095457600080fd5b50600554600160a060020a0390811660009081526020819052604080822054600654909316825290205461098e908263ffffffff610c8a16565b60068054600160a060020a03908116600090815260208181526040808320959095556005805484168352858320929092559254905484518681529451918316949216927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928290030190a3506008805474ff0000000000000000000000000000000000000000191660a060020a179055565b6000600160a060020a0383161515610a3757600080fd5b600160a060020a038416600090815260208190526040902054821115610a5c57600080fd5b600160a060020a0384166000908152600260209081526040808320338452909152902054821115610a8c57600080fd5b600160a060020a038416600090815260208190526040902054610ab5908363ffffffff610b9716565b600160a060020a038086166000908152602081905260408082209390935590851681522054610aea908363ffffffff610c8a16565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610b2c908363ffffffff610b9716565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b600082821115610ba357fe5b50900390565b6000600160a060020a0383161515610bc057600080fd5b33600090815260208190526040902054821115610bdc57600080fd5b33600090815260208190526040902054610bfc908363ffffffff610b9716565b3360009081526020819052604080822092909255600160a060020a03851681522054610c2e908363ffffffff610c8a16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60008282018381101561054257fe00a165627a7a72305820c15bc338c1e81029284b84d1362f75185b1dbdad5a8943196faca495d2f065bf0029ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef000000000000000000000000b9b2d65d84426b60ddd91a81b5522e5f7b2ba89700000000000000000000000006802bc549ecf43ffcae25e0912f0ca316506f84000000000000000000000000f2f4ecbc2a23368629a43f4a01478719d5357a8c000000000000000000000000d2c0f6890ce98ed735c75d4272d336b2c8b3f026000000000000000000000000771ed666a2084e0a972ddaad16785fba5a3fce83",
  "constructorArguments": "000000000000000000000000b9b2d65d84426b60ddd91a81b5522e5f7b2ba89700000000000000000000000006802bc549ecf43ffcae25e0912f0ca316506f84000000000000000000000000f2f4ecbc2a23368629a43f4a01478719d5357a8c000000000000000000000000d2c0f6890ce98ed735c75d4272d336b2c8b3f026000000000000000000000000771ed666a2084e0a972ddaad16785fba5a3fce83"
}