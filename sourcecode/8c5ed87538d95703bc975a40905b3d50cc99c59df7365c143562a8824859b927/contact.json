{
  "address": "0xfe656fa04d222760a57d65d73331722f65a15a45",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CGCXMassLock",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-15\n*/\n\npragma solidity 0.4.25;\n\ncontract Ownable {\n  address private _owner;\n\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() internal {\n    _owner = msg.sender;\n    emit OwnershipTransferred(address(0), _owner);\n  }\n\n  /**\n   * @return the address of the owner.\n   */\n  function owner() public view returns(address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(isOwner());\n    _;\n  }\n\n  /**\n   * @return true if `msg.sender` is the owner of the contract.\n   */\n  function isOwner() public view returns(bool) {\n    return msg.sender == _owner;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract ERC20 {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n\nlibrary SafeERC20 {\n  function safeTransfer(ERC20 token, address to, uint256 value) internal {\n    require(token.transfer(to, value));\n  }\n\n  function safeTransferFrom(\n    ERC20 token,\n    address from,\n    address to,\n    uint256 value\n  )\n    internal\n  {\n    require(token.transferFrom(from, to, value));\n  }\n\n  function safeApprove(ERC20 token, address spender, uint256 value) internal {\n    require(token.approve(spender, value));\n  }\n}\n\n\n/**\n * @title TokenTimelock\n * @dev TokenTimelock is a token holder contract that will allow a\n * beneficiary to extract the tokens after a given release time\n */\ncontract CGCXMassLock is Ownable {\n  using SafeERC20 for ERC20;\n\n  // ERC20 basic token contract being held\n  ERC20 public token;\n\n  // beneficiery -> amounts\n  mapping (address => uint256) public lockups;\n\n  // timestamp when token release is enabled\n  uint256 public releaseTime;\n\n  constructor(\n    address _token\n  )\n    public\n  {\n    // solium-disable-next-line security/no-block-members\n    token = ERC20(_token);\n    releaseTime = 1546128000; // 30 Dec 2018\n  }\n\n  function release() public  {\n    releaseFrom(msg.sender);\n  }\n\n  function releaseFrom(address _beneficiary) public {\n    require(block.timestamp >= releaseTime);\n    uint256 amount = lockups[_beneficiary];\n    require(amount > 0);\n    token.safeTransfer(_beneficiary, amount);\n    lockups[_beneficiary] = 0;\n  }\n\n  function releaseFromMultiple(address[] _addresses) public {\n    for (uint256 i = 0; i < _addresses.length; i++) {\n      releaseFrom(_addresses[i]);\n    }\n  } \n\n  function submit(address[] _addresses, uint256[] _amounts) public onlyOwner {\n    for (uint256 i = 0; i < _addresses.length; i++) {\n      lockups[_addresses[i]] = _amounts[i];\n    }\n  }\n\n}",
  "bytecode": "608060405234801561001057600080fd5b506040516020806106b9833981016040819052905160008054600160a060020a03191633178082559192600160a060020a0392909216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360018054600160a060020a031916600160a060020a0392909216919091179055635c280a80600355610616806100a36000396000f3006080604052600436106100ae5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416636d0f31e381146100b3578063715018a61461014357806386d1a69f146101585780638da5cb5b1461016d5780638f32d59b1461019e578063b91d4001146101c7578063c2bf348a146101ee578063c7b6d4321461020f578063e847bf5614610230578063f2fde38b14610285578063fc0c546a146102a6575b600080fd5b3480156100bf57600080fd5b506040805160206004803580820135838102808601850190965280855261014195369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506102bb9650505050505050565b005b34801561014f57600080fd5b50610141610337565b34801561016457600080fd5b506101416103a1565b34801561017957600080fd5b506101826103ac565b60408051600160a060020a039092168252519081900360200190f35b3480156101aa57600080fd5b506101b36103bb565b604080519115158252519081900360200190f35b3480156101d357600080fd5b506101dc6103cc565b60408051918252519081900360200190f35b3480156101fa57600080fd5b50610141600160a060020a03600435166103d2565b34801561021b57600080fd5b506101dc600160a060020a0360043516610442565b34801561023c57600080fd5b5060408051602060048035808201358381028086018501909652808552610141953695939460249493850192918291850190849080828437509497506104549650505050505050565b34801561029157600080fd5b50610141600160a060020a036004351661048c565b3480156102b257600080fd5b506101826104ab565b60006102c56103bb565b15156102d057600080fd5b5060005b82518110156103325781818151811015156102eb57fe5b9060200190602002015160026000858481518110151561030757fe5b6020908102909101810151600160a060020a03168252810191909152604001600020556001016102d4565b505050565b61033f6103bb565b151561034a57600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6103aa336103d2565b565b600054600160a060020a031690565b600054600160a060020a0316331490565b60035481565b6003546000904210156103e457600080fd5b50600160a060020a03811660009081526002602052604081205490811161040a57600080fd5b60015461042790600160a060020a0316838363ffffffff6104ba16565b50600160a060020a0316600090815260026020526040812055565b60026020526000908152604090205481565b60005b815181101561048857610480828281518110151561047157fe5b906020019060200201516103d2565b600101610457565b5050565b6104946103bb565b151561049f57600080fd5b6104a88161056d565b50565b600154600160a060020a031681565b82600160a060020a031663a9059cbb83836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561053657600080fd5b505af115801561054a573d6000803e3d6000fd5b505050506040513d602081101561056057600080fd5b5051151561033257600080fd5b600160a060020a038116151561058257600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820b1e82a18dde2eca31e79756763317616dff9d1020cd30ffeaa316876accaa07000290000000000000000000000008b35368ccbadbfbf2d19e8d3d8e58e3ddb63853a",
  "constructorArguments": "0000000000000000000000008b35368ccbadbfbf2d19e8d3d8e58e3ddb63853a"
}