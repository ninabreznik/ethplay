{
  "address": "0x9744521e2e6a0d25f1f805318576230c5c8fc8a0",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Token",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-21\n*/\n\n// Unattributed material copyright New Alchemy Limited, 2017. All rights reserved.\npragma solidity >=0.4.10;\n\n// from Zeppelin\ncontract SafeMath {\n    function safeMul(uint a, uint b) internal returns (uint) {\n        uint c = a * b;\n        require(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeSub(uint a, uint b) internal returns (uint) {\n        require(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint a, uint b) internal returns (uint) {\n        uint c = a + b;\n        require(c>=a && c>=b);\n        return c;\n    }\n}\n// end from Zeppelin\n\ncontract Owned {\n\taddress public owner;\n\taddress newOwner;\n\n\tfunction Owned() {\n\t\towner = msg.sender;\n\t}\n\n\tmodifier onlyOwner() {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n\n\tfunction changeOwner(address _newOwner) onlyOwner {\n\t\tnewOwner = _newOwner;\n\t}\n\n\tfunction acceptOwnership() {\n\t\tif (msg.sender == newOwner) {\n\t\t\towner = newOwner;\n\t\t}\n\t}\n}\n\ncontract Pausable is Owned {\n\tbool public paused;\n\n\tfunction pause() onlyOwner {\n\t\tpaused = true;\n\t}\n\n\tfunction unpause() onlyOwner {\n\t\tpaused = false;\n\t}\n\n\tmodifier notPaused() {\n\t\trequire(!paused);\n\t\t_;\n\t}\n}\n\ncontract Finalizable is Owned {\n\tbool public finalized;\n\n\tfunction finalize() onlyOwner {\n\t\tfinalized = true;\n\t}\n\n\tmodifier notFinalized() {\n\t\trequire(!finalized);\n\t\t_;\n\t}\n}\n\ncontract IToken {\n\tfunction transfer(address _to, uint _value) returns (bool);\n\tfunction balanceOf(address owner) returns(uint);\n}\n\ncontract TokenReceivable is Owned {\n\tfunction claimTokens(address _token, address _to) onlyOwner returns (bool) {\n\t\tIToken token = IToken(_token);\n\t\treturn token.transfer(_to, token.balanceOf(this));\n\t}\n}\n\ncontract EventDefinitions {\n\tevent Transfer(address indexed from, address indexed to, uint value);\n\tevent Approval(address indexed owner, address indexed spender, uint value);\n}\n\ncontract Token is Finalizable, TokenReceivable, SafeMath, EventDefinitions, Pausable {\n\tstring constant public name = \"Rights Token\";\n\tuint8 constant public decimals = 8;\n\tstring constant public symbol = \"RTK\";\n\tController public controller;\n\tstring public motd;\n\tevent Motd(string message);\n\n\t// functions below this line are onlyOwner\n\n\tfunction setMotd(string _m) onlyOwner {\n\t\tmotd = _m;\n\t\tMotd(_m);\n\t}\n\n\tfunction setController(address _c) onlyOwner notFinalized {\n\t\tcontroller = Controller(_c);\n\t}\n\n\t// functions below this line are public\n\n\tfunction balanceOf(address a) constant returns (uint) {\n\t\treturn controller.balanceOf(a);\n\t}\n\n\tfunction totalSupply() constant returns (uint) {\n\t\treturn controller.totalSupply();\n\t}\n\n\tfunction allowance(address _owner, address _spender) constant returns (uint) {\n\t\treturn controller.allowance(_owner, _spender);\n\t}\n\n\tfunction transfer(address _to, uint _value) onlyPayloadSize(2) notPaused returns (bool success) {\n\t\tif (controller.transfer(msg.sender, _to, _value)) {\n\t\t\tTransfer(msg.sender, _to, _value);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3) notPaused returns (bool success) {\n\t\tif (controller.transferFrom(msg.sender, _from, _to, _value)) {\n\t\t\tTransfer(_from, _to, _value);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction approve(address _spender, uint _value) onlyPayloadSize(2) notPaused returns (bool success) {\n\t\t// promote safe user behavior\n\t\tif (controller.approve(msg.sender, _spender, _value)) {\n\t\t\tApproval(msg.sender, _spender, _value);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction increaseApproval (address _spender, uint _addedValue) onlyPayloadSize(2) notPaused returns (bool success) {\n\t\tif (controller.increaseApproval(msg.sender, _spender, _addedValue)) {\n\t\t\tuint newval = controller.allowance(msg.sender, _spender);\n\t\t\tApproval(msg.sender, _spender, newval);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction decreaseApproval (address _spender, uint _subtractedValue) onlyPayloadSize(2) notPaused returns (bool success) {\n\t\tif (controller.decreaseApproval(msg.sender, _spender, _subtractedValue)) {\n\t\t\tuint newval = controller.allowance(msg.sender, _spender);\n\t\t\tApproval(msg.sender, _spender, newval);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tmodifier onlyPayloadSize(uint numwords) {\n\t\tassert(msg.data.length >= numwords * 32 + 4);\n\t\t_;\n\t}\n\n\tfunction burn(uint _amount) notPaused {\n\t\tcontroller.burn(msg.sender, _amount);\n\t\tTransfer(msg.sender, 0x0, _amount);\n\t}\n\n\t// functions below this line are onlyController\n\n\tmodifier onlyController() {\n\t\tassert(msg.sender == address(controller));\n\t\t_;\n\t}\n\n\tfunction controllerTransfer(address _from, address _to, uint _value) onlyController {\n\t\tTransfer(_from, _to, _value);\n\t}\n\n\tfunction controllerApprove(address _owner, address _spender, uint _value) onlyController {\n\t\tApproval(_owner, _spender, _value);\n\t}\n}\n\ncontract Controller is Owned, Finalizable {\n\tLedger public ledger;\n\tToken public token;\n\n\tfunction Controller() {\n\t}\n\n\t// functions below this line are onlyOwner\n\n\tfunction setToken(address _token) onlyOwner {\n\t\ttoken = Token(_token);\n\t}\n\n\tfunction setLedger(address _ledger) onlyOwner {\n\t\tledger = Ledger(_ledger);\n\t}\n\n\tmodifier onlyToken() {\n\t\trequire(msg.sender == address(token));\n\t\t_;\n\t}\n\n\tmodifier onlyLedger() {\n\t\trequire(msg.sender == address(ledger));\n\t\t_;\n\t}\n\n\t// public functions\n\n\tfunction totalSupply() constant returns (uint) {\n\t\treturn ledger.totalSupply();\n\t}\n\n\tfunction balanceOf(address _a) constant returns (uint) {\n\t\treturn ledger.balanceOf(_a);\n\t}\n\n\tfunction allowance(address _owner, address _spender) constant returns (uint) {\n\t\treturn ledger.allowance(_owner, _spender);\n\t}\n\n\t// functions below this line are onlyLedger\n\n\tfunction ledgerTransfer(address from, address to, uint val) onlyLedger {\n\t\ttoken.controllerTransfer(from, to, val);\n\t}\n\n\t// functions below this line are onlyToken\n\n\tfunction transfer(address _from, address _to, uint _value) onlyToken returns (bool success) {\n\t\treturn ledger.transfer(_from, _to, _value);\n\t}\n\n\tfunction transferFrom(address _spender, address _from, address _to, uint _value) onlyToken returns (bool success) {\n\t\treturn ledger.transferFrom(_spender, _from, _to, _value);\n\t}\n\n\tfunction approve(address _owner, address _spender, uint _value) onlyToken returns (bool success) {\n\t\treturn ledger.approve(_owner, _spender, _value);\n\t}\n\n\tfunction increaseApproval (address _owner, address _spender, uint _addedValue) onlyToken returns (bool success) {\n\t\treturn ledger.increaseApproval(_owner, _spender, _addedValue);\n\t}\n\n\tfunction decreaseApproval (address _owner, address _spender, uint _subtractedValue) onlyToken returns (bool success) {\n\t\treturn ledger.decreaseApproval(_owner, _spender, _subtractedValue);\n\t}\n\n\tfunction burn(address _owner, uint _amount) onlyToken {\n\t\tledger.burn(_owner, _amount);\n\t}\n}\n\ncontract Ledger is Owned, SafeMath, Finalizable, TokenReceivable {\n\tController public controller;\n\tmapping(address => uint) public balanceOf;\n\tmapping (address => mapping (address => uint)) public allowance;\n\tuint public totalSupply;\n\tuint public mintingNonce;\n\tbool public mintingStopped;\n\n\t// functions below this line are onlyOwner\n\n\tfunction Ledger() {\n\t}\n\n\tfunction setController(address _controller) onlyOwner notFinalized {\n\t\tcontroller = Controller(_controller);\n\t}\n\n\tfunction stopMinting() onlyOwner {\n\t\tmintingStopped = true;\n\t}\n\n\tfunction multiMint(uint nonce, uint256[] bits) external onlyOwner {\n\t\trequire(!mintingStopped);\n\t\tif (nonce != mintingNonce) return;\n\t\tmintingNonce += 1;\n\t\tuint256 lomask = (1 << 96) - 1;\n\t\tuint created = 0;\n\t\tfor (uint i=0; i<bits.length; i++) {\n\t\t\taddress a = address(bits[i]>>96);\n\t\t\tuint value = bits[i]&lomask;\n\t\t\tbalanceOf[a] = balanceOf[a] + value;\n\t\t\tcontroller.ledgerTransfer(0, a, value);\n\t\t\tcreated += value;\n\t\t}\n\t\ttotalSupply += created;\n\t}\n\n\t// functions below this line are onlyController\n\n\tmodifier onlyController() {\n\t\trequire(msg.sender == address(controller));\n\t\t_;\n\t}\n\n\tfunction transfer(address _from, address _to, uint _value) onlyController returns (bool success) {\n\t\tif (balanceOf[_from] < _value) return false;\n\n\t\tbalanceOf[_from] = safeSub(balanceOf[_from], _value);\n\t\tbalanceOf[_to] = safeAdd(balanceOf[_to], _value);\n\t\treturn true;\n\t}\n\n\tfunction transferFrom(address _spender, address _from, address _to, uint _value) onlyController returns (bool success) {\n\t\tif (balanceOf[_from] < _value) return false;\n\n\t\tvar allowed = allowance[_from][_spender];\n\t\tif (allowed < _value) return false;\n\n\t\tbalanceOf[_to] = safeAdd(balanceOf[_to], _value);\n\t\tbalanceOf[_from] = safeSub(balanceOf[_from], _value);\n\t\tallowance[_from][_spender] = safeSub(allowed, _value);\n\t\treturn true;\n\t}\n\n\tfunction approve(address _owner, address _spender, uint _value) onlyController returns (bool success) {\n\t\t// require user to set to zero before resetting to nonzero\n\t\tif ((_value != 0) && (allowance[_owner][_spender] != 0)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tallowance[_owner][_spender] = _value;\n\t\treturn true;\n\t}\n\n\tfunction increaseApproval (address _owner, address _spender, uint _addedValue) onlyController returns (bool success) {\n\t\tuint oldValue = allowance[_owner][_spender];\n\t\tallowance[_owner][_spender] = safeAdd(oldValue, _addedValue);\n\t\treturn true;\n\t}\n\n\tfunction decreaseApproval (address _owner, address _spender, uint _subtractedValue) onlyController returns (bool success) {\n\t\tuint oldValue = allowance[_owner][_spender];\n\t\tif (_subtractedValue > oldValue) {\n\t\t\tallowance[_owner][_spender] = 0;\n\t\t} else {\n\t\t\tallowance[_owner][_spender] = safeSub(oldValue, _subtractedValue);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction burn(address _owner, uint _amount) onlyController {\n\t\tbalanceOf[_owner] = safeSub(balanceOf[_owner], _amount);\n\t\ttotalSupply = safeSub(totalSupply, _amount);\n\t}\n}",
  "bytecode": ""
}