{
  "address": "0x635c36d72dcd6fbe72f84dff2f2d1b3d8bef47d2",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Trickle",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-21\n*/\n\npragma solidity 0.5.7;\n\n/**\n * @title SafeMath\n * @dev Unsigned math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n    /**\n     * @dev Multiplies two unsigned integers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Adds two unsigned integers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    /**\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://eips.ethereum.org/EIPS/eip-20\n */\ninterface IERC20 {\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address who) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract Trickle {\n    \n    using SafeMath for uint256;\n    \n    event AgreementCreated(uint256 indexed agreementId, address token, address indexed recipient, address indexed sender, uint256 start, uint256 duration, uint256 totalAmount, uint256 createdAt);\n    event AgreementCancelled(uint256 indexed agreementId, address token, address indexed recipient, address indexed sender, uint256 start, uint256 amountReleased, uint256 amountCancelled, uint256 endedAt);\n    event Withdraw(uint256 indexed agreementId, address token, address indexed recipient, address indexed sender, uint256 amountReleased, uint256 releasedAt);\n    \n    uint256 private lastAgreementId;\n    \n    struct Agreement {\n        IERC20 token;\n        address recipient;\n        address sender;\n        uint256 start;\n        uint256 duration;\n        uint256 totalAmount;\n        uint256 releasedAmount;\n        bool cancelled;\n    }\n    \n    mapping (uint256 => Agreement) private agreements;\n    \n    modifier senderOnly(uint256 agreementId) {\n        require (msg.sender == agreements[agreementId].sender);\n        _;\n    }\n    \n    function createAgreement(IERC20 token, address recipient, uint256 totalAmount, uint256 duration, uint256 start) external {\n        require(duration > 0);\n        require(totalAmount > 0);\n        require(start > 0);\n        require(token != IERC20(0x0));\n        require(recipient != address(0x0));\n        \n        uint256 agreementId = ++lastAgreementId;\n        \n        agreements[agreementId] = Agreement({\n            token: token,\n            recipient: recipient,\n            start: start,\n            duration: duration,\n            totalAmount: totalAmount,\n            sender: msg.sender,\n            releasedAmount: 0,\n            cancelled: false\n        });\n        \n        token.transferFrom(agreements[agreementId].sender, address(this), agreements[agreementId].totalAmount);\n        \n        Agreement memory record = agreements[agreementId];\n        emit AgreementCreated(\n            agreementId,\n            address(record.token),\n            record.recipient,\n            record.sender,\n            record.start,\n            record.duration,\n            record.totalAmount,\n            block.timestamp\n        );\n    }\n    \n    function getAgreement(uint256 agreementId) external view returns (\n        IERC20 token, \n        address recipient, \n        address sender, \n        uint256 start, \n        uint256 duration,\n        uint256 totalAmount,\n        uint256 releasedAmount,\n        bool cancelled\n    ) {\n        Agreement memory record = agreements[agreementId];\n        \n        return (record.token, record.recipient, record.sender, record.start, record.duration, record.totalAmount, record.releasedAmount, record.cancelled);\n    }\n    \n    function withdrawTokens(uint256 agreementId) public {\n        require(agreementId <= lastAgreementId && agreementId != 0, \"Invalid agreement specified\");\n\n        Agreement storage record = agreements[agreementId];\n        \n        require(!record.cancelled);\n\n        uint256 unreleased = withdrawAmount(agreementId);\n        require(unreleased > 0);\n\n        record.releasedAmount = record.releasedAmount.add(unreleased);\n        record.token.transfer(record.recipient, unreleased);\n        \n        emit Withdraw(\n            agreementId,\n            address(record.token),\n            record.recipient,\n            record.sender,\n            unreleased,\n            block.timestamp\n        );\n    }\n    \n    function cancelAgreement(uint256 agreementId) senderOnly(agreementId) external {\n        Agreement storage record = agreements[agreementId];\n\n        require(!record.cancelled);\n\n        if (withdrawAmount(agreementId) > 0) {\n            withdrawTokens(agreementId);\n        }\n        \n        uint256 releasedAmount = record.releasedAmount;\n        uint256 cancelledAmount = record.totalAmount.sub(releasedAmount); \n        \n        record.token.transfer(record.sender, cancelledAmount);\n        record.cancelled = true;\n        \n        emit AgreementCancelled(\n            agreementId,\n            address(record.token),\n            record.recipient,\n            record.sender,\n            record.start,\n            releasedAmount,\n            cancelledAmount,\n            block.timestamp\n        );\n    }\n    \n    function withdrawAmount (uint256 agreementId) private view returns (uint256) {\n        return availableAmount(agreementId).sub(agreements[agreementId].releasedAmount);\n    }\n    \n    function availableAmount(uint256 agreementId) private view returns (uint256) {\n        if (block.timestamp >= agreements[agreementId].start.add(agreements[agreementId].duration)) {\n            return agreements[agreementId].totalAmount;\n        } else if (block.timestamp <= agreements[agreementId].start) {\n            return 0;\n        } else {\n            return agreements[agreementId].totalAmount.mul(\n                block.timestamp.sub(agreements[agreementId].start)\n            ).div(agreements[agreementId].duration);\n        }\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b506109bd806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063315a095d146100515780634f9f6fe6146100705780635686b54b146100dd5780639aebccc8146100fa575b600080fd5b61006e6004803603602081101561006757600080fd5b503561013c565b005b61008d6004803603602081101561008657600080fd5b50356102e4565b604080516001600160a01b03998a168152978916602089015295909716868601526060860193909352608085019190915260a084015260c083015291151560e08201529051908190036101000190f35b61006e600480360360208110156100f357600080fd5b5035610395565b61006e600480360360a081101561011057600080fd5b506001600160a01b0381358116916020810135909116906040810135906060810135906080013561052b565b600054811115801561014d57508015155b6101a15760408051600160e51b62461bcd02815260206004820152601b60248201527f496e76616c69642061677265656d656e74207370656369666965640000000000604482015290519081900360640190fd5b6000818152600160205260409020600781015460ff16156101c157600080fd5b60006101cc836107b9565b9050600081116101db57600080fd5b60068201546101f0908263ffffffff6107ec16565b60068301558154600183015460408051600160e01b63a9059cbb0281526001600160a01b039283166004820152602481018590529051919092169163a9059cbb9160448083019260209291908290030181600087803b15801561025257600080fd5b505af1158015610266573d6000803e3d6000fd5b505050506040513d602081101561027c57600080fd5b5050600282015460018301548354604080516001600160a01b039283168152602081018690524281830152905193821693929091169186917fae7c0fdf04394e630f0f88db0daac3232a0f060314499da12bfabe13dc9988ae919081900360600190a4505050565b6000806000806000806000806102f861092f565b505050600096875250506001602081815260409687902087516101008101895281546001600160a01b03908116808352948301548116938201849052600283015416988101899052600382015460608201819052600483015460808301819052600584015460a08401819052600685015460c0850181905260079095015460ff16151560e0909401849052959b949a995090975095509293509190565b60008181526001602052604090206002015481906001600160a01b031633146103bd57600080fd5b6000828152600160205260409020600781015460ff16156103dd57600080fd5b60006103e8846107b9565b11156103f7576103f78361013c565b60068101546005820154600090610414908363ffffffff61080716565b8354600285015460408051600160e01b63a9059cbb0281526001600160a01b03928316600482015260248101859052905193945091169163a9059cbb916044808201926020929091908290030181600087803b15801561047357600080fd5b505af1158015610487573d6000803e3d6000fd5b505050506040513d602081101561049d57600080fd5b505060078301805460ff1916600190811790915560028401549084015484546003860154604080516001600160a01b0393841681526020810192909252818101879052606082018690524260808301525193821693929091169188917f4975aea2b6ac27f280533501bfa107e167e78cf177cb8e5b204a5b8002ff007c919081900360a00190a45050505050565b6000821161053857600080fd5b6000831161054557600080fd5b6000811161055257600080fd5b6001600160a01b03851661056557600080fd5b6001600160a01b03841661057857600080fd5b60008054600190810180835560408051610100810182526001600160a01b038a81168083528a8216602080850191825233858701908152606086018b8152608087018d815260a088018f815260c089018d815260e08a018e81528c8f528d87528b8f209a518b546001600160a01b0319908116918c16919091178c5597519d8b01805489169e8b169e909e17909d55935160028a018054909716908916179586905591516003890155516004808901919091559051600588018190559151600688015598516007909601805460ff1916961515969096179095558551600160e01b6323b872dd028152919093169681019690965230602487015260448601929092529151929490936323b872dd936064808301949391928390030190829087803b1580156106a557600080fd5b505af11580156106b9573d6000803e3d6000fd5b505050506040513d60208110156106cf57600080fd5b506106da905061092f565b5060008181526001602081815260409283902083516101008101855281546001600160a01b0390811680835294830154811682850181905260028401549091168287018190526003840154606080850182905260048601546080808701829052600588015460a080890182905260068a015460c08a015260079099015460ff16151560e08901528b519a8b52988a0193909352888a0152870195909552429486019490945294519094929386927f947d2dc71b029f433aa0383a0ef9364b5a9ac4569897d6f8f7489a89b394e99092918290030190a450505050505050565b6000818152600160205260408120600601546107e4906107d88461081c565b9063ffffffff61080716565b90505b919050565b6000828201838110156107fe57600080fd5b90505b92915050565b60008282111561081657600080fd5b50900390565b600081815260016020526040812060048101546003909101546108449163ffffffff6107ec16565b421061086257506000818152600160205260409020600501546107e7565b6000828152600160205260409020600301544211610882575060006107e7565b600082815260016020526040902060048101546003909101546108df91906108d3906108b590429063ffffffff61080716565b6000868152600160205260409020600501549063ffffffff6108e616565b9063ffffffff61090d16565b90506107e7565b6000826108f557506000610801565b8282028284828161090257fe5b04146107fe57600080fd5b600080821161091b57600080fd5b600082848161092657fe5b04949350505050565b60405180610100016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600015158152509056fea165627a7a7230582007e7e041252592badc8582fecb149aa2f821e734636b23f3e8646dd158a835890029"
}