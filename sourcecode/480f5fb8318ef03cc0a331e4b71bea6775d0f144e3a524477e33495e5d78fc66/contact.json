{
  "address": "0x0ecf0851b2cb945ddbee413c0e23f0c01cd4df7d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ARTIDToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-21\n*/\n\n//File: node_modules\\openzeppelin-solidity\\contracts\\token\\ERC20\\IERC20.sol\npragma solidity ^0.4.24;\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ninterface IERC20 {\n  function totalSupply() external view returns (uint256);\n\n  function balanceOf(address who) external view returns (uint256);\n\n  function allowance(address owner, address spender)\n    external view returns (uint256);\n\n  function transfer(address to, uint256 value) external returns (bool);\n\n  function approve(address spender, uint256 value)\n    external returns (bool);\n\n  function transferFrom(address from, address to, uint256 value)\n    external returns (bool);\n\n  event Transfer(\n    address indexed from,\n    address indexed to,\n    uint256 value\n  );\n\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n//File: node_modules\\openzeppelin-solidity\\contracts\\math\\SafeMath.sol\npragma solidity ^0.4.24;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, reverts on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b);\n\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b > 0); // Solidity only automatically asserts when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n  * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n  * @dev Adds two numbers, reverts on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a);\n\n    return c;\n  }\n\n  /**\n  * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\n  * reverts when dividing by zero.\n  */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0);\n    return a % b;\n  }\n}\n\n//File: node_modules\\openzeppelin-solidity\\contracts\\token\\ERC20\\ERC20.sol\npragma solidity ^0.4.24;\n\n\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n * Originally based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract ERC20 is IERC20 {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowed;\n\n  uint256 private _totalSupply;\n\n  /**\n  * @dev Total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param owner The address to query the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address owner) public view returns (uint256) {\n    return _balances[owner];\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param owner address The address which owns the funds.\n   * @param spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(\n    address owner,\n    address spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return _allowed[owner][spender];\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param to The address to transfer to.\n  * @param value The amount to be transferred.\n  */\n  function transfer(address to, uint256 value) public returns (bool) {\n    _transfer(msg.sender, to, value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param spender The address which will spend the funds.\n   * @param value The amount of tokens to be spent.\n   */\n  function approve(address spender, uint256 value) public returns (bool) {\n    require(spender != address(0));\n\n    _allowed[msg.sender][spender] = value;\n    emit Approval(msg.sender, spender, value);\n    return true;\n  }\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param from address The address which you want to send tokens from\n   * @param to address The address which you want to transfer to\n   * @param value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  )\n    public\n    returns (bool)\n  {\n    require(value <= _allowed[from][msg.sender]);\n\n    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n    _transfer(from, to, value);\n    return true;\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed_[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param spender The address which will spend the funds.\n   * @param addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseAllowance(\n    address spender,\n    uint256 addedValue\n  )\n    public\n    returns (bool)\n  {\n    require(spender != address(0));\n\n    _allowed[msg.sender][spender] = (\n      _allowed[msg.sender][spender].add(addedValue));\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed_[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param spender The address which will spend the funds.\n   * @param subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseAllowance(\n    address spender,\n    uint256 subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    require(spender != address(0));\n\n    _allowed[msg.sender][spender] = (\n      _allowed[msg.sender][spender].sub(subtractedValue));\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n    return true;\n  }\n\n  /**\n  * @dev Transfer token for a specified addresses\n  * @param from The address to transfer from.\n  * @param to The address to transfer to.\n  * @param value The amount to be transferred.\n  */\n  function _transfer(address from, address to, uint256 value) internal {\n    require(value <= _balances[from]);\n    require(to != address(0));\n\n    _balances[from] = _balances[from].sub(value);\n    _balances[to] = _balances[to].add(value);\n    emit Transfer(from, to, value);\n  }\n\n  /**\n   * @dev Internal function that mints an amount of the token and assigns it to\n   * an account. This encapsulates the modification of balances such that the\n   * proper events are emitted.\n   * @param account The account that will receive the created tokens.\n   * @param value The amount that will be created.\n   */\n  function _mint(address account, uint256 value) internal {\n    require(account != 0);\n    _totalSupply = _totalSupply.add(value);\n    _balances[account] = _balances[account].add(value);\n    emit Transfer(address(0), account, value);\n  }\n\n  /**\n   * @dev Internal function that burns an amount of the token of a given\n   * account.\n   * @param account The account whose tokens will be burnt.\n   * @param value The amount that will be burnt.\n   */\n  function _burn(address account, uint256 value) internal {\n    require(account != 0);\n    require(value <= _balances[account]);\n\n    _totalSupply = _totalSupply.sub(value);\n    _balances[account] = _balances[account].sub(value);\n    emit Transfer(account, address(0), value);\n  }\n\n  /**\n   * @dev Internal function that burns an amount of the token of a given\n   * account, deducting from the sender's allowance for said account. Uses the\n   * internal burn function.\n   * @param account The account whose tokens will be burnt.\n   * @param value The amount that will be burnt.\n   */\n  function _burnFrom(address account, uint256 value) internal {\n    require(value <= _allowed[account][msg.sender]);\n\n    // Should https://github.com/OpenZeppelin/zeppelin-solidity/issues/707 be accepted,\n    // this function needs to emit an event with the updated approval.\n    _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(\n      value);\n    _burn(account, value);\n  }\n}\n\n//File: node_modules\\openzeppelin-solidity\\contracts\\ownership\\Ownable.sol\npragma solidity ^0.4.24;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address private _owner;\n\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() internal {\n    _owner = msg.sender;\n    emit OwnershipTransferred(address(0), _owner);\n  }\n\n  /**\n   * @return the address of the owner.\n   */\n  function owner() public view returns(address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(isOwner());\n    _;\n  }\n\n  /**\n   * @return true if `msg.sender` is the owner of the contract.\n   */\n  function isOwner() public view returns(bool) {\n    return msg.sender == _owner;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\n//File: contracts\\ARTIDToken.sol\n/**\n * @title ARTIDToken token\n *\n * @version 1.0\n * @author ARTID\n */\npragma solidity ^0.4.24;\n\n\n\n\n\n\ncontract ARTIDToken is ERC20 {\n    using SafeMath for uint256;\n    \n    string public constant name = \"ARTIDToken\";\n    string public constant symbol = \"ARTID\";\n    uint8 public constant decimals = 18;\n    //uint256 public constant TOTAL_SUPPLY = 120e6 * 1e18;\n\n     /**\n     * @dev Constructor of ARTIDToken \n     */\n    constructor() public {\n        _initialMint();\n        //do _mint for unit testing\n        //_mint(msg.sender, TOTAL_SUPPLY);\n    }\n\n    function _initialMint() private{\n        //1\n        _mint(address(0x7003d8df7b38f4c758975fd4800574fecc0da7cd), 12e6 * 1e18);\n        //2\n        _mint(address(0xdfdaa3b74fcc65b9e90d5922a74f8140a2b67d0f), 12e6 * 1e18);\n        //3\n        _mint(address(0x0141f8d84f25739e426fd19783a1ec3a1f5a35e0), 12e6 * 1e18);\n        //4\n        _mint(address(0x8863f676474c65e9b85dc2b7fee16188503ae790), 12e6 * 1e18);\n        //5\n        _mint(address(0xabf2e86c69648e9ed6cd284f4f82df3f9df7a3dd), 12e6 * 1e18);\n        //6\n        _mint(address(0x66348c99019d6c21fe7c4f954fd5a5cb0b41aa2c), 12e6 * 1e18);\n        //7\n         _mint(address(0x3257b7ebb5e52c67cdd0c1112b28db362b7463cd), 12e6 * 1e18);\n        //8\n         _mint(address(0x0c26122396a4bd59d855f19b69dadba3b19ba4d7), 12e6 * 1e18);\n        //9\n         _mint(address(0x5b38e7b2c9ac03fa53e96220dcd299e3b47e1624), 12e6 * 1e18);\n        //10\n         _mint(address(0x5593105770cd53802c067734d7e321e22e08c9a4), 3949480 * 1e18);\n        //11\n         _mint(address(0xa8cdeef81970f44444eeb2c87c7eb2eb9a097a34), 3022807 * 1e18);\n        //12\n         _mint(address(0x0b9e4d7d67552a3a044cbdc024188eaa057b72bc), 2400100 * 1e18);\n        //13\n         _mint(address(0x7631029bd3f117b1a746506a04af966a5ede1b46), 2400000 * 1e18);\n        //14\n         _mint(address(0x1ba5d47dcb2dc5d0afa86be3b7f5e2c421525b75), 109391 * 1e18);\n        //15\n         _mint(address(0xb847988c1ea802842ff89466c8a35d5d052840bb), 100000 * 1e18);\n        //16\n         _mint(address(0xcd807ad1b19f9a5a9fc1af1b1da448696d041504), 8363 * 1e18);\n        //17\n         _mint(address(0x3ed4ac1eced4bd01c51a2317609120a16b85e19e), 8248 * 1e18);\n        //18\n         _mint(address(0xfc886ff0fb687826e5a2572f366e38a6e81ea249), 364 * 1e18);\n        //19\n         _mint(address(0xc6a1c5c60ecf4d6bf8b340f207505272fa281ede), 201 * 1e18);\n        //20\n         _mint(address(0xa8cb97cbd42acca81eb3680d9b94ace459b502a2), 182 * 1e18);\n        //21\n         _mint(address(0xf22e45982ed32849ee8fe2a342534f2a53b93695), 120 * 1e18);\n        //22\n         _mint(address(0xe9d520f036d16a48636bf16371dcce0819cf6229), 100 * 1e18);\n        //23\n         _mint(address(0x84d6339aa4900310aa9780ec66db57c88d2cd734), 100 * 1e18);\n        //24\n         _mint(address(0x2c049093f263669a432dac59dac31d3c2b9c1996), 100 * 1e18);\n        //25\n         _mint(address(0x23345fd753519795b9d7238690ababbb0469eb3e), 100 * 1e18);\n        //26\n         _mint(address(0x421926ee0cb7941058387fc1a85532e7a94aa3c1), 100 * 1e18);\n        //27\n         _mint(address(0x82389b139658378cdec2c1ed600aa4717ca59fad), 100 * 1e18);\n        //28\n         _mint(address(0x93bb098498d538749a1d00f564555430a06bffbe), 44 * 1e18);\n        //29\n         _mint(address(0xe619413a56bfcafbb84916f86d646248cc1abe76), 30 * 1e18);\n        //30\n         _mint(address(0xce2dae844a2f473cb10e72ea5b5cd82ce1c86c76), 30 * 1e18);\n        //31\n         _mint(address(0xbd189a18b2cc01bcf00574ee4f7ddad1e15183ee), 20 * 1e18);\n        //32\n         _mint(address(0x0c4206f1e138cc8f584b89b6f62a4330120237ee), 20 * 1e18);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040523480156200001157600080fd5b50620000256401000000006200002b810204565b62000764565b6200005f737003d8df7b38f4c758975fd4800574fecc0da7cd6a09ed194db19b238c0000006401000000006200068b810204565b6200009373dfdaa3b74fcc65b9e90d5922a74f8140a2b67d0f6a09ed194db19b238c0000006401000000006200068b810204565b620000c7730141f8d84f25739e426fd19783a1ec3a1f5a35e06a09ed194db19b238c0000006401000000006200068b810204565b620000fb738863f676474c65e9b85dc2b7fee16188503ae7906a09ed194db19b238c0000006401000000006200068b810204565b6200012f73abf2e86c69648e9ed6cd284f4f82df3f9df7a3dd6a09ed194db19b238c0000006401000000006200068b810204565b620001637366348c99019d6c21fe7c4f954fd5a5cb0b41aa2c6a09ed194db19b238c0000006401000000006200068b810204565b62000197733257b7ebb5e52c67cdd0c1112b28db362b7463cd6a09ed194db19b238c0000006401000000006200068b810204565b620001cb730c26122396a4bd59d855f19b69dadba3b19ba4d76a09ed194db19b238c0000006401000000006200068b810204565b620001ff735b38e7b2c9ac03fa53e96220dcd299e3b47e16246a09ed194db19b238c0000006401000000006200068b810204565b62000233735593105770cd53802c067734d7e321e22e08c9a46a034455bd64262505a000006401000000006200068b810204565b6200026773a8cdeef81970f44444eeb2c87c7eb2eb9a097a346a02801ab221461eb0fc00006401000000006200068b810204565b6200029b730b9e4d7d67552a3a044cbdc024188eaa057b72bc6a01fc3dae847d347f1000006401000000006200068b810204565b620002cf737631029bd3f117b1a746506a04af966a5ede1b466a01fc3842bd1f071c0000006401000000006200068b810204565b62000302731ba5d47dcb2dc5d0afa86be3b7f5e2c421525b7569172a191609a473dc00006401000000006200068b810204565b6200033573b847988c1ea802842ff89466c8a35d5d052840bb69152d02c7e14af68000006401000000006200068b810204565b6200036873cd807ad1b19f9a5a9fc1af1b1da448696d0415046901c55bf07eed4fcc00006401000000006200068b810204565b6200039b733ed4ac1eced4bd01c51a2317609120a16b85e19e6901bf1ffe6c391de000006401000000006200068b810204565b620003cd73fc886ff0fb687826e5a2572f366e38a6e81ea2496813bb83c772023000006401000000006200068b810204565b620003ff73c6a1c5c60ecf4d6bf8b340f207505272fa281ede680ae56f730e6d8400006401000000006200068b810204565b6200043173a8cb97cbd42acca81eb3680d9b94ace459b502a26809ddc1e3b9011800006401000000006200068b810204565b6200046373f22e45982ed32849ee8fe2a342534f2a53b9369568068155a43676e000006401000000006200068b810204565b6200049573e9d520f036d16a48636bf16371dcce0819cf622968056bc75e2d631000006401000000006200068b810204565b620004c77384d6339aa4900310aa9780ec66db57c88d2cd73468056bc75e2d631000006401000000006200068b810204565b620004f9732c049093f263669a432dac59dac31d3c2b9c199668056bc75e2d631000006401000000006200068b810204565b6200052b7323345fd753519795b9d7238690ababbb0469eb3e68056bc75e2d631000006401000000006200068b810204565b6200055d73421926ee0cb7941058387fc1a85532e7a94aa3c168056bc75e2d631000006401000000006200068b810204565b6200058f7382389b139658378cdec2c1ed600aa4717ca59fad68056bc75e2d631000006401000000006200068b810204565b620005c17393bb098498d538749a1d00f564555430a06bffbe6802629f66e0c53000006401000000006200068b810204565b620005f373e619413a56bfcafbb84916f86d646248cc1abe766801a055690d9db800006401000000006200068b810204565b6200062573ce2dae844a2f473cb10e72ea5b5cd82ce1c86c766801a055690d9db800006401000000006200068b810204565b6200065773bd189a18b2cc01bcf00574ee4f7ddad1e15183ee6801158e460913d000006401000000006200068b810204565b62000689730c4206f1e138cc8f584b89b6f62a4330120237ee6801158e460913d000006401000000006200068b810204565b565b600160a060020a0382161515620006a157600080fd5b600254620006be9082640100000000620006ae6200074a82021704565b600255600160a060020a038216600090815260208190526040902054620006f49082640100000000620006ae6200074a82021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156200075d57600080fd5b9392505050565b6106f380620007746000396000f3006080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b3578063095ea7b31461013d57806318160ddd1461017557806323b872dd1461019c578063313ce567146101c657806339509351146101f157806370a082311461021557806395d89b4114610236578063a457c2d71461024b578063a9059cbb1461026f578063dd62ed3e14610293575b600080fd5b3480156100bf57600080fd5b506100c86102ba565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101025781810151838201526020016100ea565b50505050905090810190601f16801561012f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014957600080fd5b50610161600160a060020a03600435166024356102f1565b604080519115158252519081900360200190f35b34801561018157600080fd5b5061018a61036f565b60408051918252519081900360200190f35b3480156101a857600080fd5b50610161600160a060020a0360043581169060243516604435610375565b3480156101d257600080fd5b506101db610412565b6040805160ff9092168252519081900360200190f35b3480156101fd57600080fd5b50610161600160a060020a0360043516602435610417565b34801561022157600080fd5b5061018a600160a060020a03600435166104c7565b34801561024257600080fd5b506100c86104e2565b34801561025757600080fd5b50610161600160a060020a0360043516602435610519565b34801561027b57600080fd5b50610161600160a060020a0360043516602435610564565b34801561029f57600080fd5b5061018a600160a060020a036004358116906024351661057a565b60408051808201909152600a81527f4152544944546f6b656e00000000000000000000000000000000000000000000602082015281565b6000600160a060020a038316151561030857600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a03831660009081526001602090815260408083203384529091528120548211156103a557600080fd5b600160a060020a03841660009081526001602090815260408083203384529091529020546103d9908363ffffffff6105a516565b600160a060020a03851660009081526001602090815260408083203384529091529020556104088484846105bc565b5060019392505050565b601281565b6000600160a060020a038316151561042e57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610462908363ffffffff6106ae16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60408051808201909152600581527f4152544944000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a038316151561053057600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610462908363ffffffff6105a516565b60006105713384846105bc565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600080838311156105b557600080fd5b5050900390565b600160a060020a0383166000908152602081905260409020548111156105e157600080fd5b600160a060020a03821615156105f657600080fd5b600160a060020a03831660009081526020819052604090205461061f908263ffffffff6105a516565b600160a060020a038085166000908152602081905260408082209390935590841681522054610654908263ffffffff6106ae16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156106c057600080fd5b93925050505600a165627a7a72305820fee4d871c7c0c0cc1c11ab4f3cd9002a4509174b117f35504477b64c5b05f0260029"
}