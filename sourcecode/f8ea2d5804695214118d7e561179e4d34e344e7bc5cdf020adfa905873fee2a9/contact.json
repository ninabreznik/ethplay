{
  "address": "0xff88ca23b5f85a06ea28fb8e337fe2904c1229d5",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "EthicHubCMC",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-20\n*/\n\npragma solidity ^0.4.13;\n\ncontract EthicHubStorageInterface {\n\n    //modifier for access in sets and deletes\n    modifier onlyEthicHubContracts() {_;}\n\n    // Setters\n    function setAddress(bytes32 _key, address _value) external;\n    function setUint(bytes32 _key, uint _value) external;\n    function setString(bytes32 _key, string _value) external;\n    function setBytes(bytes32 _key, bytes _value) external;\n    function setBool(bytes32 _key, bool _value) external;\n    function setInt(bytes32 _key, int _value) external;\n    // Deleters\n    function deleteAddress(bytes32 _key) external;\n    function deleteUint(bytes32 _key) external;\n    function deleteString(bytes32 _key) external;\n    function deleteBytes(bytes32 _key) external;\n    function deleteBool(bytes32 _key) external;\n    function deleteInt(bytes32 _key) external;\n\n    // Getters\n    function getAddress(bytes32 _key) external view returns (address);\n    function getUint(bytes32 _key) external view returns (uint);\n    function getString(bytes32 _key) external view returns (string);\n    function getBytes(bytes32 _key) external view returns (bytes);\n    function getBool(bytes32 _key) external view returns (bool);\n    function getInt(bytes32 _key) external view returns (int);\n}\n\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\ncontract EthicHubBase {\n\n    uint8 public version;\n\n    EthicHubStorageInterface public ethicHubStorage = EthicHubStorageInterface(0);\n\n    constructor(address _storageAddress) public {\n        require(_storageAddress != address(0));\n        ethicHubStorage = EthicHubStorageInterface(_storageAddress);\n    }\n\n}\n\ncontract EthicHubCMC is EthicHubBase, Ownable {\n\n    event ContractUpgraded (\n        address indexed _oldContractAddress,                    // Address of the contract being upgraded\n        address indexed _newContractAddress,                    // Address of the new contract\n        uint256 created                                         // Creation timestamp\n    );\n\n    event ContractRemoved (\n        address indexed _contractAddress,                       // Address of the contract being removed\n        uint256 removed                                         // Remove timestamp\n    );\n\n    event LendingContractAdded (\n        address indexed _newContractAddress,                    // Address of the new contract\n        uint256 created                                         // Creation timestamp\n    );\n\n\n    modifier onlyOwnerOrLocalNode() {\n        bool isLocalNode = ethicHubStorage.getBool(keccak256(abi.encodePacked(\"user\", \"localNode\", msg.sender)));\n        require(isLocalNode || owner == msg.sender);\n        _;\n    }\n\n    constructor(address _storageAddress) EthicHubBase(_storageAddress) public {\n        // Version\n        version = 4;\n    }\n\n    function addNewLendingContract(address _lendingAddress) public onlyOwnerOrLocalNode {\n        require(_lendingAddress != address(0));\n        ethicHubStorage.setAddress(keccak256(abi.encodePacked(\"contract.address\", _lendingAddress)), _lendingAddress);\n        emit LendingContractAdded(_lendingAddress, now);\n    }\n\n    function upgradeContract(address _newContractAddress, string _contractName) public onlyOwner {\n        require(_newContractAddress != address(0));\n        require(keccak256(abi.encodePacked(\"contract.name\",\"\")) != keccak256(abi.encodePacked(\"contract.name\",_contractName)));\n        address oldAddress = ethicHubStorage.getAddress(keccak256(abi.encodePacked(\"contract.name\", _contractName)));\n        ethicHubStorage.setAddress(keccak256(abi.encodePacked(\"contract.address\", _newContractAddress)), _newContractAddress);\n        ethicHubStorage.setAddress(keccak256(abi.encodePacked(\"contract.name\", _contractName)), _newContractAddress);\n        ethicHubStorage.deleteAddress(keccak256(abi.encodePacked(\"contract.address\", oldAddress)));\n        emit ContractUpgraded(oldAddress, _newContractAddress, now);\n    }\n\n    function removeContract(address _contractAddress, string _contractName) public onlyOwner {\n        require(_contractAddress != address(0));\n        address contractAddress = ethicHubStorage.getAddress(keccak256(abi.encodePacked(\"contract.name\", _contractName)));\n        require(_contractAddress == contractAddress);\n        ethicHubStorage.deleteAddress(keccak256(abi.encodePacked(\"contract.address\", _contractAddress)));\n        ethicHubStorage.deleteAddress(keccak256(abi.encodePacked(\"contract.name\", _contractName)));\n        emit ContractRemoved(_contractAddress, now);\n    }\n}",
  "bytecode": "608060405260008060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005157600080fd5b50604051602080611bfa8339810180604052810190808051906020019092919050505080600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156100b157600080fd5b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060046000806101000a81548160ff021916908360ff16021790555050611a9b8061015f6000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632b80166d1461009357806354fd4d501461011c578063674539691461014d578063715018a6146101a457806373e5ec47146101bb5780638da5cb5b146101fe578063d4eb342514610255578063f2fde38b146102de575b600080fd5b34801561009f57600080fd5b5061011a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610321565b005b34801561012857600080fd5b50610131610950565b604051808260ff1660ff16815260200191505060405180910390f35b34801561015957600080fd5b50610162610962565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b057600080fd5b506101b9610988565b005b3480156101c757600080fd5b506101fc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a8d565b005b34801561020a57600080fd5b50610213610f2b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026157600080fd5b506102dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610f51565b005b3480156102ea57600080fd5b5061031f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061190b565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561037f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156103bb57600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321f8a7218360405160200180807f636f6e74726163742e6e616d6500000000000000000000000000000000000000815250600d0182805190602001908083835b60208310151561045a5780518252602082019150602081019050602083039250610435565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156104c3578051825260208201915060208101905060208303925061049e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561054a57600080fd5b505af115801561055e573d6000803e3d6000fd5b505050506040513d602081101561057457600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156105c157600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e14a3768460405160200180807f636f6e74726163742e61646472657373000000000000000000000000000000008152506010018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b6020831015156106b75780518252602082019150602081019050602083039250610692565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b15801561073e57600080fd5b505af1158015610752573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e14a3768360405160200180807f636f6e74726163742e6e616d6500000000000000000000000000000000000000815250600d0182805190602001908083835b6020831015156107f557805182526020820191506020810190506020830392506107d0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151561085e5780518252602082019150602081019050602083039250610839565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff167f1941e29a0e9f15492f0bb97f82d955da3462e09f3981db178c595b0b2005ba62426040518082815260200191505060405180910390a2505050565b6000809054906101000a900460ff1681565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109e457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ae1cfca3360405160200180807f7573657200000000000000000000000000000000000000000000000000000000815250600401807f6c6f63616c4e6f646500000000000000000000000000000000000000000000008152506009018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b602083101515610bac5780518252602082019150602081019050602083039250610b87565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015610c3357600080fd5b505af1158015610c47573d6000803e3d6000fd5b505050506040513d6020811015610c5d57600080fd5b810190808051906020019092919050505090508080610cc957503373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b1515610cd457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d1057600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca446dd98360405160200180807f636f6e74726163742e61646472657373000000000000000000000000000000008152506010018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b602083101515610e065780518252602082019150602081019050602083039250610de1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610ec157600080fd5b505af1158015610ed5573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff167f85b4ffe681275ab53edf525446ae7490077e25442a3439d5e47cfad513157446426040518082815260200191505060405180910390a25050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610faf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610feb57600080fd5b8160405160200180807f636f6e74726163742e6e616d6500000000000000000000000000000000000000815250600d0182805190602001908083835b60208310151561104c5780518252602082019150602081019050602083039250611027565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156110b55780518252602082019150602081019050602083039250611090565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660405160200180807f636f6e74726163742e6e616d6500000000000000000000000000000000000000815250600d0160000190506040516020818303038152906040526040518082805190602001908083835b60208310151561115e5780518252602082019150602081019050602083039250611139565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019161415151561119c57600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321f8a7218360405160200180807f636f6e74726163742e6e616d6500000000000000000000000000000000000000815250600d0182805190602001908083835b60208310151561123b5780518252602082019150602081019050602083039250611216565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156112a4578051825260208201915060208101905060208303925061127f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561132b57600080fd5b505af115801561133f573d6000803e3d6000fd5b505050506040513d602081101561135557600080fd5b81019080805190602001909291905050509050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca446dd98460405160200180807f636f6e74726163742e61646472657373000000000000000000000000000000008152506010018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b60208310151561145e5780518252602082019150602081019050602083039250611439565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561151957600080fd5b505af115801561152d573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca446dd98360405160200180807f636f6e74726163742e6e616d6500000000000000000000000000000000000000815250600d0182805190602001908083835b6020831015156115d057805182526020820191506020810190506020830392506115ab565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156116395780518252602082019150602081019050602083039250611614565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156116f457600080fd5b505af1158015611708573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e14a3768260405160200180807f636f6e74726163742e61646472657373000000000000000000000000000000008152506010018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b60208310151561180257805182526020820191506020810190506020830392506117dd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050600060405180830381600087803b15801561188957600080fd5b505af115801561189d573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f81daf9335a6378204a43cc5467ad9282348d3864c1e3788e40b879f41b187aa5426040518082815260200191505060405180910390a3505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561196757600080fd5b61197081611973565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156119af57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820ceaed36e6bbc57a2cc26d281789f8bb4bc60ccd96cb286f7a47b540067c6420a00290000000000000000000000006b79b0baed86a69f146c9256ecd268ebaa81bfca",
  "constructorArguments": "0000000000000000000000006b79b0baed86a69f146c9256ecd268ebaa81bfca"
}