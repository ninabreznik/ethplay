{
  "address": "0x63e634330a20150dbb61b15648bc73855d6ccf07",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BlocklancerToken",
  "compilerVersion": "v0.4.8+commit.60cc1668",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-22\n*/\n\n//--------------------------------------------------------------//\n//---------------------BLOCKLANCER TOKEN -----------------------//\n//--------------------------------------------------------------//\n\npragma solidity ^0.4.8;\n\n/// Migration Agent\n/// allows us to migrate to a new contract should it be needed\n/// makes blocklancer future proof\ncontract MigrationAgent {\n    function migrateFrom(address _from, uint256 _value);\n}\n\ncontract ERC20Interface {\n     // Get the total token supply\n     function totalSupply() constant returns (uint256 totalSupply);\n  \n     // Get the account balance of another account with address _owner\n     function balanceOf(address _owner) constant returns (uint256 balance);\n  \n     // Send _value amount of tokens to address _to\n     function transfer(address _to, uint256 _value) returns (bool success);\n  \n     // Send _value amount of tokens from address _from to address _to\n     function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n  \n     // Allow _spender to withdraw from your account, multiple times, up to the _value amount.\n     // If this function is called again it overwrites the current allowance with _value.\n     // this function is required for some DEX functionality\n     function approve(address _spender, uint256 _value) returns (bool success);\n  \n     // Returns the amount which _spender is still allowed to withdraw from _owner\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n  \n     // Triggered when tokens are transferred.\n     event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  \n     // Triggered whenever approve(address _spender, uint256 _value) is called.\n     event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n/// Blocklancer Token (LNC) - crowdfunding code for Blocklancer Project\ncontract BlocklancerToken is ERC20Interface {\n    string public constant name = \"Lancer Token\";\n    string public constant symbol = \"LNC\";\n    uint8 public constant decimals = 18;  // 18 decimal places, the same as ETH.\n    \n    mapping(address => mapping (address => uint256)) allowed;\n\n    uint public fundingStart;\n\n    // The flag indicates if the LNC contract is in Funding state.\n    bool public funding = true;\n    bool allowTransfer=false;\n\n    // Receives ETH and its own LNC endowment.\n    address public master;\n\n    // The current total token supply.\n    uint256 totalTokens;\n    \n    uint exchangeRate=20000;\n\tuint EarlyInvestorExchangeRate=25000;\n\t\n\tbool startRefund=false;\n\n    mapping (address => uint256) balances;\n    mapping (address => bool) initialInvestor;\n    mapping (address => uint) lastTransferred;\n    \n    //needed to refund everyone should the ICO fail\n    // needed because the price per LNC isn't linear\n    mapping (address => uint256) balancesEther;\n\n    //address of the contract that manages the migration\n    //can only be changed by the creator\n    address public migrationAgent;\n    \n    //total amount of token migrated\n    //allows everyone to see the progress of the migration\n    uint256 public totalMigrated;\n\n    event Migrate(address indexed _from, address indexed _to, uint256 _value);\n    event Refund(address indexed _from, uint256 _value);\n    \n    //total amount of participants in the ICO\n    uint totalParticipants;\n\n    function BlocklancerToken() {\n        master = msg.sender;\n        fundingStart = 1501977600;\n        initialInvestor[0x32be343b94f860124dc4fee278fdcbd38c102d88]=true;initialInvestor[0x3106fe2245b376888d684bdcd83dfa9641a869ff]=true;initialInvestor[0x7f7c64c7b7f5a611e739b4da26659bf741414917]=true;initialInvestor[0x4b3b8e0c2c221e916a48e2e5f3718ae2bce51894]=true;initialInvestor[0x507c8fea802a0772eb5e001a8fba38f36fb9b66b]=true;initialInvestor[0x3c35b66dbaf1bc716f41759c7513a7af2f727ce0]=true;initialInvestor[0x7da3ff5dc152352dcffaf08d528e78f1efd4e9d1]=true;initialInvestor[0x404b688a1d9eb850be2527c5dd341561cfa84e11]=true;initialInvestor[0x80ad7165f29f97896a0b5758193879de34fd9712]=true;initialInvestor[0xd70837a61a322f69ba3742111216a7b97d61d3a7]=true;initialInvestor[0x5eefc4f295045ea11827f515c10d50829580cd31]=true;initialInvestor[0xc8c154d54e8d66073b23361cc74cf5d13efc4dc9]=true;initialInvestor[0x00b279438dff4bb6f37038b12704e31967955cb0]=true;initialInvestor[0xfff78f0db7995c7f2299d127d332aef95bc3e7b7]=true;initialInvestor[0xae631a37ad50bf03e8028d0ae8ba041c70ac4c70]=true;initialInvestor[0x4effca51ba840ae9563f5ac1aa794d1e5d3a3806]=true;initialInvestor[0x315a233620b8536d37a92d588aaf5eb050b50d84]=true;initialInvestor[0x1ebf9e3470f303f6a6ac43347e41877b0a5aaa39]=true;initialInvestor[0xbf022480bda3f6c839cd443397761d5e83f3c02b]=true;initialInvestor[0xe727ea5340256a5236287ee3074eea34d8483457]=true;initialInvestor[0x45ecfeea42fc525c0b29313d3de9089488ef71dc]=true;initialInvestor[0xe59e4aac45862796cb52434967cf72ea46474ff3]=true;initialInvestor[0x7c367c14a322404f9e332b68d7d661b46a5c93ea]=true;initialInvestor[0x08bea4ccc9c45e506d5bc5e638acaa13fa3e801c]=true;initialInvestor[0x5dfb4a015eb0c3477a99ba88b2ac60459c879674]=true;initialInvestor[0x771a2137708ca7e07e7b7c55e5ea666e88d7c0c8]=true;initialInvestor[0xcc8ab06eb5a14855fc8b90abcb6be2f34ee5cea1]=true;initialInvestor[0x0764d446d0701a9b52382f8984b9d270d266e02c]=true;initialInvestor[0x2d90b415a38e2e19cdd02ff3ad81a97af7cbf672]=true;initialInvestor[0x0d4266de516944a49c8109a4397d1fcf06fb7ed0]=true;initialInvestor[0x7a5159617df20008b4dbe06d645a1b0305406794]=true;initialInvestor[0xaf9e23965c09ebf5d313c669020b0e1757cbb92c]=true;initialInvestor[0x33d94224754c122baa1ebaf455d16a9c82f69c98]=true;initialInvestor[0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0]=true;initialInvestor[0xf6ac7c81ca099e34421b7eff7c9e80c8f56b74ae]=true;initialInvestor[0xd85faf59e73225ef386b46a1b17c493019b23e1e]=true;initialInvestor[0x3833f8dbdbd6bdcb6a883ff209b869148965b364]=true;initialInvestor[0x7ed1e469fcb3ee19c0366d829e291451be638e59]=true;initialInvestor[0x6c1ddafafd55a53f80cb7f4c8c8f9a9f13f61d70]=true;initialInvestor[0x94ef531595ffe510f8dc92e0e07a987f57784338]=true;initialInvestor[0xcc54e4e2f425cc4e207344f9e0619c1e40f42f26]=true;initialInvestor[0x70ee7bfc1aeac50349c29475a11ed4c57961b387]=true;initialInvestor[0x89be0bd8b6007101c7da7170a6461580994221d0]=true;initialInvestor[0xa7802ba51ba87556263d84cfc235759b214ccf35]=true;initialInvestor[0xb6a34bd460f02241e80e031023ec20ce6fc310ae]=true;initialInvestor[0x07004b458b56fb152c06ad81fe1be30c8a8b2ea1]=true;initialInvestor[0xb6da110659ef762a381cf2d6f601eb19b5f5d51e]=true;initialInvestor[0x20abf65634219512c6c98a64614c43220ca2085b]=true;initialInvestor[0x3afd1483693fe606c0e58f580bd08ae9aba092fd]=true;initialInvestor[0x61e120b9ca6559961982d9bd1b1dbea7485b84d1]=true;initialInvestor[0x481525718f1536ca2d739aa7e68b94b5e1d5d2c2]=true;initialInvestor[0x8e129a434cde6f52838fad2d30d8b08f744abf48]=true;initialInvestor[0x13df035952316f5fb663c262064ee39e44aa6b43]=true;initialInvestor[0x03c6c82a1d6d13b2f92ed63a10b1b791ffaa1e02]=true;initialInvestor[0xb079a72c627d0a34b880aee0504b901cbce64568]=true;initialInvestor[0xbf27721ca05c983c902df12492620ab2a8b9db91]=true;initialInvestor[0x4ced2b7d27ac74b0ecb2440d9857ba6c6407149f]=true;initialInvestor[0x330c63a5b737b5542be108a74b3fef6272619585]=true;initialInvestor[0x266dccd07a275a6e72b6bc549f7c2ce9e082f13f]=true;initialInvestor[0xf4280bf77a043568e40da2b8068b11243082c944]=true;initialInvestor[0x67d2f0e2d642a87300781df25c45b00bccaf6983]=true;initialInvestor[0x9f658a6628864e94f9a1c53ba519f0ae37a8b4a5]=true;initialInvestor[0x498d256ee53d4d05269cfa1a80c3214e525076ca]=true;initialInvestor[0xa1beac79dda14bce1ee698fdee47e2f7f2fd1f0d]=true;initialInvestor[0xfeb063bd508b82043d6b4d5c51e1e42b44f39b33]=true;initialInvestor[0xfeb7a283e1dbf2d5d8e9ba64ab5e607a41213561]=true;initialInvestor[0xabedb3d632fddccd4e95957be4ee0daffbe6acdd]=true;initialInvestor[0x4d8a7cb44d317113c82f25a0174a637a8f012ebb]=true;initialInvestor[0xe922c94161d45bdd31433b3c7b912ad214d399ce]=true;initialInvestor[0x11f9ad6eb7e9e98349b8397c836c0e3e88455b0a]=true;initialInvestor[0xfc28b52160639167fa59f30232bd8d43fab681e6]=true;initialInvestor[0xaf8a6c54fc8fa59cfcbc631e56b3d5b22fa42b75]=true;initialInvestor[0xd3c0ebb99a5616f3647f16c2efb40b133b5b1e1c]=true;initialInvestor[0x877341abeac8f44ac69ba7c99b1d5d31ce7a11d7]=true;initialInvestor[0xb22f376f70f34c906a88a91f6999a0bd1a0f3c3d]=true;initialInvestor[0x2c99db3838d6af157c8d671291d560a013c6c01e]=true;initialInvestor[0xd0f38af6984f3f847f7f2fcd6ea27aa878257059]=true;initialInvestor[0x2a5da89176d5316782d7f1c9db74d209679ad9ce]=true;initialInvestor[0xc88eea647a570738e69ad3dd8975577df720318d]=true;initialInvestor[0xb32b18dfea9072047a368ec056a464b73618345a]=true;initialInvestor[0x945b9a00bffb201a5602ee661f2a4cc6e5285ca6]=true;initialInvestor[0x86957ac9a15f114c08296523569511c22e471266]=true;initialInvestor[0x007bfe6994536ec9e89505c7de8e9eb748d3cb27]=true;initialInvestor[0x6ad0f0f578115b6fafa73df45e9f1e9056b84459]=true;initialInvestor[0x621663b4b6580b70b74afaf989c707d533bbec91]=true;initialInvestor[0xdc86c0632e88de345fc2ac01608c63f2ed99605a]=true;initialInvestor[0x3d83bb077b2557ef5f361bf1a9e68d093d919b28]=true;initialInvestor[0x56307b37377f75f397d4936cf507baf0f4943ea5]=true;initialInvestor[0x555cbe849bf5e01db195a81ecec1e65329fff643]=true;initialInvestor[0x7398a2edb928a2e179f62bfb795f292254f6850e]=true;initialInvestor[0x30382b132f30c175bee2858353f3a2dd0d074c3a]=true;initialInvestor[0x5baeac0a0417a05733884852aa068b706967e790]=true;initialInvestor[0xcb12b8a675e652296a8134e70f128521e633b327]=true;initialInvestor[0xaa8c03e04b121511858d88be7a1b2f5a2d70f6ac]=true;initialInvestor[0x77529c0ea5381262db964da3d5f6e2cc92e9b48b]=true;initialInvestor[0x59e5fe8a9637702c6d597c5f1c4ebe3fba747371]=true;initialInvestor[0x296fe436ecc0ea6b7a195ded26451e77e1335108]=true;initialInvestor[0x41bacae05437a3fe126933e57002ae3f129aa079]=true;initialInvestor[0x6cd5b9b60d2bcf81af8e6ef5d750dc9a8f18bf45]=true;\n    }\n    \n    //returns the total amount of participants in the ICO\n    function getAmountofTotalParticipants() constant returns (uint){\n        return totalParticipants;\n    }\n\n    /// allows to transfer token to another address\n    function transfer(address _to, uint256 _value) returns (bool success) {\n        // Don't allow in funding state\n        if(funding) throw;\n        if(!allowTransfer)throw;\n\n        var senderBalance = balances[msg.sender];\n        //only allow if the balance of the sender is more than he want's to send\n        if (senderBalance >= _value && _value > 0) {\n            //reduce the sender balance by the amount he sends\n            senderBalance -= _value;\n            balances[msg.sender] = senderBalance;\n            \n            //increase the balance of the receiver by the amount we reduced the balance of the sender\n            balances[_to] += _value;\n            \n            //saves the last time someone sent LNc from this address\n            //is needed for our Token Holder Tribunal\n            //this ensures that everyone can only vote one time\n            //otherwise it would be possible to send the LNC around and everyone votes again and again\n            lastTransferred[msg.sender]=block.timestamp;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        }\n        //transfer failed\n        return false;\n    }\n\n    //returns the total amount of LNC in circulation\n    //get displayed on the website whilst the crowd funding\n    function totalSupply() constant returns (uint256 totalSupply) {\n        return totalTokens;\n    }\n    \n    //retruns the balance of the owner address\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n    \n    //returns the amount anyone pledged into this contract\n    function EtherBalanceOf(address _owner) constant returns (uint256) {\n        return balancesEther[_owner];\n    }\n    \n    //returns the amount anyone pledged into this contract\n    function isInitialInvestor(address _owner) constant returns (bool) {\n        return initialInvestor[_owner];\n    }\n    \n    //time left before the crodsale begins\n    function TimeLeftBeforeCrowdsale() external constant returns (uint256) {\n        if(fundingStart>block.timestamp)\n            return fundingStart-block.timestamp;\n        else\n            return 0;\n    }\n\n    // allows us to migrate to anew contract\n    function migrate(uint256 _value) external {\n        // can only be called if the funding ended\n        if(funding) throw;\n        \n        //the migration agent address needs to be set\n        if(migrationAgent == 0) throw;\n\n        // must migrate more than nothing\n        if(_value == 0) throw;\n        \n        //if the value is higher than the sender owns abort\n        if(_value > balances[msg.sender]) throw;\n\n        //reduce the balance of the owner\n        balances[msg.sender] -= _value;\n        \n        //reduce the token left in the old contract\n        totalTokens -= _value;\n        totalMigrated += _value;\n        \n        //call the migration agent to complete the migration\n        //credits the same amount of LNC in the new contract\n        MigrationAgent(migrationAgent).migrateFrom(msg.sender, _value);\n        Migrate(msg.sender, migrationAgent, _value);\n    }\n\n    //sets the address of the migration agent\n    function setMigrationAgent(address _agent) external {\n        //not possible in funding mode\n        if(funding) throw;\n        \n        //only allow to set this once\n        if(migrationAgent != 0) throw;\n        \n        //anly the owner can call this function\n        if(msg.sender != master) throw;\n        \n        //set the migration agent\n        migrationAgent = _agent;\n    }\n    \n    function setExchangeRate(uint _exchangeRate){\n        if(msg.sender!=master)throw;\n        exchangeRate=_exchangeRate;\n    }\n    \n    function setICORunning(bool r){\n        if(msg.sender!=master)throw;\n        funding=r;\n    }\n    \n    function setTransfer(bool r){\n        if(msg.sender!=master)throw;\n        allowTransfer=r;\n    }\n\t\n\tfunction addInitialInvestor(address invest){\n\t\tif(msg.sender!=master)throw;\n\t\tinitialInvestor[invest]=true;\n\t}\n\t\n\tfunction addToken(address invest,uint256 value){\n\t\tif(msg.sender!=master)throw;\n\t\tbalances[invest]+=value;\n\t\ttotalTokens+=value;\n\t}\n\t\n\tfunction setEarlyInvestorExchangeRate(uint invest){\n\t\tif(msg.sender!=master)throw;\n\t\tEarlyInvestorExchangeRate=invest;\n\t}\n\t\n\tfunction setStartDate(uint time){\n\t\tif(msg.sender!=master)throw;\n\t\tfundingStart=time;\n\t}\n\t\n\tfunction setStartRefund(bool s){\n\t\tif(msg.sender!=master)throw;\n\t\tstartRefund=s;\n\t}\n    \n    //return the current exchange rate -> LNC per Ether\n    function getExchangeRate(address investorAddress) constant returns(uint){\n\t\tif(initialInvestor[investorAddress])\n\t\t\treturn EarlyInvestorExchangeRate;\n\t\telse\n\t\t\treturn exchangeRate;\n    }\n    \n    //returns if the crowd sale is still open\n    function ICOopen() constant returns(bool){\n        if(!funding) return false;\n        else if(block.timestamp < fundingStart) return false;\n        else return true;\n    }\n\n    //when someone send ether to this contract\n    function() payable external {\n        //not possible if the funding has ended\n        if(!funding) throw;\n        \n        //not possible before the funding started\n        if(block.timestamp < fundingStart) throw;\n\n        // Do not allow creating 0 or more than the cap tokens.\n        if(msg.value == 0) throw;\n\n        //calculate the amount of LNC the sender receives\n        var numTokens = msg.value * getExchangeRate(msg.sender);\n        totalTokens += numTokens;\n\n        // increase the amount of token the sender holds\n        balances[msg.sender] += numTokens;\n        \n        //increase the amount of ether the sender pledged into the contract\n        balancesEther[msg.sender] += msg.value;\n        \n        //icrease the amount of people that sent ether to this contract\n        totalParticipants+=1;\n\n        // Log token creation\n        Transfer(0, msg.sender, numTokens);\n    }\n\n    //called after the crodsale ended\n    //needed to allow everyone to send their LNC around\n    function finalize(uint percentOfTotal) external {\n        if(msg.sender!=master)throw;\n        if(funding)throw;\n\n        // allows to tranfer token to another address\n        // disables buying LNC\n        funding = false;\n\n        //send 12% of the token to the devs\n        //10 % for the devs\n        //2 % for the bounty participants\n        uint256 additionalTokens = totalTokens * percentOfTotal / (100 - percentOfTotal);\n        totalTokens += additionalTokens;\n        balances[master] += additionalTokens;\n        Transfer(0, master, additionalTokens);\n\n        // Transfer ETH to the Blocklancer address.\n        if (!master.send(this.balance)) throw;\n    }\n\t\n\t//everyone needs to call this function should the minimum cap not be reached\n    //refunds the sender\n    function refund() external {\n        if(!startRefund) throw;\n\n        var gntValue = balances[msg.sender];\n        var ethValue = balancesEther[msg.sender];\n        if (gntValue == 0) throw;\n        \n        //set the amount of token the sender has to 0\n        balances[msg.sender] = 0;\n        \n        //set the amount of ether the sender owns to 0\n        balancesEther[msg.sender] = 0;\n        totalTokens -= gntValue;\n\n        Refund(msg.sender, ethValue);\n        if (!msg.sender.send(ethValue)) throw;\n    }\n\t\n    // Send _value amount of tokens from address _from to address _to\n    // The transferFrom method is used for a withdraw workflow, allowing contracts to send\n     // tokens on your behalf, for example to \"deposit\" to a contract address and/or to charge\n     // fees in sub-currencies; the command should fail unless the _from account has\n     // deliberately authorized the sender of the message via some mechanism; we propose\n     // these standardized APIs for approval:\n     function transferFrom(address _from,address _to,uint256 _amount) returns (bool success) {\n         if(funding) throw;\n         if(!allowTransfer)throw;\n         if (balances[_from] >= _amount\n             && allowed[_from][msg.sender] >= _amount\n             && _amount > 0\n             && balances[_to] + _amount > balances[_to]) {\n             balances[_from] -= _amount;\n             allowed[_from][msg.sender] -= _amount;\n             balances[_to] += _amount;\n             Transfer(_from, _to, _amount);\n             return true;\n         } else {\n             return false;\n         }\n     }\n  \n     // Allow _spender to withdraw from your account, multiple times, up to the _value amount.\n     // If this function is called again it overwrites the current allowance with _value.\n     function approve(address _spender, uint256 _amount) returns (bool success) {\n         if(funding) throw;\n         if(!allowTransfer)throw;\n         allowed[msg.sender][_spender] = _amount;\n         Approval(msg.sender, _spender, _amount);\n         return true;\n     }\n  \n     function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n         return allowed[_owner][_spender];\n     }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"ICOopen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"percentOfTotal\",\"type\":\"uint256\"}],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"s\",\"type\":\"bool\"}],\"name\":\"setStartRefund\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"EtherBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"invest\",\"type\":\"address\"}],\"name\":\"addInitialInvestor\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"invest\",\"type\":\"uint256\"}],\"name\":\"setEarlyInvestorExchangeRate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"setMigrationAgent\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setStartDate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migrationAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeLeftBeforeCrowdsale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMigrated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"name\":\"setTransfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"invest\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isInitialInvestor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"funding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"name\":\"setICORunning\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_exchangeRate\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAmountofTotalParticipants\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"master\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"investorAddress\",\"type\":\"address\"}],\"name\":\"getExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Migrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": ""
}