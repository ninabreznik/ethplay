{
  "address": "0x2c8826775fb4d5c883fba7c2ffa0ef0854dd9529",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SBtesting",
  "compilerVersion": "v0.5.0+commit.1d4f565a",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-17\n*/\n\npragma solidity ^0.5.0;\n\n\nlibrary SafeMath{\n  \tfunction mul(uint256 a, uint256 b) internal pure returns (uint256)\n    \t{\n\t\tuint256 c = a * b;\n\t\tassert(a == 0 || c / a == b);\n\n\t\treturn c;\n  \t}\n\n  \tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\n\t{\n\t\tuint256 c = a / b;\n\n\t\treturn c;\n  \t}\n\n  \tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\n\t{\n\t\tassert(b <= a);\n\n\t\treturn a - b;\n  \t}\n\n  \tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\n\t{\n\t\tuint256 c = a + b;\n\t\tassert(c >= a);\n\n\t\treturn c;\n  \t}\n}\n\ncontract Ownable\n{\n  \taddress public Owner_master;\n  \taddress public Owner_creator;\n  \taddress public Owner_manager;\n\n  \tevent ChangeOwner_master(address indexed _from, address indexed _to);\n  \tevent ChangeOwner_creator(address indexed _from, address indexed _to);\n  \tevent ChangeOwner_manager(address indexed _from, address indexed _to);\n\n  \tmodifier onlyOwner_master{ \n          require(msg.sender == Owner_master);\t_; \t}\n  \tmodifier onlyOwner_creator{ \n          require(msg.sender == Owner_creator); _; }\n  \tmodifier onlyOwner_manager{ \n          require(msg.sender == Owner_manager); _; }\n  \tconstructor() public { \n          Owner_master = msg.sender; }\n  \t\n    \n    \n    \n    \n    \n    function transferOwnership_master(address _to) onlyOwner_master public{\n        \trequire(_to != Owner_master);\n        \trequire(_to != Owner_creator);\n        \trequire(_to != Owner_manager);\n        \trequire(_to != address(0x0));\n\n\t\taddress from = Owner_master;\n  \t    \tOwner_master = _to;\n  \t    \n  \t    \temit ChangeOwner_master(from, _to);}\n\n  \tfunction transferOwner_creator(address _to) onlyOwner_master public{\n\t        require(_to != Owner_master);\n        \trequire(_to != Owner_creator);\n        \trequire(_to != Owner_manager);\n\t        require(_to != address(0x0));\n\n\t\taddress from = Owner_creator;        \n\t    \tOwner_creator = _to;\n        \n    \t\temit ChangeOwner_creator(from, _to);}\n\n  \tfunction transferOwner_manager(address _to) onlyOwner_master public{\n\t        require(_to != Owner_master);\n\t        require(_to != Owner_creator);\n        \trequire(_to != Owner_manager);\n\t        require(_to != address(0x0));\n        \t\n\t\taddress from = Owner_manager;\n    \t\tOwner_manager = _to;\n        \n\t    \temit ChangeOwner_manager(from, _to);}\n}\n\ncontract Helper\n{\n    event Transfer( address indexed _from, address indexed _to, uint _value);\n    event Approval( address indexed _owner, address indexed _spender, uint _value);\n    \n    function totalSupply() view public returns (uint _supply);\n    function balanceOf( address _who ) public view returns (uint _value);\n    function transfer( address _to, uint _value) public returns (bool _success);\n    function approve( address _spender, uint _value ) public returns (bool _success);\n    function allowance( address _owner, address _spender ) public view returns (uint _allowance);\n    function transferFrom( address _from, address _to, uint _value) public returns (bool _success);\n}\n\ncontract SBtesting is Helper, Ownable\n{\n    using SafeMath for uint;\n    \n    string public name;\n    string public symbol;\n    uint public decimals;\n    \n    uint constant private zeroAfterDecimal = 10**18;\n    \n    uint constant public maxSupply             = 2500000 * zeroAfterDecimal;\n    \n    uint constant public maxSupply_SeedBlock        =   2500000 * zeroAfterDecimal;\n\n    \n    uint public issueToken_Total;\n    \n    uint public issueToken_SeedBlock;\n    \n    uint public burnTokenAmount;\n    \n    mapping (address => uint) public balances;\n    mapping (address => mapping ( address => uint )) public approvals;\n\n    bool public tokenLock = true;\n    bool public saleTime = true;\n    uint public endSaleTime = 0;\n    \n    event Burn(address indexed _from, uint _value);\n    \n    event Issue_SeedBlock(address indexed _to, uint _tokens);\n    \n    event TokenUnLock(address indexed _to, uint _tokens);\n\n    \n    constructor() public\n    {\n        name        = \"SBtesting\";\n        decimals    = 18;\n        symbol      = \"SBtest\";\n        \n        issueToken_Total      = 0;\n        \n        issueToken_SeedBlock     = 0;\n\n        \n        require(maxSupply == maxSupply_SeedBlock);\n\n    }\n    \n    // ERC - 20 Interface -----\n\n    function totalSupply() view public returns (uint) {\n        return issueToken_Total;}\n    \n    function balanceOf(address _who) view public returns (uint) {\n        uint balance = balances[_who];\n        \n        return balance;}\n    \n    function transfer(address _to, uint _value) public returns (bool) {\n        require(isTransferable() == true);\n        require(balances[msg.sender] >= _value);\n        \n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        \n        emit Transfer(msg.sender, _to, _value);\n        \n        return true;}\n    \n    function approve(address _spender, uint _value) public returns (bool){\n        require(isTransferable() == true);\n        require(balances[msg.sender] >= _value);\n        \n        approvals[msg.sender][_spender] = _value;\n        \n        emit Approval(msg.sender, _spender, _value);\n        \n        return true; }\n    \n    function allowance(address _owner, address _spender) view public returns (uint) {\n        return approvals[_owner][_spender];}\n\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\n        require(isTransferable() == true);\n        require(balances[_from] >= _value);\n        require(approvals[_from][msg.sender] >= _value);\n        \n        approvals[_from][msg.sender] = approvals[_from][msg.sender].sub(_value);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to]  = balances[_to].add(_value);\n        \n        emit Transfer(_from, _to, _value);\n        \n        return true;}\n    \n    // -----\n    \n    // Issue Function -----\n\n\n    function issue_noVesting_Public(address _to, uint _value) onlyOwner_creator public\n    {\n        uint tokens = _value * zeroAfterDecimal;\n        require(maxSupply_SeedBlock >= issueToken_SeedBlock.add(tokens));\n        \n        balances[_to] = balances[_to].add(tokens);\n        \n        issueToken_Total = issueToken_Total.add(tokens);\n        issueToken_SeedBlock = issueToken_SeedBlock.add(tokens);\n        \n        emit Issue_SeedBlock(_to, tokens);\n    }    \n    \n       // Lock Function -----\n    \n    function isTransferable() private view returns (bool)\n    {\n        if(tokenLock == false)\n        {\n            return true;\n        }\n        else if(msg.sender == Owner_manager)\n        {\n            return true;\n        }\n        \n        return false;\n    }\n    \n    function setTokenUnlock() onlyOwner_manager public\n    {\n        require(tokenLock == true);\n        require(saleTime == false);\n        \n        tokenLock = false;\n    }\n    \n    function setTokenLock() onlyOwner_manager public\n    {\n        require(tokenLock == false);\n        \n        tokenLock = true;\n    }\n    \n    // -----\n    \n    // ETC / Burn Function -----\n    \n    function () payable external\n    {\n        revert();\n    }\n    \n    function endSale() onlyOwner_manager public\n    {\n        require(saleTime == true);\n        \n        saleTime = false;\n        \n        uint time = now;\n        \n        endSaleTime = time;\n        \n    }\n    \n    function withdrawTokens(address _contract, uint _decimals, uint _value) onlyOwner_manager public\n    {\n\n        if(_contract == address(0x0))\n        {\n            uint eth = _value.mul(10 ** _decimals);\n            msg.sender.transfer(eth);\n        }\n        else\n        {\n            uint tokens = _value.mul(10 ** _decimals);\n            Helper(_contract).transfer(msg.sender, tokens);\n            \n            emit Transfer(address(0x0), msg.sender, tokens);\n        }\n    }\n    \n    function burnToken(uint _value) onlyOwner_manager public\n    {\n        uint tokens = _value * zeroAfterDecimal;\n        \n        require(balances[msg.sender] >= tokens);\n        \n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n        \n        burnTokenAmount = burnTokenAmount.add(tokens);\n        issueToken_Total = issueToken_Total.sub(tokens);\n        \n        emit Burn(msg.sender, tokens);\n    }\n    \n    function close() onlyOwner_master public\n    {\n        selfdestruct(msg.sender);\n    }\n    \n    // -----\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwner_creator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_decimals\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issueToken_SeedBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endSaleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupply_SeedBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership_master\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner_master\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner_manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner_creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnTokenAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issueToken_Total\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"issue_noVesting_Public\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwner_manager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Issue_SeedBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TokenUnLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner_master\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner_creator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner_manager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040526001600b60006101000a81548160ff0219169083151502179055506001600b60016101000a81548160ff0219169083151502179055506000600c553480156200004c57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040805190810160405280600981526020017f534274657374696e67000000000000000000000000000000000000000000000081525060039080519060200190620000da92919062000170565b5060126005819055506040805190810160405280600681526020017f5342746573740000000000000000000000000000000000000000000000000000815250600490805190602001906200013092919062000170565b5060006006819055506000600781905550670de0b6b3a7640000622625a002670de0b6b3a7640000622625a0021415156200016a57600080fd5b6200021f565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001b357805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e3578251825591602001919060010190620001c6565b5b509050620001f39190620001f7565b5090565b6200021c91905b8082111562000218576000816000905550600101620001fe565b5090565b90565b612612806200022f6000396000f3fe608060405260043610610196576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461019b578063095ea7b31461022b5780631596facb1461029e57806318160ddd146102cd57806323b872dd146102f857806327e235e31461038b5780632d8c5811146103f0578063313ce56714610441578063380d831b1461046c57806343d726d6146104835780634c1d1fde1461049a57806354626587146104ff57806358371ccd1461052a57806370a08231146105555780637b47ec1a146105ba57806384300859146105f55780638db7e8331461060c5780638ece19f61461063757806395d89b411461064e578063a07bbbfe146106de578063a32ce11e1461072f578063a3e05c18146107b4578063a9059cbb1461080b578063af9f47c01461087e578063b672edfe146108d5578063b6ab61a71461092c578063d5abeb0114610957578063dd62ed3e14610982578063e405c46214610a07578063e718234d14610a32578063ec6976c314610a61578063f40c291814610abc575b600080fd5b3480156101a757600080fd5b506101b0610b0d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f05780820151818401526020810190506101d5565b50505050905090810190601f16801561021d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023757600080fd5b506102846004803603604081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bab565b604051808215151515815260200191505060405180910390f35b3480156102aa57600080fd5b506102b3610d05565b604051808215151515815260200191505060405180910390f35b3480156102d957600080fd5b506102e2610d18565b6040518082815260200191505060405180910390f35b34801561030457600080fd5b506103716004803603606081101561031b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d22565b604051808215151515815260200191505060405180910390f35b34801561039757600080fd5b506103da600480360360208110156103ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110c0565b6040518082815260200191505060405180910390f35b3480156103fc57600080fd5b5061043f6004803603602081101561041357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d8565b005b34801561044d57600080fd5b5061045661134b565b6040518082815260200191505060405180910390f35b34801561047857600080fd5b50610481611351565b005b34801561048f57600080fd5b506104986113f9565b005b3480156104a657600080fd5b506104fd600480360360608110156104bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061146d565b005b34801561050b57600080fd5b506105146116cb565b6040518082815260200191505060405180910390f35b34801561053657600080fd5b5061053f6116d1565b6040518082815260200191505060405180910390f35b34801561056157600080fd5b506105a46004803603602081101561057857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116d7565b6040518082815260200191505060405180910390f35b3480156105c657600080fd5b506105f3600480360360208110156105dd57600080fd5b8101908080359060200190929190505050611725565b005b34801561060157600080fd5b5061060a6118fb565b005b34801561061857600080fd5b506106216119b8565b6040518082815260200191505060405180910390f35b34801561064357600080fd5b5061064c6119c9565b005b34801561065a57600080fd5b50610663611a64565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106a3578082015181840152602081019050610688565b50505050905090810190601f1680156106d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106ea57600080fd5b5061072d6004803603602081101561070157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b02565b005b34801561073b57600080fd5b5061079e6004803603604081101561075257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d73565b6040518082815260200191505060405180910390f35b3480156107c057600080fd5b506107c9611d98565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561081757600080fd5b506108646004803603604081101561082e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611dbd565b604051808215151515815260200191505060405180910390f35b34801561088a57600080fd5b50610893611fc0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108e157600080fd5b506108ea611fe6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561093857600080fd5b5061094161200c565b6040518082815260200191505060405180910390f35b34801561096357600080fd5b5061096c612012565b6040518082815260200191505060405180910390f35b34801561098e57600080fd5b506109f1600480360360408110156109a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612023565b6040518082815260200191505060405180910390f35b348015610a1357600080fd5b50610a1c6120aa565b6040518082815260200191505060405180910390f35b348015610a3e57600080fd5b50610a476120b0565b604051808215151515815260200191505060405180910390f35b348015610a6d57600080fd5b50610aba60048036036040811015610a8457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120c3565b005b348015610ac857600080fd5b50610b0b60048036036020811015610adf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061227c565b005b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ba35780601f10610b7857610100808354040283529160200191610ba3565b820191906000526020600020905b815481529060010190602001808311610b8657829003601f168201915b505050505081565b600060011515610bb96124ef565b1515141515610bc757600080fd5b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610c1557600080fd5b81600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600b60019054906101000a900460ff1681565b6000600654905090565b600060011515610d306124ef565b1515141515610d3e57600080fd5b81600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610d8c57600080fd5b81600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610e1757600080fd5b610ea682600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257c90919063ffffffff16565b600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f7882600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257c90919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061100d82600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461259590919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60096020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561113357600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561118f57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111ec57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561124957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561128557600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f844a4a077632ba562a663615fa01ad4f6a684b0009ab71fda6ff9b1e65917f4e60405160405180910390a35050565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113ad57600080fd5b60011515600b60019054906101000a900460ff1615151415156113cf57600080fd5b6000600b60016101000a81548160ff021916908315150217905550600042905080600c8190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561145457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114c957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561156557600061151683600a0a836125b390919063ffffffff16565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561155e573d6000803e3d6000fd5b50506116c6565b600061157d83600a0a836125b390919063ffffffff16565b90508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561162257600080fd5b505af1158015611636573d6000803e3d6000fd5b505050506040513d602081101561164c57600080fd5b8101908080519060200190929190505050503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505b505050565b60075481565b600c5481565b600080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080915050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561178157600080fd5b6000670de0b6b3a76400008202905080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156117de57600080fd5b61183081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257c90919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118888160085461259590919063ffffffff16565b6008819055506118a38160065461257c90919063ffffffff16565b6006819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561195757600080fd5b60011515600b60009054906101000a900460ff16151514151561197957600080fd5b60001515600b60019054906101000a900460ff16151514151561199b57600080fd5b6000600b60006101000a81548160ff021916908315150217905550565b670de0b6b3a7640000622625a00281565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a2557600080fd5b60001515600b60009054906101000a900460ff161515141515611a4757600080fd5b6001600b60006101000a81548160ff021916908315150217905550565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611afa5780601f10611acf57610100808354040283529160200191611afa565b820191906000526020600020905b815481529060010190602001808311611add57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b5d57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611bb957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611c1657600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611c7357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611caf57600080fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ffb59157e8f879f9a78b5e0577ec7f6bd968ad0c68e256dbb77ae94085af124b160405160405180910390a35050565b600a602052816000526040600020602052806000526040600020600091509150505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515611dcb6124ef565b1515141515611dd957600080fd5b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611e2757600080fd5b611e7982600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257c90919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611f0e82600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461259590919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b670de0b6b3a7640000622625a00281565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60065481565b600b60009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561211f57600080fd5b6000670de0b6b3a7640000820290506121438160075461259590919063ffffffff16565b670de0b6b3a7640000622625a0021015151561215e57600080fd5b6121b081600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461259590919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122088160065461259590919063ffffffff16565b6006819055506122238160075461259590919063ffffffff16565b6007819055508273ffffffffffffffffffffffffffffffffffffffff167f82dd79f391425e3a623f8b4ee8f1b152a372170d9e0b366a4e42ce7635baa2ca826040518082815260200191505060405180910390a2505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156122d757600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561233357600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561239057600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156123ed57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561242957600080fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fde74b34baf2abeca966c14b8764bc969fc3ae0bdc270dce243d3e61e0f0343a660405160405180910390a35050565b6000801515600b60009054906101000a900460ff16151514156125155760019050612579565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156125745760019050612579565b600090505b90565b600082821115151561258a57fe5b818303905092915050565b60008082840190508381101515156125a957fe5b8091505092915050565b600080828402905060008414806125d457508284828115156125d157fe5b04145b15156125dc57fe5b809150509291505056fea165627a7a72305820f68be40db075b48754638c80ac54e3f3cb55668e09b47fa51d2c99b970e3f1d40029"
}