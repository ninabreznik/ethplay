{
  "address": "0xfe988661af7ca560fe83d62eadc4610f7eaee1e1",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "LockToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-15\n*/\n\npragma solidity ^0.4.18;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract token {\n\n  function balanceOf(address _owner) public constant returns (uint256 balance);\n  function transfer(address _to, uint256 _value) public returns (bool success);\n\n}\n\ncontract Ownable {\n  address public owner;\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public{\n    owner = msg.sender;\n  }\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n}\n\ncontract LockToken is Ownable {\n\tusing SafeMath for uint256;\n\n  token token_reward;\n  address public beneficiary;\n  bool public isLocked = false;\n  bool public isReleased = false;\n  uint256 public start_time;\n  uint256 public end_time;\n  \n  event TokenReleased(address beneficiary, uint256 token_amount);\n\n  constructor(address tokenContractAddress, address _beneficiary) public{\n    token_reward = token(tokenContractAddress);\n    beneficiary = _beneficiary;\n  }\n\n  function tokenBalance() constant public returns (uint256){\n    return token_reward.balanceOf(this);\n  }\n\n  function lock(uint256 lockTime) public onlyOwner returns (bool){\n  \trequire(!isLocked);\n  \trequire(tokenBalance() > 0);\n  \tstart_time = now;\n  \tend_time = lockTime;\n  \tisLocked = true;\n  }\n\n  function lockOver() constant public returns (bool){\n  \tuint256 current_time = now;\n\treturn current_time > end_time;\n  }\n\n\tfunction release() onlyOwner public{\n    require(isLocked);\n    require(!isReleased);\n    require(lockOver());\n    uint256 token_amount = tokenBalance();\n    token_reward.transfer( beneficiary, token_amount);\n    emit TokenReleased(beneficiary, token_amount);\n    isReleased = true;\n  }\n}",
  "bytecode": "60806040526002805460a060020a61ffff021916905534801561002157600080fd5b5060405160408061067783398101604052805160209091015160008054600160a060020a0319908116331790915560018054600160a060020a03948516908316179055600280549390921692169190911790556105f4806100836000396000f3006080604052600436106100ae5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631624335681146100b357806338af3eed146100da578063834ee4171461010b57806386d1a69f146101205780638da5cb5b146101375780639b7faaf01461014c5780639e1a4d1914610175578063a4e2d6341461018a578063dd4670641461019f578063f2fde38b146101b7578063fa2a8997146101d8575b600080fd5b3480156100bf57600080fd5b506100c86101ed565b60408051918252519081900360200190f35b3480156100e657600080fd5b506100ef6101f3565b60408051600160a060020a039092168252519081900360200190f35b34801561011757600080fd5b506100c8610202565b34801561012c57600080fd5b50610135610208565b005b34801561014357600080fd5b506100ef6103ae565b34801561015857600080fd5b506101616103bd565b604080519115158252519081900360200190f35b34801561018157600080fd5b506100c86103c5565b34801561019657600080fd5b5061016161045b565b3480156101ab57600080fd5b5061016160043561047c565b3480156101c357600080fd5b50610135600160a060020a0360043516610512565b3480156101e457600080fd5b506101616105a6565b60045481565b600254600160a060020a031681565b60035481565b60008054600160a060020a0316331461022057600080fd5b60025474010000000000000000000000000000000000000000900460ff16151561024957600080fd5b6002547501000000000000000000000000000000000000000000900460ff161561027257600080fd5b61027a6103bd565b151561028557600080fd5b61028d6103c5565b600154600254604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03928316600482015260248101859052905193945091169163a9059cbb916044808201926020929091908290030181600087803b15801561030157600080fd5b505af1158015610315573d6000803e3d6000fd5b505050506040513d602081101561032b57600080fd5b505060025460408051600160a060020a0390921682526020820183905280517f9cf9e3ab58b33f06d81842ea0ad850b6640c6430d6396973312e1715792e7a919281900390910190a1506002805475ff00000000000000000000000000000000000000000019167501000000000000000000000000000000000000000000179055565b600054600160a060020a031681565b600454421190565b600154604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600092600160a060020a0316916370a0823191602480830192602092919082900301818787803b15801561042a57600080fd5b505af115801561043e573d6000803e3d6000fd5b505050506040513d602081101561045457600080fd5b5051905090565b60025474010000000000000000000000000000000000000000900460ff1681565b60008054600160a060020a0316331461049457600080fd5b60025474010000000000000000000000000000000000000000900460ff16156104bc57600080fd5b60006104c66103c5565b116104d057600080fd5b426003556004919091556002805474ff000000000000000000000000000000000000000019167401000000000000000000000000000000000000000017905590565b600054600160a060020a0316331461052957600080fd5b600160a060020a038116151561053e57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6002547501000000000000000000000000000000000000000000900460ff16815600a165627a7a7230582054ee8038aee12733029f6f98924dff1c511191e7f45bab96b88cd665f3df22040029000000000000000000000000aa1ae5e57dc05981d83ec7fca0b3c7ee2565b7d600000000000000000000000071de4b164241466122b6d129bc28e2c3c9c46f1f",
  "constructorArguments": "000000000000000000000000aa1ae5e57dc05981d83ec7fca0b3c7ee2565b7d600000000000000000000000071de4b164241466122b6d129bc28e2c3c9c46f1f"
}