{
  "address": "0x673f8248b2da1c368a174cc191f7368163d9d54b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "True Gym Coin",
  "contractName": "TrueGymCoin",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-10\n*/\n\npragma solidity ^0.4.24;\n\nlibrary SafeMath {\n    function mul(uint a, uint b) internal pure returns (uint) {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function sub(uint a, uint b) internal pure returns (uint) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint a, uint b) internal pure returns (uint) {\n        uint c = a + b;\n        assert(c>=a && c>=b);\n        return c;\n    }\n}\n\ncontract TrueGymCoin {\n    using SafeMath for uint;\n    // Public variables of the token\n    string constant public standard = \"ERC20\";\n    string constant public name = \"True Gym Coin\";\n    string constant public symbol = \"TGC\";\n    uint8 constant public decimals = 18;\n    uint _totalSupply = 1626666667e18;\n\n    address public generatorAddr;\n    address public icoAddr;\n    address public preicoAddr;\n    address public privatesellAddr;\n    address public companyAddr;\n    address public teamAddr;\n    address public bountyAddr;\n\n    // Array with all balances\n    mapping (address => uint) balances;\n    mapping (address => mapping (address => uint)) allowed;\n\n    event Transfer(address indexed from, address indexed to, uint value);\n    event Approval(address indexed _owner, address indexed spender, uint value);\n    event Burned(uint amount);\n\n    function balanceOf(address _owner) public view returns (uint balance) {\n        return balances[_owner];\n    }\n\n    // Returns the amount which _spender is still allowed to withdraw from _owner\n    function allowance(address _owner, address _spender) private view returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    // Get the total token supply\n    function totalSupply() public view returns (uint totSupply) {\n        totSupply = _totalSupply;\n    }\n\n    // Initializes contract with supply defined in constants\n    constructor(address _generatorAddr, address _icoAddr, address _preicoAddr, address _privatesellAddr, address _companyAddr, address _teamAddr, address _bountyAddr) public {\n        balances[_generatorAddr] = 1301333334e18; // 80%\n        balances[_icoAddr] = 130133333e18; // 8%\n        balances[_preicoAddr] = 65066666e18; // 4%\n        balances[_privatesellAddr] = 48800000e18; // 3%\n        balances[_companyAddr] = 48800000e18; // 3%\n        balances[_teamAddr] = 16266667e18; // 1%\n        balances[_bountyAddr] = 16266667e18; // 1%\n    }\n\n    // Send some of your tokens to a given address\n    function transfer(address _to, uint _value) public payable {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint _value) public returns(bool) {\n\n        uint _allowed = allowed[_from][msg.sender];\n        balances[_from] = balances[_from].sub(_value); // Subtract from the sender\n        balances[_to] = balances[_to].add(_value); // Add the same to the recipient\n        allowed[_from][msg.sender] = _allowed.sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    // Approve the passed address to spend the specified amount of tokens\n    // on behalf of msg.sender.\n    function approve(address _spender, uint _value) public returns (bool) {\n        //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function burn(uint _value) public {\n        balances[msg.sender].sub(_value);\n        _totalSupply.sub(_value);\n        emit Burned(_value);\n    }\n\n}",
  "bytecode": "60806040526b05418c10b6abb82ae7cc000060005534801561002057600080fd5b5060405160e0806108af8339810160409081528151602080840151838501516060860151608087015160a088015160c090980151600160a060020a03968716600090815260089096528786206b0434700d647cdc6a2f980000905593861685528685206a6ba4ce1e19002928340000905591851684528584206a35d267081c24bac06800009055841683528483206a285dcd4d0576e5e40000009081905590841683528483205593821681528281206a0d7499c8f7648883cc0000908190559190931683529120556107b8806100f76000396000f3006080604052600436106100f05763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630258758681146100f557806306fdde0314610126578063095ea7b3146101b05780631242f442146101e857806318160ddd146101fd57806323b872dd14610224578063313ce5671461024e57806342966c68146102795780634a5ff749146102935780635a3b7e42146102a85780636ce0c4d9146102bd57806370a08231146102d257806395d89b41146102f3578063a9059cbb14610308578063cdc0a2521461031f578063de9ea1ce14610334578063fb64e6b114610349575b600080fd5b34801561010157600080fd5b5061010a61035e565b60408051600160a060020a039092168252519081900360200190f35b34801561013257600080fd5b5061013b61036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017557818101518382015260200161015d565b50505050905090810190601f1680156101a25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101bc57600080fd5b506101d4600160a060020a03600435166024356103a4565b604080519115158252519081900360200190f35b3480156101f457600080fd5b5061010a610446565b34801561020957600080fd5b50610212610455565b60408051918252519081900360200190f35b34801561023057600080fd5b506101d4600160a060020a036004358116906024351660443561045b565b34801561025a57600080fd5b50610263610567565b6040805160ff9092168252519081900360200190f35b34801561028557600080fd5b5061029160043561056c565b005b34801561029f57600080fd5b5061010a6105d7565b3480156102b457600080fd5b5061013b6105e6565b3480156102c957600080fd5b5061010a61061d565b3480156102de57600080fd5b50610212600160a060020a036004351661062c565b3480156102ff57600080fd5b5061013b610647565b610291600160a060020a036004351660243561067e565b34801561032b57600080fd5b5061010a610729565b34801561034057600080fd5b5061010a610738565b34801561035557600080fd5b5061010a610747565b600554600160a060020a031681565b60408051808201909152600d81527f547275652047796d20436f696e00000000000000000000000000000000000000602082015281565b60008115806103d45750336000908152600960209081526040808320600160a060020a0387168452909152902054155b15156103df57600080fd5b336000818152600960209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600154600160a060020a031681565b60005490565b600160a060020a0383166000818152600960209081526040808320338452825280832054938352600890915281205490919061049d908463ffffffff61075616565b600160a060020a0380871660009081526008602052604080822093909355908616815220546104d2908463ffffffff61076816565b600160a060020a0385166000908152600860205260409020556104fb818463ffffffff61075616565b600160a060020a03808716600081815260096020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001949350505050565b601281565b3360009081526008602052604090205461058c908263ffffffff61075616565b506000546105a0908263ffffffff61075616565b506040805182815290517fd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e9181900360200190a150565b600654600160a060020a031681565b60408051808201909152600581527f4552433230000000000000000000000000000000000000000000000000000000602082015281565b600354600160a060020a031681565b600160a060020a031660009081526008602052604090205490565b60408051808201909152600381527f5447430000000000000000000000000000000000000000000000000000000000602082015281565b3360009081526008602052604090205461069e908263ffffffff61075616565b3360009081526008602052604080822092909255600160a060020a038416815220546106d0908263ffffffff61076816565b600160a060020a0383166000818152600860209081526040918290209390935580518481529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600454600160a060020a031681565b600754600160a060020a031681565b600254600160a060020a031681565b60008282111561076257fe5b50900390565b600082820183811080159061077d5750828110155b151561078557fe5b93925050505600a165627a7a7230582093c981320071562e45af2f906674036a3e4c35dbb1742c977fd0e4df0c3d671c0029000000000000000000000000d1e51dd0305da2a81231b81effa383b3a6416228000000000000000000000000088aa923198ca53db28a0e12712a36c5cbf0d033000000000000000000000000d6b637c9dadea9e4ec481addae16260dae86535d000000000000000000000000b3efa8cf686f320f0fbd7b4e4106f78eec88e46e000000000000000000000000b7a38a63002f60ff347a5bacb9d1ca84a803391e000000000000000000000000095f051682d979ff175e30b260874b7258c60d15000000000000000000000000200da47f0d3cf336aabd9787abebe40f6e4a76f6",
  "constructorArguments": "000000000000000000000000d1e51dd0305da2a81231b81effa383b3a6416228000000000000000000000000088aa923198ca53db28a0e12712a36c5cbf0d033000000000000000000000000d6b637c9dadea9e4ec481addae16260dae86535d000000000000000000000000b3efa8cf686f320f0fbd7b4e4106f78eec88e46e000000000000000000000000b7a38a63002f60ff347a5bacb9d1ca84a803391e000000000000000000000000095f051682d979ff175e30b260874b7258c60d15000000000000000000000000200da47f0d3cf336aabd9787abebe40f6e4a76f6"
}