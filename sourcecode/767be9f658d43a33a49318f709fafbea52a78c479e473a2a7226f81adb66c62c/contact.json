{
  "address": "0x70da15db5377ac51131c2fd0ade87ec543ca9482",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Token",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-04\n*/\n\npragma solidity ^0.4.18;\n \ncontract Token {\n    string public symbol = \"\";\n    string public name = \"\";\n    uint8 public constant decimals = 18;\n\tstring public constant ICOFactoryVersion = \"1.0\";\n    uint256 _totalSupply = 0;\n\tuint256 _oneEtherEqualsInWei = 0;\t\n\tuint256 _maxICOpublicSupply = 0;\n\tuint256 _ownerICOsupply = 0;\n\tuint256 _currentICOpublicSupply = 0;\n\tuint256 _blockICOdatetime = 0;\n\taddress _ICOfundsReceiverAddress = 0;\n\taddress _remainingTokensReceiverAddress = 0;\n    address owner = 0;\t\n    bool setupDone = false;\n\tbool isICOrunning = false;\n\tbool ICOstarted = false;\n\tuint256 ICOoverTimestamp = 0;\n   \n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\tevent Burn(address indexed _owner, uint256 _value);\n \n    mapping(address => uint256) balances;\n \n    mapping(address => mapping (address => uint256)) allowed;\n \n    function Token(address adr) public {\n        owner = adr;        \n    }\n\t\n\tfunction() public payable\n\t{\n\t\tif ((isICOrunning && _blockICOdatetime == 0) || (isICOrunning && _blockICOdatetime > 0 && now <= _blockICOdatetime))\n\t\t{\n\t\t\tuint256 _amount = ((msg.value * _oneEtherEqualsInWei) / 1000000000000000000);\n\t\t\t\n\t\t\tif (((_currentICOpublicSupply + _amount) > _maxICOpublicSupply) && _maxICOpublicSupply > 0) revert();\n\t\t\t\n\t\t\tif(!_ICOfundsReceiverAddress.send(msg.value)) revert();\t\t\t\t\t\n\t\t\t\n\t\t\t_currentICOpublicSupply += _amount;\n\t\t\t\n\t\t\tbalances[msg.sender] += _amount;\n\t\t\t\n\t\t\t_totalSupply += _amount;\t\t\t\n\t\t\t\n\t\t\tTransfer(this, msg.sender, _amount);\n\t\t}\n\t\telse\n\t\t{\n\t\t\trevert();\n\t\t}\n\t}\n   \n    function SetupToken(string tokenName, string tokenSymbol, uint256 oneEtherEqualsInWei, uint256 maxICOpublicSupply, uint256 ownerICOsupply, address remainingTokensReceiverAddress, address ICOfundsReceiverAddress, uint256 blockICOdatetime) public\n    {\n        if (msg.sender == owner && !setupDone)\n        {\n            symbol = tokenSymbol;\n            name = tokenName;\n\t\t\t_oneEtherEqualsInWei = oneEtherEqualsInWei;\n\t\t\t_maxICOpublicSupply = maxICOpublicSupply * 1000000000000000000;\t\t\t\t\t\t\t\t\t\n\t\t\tif (ownerICOsupply > 0)\n\t\t\t{\n\t\t\t\t_ownerICOsupply = ownerICOsupply * 1000000000000000000;\n\t\t\t\t_totalSupply = _ownerICOsupply;\n\t\t\t\tbalances[owner] = _totalSupply;\n\t\t\t\tTransfer(this, owner, _totalSupply);\n\t\t\t}\t\t\t\n\t\t\t_ICOfundsReceiverAddress = ICOfundsReceiverAddress;\n\t\t\tif (_ICOfundsReceiverAddress == 0) _ICOfundsReceiverAddress = owner;\n\t\t\t_remainingTokensReceiverAddress = remainingTokensReceiverAddress;\n\t\t\t_blockICOdatetime = blockICOdatetime;\t\t\t\n            setupDone = true;\n        }\n    }\n\t\n\tfunction StartICO() public returns (bool success)\n    {\n        if (msg.sender == owner && !ICOstarted && setupDone)\n        {\n            ICOstarted = true;\t\t\t\n\t\t\tisICOrunning = true;\t\t\t\n        }\n\t\telse\n\t\t{\n\t\t\trevert();\n\t\t}\n\t\treturn true;\n    }\n\t\n\tfunction StopICO() public returns (bool success)\n    {\n        if (msg.sender == owner && isICOrunning)\n        {            \n\t\t\tif (_remainingTokensReceiverAddress != 0 && _maxICOpublicSupply > 0)\n\t\t\t{\n\t\t\t\tuint256 _remainingAmount = _maxICOpublicSupply - _currentICOpublicSupply;\n\t\t\t\tif (_remainingAmount > 0)\n\t\t\t\t{\n\t\t\t\t\tbalances[_remainingTokensReceiverAddress] += _remainingAmount;\n\t\t\t\t\t_totalSupply += _remainingAmount;\n\t\t\t\t\tTransfer(this, _remainingTokensReceiverAddress, _remainingAmount);\t\n\t\t\t\t}\n\t\t\t}\t\t\t\t\n\t\t\tisICOrunning = false;\t\n\t\t\tICOoverTimestamp = now;\n        }\n\t\telse\n\t\t{\n\t\t\trevert();\n\t\t}\n\t\treturn true;\n    }\n\t\n\tfunction BurnTokens(uint256 amountInWei) public returns (bool success)\n    {\n\t\tif (balances[msg.sender] >= amountInWei)\n\t\t{\n\t\t\tbalances[msg.sender] -= amountInWei;\n\t\t\t_totalSupply -= amountInWei;\n\t\t\tBurn(msg.sender, amountInWei);\n\t\t\tTransfer(msg.sender, 0, amountInWei);\n\t\t}\n\t\telse\n\t\t{\n\t\t\trevert();\n\t\t}\n\t\treturn true;\n    }\n \n    function totalSupply() public constant returns (uint256 totalSupplyValue) {        \n        return _totalSupply;\n    }\n\t\n\tfunction OneEtherEqualsInWei() public constant returns (uint256 oneEtherEqualsInWei) {        \n        return _oneEtherEqualsInWei;\n    }\n\t\n\tfunction MaxICOpublicSupply() public constant returns (uint256 maxICOpublicSupply) {        \n        return _maxICOpublicSupply;\n    }\n\t\n\tfunction OwnerICOsupply() public constant returns (uint256 ownerICOsupply) {        \n        return _ownerICOsupply;\n    }\n\t\n\tfunction CurrentICOpublicSupply() public constant returns (uint256 currentICOpublicSupply) {        \n        return _currentICOpublicSupply;\n    }\n\t\n\tfunction RemainingTokensReceiverAddress() public constant returns (address remainingTokensReceiverAddress) {        \n        return _remainingTokensReceiverAddress;\n    }\n\t\n\tfunction ICOfundsReceiverAddress() public constant returns (address ICOfundsReceiver) {        \n        return _ICOfundsReceiverAddress;\n    }\n\t\n\tfunction Owner() public constant returns (address ownerAddress) {        \n        return owner;\n    }\n\t\n\tfunction SetupDone() public constant returns (bool setupDoneFlag) {        \n        return setupDone;\n    }\n    \n\tfunction IsICOrunning() public constant returns (bool isICOrunningFalg) {        \n        return isICOrunning;\n    }\n\t\n\tfunction IsICOstarted() public constant returns (bool isICOstartedFlag) {        \n        return ICOstarted;\n    }\n\t\n\tfunction ICOoverTimeStamp() public constant returns (uint256 ICOoverTimestampCheck) {        \n        return ICOoverTimestamp;\n    }\n\t\n\tfunction BlockICOdatetime() public constant returns (uint256 blockStopICOdate) {        \n        return _blockICOdatetime;\n    }\n\t\n\tfunction TimeNow() public constant returns (uint256 timenow) {        \n        return now;\n    }\n\t \n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n \n    function transfer(address _to, uint256 _amount) public returns (bool success) {\n        if (balances[msg.sender] >= _amount\n            && _amount > 0\n            && balances[_to] + _amount > balances[_to]) {\n            balances[msg.sender] -= _amount;\n            balances[_to] += _amount;\n            Transfer(msg.sender, _to, _amount);\n            return true;\n        } else {\n            return false;\n        }\n    }\n \n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) public returns (bool success) {\n        if (balances[_from] >= _amount\n            && allowed[_from][msg.sender] >= _amount\n            && _amount > 0\n            && balances[_to] + _amount > balances[_to]) {\n            balances[_from] -= _amount;\n            allowed[_from][msg.sender] -= _amount;\n            balances[_to] += _amount;\n            Transfer(_from, _to, _amount);\n            return true;\n        } else {\n            return false;\n        }\n    }\n \n    function approve(address _spender, uint256 _amount) public returns (bool success) {\n        allowed[msg.sender][_spender] = _amount;\n        Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n \n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupplyValue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OneEtherEqualsInWei\",\"outputs\":[{\"name\":\"oneEtherEqualsInWei\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOoverTimeStamp\",\"outputs\":[{\"name\":\"ICOoverTimestampCheck\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amountInWei\",\"type\":\"uint256\"}],\"name\":\"BurnTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaxICOpublicSupply\",\"outputs\":[{\"name\":\"maxICOpublicSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OwnerICOsupply\",\"outputs\":[{\"name\":\"ownerICOsupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StopICO\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsICOrunning\",\"outputs\":[{\"name\":\"isICOrunningFalg\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOfundsReceiverAddress\",\"outputs\":[{\"name\":\"ICOfundsReceiver\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StartICO\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOFactoryVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"oneEtherEqualsInWei\",\"type\":\"uint256\"},{\"name\":\"maxICOpublicSupply\",\"type\":\"uint256\"},{\"name\":\"ownerICOsupply\",\"type\":\"uint256\"},{\"name\":\"remainingTokensReceiverAddress\",\"type\":\"address\"},{\"name\":\"ICOfundsReceiverAddress\",\"type\":\"address\"},{\"name\":\"blockICOdatetime\",\"type\":\"uint256\"}],\"name\":\"SetupToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsICOstarted\",\"outputs\":[{\"name\":\"isICOstartedFlag\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CurrentICOpublicSupply\",\"outputs\":[{\"name\":\"currentICOpublicSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"name\":\"ownerAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeNow\",\"outputs\":[{\"name\":\"timenow\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BlockICOdatetime\",\"outputs\":[{\"name\":\"blockStopICOdate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SetupDone\",\"outputs\":[{\"name\":\"setupDoneFlag\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RemainingTokensReceiverAddress\",\"outputs\":[{\"name\":\"remainingTokensReceiverAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"adr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "",
  "constructorArguments": "0000000000000000000000001d5d0ded021a1b2592532d4f1426b48b866392e5"
}