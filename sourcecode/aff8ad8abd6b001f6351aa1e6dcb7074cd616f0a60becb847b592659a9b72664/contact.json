{
  "address": "0x05728965b7090e80c615f2dfc9e62f88e1d7cf1d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BalanceOracle",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-22\n*/\n\npragma solidity >=0.4.22 <0.6.0;\ninterface ERC20 {\n    function balanceOf(address owner) external view returns (uint256);\n}\ncontract BalanceOracle {\n    \n    function exploreBalances(address[] calldata users) external view returns(uint256[] memory balances) {\n        balances = new uint256[](users.length);\n        for(uint i = 0; i < users.length; i++) {\n            balances[i] = users[i].balance;\n        }\n    }\n    \n    function erc20Balances(address _token, address[] calldata users) external view returns(uint256[] memory balances) {\n        ERC20 erc20 = ERC20(_token);\n        balances = new uint256[](users.length);\n        for(uint i = 0; i < users.length; i++) {\n            balances[i] = erc20.balanceOf(users[i]);\n        }\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b50610330806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063277e5b771461003b5780638afd0b75146100fb575b600080fd5b6100ab6004803603602081101561005157600080fd5b81019060208101813564010000000081111561006c57600080fd5b82018360208201111561007e57600080fd5b803590602001918460208302840111640100000000831117156100a057600080fd5b50909250905061017b565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100e75781810151838201526020016100cf565b505050509050019250505060405180910390f35b6100ab6004803603604081101561011157600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561013c57600080fd5b82018360208201111561014e57600080fd5b8035906020019184602083028401116401000000008311171561017057600080fd5b509092509050610201565b6040805182815260208084028201019091526060908280156101a7578160200160208202803883390190505b50905060005b828110156101fa578383828181106101c157fe5b905060200201356001600160a01b03166001600160a01b0316318282815181106101e757fe5b60209081029190910101526001016101ad565b5092915050565b604080518281526020808402820101909152606090849083801561022f578160200160208202803883390190505b50915060005b838110156102fb57816001600160a01b03166370a0823186868481811061025857fe5b905060200201356001600160a01b03166040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156102ae57600080fd5b505afa1580156102c2573d6000803e3d6000fd5b505050506040513d60208110156102d857600080fd5b505183518490839081106102e857fe5b6020908102919091010152600101610235565b5050939250505056fea165627a7a723058205411d585db24eeba7bb9c0570039da01c8ccf15e720fb557b134697629d7399a0029"
}