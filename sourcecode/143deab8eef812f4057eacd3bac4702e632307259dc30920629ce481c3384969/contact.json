{
  "address": "0xbc63f11d42860d7e41a4ce856581f0ce15ac4008",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DAILYC",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-13\n*/\n\npragma solidity ^0.4.16;\n\ncontract SafeMath {\n    function safeMul(uint a, uint b) pure internal returns (uint) {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeSub(uint a, uint b) pure internal returns (uint) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint a, uint b) pure internal returns (uint) {\n        uint c = a + b;\n        assert(c >= a && c >= b);\n        return c;\n    }\n}\n\ncontract owned {\n    address public owner;\n\n    function owned() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address newOwner) onlyOwner public {\n        owner = newOwner;\n    }\n}\n\ncontract DAILYC is owned, SafeMath {\n\n    string public name;\n    string public symbol;\n    uint public decimals = 8;\n    uint public totalSupply;\n\n    mapping (address => uint) public balanceOf;\n    mapping (address => mapping (address => uint)) public allowance;\n    mapping (address => uint) public lockInfo;\n\n    uint constant valueTotal = 200 * 10000 * 10000 * 10 ** 8;\n    uint constant valueSale = valueTotal / 100 * 1;\n    uint constant valueTeam = valueTotal / 100 * 99;\n\n    uint public minEth = 0.1 ether;\n\n    uint public maxEth = 1000 ether;\n\n\tuint256 public buyPrice = 5000;\n    uint256 public sellPrice = 1;\n    \n    bool public buyTradeConfir = false;\n    bool public sellTradeConfir = false;\n    \n    uint public saleQuantity = 0;\n\n    uint public ethQuantity = 0;\n\n    modifier validAddress(address _address) {\n        assert(0x0 != _address);\n        _;\n    }\n\n    modifier validEth {\n        assert(msg.value >= minEth && msg.value <= maxEth);\n        _;\n    }\n\n    modifier validPeriod {\n        assert(buyTradeConfir);\n        _;\n    }\n\n    modifier validQuantity {\n        assert(valueSale >= saleQuantity);\n        _;\n    }\n\n\n    function DAILYC() public\n    {\n    \ttotalSupply = valueTotal;\n    \t//buy\n    \tbalanceOf[this] = valueSale;\n        Transfer(0x0, this, valueSale);\n        // owner\n        balanceOf[msg.sender] = valueTeam;\n        Transfer(0x0, msg.sender, valueTeam);\n    \tname = 'Coindaily';\n    \tsymbol = 'DAILY'; \n    }\n\n    function transfer(address _to, uint _value) public validAddress(_to) returns (bool success)\n    {\n        require(balanceOf[msg.sender] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        require(validTransfer(msg.sender, _value));\n        balanceOf[msg.sender] -= _value;\n        balanceOf[_to] += _value;\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferInner(address _to, uint _value) private returns (bool success)\n    {\n        balanceOf[this] -= _value;\n        balanceOf[_to] += _value;\n        Transfer(this, _to, _value);\n        return true;\n    }\n\n\n    function transferFrom(address _from, address _to, uint _value) public validAddress(_from) validAddress(_to) returns (bool success)\n    {\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        require(allowance[_from][msg.sender] >= _value);\n        require(validTransfer(_from, _value));\n        balanceOf[_to] += _value;\n        balanceOf[_from] -= _value;\n        allowance[_from][msg.sender] -= _value;\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint _value) public validAddress(_spender) returns (bool success)\n    {\n        require(_value == 0 || allowance[msg.sender][_spender] == 0);\n        allowance[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function lock(address _to, uint _value) private validAddress(_to)\n    {\n        require(_value > 0);\n        require(lockInfo[_to] + _value <= balanceOf[_to]);\n        lockInfo[_to] += _value;\n    }\n\n    function validTransfer(address _from, uint _value) private constant returns (bool)\n    {\n        if (_value == 0)\n            return false;\n\n        return lockInfo[_from] + _value <= balanceOf[_from];\n    }\n\n\n    function () public payable\n    {\n        buy();\n    }\n\n    function buy() public payable validEth validPeriod validQuantity\n    {\n        uint eth = msg.value;\n\n        uint quantity = eth * buyPrice / 10 ** 10;\n\n        uint leftQuantity = safeSub(valueSale, saleQuantity);\n        if (quantity > leftQuantity) {\n            quantity = leftQuantity;\n        }\n\n        saleQuantity = safeAdd(saleQuantity, quantity);\n        ethQuantity = safeAdd(ethQuantity, eth);\n\n        require(transferInner(msg.sender, quantity));\n\n        lock(msg.sender, quantity);\n\n        Buy(msg.sender, eth, quantity);\n\n    }\n\n    function sell(uint256 amount) public {\n\t\tif(sellTradeConfir){\n\t\t\trequire(this.balance >= amount * sellPrice / 10000);\n\t\t\ttransferFrom(msg.sender, this, amount);\n\t\t\tmsg.sender.transfer(amount * sellPrice / 10000);\n\t\t}\n    }\n    \n    function burn(uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);\n        balanceOf[msg.sender] -= _value;\n        totalSupply -= _value;\n        Burn(msg.sender, _value);\n        return true;\n    }\n    \n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] >= _value);\n        require(_value <= allowance[_from][msg.sender]);\n        balanceOf[_from] -= _value;\n        allowance[_from][msg.sender] -= _value;\n        totalSupply -= _value;\n        Burn(_from, _value);\n        return true;\n    }\n    \n    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner public {\n        sellPrice = newSellPrice;\n        buyPrice = newBuyPrice;\n    }\n    \n    function starBuy() public onlyOwner returns (bool)\n\t{\n\t    buyTradeConfir = true;\n\t    StarBuy();\n\t    return true;\n\t}\n    \n    function stopBuy() public onlyOwner returns (bool)\n    {\n        buyTradeConfir = false;\n        StopBuy();\n        return true;\n    }\n    \n    function starSell() public onlyOwner returns (bool)\n\t{\n\t    sellTradeConfir = true;\n\t    StarSell();\n\t    return true;\n\t}\n    \n    function stopSell() public onlyOwner returns (bool)\n\t{\n\t    sellTradeConfir = false;\n\t    StopSell();\n\t    return true;\n\t}\n\n    event Transfer(address indexed _from, address indexed _to, uint _value);\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\n\n    event Buy(address indexed sender, uint eth, uint token);\n    event Burn(address indexed from, uint256 value);\n    event StopSell();\n    event StopBuy();\n    event StarSell();\n    event StarBuy();\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyTradeConfir\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellTradeConfir\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopSell\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"starSell\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethQuantity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"starBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleQuantity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"StopSell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"StopBuy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"StarSell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"StarBuy\",\"type\":\"event\"}]",
  "bytecode": "60606040526008600381905567016345785d8a00009055683635c9adc5dea00000600955611388600a556001600b55600c805461ffff191690556000600d819055600e5534156200004f57600080fd5b60008054600160a060020a03191633600160a060020a03908116919091178255671bc16d674ec8000060045530168082526005602052604080832066470de4df82000090819055919291600080516020620011fb833981519152915190815260200160405180910390a3600160a060020a033316600081815260056020526040808220671b7a5f826f46000090819055600080516020620011fb833981519152915190815260200160405180910390a360408051908101604052600981527f436f696e6461696c790000000000000000000000000000000000000000000000602082015260019080516200014892916020019062000199565b5060408051908101604052600581527f4441494c59000000000000000000000000000000000000000000000000000000602082015260029080516200019292916020019062000199565b506200023e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001dc57805160ff19168380011785556200020c565b828001600101855582156200020c579182015b828111156200020c578251825591602001919060010190620001ef565b506200021a9291506200021e565b5090565b6200023b91905b808211156200021a576000815560010162000225565b90565b610fad806200024e6000396000f3006060604052600436106101745763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305fefda7811461017e57806306fdde0314610197578063095ea7b31461022157806318160ddd146102575780631d9d1bdc1461027c57806323b872dd1461028f578063313ce567146102b757806342966c68146102ca57806346e3cb1a146102e0578063493a7209146102f35780634b7503341461030657806354fc85ac1461031957806361aebe591461032c5780636aa31b1f1461033f5780636bd3b87c1461035257806370a082311461037157806374eb936b1461039057806379cc6790146103a35780638620410b146103c55780638da5cb5b146103d857806395d89b4114610407578063a6f2ae3a14610174578063a9059cbb1461041a578063cdd2ef0c1461043c578063dd62ed3e1461044f578063e336e01d14610474578063e4849b3214610487578063f1fb3ace1461049d578063f2fde38b146104b0575b61017c6104cf565b005b341561018957600080fd5b61017c6004356024356105d2565b34156101a257600080fd5b6101aa6105f8565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101e65780820151838201526020016101ce565b50505050905090810190601f1680156102135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561022c57600080fd5b610243600160a060020a0360043516602435610696565b604051901515815260200160405180910390f35b341561026257600080fd5b61026a610750565b60405190815260200160405180910390f35b341561028757600080fd5b610243610756565b341561029a57600080fd5b610243600160a060020a036004358116906024351660443561075f565b34156102c257600080fd5b61026a6108ad565b34156102d557600080fd5b6102436004356108b3565b34156102eb57600080fd5b61024361093e565b34156102fe57600080fd5b61024361094c565b341561031157600080fd5b61026a6109a4565b341561032457600080fd5b61026a6109aa565b341561033757600080fd5b6102436109b0565b341561034a57600080fd5b610243610a09565b341561035d57600080fd5b61026a600160a060020a0360043516610a66565b341561037c57600080fd5b61026a600160a060020a0360043516610a78565b341561039b57600080fd5b61026a610a8a565b34156103ae57600080fd5b610243600160a060020a0360043516602435610a90565b34156103d057600080fd5b61026a610b6d565b34156103e357600080fd5b6103eb610b73565b604051600160a060020a03909116815260200160405180910390f35b341561041257600080fd5b6101aa610b82565b341561042557600080fd5b610243600160a060020a0360043516602435610bed565b341561044757600080fd5b610243610cd3565b341561045a57600080fd5b61026a600160a060020a0360043581169060243516610d2e565b341561047f57600080fd5b61026a610d4b565b341561049257600080fd5b61017c600435610d51565b34156104a857600080fd5b61026a610dd4565b34156104bb57600080fd5b61017c600160a060020a0360043516610dda565b600080600060085434101580156104e857506009543411155b15156104f057fe5b600c5460ff1615156104fe57fe5b600d5466470de4df820000101561051157fe5b600a543493506402540be40090840204915061053d6064671bc16d674ec8000004600102600d54610e24565b90508082111561054b578091505b610557600d5483610e36565b600d55600e546105679084610e36565b600e556105743383610e5a565b151561057f57600080fd5b6105893383610ecb565b33600160a060020a03167f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed848460405191825260208201526040908101905180910390a2505050565b60005433600160a060020a039081169116146105ed57600080fd5b600b91909155600a55565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561068e5780601f106106635761010080835404028352916020019161068e565b820191906000526020600020905b81548152906001019060200180831161067157829003601f168201915b505050505081565b600082600160a060020a03811615156106ab57fe5b8215806106db5750600160a060020a03338116600090815260066020908152604080832093881683529290522054155b15156106e657600080fd5b600160a060020a03338116600081815260066020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a35060019392505050565b60045481565b600c5460ff1681565b600083600160a060020a038116151561077457fe5b83600160a060020a038116151561078757fe5b600160a060020a038616600090815260056020526040902054849010156107ad57600080fd5b600160a060020a03851660009081526005602052604090205484810110156107d457600080fd5b600160a060020a03808716600090815260066020908152604080832033909416835292905220548490101561080857600080fd5b6108128685610f40565b151561081d57600080fd5b600160a060020a03808616600081815260056020908152604080832080548a0190558a851680845281842080548b90039055600683528184203390961684529490915290819020805488900390559091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9087905190815260200160405180910390a350600195945050505050565b60035481565b600160a060020a033316600090815260056020526040812054829010156108d957600080fd5b600160a060020a03331660008181526005602052604090819020805485900390556004805485900390557fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59084905190815260200160405180910390a2506001919050565b600c54610100900460ff1681565b6000805433600160a060020a0390811691161461096857600080fd5b600c805460ff191690557f844683c1ea4cf0336c86600292e643a5510f35bf8dad352c1fce271e324dd91660405160405180910390a150600190565b600b5481565b60095481565b6000805433600160a060020a039081169116146109cc57600080fd5b600c805461ff00191690557fbb1285754994ee65d18ec627753040c311464edda823f96678d83006790e8f1760405160405180910390a150600190565b6000805433600160a060020a03908116911614610a2557600080fd5b600c805461ff0019166101001790557fb31fe38821f375fa1ccb0b044578de6e4fef6f44ced553489bb82e8edf8f87d760405160405180910390a150600190565b60076020526000908152604090205481565b60056020526000908152604090205481565b600e5481565b600160a060020a03821660009081526005602052604081205482901015610ab657600080fd5b600160a060020a0380841660009081526006602090815260408083203390941683529290522054821115610ae957600080fd5b600160a060020a038084166000818152600560209081526040808320805488900390556006825280832033909516835293905282902080548590039055600480548590039055907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59084905190815260200160405180910390a25060015b92915050565b600a5481565b600054600160a060020a031681565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561068e5780601f106106635761010080835404028352916020019161068e565b600082600160a060020a0381161515610c0257fe5b600160a060020a03331660009081526005602052604090205483901015610c2857600080fd5b600160a060020a0384166000908152600560205260409020548381011015610c4f57600080fd5b610c593384610f40565b1515610c6457600080fd5b600160a060020a033381166000818152600560205260408082208054889003905592871680825290839020805487019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a35060019392505050565b6000805433600160a060020a03908116911614610cef57600080fd5b600c805460ff191660011790557fabd9326cc0e24369ae92cc48da3936caf28772014413b939924b65260c84578d60405160405180910390a150600190565b600660209081526000928352604080842090915290825290205481565b600d5481565b600c54610100900460ff1615610dd157600b5461271090820204600160a060020a033016311015610d8157600080fd5b610d8c33308361075f565b5033600160a060020a03166108fc612710600b548402811515610dab57fe5b049081150290604051600060405180830381858888f193505050501515610dd157600080fd5b50565b60085481565b60005433600160a060020a03908116911614610df557600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610e3057fe5b50900390565b6000828201838110801590610e4b5750828110155b1515610e5357fe5b9392505050565b600160a060020a033081166000818152600560205260408082208054869003905592851680825283822080548601905590929091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b81600160a060020a0381161515610ede57fe5b60008211610eeb57600080fd5b600160a060020a03831660009081526005602090815260408083205460079092529091205483011115610f1d57600080fd5b50600160a060020a03909116600090815260076020526040902080549091019055565b6000811515610f5157506000610b67565b50600160a060020a03821660009081526005602090815260408083205460079092529091205482011115929150505600a165627a7a7230582044fc5a6e43e677ca7a18db8224e64437ca7c86377c5c0c4aa6dec5a696b338b80029ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
  "constructorArguments": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
}