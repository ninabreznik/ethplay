{
  "address": "0xbad1a84d8bb34cbb20a0884fa2b9714323530558",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "LMA",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-17\n*/\n\npragma solidity ^0.4.25;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n  \n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n  \n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    \n  address public owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n}\n\n\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic, Ownable {\n    \n  using SafeMath for uint256;\n  \n  event TokensBurned(address from, uint256 value);\n  event TokensMinted(address to, uint256 value);\n\n  mapping(address => uint256) balances;\n  mapping(address => bool) blacklisted;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n  \n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(!blacklisted[msg.sender] && !blacklisted[_to]);\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n  \n  \n  \n  function addToBlacklist(address[] _addrs) public onlyOwner returns(bool) {\n      for(uint i=0; i < _addrs.length; i++) {\n          blacklisted[_addrs[i]] = true;\n      }\n      return true;\n  }\n  \n  \n  function removeFromBlacklist(address _addr) public onlyOwner returns(bool) {\n      require(blacklisted[_addr]);\n      blacklisted[_addr] = false;\n      return true;\n  }\n  \n\n}\n\n\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(!blacklisted[_from] && !blacklisted[_to] && !blacklisted[msg.sender]);\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    require(!blacklisted[_spender] && !blacklisted[msg.sender]);\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n  \n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n  \n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n}\n\n\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n    \n  event Pause();\n  event Unpause();\n\n  bool public paused = true;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused\n   * or when the owner is invoking the function.\n   */\n  modifier whenNotPaused() {\n    require(!paused || msg.sender == owner);\n    _;\n  }\n  \n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n  \n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n\n\n\n/**\n * @title Pausable token\n * @dev StandardToken modified with pausable transfers.\n **/\ncontract PausableToken is StandardToken, Pausable {\n\n  function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transfer(_to, _value);\n  }\n\n\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transferFrom(_from, _to, _value);\n  }\n  \n\n  function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n    return super.approve(_spender, _value);\n  }\n  \n\n  function increaseApproval(address _spender, uint _addedValue) public whenNotPaused returns (bool success) {\n    return super.increaseApproval(_spender, _addedValue);\n  }\n  \n\n  function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool success) {\n    return super.decreaseApproval(_spender, _subtractedValue);\n  }\n}\n\n\n\n\ncontract LMA is PausableToken {\n    \n    string public  name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 public totalSupply;\n\n    /**\n     * Constructor initializes the name, symbol, decimals and total \n     * supply of the token. The owner of the contract which is initially \n     * the ICO contract will receive the entire total supply. \n     * */\n    constructor() public {\n        name = \"Lamoneda\";\n        symbol = \"LMA\";\n        decimals = 18;\n        totalSupply = 500000000e18;\n        balances[owner] = totalSupply;\n        emit Transfer(address(this), owner, totalSupply);\n    }\n    \n    function burnFrom(address _addr, uint256 _value) public onlyOwner returns(bool) {\n        require(balanceOf(_addr) >= _value);\n        balances[_addr] = balances[_addr].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        emit Transfer(_addr, 0x0, _value);\n        emit TokensBurned(_addr, _value);\n        return true;\n    }\n  \n  \n    function mintTo(address _addr, uint256 _value) public onlyOwner returns(bool) {\n        require(!blacklisted[_addr]);\n        balances[_addr] = balances[_addr].add(_value);\n        totalSupply = totalSupply.add(_value);\n        emit Transfer(address(this), _addr, _value);\n        emit TokensMinted(_addr, _value);\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"}],\"name\":\"addToBlacklist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040526005805460ff191660011790553480156200001e57600080fd5b5060008054600160a060020a031916331790556040805180820190915260088082527f4c616d6f6e656461000000000000000000000000000000000000000000000000602090920191825262000077916006916200013f565b506040805180820190915260038082527f4c4d4100000000000000000000000000000000000000000000000000000000006020909201918252620000be916007916200013f565b506008805460ff191660121790556b019d971e4fe8401e74000000600981905560008054600160a060020a039081168252600160209081526040808420859055925483519485529251929091169230927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3620001e4565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200018257805160ff1916838001178555620001b2565b82800160010185558215620001b2579182015b82811115620001b257825182559160200191906001019062000195565b50620001c0929150620001c4565b5090565b620001e191905b80821115620001c05760008155600101620001cb565b90565b6110b980620001f46000396000f3006080604052600436106101115763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610116578063095ea7b3146101a057806318160ddd146101d857806323b872dd146101ff578063313ce567146102295780633f4ba83a14610254578063449a52f81461026b578063537df3b61461028f5780635c975abb146102b057806366188463146102c557806370a08231146102e957806379cc67901461030a5780638456cb591461032e5780638da5cb5b14610343578063935eb35f1461037457806395d89b41146103c9578063a9059cbb146103de578063d73dd62314610402578063dd62ed3e14610426578063f2fde38b1461044d575b600080fd5b34801561012257600080fd5b5061012b61046e565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016557818101518382015260200161014d565b50505050905090810190601f1680156101925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ac57600080fd5b506101c4600160a060020a03600435166024356104fc565b604080519115158252519081900360200190f35b3480156101e457600080fd5b506101ed610537565b60408051918252519081900360200190f35b34801561020b57600080fd5b506101c4600160a060020a036004358116906024351660443561053d565b34801561023557600080fd5b5061023e61057a565b6040805160ff9092168252519081900360200190f35b34801561026057600080fd5b50610269610583565b005b34801561027757600080fd5b506101c4600160a060020a03600435166024356105e0565b34801561029b57600080fd5b506101c4600160a060020a03600435166106f1565b3480156102bc57600080fd5b506101c4610755565b3480156102d157600080fd5b506101c4600160a060020a036004351660243561075e565b3480156102f557600080fd5b506101ed600160a060020a0360043516610792565b34801561031657600080fd5b506101c4600160a060020a03600435166024356107ad565b34801561033a57600080fd5b506102696108ae565b34801561034f57600080fd5b50610358610924565b60408051600160a060020a039092168252519081900360200190f35b34801561038057600080fd5b50604080516020600480358082013583810280860185019096528085526101c4953695939460249493850192918291850190849080828437509497506109339650505050505050565b3480156103d557600080fd5b5061012b6109b1565b3480156103ea57600080fd5b506101c4600160a060020a0360043516602435610a0c565b34801561040e57600080fd5b506101c4600160a060020a0360043516602435610a40565b34801561043257600080fd5b506101ed600160a060020a0360043581169060243516610a74565b34801561045957600080fd5b50610269600160a060020a0360043516610a9f565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104f45780601f106104c9576101008083540402835291602001916104f4565b820191906000526020600020905b8154815290600101906020018083116104d757829003601f168201915b505050505081565b60055460009060ff16158061051b5750600054600160a060020a031633145b151561052657600080fd5b6105308383610b33565b9392505050565b60095481565b60055460009060ff16158061055c5750600054600160a060020a031633145b151561056757600080fd5b610572848484610bde565b949350505050565b60085460ff1681565b600054600160a060020a0316331461059a57600080fd5b60055460ff1615156105ab57600080fd5b6005805460ff191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b60008054600160a060020a031633146105f857600080fd5b600160a060020a03831660009081526002602052604090205460ff161561061e57600080fd5b600160a060020a038316600090815260016020526040902054610647908363ffffffff610dac16565b600160a060020a038416600090815260016020526040902055600954610673908363ffffffff610dac16565b600955604080518381529051600160a060020a03851691309160008051602061106e8339815191529181900360200190a360408051600160a060020a03851681526020810184905281517f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273929181900390910190a150600192915050565b60008054600160a060020a0316331461070957600080fd5b600160a060020a03821660009081526002602052604090205460ff16151561073057600080fd5b50600160a060020a03166000908152600260205260409020805460ff19169055600190565b60055460ff1681565b60055460009060ff16158061077d5750600054600160a060020a031633145b151561078857600080fd5b6105308383610dbf565b600160a060020a031660009081526001602052604090205490565b60008054600160a060020a031633146107c557600080fd5b816107cf84610792565b10156107da57600080fd5b600160a060020a038316600090815260016020526040902054610803908363ffffffff610eaf16565b600160a060020a03841660009081526001602052604090205560095461082f908363ffffffff610eaf16565b600955604080518381529051600091600160a060020a0386169160008051602061106e8339815191529181900360200190a360408051600160a060020a03851681526020810184905281517ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6929181900390910190a150600192915050565b600054600160a060020a031633146108c557600080fd5b60055460ff1615806108e15750600054600160a060020a031633145b15156108ec57600080fd5b6005805460ff191660011790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600054600160a060020a031681565b600080548190600160a060020a0316331461094d57600080fd5b5060005b82518110156109a857600160026000858481518110151561096e57fe5b602090810291909101810151600160a060020a03168252810191909152604001600020805460ff1916911515919091179055600101610951565b50600192915050565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104f45780601f106104c9576101008083540402835291602001916104f4565b60055460009060ff161580610a2b5750600054600160a060020a031633145b1515610a3657600080fd5b6105308383610ec1565b60055460009060ff161580610a5f5750600054600160a060020a031633145b1515610a6a57600080fd5b6105308383610fd4565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205490565b600054600160a060020a03163314610ab657600080fd5b600160a060020a0381161515610acb57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03821660009081526002602052604081205460ff16158015610b6c57503360009081526002602052604090205460ff16155b1515610b7757600080fd5b336000818152600460209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600160a060020a03831660009081526002602052604081205460ff16158015610c205750600160a060020a03831660009081526002602052604090205460ff16155b8015610c3c57503360009081526002602052604090205460ff16155b1515610c4757600080fd5b600160a060020a0383161515610c5c57600080fd5b600160a060020a038416600090815260016020526040902054821115610c8157600080fd5b600160a060020a0384166000908152600460209081526040808320338452909152902054821115610cb157600080fd5b600160a060020a038416600090815260016020526040902054610cda908363ffffffff610eaf16565b600160a060020a038086166000908152600160205260408082209390935590851681522054610d0f908363ffffffff610dac16565b600160a060020a038085166000908152600160209081526040808320949094559187168152600482528281203382529091522054610d53908363ffffffff610eaf16565b600160a060020a038086166000818152600460209081526040808320338452825291829020949094558051868152905192871693919260008051602061106e833981519152929181900390910190a35060019392505050565b81810182811015610db957fe5b92915050565b336000908152600460209081526040808320600160a060020a038616845290915281205480831115610e1457336000908152600460209081526040808320600160a060020a0388168452909152812055610e49565b610e24818463ffffffff610eaf16565b336000908152600460209081526040808320600160a060020a03891684529091529020555b336000818152600460209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600082821115610ebb57fe5b50900390565b3360009081526002602052604081205460ff16158015610efa5750600160a060020a03831660009081526002602052604090205460ff16155b1515610f0557600080fd5b600160a060020a0383161515610f1a57600080fd5b33600090815260016020526040902054821115610f3657600080fd5b33600090815260016020526040902054610f56908363ffffffff610eaf16565b3360009081526001602052604080822092909255600160a060020a03851681522054610f88908363ffffffff610dac16565b600160a060020a03841660008181526001602090815260409182902093909355805185815290519192339260008051602061106e8339815191529281900390910190a350600192915050565b336000908152600460209081526040808320600160a060020a0386168452909152812054611008908363ffffffff610dac16565b336000818152600460209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a3506001929150505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820eed27188f95f68178608c0498e343c01e332256497bcf8e7e627943d3c1f966c0029"
}