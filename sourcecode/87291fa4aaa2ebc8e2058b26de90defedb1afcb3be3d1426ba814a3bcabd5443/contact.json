{
  "address": "0x24eeb54a34d24d4a4baa1b1379928f7978951aca",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "GPYX",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-02\n*/\n\npragma solidity ^0.4.24;\n\n// ----------------------------------------------------------------------------\n// 'GPYX' token contract\n//\n// Deployed to : 0x6610F23DfC2a3DD959460c8EC04260629F55D28D\n// Symbol      : GPYX\n// Name        : PyrexCoin Platform service token\n// Total supply: 10000000\n// Decimals    : 18\n//\n// Enjoy.\n//\n// (c) by ILIK. \n// ----------------------------------------------------------------------------\n\n\n// ----------------------------------------------------------------------------\n// Safe maths\n// ----------------------------------------------------------------------------\ninterface tokenRecipient {function receiveApproval (address _from, uint256 _value, address _token, bytes _extradata) external;}\ncontract owned {\n    address public owner;\n    \n    constructor()public {\n        owner = msg.sender;\n    }\n    \n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n        \n    }\n    function transferOwnership (address newOwner)public onlyOwner {\n        owner = newOwner;\n    }\n    \n}\ncontract GPYX is owned{\n string public Name;\n string public Symbol;\n uint8 public decimals = 18;  \n uint256 public totalSupply;\n mapping (address => uint256) public balanceOf;\n mapping(address => mapping(address=> uint256)) public allowance;\n mapping(address => bool) public frozenAccount;\n \n \n event Transfer ( address indexed from, address indexed to, uint256 value);\n event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n event Burn(address indexed from, uint256 value);\n event FrozenFunds(address target, bool frozen);\n \n    constructor (\n        uint256 initialSupply,\n        string tokenName,\n        string tokenSymbol\n        ) public {\n            totalSupply = initialSupply*10**uint256(decimals);\n            balanceOf[msg.sender] = totalSupply;\n            Name = tokenName;\n            Symbol = tokenSymbol;\n            \n        }\n        function _transfer(address _from, address _to, uint _value) internal{\n            require(_to != 0x0);\n            require(balanceOf[_from] >=_value);\n            require(balanceOf[_to] +_value >= balanceOf[_to]);\n            require(!frozenAccount[msg.sender]);\n            \n            uint previousBalances = balanceOf[_from ] + balanceOf[_to];\n            \n            balanceOf[_from] -= _value;\n            balanceOf[_to] += _value;\n            emit Transfer (_from, _to, _value);\n            assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n            \n        }\n        function transfer(address _to, uint256 _value) public returns (bool success) {\n            _transfer(msg.sender, _to, _value);\n            return true;\n            \n        }\n        \n        function trasferFrom (address _from, address _to, uint256 _value) public returns(bool success)\n        {\n            \n            require(_value <=allowance[_from][msg.sender]);\n            allowance[_from][msg.sender] -=_value;\n            _transfer(_from,_to, _value);\n            return true;\n            \n        }\n        function approve (address _spender, uint256 _value) onlyOwner public\n        returns (bool success){\n            allowance[msg.sender][_spender] = _value;\n            emit Approval(msg.sender, _spender, _value);\n            return true;\n            \n        }\n        \n        function approveAndCall(address _spender, uint256 _value, bytes _extradata) public returns (bool success){\n            tokenRecipient spender = tokenRecipient(_spender);\n            \n            if(approve(_spender,_value)){\n                spender.receiveApproval(msg.sender, _value, this, _extradata);\n                return true;\n            }\n            \n        }\n        function burn (uint256 _value) onlyOwner public returns (bool success){\n            require(balanceOf[msg.sender] >= _value);\n            balanceOf[msg.sender] -= _value;\n            totalSupply -= _value;\n            emit Burn(msg.sender, _value);\n            return true;\n        }\n        function burnFrom(address _from, uint256 _value) onlyOwner public returns (bool success){\n            \n            require(balanceOf[_from] >= _value);\n\t\t\t\n\trequire(_value <= allowance[_from][msg.sender]);\n            \n            balanceOf[_from] -= _value;\n            totalSupply -= _value;\n            emit Burn(msg.sender, _value);\n            \n            return true;\n        }\n        \n        function freezeAccount (address target, bool freeze)public onlyOwner {\n            frozenAccount[target] = freeze;\n            emit FrozenFunds (target, freeze);\n            \n            \n        }\n        \n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"trasferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extradata\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"}]",
  "bytecode": "60806040526003805460ff1916601217905534801561001d57600080fd5b50604051610c15380380610c1583398101604090815281516020808401518385015160008054600160a060020a03191633908117825560035460ff16600a0a8602600481905590825260058552959020949094558401805192949093019161008b91600191908501906100a8565b50805161009f9060029060208401906100a8565b50505050610143565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100e957805160ff1916838001178555610116565b82800160010185558215610116579182015b828111156101165782518255916020019190600101906100fb565b50610122929150610126565b5090565b61014091905b80821115610122576000815560010161012c565b90565b610ac3806101526000396000f3006080604052600436106100e55763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100ea57806318160ddd146101225780633045aaf314610149578063313ce567146101d357806342966c68146101fe578063666b60411461021657806370a082311461024057806379cc6790146102615780638052474d146102855780638da5cb5b1461029a578063a9059cbb146102cb578063b414d4b6146102ef578063cae9ca5114610310578063dd62ed3e14610379578063e724529c146103a0578063f2fde38b146103c8575b600080fd5b3480156100f657600080fd5b5061010e600160a060020a03600435166024356103e9565b604080519115158252519081900360200190f35b34801561012e57600080fd5b50610137610468565b60408051918252519081900360200190f35b34801561015557600080fd5b5061015e61046e565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610198578181015183820152602001610180565b50505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101df57600080fd5b506101e86104f9565b6040805160ff9092168252519081900360200190f35b34801561020a57600080fd5b5061010e600435610502565b34801561022257600080fd5b5061010e600160a060020a0360043581169060243516604435610592565b34801561024c57600080fd5b50610137600160a060020a0360043516610601565b34801561026d57600080fd5b5061010e600160a060020a0360043516602435610613565b34801561029157600080fd5b5061015e6106e7565b3480156102a657600080fd5b506102af610741565b60408051600160a060020a039092168252519081900360200190f35b3480156102d757600080fd5b5061010e600160a060020a0360043516602435610750565b3480156102fb57600080fd5b5061010e600160a060020a0360043516610766565b34801561031c57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261010e948235600160a060020a031694602480359536959460649492019190819084018382808284375094975061077b9650505050505050565b34801561038557600080fd5b50610137600160a060020a0360043581169060243516610894565b3480156103ac57600080fd5b506103c6600160a060020a036004351660243515156108b1565b005b3480156103d457600080fd5b506103c6600160a060020a036004351661092c565b60008054600160a060020a0316331461040157600080fd5b336000818152600660209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60045481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104f15780601f106104c6576101008083540402835291602001916104f1565b820191906000526020600020905b8154815290600101906020018083116104d457829003601f168201915b505050505081565b60035460ff1681565b60008054600160a060020a0316331461051a57600080fd5b3360009081526005602052604090205482111561053657600080fd5b3360008181526005602090815260409182902080548690039055600480548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b600160a060020a03831660009081526006602090815260408083203384529091528120548211156105c257600080fd5b600160a060020a03841660009081526006602090815260408083203384529091529020805483900390556105f7848484610972565b5060019392505050565b60056020526000908152604090205481565b60008054600160a060020a0316331461062b57600080fd5b600160a060020a03831660009081526005602052604090205482111561065057600080fd5b600160a060020a038316600090815260066020908152604080832033845290915290205482111561068057600080fd5b600160a060020a038316600090815260056020908152604091829020805485900390556004805485900390558151848152915133927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca592908290030190a250600192915050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104f15780601f106104c6576101008083540402835291602001916104f1565b600054600160a060020a031681565b600061075d338484610972565b50600192915050565b60076020526000908152604090205460ff1681565b60008361078881856103e9565b1561088c576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b83811015610820578181015183820152602001610808565b50505050905090810190601f16801561084d5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561086f57600080fd5b505af1158015610883573d6000803e3d6000fd5b50505050600191505b509392505050565b600660209081526000928352604080842090915290825290205481565b600054600160a060020a031633146108c857600080fd5b600160a060020a038216600081815260076020908152604091829020805460ff191685151590811790915582519384529083015280517f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a59281900390910190a15050565b600054600160a060020a0316331461094357600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000600160a060020a038316151561098957600080fd5b600160a060020a0384166000908152600560205260409020548211156109ae57600080fd5b600160a060020a03831660009081526005602052604090205482810110156109d557600080fd5b3360009081526007602052604090205460ff16156109f257600080fd5b50600160a060020a038083166000818152600560209081526040808320805495891680855282852080548981039091559486905281548801909155815187815291519390950194927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3600160a060020a03808416600090815260056020526040808220549287168252902054018114610a9157fe5b505050505600a165627a7a723058201b097fc8b35a246bc0e3f5d992814da9f756a53fee37e75519f64e0d345cfd1200290000000000000000000000000000000000000000000000000000000000989680000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000f476f6c64656e5079726578436f696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044750595800000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "0000000000000000000000000000000000000000000000000000000000989680000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000f476f6c64656e5079726578436f696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044750595800000000000000000000000000000000000000000000000000000000"
}