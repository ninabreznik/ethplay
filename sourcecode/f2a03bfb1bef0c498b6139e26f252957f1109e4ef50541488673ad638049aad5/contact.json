{
  "address": "0x5b54240612a83d34e89c141fd2f8d399349a9490",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BitUnits",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-11\n*/\n\npragma solidity ^0.4.24; \n\ncontract ERC223 {\n  uint public totalSupply;\n  function balanceOf(address who) constant returns (uint);\n\n  function name() constant returns (string _name);\n  function symbol() constant returns (string _symbol);\n  function decimals() constant returns (uint8 _decimals);\n  function totalSupply() constant returns (uint256 _supply);\n\n  function transfer(address to, uint value) returns (bool ok);\n  function transfer(address to, uint value, bytes data) returns (bool ok);\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event ERC223Transfer(address indexed _from, address indexed _to, uint256 _value, bytes _data);\n}\n\ncontract ContractReceiver {\n  function tokenFallback(address _from, uint _value, bytes _data);\n}\n\ncontract ERC223Token is ERC223 {\n  using SafeMath for uint;\n\n  mapping(address => uint) balances;\n\n  string public name;\n  string public symbol;\n  uint8 public decimals;\n  uint256 public totalSupply;\n\n\n  // Function to access name of token .\n  function name() constant returns (string _name) {\n      return name;\n  }\n  // Function to access symbol of token .\n  function symbol() constant returns (string _symbol) {\n      return symbol;\n  }\n  // Function to access decimals of token .\n  function decimals() constant returns (uint8 _decimals) {\n      return decimals;\n  }\n  // Function to access total supply of tokens .\n  function totalSupply() constant returns (uint256 _totalSupply) {\n      return totalSupply;\n  }\n\n  // Function that is called when a user or another contract wants to transfer funds .\n  function transfer(address _to, uint _value, bytes _data) returns (bool success) {\n    if(isContract(_to)) {\n        return transferToContract(_to, _value, _data);\n    }\n    else {\n        return transferToAddress(_to, _value, _data);\n    }\n}\n\n  // Standard function transfer similar to ERC20 transfer with no _data .\n  // Added due to backwards compatibility reasons .\n  function transfer(address _to, uint _value) returns (bool success) {\n\n    //standard function transfer similar to ERC20 transfer with no _data\n    //added due to backwards compatibility reasons\n    bytes memory empty;\n    if(isContract(_to)) {\n        return transferToContract(_to, _value, empty);\n    }\n    else {\n        return transferToAddress(_to, _value, empty);\n    }\n}\n\n//assemble the given address bytecode. If bytecode exists then the _addr is a contract.\n  function isContract(address _addr) private returns (bool is_contract) {\n      uint length;\n      assembly {\n            //retrieve the size of the code on target address, this needs assembly\n            length := extcodesize(_addr)\n        }\n        if(length>0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n  //function that is called when transaction target is an address\n  function transferToAddress(address _to, uint _value, bytes _data) private returns (bool success) {\n    if (balanceOf(msg.sender) < _value) revert();\n    balances[msg.sender] = balanceOf(msg.sender).sub(_value);\n    balances[_to] = balanceOf(_to).add(_value);\n    Transfer(msg.sender, _to, _value);\n    ERC223Transfer(msg.sender, _to, _value, _data);\n    return true;\n  }\n\n  //function that is called when transaction target is a contract\n  function transferToContract(address _to, uint _value, bytes _data) private returns (bool success) {\n    if (balanceOf(msg.sender) < _value) revert();\n    balances[msg.sender] = balanceOf(msg.sender).sub(_value);\n    balances[_to] = balanceOf(_to).add(_value);\n    ContractReceiver reciever = ContractReceiver(_to);\n    reciever.tokenFallback(msg.sender, _value, _data);\n    Transfer(msg.sender, _to, _value);\n    ERC223Transfer(msg.sender, _to, _value, _data);\n    return true;\n  }\n\n\n  function balanceOf(address _owner) constant returns (uint balance) {\n    return balances[_owner];\n  }\n}\n\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\n\n\n  \n\n// change contract name to your contract's name\n// i.e. \"contract Bitcoin is ERC223Token\"\ncontract BitUnits is ERC223Token {\n  using SafeMath for uint256;\n\n  // for example, \"Bitcoin\"\n  string public name = \"BitUnits\";\n  // for example, \"BTC\"\n  string public symbol = \"UNITX\";\n  // set token's precision\n  // pick any number from 0 to 18\n  // for example, 4 decimal points means that\n  // smallest token using will be 0.0001 TKN\n  uint public decimals = 8;\n  // total supply of the token\n  // for example, for Bitcoin it would be 21000000\n  uint public totalSupply = 10000000 * (10**decimals);\n\n  // Treasure is where ICO funds (ETH/ETC) will be forwarded\n  // replace this address with your wallet address!\n  // it is recommended that you create a paper wallet for this purpose\n  address private treasury = 0xeb3C95a5CEB6Ae90f47380694F1922dFA1aed3C4;\n  \n  // ICO price. You will need to do a little bit of math to figure it out\n  // given 4 decimals, this setting means \"1 ETC = 50,000 TKN\"\n  uint256 private priceDiv = 2000000000;\n  \n  event Purchase(address indexed purchaser, uint256 amount);\n\n  constructor() public {\n    // This is how many tokens you want to allocate to yourself\n    balances[msg.sender] = 10000000 * (10**decimals);\n    // This is how many tokens you want to allocate for ICO\n    balances[0x0] = 0 * (10**decimals);\n  }\n\n  function () public payable {\n    bytes memory empty;\n    if (msg.value == 0) { revert(); }\n    uint256 purchasedAmount = msg.value.div(priceDiv);\n    if (purchasedAmount == 0) { revert(); } // not enough ETC sent\n    if (purchasedAmount > balances[0x0]) { revert(); } // too much ETC sent\n\n    treasury.transfer(msg.value);\n    balances[0x0] = balances[0x0].sub(purchasedAmount);\n    balances[msg.sender] = balances[msg.sender].add(purchasedAmount);\n\n    emit Transfer(0x0, msg.sender, purchasedAmount);\n    emit ERC223Transfer(0x0, msg.sender, purchasedAmount, empty);\n    emit Purchase(msg.sender, purchasedAmount);\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"ERC223Transfer\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600860808190527f426974556e69747300000000000000000000000000000000000000000000000060a090815261003e9160069190610118565b506040805180820190915260058082527f554e495458000000000000000000000000000000000000000000000000000000602090920191825261008391600791610118565b506008805566038d7ea4c68000600955600a8054600160a060020a03191673eb3c95a5ceb6ae90f47380694f1922dfa1aed3c41790556377359400600b553480156100cd57600080fd5b50600854336000908152600160205260408120600a9290920a62989680029091558080527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49556101b3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015957805160ff1916838001178555610186565b82800160010185558215610186579182015b8281111561018657825182559160200191906001019061016b565b50610192929150610196565b5090565b6101b091905b80821115610192576000815560010161019c565b90565b610a20806101c26000396000f3006080604052600436106100825763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146102d457806318160ddd1461035e578063313ce5671461038557806370a082311461039a57806395d89b41146103bb578063a9059cbb146103d0578063be45fd6214610408575b6060600034151561009257600080fd5b600b546100a690349063ffffffff61047116565b90508015156100b457600080fd5b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49548111156100eb57600080fd5b600a54604051600160a060020a03909116903480156108fc02916000818181858888f19350505050158015610124573d6000803e3d6000fd5b506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4954610160908263ffffffff61048d16565b60016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb495533600090815260409020546101a2908263ffffffff61049f16565b3360008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a333600160a060020a031660007f9bfafdc2ae8835972d7b64ef3f8f307165ac22ceffde4a742c52da5487f45fd183856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561025f578181015183820152602001610247565b50505050905090810190601f16801561028c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a360408051828152905133917f2499a5330ab0979cc612135e7883ebc3cd5c9f7a8508f042540c34723348f632919081900360200190a25050005b3480156102e057600080fd5b506102e96104b5565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561032357818101518382015260200161030b565b50505050905090810190601f1680156103505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561036a57600080fd5b50610373610543565b60408051918252519081900360200190f35b34801561039157600080fd5b50610373610549565b3480156103a657600080fd5b50610373600160a060020a036004351661054f565b3480156103c757600080fd5b506102e961056a565b3480156103dc57600080fd5b506103f4600160a060020a03600435166024356105c5565b604080519115158252519081900360200190f35b34801561041457600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526103f4948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506105f49650505050505050565b600080828481151561047f57fe5b0490508091505b5092915050565b60008282111561049957fe5b50900390565b6000828201838110156104ae57fe5b9392505050565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b505050505081565b60095481565b60085481565b600160a060020a031660009081526001602052604090205490565b6007805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561053b5780601f106105105761010080835404028352916020019161053b565b600060606105d284610621565b156105e9576105e2848483610641565b9150610486565b6105e284848361089f565b60006105ff84610621565b156106165761060f848484610641565b90506104ae565b61060f84848461089f565b6000813b81811115610636576001915061063b565b600091505b50919050565b6000808361064e3361054f565b101561065957600080fd5b610672846106663361054f565b9063ffffffff61048d16565b3360009081526001602052604090205561069b8461068f8761054f565b9063ffffffff61049f16565b600160a060020a03861660008181526001602090815260408083209490945592517fc0ee0b8a0000000000000000000000000000000000000000000000000000000081523360048201818152602483018a90526060604484019081528951606485015289518c9850959663c0ee0b8a9693958c958c956084909101928601918190849084905b83811015610739578181015183820152602001610721565b50505050905090810190601f1680156107665780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561078757600080fd5b505af115801561079b573d6000803e3d6000fd5b5050604080518781529051600160a060020a03891693503392507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a384600160a060020a031633600160a060020a03167f9bfafdc2ae8835972d7b64ef3f8f307165ac22ceffde4a742c52da5487f45fd186866040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610859578181015183820152602001610841565b50505050905090810190601f1680156108865780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3506001949350505050565b6000826108ab3361054f565b10156108b657600080fd5b6108c3836106663361054f565b336000908152600160205260409020556108e08361068f8661054f565b600160a060020a0385166000818152600160209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a383600160a060020a031633600160a060020a03167f9bfafdc2ae8835972d7b64ef3f8f307165ac22ceffde4a742c52da5487f45fd185856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156109af578181015183820152602001610997565b50505050905090810190601f1680156109dc5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a350600193925050505600a165627a7a72305820cd76718507268655dd2e62c23e8a6d9d6a1917cac12d00853130694d5d8207b50029"
}