{
  "address": "0x1e3c8d7e1249b8c53e84f6df70a7558c4994b591",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MCCoin",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-29\n*/\n\npragma solidity ^0.4.24;\n\nlibrary SafeMath {\n\n    function mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    if (_a == 0) {\n    return 0;\n    }\n    uint256 c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n    }\n\n    function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    uint256 c = _a / _b;\n    return c;\n    }\n    \n    function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n    }\n\n    function add(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    uint256 c = _a + _b;\n    assert(c >= _a);\n    return c;\n    }\n}\n\n\ncontract Ownable {\n    address public owner;\n    address public newOwner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    constructor() public {\n    owner = msg.sender;\n    newOwner = address(0);\n    }\n\n    modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n    }\n\n    modifier onlyNewOwner() {\n    require(msg.sender != address(0));\n    require(msg.sender == newOwner);\n    _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n    require(_newOwner != address(0));\n    newOwner = _newOwner;\n    }\n    \n    function acceptOwnership() public onlyNewOwner returns(bool) {\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n    }\n}\n\ncontract ERC20 {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function allowance(address owner, address spender) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n \n\ninterface TokenRecipient {\n function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external;\n}\n\n \n\ncontract MCCoin is ERC20, Ownable {\n    using SafeMath for uint256;\n    \n    struct LockupInfo {\n    uint256 releaseTime;\n    uint256 termOfRound;\n    uint256 unlockAmountPerRound;\n    uint256 lockupBalance;\n    }\n    \n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 internal initialSupply;\n    uint256 internal totalSupply_;\n    \n    mapping(address => uint256) internal balances;\n    mapping(address => bool) internal locks;\n    mapping(address => bool) public frozen;\n    mapping(address => mapping(address => uint256)) internal allowed;\n    mapping(address => LockupInfo) internal lockupInfo;\n    \n    event Unlock(address indexed holder, uint256 value);\n    event Lock(address indexed holder, uint256 value);\n    event Burn(address indexed owner, uint256 value);\n    event Mint(uint256 value);\n    event Freeze(address indexed holder);\n    event Unfreeze(address indexed holder);\n    \n    modifier notFrozen(address _holder) {\n    require(!frozen[_holder]);\n    _;\n    }\n\n    constructor() public {\n    name = \"MCCoin\";\n    symbol = \"MCC\";\n    decimals = 0;\n    initialSupply = 10000000000;\n    totalSupply_ = 10000000000;\n    balances[owner] = totalSupply_;\n    emit Transfer(address(0), owner, totalSupply_);\n    }\n\n    function () public payable {\n    revert();\n    }\n\n    function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n    }\n\n    function _transfer(address _from, address _to, uint _value) internal {\n       \n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n    \n       balances[_from] = balances[_from].sub(_value);\n       balances[_to] = balances[_to].add(_value);\n      allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n      emit Transfer(_from, _to, _value);\n    }\n    \n    function transfer(address _to, uint256 _value) public notFrozen(msg.sender) returns (bool) {\n    \n    if (locks[msg.sender]) {\n    autoUnlock(msg.sender);\n    }\n    \n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n    \n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n    }\n\n    function balanceOf(address _holder) public view returns (uint256 balance) {\n    return balances[_holder] + lockupInfo[_holder].lockupBalance;\n    }\n    \n    function sendwithgas (address _from, address _to, uint256 _value, uint256 _fee) public notFrozen(_from) returns (bool) {\n        if(locks[_from]){\n            autoUnlock(_from);\n        }\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        balances[msg.sender] = balances[msg.sender].add(_fee);\n        balances[_from] = balances[_from].sub(_value + _fee);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n        emit Transfer(_from, msg.sender, _value);\n        \n        return true;\n    }\n     \n    function transferFrom(address _from, address _to, uint256 _value) public notFrozen(_from) returns (bool) {\n\n        if (locks[_from]) {\n        autoUnlock(_from);\n        }\n    \n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    _transfer(_from, _to, _value);\n    \n    return true;\n    }\n    \n    \n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n    }\n\n    function allowance(address _holder, address _spender) public view returns (uint256) {\n    return allowed[_holder][_spender];\n    }\n\n    function freezeAccount(address _holder) public onlyOwner returns (bool) {\n    require(!frozen[_holder]);\n    frozen[_holder] = true;\n    emit Freeze(_holder);\n    return true;\n    }\n\n    function unfreezeAccount(address _holder) public onlyOwner returns (bool) {\n    require(frozen[_holder]);\n    frozen[_holder] = false;\n    emit Unfreeze(_holder);\n    return true;\n    }\n    \n   function burn(uint256 _value) public onlyOwner returns (bool success) {\n    require(_value <= balances[msg.sender]);\n    address burner = msg.sender;\n    balances[burner] = balances[burner].sub(_value);\n    totalSupply_ = totalSupply_.sub(_value);\n    emit Burn(burner, _value);\n    return true;\n    }\n\n    function mint( uint256 _amount) onlyOwner public returns (bool) {\n    totalSupply_ = totalSupply_.add(_amount);\n    balances[owner] = balances[owner].add(_amount);\n    \n    emit Transfer(address(0), owner, _amount);\n    return true;\n    }\n\n    function isContract(address addr) internal view returns (bool) {\n    uint size;\n    assembly{size := extcodesize(addr)}\n    return size > 0;\n    }\n\n    function autoUnlock(address _holder) internal returns (bool) {\n        if (lockupInfo[_holder].releaseTime <= now) {\n        return releaseTimeLock(_holder);\n        }\n    \n    return false;\n    }\n\n    function releaseTimeLock(address _holder) internal returns(bool) {\n    require(locks[_holder]);\n    uint256 releaseAmount = 0;\n\n    for( ; lockupInfo[_holder].releaseTime <= now ; )\n    {\n    if (lockupInfo[_holder].lockupBalance <= lockupInfo[_holder].unlockAmountPerRound) {\n    releaseAmount = releaseAmount.add(lockupInfo[_holder].lockupBalance);\n    delete lockupInfo[_holder];\n    locks[_holder] = false;\n    break;\n    } else {\n    releaseAmount = releaseAmount.add(lockupInfo[_holder].unlockAmountPerRound);\n    lockupInfo[_holder].lockupBalance = lockupInfo[_holder].lockupBalance.sub(lockupInfo[_holder].unlockAmountPerRound);\n    lockupInfo[_holder].releaseTime = lockupInfo[_holder].releaseTime.add(lockupInfo[_holder].termOfRound);\n    }\n}\n    \n    emit Unlock(_holder, releaseAmount);\n    balances[_holder] = balances[_holder].add(releaseAmount);\n    return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"sendwithgas\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"unfreezeAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"freezeAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Lock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"Unfreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040523480156200001157600080fd5b5060008054600160a060020a031990811633179091556001805490911690556040805180820190915260068082527f4d43436f696e00000000000000000000000000000000000000000000000000006020909201918252620000769160029162000133565b506040805180820190915260038082527f4d434300000000000000000000000000000000000000000000000000000000006020909201918252620000bb918162000133565b506004805460ff191690556402540be4006005819055600681905560008054600160a060020a0390811682526007602090815260408084208590558354815195865290519216937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3620001d8565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200017657805160ff1916838001178555620001a6565b82800160010185558215620001a6579182015b82811115620001a657825182559160200191906001019062000189565b50620001b4929150620001b8565b5090565b620001d591905b80821115620001b45760008155600101620001bf565b90565b61112180620001e86000396000f3006080604052600436106101065763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461010b578063095ea7b31461019557806318160ddd146101cd57806323b872dd146101f4578063313ce5671461021e57806342966c6814610249578063614552991461026157806370a082311461028e578063788649ea146102af57806379ba5097146102d05780638da5cb5b146102e557806395d89b4114610316578063a0712d681461032b578063a9059cbb14610343578063d051665014610367578063d4ee1d9014610388578063dd62ed3e1461039d578063f26c159f146103c4578063f2fde38b146103e5575b600080fd5b34801561011757600080fd5b50610120610408565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015a578181015183820152602001610142565b50505050905090810190601f1680156101875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a157600080fd5b506101b9600160a060020a0360043516602435610493565b604080519115158252519081900360200190f35b3480156101d957600080fd5b506101e26104f9565b60408051918252519081900360200190f35b34801561020057600080fd5b506101b9600160a060020a03600435811690602435166044356104ff565b34801561022a57600080fd5b506102336105d3565b6040805160ff9092168252519081900360200190f35b34801561025557600080fd5b506101b96004356105dc565b34801561026d57600080fd5b506101b9600160a060020a03600435811690602435166044356064356106aa565b34801561029a57600080fd5b506101e2600160a060020a0360043516610840565b3480156102bb57600080fd5b506101b9600160a060020a036004351661086f565b3480156102dc57600080fd5b506101b96108fc565b3480156102f157600080fd5b506102fa610990565b60408051600160a060020a039092168252519081900360200190f35b34801561032257600080fd5b5061012061099f565b34801561033757600080fd5b506101b96004356109fa565b34801561034f57600080fd5b506101b9600160a060020a0360043516602435610a9f565b34801561037357600080fd5b506101b9600160a060020a0360043516610bb2565b34801561039457600080fd5b506102fa610bc7565b3480156103a957600080fd5b506101e2600160a060020a0360043581169060243516610bd6565b3480156103d057600080fd5b506101b9600160a060020a0360043516610c01565b3480156103f157600080fd5b50610406600160a060020a0360043516610c90565b005b6002805460408051602060018416156101000260001901909316849004601f8101849004840282018401909252818152929183018282801561048b5780601f106104605761010080835404028352916020019161048b565b820191906000526020600020905b81548152906001019060200180831161046e57829003601f168201915b505050505081565b336000818152600a60209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60065490565b600160a060020a038316600090815260096020526040812054849060ff161561052757600080fd5b600160a060020a03851660009081526008602052604090205460ff16156105535761055185610ceb565b505b600160a060020a038416151561056857600080fd5b600160a060020a03851660009081526007602052604090205483111561058d57600080fd5b600160a060020a0385166000908152600a602090815260408083203384529091529020548311156105bd57600080fd5b6105c8858585610d22565b506001949350505050565b60045460ff1681565b600080548190600160a060020a031633146105f657600080fd5b3360009081526007602052604090205483111561061257600080fd5b5033600081815260076020526040902054610633908463ffffffff610e8216565b600160a060020a03821660009081526007602052604090205560065461065f908463ffffffff610e8216565b600655604080518481529051600160a060020a038316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a250600192915050565b600160a060020a038416600090815260096020526040812054859060ff16156106d257600080fd5b600160a060020a03861660009081526008602052604090205460ff16156106fe576106fc86610ceb565b505b600160a060020a038516151561071357600080fd5b600160a060020a03861660009081526007602052604090205484111561073857600080fd5b33600090815260076020526040902054610758908463ffffffff610e9416565b3360009081526007602052604080822092909255600160a060020a0388168152205461078c9085850163ffffffff610e8216565b600160a060020a0380881660009081526007602052604080822093909355908716815220546107c1908563ffffffff610e9416565b600160a060020a0380871660008181526007602090815260409182902094909455805188815290519193928a16926000805160206110d683398151915292918290030190a36040805185815290513391600160a060020a038916916000805160206110d68339815191529181900360200190a350600195945050505050565b600160a060020a0381166000908152600b6020908152604080832060030154600790925290912054015b919050565b60008054600160a060020a0316331461088757600080fd5b600160a060020a03821660009081526009602052604090205460ff1615156108ae57600080fd5b600160a060020a038216600081815260096020526040808220805460ff19169055517fca5069937e68fd197927055037f59d7c90bf75ac104e6e375539ef480c3ad6ee9190a2506001919050565b600033151561090a57600080fd5b600154600160a060020a0316331461092157600080fd5b60015460008054604051600160a060020a0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36001546000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0390921691909117905590565b600054600160a060020a031681565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561048b5780601f106104605761010080835404028352916020019161048b565b60008054600160a060020a03163314610a1257600080fd5b600654610a25908363ffffffff610e9416565b60065560008054600160a060020a0316815260076020526040902054610a51908363ffffffff610e9416565b60008054600160a060020a039081168252600760209081526040808420949094558254845187815294519216936000805160206110d6833981519152929081900390910190a3506001919050565b3360008181526009602052604081205490919060ff1615610abf57600080fd5b3360009081526008602052604090205460ff1615610ae257610ae033610ceb565b505b600160a060020a0384161515610af757600080fd5b33600090815260076020526040902054831115610b1357600080fd5b33600090815260076020526040902054610b33908463ffffffff610e8216565b3360009081526007602052604080822092909255600160a060020a03861681522054610b65908463ffffffff610e9416565b600160a060020a0385166000818152600760209081526040918290209390935580518681529051919233926000805160206110d68339815191529281900390910190a35060019392505050565b60096020526000908152604090205460ff1681565b600154600160a060020a031681565b600160a060020a039182166000908152600a6020908152604080832093909416825291909152205490565b60008054600160a060020a03163314610c1957600080fd5b600160a060020a03821660009081526009602052604090205460ff1615610c3f57600080fd5b600160a060020a038216600081815260096020526040808220805460ff19166001179055517faf85b60d26151edd11443b704d424da6c43d0468f2235ebae3d1904dbc3230499190a2506001919050565b600054600160a060020a03163314610ca757600080fd5b600160a060020a0381161515610cbc57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0381166000908152600b60205260408120544210610d1a57610d1382610eaa565b905061086a565b506000919050565b600160a060020a0382161515610d3757600080fd5b600160a060020a038316600090815260076020526040902054811115610d5c57600080fd5b600160a060020a0383166000908152600a60209081526040808320338452909152902054811115610d8c57600080fd5b600160a060020a038316600090815260076020526040902054610db5908263ffffffff610e8216565b600160a060020a038085166000908152600760205260408082209390935590841681522054610dea908263ffffffff610e9416565b600160a060020a038084166000908152600760209081526040808320949094559186168152600a82528281203382529091522054610e2e908263ffffffff610e8216565b600160a060020a038085166000818152600a6020908152604080832033845282529182902094909455805185815290519286169391926000805160206110d6833981519152929181900390910190a3505050565b600082821115610e8e57fe5b50900390565b600082820183811015610ea357fe5b9392505050565b600160a060020a038116600090815260086020526040812054819060ff161515610ed357600080fd5b5060005b600160a060020a0383166000908152600b6020526040902054421061104a57600160a060020a0383166000908152600b60205260409020600281015460039091015411610f9357600160a060020a0383166000908152600b6020526040902060030154610f4b90829063ffffffff610e9416565b600160a060020a0384166000908152600b60209081526040808320838155600181018490556002810184905560030183905560089091529020805460ff19169055905061104a565b600160a060020a0383166000908152600b6020526040902060020154610fc090829063ffffffff610e9416565b600160a060020a0384166000908152600b602052604090206002810154600390910154919250610ff6919063ffffffff610e8216565b600160a060020a0384166000908152600b6020526040902060038101919091556001810154905461102c9163ffffffff610e9416565b600160a060020a0384166000908152600b6020526040902055610ed7565b604080518281529051600160a060020a038516917f6381d9813cabeb57471b5a7e05078e64845ccdb563146a6911d536f24ce960f1919081900360200190a2600160a060020a0383166000908152600760205260409020546110b2908263ffffffff610e9416565b600160a060020a03841660009081526007602052604090205560019150509190505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820d509ebb47bd1b555ff866db957b965ffb66fad03eb833e199c945c283a0b30eb0029"
}