{
  "address": "0x86a80daf8d1a85c09f02c80c0f3e85ee41bbca0c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Airstayz",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-07\n*/\n\npragma solidity 0.4.21;\n\ncontract Ownable {\n    address public owner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n    function Ownable() public {\n        owner = msg.sender;\n    }\n\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n///////////// NEW OWNER FUNCTIONALITY\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0) && newOwner != owner);\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n}\n\n///////////// SAFE MATH FUNCTIONS\n\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract UserTokensControl is Ownable {\n    address contractReserve;\n}\n\n\n///////////// DECLARE ERC223 BASIC INTERFACE\n\ncontract ERC223ReceivingContract {\n    function tokenFallback(address _from, uint256 _value, bytes _data) public pure {\n        _from;\n        _value;\n        _data;\n    }\n}\n\ncontract ERC223 {\n    event Transfer(address indexed _from, address indexed _to, uint256 _value, bytes _data);\n}\n\ncontract ERC20 {\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n}\n\n\ncontract BasicToken is ERC20, ERC223, UserTokensControl {\n    uint256 public totalSupply;\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n\n\n  ///////////// TRANSFER ////////////////\n\n    function transferToAddress(address _to, uint256 _value, bytes _data) internal returns (bool) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        emit Transfer(msg.sender, _to, _value, _data);\n        return true;\n    }\n\n    function transferToContract(address _to, uint256 _value, bytes _data) internal returns (bool) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n        receiver.tokenFallback(msg.sender, _value, _data);\n        emit Transfer(msg.sender, _to, _value);\n        emit Transfer(msg.sender, _to, _value, _data);\n        return true;\n    }\n\n    function transfer(address _to, uint256 _value, bytes _data) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n        require(_value > 0);\n\n        uint256 codeLength;\n        assembly {\n            codeLength := extcodesize(_to)\n        }\n    \n        if(codeLength > 0) {\n            return transferToContract(_to, _value, _data);\n        } else {\n            return transferToAddress(_to, _value, _data);\n        }\n    }\n\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n        require(_value > 0);\n\n        uint256 codeLength;\n        bytes memory empty;\n        assembly {\n            codeLength := extcodesize(_to)\n        }\n\n        if(codeLength > 0) {\n            return transferToContract(_to, _value, empty);\n        } else {\n            return transferToAddress(_to, _value, empty);\n        }\n    }\n\n\n    function balanceOf(address _address) public constant returns (uint256 balance) {\n        return balances[_address];\n    }\n}\n\n\ncontract StandardToken is BasicToken {\n\n    mapping (address => mapping (address => uint256)) internal allowed;\n}\n\ncontract Airstayz is StandardToken {\n    string public constant name = \"AIRSTAYZ\";\n    uint public constant decimals = 18;\n    string public constant symbol = \"STAY\";\n\n    function Airstayz() public {\n        totalSupply=155000000 *(10**decimals);\n        owner = msg.sender;\n        contractReserve = 0xb5AB0c087b9228D584CD4363E3d000187FE69C51;\n        balances[msg.sender] = 150350000 * (10**decimals);\n        balances[contractReserve] = 4650000 * (10**decimals);\n    }\n\n    function() public {\n        revert();\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b600080546a803686d63613e07b000000600255600160a060020a03338116600160a060020a031992831681178316811784556001805490931673b5ab0c087b9228d584cd4363e3d000187fe69c511783558352600360205260408084206a7c5dd9d4e7a7c2b4c000009055915416825290206a03d8ad014e6c1dc6400000905561092f8061009e6000396000f3006060604052600436106100985763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a857806318160ddd14610132578063313ce5671461015757806370a082311461016a5780638da5cb5b1461018957806395d89b41146101b8578063a9059cbb146101cb578063be45fd6214610201578063f2fde38b14610266575b34156100a357600080fd5b600080fd5b34156100b357600080fd5b6100bb610287565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f75780820151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013d57600080fd5b6101456102be565b60405190815260200160405180910390f35b341561016257600080fd5b6101456102c4565b341561017557600080fd5b610145600160a060020a03600435166102c9565b341561019457600080fd5b61019c6102e4565b604051600160a060020a03909116815260200160405180910390f35b34156101c357600080fd5b6100bb6102f3565b34156101d657600080fd5b6101ed600160a060020a036004351660243561032a565b604051901515815260200160405180910390f35b341561020c57600080fd5b6101ed60048035600160a060020a03169060248035919060649060443590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506103ae95505050505050565b341561027157600080fd5b610285600160a060020a0360043516610429565b005b60408051908101604052600881527f414952535441595a000000000000000000000000000000000000000000000000602082015281565b60025481565b601281565b600160a060020a031660009081526003602052604090205490565b600054600160a060020a031681565b60408051908101604052600481527f5354415900000000000000000000000000000000000000000000000000000000602082015281565b6000806103356108f1565b600160a060020a038516151561034a57600080fd5b600160a060020a03331660009081526003602052604090205484111561036f57600080fd5b6000841161037c57600080fd5b843b9150600082111561039b576103948585836104e0565b92506103a6565b610394858583610755565b505092915050565b600080600160a060020a03851615156103c657600080fd5b600160a060020a0333166000908152600360205260409020548411156103eb57600080fd5b600084116103f857600080fd5b50833b60008111156104165761040f8585856104e0565b9150610421565b61040f858585610755565b509392505050565b60005433600160a060020a0390811691161461044457600080fd5b600160a060020a0381161580159061046a5750600054600160a060020a03828116911614155b151561047557600080fd5b600054600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a033316600090815260036020526040812054819061050b908563ffffffff6108c916565b600160a060020a033381166000908152600360205260408082209390935590871681522054610540908563ffffffff6108db16565b600160a060020a03861660008181526003602052604090819020929092558692509063c0ee0b8a90339087908790518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105f25780820151838201526020016105da565b50505050905090810190601f16801561061f5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b151561063f57600080fd5b5af1151561064c57600080fd5b50505084600160a060020a031633600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405190815260200160405180910390a384600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16868660405182815260406020820181815290820183818151815260200191508051906020019080838360005b8381101561070f5780820151838201526020016106f7565b50505050905090810190601f16801561073c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3506001949350505050565b600160a060020a03331660009081526003602052604081205461077e908463ffffffff6108c916565b600160a060020a0333811660009081526003602052604080822093909355908616815220546107b3908463ffffffff6108db16565b600160a060020a0380861660008181526003602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a383600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16858560405182815260406020820181815290820183818151815260200191508051906020019080838360005b8381101561088457808201518382015260200161086c565b50505050905090810190601f1680156108b15780820380516001836020036101000a031916815260200191505b50935050505060405180910390a35060019392505050565b6000828211156108d557fe5b50900390565b6000828201838110156108ea57fe5b9392505050565b602060405190810160405260008152905600a165627a7a72305820c843c9298fee7c9cfc5b2f6cbb22aa33476792523e08a7bc14e55a2d61bd24730029"
}