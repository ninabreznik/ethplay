{
  "address": "0xa7c58385b66e5d9905fef9dc43d7fb270e527497",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenWhitelist",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-05\n*/\n\npragma solidity ^0.4.24;\n\n// [emailÂ protected] from NPM\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\ncontract TokenWhitelist is Ownable {\n\n    mapping(address => bool) private whitelist;\n\n    event Whitelisted(address indexed wallet);\n    event Dewhitelisted(address indexed wallet);\n\n    function enableWallet(address _wallet) public onlyOwner {\n        require(_wallet != address(0), \"Invalid wallet\");\n        whitelist[_wallet] = true;\n        emit Whitelisted(_wallet);\n    }\n\n    function disableWallet(address _wallet) public onlyOwner {\n        whitelist[_wallet] = false;\n        emit Dewhitelisted (_wallet);\n    }\n    \n    function checkWhitelisted(address _wallet) public view returns (bool){\n        return whitelist[_wallet];\n    }\n    \n}",
  "bytecode": "608060405260008054600160a060020a031916331790556103fe806100256000396000f3006080604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631269359a811461007c57806320d8dad01461009f578063715018a6146100d45780638da5cb5b146100e9578063a926819f1461011a578063f2fde38b1461013b575b600080fd5b34801561008857600080fd5b5061009d600160a060020a036004351661015c565b005b3480156100ab57600080fd5b506100c0600160a060020a0360043516610239565b604080519115158252519081900360200190f35b3480156100e057600080fd5b5061009d610257565b3480156100f557600080fd5b506100fe6102c3565b60408051600160a060020a039092168252519081900360200190f35b34801561012657600080fd5b5061009d600160a060020a03600435166102d2565b34801561014757600080fd5b5061009d600160a060020a0360043516610332565b600054600160a060020a0316331461017357600080fd5b600160a060020a03811615156101ea57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c69642077616c6c6574000000000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a0381166000818152600160208190526040808320805460ff1916909217909155517faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a549190a250565b600160a060020a031660009081526001602052604090205460ff1690565b600054600160a060020a0316331461026e57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b600054600160a060020a031633146102e957600080fd5b600160a060020a038116600081815260016020526040808220805460ff19169055517f78c8e01ebc9b1b82f14af9f3a9b6fa7bdba5e36f9e96d15ca3aebc36cf72ce859190a250565b600054600160a060020a0316331461034957600080fd5b61035281610355565b50565b600160a060020a038116151561036a57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820e30e405bb3eba858899825438ecac625966adc1a0331872fdc3d67bdfb08e90a0029"
}