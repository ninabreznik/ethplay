{
  "address": "0x389e93ac36dd8c8e04fb1952b37c4aa4b320b6ff",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "AuctusBountyDistribution",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-26\n*/\n\npragma solidity ^0.4.21;\n\n\nlibrary SafeMath {\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tuint256 c = a + b;\n\t\tassert(a <= c);\n\t\treturn c;\n\t}\n\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tassert(a >= b);\n\t\treturn a - b;\n\t}\n}\n\n\ncontract ContractReceiver {\n\tfunction tokenFallback(address from, uint256 value, bytes data) public;\n}\n\n\ncontract AuctusToken {\n\tfunction transfer(address to, uint256 value) public returns (bool);\n}\n\n\ncontract AuctusBountyDistribution is ContractReceiver {\n\tusing SafeMath for uint256;\n\n\taddress public auctusTokenAddress = 0xc12d099be31567add4e4e4d0D45691C3F58f5663;\n\taddress public owner;\n\tuint256 public escrowedTokens;\n\tmapping(address => bool) public redeemed;\n\n\tevent Escrow(address indexed from, uint256 value);\n\tevent Redeem(address indexed to, uint256 value);\n\n\tfunction AuctusBountyDistribution() public {\n\t\towner = msg.sender;\n\t}\n\n\tmodifier onlyOwner() {\n\t\trequire(owner == msg.sender);\n\t\t_;\n\t}\n\n\tmodifier isValidMessage(uint256 value, uint256 timelimit, uint8 v, bytes32 r, bytes32 s) {\n\t\trequire(owner == ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\", keccak256(this, msg.sender, value, timelimit)), v, r, s));\n\t\t_;\n\t}\n\n\tfunction transferOwnership(address newOwner) onlyOwner public {\n\t\trequire(newOwner != address(0));\n\t\towner = newOwner;\n\t}\n\n\tfunction tokenFallback(address from, uint256 value, bytes) public {\n\t\trequire(msg.sender == auctusTokenAddress);\n\t\tescrowedTokens = escrowedTokens.add(value);\n\t\temit Escrow(from, value);\n\t}\n\n\tfunction redeemBounty(\n\t\tuint256 value,\n\t\tuint256 timelimit,\n\t\tuint8 v,\n\t\tbytes32 r,\n\t\tbytes32 s\n\t)\n\t\tisValidMessage(value, timelimit, v, r, s)\n\t\tpublic \n\t{\n\t\trequire(timelimit >= now);\n\t\trequire(!redeemed[msg.sender]);\n\t\tredeemed[msg.sender] = true;\n\t\tinternalRedeem(msg.sender, value);\n\t}\n\n\tfunction forcedRedeem(address to, uint256 value) onlyOwner public {\n\t\tinternalRedeem(to, value);\n\t}\n\n\tfunction internalRedeem(address to, uint256 value) private {\n\t\tescrowedTokens = escrowedTokens.sub(value);\n\t\tassert(AuctusToken(auctusTokenAddress).transfer(to, value));\n\t\temit Redeem(to, value);\n\t}\n}",
  "bytecode": "606060405260008054600160a060020a03191673c12d099be31567add4e4e4d0d45691c3f58f5663179055341561003557600080fd5b60018054600160a060020a03191633600160a060020a03161790556105d18061005f6000396000f30060606040526004361061008d5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631845604881146100925780637a11dfb4146100c15780638da5cb5b146100e85780639f4568ef146100fb578063c0ee0b8a1461012e578063d4def0ba14610193578063d5364231146101b8578063f2fde38b146101da575b600080fd5b341561009d57600080fd5b6100a56101f9565b604051600160a060020a03909116815260200160405180910390f35b34156100cc57600080fd5b6100e660043560243560ff60443516606435608435610208565b005b34156100f357600080fd5b6100a5610373565b341561010657600080fd5b61011a600160a060020a0360043516610382565b604051901515815260200160405180910390f35b341561013957600080fd5b6100e660048035600160a060020a03169060248035919060649060443590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061039795505050505050565b341561019e57600080fd5b6101a661040a565b60405190815260200160405180910390f35b34156101c357600080fd5b6100e6600160a060020a0360043516602435610410565b34156101e557600080fd5b6100e6600160a060020a0360043516610439565b600054600160a060020a031681565b84848484846001303387876040516c01000000000000000000000000600160a060020a03958616810282529390941690920260148401526028830152604882015260680160405180910390206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0160405180910390208484846040516000815260200160405260405193845260ff9092166020808501919091526040808501929092526060840192909252608090920191516020810390808403906000865af115156102e257600080fd5b505060206040510351600154600160a060020a0390811691161461030557600080fd5b4289101561031257600080fd5b600160a060020a03331660009081526003602052604090205460ff161561033857600080fd5b600160a060020a03339081166000908152600360205260409020805460ff19166001179055610367908b610498565b50505050505050505050565b600154600160a060020a031681565b60036020526000908152604090205460ff1681565b60005433600160a060020a039081169116146103b257600080fd5b6002546103c5908363ffffffff61057d16565b600255600160a060020a0383167faf297459aba41a3d89fa7ae1ed200b69617f94cf5c0818f0f1c85af2a3d5c2108360405190815260200160405180910390a2505050565b60025481565b60015433600160a060020a0390811691161461042b57600080fd5b6104358282610498565b5050565b60015433600160a060020a0390811691161461045457600080fd5b600160a060020a038116151561046957600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6002546104ab908263ffffffff61059316565b600255600054600160a060020a031663a9059cbb83836040517c010000000000000000000000000000000000000000000000000000000063ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561051d57600080fd5b5af1151561052a57600080fd5b50505060405180519050151561053c57fe5b81600160a060020a03167f222838db2794d11532d940e8dec38ae307ed0b63cd97c233322e221f998767a68260405190815260200160405180910390a25050565b60008282018084111561058c57fe5b9392505050565b60008183101561059f57fe5b509003905600a165627a7a723058207c4ac0105774e71ee66373817c3c90328f754cd237a18fa2d8552df5d46bb50a0029"
}