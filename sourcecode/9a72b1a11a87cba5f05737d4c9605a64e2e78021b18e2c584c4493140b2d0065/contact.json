{
  "address": "0x4f38f4229924bfa28d58eeda496cc85e8016bccc",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CehhCoin",
  "compilerVersion": "v0.4.20+commit.3155dd80",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-02-15\n*/\n\n/* -------------------------------------------------------------------------\n\n  /$$$$$$            /$$       /$$        /$$$$$$            /$$          \n /$$__  $$          | $$      | $$       /$$__  $$          |__/          \n| $$  \\__/  /$$$$$$ | $$$$$$$ | $$$$$$$ | $$  \\__/  /$$$$$$  /$$ /$$$$$$$ \n| $$       /$$__  $$| $$__  $$| $$__  $$| $$       /$$__  $$| $$| $$__  $$\n| $$      | $$$$$$$$| $$  \\ $$| $$  \\ $$| $$      | $$  \\ $$| $$| $$  \\ $$\n| $$    $$| $$_____/| $$  | $$| $$  | $$| $$    $$| $$  | $$| $$| $$  | $$\n|  $$$$$$/|  $$$$$$$| $$  | $$| $$  | $$|  $$$$$$/|  $$$$$$/| $$| $$  | $$\n \\______/  \\_______/|__/  |__/|__/  |__/ \\______/  \\______/ |__/|__/  |__/\n\n\n                === PROOF OF WORK ERC20 EXTENSION ===\n \n                         Mk 1 aka CehhCoin\n   \n    Intro:\n   All addresses have CehhCoin assigned to them from the moment this\n   contract is mined. The amount assigned to each address is equal to\n   the value of the last 7 bits of the address. Anyone who finds an \n   address with CEHH can transfer it to a personal wallet.\n   This system allows \"miners\" to not have to wait in line, and gas\n   price rushing does not become a problem.\n   \n    How:\n   The transfer() function has been modified to include the equivalent\n   of a mint() function that may be called once per address.\n   \n    Why:\n   Instead of premining everything, the supply goes up until the \n   transaction fee required to \"mine\" CehhCoins matches the price of \n   255 CehhCoins. After that point CehhCoins will follow a price \n   theoretically proportional to gas prices. This gives the community\n   a way to see gas prices as a number. Added to this, I hope to\n   use CehhCoin as a starting point for a new paradigm of keeping\n   PoW as an open possibility without having to launch a standalone\n   blockchain.\n   \n   \n  /$$$$$$            /$$       /$$        /$$$$$$            /$$          \n /$$__  $$          | $$      | $$       /$$__  $$          |__/          \n| $$  \\__/  /$$$$$$ | $$$$$$$ | $$$$$$$ | $$  \\__/  /$$$$$$  /$$ /$$$$$$$ \n| $$       /$$__  $$| $$__  $$| $$__  $$| $$       /$$__  $$| $$| $$__  $$\n| $$      | $$$$$$$$| $$  \\ $$| $$  \\ $$| $$      | $$  \\ $$| $$| $$  \\ $$\n| $$    $$| $$_____/| $$  | $$| $$  | $$| $$    $$| $$  | $$| $$| $$  | $$\n|  $$$$$$/|  $$$$$$$| $$  | $$| $$  | $$|  $$$$$$/|  $$$$$$/| $$| $$  | $$\n \\______/  \\_______/|__/  |__/|__/  |__/ \\______/  \\______/ |__/|__/  |__/\n\n   \n ------------------------------------------------------------------------- */\n\npragma solidity ^0.4.20;\n\ncontract Ownable {\n  address public owner;\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n  mapping(address => uint256) balances;\n  uint256 totalSupply_;\n\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n}\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\ncontract StandardToken is ERC20, BasicToken {\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    Transfer(_from, _to, _value);\n    return true;\n  }\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\ncontract MineableToken is StandardToken, Ownable {\n  event Mine(address indexed to, uint256 amount);\n  event MiningFinished();\n\n  bool public miningFinished = false;\n  mapping(address => bool) claimed;\n\n\n  modifier canMine {\n    require(!miningFinished);\n    _;\n  }\n\n  \n  function claim() canMine public {\n    require(!claimed[msg.sender]);\n    bytes20 reward = bytes20(msg.sender) & 255;\n    require(reward > 0);\n    uint256 rewardInt = uint256(reward);\n    \n    claimed[msg.sender] = true;\n    totalSupply_ = totalSupply_.add(rewardInt);\n    balances[msg.sender] = balances[msg.sender].add(rewardInt);\n    Mine(msg.sender, rewardInt);\n    Transfer(address(0), msg.sender, rewardInt);\n  }\n  \n  function claimAndTransfer(address _owner) canMine public {\n    require(!claimed[msg.sender]);\n    bytes20 reward = bytes20(msg.sender) & 255;\n    require(reward > 0);\n    uint256 rewardInt = uint256(reward);\n    \n    claimed[msg.sender] = true;\n    totalSupply_ = totalSupply_.add(rewardInt);\n    balances[_owner] = balances[_owner].add(rewardInt);\n    Mine(msg.sender, rewardInt);\n    Transfer(address(0), _owner, rewardInt);\n  }\n  \n  function checkReward() view public returns(uint256){\n    return uint256(bytes20(msg.sender) & 255);\n  }\n  \n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender] ||\n           (!claimed[msg.sender] && _value <= balances[msg.sender] + uint256(bytes20(msg.sender) & 255))\n           );\n\n    if(!claimed[msg.sender]) claim();\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(msg.sender, _to, _value);\n    return true;\n  }\n  \n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner] + (claimed[_owner] ? 0 : uint256(bytes20(_owner) & 255));\n  }\n}\n\ncontract CehhCoin is MineableToken {\n  string public name;\n  string public symbol;\n  uint8 public decimals;\n\n\n  function CehhCoin(string _name, string _symbol, uint8 _decimals) public {\n    name = _name;\n    symbol = _symbol;\n    decimals = _decimals;\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"miningFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"claimAndTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mine\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MiningFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60606040526003805460a060020a60ff0219169055341561001f57600080fd5b60405162000fd638038062000fd68339810160405280805182019190602001805182019190602001805160038054600160a060020a03191633600160a060020a031617905591506005905083805161007b9291602001906100ac565b50600682805161008f9291602001906100ac565b506007805460ff191660ff92909216919091179055506101479050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100ed57805160ff191683800117855561011a565b8280016001018555821561011a579182015b8281111561011a5782518255916020019190600101906100ff565b5061012692915061012a565b5090565b61014491905b808211156101265760008155600101610130565b90565b610e7f80620001576000396000f3006060604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101b557806323b872dd146101da578063313ce5671461020257806349dc2b831461022b5780634e71d92d1461023e578063634667b214610253578063661884631461027257806370a08231146102945780638da5cb5b146102b357806395d89b41146102e2578063a9059cbb146102f5578063c4b24a4614610317578063d73dd6231461032a578063dd62ed3e1461034c578063f2fde38b14610371575b600080fd5b341561010057600080fd5b610108610390565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561014457808201518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018a57600080fd5b6101a1600160a060020a036004351660243561042e565b604051901515815260200160405180910390f35b34156101c057600080fd5b6101c861049a565b60405190815260200160405180910390f35b34156101e557600080fd5b6101a1600160a060020a03600435811690602435166044356104a0565b341561020d57600080fd5b61021561060e565b60405160ff909116815260200160405180910390f35b341561023657600080fd5b6101a1610617565b341561024957600080fd5b610251610638565b005b341561025e57600080fd5b610251600160a060020a036004351661079f565b341561027d57600080fd5b6101a1600160a060020a036004351660243561091a565b341561029f57600080fd5b6101c8600160a060020a0360043516610a14565b34156102be57600080fd5b6102c6610a75565b604051600160a060020a03909116815260200160405180910390f35b34156102ed57600080fd5b610108610a84565b341561030057600080fd5b6101a1600160a060020a0360043516602435610aef565b341561032257600080fd5b6101c8610c86565b341561033557600080fd5b6101a1600160a060020a0360043516602435610ca1565b341561035757600080fd5b6101c8600160a060020a0360043581169060243516610d45565b341561037c57600080fd5b610251600160a060020a0360043516610d70565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b505050505081565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60015490565b6000600160a060020a03831615156104b757600080fd5b600160a060020a0384166000908152602081905260409020548211156104dc57600080fd5b600160a060020a038085166000908152600260209081526040808320339094168352929052205482111561050f57600080fd5b600160a060020a038416600090815260208190526040902054610538908363ffffffff610e0b16565b600160a060020a03808616600090815260208190526040808220939093559085168152205461056d908363ffffffff610e1d16565b600160a060020a03808516600090815260208181526040808320949094558783168252600281528382203390931682529190915220546105b3908363ffffffff610e0b16565b600160a060020a0380861660008181526002602090815260408083203386168452909152908190209390935590851691600080516020610e348339815191529085905190815260200160405180910390a35060019392505050565b60075460ff1681565b60035474010000000000000000000000000000000000000000900460ff1681565b600354600090819074010000000000000000000000000000000000000000900460ff161561066557600080fd5b600160a060020a03331660009081526004602052604090205460ff161561068b57600080fd5b6cff000000000000000000000000606060020a3302169150600082116106b057600080fd5b50600160a060020a0333166000908152600460205260409020805460ff1916600190811790915554606060020a8204906106f0908263ffffffff610e1d16565b600155600160a060020a03331660009081526020819052604090205461071c908263ffffffff610e1d16565b600160a060020a0333166000818152602081905260409081902092909255907ff23a961744a760027f8811c59a0eaef0d29cf965578b17412bcc375b52fa39d19083905190815260200160405180910390a2600160a060020a0333166000600080516020610e348339815191528360405190815260200160405180910390a35050565b600354600090819074010000000000000000000000000000000000000000900460ff16156107cc57600080fd5b600160a060020a03331660009081526004602052604090205460ff16156107f257600080fd5b6cff000000000000000000000000606060020a33021691506000821161081757600080fd5b50600160a060020a0333166000908152600460205260409020805460ff1916600190811790915554606060020a820490610857908263ffffffff610e1d16565b600155600160a060020a038316600090815260208190526040902054610883908263ffffffff610e1d16565b60008085600160a060020a0316600160a060020a031681526020019081526020016000208190555033600160a060020a03167ff23a961744a760027f8811c59a0eaef0d29cf965578b17412bcc375b52fa39d18260405190815260200160405180910390a2600160a060020a0383166000600080516020610e348339815191528360405190815260200160405180910390a3505050565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120548083111561097757600160a060020a0333811660009081526002602090815260408083209388168352929052908120556109ae565b610987818463ffffffff610e0b16565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600160a060020a03811660009081526004602052604081205460ff16610a5157606060020a6cff0000000000000000000000008184021604610a54565b60005b600160a060020a038316600090815260208190526040902054019050919050565b600354600160a060020a031681565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104265780601f106103fb57610100808354040283529160200191610426565b6000600160a060020a0383161515610b0657600080fd5b600160a060020a03331660009081526020819052604090205482111580610b8d5750600160a060020a03331660009081526004602052604090205460ff16158015610b8d575033606060020a0260ff606060020a0216606060020a900460008033600160a060020a0316600160a060020a0316815260200190815260200160002054018211155b1515610b9857600080fd5b600160a060020a03331660009081526004602052604090205460ff161515610bc257610bc2610638565b600160a060020a033316600090815260208190526040902054610beb908363ffffffff610e0b16565b600160a060020a033381166000908152602081905260408082209390935590851681522054610c20908363ffffffff610e1d16565b60008085600160a060020a0316600160a060020a031681526020019081526020016000208190555082600160a060020a031633600160a060020a0316600080516020610e348339815191528460405190815260200160405180910390a350600192915050565b606060020a6cff000000000000000000000000338202160490565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610cd9908363ffffffff610e1d16565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a03908116911614610d8b57600080fd5b600160a060020a0381161515610da057600080fd5b600354600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610e1757fe5b50900390565b600082820183811015610e2c57fe5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058205cbafcda033e730cc6f6689ca45563b4573c9c8c9a818973dee79ef65206a4740029000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000843656868436f696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044345484800000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000843656868436f696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044345484800000000000000000000000000000000000000000000000000000000"
}