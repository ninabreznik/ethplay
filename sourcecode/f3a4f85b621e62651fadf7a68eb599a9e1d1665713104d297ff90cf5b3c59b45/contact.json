{
  "address": "0x8d062edc7b5dc41a48197a9bc2efefdf9599b660",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Airdropper",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-03\n*/\n\npragma solidity ^0.4.16;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control \n * functions, this simplifies the implementation of \"user permissions\". \n */\ncontract Ownable {\n  address public owner;\n\n  function Ownable() {\n    owner = msg.sender;\n  }\n \n  modifier onlyOwner() {\n    if (msg.sender != owner) {\n      revert();\n    }\n    _;\n  }\n \n  function transferOwnership(address newOwner) onlyOwner {\n    if (newOwner != address(0)) {\n      owner = newOwner;\n    }\n  }\n\n}\n\ncontract ERC20Basic {\n  uint public totalSupply;\n  function balanceOf(address who) constant returns (uint);\n  function transfer(address to, uint value);\n  event Transfer(address indexed from, address indexed to, uint value);\n}\n \ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) constant returns (uint);\n  function transferFrom(address from, address to, uint value);\n  function approve(address spender, uint value);\n  event Approval(address indexed owner, address indexed spender, uint value);\n}\n\ncontract Airdropper is Ownable {\n\n    function multisend(address _tokenAddr, address[] dests, uint256[] values)\n    onlyOwner\n    returns (uint256) {\n        uint256 i = 0;\n        while (i < dests.length) {\n           ERC20(_tokenAddr).transfer(dests[i], 10**15 * values[i]);\n           i += 1;\n        }\n        return(i);\n    }\n}",
  "bytecode": "608060405260008054600160a060020a031916331790556102ef806100256000396000f3006080604052600436106100565763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b811461005b578063ad8733ca1461008c578063f2fde38b1461013a575b600080fd5b34801561006757600080fd5b5061007061015d565b60408051600160a060020a039092168252519081900360200190f35b34801561009857600080fd5b50604080516020600460248035828101358481028087018601909752808652610128968435600160a060020a031696369660449591949091019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375094975061016c9650505050505050565b60408051918252519081900360200190f35b34801561014657600080fd5b5061015b600160a060020a0360043516610271565b005b600054600160a060020a031681565b600080548190600160a060020a0316331461018657600080fd5b5060005b83518110156102695784600160a060020a031663a9059cbb85838151811015156101b057fe5b9060200190602002015185848151811015156101c857fe5b9060200190602002015166038d7ea4c68000026040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561024657600080fd5b505af115801561025a573d6000803e3d6000fd5b5050505060018101905061018a565b949350505050565b600054600160a060020a0316331461028857600080fd5b600160a060020a038116156102c0576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a7230582049a390d0a65a38fa8a7a8392b8b7056e212e6314448ffef54d47268a7f3a0c590029"
}