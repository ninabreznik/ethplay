{
  "address": "0x6d6df94260292a382626d5027f9b7bded6ae441f",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "NuruToken",
  "compilerVersion": "v0.4.15+commit.bbb8e64f",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-28\n*/\n\n//Compatible Solidity Compiler Version\n\npragma solidity ^0.4.15;\n\n\n\n/*\nThis Nuru Token contract is based on the ERC20 token contract standard. Additional\nfunctionality has been integrated:\n\n*/\n\n\ncontract NuruToken  {\n    //Nuru Token\n    string public name;\n    \n    //Nuru Token Official Symbol\n\tstring public symbol;\n\t\n\t//Nuru Token Decimals\n\tuint8 public decimals; \n  \n  //database to match user Accounts and their respective balances\n  mapping(address => uint) _balances;\n  mapping(address => mapping( address => uint )) _approvals;\n  \n  //Nuru Token Hard cap \n  uint public cap_nuru;\n  \n  //Number of Nuru Tokens in existence\n  uint public _supply;\n  \n\n  event TokenMint(address newTokenHolder, uint amountOfTokens);\n  event TokenSwapOver();\n  \n  event Transfer(address indexed from, address indexed to, uint value );\n  event Approval(address indexed owner, address indexed spender, uint value );\n  event mintting(address indexed to, uint value );\n  event minterTransfered(address indexed prevCommand, address indexed nextCommand);\n \n //Ethereum address of Authorized Nuru Token Minter\naddress public dev;\n\n//check if hard cap reached before mintting new Tokens\nmodifier cap_reached(uint amount) {\n    \n    if((_supply + amount) > cap_nuru) revert();\n    _;\n}\n\n//check if Account is the Authorized Minter\nmodifier onlyMinter {\n    \n      if (msg.sender != dev) revert();\n      _;\n  }\n  \n  //initialize Nuru Token\n  //pass Nuru Configurations to the Constructor\n function NuruToken(uint cap_token, uint initial_balance, string tokenName, string tokenSymbol, uint8 decimalUnits) public {\n    \n    cap_nuru = cap_token;\n    _supply += initial_balance;\n    _balances[msg.sender] = initial_balance;\n    \n    decimals = decimalUnits;\n\tsymbol = tokenSymbol;\n\tname = tokenName;\n    dev = msg.sender;\n    \n  }\n\n//retrieve number of all Nuru Tokens in existence\nfunction totalSupply() public constant returns (uint supply) {\n    return _supply;\n  }\n\n//check Nuru Token balance of an Ethereum account\nfunction balanceOf(address who) public constant returns (uint value) {\n    return _balances[who];\n  }\n\n//check how many Nuru Tokens a spender is allowed to spend from an owner\nfunction allowance(address _owner, address spender) public constant returns (uint _allowance) {\n    return _approvals[_owner][spender];\n  }\n\n  // A helper to notify if overflow occurs\nfunction safeToAdd(uint a, uint b) internal returns (bool) {\n    return (a + b >= a && a + b >= b);\n  }\n\n//transfer an amount of NURU Tokens to an Ethereum address\nfunction transfer(address to, uint value) public returns (bool ok) {\n\n    if(_balances[msg.sender] < value) revert();\n    \n    if(!safeToAdd(_balances[to], value)) revert();\n    \n\n    _balances[msg.sender] -= value;\n    _balances[to] += value;\n    Transfer(msg.sender, to, value);\n    return true;\n  }\n\n//spend Nuru Tokens from another Ethereum account that approves you as spender\nfunction transferFrom(address from, address to, uint value) public returns (bool ok) {\n    // if you don't have enough balance, throw\n    if(_balances[from] < value) revert();\n\n    // if you don't have approval, throw\n    if(_approvals[from][msg.sender] < value) revert();\n    \n    if(!safeToAdd(_balances[to], value)) revert();\n    \n    // transfer and return true\n    _approvals[from][msg.sender] -= value;\n    _balances[from] -= value;\n    _balances[to] += value;\n    Transfer(from, to, value);\n    return true;\n  }\n  \n  \n//allow another Ethereum account to spend Nuru Tokens from your Account\nfunction approve(address spender, uint value)\n    public\n    returns (bool ok) {\n    _approvals[msg.sender][spender] = value;\n    Approval(msg.sender, spender, value);\n    return true;\n  }\n\n//mechanism for Nuru Token Creation\n//only minter can create new Nuru Tokens\n//check if Nuru Hard Cap is reached before proceedig - revert if true\nfunction mint(address recipient, uint amount) onlyMinter cap_reached(amount) public\n  {\n        \n   _balances[recipient] += amount;  \n   _supply += amount;\n    \n   \n    mintting(recipient, amount);\n  }\n  \n //transfer the priviledge of creating new Nuru Tokens to anothe Ethereum account\nfunction transferMintership(address newMinter) public onlyMinter returns(bool)\n  {\n    dev = newMinter;\n    \n    minterTransfered(dev, newMinter);\n  }\n  \n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"transferMintership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"_allowance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap_nuru\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"cap_token\",\"type\":\"uint256\"},{\"name\":\"initial_balance\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newTokenHolder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"TokenMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TokenSwapOver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mintting\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"prevCommand\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"nextCommand\",\"type\":\"address\"}],\"name\":\"minterTransfered\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b604051610aea380380610aea8339810160405280805191906020018051919060200180518201919060200180518201919060200180519150505b6005859055600680548501905533600160a060020a031660009081526003602052604090208490556002805460ff191660ff831617905560018280516100939291602001906100ce565b5060008380516100a79291602001906100ce565b5060078054600160a060020a03191633600160a060020a03161790555b505050505061016e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061010f57805160ff191683800117855561013c565b8280016001018555821561013c579182015b8281111561013c578251825591602001919060010190610121565b5b5061014992915061014d565b5090565b61016b91905b808211156101495760008155600101610153565b5090565b90565b61096d8061017d6000396000f300606060405236156100cd5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d2578063095ea7b31461015d578063159457901461019357806318160ddd146101b857806323b872dd146101dd578063313ce5671461021957806340c10f191461024257806370a082311461026657806391cca3db1461029757806395d89b41146102c6578063a9059cbb14610351578063cf86a95a14610387578063dd62ed3e146103ba578063f862f6f4146103f1575b600080fd5b34156100dd57600080fd5b6100e5610416565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101225780820151818401525b602001610109565b50505050905090810190601f16801561014f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016857600080fd5b61017f600160a060020a03600435166024356104b4565b604051901515815260200160405180910390f35b341561019e57600080fd5b6101a6610521565b60405190815260200160405180910390f35b34156101c357600080fd5b6101a6610527565b60405190815260200160405180910390f35b34156101e857600080fd5b61017f600160a060020a036004358116906024351660443561052e565b604051901515815260200160405180910390f35b341561022457600080fd5b61022c610644565b60405160ff909116815260200160405180910390f35b341561024d57600080fd5b610264600160a060020a036004351660243561064d565b005b341561027157600080fd5b6101a6600160a060020a03600435166106df565b60405190815260200160405180910390f35b34156102a257600080fd5b6102aa6106fe565b604051600160a060020a03909116815260200160405180910390f35b34156102d157600080fd5b6100e561070d565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101225780820151818401525b602001610109565b50505050905090810190601f16801561014f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561035c57600080fd5b61017f600160a060020a03600435166024356107ab565b604051901515815260200160405180910390f35b341561039257600080fd5b61017f600160a060020a036004351661086e565b604051901515815260200160405180910390f35b34156103c557600080fd5b6101a6600160a060020a03600435811690602435166108ef565b60405190815260200160405180910390f35b34156103fc57600080fd5b6101a661091c565b60405190815260200160405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104ac5780601f10610481576101008083540402835291602001916104ac565b820191906000526020600020905b81548152906001019060200180831161048f57829003601f168201915b505050505081565b600160a060020a03338116600081815260046020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60065481565b6006545b90565b600160a060020a0383166000908152600360205260408120548290101561055457600080fd5b600160a060020a03808516600090815260046020908152604080832033909416835292905220548290101561058857600080fd5b600160a060020a0383166000908152600360205260409020546105ab9083610922565b15156105b657600080fd5b600160a060020a038085166000818152600460209081526040808320338616845282528083208054889003905583835260039091528082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b9392505050565b60025460ff1681565b60075433600160a060020a0390811691161461066857600080fd5b806005548160065401111561067c57600080fd5b600160a060020a0383166000818152600360205260409081902080548501905560068054850190557f7fa8de3746138b85bf512c76fa5d4c3caba43578a1a439f9168d57c82216a6959084905190815260200160405180910390a25b5b505b5050565b600160a060020a0381166000908152600360205260409020545b919050565b600754600160a060020a031681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104ac5780601f10610481576101008083540402835291602001916104ac565b820191906000526020600020905b81548152906001019060200180831161048f57829003601f168201915b505050505081565b600160a060020a033316600090815260036020526040812054829010156107d157600080fd5b600160a060020a0383166000908152600360205260409020546107f49083610922565b15156107ff57600080fd5b600160a060020a033381166000818152600360205260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b92915050565b60075460009033600160a060020a0390811691161461088c57600080fd5b6007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03848116918217928390559091167f6e898c8d3aa830bc251229f7940d3fd4d4f671dcaa00c0b365620044962297a560405160405180910390a35b5b919050565b600160a060020a038083166000908152600460209081526040808320938516835292905220545b92915050565b60055481565b6000828284011015801561093857508182840110155b90505b929150505600a165627a7a72305820bf47ba0d0845acfad60b5ffb022c964c116fc9c6070b95d7aba4f6d5dc4623ea0029000000000000000000000000000000000000000000990746187217b959000000000000000000000000000000000000000000000000422ca8b0a00a425000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000a4e75727520546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044e52435400000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000990746187217b959000000000000000000000000000000000000000000000000422ca8b0a00a425000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000a4e75727520546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044e52435400000000000000000000000000000000000000000000000000000000"
}