{
  "address": "0xe83233ed64c5cdfd43edabc68ced15eded125a9e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ShareholderDividend",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-13\n*/\n\npragma solidity ^0.4.24;\n\n//\n//                       .#########'\n//                    .###############+\n//                  ,####################\n//                `#######################+\n//               ;##########################\n//              #############################.\n//             ###############################,\n//           +##################,    ###########`\n//          .###################     .###########\n//         ##############,          .###########+\n//         #############`            .############`\n//         ###########+                ############\n//        ###########;                  ###########\n//        ##########'                    ###########                                                                                      \n//       '##########    '#.        `,     ##########                                                                                    \n//       ##########    ####'      ####.   :#########;                                                                                   \n//      `#########'   :#####;    ######    ##########                                                                                 \n//      :#########    #######:  #######    :#########         \n//      +#########    :#######.########     #########`       \n//      #########;     ###############'     #########:       \n//      #########       #############+      '########'        \n//      #########        ############       :#########        \n//      #########         ##########        ,#########        \n//      #########         :########         ,#########        \n//      #########        ,##########        ,#########        \n//      #########       ,############       :########+        \n//      #########      .#############+      '########'        \n//      #########:    `###############'     #########,        \n//      +########+    ;#######`;#######     #########         \n//      ,#########    '######`  '######    :#########         \n//       #########;   .#####`    '#####    ##########         \n//       ##########    '###`      +###    :#########:         \n//       ;#########+     `                ##########          \n//        ##########,                    ###########          \n//         ###########;                ############\n//         +############             .############`\n//          ###########+           ,#############;\n//          `###########     ;++#################\n//           :##########,    ###################\n//            '###########.'###################\n//             +##############################\n//              '############################`\n//               .##########################\n//                 #######################:\n//                   ###################+\n//                     +##############:\n//                        :#######+`\n//\n//\n//\n// Play0x.com (The ONLY gaming platform for all ERC20 Tokens)\n// -------------------------------------------------------------------------------------------------------\n// * Multiple types of game platforms\n// * Build your own game zone - Not only playing games, but also allowing other players to join your game.\n// * Support all ERC20 tokens.\n//\n//\n//\n// 0xC Token (Contract address : 0x60d8234a662651e586173c17eb45ca9833a7aa6c)\n// -------------------------------------------------------------------------------------------------------\n// * 0xC Token is an ERC20 Token specifically for digital entertainment.\n// * No ICO and private sales,fair access.\n// * There will be hundreds of games using 0xC as a game token.\n// * Token holders can permanently get ETH's profit sharing.\n//\n\n/**\n* @title SafeMath\n* @dev Math operations with safety checks that throw on error\n*/\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n/**\n* @title Ownable\n* @dev The Ownable contract has an owner address, and provides basic authorization control \n* functions, this simplifies the implementation of \"user permissions\". \n*/ \ncontract Ownable {\n    address public owner;\n\n/** \n* @dev The Ownable constructor sets the original `owner` of the contract to the sender\n* account.\n*/\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    /**\n    * @dev Throws if called by any account other than the owner.\n    */\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"only for owner\");\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n}\n\n//Main contract\ncontract ShareholderDividend is Ownable{\n    using SafeMath for uint256;\n    bool public IsWithdrawActive = true;\n    \n    //for Shareholder banlance record\n    mapping(address => uint256) EtherBook;\n\n    event withdrawLog(address userAddress, uint256 amount);\n\n    function() public payable{}\n\n    //Add profits for accounts\n    function ProfitDividend (address[] addressArray, uint256[] profitArray) public onlyOwner\n    {\n        for( uint256 i = 0; i < addressArray.length;i++)\n        {\n            EtherBook[addressArray[i]] = EtherBook[addressArray[i]].add(profitArray[i]);\n        }\n    }\n    \n    // Adjust balance of accounts in the vault\n    function AdjustEtherBook(address[] addressArray, uint256[] profitArray) public onlyOwner\n    {\n        for( uint256 i = 0; i < addressArray.length;i++)\n        {\n            EtherBook[addressArray[i]] = profitArray[i];\n        }\n    }\n    \n    //Check balance in the vault\n    function CheckBalance(address theAddress) public view returns(uint256 profit)\n    {\n        return EtherBook[theAddress];\n    }\n    \n    //User withdraw balance from the vault\n    function withdraw() public payable\n    {\n        //if withdraw actived;\n        require(IsWithdrawActive == true, \"Vault is not ready.\");\n        require(EtherBook[msg.sender]>0, \"Your vault is empty.\");\n\n        uint share = EtherBook[msg.sender];\n        EtherBook[msg.sender] = 0;\n        msg.sender.transfer(share);\n        \n        emit withdrawLog(msg.sender, share);\n    }\n    \n    //Set withdraw status.\n    function UpdateActive(bool _IsWithdrawActive) public onlyOwner\n    {\n        IsWithdrawActive = _IsWithdrawActive;\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_IsWithdrawActive\",\"type\":\"bool\"}],\"name\":\"UpdateActive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"theAddress\",\"type\":\"address\"}],\"name\":\"CheckBalance\",\"outputs\":[{\"name\":\"profit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"profitArray\",\"type\":\"uint256[]\"}],\"name\":\"AdjustEtherBook\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"profitArray\",\"type\":\"uint256[]\"}],\"name\":\"ProfitDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsWithdrawActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawLog\",\"type\":\"event\"}]",
  "bytecode": "608060405260008054600160a060020a031960a060020a60ff021990911674010000000000000000000000000000000000000000171633179055610750806100486000396000f30060806040526004361061008d5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631aeaaae8811461008f5780632e4d59c4146100a95780633ccfd60b146100dc57806350883b2d146100e45780637fcff511146101725780638da5cb5b14610200578063a1799cae14610231578063f2fde38b1461025a575b005b34801561009b57600080fd5b5061008d600435151561027b565b3480156100b557600080fd5b506100ca600160a060020a036004351661030b565b60408051918252519081900360200190f35b61008d610326565b3480156100f057600080fd5b506040805160206004803580820135838102808601850190965280855261008d95369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506104849650505050505050565b34801561017e57600080fd5b506040805160206004803580820135838102808601850190965280855261008d95369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375094975061053c9650505050505050565b34801561020c57600080fd5b50610215610633565b60408051600160a060020a039092168252519081900360200190f35b34801561023d57600080fd5b50610246610642565b604080519115158252519081900360200190f35b34801561026657600080fd5b5061008d600160a060020a0360043516610663565b600054600160a060020a031633146102cb576040805160e560020a62461bcd02815260206004820152600e6024820152600080516020610705833981519152604482015290519081900360640190fd5b60008054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b600160a060020a031660009081526001602052604090205490565b6000805474010000000000000000000000000000000000000000900460ff16151560011461039e576040805160e560020a62461bcd02815260206004820152601360248201527f5661756c74206973206e6f742072656164792e00000000000000000000000000604482015290519081900360640190fd5b3360009081526001602052604081205411610403576040805160e560020a62461bcd02815260206004820152601460248201527f596f7572207661756c7420697320656d7074792e000000000000000000000000604482015290519081900360640190fd5b5033600081815260016020526040808220805490839055905190929183156108fc02918491818181858888f19350505050158015610445573d6000803e3d6000fd5b50604080513381526020810183905281517ff74fad994845ef73476114306db4fb3ddeafc0141ecbc906ba670c6d1f037dc6929181900390910190a150565b60008054600160a060020a031633146104d5576040805160e560020a62461bcd02815260206004820152600e6024820152600080516020610705833981519152604482015290519081900360640190fd5b5060005b82518110156105375781818151811015156104f057fe5b9060200190602002015160016000858481518110151561050c57fe5b6020908102909101810151600160a060020a03168252810191909152604001600020556001016104d9565b505050565b60008054600160a060020a0316331461058d576040805160e560020a62461bcd02815260206004820152600e6024820152600080516020610705833981519152604482015290519081900360640190fd5b5060005b8251811015610537576105f682828151811015156105ab57fe5b906020019060200201516001600086858151811015156105c757fe5b6020908102909101810151600160a060020a03168252810191909152604001600020549063ffffffff6106ee16565b60016000858481518110151561060857fe5b6020908102909101810151600160a060020a0316825281019190915260400160002055600101610591565b600054600160a060020a031681565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a031633146106b3576040805160e560020a62461bcd02815260206004820152600e6024820152600080516020610705833981519152604482015290519081900360640190fd5b600160a060020a038116156106eb576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b6000828201838110156106fd57fe5b939250505056006f6e6c7920666f72206f776e6572000000000000000000000000000000000000a165627a7a723058201418d12ac55de11f6e9fa8db778cce0656371c388fab8a51ce8fb5a3ccab36e90029"
}