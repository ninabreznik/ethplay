{
  "address": "0x6e899e2503d6f262b6f97ac06c8e1ed0b63acfda",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenHolder",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-10\n*/\n\npragma solidity ^0.4.24;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (_a == 0) {\n      return 0;\n    }\n\n    c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = _a / _b;\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n    return _a / _b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    c = _a + _b;\n    assert(c >= _a);\n    return c;\n  }\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address _who) public view returns (uint256);\n  function transfer(address _to, uint256 _value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title Token Holder with vesting period\n * @dev holds any amount of tokens and allows to release selected number of tokens after every vestingInterval seconds\n */\ncontract TokenHolder is Ownable {\n    using SafeMath for uint;\n\n    event Released(uint amount);\n\n    /**\n     * @dev start of the vesting period\n     */\n    uint public start;\n    /**\n     * @dev interval between token releases\n     */\n    uint public vestingInterval;\n    /**\n     * @dev already released value\n     */\n    uint public released;\n    /**\n     * @dev value can be released every period\n     */\n    uint public value;\n    /**\n     * @dev holding token\n     */\n    ERC20Basic public token;\n\n    constructor(uint _start, uint _vestingInterval, uint _value, ERC20Basic _token) public {\n        start = _start;\n        vestingInterval = _vestingInterval;\n        value = _value;\n        token = _token;\n    }\n\n    /**\n     * @dev transfers vested tokens to beneficiary (to the owner of the contract)\n     * @dev automatically calculates amount to release\n     */\n    function release() onlyOwner public {\n        uint toRelease = calculateVestedAmount().sub(released);\n        uint left = token.balanceOf(this);\n        if (left < toRelease) {\n            toRelease = left;\n        }\n        require(toRelease > 0, \"nothing to release\");\n        released = released.add(toRelease);\n        require(token.transfer(msg.sender, toRelease));\n        emit Released(toRelease);\n    }\n\n    function calculateVestedAmount() view internal returns (uint) {\n        return now.sub(start).div(vestingInterval).mul(value);\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b5060405160808061065d833981016040908152815160208301519183015160609093015160008054600160a060020a0319908116331790915560019290925560029290925560049290925560058054600160a060020a03909216919092161790556105dd806100806000396000f3006080604052600436106100985763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633fa4f245811461009d578063715018a6146100c457806386d1a69f146100db5780638da5cb5b146100f05780639613252114610121578063b8e50cab14610136578063be9a65551461014b578063f2fde38b14610160578063fc0c546a14610181575b600080fd5b3480156100a957600080fd5b506100b2610196565b60408051918252519081900360200190f35b3480156100d057600080fd5b506100d961019c565b005b3480156100e757600080fd5b506100d9610208565b3480156100fc57600080fd5b5061010561043f565b60408051600160a060020a039092168252519081900360200190f35b34801561012d57600080fd5b506100b261044e565b34801561014257600080fd5b506100b2610454565b34801561015757600080fd5b506100b261045a565b34801561016c57600080fd5b506100d9600160a060020a0360043516610460565b34801561018d57600080fd5b50610105610483565b60045481565b600054600160a060020a031633146101b357600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600080548190600160a060020a0316331461022257600080fd5b61023c600354610230610492565b9063ffffffff6104d216565b600554604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051929450600160a060020a03909116916370a08231916024808201926020929091908290030181600087803b1580156102a557600080fd5b505af11580156102b9573d6000803e3d6000fd5b505050506040513d60208110156102cf57600080fd5b50519050818110156102df578091505b6000821161034e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f7468696e6720746f2072656c656173650000000000000000000000000000604482015290519081900360640190fd5b600354610361908363ffffffff6104e916565b600355600554604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018590529051600160a060020a039092169163a9059cbb916044808201926020929091908290030181600087803b1580156103d157600080fd5b505af11580156103e5573d6000803e3d6000fd5b505050506040513d60208110156103fb57600080fd5b5051151561040857600080fd5b6040805183815290517ffb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c5659181900360200190a15050565b600054600160a060020a031681565b60035481565b60025481565b60015481565b600054600160a060020a0316331461047757600080fd5b610480816104f6565b50565b600554600160a060020a031681565b60006104cd6004546104c16002546104b5600154426104d290919063ffffffff16565b9063ffffffff61057316565b9063ffffffff61058816565b905090565b6000828211156104de57fe5b508082035b92915050565b818101828110156104e357fe5b600160a060020a038116151561050b57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000818381151561058057fe5b049392505050565b6000821515610599575060006104e3565b508181028183828115156105a957fe5b04146104e357fe00a165627a7a72305820a892fc0990b0ef658bc8c55646544fba8990cad9e00bea8e6af9596f9b25c7c00029000000000000000000000000000000000000000000000000000000005c38020c00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000055de6a779bbac00000000000000000000000000001582db549afe91a1b764e0b50028028e4289b5a1",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000005c38020c00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000055de6a779bbac00000000000000000000000000001582db549afe91a1b764e0b50028028e4289b5a1"
}