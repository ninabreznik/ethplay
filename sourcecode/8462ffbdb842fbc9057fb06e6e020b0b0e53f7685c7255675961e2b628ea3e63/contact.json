{
  "address": "0x190e569be071f40c704e15825f285481cb74b6cc",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "FAMEToken",
  "contractName": "FAMEToken",
  "compilerVersion": "v0.4.11+commit.68ef5810",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-06-23\n*/\n\npragma solidity ^0.4.11;\n\n//------------------------------------------------------------------------------------------------\n// ERC20 Standard Token Implementation, based on ERC Standard:\n// https://github.com/ethereum/EIPs/issues/20\n// With some inspiration from ConsenSys HumanStandardToken as well\n// Copyright 2017 BattleDrome\n//------------------------------------------------------------------------------------------------\n\ncontract ERC20Standard {\n\tuint public totalSupply;\n\t\n\tstring public name;\n\tuint8 public decimals;\n\tstring public symbol;\n\tstring public version;\n\t\n\tmapping (address => uint256) balances;\n\tmapping (address => mapping (address => uint)) allowed;\n\n\t//Fix for short address attack against ERC20\n\tmodifier onlyPayloadSize(uint size) {\n\t\tassert(msg.data.length == size + 4);\n\t\t_;\n\t} \n\n\tfunction balanceOf(address _owner) constant returns (uint balance) {\n\t\treturn balances[_owner];\n\t}\n\n\tfunction transfer(address _recipient, uint _value) onlyPayloadSize(2*32) {\n\t\trequire(balances[msg.sender] >= _value && _value > 0);\n\t    balances[msg.sender] -= _value;\n\t    balances[_recipient] += _value;\n\t    Transfer(msg.sender, _recipient, _value);        \n    }\n\n\tfunction transferFrom(address _from, address _to, uint _value) {\n\t\trequire(balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0);\n        balances[_to] += _value;\n        balances[_from] -= _value;\n        allowed[_from][msg.sender] -= _value;\n        Transfer(_from, _to, _value);\n    }\n\n\tfunction approve(address _spender, uint _value) {\n\t\tallowed[msg.sender][_spender] = _value;\n\t\tApproval(msg.sender, _spender, _value);\n\t}\n\n\tfunction allowance(address _spender, address _owner) constant returns (uint balance) {\n\t\treturn allowed[_owner][_spender];\n\t}\n\n\t//Event which is triggered to log all transfers to this contract's event log\n\tevent Transfer(\n\t\taddress indexed _from,\n\t\taddress indexed _to,\n\t\tuint _value\n\t\t);\n\t\t\n\t//Event which is triggered whenever an owner approves a new allowance for a spender.\n\tevent Approval(\n\t\taddress indexed _owner,\n\t\taddress indexed _spender,\n\t\tuint _value\n\t\t);\n\n}\n\n//------------------------------------------------------------------------------------------------\n// FAME ERC20 Token, based on ERC20Standard interface\n// Copyright 2017 BattleDrome\n//------------------------------------------------------------------------------------------------\n\n//------------------------------------------------------------------------------------------------\n// LICENSE\n//\n// This file is part of BattleDrome.\n// \n// BattleDrome is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// \n// BattleDrome is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// \n// You should have received a copy of the GNU General Public License\n// along with BattleDrome.  If not, see <http://www.gnu.org/licenses/>.\n//------------------------------------------------------------------------------------------------\n\ncontract FAMEToken is ERC20Standard {\n\n\tfunction FAMEToken() {\n\t\ttotalSupply = 2100000 szabo;\t\t\t//Total Supply (including all decimal places!)\n\t\tname = \"Fame\";\t\t\t\t\t\t\t//Pretty Name\n\t\tdecimals = 12;\t\t\t\t\t\t\t//Decimal places (with 12 decimal places 1 szabo = 1 token in uint256)\n\t\tsymbol = \"FAM\";\t\t\t\t\t\t\t//Ticker Symbol (3 characters, upper case)\n\t\tversion = \"FAME1.0\";\t\t\t\t\t//Version Code\n\t\tbalances[msg.sender] = totalSupply;\t\t//Assign all balance to creator initially for distribution from there.\n\t}\n\n\t//Burn _value of tokens from your balance.\n\t//Will destroy the tokens, removing them from your balance, and reduce totalSupply accordingly.\n\tfunction burn(uint _value) {\n\t\trequire(balances[msg.sender] >= _value && _value > 0);\n        balances[msg.sender] -= _value;\n        totalSupply -= _value;\n        Burn(msg.sender, _value);\n\t}\n\n\t//Event to log any time someone burns tokens to the contract's event log:\n\tevent Burn(\n\t\taddress indexed _owner,\n\t\tuint _value\n\t\t);\n\n}",
  "bytecode": "6060604052341561000c57fe5b5b671d24b2dfac5200006000556040805180820190915260048082527f46616d6500000000000000000000000000000000000000000000000000000000602090920191825261005d91600191610114565b506002805460ff1916600c1790556040805180820190915260038082527f46414d000000000000000000000000000000000000000000000000000000000060209092019182526100ad9181610114565b506040805180820190915260078082527f46414d45312e300000000000000000000000000000000000000000000000000060209092019182526100f291600491610114565b5060008054600160a060020a033316825260056020526040909120555b6101b4565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015557805160ff1916838001178555610182565b82800160010185558215610182579182015b82811115610182578251825591602001919060010190610167565b5b5061018f929150610193565b5090565b6101b191905b8082111561018f5760008155600101610199565b5090565b90565b61084a806101c36000396000f300606060405236156100ac5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100ae578063095ea7b31461013e57806318160ddd1461015f57806323b872dd14610181578063313ce567146101a857806342966c68146101ce57806354fd4d50146101e357806370a082311461027357806395d89b41146102a1578063a9059cbb14610331578063dd62ed3e14610352575bfe5b34156100b657fe5b6100be610386565b604080516020808252835181830152835191928392908301918501908083838215610104575b80518252602083111561010457601f1990920191602091820191016100e4565b505050905090810190601f1680156101305780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014657fe5b61015d600160a060020a0360043516602435610413565b005b341561016757fe5b61016f610475565b60408051918252519081900360200190f35b341561018957fe5b61015d600160a060020a036004358116906024351660443561047b565b005b34156101b057fe5b6101b861056a565b6040805160ff9092168252519081900360200190f35b34156101d657fe5b61015d600435610573565b005b34156101eb57fe5b6100be610607565b604080516020808252835181830152835191928392908301918501908083838215610104575b80518252602083111561010457601f1990920191602091820191016100e4565b505050905090810190601f1680156101305780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561027b57fe5b61016f600160a060020a0360043516610695565b60408051918252519081900360200190f35b34156102a957fe5b6100be6106b4565b604080516020808252835181830152835191928392908301918501908083838215610104575b80518252602083111561010457601f1990920191602091820191016100e4565b505050905090810190601f1680156101305780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561033957fe5b61015d600160a060020a0360043516602435610742565b005b341561035a57fe5b61016f600160a060020a03600435811690602435166107f1565b60408051918252519081900360200190f35b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561040b5780601f106103e05761010080835404028352916020019161040b565b820191906000526020600020905b8154815290600101906020018083116103ee57829003601f168201915b505050505081565b600160a060020a03338116600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35b5050565b60005481565b600160a060020a0383166000908152600560205260409020548190108015906104cb5750600160a060020a0380841660009081526006602090815260408083203390941683529290522054819010155b80156104d75750600081115b15156104e35760006000fd5b600160a060020a03808316600081815260056020908152604080832080548701905587851680845281842080548890039055600683528184203390961684529482529182902080548690039055815185815291519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35b505050565b60025460ff1681565b600160a060020a03331660009081526005602052604090205481901080159061059c5750600081115b15156105a85760006000fd5b600160a060020a0333166000818152600560209081526040808320805486900390558254859003909255815184815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a25b50565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561040b5780601f106103e05761010080835404028352916020019161040b565b820191906000526020600020905b8154815290600101906020018083116103ee57829003601f168201915b505050505081565b600160a060020a0381166000908152600560205260409020545b919050565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561040b5780601f106103e05761010080835404028352916020019161040b565b820191906000526020600020905b8154815290600101906020018083116103ee57829003601f168201915b505050505081565b60403660441461074e57fe5b600160a060020a0333166000908152600560205260409020548290108015906107775750600082115b15156107835760006000fd5b600160a060020a03338116600081815260056020908152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35b5b505050565b600160a060020a038082166000908152600660209081526040808320938616835292905220545b929150505600a165627a7a723058205ed12407f498699c56ebb6a60067d1b3c25483be3d2c9e5688281067fc54a69e0029"
}