{
  "address": "0xa1d9922dcf52cb15c68bfac7273daa538b766533",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DutchExchangeProxy",
  "compilerVersion": "v0.5.2+commit.1df8f40c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-06\n*/\n\n// File: @gnosis.pm/util-contracts/contracts/Proxy.sol\n\npragma solidity ^0.5.2;\n\n/// @title Proxied - indicates that a contract will be proxied. Also defines storage requirements for Proxy.\n/// @author Alan Lu - <[email protected]>\ncontract Proxied {\n    address public masterCopy;\n}\n\n/// @title Proxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n/// @author Stefan George - <[email protected]>\ncontract Proxy is Proxied {\n    /// @dev Constructor function sets address of master copy contract.\n    /// @param _masterCopy Master copy address.\n    constructor(address _masterCopy) public {\n        require(_masterCopy != address(0), \"The master copy is required\");\n        masterCopy = _masterCopy;\n    }\n\n    /// @dev Fallback function forwards all transactions and returns all received return data.\n    function() external payable {\n        address _masterCopy = masterCopy;\n        assembly {\n            calldatacopy(0, 0, calldatasize)\n            let success := delegatecall(not(0), _masterCopy, 0, calldatasize, 0, 0)\n            returndatacopy(0, 0, returndatasize)\n            switch success\n                case 0 {\n                    revert(0, returndatasize)\n                }\n                default {\n                    return(0, returndatasize)\n                }\n        }\n    }\n}\n\n// File: contracts/DutchExchangeProxy.sol\n\npragma solidity ^0.5.2;\n\n\n\ncontract DutchExchangeProxy is Proxy {\n    constructor(address _masterCopy) public Proxy(_masterCopy) {}\n}",
  "bytecode": "608060405234801561001057600080fd5b506040516020806101d38339810180604052602081101561003057600080fd5b505180600160a060020a03811615156100aa57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f546865206d617374657220636f70792069732072657175697265640000000000604482015290519081900360640190fd5b60008054600160a060020a03909216600160a060020a03199092169190911790555060f9806100da6000396000f3fe6080604052600436106038577c01000000000000000000000000000000000000000000000000000000006000350463a619486e81146076575b6000805473ffffffffffffffffffffffffffffffffffffffff169036908037600080368184600019f43d6000803e8080156071573d6000f35b3d6000fd5b348015608157600080fd5b50608860b1565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60005473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a72305820ab0bb86db07f0a188c95761122967bd80acd407bd46d324385269d16358cd51400290000000000000000000000003c785d30194ec1118e5d14e7c508c2b4ecbc87c2",
  "constructorArguments": "0000000000000000000000003c785d30194ec1118e5d14e7c508c2b4ecbc87c2"
}