{
  "address": "0xd3cf41315daf77a06bade6a931f47c1ab98d2952",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Publisher",
  "compilerVersion": "v0.5.3+commit.10d17f24",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-01\n*/\n\npragma solidity ^0.5.3;\n\ninterface Token {\n  function transfer( address to, uint amount ) external;\n  function transferFrom( address from, address to, uint amount ) external;\n}\n\ninterface Membership {\n  function isMember( address pusher ) external returns (bool);\n}\n\ncontract Owned\n{\n  address payable public owner;\n  constructor() public { owner = msg.sender; }\n\n  function changeOwner( address payable newOwner ) isOwner public {\n    owner = newOwner;\n  }\n\n  modifier isOwner {\n    require( msg.sender == owner );\n    _;\n  }\n}\n\ncontract Publisher is Owned\n{\n  event Published( string indexed receiverpubkey,\n                   string ipfshash,\n                   string redmeta );\n\n  Membership public membership;\n\n  address payable public treasury;\n  uint256 public fee;\n  uint256 dao;\n\n  uint256 public tokenFee;\n  Token   public token;\n\n  constructor() public {\n    dao = uint256(100);\n  }\n\n  function setFee( uint256 _fee ) isOwner public {\n    fee = _fee;\n  }\n\n  function setDao( uint256 _dao ) isOwner public {\n    dao = _dao;\n  }\n\n  function setTreasury( address payable _treasury ) isOwner public {\n    treasury = _treasury;\n  }\n\n  function setMembership( address _contract ) isOwner public {\n    membership = Membership(_contract);\n  }\n\n  function setTokenFee( uint256 _fee ) isOwner public {\n    tokenFee = _fee;\n  }\n\n  function setToken( address _token ) isOwner public {\n    token = Token(_token);\n  }\n\n  function publish( string memory receiverpubkey,\n                    string memory ipfshash,\n                    string memory redmeta ) payable public {\n\n    require(    msg.value >= fee\n             && membership.isMember(msg.sender) );\n\n    if (treasury != address(0))\n      treasury.transfer( msg.value - msg.value / dao );\n\n    emit Published( receiverpubkey, ipfshash, redmeta );\n  }\n\n  function publish_t( string memory receiverpubkey,\n                      string memory ipfshash,\n                      string memory redmeta ) public {\n\n    require( membership.isMember(msg.sender) );\n\n    token.transferFrom( msg.sender, address(this), tokenFee );\n\n    if (treasury != address(0)) {\n      token.transfer( treasury, tokenFee - tokenFee/dao );\n    }\n\n    emit Published( receiverpubkey, ipfshash, redmeta );\n  }\n\n  function withdraw( uint256 amount ) isOwner public {\n    owner.transfer( amount );\n  }\n\n  function sendTok( address _tok, address _to, uint256 _qty ) isOwner public {\n    Token(_tok).transfer( _to, _qty );\n  }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setTokenFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setMembership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tok\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_qty\",\"type\":\"uint256\"}],\"name\":\"sendTok\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiverpubkey\",\"type\":\"string\"},{\"name\":\"ipfshash\",\"type\":\"string\"},{\"name\":\"redmeta\",\"type\":\"string\"}],\"name\":\"publish\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dao\",\"type\":\"uint256\"}],\"name\":\"setDao\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"membership\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiverpubkey\",\"type\":\"string\"},{\"name\":\"ipfshash\",\"type\":\"string\"},{\"name\":\"redmeta\",\"type\":\"string\"}],\"name\":\"publish_t\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"receiverpubkey\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ipfshash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"redmeta\",\"type\":\"string\"}],\"name\":\"Published\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a031916331790556064600455610e1f806100376000396000f3fe6080604052600436106101025760003560e060020a900480636d25e37711610099578063a6f9dae111610068578063a6f9dae114610490578063dbca4fc4146104c3578063ddca3f4314610684578063f0f4426014610699578063fc0c546a146106cc57610102565b80636d25e377146102885780637178b98a1461043c5780638da5cb5b14610466578063a2bf68b91461047b57610102565b806350944a8f116100d557806350944a8f146101b7578063533c835b146101ea57806361d027b31461022d57806369fe0e2d1461025e57610102565b8063144fa6d7146101075780632e1a7d4d1461013c57806331b31b88146101665780634559913614610190575b600080fd5b34801561011357600080fd5b5061013a6004803603602081101561012a57600080fd5b5035600160a060020a03166106e1565b005b34801561014857600080fd5b5061013a6004803603602081101561015f57600080fd5b5035610727565b34801561017257600080fd5b5061013a6004803603602081101561018957600080fd5b503561077b565b34801561019c57600080fd5b506101a5610797565b60408051918252519081900360200190f35b3480156101c357600080fd5b5061013a600480360360208110156101da57600080fd5b5035600160a060020a031661079d565b3480156101f657600080fd5b5061013a6004803603606081101561020d57600080fd5b50600160a060020a038135811691602081013590911690604001356107e3565b34801561023957600080fd5b5061024261087a565b60408051600160a060020a039092168252519081900360200190f35b34801561026a57600080fd5b5061013a6004803603602081101561028157600080fd5b5035610889565b61013a6004803603606081101561029e57600080fd5b8101906020810181356401000000008111156102b957600080fd5b8201836020820111156102cb57600080fd5b803590602001918460018302840111640100000000831117156102ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561034057600080fd5b82018360208201111561035257600080fd5b8035906020019184600183028401116401000000008311171561037457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156103c757600080fd5b8201836020820111156103d957600080fd5b803590602001918460018302840111640100000000831117156103fb57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506108a5945050505050565b34801561044857600080fd5b5061013a6004803603602081101561045f57600080fd5b5035610b13565b34801561047257600080fd5b50610242610b2f565b34801561048757600080fd5b50610242610b3e565b34801561049c57600080fd5b5061013a600480360360208110156104b357600080fd5b5035600160a060020a0316610b4d565b3480156104cf57600080fd5b5061013a600480360360608110156104e657600080fd5b81019060208101813564010000000081111561050157600080fd5b82018360208201111561051357600080fd5b8035906020019184600183028401116401000000008311171561053557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561058857600080fd5b82018360208201111561059a57600080fd5b803590602001918460018302840111640100000000831117156105bc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561060f57600080fd5b82018360208201111561062157600080fd5b8035906020019184600183028401116401000000008311171561064357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b93945050505050565b34801561069057600080fd5b506101a5610d98565b3480156106a557600080fd5b5061013a600480360360208110156106bc57600080fd5b5035600160a060020a0316610d9e565b3480156106d857600080fd5b50610242610de4565b600054600160a060020a031633146106f857600080fd5b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a0316331461073e57600080fd5b60008054604051600160a060020a039091169183156108fc02918491818181858888f19350505050158015610777573d6000803e3d6000fd5b5050565b600054600160a060020a0316331461079257600080fd5b600555565b60055481565b600054600160a060020a031633146107b457600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a031633146107fa57600080fd5b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561085d57600080fd5b505af1158015610871573d6000803e3d6000fd5b50505050505050565b600254600160a060020a031681565b600054600160a060020a031633146108a057600080fd5b600355565b60035434101580156109455750600154604080517fa230c5240000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a039092169163a230c524916024808201926020929091908290030181600087803b15801561091857600080fd5b505af115801561092c573d6000803e3d6000fd5b505050506040513d602081101561094257600080fd5b50515b151561095057600080fd5b600254600160a060020a0316156109b157600254600454600160a060020a03909116906108fc903481151561098157fe5b0434039081150290604051600060405180830381858888f193505050501580156109af573d6000803e3d6000fd5b505b826040518082805190602001908083835b602083106109e15780518252601f1990920191602091820191016109c2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207f46a08b125611ec320cc1058dd976ee1adea76edb0e29c87708a4ac583d31bd778383604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610a72578181015183820152602001610a5a565b50505050905090810190601f168015610a9f5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610ad2578181015183820152602001610aba565b50505050905090810190601f168015610aff5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a2505050565b600054600160a060020a03163314610b2a57600080fd5b600455565b600054600160a060020a031681565b600154600160a060020a031681565b600054600160a060020a03163314610b6457600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600154604080517fa230c5240000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a039092169163a230c524916024808201926020929091908290030181600087803b158015610bf957600080fd5b505af1158015610c0d573d6000803e3d6000fd5b505050506040513d6020811015610c2357600080fd5b50511515610c3057600080fd5b600654600554604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481019290925251600160a060020a03909216916323b872dd9160648082019260009290919082900301818387803b158015610ca557600080fd5b505af1158015610cb9573d6000803e3d6000fd5b5050600254600160a060020a03161591506109b1905057600654600254600454600554600160a060020a039384169363a9059cbb93169190811515610cfa57fe5b04600554036040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015610d5157600080fd5b505af1158015610d65573d6000803e3d6000fd5b5050505082604051808280519060200190808383602083106109e15780518252601f1990920191602091820191016109c2565b60035481565b600054600160a060020a03163314610db557600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600654600160a060020a03168156fea165627a7a72305820deebe0aad469859390d5a955c78905213227729537eea02ad59226b2ca1f30020029"
}