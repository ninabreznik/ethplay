{
  "address": "0xe3b7fb25d7e61ce01a43c8de9fcdd7bc6568fc5e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CertificationCentre",
  "compilerVersion": "v0.4.2+commit.af6afb04",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2016-10-25\n*/\n\npragma solidity ^0.4.2;\n\ncontract OwnedI {\n    event LogOwnerChanged(address indexed previousOwner, address indexed newOwner);\n\n    function getOwner()\n        constant\n        returns (address);\n\n    function setOwner(address newOwner)\n        returns (bool success); \n}\n\ncontract Owned is OwnedI {\n    /**\n     * @dev Made private to protect against child contract setting it to 0 by mistake.\n     */\n    address private owner;\n\n    function Owned() {\n        owner = msg.sender;\n    }\n\n    modifier fromOwner {\n        if (msg.sender != owner) {\n            throw;\n        }\n        _;\n    }\n\n    function getOwner()\n        constant\n        returns (address) {\n        return owner;\n    }\n\n    function setOwner(address newOwner)\n        fromOwner \n        returns (bool success) {\n        if (newOwner == 0) {\n            throw;\n        }\n        if (owner != newOwner) {\n            LogOwnerChanged(owner, newOwner);\n            owner = newOwner;\n        }\n        success = true;\n    }\n}\n\ncontract PullPaymentCapable {\n    uint256 private totalBalance;\n    mapping(address => uint256) private payments;\n\n    event LogPaymentReceived(address indexed dest, uint256 amount);\n\n    function PullPaymentCapable() {\n        if (0 < this.balance) {\n            asyncSend(msg.sender, this.balance);\n        }\n    }\n\n    // store sent amount as credit to be pulled, called by payer\n    function asyncSend(address dest, uint256 amount) internal {\n        if (amount > 0) {\n            totalBalance += amount;\n            payments[dest] += amount;\n            LogPaymentReceived(dest, amount);\n        }\n    }\n\n    function getTotalBalance()\n        constant\n        returns (uint256) {\n        return totalBalance;\n    }\n\n    function getPaymentOf(address beneficiary) \n        constant\n        returns (uint256) {\n        return payments[beneficiary];\n    }\n\n    // withdraw accumulated balance, called by payee\n    function withdrawPayments()\n        external \n        returns (bool success) {\n        uint256 payment = payments[msg.sender];\n        payments[msg.sender] = 0;\n        totalBalance -= payment;\n        if (!msg.sender.call.value(payment)()) {\n            throw;\n        }\n        success = true;\n    }\n\n    function fixBalance()\n        returns (bool success);\n\n    function fixBalanceInternal(address dest)\n        internal\n        returns (bool success) {\n        if (totalBalance < this.balance) {\n            uint256 amount = this.balance - totalBalance;\n            payments[dest] += amount;\n            LogPaymentReceived(dest, amount);\n        }\n        return true;\n    }\n}\n\ncontract WithBeneficiary is Owned {\n    /**\n     * @notice Address that is forwarded all value.\n     * @dev Made private to protect against child contract setting it to 0 by mistake.\n     */\n    address private beneficiary;\n    \n    event LogBeneficiarySet(address indexed previousBeneficiary, address indexed newBeneficiary);\n\n    function WithBeneficiary(address _beneficiary) payable {\n        if (_beneficiary == 0) {\n            throw;\n        }\n        beneficiary = _beneficiary;\n        if (msg.value > 0) {\n            asyncSend(beneficiary, msg.value);\n        }\n    }\n\n    function asyncSend(address dest, uint amount) internal;\n\n    function getBeneficiary()\n        constant\n        returns (address) {\n        return beneficiary;\n    }\n\n    function setBeneficiary(address newBeneficiary)\n        fromOwner \n        returns (bool success) {\n        if (newBeneficiary == 0) {\n            throw;\n        }\n        if (beneficiary != newBeneficiary) {\n            LogBeneficiarySet(beneficiary, newBeneficiary);\n            beneficiary = newBeneficiary;\n        }\n        success = true;\n    }\n\n    function () payable {\n        asyncSend(beneficiary, msg.value);\n    }\n}\n\ncontract CertificationCentreI {\n    event LogCertificationDbRegistered(address indexed db);\n\n    event LogCertificationDbUnRegistered(address indexed db);\n\n    function getCertificationDbCount()\n        constant\n        returns (uint);\n\n    function getCertificationDbStatus(address db)\n        constant\n        returns (bool valid, uint256 index);\n\n    function getCertificationDbAtIndex(uint256 index)\n        constant\n        returns (address db);\n\n    function registerCertificationDb(address db)\n        returns (bool success);\n\n    function unRegisterCertificationDb(address db)\n        returns (bool success);\n}\n\ncontract CertificationCentre is CertificationCentreI, WithBeneficiary, PullPaymentCapable {\n    struct CertificationDbStruct {\n        bool valid;\n        uint256 index;\n    }\n\n    mapping (address => CertificationDbStruct) private certificationDbStatuses;\n    address[] private certificationDbs;\n\n    function CertificationCentre(address beneficiary)\n        WithBeneficiary(beneficiary) {\n        if (msg.value > 0) {\n            throw;\n        }\n    }\n\n    function getCertificationDbCount()\n        constant\n        returns (uint256) {\n        return certificationDbs.length;\n    }\n\n    function getCertificationDbStatus(address db)\n        constant\n        returns (bool valid, uint256 index) {\n        CertificationDbStruct status = certificationDbStatuses[db];\n        return (status.valid, status.index);\n    }\n\n    function getCertificationDbAtIndex(uint256 index)\n        constant\n        returns (address db) {\n        return certificationDbs[index];\n    }\n\n    function registerCertificationDb(address db) \n        fromOwner\n        returns (bool success) {\n        if (db == 0) {\n            throw;\n        }\n        if (!certificationDbStatuses[db].valid) {\n            certificationDbStatuses[db].valid = true;\n            certificationDbStatuses[db].index = certificationDbs.length;\n            certificationDbs.push(db);\n        }\n        LogCertificationDbRegistered(db);\n        success = true;\n    }\n\n    function unRegisterCertificationDb(address db)\n        fromOwner\n        returns (bool success) {\n        if (certificationDbStatuses[db].valid) {\n            uint256 index = certificationDbStatuses[db].index;\n            certificationDbs[index] = certificationDbs[certificationDbs.length - 1];\n            certificationDbStatuses[certificationDbs[index]].index = index;\n            delete certificationDbStatuses[db];\n            certificationDbs.length--;\n        }\n        LogCertificationDbUnRegistered(db);\n        success = true;\n    }\n\n    function fixBalance()\n        returns (bool success) {\n        return fixBalanceInternal(getBeneficiary());\n    }\n}",
  "bytecode": "60606040526040516020806108d18339506080604052518060008054600160a060020a0319163317905580600160a060020a03166000141561006857610002565b5030600160a060020a031631600010156100fe576100fe3330600160a060020a031631610095565b60018054600160a060020a0319168217905560003411156100405760015461004090600160a060020a0316345b60008111156100fa576002805482019055600160a060020a038216600081815260036020908152604091829020805485019055815184815291517f71c66459b89364f3bf3c906b1a1d8652cc2920224be995f47e1bd17fd14282229281900390910190a25b5050565b600034111561010c57610002565b506107b68061011b6000396000f3606060405236156100a35760e060020a600035046312b58349811461012057806313af40351461012f5780631c31f710146101565780634e116eb81461017d578063565a2e2c146101a65780636103d70b146101b3578063777feff514610204578063808ab1d614610255578063893d20e814610265578063912de8de1461027e578063b0fd935b146102a0578063e42d5be0146102c7578063fd260dfc146102f0575b61032660015461032890600160a060020a031634600081111561011c576002805482019055600160a060020a038216600081815260036020908152604091829020805485019055815184815291517f71c66459b89364f3bf3c906b1a1d8652cc2920224be995f47e1bd17fd14282229281900390910190a25b5050565b346100025761032a6002545b90565b346100025761033c6004356000805433600160a060020a0390811691161461038857610002565b346100025761033c6004356000805433600160a060020a0390811691161461040a57610002565b346100025761033c60043560008054819033600160a060020a0390811691161461048957610002565b346100025761035061028f565b346100025733600160a060020a0316600081815260036020526040808220805490839055600280548290039055905161033c939082908481818185876185025a03f192505050151561063f57610002565b346100025761035060043560006005600050828154811015610002575090527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0810154600160a060020a0316610405565b346100025761032a60055461012c565b3461000257610350600054600160a060020a031661012c565b346100025761033c600061064761064e5b600154600160a060020a031661012c565b346100025761033c6004356000805433600160a060020a039081169116146106d757610002565b346100025761032a600435600160a060020a038116600090815260036020526040902054610405565b346100025761036d600435600160a060020a03811660009081526004602052604090208054600182015460ff9091169150915091565b005b565b60408051918252519081900360200190f35b604080519115158252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b60408051921515835260208301919091528051918290030190f35b81600160a060020a03166000141561039f57610002565b600054600160a060020a03908116908316146104015760405160008054600160a060020a03858116939116917ffcf23a92150d56e85e3a3d33b357493246e55783095eb6a733eb8439ffc752c891a360008054600160a060020a031916831790555b5060015b919050565b81600160a060020a03166000141561042157610002565b600154600160a060020a039081169083161461040157604051600154600160a060020a03848116929116907f19fc5dfa52cbe3deb2c9d94a22f464548abadd6067db0c2c0534844d041f8df090600090a35060018054600160a060020a031916909117815590565b600160a060020a03831660009081526004602052604090205460ff16156105fc5750604060002060010154600580546000198101908110156100025750805460008290527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3daf810154600160a060020a03169190839081101561000257906000526020600020900160006101000a815481600160a060020a030219169083021790555080600460005060006005600050848154811015610002575081527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db083018190546101009190910a9004600160a060020a03908116825260208281019390935260409182016000908120600190810195909555908716815260049092528120805460ff19168155909101556005805460001981018083559091908280158290116105f7578183600052602060002091820191016105f791905b8082111561063b57600081556001016105e3565b505050505b604051600160a060020a038416907fddf27259163a55bca9fcea057daacb61fe6d4a43e5807f993295a4fc5e5fd50590600090a2600191505b50919050565b5090565b600191505090565b905061012c565b6000600030600160a060020a03163160026000505410156106ce5750600254600160a060020a03838116808452600360209081526040808620805430909516319590950393840190945583518381529351929391927f71c66459b89364f3bf3c906b1a1d8652cc2920224be995f47e1bd17fd14282229281900390910190a25b60019150610635565b81600160a060020a0316600014156106ee57610002565b600160a060020a03821660009081526004602052604090205460ff16151561077a576040600020805460ff19166001908117825560058054928201839055908201808255909190828183801582901161075a5781836000526020600020918201910161075a91906105e3565b5050506000928352506020909120018054600160a060020a031916831790555b604051600160a060020a038316907f310781e79881e07207b309d1d8ee97e73d0c1d8c5ef32e31139bbc49de233d5090600090a250600191905056",
  "constructorArguments": "000000000000000000000000de74da73d5102a796559933296c73e7d1c6f37fb"
}