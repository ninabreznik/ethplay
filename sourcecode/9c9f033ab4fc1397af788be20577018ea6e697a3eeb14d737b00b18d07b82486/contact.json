{
  "address": "0x164f64ef2a44444743c5472fa68fb3784060d286",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "T8Coin",
  "contractName": "T8CToken",
  "compilerVersion": "v0.4.11+commit.68ef5810",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-08-19\n*/\n\npragma solidity 0.4.11;\n\ncontract ERC20 {\n    function totalSupply() constant returns (uint256 totalSupply) {}\n    function balanceOf(address _owner) constant returns (uint256 balance) {}\n    function transfer(address _recipient, uint256 _value) returns (bool success) {}\n    function transferFrom(address _from, address _recipient, uint256 _value) returns (bool success) {}\n    function approve(address _spender, uint256 _value) returns (bool success) {}\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\n\n    event Transfer(address indexed _from, address indexed _recipient, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\ncontract StandardToken is ERC20 {\n\n\tuint256 public totalSupply;\n\tmapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n    \n    modifier when_can_transfer(address _from, uint256 _value) {\n        if (balances[_from] >= _value) _;\n    }\n\n    modifier when_can_receive(address _recipient, uint256 _value) {\n        if (balances[_recipient] + _value > balances[_recipient]) _;\n    }\n\n    modifier when_is_allowed(address _from, address _delegate, uint256 _value) {\n        if (allowed[_from][_delegate] >= _value) _;\n    }\n\n    function transfer(address _recipient, uint256 _value)\n        when_can_transfer(msg.sender, _value)\n        when_can_receive(_recipient, _value)\n        returns (bool o_success)\n    {\n        balances[msg.sender] -= _value;\n        balances[_recipient] += _value;\n        Transfer(msg.sender, _recipient, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _recipient, uint256 _value)\n        when_can_transfer(_from, _value)\n        when_can_receive(_recipient, _value)\n        when_is_allowed(_from, msg.sender, _value)\n        returns (bool o_success)\n    {\n        allowed[_from][msg.sender] -= _value;\n        balances[_from] -= _value;\n        balances[_recipient] += _value;\n        Transfer(_from, _recipient, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) returns (bool o_success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 o_remaining) {\n        return allowed[_owner][_spender];\n    }\n}\n\ncontract T8CToken is StandardToken {\n\n\t//FIELDS\n\tstring public name = \"T8Coin\";\n    string public symbol = \"T8C\";\n    uint public decimals = 3;\n\n\t//INITIALIZATION\n\taddress public minter; //address that able to mint new tokens\n\tuint public icoEndTime; \n\n\tuint illiquidBalance_amount;\n\tmapping (uint => address) illiquidBalance_index;\n\tmapping (address => uint) public illiquidBalance; //Balance of 'Frozen funds'\n\n\n\t// called by crowdsale contract\n\tmodifier only_minter {\n\t\tif (msg.sender != minter) throw;\n\t\t_;\n\t}\n\n\t// Can only be called if the `crowdfunder` is allowed to mint tokens. Any\n\t// time before `endMintingTime`.\n\tmodifier when_mintable {\n\t\tif (now > icoEndTime) throw; // todo need bounty create token?\n\t\t_;\n\t}\n\n\t// Initialization contract assigns address of crowdfund contract and end time.\n\tfunction T8CToken (address _minter, uint _icoEndTime) {\n\t\tminter = _minter;\n\t\ticoEndTime = _icoEndTime;\n\t}\n\n\t// Create new tokens when called by the crowdfund contract.\n\t// Only callable before the end time.\n\tfunction createToken(address _recipient, uint _value)\n\t\twhen_mintable\n\t\tonly_minter\n\t\treturns (bool o_success)\n\t{\n\t\tbalances[_recipient] += _value;\n\t\ttotalSupply += _value;\n\t\treturn true;\n\t}\n\n\t\t// Create an illiquidBalance which cannot be traded until admin make it liquid.\n\t// Can only be called by crowdfund contract before the end time.\n\tfunction createIlliquidToken(address _recipient, uint _value)\n\t\twhen_mintable\n\t\tonly_minter\n\t\treturns (bool o_success)\n\t{\n\t\tilliquidBalance_index[illiquidBalance_amount] = _recipient;\n\t\tilliquidBalance[_recipient] += _value;\n\t\tilliquidBalance_amount++;\n\n\t\ttotalSupply += _value;\n\t\treturn true;\n\t}\n\n\t// Make sender's illiquid balance liquid when called after lockout period.\n\tfunction makeLiquid()\n\t\tonly_minter\n\t{\n\t\tfor (uint i=0; i<illiquidBalance_amount; i++)\n\t\t{\n\t\t\taddress investor = illiquidBalance_index[i];\n\t\t\tbalances[investor] += illiquidBalance[investor];\n\t\t\tilliquidBalance[investor] = 0;\n\t\t}\n\t}\n\n\t// Transfer amount of tokens from sender account to recipient.\n\t// Only callable after the crowd fund end date.\n\tfunction transfer(address _recipient, uint _amount)\n\t\treturns (bool o_success)\n\t{\n\t\treturn super.transfer(_recipient, _amount);\n\t}\n\n\t// Transfer amount of tokens from a specified address to a recipient.\n\t// Only callable after the crowd fund end date.\n\tfunction transferFrom(address _from, address _recipient, uint _amount)\n\t\treturns (bool o_success)\n\t{\n\t\treturn super.transferFrom(_from, _recipient, _amount);\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createIlliquidToken\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createToken\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"illiquidBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"o_remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"makeLiquid\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_minter\",\"type\":\"address\"},{\"name\":\"_icoEndTime\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "6060604052604060405190810160405280600681526020017f5438436f696e0000000000000000000000000000000000000000000000000000815250600390805190602001906200005292919062000128565b50604060405190810160405280600381526020017f543843000000000000000000000000000000000000000000000000000000000081525060049080519060200190620000a192919062000128565b5060036005553415620000b057fe5b604051604080620013cd833981016040528080519060200190919080519060200190919050505b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806007819055505b5050620001d7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200016b57805160ff19168380011785556200019c565b828001600101855582156200019c579182015b828111156200019b5782518255916020019190600101906200017e565b5b509050620001ab9190620001af565b5090565b620001d491905b80821115620001d0576000816000905550600101620001b6565b5090565b90565b6111e680620001e76000396000f300606060405236156100d9576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100db5780630754617214610174578063095ea7b3146101c657806318160ddd1461021d578063215cb8df1461024357806323b872dd1461029a578063313ce567146103105780636a10d4d61461033657806370a082311461038d57806378d3633b146103d75780637e1055b61461042157806395d89b4114610447578063a9059cbb146104e0578063dd62ed3e14610537578063e1419546146105a0575bfe5b34156100e357fe5b6100eb6105b2565b604051808060200182810382528381815181526020019150805190602001908083836000831461013a575b80518252602083111561013a57602082019150602081019050602083039250610116565b505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017c57fe5b610184610650565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101ce57fe5b610203600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610676565b604051808215151515815260200191505060405180910390f35b341561022557fe5b61022d610769565b6040518082815260200191505060405180910390f35b341561024b57fe5b610280600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061076f565b604051808215151515815260200191505060405180910390f35b34156102a257fe5b6102f6600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506108ae565b604051808215151515815260200191505060405180910390f35b341561031857fe5b6103206108c5565b6040518082815260200191505060405180910390f35b341561033e57fe5b610373600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506108cb565b604051808215151515815260200191505060405180910390f35b341561039557fe5b6103c1600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109a4565b6040518082815260200191505060405180910390f35b34156103df57fe5b61040b600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109ee565b6040518082815260200191505060405180910390f35b341561042957fe5b610431610a06565b6040518082815260200191505060405180910390f35b341561044f57fe5b610457610a0c565b60405180806020018281038252838181518152602001915080519060200190808383600083146104a6575b8051825260208311156104a657602082019150602081019050602083039250610482565b505050905090810190601f1680156104d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156104e857fe5b61051d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610aaa565b604051808215151515815260200191505060405180910390f35b341561053f57fe5b61058a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610abf565b6040518082815260200191505060405180910390f35b34156105a857fe5b6105b0610b47565b005b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106485780601f1061061d57610100808354040283529160200191610648565b820191906000526020600020905b81548152906001019060200180831161062b57829003601f168201915b505050505081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3600190505b92915050565b60005481565b60006007544211156107815760006000fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107de5760006000fd5b8260096000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555060086000815480929190600101919050555081600060008282540192505081905550600190505b5b5b92915050565b60006108bb848484610cd2565b90505b9392505050565b60055481565b60006007544211156108dd5760006000fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561093a5760006000fd5b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600060008282540192505081905550600190505b5b5b92915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b600a6020528060005260406000206000915090505481565b60075481565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aa25780601f10610a7757610100808354040283529160200191610aa2565b820191906000526020600020905b815481529060010190602001808311610a8557829003601f168201915b505050505081565b6000610ab68383610fd2565b90505b92915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b60006000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ba85760006000fd5b600091505b600854821015610ccc576009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600a60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8180600101925050610bad565b5b5b5050565b6000838280600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610fc8578484600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115610fc45787338780600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610fbf5788600260008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555088600160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555088600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8b6040518082815260200191505060405180910390a3600197505b5b5b5050505b5b50505b5b50509392505050565b6000338280600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015156111b1578484600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540111156111ad5785600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555085600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040518082815260200191505060405180910390a3600194505b5b5b50505b5b5050929150505600a165627a7a723058200aa8a39ca639f34ad2fe86e1ccec142840b70c5eeb38f33f9247adc4947cce1200290000000000000000000000003077695dfce75c54984719c26265a8aaf46535160000000000000000000000000000000000000000000000000000000059c4549c",
  "constructorArguments": "0000000000000000000000003077695dfce75c54984719c26265a8aaf46535160000000000000000000000000000000000000000000000000000000059c4549c"
}