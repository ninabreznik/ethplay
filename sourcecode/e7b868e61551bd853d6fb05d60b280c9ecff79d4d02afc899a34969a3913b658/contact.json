{
  "address": "0x6fe797963e0219e9c4162d333d82b357ded5297a",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MaxiCreditCompany",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-22\n*/\n\npragma solidity >=0.4.25;\n\nlibrary AddressUtils {\n\n\n  function isContract(address addr) internal view returns (bool) {\n    uint256 size;\n    // XXX Currently there is no better way to check if there is a contract in an address\n    // than to check the size of the code at that address.\n    // See https://ethereum.stackexchange.com/a/14016/36603\n    // for more details about how this works.\n    // TODO Check this again before the Serenity release, because all addresses will be\n    // contracts then.\n    // solium-disable-next-line security/no-inline-assembly\n    assembly { size := extcodesize(addr) }\n    return size > 0;\n  }\n\n}\n\ncontract ERC20Interface {\n    function allowance(address _from, address _to) public view returns(uint);\n    function transferFrom(address _from, address _to, uint _sum) public;\n    function transfer(address _to, uint _sum) public;\n    function balanceOf(address _owner) public view returns(uint);\n}\n\ncontract WalletInterface {\n    function getTransaction(uint _id) public view returns(address, uint, address, uint, uint, bool);\n}\n\ncontract ContractCreator {\n    function setContract() public returns(address);\n}\n\ncontract MaxiCreditCompany {\n    \n    event Transfer(address indexed _from, address indexed _to, uint _sum);\n    event TokenBoughtFromContract(address indexed _buyer, uint indexed _promoter, uint _sum);\n    event TokenBoughtFromSeller(address indexed _buyer, address _seller, uint _amount, uint indexed _offerId);\n    event Approval(address indexed _seller, address indexed _buyer, uint _amount);\n    event DescriptionChange(bytes32 _txt);\n    event NewServer(address indexed _serverAddress, uint indexed _id);\n    event ServerChanged(address indexed _newServerAddress, address indexed _oldServerAddress, uint indexed _id);\n    event ETHWithdraw(address indexed _to, uint _sum);\n    event ERC20Withdraw(address indexed _erc20Address, address indexed _to, uint _sum);\n    event SupplyIncreased(uint _amount, uint _totalSupply);\n    event NewSaleOffer(uint indexed saleOffersCounter, uint indexed _amount, uint indexed _unitPrice);\n    event SetToBuyBack(uint _amount, uint _price);\n    event BuyBack(uint indexed _amount, uint indexed buyBackPrice);\n    event SetOwner(uint indexed _id, address indexed _newOwner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event OwnerDeleted(uint indexed _id, address indexed _owner);\n    event OperatorRightChanged(address indexed _operator, uint _txRight);\n    event NewOperator(uint indexed _id, address indexed _newOperator, uint _txRight);\n    event OperatorChanged(uint indexed _id, address indexed _newOperator, address indexed oldOperator, uint _txRight);\n    event DeleteOperator(uint indexed _id, address indexed _operator);\n    event OwnerChangedPrice(uint _priceETH, uint _priceUSD);\n    event ServerChangedPrice(uint _priceETH, uint _priceUSD);\n    event NewContract(address indexed _addr, uint indexed newContractsLength);\n    \n    using AddressUtils for address;\n    string public name = \"MaxiCreditCompanyShare\";\n    string public symbol = \"MC2\";\n    uint public supply = 80000000;\n    uint public decimals = 0;\n    bytes32 public description;\n    \n    uint public unitPriceETH; \n    uint public unitPriceUSD;\n    uint public shareHoldersNumber;\n    mapping (address => uint) shareHolderId;\n    address[] public shareHolders;\n    bool shareHolderDelete;\n    address[10] public contractOwner;\n    address[10] public operator;\n    uint public ownerCounter;\n    \n    mapping(address => bool) public isOwner;\n    mapping(address => bool) public isOperator;\n    mapping(address => uint) public operatorsRights;\n\n    mapping(address => uint) public balanceOf;\n    mapping(address => mapping(uint => uint)) public saleOffersByAddress;\n    mapping(uint => address) public saleOffersById;\n    mapping(uint => uint) public saleOffersAmount;\n    mapping(uint => uint) public saleOffersUnitPrice;\n    mapping(address => uint) public sellersOfferCounter;\n    uint public saleOffersCounter = 0;\n    \n    uint public buyBackAmount = 0;\n    uint public buyBackPrice = 0;\n    \n    mapping(address => mapping(address => uint)) public approvedTransfers;\n    \n    address[] serverAddress;\n    mapping (address => bool) isOurServer;\n    uint serverAddressArrayLength;\n    \n    ContractCreator cc;\n    address newContract;\n    address[] public newContracts;\n    uint public newContractsLength;\n\n    modifier onlyOwner() {\n        require(isOwner[msg.sender] == true);\n        require(msg.sender != address(0));\n        _;\n    }  \n    \n    modifier onlyOperator() {\n        require(isOperator[msg.sender] == true);\n        require(msg.sender != address(0));\n        _;\n    }\n    \n    modifier onlyServer() {\n        require(isOurServer[msg.sender] == true);\n        require(msg.sender != address(0));\n        _;\n    }\n    \n    constructor (uint _initPriceETH, uint _initPriceUSD) public {\n       contractOwner[0] = msg.sender;\n       isOwner[msg.sender] = true;\n       operator[0] = msg.sender;\n       isOperator[msg.sender] = true;\n       operatorsRights[msg.sender] = 100;\n       balanceOf[address(this)] = supply;\n       unitPriceETH = _initPriceETH;\n       unitPriceUSD = _initPriceUSD;\n       shareHoldersNumber = 0;\n       shareHolderDelete = false;\n       ownerCounter = 1;\n    }\n    \n    function getContractOwner(uint _id) public view returns(address) {\n        return(contractOwner[_id]);\n    }\n    \n    function setDescription(bytes32 _txt) public onlyOwner {\n        description = _txt;\n        emit DescriptionChange(_txt);\n    }\n    \n    function setServerAddress(address _serverAddress) public onlyOwner {\n        serverAddressArrayLength = serverAddress.push(_serverAddress);\n        isOurServer[_serverAddress] = true;\n        emit NewServer(_serverAddress, serverAddressArrayLength - 1);\n    }\n    \n    function modifyServer(uint _id, address _serverAddress) public onlyOwner {\n        address oldServer = serverAddress[_id];\n        isOurServer[serverAddress[_id]] = false;\n        serverAddress[_id] = _serverAddress;\n        isOurServer[_serverAddress] = true;\n        emit ServerChanged(_serverAddress, oldServer, _id);\n    }\n    \n    function getServerAddressLength() public view onlyOperator returns(uint) {\n        return serverAddressArrayLength;\n    }\n    \n    function getServerAddress(uint _num) public view onlyOperator returns(address) {\n        return serverAddress[_num];\n    }\n    \n    function checkServerAddress(address _addr) public view onlyOperator returns(bool) {\n        return(isOurServer[_addr]);\n    }\n    \n    function withdrawal(uint _sum, address _to) public onlyOperator {\n        require(operatorsRights[msg.sender] * address(this).balance / 100 >= _sum);\n        require(address(this).balance >= _sum);\n        require(_to != address(0) && _sum > 0);\n        address(_to).transfer(_sum);\n        emit ETHWithdraw(_to, _sum);\n    }\n    \n    function withdrawERC20(address _erc20Address, address _to, uint _amount) public onlyOperator {\n        ERC20Interface ei = ERC20Interface(_erc20Address);\n        require(operatorsRights[msg.sender] * ei.balanceOf(this) / 100 >= _amount);\n        require(_erc20Address != address(0) && _to != address(0));\n        ei.transfer(_to, _amount);\n        emit ERC20Withdraw(_erc20Address, _to, _amount);\n    }\n    /*\n    */\n    function totalSupply() public view returns(uint) {\n        return(supply);\n    }\n    \n    function increaseSupply(uint _amount) public onlyOwner {\n        supply += _amount;\n        balanceOf[this] += _amount;\n        emit SupplyIncreased(_amount, supply);\n    }\n    \n    function _transfer(address _from, address _to, uint _sum) private {\n        require(_from != address(0));\n        require(_to != address(0));\n        require(_from != _to);\n        require(_sum > 0);\n        require(balanceOf[_from] >= _sum);\n        require(balanceOf[_to] + _sum >= _sum);\n        if(balanceOf[_to] == 0) {\n            shareHolderId[_to] = shareHoldersNumber;\n            if(shareHolderDelete) {\n                shareHolders[shareHoldersNumber] = _to;\n                shareHolderDelete = false;\n            } else {\n                shareHolders.push(_to);    \n            }\n            shareHoldersNumber ++;\n        }\n        uint sumBalanceBeforeTx = balanceOf[_from] + balanceOf[_to]; \n        balanceOf[_from] -= _sum;\n        balanceOf[_to] += _sum;\n        if(balanceOf[_from] == 0) {\n            shareHoldersNumber --;\n            shareHolders[shareHolderId[_from]] = shareHolders[shareHoldersNumber];\n            shareHolderId[shareHolders[shareHoldersNumber]] = shareHolderId[_from];\n            delete shareHolders[shareHoldersNumber];\n            shareHolderDelete = true;\n        }\n        assert(sumBalanceBeforeTx == balanceOf[_from] + balanceOf[_to]);\n        emit Transfer(_from, _to, _sum);\n    }\n    \n    function transfer(address _to, uint _sum) external returns(bool) {\n        _transfer(msg.sender, _to, _sum);\n        return(true);\n    }\n    \n    function transferFromContractsBalance(address _to, uint _sum) public onlyOwner {\n        require(_to != address(0));\n        require(this != _to);\n        require(_sum > 0);\n        require(balanceOf[this] >= _sum);\n        require(balanceOf[_to] + _sum >= _sum);\n        if(balanceOf[_to] == 0) {\n            shareHolderId[_to] = shareHoldersNumber;\n            if(shareHolderDelete) {\n                shareHolders[shareHoldersNumber] = _to;\n                shareHolderDelete = false;\n            } else {\n                shareHolders.push(_to);    \n            }   \n            shareHoldersNumber ++;\n        }\n        uint sumBalanceBeforeTx = balanceOf[this] + balanceOf[_to]; \n        balanceOf[this] -= _sum;\n        balanceOf[_to] += _sum;\n        assert(sumBalanceBeforeTx == balanceOf[this] + balanceOf[_to]);\n        emit Transfer(this, _to, _sum);\n    }\n\n    function setToSale(uint _amount, uint _unitPrice) public {\n        require(balanceOf[msg.sender] >= _amount);\n        require(_unitPrice > 0);\n        saleOffersByAddress[msg.sender][sellersOfferCounter[msg.sender]] = saleOffersCounter;\n        saleOffersById[saleOffersCounter] = msg.sender;\n        saleOffersAmount[saleOffersCounter] = _amount;\n        saleOffersUnitPrice[saleOffersCounter] = _unitPrice;\n        emit NewSaleOffer(saleOffersCounter, _amount, _unitPrice);\n        sellersOfferCounter[msg.sender] ++;\n        saleOffersCounter ++;\n    }\n    \n    function getSaleOffer(uint _id) public view returns(address, uint, uint) {\n        return(saleOffersById[_id], saleOffersAmount[_id], saleOffersUnitPrice[_id]);\n    }\n    \n    function buyFromSeller(uint _amount, uint _offerId) public payable {\n        require(saleOffersAmount[_offerId] >= _amount);\n        uint orderPrice = _amount * saleOffersUnitPrice[_offerId];\n        require(msg.value == orderPrice);\n        saleOffersAmount[_offerId] -= _amount;\n        _transfer(saleOffersById[_offerId], msg.sender, _amount);\n        uint sellersShare = orderPrice * 99 / 100;\n        uint toSend = sellersShare;\n        sellersShare = 0;\n        saleOffersById[_offerId].transfer(toSend);\n        emit TokenBoughtFromSeller(msg.sender, saleOffersById[_offerId], _amount, _offerId);\n    }\n    \n    function setBuyBack(uint _amount, uint _price) public onlyOperator {\n        buyBackAmount += _amount;\n        buyBackPrice = _price;\n        emit SetToBuyBack(_amount, _price);\n    }\n\n    function buyback(uint _amount) public {\n        require(buyBackAmount >= _amount);\n        buyBackAmount -= _amount;\n        _transfer(msg.sender, this, _amount);\n        msg.sender.transfer(_amount * buyBackPrice); \n        emit BuyBack(_amount, buyBackPrice);\n    }\n    \n    function getETH(uint _amount) public payable {\n        require(msg.value == _amount);\n        //event?\n    }\n    \n    //should be different function for set and modify owner and operator\n    function setContractOwner(uint _id, address _newOwner) public onlyOwner {\n        require(contractOwner[_id] == address(0) && !isOwner[_newOwner]);\n        contractOwner[_id] = _newOwner;\n        isOwner[_newOwner] = true;\n        ownerCounter++;\n        emit SetOwner(_id, _newOwner);\n    }\n    \n    function modifyContractOwner(uint _id, address _newOwner) public onlyOwner {\n        require(contractOwner[_id] != address(0) && contractOwner[_id] != _newOwner);\n        address previousOwner = contractOwner[_id];\n        isOwner[contractOwner[_id]] = false;\n        contractOwner[_id] = _newOwner;\n        isOwner[_newOwner] = true;\n        emit OwnershipTransferred(previousOwner, _newOwner);\n    }\n    \n    function deleteOwner(uint _id, address _addr) public onlyOwner {\n        require(ownerCounter > 1);\n        require(isOwner[_addr] && contractOwner[_id] == _addr);\n        isOwner[_addr] = false;\n        contractOwner[_id] = address(0);\n        ownerCounter--;\n        emit OwnerDeleted(_id, _addr);\n    }\n    \n    function setOperatorsRight(address _operator, uint _txRight) public onlyOwner {\n        require(_txRight <= 100 && isOperator[_operator]);\n        operatorsRights[_operator] = _txRight;\n        emit OperatorRightChanged(_operator, _txRight);\n    }\n    \n    function setOperator(uint _id, address _newOperator, uint _txRight) public onlyOwner {\n        require(_txRight <= 100 && operator[_id] == address(0) && !isOperator[_newOperator]);\n        operator[_id] = _newOperator;\n        operatorsRights[_newOperator] = _txRight;\n        isOperator[_newOperator] = true;\n        emit NewOperator(_id, _newOperator, _txRight);\n    }\n    \n    function modifyOperator(uint _id, address _newOperator, uint _txRight) public onlyOwner {\n        require(operator[_id] != address(0) && operator[_id] != _newOperator && _txRight < 100);\n        address oldOperator = operator[_id];\n        isOperator[operator[_id]] = false;\n        operatorsRights[operator[_id]] = 0;\n        isOperator[_newOperator] = true;\n        operator[_id] = _newOperator;\n        operatorsRights[_newOperator] = _txRight;\n        emit OperatorChanged(_id, _newOperator, oldOperator, _txRight);\n    }\n    \n    function deleteOperator(uint _id, address _operator) public onlyOwner {\n        require(isOperator[_operator] && operator[_id] == _operator);\n        isOperator[_operator] = false;\n        operatorsRights[_operator] = 0;\n        operator[_id] = address(0);\n        emit DeleteOperator(_id, _operator);\n    }\n\n    function getShareNumber(address _addr) public view returns(uint) {\n        return(balanceOf[_addr]);\n    }\n\n    function approve(address _to, uint _sum) public {\n        approvedTransfers[msg.sender][_to] += _sum;\n        emit Approval(msg.sender, _to, _sum);\n    }\n    \n    function allowance(address _from, address _to) public view returns(uint) {\n        return (approvedTransfers[_from][_to]);\n    }\n    \n    function transferFrom(address _from, address _to, uint _sum) public { \n        require(approvedTransfers[_from][msg.sender] >= _sum);\n        approvedTransfers[_from][msg.sender] -= _sum;\n        _transfer(_from, _to, _sum); \n    }\n\n    function changePriceByOwner(uint _priceETH, uint _priceUSD) public onlyOwner {\n        require(_priceETH > 0 && _priceUSD > 0);\n        unitPriceETH = _priceETH;\n        unitPriceUSD = _priceUSD;\n        emit OwnerChangedPrice(_priceETH, _priceUSD);\n    }\n    \n    function changePriceByServer(uint _priceETH, uint _priceUSD) public onlyServer {\n        require(_priceETH > 0 && _priceUSD > 0);\n        unitPriceETH = _priceETH;\n        unitPriceUSD = _priceUSD;\n        emit ServerChangedPrice(_priceETH, _priceUSD);\n    }\n    \n    function checkIsShareHolder() public view returns(bool){\n        if(balanceOf[msg.sender] > 0) {\n            return(true);\n        } else {\n            return(false);\n        }\n    } \n    \n    function getShareHolderRegister() public view returns(address[] memory) {\n        return(shareHolders);\n    }\n    \n    function setNewContract(address _addr) public onlyOperator {\n        cc = ContractCreator(_addr);\n        newContract = cc.setContract();\n        newContracts.push(newContract);\n        newContractsLength ++;\n        emit NewContract(_addr, newContractsLength);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_newOperator\",\"type\":\"address\"},{\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"modifyOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newContractsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sum\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"deleteOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_newOperator\",\"type\":\"address\"},{\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"setOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleOffersByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyBackAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellersOfferCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_erc20Address\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_serverAddress\",\"type\":\"address\"}],\"name\":\"setServerAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setBuyBack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkIsShareHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceETH\",\"type\":\"uint256\"},{\"name\":\"_priceUSD\",\"type\":\"uint256\"}],\"name\":\"changePriceByServer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"setOperatorsRight\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unitPriceETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"transferFromContractsBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"checkServerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleOffersUnitPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleOffersCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_unitPrice\",\"type\":\"uint256\"}],\"name\":\"setToSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"shareHolders\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buyback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorsRights\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unitPriceUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_txt\",\"type\":\"bytes32\"}],\"name\":\"setDescription\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceETH\",\"type\":\"uint256\"},{\"name\":\"_priceUSD\",\"type\":\"uint256\"}],\"name\":\"changePriceByOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"getServerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getContractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getShareHolderRegister\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"deleteOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedTransfers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"buyFromSeller\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"operator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"shareHoldersNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getShareNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"newContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"modifyContractOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleOffersAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setNewContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setContractOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getSaleOffer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_serverAddress\",\"type\":\"address\"}],\"name\":\"modifyServer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleOffersById\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyBackPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getServerAddressLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initPriceETH\",\"type\":\"uint256\"},{\"name\":\"_initPriceUSD\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_promoter\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"TokenBoughtFromContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"TokenBoughtFromSeller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_txt\",\"type\":\"bytes32\"}],\"name\":\"DescriptionChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_serverAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"NewServer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_newServerAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_oldServerAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"ServerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"ETHWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_erc20Address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"ERC20Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"name\":\"SupplyIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"saleOffersCounter\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_unitPrice\",\"type\":\"uint256\"}],\"name\":\"NewSaleOffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"SetToBuyBack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"buyBackPrice\",\"type\":\"uint256\"}],\"name\":\"BuyBack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"OwnerDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"OperatorRightChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_newOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"NewOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_newOperator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"oldOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"OperatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"DeleteOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_priceETH\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_priceUSD\",\"type\":\"uint256\"}],\"name\":\"OwnerChangedPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_priceETH\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_priceUSD\",\"type\":\"uint256\"}],\"name\":\"ServerChangedPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newContractsLength\",\"type\":\"uint256\"}],\"name\":\"NewContract\",\"type\":\"event\"}]",
  "bytecode": "60806040526040805190810160405280601681526020017f4d617869437265646974436f6d70616e79536861726500000000000000000000815250600090805190602001906200005192919062000315565b506040805190810160405280600381526020017f4d43320000000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f92919062000315565b506304c4b400600255600060035560006029556000602a556000602b55348015620000c957600080fd5b50604051604080620059e5833981018060405281019080805190602001909291908051906020019092919050505033600b6000600a811015156200010957fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503360156000600a81101515620001b257fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001602160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506064602260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600254602360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816005819055508060068190555060006007819055506000600a60006101000a81548160ff0219169083151502179055506001601f819055505050620003c4565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200035857805160ff191683800117855562000389565b8280016001018555821562000389579182015b82811115620003885782518255916020019190600101906200036b565b5b5090506200039891906200039c565b5090565b620003c191905b80821115620003bd576000816000905550600101620003a3565b5090565b90565b61561180620003d46000396000f3006080604052600436106102e0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063047fc9aa146102e557806306fdde0314610310578063095ea7b3146103a05780630a9bf3e5146103ed5780630d5265e01461044457806318160ddd1461046f578063190d7c551461049a5780631b0131e8146104e757806323b872dd146105345780632835b45c146105a157806328a302da146105c15780632ac7d91c146106185780632f54bf6e1461067957806330943fcf146106d4578063313ce567146106ff578063395e8ed01461072a57806343445d3e1461075557806344004cc1146107ac57806347b64eb0146108195780634b73e1061461085c5780634dcf8639146108935780634f42bd4e146108c2578063515d6e5e146108f957806351d8170114610946578063674a02371461097157806369f6c644146109be5780636d70f7ae14610a195780636de3699114610a745780636e3f303f14610ab557806370a0823114610ae057806371fde3b214610b375780637284e41614610b6e5780637427a40c14610ba157806379a9fa1c14610c0e5780637ac9553114610c3b57806387c91ff314610c9257806389f5df5d14610cbd5780638e41089214610cee57806395d89b4114610d25578063968dc74314610db557806398c9fff614610e225780639b9cff8f14610e8f578063a0049bf714610efb578063a4994e6114610f48578063a71c713614610fbf578063a8d0948014610fe9578063a9059cbb14611056578063ab3d047f146110bb578063abd3f55e14611128578063b8101d8614611153578063b921e163146111aa578063bd21ad19146111d7578063bd7ac31614611244578063ce974ec414611291578063d5d72e97146112d2578063d63c2f3f14611315578063d917cf5c14611362578063dd62ed3e146113dd578063deb6e77c14611454578063e01c9acc146114a1578063e23000a01461150e578063ea4b915914611539575b600080fd5b3480156102f157600080fd5b506102fa611564565b6040518082815260200191505060405180910390f35b34801561031c57600080fd5b5061032561156a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103ac57600080fd5b506103eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611608565b005b3480156103f957600080fd5b5061044260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116fb565b005b34801561045057600080fd5b50610459611aff565b6040518082815260200191505060405180910390f35b34801561047b57600080fd5b50610484611b05565b6040518082815260200191505060405180910390f35b3480156104a657600080fd5b506104e560048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b0f565b005b3480156104f357600080fd5b5061053260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d24565b005b34801561054057600080fd5b5061059f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f92565b005b6105bf600480360381019080803590602001909291905050506120b7565b005b3480156105cd57600080fd5b5061061660048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120c8565b005b34801561062457600080fd5b50610663600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612370565b6040518082815260200191505060405180910390f35b34801561068557600080fd5b506106ba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612395565b604051808215151515815260200191505060405180910390f35b3480156106e057600080fd5b506106e96123b4565b6040518082815260200191505060405180910390f35b34801561070b57600080fd5b506107146123ba565b6040518082815260200191505060405180910390f35b34801561073657600080fd5b5061073f6123c0565b6040518082815260200191505060405180910390f35b34801561076157600080fd5b50610796600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123c6565b6040518082815260200191505060405180910390f35b3480156107b857600080fd5b50610817600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506123de565b005b34801561082557600080fd5b5061085a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061274a565b005b34801561086857600080fd5b5061089160048036038101908080359060200190929190803590602001909291905050506128f4565b005b34801561089f57600080fd5b506108a86129e9565b604051808215151515815260200191505060405180910390f35b3480156108ce57600080fd5b506108f76004803603810190808035906020019092919080359060200190929190505050612a43565b005b34801561090557600080fd5b50610944600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612b4a565b005b34801561095257600080fd5b5061095b612ce0565b6040518082815260200191505060405180910390f35b34801561097d57600080fd5b506109bc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612ce6565b005b3480156109ca57600080fd5b506109ff600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613250565b604051808215151515815260200191505060405180910390f35b348015610a2557600080fd5b50610a5a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613341565b604051808215151515815260200191505060405180910390f35b348015610a8057600080fd5b50610a9f60048036038101908080359060200190929190505050613361565b6040518082815260200191505060405180910390f35b348015610ac157600080fd5b50610aca613379565b6040518082815260200191505060405180910390f35b348015610aec57600080fd5b50610b21600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061337f565b6040518082815260200191505060405180910390f35b348015610b4357600080fd5b50610b6c6004803603810190808035906020019092919080359060200190929190505050613397565b005b348015610b7a57600080fd5b50610b836135a8565b60405180826000191660001916815260200191505060405180910390f35b348015610bad57600080fd5b50610bcc600480360381019080803590602001909291905050506135ae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c1a57600080fd5b50610c39600480360381019080803590602001909291905050506135ec565b005b348015610c4757600080fd5b50610c7c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613696565b6040518082815260200191505060405180910390f35b348015610c9e57600080fd5b50610ca76136ae565b6040518082815260200191505060405180910390f35b348015610cc957600080fd5b50610cec60048036038101908080356000191690602001909291905050506136b4565b005b348015610cfa57600080fd5b50610d23600480360381019080803590602001909291908035906020019092919050505061379c565b005b348015610d3157600080fd5b50610d3a6138a3565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d7a578082015181840152602081019050610d5f565b50505050905090810190601f168015610da75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610dc157600080fd5b50610de060048036038101908080359060200190929190505050613941565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e2e57600080fd5b50610e4d60048036038101908080359060200190929190505050613a1f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e9b57600080fd5b50610ea4613a59565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610ee7578082015181840152602081019050610ecc565b505050509050019250505060405180910390f35b348015610f0757600080fd5b50610f4660048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613ae7565b005b348015610f5457600080fd5b50610fa9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613d76565b6040518082815260200191505060405180910390f35b610fe76004803603810190808035906020019092919080359060200190929190505050613d9b565b005b348015610ff557600080fd5b5061101460048036038101908080359060200190929190505050613f97565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561106257600080fd5b506110a1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613fcc565b604051808215151515815260200191505060405180910390f35b3480156110c757600080fd5b506110e660048036038101908080359060200190929190505050613fe3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561113457600080fd5b5061113d614018565b6040518082815260200191505060405180910390f35b34801561115f57600080fd5b50611194600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061401e565b6040518082815260200191505060405180910390f35b3480156111b657600080fd5b506111d560048036038101908080359060200190929190505050614067565b005b3480156111e357600080fd5b50611202600480360381019080803590602001909291905050506141a3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561125057600080fd5b5061128f60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506141e1565b005b34801561129d57600080fd5b506112bc60048036038101908080359060200190929190505050614513565b6040518082815260200191505060405180910390f35b3480156112de57600080fd5b50611313600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061452b565b005b34801561132157600080fd5b5061136060048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506147eb565b005b34801561136e57600080fd5b5061138d60048036038101908080359060200190929190505050614a48565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b3480156113e957600080fd5b5061143e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614ab6565b6040518082815260200191505060405180910390f35b34801561146057600080fd5b5061149f60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614b3d565b005b3480156114ad57600080fd5b506114cc60048036038101908080359060200190929190505050614db7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561151a57600080fd5b50611523614dea565b6040518082815260200191505060405180910390f35b34801561154557600080fd5b5061154e614df0565b6040518082815260200191505060405180910390f35b60025481565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116005780601f106115d557610100808354040283529160200191611600565b820191906000526020600020905b8154815290600101906020018083116115e357829003601f168201915b505050505081565b80602c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35050565b600060011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561175c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561179857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16601585600a811015156117bf57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561186157508273ffffffffffffffffffffffffffffffffffffffff16601585600a8110151561182657fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b801561186d5750606482105b151561187857600080fd5b601584600a8110151561188757fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600060216000601587600a811015156118c057fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600060226000601587600a8110151561194857fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001602160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082601585600a81101515611a1057fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081602260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f96b075ab6bc4b4b977e16246b93b1b40a6284b1438cd533867c0d37aeff6e904856040518082815260200191505060405180910390a450505050565b60335481565b6000600254905090565b60011515602160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515611b6e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515611baa57600080fd5b8160643073ffffffffffffffffffffffffffffffffffffffff1631602260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205402811515611c0f57fe5b0410151515611c1d57600080fd5b813073ffffffffffffffffffffffffffffffffffffffff163110151515611c4357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611c805750600082115b1515611c8b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611cd1573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff167fd60b8e696229f438ddb4a30a4ad1d05893ae81c6cea31b015f47de9bdd069514836040518082815260200191505060405180910390a25050565b60011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515611d8357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515611dbf57600080fd5b6001601f54111515611dd057600080fd5b602060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168015611e8457508073ffffffffffffffffffffffffffffffffffffffff16600b83600a81101515611e4a57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b1515611e8f57600080fd5b6000602060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600b83600a81101515611ef857fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550601f60008154809291906001900391905055508073ffffffffffffffffffffffffffffffffffffffff16827f87b2a7ef3c0cc419d74a829d267b28a11482f0c19088880fb092cd90f0451b2760405160405180910390a35050565b80602c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561201d57600080fd5b80602c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506120b2838383614e95565b505050565b80341415156120c557600080fd5b50565b60011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561212757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561216357600080fd5b606481111580156121d05750600073ffffffffffffffffffffffffffffffffffffffff16601584600a8110151561219657fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80156122265750602160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b151561223157600080fd5b81601584600a8110151561224157fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080602260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001602160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16837f0b3439eb4aa8a0f550af0134dab4fdc22e00ff8869d79e359059ceb21b37be79836040518082815260200191505060405180910390a3505050565b6024602052816000526040600020602052806000526040600020600091509150505481565b602080528060005260406000206000915054906101000a900460ff1681565b601f5481565b60035481565b602a5481565b60286020528060005260406000206000915090505481565b600060011515602160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561243f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561247b57600080fd5b8390508160648273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561251c57600080fd5b505af1158015612530573d6000803e3d6000fd5b505050506040513d602081101561254657600080fd5b8101908080519060200190929190505050602260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054028115156125a157fe5b04101515156125af57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156126195750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b151561262457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156126c757600080fd5b505af11580156126db573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f96144999ac2daeddf0275f202c46a9fb404b904e261a5fcb955f5f1250478604846040518082815260200191505060405180910390a350505050565b60011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156127a957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156127e557600080fd5b602d8190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602f819055506001602e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001602f54038173ffffffffffffffffffffffffffffffffffffffff167f1113bcc0571c71eecd7deb086b54a9fc77d42d163262753924d364109a0c102060405160405180910390a350565b60011515602160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561295357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561298f57600080fd5b81602a6000828254019250508190555080602b819055507f28a1898721c920db27f398edd5f6a9579f1ab980405848c14f543440090643438282604051808381526020018281526020019250505060405180910390a15050565b600080602360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115612a3b5760019050612a40565b600090505b90565b60011515602e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515612aa257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515612ade57600080fd5b600082118015612aee5750600081115b1515612af957600080fd5b81600581905550806006819055507fabeffe8c25ed2df4aba867146190490c4a3979850383743da3081594ed496d418282604051808381526020018281526020019250505060405180910390a15050565b60011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515612ba957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515612be557600080fd5b60648111158015612c3f5750602160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515612c4a57600080fd5b80602260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f9ced1a77f02f8f870cfa6fc859a7ecf70290f0cd7232101f0f98181523f5388a826040518082815260200191505060405180910390a25050565b60055481565b600060011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515612d4757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515612d8357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612dbf57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614151515612dfa57600080fd5b600082111515612e0957600080fd5b81602360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515612e5757600080fd5b8182602360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110151515612ea757600080fd5b6000602360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561303e57600754600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900460ff1615612fc457826009600754815481101515612f5c57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a60006101000a81548160ff02191690831515021790555061302b565b60098390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b6007600081548092919060010191905055505b602360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054602360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401905081602360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081602360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550602360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054602360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401811415156131e657fe5b8273ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3505050565b600060011515602160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156132b157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156132ed57600080fd5b602e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60216020528060005260406000206000915054906101000a900460ff1681565b60276020528060005260406000206000915090505481565b60295481565b60236020528060005260406000206000915090505481565b81602360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156133e557600080fd5b6000811115156133f457600080fd5b602954602460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000602860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001908152602001600020819055503360256000602954815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160266000602954815260200190815260200160002081905550806027600060295481526020019081526020016000208190555080826029547ffc0aa924099cacf4bd6c485ac4878971346961ddb97f82e9a176e747c9c4837260405160405180910390a4602860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055506029600081548092919060010191905055505050565b60045481565b6009818154811015156135bd57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80602a54101515156135fd57600080fd5b80602a60008282540392505081905550613618333083614e95565b3373ffffffffffffffffffffffffffffffffffffffff166108fc602b5483029081150290604051600060405180830381858888f19350505050158015613662573d6000803e3d6000fd5b50602b54817f8cdedd0db303ea9c88fd5b41969d212021edaf8efc5982d62a426e273145273a60405160405180910390a350565b60226020528060005260406000206000915090505481565b60065481565b60011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561371357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561374f57600080fd5b80600481600019169055507f91fad137042a1279f1601ee8344caa94df7b77fea5fc0bdc38aded60ce2872458160405180826000191660001916815260200191505060405180910390a150565b60011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156137fb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561383757600080fd5b6000821180156138475750600081115b151561385257600080fd5b81600581905550806006819055507f7d3377306e0bd0b59fbabdbb3b84c89b61f71ec30d586a7251444b30f4cbf5ec8282604051808381526020018281526020019250505060405180910390a15050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139395780601f1061390e57610100808354040283529160200191613939565b820191906000526020600020905b81548152906001019060200180831161391c57829003601f168201915b505050505081565b600060011515602160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156139a257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156139de57600080fd5b602d828154811015156139ed57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600b82600a81101515613a3057fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606009805480602002602001604051908101604052809291908181526020018280548015613add57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311613a93575b5050505050905090565b60011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515613b4657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515613b8257600080fd5b602160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168015613c3657508073ffffffffffffffffffffffffffffffffffffffff16601583600a81101515613bfc57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b1515613c4157600080fd5b6000602160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000602260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000601583600a81101515613cef57fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16827fb541d8a045a91d4474d32adaf04be2b68633bd1e4aa58e64d2471cb6b98a0ae960405160405180910390a35050565b602c602052816000526040600020602052806000526040600020600091509150505481565b600080600084602660008681526020019081526020016000205410151515613dc257600080fd5b6027600085815260200190815260200160002054850292508234141515613de857600080fd5b846026600086815260200190815260200160002060008282540392505081905550613e476025600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387614e95565b606460638402811515613e5657fe5b049150819050600091506025600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015613ed9573d6000803e3d6000fd5b50833373ffffffffffffffffffffffffffffffffffffffff167f3a4d0cc56cffefc1ff28aee1e2417ab2f6ef125b5669164ccbf778f32f30084b6025600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a35050505050565b600b81600a81101515613fa657fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000613fd9338484614e95565b6001905092915050565b601581600a81101515613ff257fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b6000602360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156140c657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561410257600080fd5b8060026000828254019250508190555080602360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507fef18524e45a9c3793f74939b40ae82cfa0160b2993a65ceee104545152736f8781600254604051808381526020018281526020019250505060405180910390a150565b6032818154811015156141b257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561424257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561427e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600b84600a811015156142a557fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561434757508173ffffffffffffffffffffffffffffffffffffffff16600b84600a8110151561430c57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b151561435257600080fd5b600b83600a8110151561436157fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600060206000600b86600a8110151561439a57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081600b84600a8110151561441d57fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001602060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60266020528060005260406000206000915090505481565b60011515602160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561458a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156145c657600080fd5b80603060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ccc35556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561468d57600080fd5b505af11580156146a1573d6000803e3d6000fd5b505050506040513d60208110156146b757600080fd5b8101908080519060200190929190505050603160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506032603160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506033600081548092919060010191905055506033548173ffffffffffffffffffffffffffffffffffffffff167f55c7305a5c9d8ed04ec6b7022640ccb643505db82828b0e24554c0d4d99da10160405160405180910390a350565b60011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561484a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561488657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600b83600a811015156148ad57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561493c5750602060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b151561494757600080fd5b80600b83600a8110151561495757fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001602060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550601f600081548092919060010191905055508073ffffffffffffffffffffffffffffffffffffffff16827f38b2cbf571fbace074ff0149476c2adcf9c2f47d18bb39f9924473108a47278d60405160405180910390a35050565b60008060006025600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16602660008681526020019081526020016000205460276000878152602001908152602001600020549250925092509193909250565b6000602c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060011515602060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515614b9e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515614bda57600080fd5b602d83815481101515614be957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000602e6000602d86815481101515614c2b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555081602d84815481101515614cb757fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001602e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550828173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167feb2ca844ed1904e5ad2732fbb7996a759f74361ce83aa19530300fbf9824d03260405160405180910390a4505050565b60256020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b602b5481565b600060011515602160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515614e5157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515614e8d57600080fd5b602f54905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515614ed257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515614f0e57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515614f4957600080fd5b600082111515614f5857600080fd5b81602360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515614fa657600080fd5b8182602360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110151515614ff657600080fd5b6000602360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561518d57600754600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900460ff1615615113578260096007548154811015156150ab57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a60006101000a81548160ff02191690831515021790555061517a565b60098390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b6007600081548092919060010191905055505b602360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054602360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401905081602360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081602360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506000602360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156154ef5760076000815480929190600190039190505550600960075481548110151561531657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166009600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481548110151561538f57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460086000600960075481548110151561542c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060096007548154811015156154a657fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600a60006101000a81548160ff0219169083151502179055505b602360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054602360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054018114151561557a57fe5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3505050505600a165627a7a72305820f2586ed58540650d4390c6c0fbb314f89d904f814d65bb4d7ea5cf2ff4a9ee91002900000000000000000000000000000000000000000000000000003fc179899f700000000000000000000000000000000000000000000000000000000000000001",
  "constructorArguments": "00000000000000000000000000000000000000000000000000003fc179899f700000000000000000000000000000000000000000000000000000000000000001"
}