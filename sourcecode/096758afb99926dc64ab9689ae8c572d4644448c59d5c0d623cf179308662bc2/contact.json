{
  "address": "0xcb39c3502415152b2ec90ff07ee18cc94f681a72",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "storeum",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-04\n*/\n\npragma solidity 0.4.25;\n// ----------------------------------------------------------------------------------------------\n// sto token by storeum Limited.\n// An ERC20 standard\n//\n// author: storeum team \n// Contact: [emailÂ protected]\ncontract ERC20 {\n  uint256 public totalSupply;\n  function balanceOf(address who) public view returns (uint256 _user);\n  function transfer(address to, uint256 value) public returns (bool success);\n  function allowance(address owner, address spender) public view returns (uint256 value);\n  function transferFrom(address from, address to, uint256 value) public returns (bool success);\n  function approve(address spender, uint256 value) public returns (bool success);\n\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\n  \n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint256 a, uint256 b) internal pure  returns (uint256) {\n    uint c = a + b;\n    assert(c>=a);\n    return c;\n  }\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n}\n\ncontract OnlyOwner {\n  address public owner;\n  address private controller;\n  //log the previous and new controller when event  is fired.\n  event SetNewController(address prev_controller, address new_controller);\n  /** \n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n    controller = owner;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner. \n   */\n  modifier isOwner {\n    require(msg.sender == owner);\n    _;\n  }\n  \n  /**\n   * @dev Throws if called by any account other than the controller. \n   */\n  modifier isController {\n    require(msg.sender == controller);\n    _;\n  }\n  \n  function replaceController(address new_controller) isController public returns(bool){\n    require(new_controller != address(0x0));\n\tcontroller = new_controller;\n    emit SetNewController(msg.sender,controller);\n    return true;   \n  }\n\n}\n\ncontract StandardToken is ERC20{\n  using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n\n  \n    function _transfer(address _from, address _to, uint256 _value) internal returns (bool success){\n      //prevent sending of tokens from genesis address or to self\n      require(_from != address(0) && _from != _to);\n      require(_to != address(0));\n      //subtract tokens from the sender on transfer\n      balances[_from] = balances[_from].safeSub(_value);\n      //add tokens to the receiver on reception\n      balances[_to] = balances[_to].safeAdd(_value);\n      return true;\n    }\n\n  function transfer(address _to, uint256 _value) public returns (bool success) \n  { \n    require(_value <= balances[msg.sender]);\n      _transfer(msg.sender,_to,_value);\n      emit Transfer(msg.sender, _to, _value);\n      return true;\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n      uint256 _allowance = allowed[_from][msg.sender];\n      //value must be less than allowed value\n      require(_value <= _allowance);\n      //balance of sender + token value transferred by sender must be greater than balance of sender\n      require(balances[_to] + _value > balances[_to]);\n      //call transfer function\n      _transfer(_from,_to,_value);\n      //subtract the amount allowed to the sender \n      allowed[_from][msg.sender] = _allowance.safeSub(_value);\n      //trigger Transfer event\n      emit Transfer(_from, _to, _value);\n      return true;\n    }\n\n    function balanceOf(address _owner) public constant returns (uint balance) {\n      return balances[_owner];\n    }\n\n    \n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    // To change the approve amount you first have to reduce the addresses`\n    //  allowance to zero by calling `approve(_spender,0)` if it is not\n    //  already 0 to mitigate the race condition described here:\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n}\n\ncontract storeum is StandardToken, OnlyOwner{\n\tuint256 public constant decimals = 18;\n    string public constant name = \"storeum\";\n    string public constant symbol = \"STO\";\n    string public constant version = \"1.0\";\n    uint256 public constant totalSupply =279000000*10**18;\n    uint256 private approvalCounts =0;\n    uint256 private minRequiredApprovals =2;\n    address public burnedTokensReceiver;\n    \n    constructor() public{\n        balances[msg.sender] = totalSupply;\n        burnedTokensReceiver = 0x0000000000000000000000000000000000000000;\n    }\n\n    /**\n   * @dev Function to set approval count variable value.\n   * @param _value uint The value by which approvalCounts variable will be set.\n   */\n    function setApprovalCounts(uint _value) public isController {\n        approvalCounts = _value;\n    }\n    \n    /**\n   * @dev Function to set minimum require approval variable value.\n   * @param _value uint The value by which minRequiredApprovals variable will be set.\n   * @return true.\n   */\n    function setMinApprovalCounts(uint _value) public isController returns (bool){\n        require(_value > 0);\n        minRequiredApprovals = _value;\n        return true;\n    }\n    \n    /**\n   * @dev Function to get approvalCounts variable value.\n   * @return approvalCounts.\n   */\n    function getApprovalCount() public view isController returns(uint){\n        return approvalCounts;\n    }\n    \n     /**\n   * @dev Function to get burned Tokens Receiver address.\n   * @return burnedTokensReceiver.\n   */\n    function getBurnedTokensReceiver() public view isController returns(address){\n        return burnedTokensReceiver;\n    }\n    \n    \n    function controllerApproval(address _from, uint256 _value) public isOwner returns (bool) {\n        require(minRequiredApprovals <= approvalCounts);\n\t\trequire(_value <= balances[_from]);\t\t\n        balances[_from] = balances[_from].safeSub(_value);\n        balances[burnedTokensReceiver] = balances[burnedTokensReceiver].safeAdd(_value);\n        emit Transfer(_from,burnedTokensReceiver, _value);\n        return true;\n    }\n}",
  "bytecode": "60806040526000600555600260065534801561001a57600080fd5b5060038054600160a060020a03199081163390811792839055600480548316600160a060020a0394909416939093179092556000918252600160205260409091206ae6c88c4e6156fa770000009055600780549091169055610a2b806100816000396000f3006080604052600436106100fb5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630343d550811461010057806306fdde0314610127578063095ea7b3146101b157806318160ddd146101e957806323b872dd146101fe5780632d0641d414610228578063313ce5671461024257806354fd4d501461025757806355ab96881461026c5780635f0e6fc61461029d578063632fbda4146102b257806370a08231146102d35780638c31886f146102f45780638da5cb5b1461030c57806395d89b4114610321578063a9059cbb14610336578063dc3a83721461035a578063dd62ed3e1461037e575b600080fd5b34801561010c57600080fd5b506101156103a5565b60408051918252519081900360200190f35b34801561013357600080fd5b5061013c6103c6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017657818101518382015260200161015e565b50505050905090810190601f1680156101a35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101bd57600080fd5b506101d5600160a060020a03600435166024356103fd565b604080519115158252519081900360200190f35b3480156101f557600080fd5b5061011561049f565b34801561020a57600080fd5b506101d5600160a060020a03600435811690602435166044356104ae565b34801561023457600080fd5b5061024060043561058d565b005b34801561024e57600080fd5b506101156105a9565b34801561026357600080fd5b5061013c6105ae565b34801561027857600080fd5b506102816105e5565b60408051600160a060020a039092168252519081900360200190f35b3480156102a957600080fd5b506102816105f4565b3480156102be57600080fd5b506101d5600160a060020a036004351661061e565b3480156102df57600080fd5b50610115600160a060020a03600435166106bf565b34801561030057600080fd5b506101d56004356106da565b34801561031857600080fd5b5061028161070a565b34801561032d57600080fd5b5061013c610719565b34801561034257600080fd5b506101d5600160a060020a0360043516602435610750565b34801561036657600080fd5b506101d5600160a060020a03600435166024356107c1565b34801561038a57600080fd5b50610115600160a060020a03600435811690602435166108da565b600454600090600160a060020a031633146103bf57600080fd5b5060055490565b60408051808201909152600781527f73746f7265756d00000000000000000000000000000000000000000000000000602082015281565b600081158061042d5750336000908152600260209081526040808320600160a060020a0387168452909152902054155b151561043857600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6ae6c88c4e6156fa7700000081565b600160a060020a0383166000908152600260209081526040808320338452909152812054808311156104df57600080fd5b600160a060020a0384166000908152600160205260409020548381011161050557600080fd5b610510858585610905565b50610521818463ffffffff6109d716565b600160a060020a03808716600081815260026020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001949350505050565b600454600160a060020a031633146105a457600080fd5b600555565b601281565b60408051808201909152600381527f312e300000000000000000000000000000000000000000000000000000000000602082015281565b600754600160a060020a031681565b600454600090600160a060020a0316331461060e57600080fd5b50600754600160a060020a031690565b600454600090600160a060020a0316331461063857600080fd5b600160a060020a038216151561064d57600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384811691909117918290556040805133815292909116602083015280517fd2a4788497665e302d031c6dd3efc595d77c9c7bd8aac410fc847406f2efb79e9281900390910190a1506001919050565b600160a060020a031660009081526001602052604090205490565b600454600090600160a060020a031633146106f457600080fd5b6000821161070157600080fd5b50600655600190565b600354600160a060020a031681565b60408051808201909152600381527f53544f0000000000000000000000000000000000000000000000000000000000602082015281565b3360009081526001602052604081205482111561076c57600080fd5b610777338484610905565b50604080518381529051600160a060020a0385169133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b600354600090600160a060020a031633146107db57600080fd5b60055460065411156107ec57600080fd5b600160a060020a03831660009081526001602052604090205482111561081157600080fd5b600160a060020a03831660009081526001602052604090205461083a908363ffffffff6109d716565b600160a060020a038085166000908152600160205260408082209390935560075490911681522054610872908363ffffffff6109e916565b60078054600160a060020a039081166000908152600160209081526040918290209490945591548251868152925190821693918716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000600160a060020a03841615801590610931575082600160a060020a031684600160a060020a031614155b151561093c57600080fd5b600160a060020a038316151561095157600080fd5b600160a060020a03841660009081526001602052604090205461097a908363ffffffff6109d716565b600160a060020a0380861660009081526001602052604080822093909355908516815220546109af908363ffffffff6109e916565b600160a060020a03841660009081526001602081905260409091209190915590509392505050565b6000828211156109e357fe5b50900390565b6000828201838110156109f857fe5b93925050505600a165627a7a72305820dad635c59174fea277fd58c38c2c38cec7d1a69100ffaf5ac49cde4d869714c70029"
}