{
  "address": "0xf2d4766ad705e3a5c9ba5b0436b473085f82f82f",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "WarmWallet",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-26\n*/\n\npragma solidity ^0.4.24;\n\ncontract Ownable {\n\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {                                                \n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0));                                    // to ensure the owner's address isn't an uninitialised address, \"0x0\"\n        owner = newOwner;\n    }\n}\n\ncontract WarmWallet is Ownable {\n    \n    address defaultSweeper;\n\n    mapping (address => address) sweepers;\n    mapping (address => bool) financeFolks;\n    mapping (address => bool) destinations;\n    mapping (address => bytes32) dstLabels;\n    mapping (address => uint256) dstIndex;\n    address[] public destKeys;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function sweeperOf(address asset) public view returns (address) {\n    \tif (sweepers[asset] == 0x0) {\n    \t\treturn defaultSweeper;\n    \t}\n    \treturn sweepers[asset];\n    }\n\n    function setDefaultSweeper(address sweeper) public onlyOwner {\n    \tdefaultSweeper = sweeper;\n    }\n\n    function setSweeper(address asset, address sweeper) public onlyOwner {\n    \tsweepers[asset] = sweeper;\n    }\n\n    function authorizeAddress(address actor) public onlyOwner {\n    \tfinanceFolks[actor] = true;\n    }\n\n    function revokeAuthorization(address actor) public onlyOwner {\n    \tfinanceFolks[actor] = false;\n    }\n\n    function isAuthorized(address actor) public view returns (bool) {\n    \treturn financeFolks[actor];\n    }\n\n    function addDestination(address dest, bytes32 label) public onlyOwner {\n    \trequire(destinations[dest] == false);\n    \tdestinations[dest] = true;\n    \tdstIndex[dest] = destKeys.length;\n    \tdestKeys.push(dest);\n    \tdstLabels[dest] = label;\n    }\n\n    function removeDestination(address dest) public onlyOwner {\n    \trequire(destinations[dest] == true);\n    \tdestinations[dest] = false;\n    \tdelete dstLabels[dest];\n    \tuint256 keyindex = dstIndex[dest];\n    \tdelete destKeys[keyindex];\n    \tdelete dstIndex[dest];\n    }\n\n    function isDestination(address dest) public view returns (bool) {\n    \treturn destinations[dest];\n    }\n\n    function destinationLabel(address dest) public view returns (string) {\n    \tbytes memory bytesArray = new bytes(32);\n    \tfor (uint256 i; i < 32; i++) {\n        \tbytesArray[i] = dstLabels[dest][i];\n        }\n    \treturn string(bytesArray);\n    }\n\n    function () public payable { \n        if (msg.value == 0 && financeFolks[msg.sender] == true) {\n            address destination = addressAtIndex(msg.data, 2);\n            require(destinations[destination] == true);\n\n            address asset = addressAtIndex(msg.data, 1);\n            address _impl = sweeperOf(asset);\n            require(_impl != 0x0);\n            bytes memory data = msg.data;\n\n    \t\tassembly {\n    \t\t\tlet result := delegatecall(gas, _impl, add(data, 0x20), mload(data), 0, 0)\n    \t\t\tlet size := returndatasize\n    \t\t\tlet ptr := mload(0x40)\n    \t\t\treturndatacopy(ptr, 0, size)\n    \t\t\tswitch result\n    \t\t\tcase 0 { revert(ptr, size) }\n    \t\t\tdefault { return(ptr, size) }\n    \t\t}\n        }\n    }\n\n    function addressAtIndex(bytes _bytes, uint256 index) internal pure returns (address asset) {\n        assembly {\n            // mul(32, index) - Each param is 32 bytes, so we use n*32\n            // add(4, ^) - 4 function sig bytes\n            // add(_bytes, ^) - set the pointer to that position in memory\n            // mload(^) - load an addresses worth of value (20 bytes) from memory into asset\n            asset := mload(add(_bytes, add(4, mul(32, index))))\n        }\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"sweeperOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"authorizeAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"removeDestination\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"addDestination\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sweeper\",\"type\":\"address\"}],\"name\":\"setDefaultSweeper\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"isDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"revokeAuthorization\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"asset\",\"type\":\"address\"},{\"name\":\"sweeper\",\"type\":\"address\"}],\"name\":\"setSweeper\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"destinationLabel\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"destKeys\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a03199081163390811790911617905561091e8061003a6000396000f3006080604052600436106100c45763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633c18d318811461021a5780634a5db3b5146102575780635cadd08d1461027a57806366f409311461029b5780638da5cb5b146102bf5780638dd9596a146102d4578063aaaae342146102f5578063b48028e31461032a578063d288034f1461034b578063d3107f4d14610372578063d78e830c14610408578063f2fde38b14610420578063fe9fbb8014610441575b600080806060341580156100ec57503360009081526003602052604090205460ff1615156001145b156102145761012e6000368080601f01602080910402602001604051908101604052809392919081815260200183838082843750600294506104629350505050565b600160a060020a03811660009081526004602052604090205490945060ff16151560011461015b57600080fd5b6101986000368080601f01602080910402602001604051908101604052809392919081815260200183838082843750600194506104629350505050565b92506101a38361046d565b9150600160a060020a03821615156101ba57600080fd5b6000368080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509050600080825160208401855af43d604051816000823e828015610210578282f35b8282fd5b50505050005b34801561022657600080fd5b5061023b600160a060020a036004351661046d565b60408051600160a060020a039092168252519081900360200190f35b34801561026357600080fd5b50610278600160a060020a03600435166104c4565b005b34801561028657600080fd5b50610278600160a060020a03600435166104ff565b3480156102a757600080fd5b50610278600160a060020a03600435166024356105c8565b3480156102cb57600080fd5b5061023b61068c565b3480156102e057600080fd5b50610278600160a060020a036004351661069b565b34801561030157600080fd5b50610316600160a060020a03600435166106e1565b604080519115158252519081900360200190f35b34801561033657600080fd5b50610278600160a060020a03600435166106ff565b34801561035757600080fd5b50610278600160a060020a0360043581169060243516610737565b34801561037e57600080fd5b50610393600160a060020a0360043516610789565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103cd5781810151838201526020016103b5565b50505050905090810190601f1680156103fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561041457600080fd5b5061023b600435610851565b34801561042c57600080fd5b50610278600160a060020a0360043516610879565b34801561044d57600080fd5b50610316600160a060020a03600435166108d4565b602002016004015190565b600160a060020a0380821660009081526002602052604081205490911615156104a25750600154600160a060020a03166104bf565b50600160a060020a03808216600090815260026020526040902054165b919050565b600054600160a060020a031633146104db57600080fd5b600160a060020a03166000908152600360205260409020805460ff19166001179055565b60008054600160a060020a0316331461051757600080fd5b600160a060020a03821660009081526004602052604090205460ff16151560011461054157600080fd5b50600160a060020a0381166000908152600460209081526040808320805460ff19169055600582528083208390556006909152902054600780548290811061058557fe5b60009182526020808320909101805473ffffffffffffffffffffffffffffffffffffffff19169055600160a060020a039390931681526006909252506040812055565b600054600160a060020a031633146105df57600080fd5b600160a060020a03821660009081526004602052604090205460ff161561060557600080fd5b600160a060020a039091166000818152600460209081526040808320805460ff19166001908117909155600780546006855283862081905591820190557fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801805473ffffffffffffffffffffffffffffffffffffffff191685179055928252600590522055565b600054600160a060020a031681565b600054600160a060020a031633146106b257600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a031660009081526004602052604090205460ff1690565b600054600160a060020a0316331461071657600080fd5b600160a060020a03166000908152600360205260409020805460ff19169055565b600054600160a060020a0316331461074e57600080fd5b600160a060020a039182166000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b6040805160208082528183019092526060918291600091808201610400803883390190505091505b602081101561084a57600160a060020a03841660009081526005602090815260409091205490829081106107e157fe5b1a7f010000000000000000000000000000000000000000000000000000000000000002828281518110151561081257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001016107b1565b5092915050565b600780548290811061085f57fe5b600091825260209091200154600160a060020a0316905081565b600054600160a060020a0316331461089057600080fd5b600160a060020a03811615156108a557600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a031660009081526003602052604090205460ff16905600a165627a7a723058200d47104cf6c06d2cd5c750a774443b78dbf7fdd001fa807c1713eb6ac135a9130029"
}