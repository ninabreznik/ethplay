{
  "address": "0x7934fa8b3ac2213ac42e69a5ec55d624b4c04719",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "UniversalUtilityToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-11\n*/\n\npragma solidity ^0.4.8;\n\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\nlibrary SafeMath {\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a / b;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n}\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    returns (bool)\n  {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  function increaseApproval(\n    address _spender,\n    uint _addedValue\n  )\n    public\n    returns (bool)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function decreaseApproval(\n    address _spender,\n    uint _subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n contract BurnableToken is StandardToken {\n\n   event Burn(address indexed burner, uint256 value);\n\n   function burn(uint256 _value) public {\n     _burn(msg.sender, _value);\n   }\n\n   function _burn(address _who, uint256 _value) internal {\n     require(_value <= balances[_who]);\n\n     balances[_who] = balances[_who].sub(_value);\n     totalSupply_ = totalSupply_.sub(_value);\n     emit Burn(_who, _value);\n     emit Transfer(_who, address(0), _value);\n   }\n }\n\n contract Ownable {\n   address public owner;\n\n   event OwnershipRenounced(address indexed previousOwner);\n   event OwnershipTransferred(\n     address indexed previousOwner,\n     address indexed newOwner\n   );\n\n   constructor() public {\n     owner = msg.sender;\n   }\n\n   modifier onlyOwner() {\n     require(msg.sender == owner);\n     _;\n   }\n\n   function renounceOwnership() public onlyOwner {\n     emit OwnershipRenounced(owner);\n     owner = address(0);\n   }\n\n   function transferOwnership(address _newOwner) public onlyOwner {\n     _transferOwnership(_newOwner);\n   }\n\n   function _transferOwnership(address _newOwner) internal {\n     require(_newOwner != address(0));\n     emit OwnershipTransferred(owner, _newOwner);\n     owner = _newOwner;\n   }\n }\n\n contract MintableToken is StandardToken, Ownable {\n   event Mint(address indexed to, uint256 amount);\n   event MintFinished();\n\n   bool public mintingFinished = false;\n\n\n   modifier canMint() {\n     require(!mintingFinished);\n     _;\n   }\n\n   modifier hasMintPermission() {\n     require(msg.sender == owner);\n     _;\n   }\n\n   function mint(\n     address _to,\n     uint256 _amount\n   )\n     hasMintPermission\n     canMint\n     public\n     returns (bool)\n   {\n     totalSupply_ = totalSupply_.add(_amount);\n     balances[_to] = balances[_to].add(_amount);\n     emit Mint(_to, _amount);\n     emit Transfer(address(0), _to, _amount);\n     return true;\n   }\n\n   function finishMinting() onlyOwner canMint public returns (bool) {\n     mintingFinished = true;\n     emit MintFinished();\n     return true;\n   }\n }\n\n\ncontract UniversalUtilityToken is BurnableToken, MintableToken {\n  string public name = \"Universal Utility Token (优优币）\";\n  string public symbol = \"UUT\";\n  uint public decimals = 8;\n  uint public INITIAL_SUPPLY = 100000000 * (10 ** decimals);\n\n  constructor() public {\n    totalSupply_ = INITIAL_SUPPLY;\n    balances[msg.sender] = INITIAL_SUPPLY;\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "6003805460a060020a60ff021916905560e0604052602560808190527f556e6976657273616c205574696c69747920546f6b656e2028e4bc98e4bc98e560a09081527fb881efbc8900000000000000000000000000000000000000000000000000000060c0526100729160049190610107565b506040805180820190915260038082527f555554000000000000000000000000000000000000000000000000000000000060209092019182526100b791600591610107565b506008600655662386f26fc100006007553480156100d457600080fd5b5060038054600160a060020a031916339081179091556007546001819055600091825260208290526040909120556101a2565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061014857805160ff1916838001178555610175565b82800160010185558215610175579182015b8281111561017557825182559160200191906001019061015a565b50610181929150610185565b5090565b61019f91905b80821115610181576000815560010161018b565b90565b610d9c806101b16000396000f3006080604052600436106101065763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461010b57806306fdde0314610134578063095ea7b3146101be57806318160ddd146101e257806323b872dd146102095780632ff2e9dc14610233578063313ce5671461024857806340c10f191461025d57806342966c6814610281578063661884631461029b57806370a08231146102bf578063715018a6146102e05780637d64bcb4146102f55780638da5cb5b1461030a57806395d89b411461033b578063a9059cbb14610350578063d73dd62314610374578063dd62ed3e14610398578063f2fde38b146103bf575b600080fd5b34801561011757600080fd5b506101206103e0565b604080519115158252519081900360200190f35b34801561014057600080fd5b50610149610401565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018357818101518382015260200161016b565b50505050905090810190601f1680156101b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ca57600080fd5b50610120600160a060020a036004351660243561048f565b3480156101ee57600080fd5b506101f76104f5565b60408051918252519081900360200190f35b34801561021557600080fd5b50610120600160a060020a03600435811690602435166044356104fb565b34801561023f57600080fd5b506101f7610660565b34801561025457600080fd5b506101f7610666565b34801561026957600080fd5b50610120600160a060020a036004351660243561066c565b34801561028d57600080fd5b50610299600435610775565b005b3480156102a757600080fd5b50610120600160a060020a0360043516602435610782565b3480156102cb57600080fd5b506101f7600160a060020a0360043516610872565b3480156102ec57600080fd5b5061029961088d565b34801561030157600080fd5b506101206108fb565b34801561031657600080fd5b5061031f6109a1565b60408051600160a060020a039092168252519081900360200190f35b34801561034757600080fd5b506101496109b0565b34801561035c57600080fd5b50610120600160a060020a0360043516602435610a0b565b34801561038057600080fd5b50610120600160a060020a0360043516602435610ada565b3480156103a457600080fd5b506101f7600160a060020a0360043581169060243516610b73565b3480156103cb57600080fd5b50610299600160a060020a0360043516610b9e565b60035474010000000000000000000000000000000000000000900460ff1681565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104875780601f1061045c57610100808354040283529160200191610487565b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b505050505081565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b6000600160a060020a038316151561051257600080fd5b600160a060020a03841660009081526020819052604090205482111561053757600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561056757600080fd5b600160a060020a038416600090815260208190526040902054610590908363ffffffff610bbe16565b600160a060020a0380861660009081526020819052604080822093909355908516815220546105c5908363ffffffff610bd016565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610607908363ffffffff610bbe16565b600160a060020a0380861660008181526002602090815260408083203384528252918290209490945580518681529051928716939192600080516020610d51833981519152929181900390910190a35060019392505050565b60075481565b60065481565b600354600090600160a060020a0316331461068657600080fd5b60035474010000000000000000000000000000000000000000900460ff16156106ae57600080fd5b6001546106c1908363ffffffff610bd016565b600155600160a060020a0383166000908152602081905260409020546106ed908363ffffffff610bd016565b600160a060020a03841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a03851691600091600080516020610d518339815191529181900360200190a350600192915050565b61077f3382610be3565b50565b336000908152600260209081526040808320600160a060020a0386168452909152812054808311156107d757336000908152600260209081526040808320600160a060020a038816845290915281205561080c565b6107e7818463ffffffff610bbe16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a031633146108a457600080fd5b600354604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26003805473ffffffffffffffffffffffffffffffffffffffff19169055565b600354600090600160a060020a0316331461091557600080fd5b60035474010000000000000000000000000000000000000000900460ff161561093d57600080fd5b6003805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600354600160a060020a031681565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104875780601f1061045c57610100808354040283529160200191610487565b6000600160a060020a0383161515610a2257600080fd5b33600090815260208190526040902054821115610a3e57600080fd5b33600090815260208190526040902054610a5e908363ffffffff610bbe16565b3360009081526020819052604080822092909255600160a060020a03851681522054610a90908363ffffffff610bd016565b600160a060020a03841660008181526020818152604091829020939093558051858152905191923392600080516020610d518339815191529281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610b0e908363ffffffff610bd016565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a03163314610bb557600080fd5b61077f81610cd2565b600082821115610bca57fe5b50900390565b81810182811015610bdd57fe5b92915050565b600160a060020a038216600090815260208190526040902054811115610c0857600080fd5b600160a060020a038216600090815260208190526040902054610c31908263ffffffff610bbe16565b600160a060020a038316600090815260208190526040902055600154610c5d908263ffffffff610bbe16565b600155604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a03851691600080516020610d518339815191529181900360200190a35050565b600160a060020a0381161515610ce757600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058205cebac09548f8c685d4eabd50370f5411fc6dac4195c44119919b5ef2d2c92d10029"
}