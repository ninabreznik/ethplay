{
  "address": "0xc0eb85285d83217cd7c891702bcbc0fc401e2d9d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Hiveterminal",
  "contractName": "HVNToken",
  "compilerVersion": "v0.4.13+commit.fb4cb1a",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-09-07\n*/\n\n/**\n * ERC-20 Standard Token Smart Contract implementation.\n * \n * Copyright © 2017 by Hive Project Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND (express or implied).\n */\n\npragma solidity ^0.4.11;\n\n/**\n * ERC-20 Standard Token Smart Contract Interface.\n *\n * Copyright © 2017 by Hive Project Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND (express or implied).\n */\n\n\n/**\n * ERC-20 standard token interface, as defined\n * <a href=\"http://github.com/ethereum/EIPs/issues/20\">here</a>.\n */\ncontract ERC20Interface {\n  /**\n   * Get total number of tokens in circulation.\n   */\n  uint256 public totalSupply;\n\n  /**\n   * @dev Get number of tokens currently belonging to given owner.\n   *\n   * @param _owner address to get number of tokens currently belonging to the\n   *         owner of\n   * @return number of tokens currently belonging to the owner of given address\n   */\n  function balanceOf (address _owner) constant returns (uint256 balance);\n\n  /**\n   * @dev Transfer given number of tokens from message sender to given recipient.\n   *\n   * @param _to address to transfer tokens to the owner of\n   * @param _value number of tokens to transfer to the owner of given address\n   * @return true if tokens were transferred successfully, false otherwise\n   */\n  function transfer (address _to, uint256 _value) returns (bool success);\n\n  /**\n   * @dev Transfer given number of tokens from given owner to given recipient.\n   *\n   * @param _from address to transfer tokens from the owner of\n   * @param _to address to transfer tokens to the owner of\n   * @param _value number of tokens to transfer from given owner to given\n   *         recipient\n   * @return true if tokens were transferred successfully, false otherwise\n   */\n  function transferFrom (address _from, address _to, uint256 _value)\n  returns (bool success);\n\n  /**\n   * @dev Allow given spender to transfer given number of tokens from message sender.\n   *\n   * @param _spender address to allow the owner of to transfer tokens from\n   *         message sender\n   * @param _value number of tokens to allow to transfer\n   * @return true if token transfer was successfully approved, false otherwise\n   */\n  function approve (address _spender, uint256 _value) returns (bool success);\n\n  /**\n   * @dev Tell how many tokens given spender is currently allowed to transfer from\n   * given owner.\n   *\n   * @param _owner address to get number of tokens allowed to be transferred\n   *        from the owner of\n   * @param _spender address to get number of tokens allowed to be transferred\n   *        by the owner of\n   * @return number of tokens given spender is currently allowed to transfer\n   *         from given owner\n   */\n  function allowance (address _owner, address _spender) constant\n  returns (uint256 remaining);\n\n  /**\n   * @dev Logged when tokens were transferred from one owner to another.\n   *\n   * @param _from address of the owner, tokens were transferred from\n   * @param _to address of the owner, tokens were transferred to\n   * @param _value number of tokens transferred\n   */\n  event Transfer (address indexed _from, address indexed _to, uint256 _value);\n\n  /**\n   * @dev Logged when owner approved his tokens to be transferred by some spender.\n   *\n   * @param _owner owner who approved his tokens to be transferred\n   * @param _spender spender who were allowed to transfer the tokens belonging\n   *        to the owner\n   * @param _value number of tokens belonging to the owner, approved to be\n   *        transferred by the spender\n   */\n  event Approval (\n    address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    function Owned() {\n        owner = msg.sender;\n    }\n\n    modifier ownerOnly {\n        assert(msg.sender == owner);\n        _;\n    }\n\n    /**\n     * @dev Transfers ownership. New owner has to accept in order ownership change to take effect\n     */\n    function transferOwnership(address _newOwner) public ownerOnly {\n        require(_newOwner != owner);\n        newOwner = _newOwner;\n    }\n\n    /**\n     * @dev Accepts transferred ownership\n     */\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        OwnerUpdate(owner, newOwner);\n        owner = newOwner;\n        newOwner = 0x0;\n    }\n\n    event OwnerUpdate(address _prevOwner, address _newOwner);\n}\n\n/**\n * Safe Math Smart Contract.  \n * \n * Copyright © 2017 by Hive Project Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND (express or implied).\n */\n \n\n/**\n * Provides methods to safely add, subtract and multiply uint256 numbers.\n */\ncontract SafeMath {\n \n  /**\n   * @dev Add two uint256 values, throw in case of overflow.\n   *\n   * @param a first value to add\n   * @param b second value to add\n   * @return x + y\n   */\n    function add(uint256 a, uint256 b) internal constant returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n  /**\n   * @dev Subtract one uint256 value from another, throw in case of underflow.\n   *\n   * @param a value to subtract from\n   * @param b value to subtract\n   * @return a - b\n   */\n    function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n\n  /**\n   * @dev Multiply two uint256 values, throw in case of overflow.\n   *\n   * @param a first value to multiply\n   * @param b second value to multiply\n   * @return c = a * b\n   */\n    function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n /**\n   * @dev Divide two uint256 values, throw in case of overflow.\n   *\n   * @param a first value to divide\n   * @param b second value to divide\n   * @return c = a / b\n   */\n        function div(uint256 a, uint256 b) internal constant returns (uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n}\n\n/*\n * TokenRecepient\n *\n * Copyright © 2017 by Hive Project Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND (express or implied).\n */\n\n\ncontract TokenRecipient {\n    /**\n     * receive approval\n     */\n    function receiveApproval(address _from, uint256 _value, address _to, bytes _extraData);\n}\n\n/**\n * Standard Token Smart Contract that implements ERC-20 token interface\n */\ncontract HVNToken is ERC20Interface, SafeMath, Owned {\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n    string public constant name = \"Hive Project Token\";\n    string public constant symbol = \"HVN\";\n    uint8 public constant decimals = 8;\n    string public version = '0.0.2';\n\n    bool public transfersFrozen = false;\n\n    /**\n     * Protection against short address attack\n     */\n    modifier onlyPayloadSize(uint numwords) {\n        assert(msg.data.length == numwords * 32 + 4);\n        _;\n    }\n\n    /**\n     * Check if transfers are on hold - frozen\n     */\n    modifier whenNotFrozen(){\n        if (transfersFrozen) revert();\n        _;\n    }\n\n\n    function HVNToken() ownerOnly {\n        totalSupply = 50000000000000000;\n        balances[owner] = totalSupply;\n    }\n\n\n    /**\n     * Freeze token transfers.\n     */\n    function freezeTransfers () ownerOnly {\n        if (!transfersFrozen) {\n            transfersFrozen = true;\n            Freeze (msg.sender);\n        }\n    }\n\n\n    /**\n     * Unfreeze token transfers.\n     */\n    function unfreezeTransfers () ownerOnly {\n        if (transfersFrozen) {\n            transfersFrozen = false;\n            Unfreeze (msg.sender);\n        }\n    }\n\n\n    /**\n     * Transfer sender's tokens to a given address\n     */\n    function transfer(address _to, uint256 _value) whenNotFrozen onlyPayloadSize(2) returns (bool success) {\n        require(_to != 0x0);\n\n        balances[msg.sender] = sub(balances[msg.sender], _value);\n        balances[_to] += _value;\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n\n    /**\n     * Transfer _from's tokens to _to's address\n     */\n    function transferFrom(address _from, address _to, uint256 _value) whenNotFrozen onlyPayloadSize(3) returns (bool success) {\n        require(_to != 0x0);\n        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value);\n\n        balances[_from] = sub(balances[_from], _value);\n        balances[_to] += _value;\n        allowed[_from][msg.sender] = sub(allowed[_from][msg.sender], _value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n\n    /**\n     * Returns number of tokens owned by given address.\n     */\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n\n    /**\n     * Sets approved amount of tokens for spender.\n     */\n    function approve(address _spender, uint256 _value) returns (bool success) {\n        require(_value == 0 || allowed[msg.sender][_spender] == 0);\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n\n    /**\n     * Approve and then communicate the approved contract in a single transaction\n     */\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\n        TokenRecipient spender = TokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n\n    /**\n     * Returns number of allowed tokens for given address.\n     */\n    function allowance(address _owner, address _spender) onlyPayloadSize(2) constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n\n    /**\n     * Peterson's Law Protection\n     * Claim tokens\n     */\n    function claimTokens(address _token) ownerOnly {\n        if (_token == 0x0) {\n            owner.transfer(this.balance);\n            return;\n        }\n\n        HVNToken token = HVNToken(_token);\n        uint balance = token.balanceOf(this);\n        token.transfer(owner, balance);\n\n        Transfer(_token, owner, balance);\n    }\n\n\n    event Freeze (address indexed owner);\n    event Unfreeze (address indexed owner);\n}",
  "abi": "[{\"constant\":false,\"inputs\":[],\"name\":\"freezeTransfers\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreezeTransfers\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Unfreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526040805190810160405260058082527f302e302e32000000000000000000000000000000000000000000000000000000602083015290805161004a9291602001906100c2565b506006805460ff19169055341561006057600080fd5b5b5b60018054600160a060020a03191633600160a060020a03161790555b60015433600160a060020a0390811691161461009657fe5b66b1a2bc2ec500006000818155600154600160a060020a03168152600360205260409020555b5b610162565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061010357805160ff1916838001178555610130565b82800160010185558215610130579182015b82811115610130578251825591602001919060010190610115565b5b5061013d929150610141565b5090565b61015f91905b8082111561013d5760008155600101610147565b5090565b90565b610ed3806101716000396000f300606060405236156100eb5763ffffffff60e060020a6000350416630150246081146100f057806306fdde0314610105578063095ea7b31461019057806318160ddd146101c657806323b872dd146101eb578063313ce5671461022757806331c420d41461025057806354fd4d501461026557806370a08231146102f057806379ba5097146103215780638da5cb5b1461033657806395d89b4114610365578063a9059cbb146103f0578063cae9ca5114610426578063d4ee1d901461049f578063dd62ed3e146104ce578063df8de3e714610505578063e45b813414610526578063f2fde38b1461054d575b600080fd5b34156100fb57600080fd5b61010361056e565b005b341561011057600080fd5b6101186105da565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101555780820151818401525b60200161013c565b50505050905090810190601f1680156101825780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561019b57600080fd5b6101b2600160a060020a0360043516602435610611565b604051901515815260200160405180910390f35b34156101d157600080fd5b6101d96106b8565b60405190815260200160405180910390f35b34156101f657600080fd5b6101b2600160a060020a03600435811690602435166044356106be565b604051901515815260200160405180910390f35b341561023257600080fd5b61023a61082f565b60405160ff909116815260200160405180910390f35b341561025b57600080fd5b610103610834565b005b341561027057600080fd5b61011861089c565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101555780820151818401525b60200161013c565b50505050905090810190601f1680156101825780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102fb57600080fd5b6101d9600160a060020a036004351661093a565b60405190815260200160405180910390f35b341561032c57600080fd5b610103610959565b005b341561034157600080fd5b610349610a01565b604051600160a060020a03909116815260200160405180910390f35b341561037057600080fd5b610118610a10565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101555780820151818401525b60200161013c565b50505050905090810190601f1680156101825780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103fb57600080fd5b6101b2600160a060020a0360043516602435610a47565b604051901515815260200160405180910390f35b341561043157600080fd5b6101b260048035600160a060020a03169060248035919060649060443590810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610b0f95505050505050565b604051901515815260200160405180910390f35b34156104aa57600080fd5b610349610c2e565b604051600160a060020a03909116815260200160405180910390f35b34156104d957600080fd5b6101d9600160a060020a0360043581169060243516610c3d565b60405190815260200160405180910390f35b341561051057600080fd5b610103600160a060020a0360043516610c7c565b005b341561053157600080fd5b6101b2610e27565b604051901515815260200160405180910390f35b341561055857600080fd5b610103600160a060020a0360043516610e30565b005b60015433600160a060020a0390811691161461058657fe5b60065460ff1615156105d6576006805460ff19166001179055600160a060020a0333167faf85b60d26151edd11443b704d424da6c43d0468f2235ebae3d1904dbc32304960405160405180910390a25b5b5b565b60408051908101604052601281527f486976652050726f6a65637420546f6b656e0000000000000000000000000000602082015281565b60008115806106435750600160a060020a03338116600090815260046020908152604080832093871683529290522054155b151561064e57600080fd5b600160a060020a03338116600081815260046020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60005481565b60065460009060ff16156106d157600080fd5b6003366064146106dd57fe5b600160a060020a03841615156106f257600080fd5b600160a060020a0385166000908152600360205260409020548390108015906107425750600160a060020a0380861660009081526004602090815260408083203390941683529290522054839010155b151561074d57600080fd5b600160a060020a0385166000908152600360205260409020546107709084610e90565b600160a060020a0380871660008181526003602090815260408083209590955588841682528482208054890190559181526004825283812033909316815291905220546107bd9084610e90565b600160a060020a03808716600081815260046020908152604080832033861684529091529081902093909355908616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3600191505b5b505b9392505050565b600881565b60015433600160a060020a0390811691161461084c57fe5b60065460ff16156105d6576006805460ff19169055600160a060020a0333167fca5069937e68fd197927055037f59d7c90bf75ac104e6e375539ef480c3ad6ee60405160405180910390a25b5b5b565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b505050505081565b600160a060020a0381166000908152600360205260409020545b919050565b60025433600160a060020a0390811691161461097457600080fd5b6001546002547f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91600160a060020a039081169116604051600160a060020a039283168152911660208201526040908101905180910390a1600280546001805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038416179091551690555b565b600154600160a060020a031681565b60408051908101604052600381527f48564e0000000000000000000000000000000000000000000000000000000000602082015281565b60065460009060ff1615610a5a57600080fd5b600236604414610a6657fe5b600160a060020a0384161515610a7b57600080fd5b600160a060020a033316600090815260036020526040902054610a9e9084610e90565b600160a060020a03338116600081815260036020526040808220949094559187168083529183902080548701905590917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3600191505b5b505b92915050565b600083610b1c8185610611565b156108255780600160a060020a0316638f4ffcb1338630876040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610bba5780820151818401525b602001610ba1565b50505050905090810190601f168015610be75780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1515610c0857600080fd5b6102c65a03f11515610c1957600080fd5b50505060019150610825565b5b509392505050565b600254600160a060020a031681565b6000600236604414610c4b57fe5b600160a060020a0380851660009081526004602090815260408083209387168352929052205491505b5b5092915050565b600154600090819033600160a060020a03908116911614610c9957fe5b600160a060020a0383161515610ce757600154600160a060020a039081169030163180156108fc0290604051600060405180830381858888f193505050501515610ce257600080fd5b610e21565b82915081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610d4157600080fd5b6102c65a03f11515610d5257600080fd5b5050506040518051600154909250600160a060020a03808516925063a9059cbb91168360006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610dc157600080fd5b6102c65a03f11515610dd257600080fd5b50505060405180515050600154600160a060020a039081169084167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405190815260200160405180910390a35b5b505050565b60065460ff1681565b60015433600160a060020a03908116911614610e4857fe5b600154600160a060020a0382811691161415610e6357600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b600082821115610e9c57fe5b508082035b929150505600a165627a7a72305820ac97e2e285afd3f7d22867aca33998a003ff8253011133fa8d5c0ab256b2f0e20029"
}