{
  "address": "0xc44948cbbaf37a4d7f1315c08972b4338080bf59",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CustomToken",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-24\n*/\n\npragma solidity ^0.4.19;\n\ncontract BaseToken {\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 public totalSupply;\n\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    function _transfer(address _from, address _to, uint _value) internal {\n        require(_to != 0x0);\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value > balanceOf[_to]);\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n        Transfer(_from, _to, _value);\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n}\n\ncontract AirdropToken is BaseToken {\n    uint256 public airAmount;\n    uint256 public airBegintime;\n    uint256 public airEndtime;\n    address public airSender;\n    uint32 public airLimitCount;\n\n    mapping (address => uint32) public airCountOf;\n\n    event Airdrop(address indexed from, uint32 indexed count, uint256 tokenValue);\n\n    function airdrop() public payable {\n        require(now >= airBegintime && now <= airEndtime);\n        require(msg.value == 0);\n        if (airLimitCount > 0 && airCountOf[msg.sender] >= airLimitCount) {\n            revert();\n        }\n        _transfer(airSender, msg.sender, airAmount);\n        airCountOf[msg.sender] += 1;\n        Airdrop(msg.sender, airCountOf[msg.sender], airAmount);\n    }\n}\n\ncontract ICOToken is BaseToken {\n    // 1 ether = icoRatio token\n    uint256 public icoRatio;\n    uint256 public icoBegintime;\n    uint256 public icoEndtime;\n    address public icoSender;\n    address public icoHolder;\n\n    event ICO(address indexed from, uint256 indexed value, uint256 tokenValue);\n    event Withdraw(address indexed from, address indexed holder, uint256 value);\n\n    function ico() public payable {\n        require(now >= icoBegintime && now <= icoEndtime);\n        uint256 tokenValue = (msg.value * icoRatio * 10 ** uint256(decimals)) / (1 ether / 1 wei);\n        if (tokenValue == 0 || balanceOf[icoSender] < tokenValue) {\n            revert();\n        }\n        _transfer(icoSender, msg.sender, tokenValue);\n        ICO(msg.sender, msg.value, tokenValue);\n    }\n\n    function withdraw() public {\n        uint256 balance = this.balance;\n        icoHolder.transfer(balance);\n        Withdraw(msg.sender, icoHolder, balance);\n    }\n}\n\ncontract CustomToken is BaseToken, AirdropToken, ICOToken {\n    function CustomToken() public {\n        totalSupply = 200000000000000000000000000;\n        name = 'turepay';\n        symbol = 'TUP';\n        decimals = 18;\n        balanceOf[0x68c24aed8f1a88cba1d595fd87468d8dff92dc35] = totalSupply;\n        Transfer(address(0), 0x68c24aed8f1a88cba1d595fd87468d8dff92dc35, totalSupply);\n\n        airAmount = 500000000000000000000;\n        airBegintime = 1527120000;\n        airEndtime = 1546272000;\n        airSender = 0x3501e9051a5fce11a4b017bea0bedaf2dffcdf87;\n        airLimitCount = 1;\n\n        icoRatio = 80000;\n        icoBegintime = 1527120000;\n        icoEndtime = 1546300800;\n        icoSender = 0xe434a4572ebd964fdf038444637ed544b230754c;\n        icoHolder = 0x608f45debb7cbf9f8795fe3987014a285e4fada2;\n    }\n\n    function() public payable {\n        if (msg.value == 0) {\n            airdrop();\n        } else {\n            ico();\n        }\n    }\n}",
  "bytecode": "6060604052341561000f57600080fd5b6aa56fa5b99019a5c800000060035560408051908101604052600781527f7475726570617900000000000000000000000000000000000000000000000000602082015260009080516100659291602001906101f9565b5060408051908101604052600381527f5455500000000000000000000000000000000000000000000000000000000000602082015260019080516100ad9291602001906101f9565b506002805460ff191660121790556003547368c24aed8f1a88cba1d595fd87468d8dff92dc35600081815260046020527fa0b9419dd584ae16708790c984ae295b3c67bb9083ed05902f74458a3e81a2f183905590917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060405190815260200160405180910390a3681b1ae4d6e2ef500000600655635b0600806007819055635c2a3d006008556009805460a060020a63ffffffff0219600160a060020a0319918216733501e9051a5fce11a4b017bea0bedaf2dffcdf871716740100000000000000000000000000000000000000001790915562013880600b55600c91909155635c2aad80600d55600e8054821673e434a4572ebd964fdf038444637ed544b230754c179055600f805490911673608f45debb7cbf9f8795fe3987014a285e4fada2179055610294565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061023a57805160ff1916838001178555610267565b82800160010185558215610267579182015b8281111561026757825182559160200191906001019061024c565b50610273929150610277565b5090565b61029191905b80821115610273576000815560010161027d565b90565b610a8a806102a36000396000f3006060604052600436106101325763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461015057806307cc6051146101da578063095ea7b3146101ff57806318160ddd1461023557806323b872dd14610248578063313ce567146102705780633884d635146102995780633ccfd60b146102a15780635d4522011461014657806370a08231146102b45780637d720296146102d357806395d89b4114610302578063a2ebb20b14610315578063a3fe1ade14610328578063a9059cbb14610360578063b0f85a1014610382578063b3b8c62014610395578063d211fe86146103a8578063dd62ed3e146103bb578063de28fc1d146103e0578063e6136d84146103f3578063e67ad25414610406578063e779a8cf14610419575b3415156101465761014161042c565b61014e565b61014e610559565b005b341561015b57600080fd5b610163610621565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561019f578082015183820152602001610187565b50505050905090810190601f1680156101cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101e557600080fd5b6101ed6106bf565b60405190815260200160405180910390f35b341561020a57600080fd5b610221600160a060020a03600435166024356106c5565b604051901515815260200160405180910390f35b341561024057600080fd5b6101ed610731565b341561025357600080fd5b610221600160a060020a0360043581169060243516604435610737565b341561027b57600080fd5b6102836107ae565b60405160ff909116815260200160405180910390f35b61014e61042c565b34156102ac57600080fd5b61014e6107b7565b34156102bf57600080fd5b6101ed600160a060020a0360043516610836565b34156102de57600080fd5b6102e6610848565b604051600160a060020a03909116815260200160405180910390f35b341561030d57600080fd5b610163610857565b341561032057600080fd5b6102e66108c2565b341561033357600080fd5b610347600160a060020a03600435166108d1565b60405163ffffffff909116815260200160405180910390f35b341561036b57600080fd5b610221600160a060020a03600435166024356108e9565b341561038d57600080fd5b6101ed6108ff565b34156103a057600080fd5b6101ed610905565b34156103b357600080fd5b6101ed61090b565b34156103c657600080fd5b6101ed600160a060020a0360043581169060243516610911565b34156103eb57600080fd5b6102e661092e565b34156103fe57600080fd5b6101ed61093d565b341561041157600080fd5b6101ed610943565b341561042457600080fd5b610347610949565b600754421015801561044057506008544211155b151561044b57600080fd5b341561045657600080fd5b60095460007401000000000000000000000000000000000000000090910463ffffffff161180156104c35750600954600160a060020a0333166000908152600a602052604090205463ffffffff740100000000000000000000000000000000000000009092048216911610155b156104cd57600080fd5b6009546006546104e891600160a060020a031690339061096d565b33600160a060020a03166000818152600a602052604090819020805463ffffffff198116600163ffffffff9283160182161791829055600654911692917fcce6ff7d594e7067a58df51c8588740b7c8b42537da7262add9823085de82e4891905190815260200160405180910390a3565b6000600c54421015801561056f5750600d544211155b151561057a57600080fd5b600254600b54670de0b6b3a76400009160ff16600a0a34909102020490508015806105bf5750600e54600160a060020a03166000908152600460205260409020548190105b156105c957600080fd5b600e546105e090600160a060020a0316338361096d565b3433600160a060020a03167f4a987bc3d04b32db133ad9a3c7c0d8ecc441eb56f45a62b92c38384c095e7ac08360405190815260200160405180910390a350565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106b75780601f1061068c576101008083540402835291602001916106b7565b820191906000526020600020905b81548152906001019060200180831161069a57829003601f168201915b505050505081565b60065481565b600160a060020a03338116600081815260056020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60035481565b600160a060020a0380841660009081526005602090815260408083203390941683529290529081205482111561076c57600080fd5b600160a060020a03808516600090815260056020908152604080832033909416835292905220805483900390556107a484848461096d565b5060019392505050565b60025460ff1681565b600f54600160a060020a0330811631911681156108fc0282604051600060405180830381858888f1935050505015156107ef57600080fd5b600f54600160a060020a039081169033167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb8360405190815260200160405180910390a350565b60046020526000908152604090205481565b600954600160a060020a031681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106b75780601f1061068c576101008083540402835291602001916106b7565b600f54600160a060020a031681565b600a6020526000908152604090205463ffffffff1681565b60006108f633848461096d565b50600192915050565b60085481565b600b5481565b600d5481565b600560209081526000928352604080842090915290825290205481565b600e54600160a060020a031681565b600c5481565b60075481565b60095474010000000000000000000000000000000000000000900463ffffffff1681565b6000600160a060020a038316151561098457600080fd5b600160a060020a038416600090815260046020526040902054829010156109aa57600080fd5b600160a060020a038316600090815260046020526040902054828101116109d057600080fd5b50600160a060020a038281166000908152600460205260408082208054938716835291208054848103825582548501928390559054920191018114610a1157fe5b82600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a3505050505600a165627a7a72305820aa02ffc349eb452d3e57aad3fa2640b28ad4a010ad74baba19cab078cb92e7100029"
}