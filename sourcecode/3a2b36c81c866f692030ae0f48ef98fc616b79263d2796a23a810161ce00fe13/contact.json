{
  "address": "0x056e963f69e5fe8b28591cdc469ad671d245dc0d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Evento",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-13\n*/\n\npragma solidity ^0.5.7;\n\ncontract Evento {\n    \n    mapping(address => uint256) private _partecipanti;\n    uint8 private _numeroPartecipanti;\n    address payable private _organizzatore;\n    bool private _registrazioneAperta;\n    \n    uint constant public prezzo = 0.00001 ether;\n    \n    constructor() public {\n        _organizzatore = msg.sender;\n        _registrazioneAperta = false;\n    }\n    \n    modifier onlyOwner() {\n        require(msg.sender == _organizzatore, \"Non sei autorizzato\");\n        _ ;\n    }\n    \n    modifier costoBiglietto() {\n        require(msg.value >= prezzo, \"L'importo non è corretto\");\n        _ ;\n    }\n    \n    function controlRegistration(bool status) public onlyOwner {\n        _registrazioneAperta = status;\n    } \n    \n    function registrazione() public payable costoBiglietto {\n        require(_registrazioneAperta == true, \"La registrazione non è aperta\");\n        require(_partecipanti[msg.sender] == 0, \"Sei già registrato\");\n        _partecipanti[msg.sender] = now;\n        _numeroPartecipanti = _numeroPartecipanti + 1;\n        _organizzatore.transfer(msg.value);\n    }\n    \n    function numberOfAttendees() public view returns (uint8) {\n        return _numeroPartecipanti;\n    }\n\n    function checkin() public view returns(bool){\n        return _partecipanti[msg.sender] > 0;\n    }\n    \n}",
  "bytecode": "608060405234801561001057600080fd5b50336001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160156101000a81548160ff0219169083151502179055506105278061007b6000396000f3fe60806040526004361061004a5760003560e01c80634b19ce671461004f5780635717e5301461008c5780635bcc2d2d14610096578063baeb0718146100c1578063c31ceb2a146100f0575b600080fd5b34801561005b57600080fd5b5061008a6004803603602081101561007257600080fd5b81019080803515159060200190929190505050610121565b005b610094610200565b005b3480156100a257600080fd5b506100ab610492565b6040518082815260200191505060405180910390f35b3480156100cd57600080fd5b506100d661049c565b604051808215151515815260200191505060405180910390f35b3480156100fc57600080fd5b506101056104e4565b604051808260ff1660ff16815260200191505060405180910390f35b6001809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4e6f6e20736569206175746f72697a7a61746f0000000000000000000000000081525060200191505060405180910390fd5b80600160156101000a81548160ff02191690831515021790555050565b6509184e72a00034101561027c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4c27696d706f72746f206e6f6e20c3a820636f72726574746f0000000000000081525060200191505060405180910390fd5b60011515600160159054906101000a900460ff16151514610305576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4c612072656769737472617a696f6e65206e6f6e20c3a820617065727461000081525060200191505060405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146103b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f536569206769c3a0207265676973747261746f0000000000000000000000000081525060200191505060405180910390fd5b426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018060009054906101000a900460ff1601600160006101000a81548160ff021916908360ff1602179055506001809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561048f573d6000803e3d6000fd5b50565b6509184e72a00081565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411905090565b6000600160009054906101000a900460ff1690509056fea165627a7a723058208a7bd37cf52692ebb9671154ac9bd93358013ead43426b0132adff17b32bb8070029"
}