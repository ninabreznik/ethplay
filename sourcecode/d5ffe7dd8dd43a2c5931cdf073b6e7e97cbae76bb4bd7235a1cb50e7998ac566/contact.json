{
  "address": "0x388fd8a5145d6ef85aae14d494f93df9d1c7c00c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BTRL",
  "compilerVersion": "v0.4.22+commit.4cb486ee",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-07\n*/\n\npragma solidity ^0.4.11;\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal constant returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal constant returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n\ncontract Ownable {\n\n    address public owner;\n\n    function Ownable() {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address newOwner) onlyOwner {\n        require(newOwner != address(0));\n        owner = newOwner;\n    }\n}\n\ncontract ERC20Basic is Ownable {\n    uint256 public totalSupply;\n    function balanceOf(address who) public constant returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n}\n\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) constant returns (uint256);\n    function transferFrom(address from, address to, uint256 value) returns (bool);\n    function approve(address spender, uint256 value) returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\ncontract StandardToken is ERC20, BasicToken {\n\n    mapping (address => mapping (address => uint256)) allowed;\n\n\n    event Burn(address indexed burner, uint256 value);\n    \n    event Mint(address indexed to, uint256 amount);\n    event MintFinished();\n\n    bool public mintingFinished = false;\n\n    modifier canMint() {\n        require(!mintingFinished);\n        _;\n    }\n\n    function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\n        totalSupply = totalSupply.add(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        emit Mint(_to, _amount);\n        emit Transfer(address(0), _to, _amount);\n        return true;\n    }\n\n    function finishMinting() onlyOwner canMint public returns (bool) {\n        mintingFinished = true;\n        emit MintFinished();\n        return true;\n    }\n\n    function burn(uint256 _value) public {\n        require(_value <= balances[msg.sender]);\n\n        address burner = msg.sender;\n        balances[burner] = balances[burner].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        Burn(burner, _value);\n        Transfer(burner, address(0), _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n    \n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n}\n\ncontract BTRL is StandardToken {\n    string public constant name = \"Bitcoin Regular\";\n    string public constant symbol = \"BTRL\";\n    uint256 public constant decimals = 8;\n    uint256 public constant INITIAL_SUPPLY = 21000000 * 10**8;\n    function BTRL() \n\t{\n        totalSupply = INITIAL_SUPPLY;\n        balances[msg.sender] = INITIAL_SUPPLY;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040526004805460ff1916905534801561001a57600080fd5b5060008054600160a060020a033316600160a060020a031990911681178255660775f05a07400060018190559082526002602052604090912055610a1f806100636000396000f3006080604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b81146100ea57806306fdde0314610113578063095ea7b31461019d57806318160ddd146101c157806323b872dd146101e85780632ff2e9dc14610212578063313ce5671461022757806340c10f191461023c57806342966c681461026057806370a082311461027a5780637d64bcb41461029b5780638da5cb5b146102b057806395d89b41146102e1578063a9059cbb146102f6578063dd62ed3e1461031a578063f2fde38b14610341575b600080fd5b3480156100f657600080fd5b506100ff610362565b604080519115158252519081900360200190f35b34801561011f57600080fd5b5061012861036b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016257818101518382015260200161014a565b50505050905090810190601f16801561018f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a957600080fd5b506100ff600160a060020a03600435166024356103a2565b3480156101cd57600080fd5b506101d6610445565b60408051918252519081900360200190f35b3480156101f457600080fd5b506100ff600160a060020a036004358116906024351660443561044b565b34801561021e57600080fd5b506101d66105bb565b34801561023357600080fd5b506101d66105c6565b34801561024857600080fd5b506100ff600160a060020a03600435166024356105cb565b34801561026c57600080fd5b506102786004356106c0565b005b34801561028657600080fd5b506101d6600160a060020a03600435166107ab565b3480156102a757600080fd5b506100ff6107c6565b3480156102bc57600080fd5b506102c561082e565b60408051600160a060020a039092168252519081900360200190f35b3480156102ed57600080fd5b5061012861083d565b34801561030257600080fd5b506100ff600160a060020a0360043516602435610874565b34801561032657600080fd5b506101d6600160a060020a0360043581169060243516610921565b34801561034d57600080fd5b50610278600160a060020a036004351661094c565b60045460ff1681565b60408051808201909152600f81527f426974636f696e20526567756c61720000000000000000000000000000000000602082015281565b60008115806103d45750600160a060020a03338116600090815260036020908152604080832093871683529290522054155b15156103df57600080fd5b600160a060020a03338116600081815260036020908152604080832094881680845294825291829020869055815186815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b60015481565b6000600160a060020a038316151561046257600080fd5b600160a060020a03841660009081526002602052604090205482111561048757600080fd5b600160a060020a03808516600090815260036020908152604080832033909416835292905220548211156104ba57600080fd5b600160a060020a0384166000908152600260205260409020546104e3908363ffffffff6109ab16565b600160a060020a038086166000908152600260205260408082209390935590851681522054610518908363ffffffff6109bd16565b600160a060020a03808516600090815260026020908152604080832094909455878316825260038152838220339093168252919091522054610560908363ffffffff6109ab16565b600160a060020a038086166000818152600360209081526040808320338616845282529182902094909455805186815290519287169391926000805160206109d4833981519152929181900390910190a35060019392505050565b660775f05a07400081565b600881565b6000805433600160a060020a039081169116146105e757600080fd5b60045460ff16156105f757600080fd5b60015461060a908363ffffffff6109bd16565b600155600160a060020a038316600090815260026020526040902054610636908363ffffffff6109bd16565b600160a060020a038416600081815260026020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000916000805160206109d48339815191529181900360200190a350600192915050565b600160a060020a0333166000908152600260205260408120548211156106e557600080fd5b5033600160a060020a03811660009081526002602052604090205461070a90836109ab565b600160a060020a038216600090815260026020526040902055600154610736908363ffffffff6109ab16565b600155604080518381529051600160a060020a038316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518381529051600091600160a060020a038416916000805160206109d48339815191529181900360200190a35050565b600160a060020a031660009081526002602052604090205490565b6000805433600160a060020a039081169116146107e257600080fd5b60045460ff16156107f257600080fd5b6004805460ff191660011790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600054600160a060020a031681565b60408051808201909152600481527f4254524c00000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a03331660009081526002602052604081205461089d908363ffffffff6109ab16565b600160a060020a0333811660009081526002602052604080822093909355908516815220546108d2908363ffffffff6109bd16565b600160a060020a038085166000818152600260209081526040918290209490945580518681529051919333909316926000805160206109d483398151915292918290030190a350600192915050565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b60005433600160a060020a0390811691161461096757600080fd5b600160a060020a038116151561097c57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000828211156109b757fe5b50900390565b6000828201838110156109cc57fe5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820176e2836e287bfb0a583cbbef7a23785f95181bd3264b94b1e63df5c82c787d30029"
}