{
  "address": "0x282cb0a611280ff5887ca122911a0ca6b841cb03",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "UWTCToken",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-20\n*/\n\npragma solidity ^0.4.23;\n\n\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n\ncontract BasicToken  {\n    using SafeMath for uint256;\n\n    string public name;\n    string public symbol;\n    uint8 public decimals = 18;\n\n    uint256 _totalSupply;\n    mapping(address => uint256) _balances;\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address addr) public view returns (uint256 balance) {\n        return _balances[addr];\n    }\n\n    function transfer(address to, uint256 value) public returns (bool) {\n        require(to != address(0));\n        require(value <= _balances[msg.sender]);\n\n        _balances[msg.sender] = _balances[msg.sender].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n}\n\n\ncontract StandardToken is BasicToken {\n    mapping (address => mapping (address => uint256)) _allowances;\n    event Approval(address indexed owner, address indexed agent, uint256 value);\n\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n        require(to != address(0));\n        require(value <= _balances[from]);\n        require(value <= _allowances[from][msg.sender]);\n\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        _allowances[from][msg.sender] = _allowances[from][msg.sender].sub(value);\n        emit Transfer(from, to, value);\n        return true;\n    }\n\n    function approve(address agent, uint256 value) public returns (bool) {\n        _allowances[msg.sender][agent] = value;\n        emit Approval(msg.sender, agent, value);\n        return true;\n    }\n\n    function allowance(address owner, address agent) public view returns (uint256) {\n        return _allowances[owner][agent];\n    }\n\n    function increaseApproval(address agent, uint value) public returns (bool) {\n        _allowances[msg.sender][agent] = _allowances[msg.sender][agent].add(value);\n        emit Approval(msg.sender, agent, _allowances[msg.sender][agent]);\n        return true;\n    }\n\n    function decreaseApproval(address agent, uint value) public returns (bool) {\n        uint allowanceValue = _allowances[msg.sender][agent];\n        if (value > allowanceValue) {\n            _allowances[msg.sender][agent] = 0;\n        } else {\n            _allowances[msg.sender][agent] = allowanceValue.sub(value);\n        }\n        emit Approval(msg.sender, agent, _allowances[msg.sender][agent]);\n        return true;\n    }\n}\n\n\ncontract UWTCToken is StandardToken {\n    string public name = \"UP WALLET COIN\";\n    string public symbol = \"UWTC\";\n    uint8 public decimals = 6;\n\n    constructor(\n        address _tokenReceiver\n    )\n    public\n    {\n        // 10 billion\n        _totalSupply = 10 * (10 ** 9) * (10 ** uint256(decimals));\n        _balances[_tokenReceiver] = _totalSupply;\n        emit Transfer(0x0, _tokenReceiver, _totalSupply);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agent\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agent\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agent\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenReceiver\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "6002805460ff1916601217905560c0604052600e60808190527f55502057414c4c455420434f494e00000000000000000000000000000000000060a090815261004b916006919061012c565b506040805180820190915260048082527f555754430000000000000000000000000000000000000000000000000000000060209092019182526100909160079161012c565b506008805460ff191660061790553480156100aa57600080fd5b50604051602080610aa4833981016040818152915160085460ff16600a0a6402540be400026003819055600160a060020a03821660008181526004602090815286822084905592855294519294909390927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506101c7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061016d57805160ff191683800117855561019a565b8280016001018555821561019a579182015b8281111561019a57825182559160200191906001019061017f565b506101a69291506101aa565b5090565b6101c491905b808211156101a657600081556001016101b0565b90565b6108ce806101d66000396000f3006080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b3578063095ea7b31461013d57806318160ddd1461017557806323b872dd1461019c578063313ce567146101c657806366188463146101f157806370a082311461021557806395d89b4114610236578063a9059cbb1461024b578063d73dd6231461026f578063dd62ed3e14610293575b600080fd5b3480156100bf57600080fd5b506100c86102ba565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101025781810151838201526020016100ea565b50505050905090810190601f16801561012f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014957600080fd5b50610161600160a060020a0360043516602435610348565b604080519115158252519081900360200190f35b34801561018157600080fd5b5061018a6103b2565b60408051918252519081900360200190f35b3480156101a857600080fd5b50610161600160a060020a03600435811690602435166044356103b8565b3480156101d257600080fd5b506101db61053a565b6040805160ff9092168252519081900360200190f35b3480156101fd57600080fd5b50610161600160a060020a0360043516602435610543565b34801561022157600080fd5b5061018a600160a060020a036004351661063c565b34801561024257600080fd5b506100c8610657565b34801561025757600080fd5b50610161600160a060020a03600435166024356106b2565b34801561027b57600080fd5b50610161600160a060020a03600435166024356107ad565b34801561029f57600080fd5b5061018a600160a060020a036004358116906024351661084f565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103405780601f1061031557610100808354040283529160200191610340565b820191906000526020600020905b81548152906001019060200180831161032357829003601f168201915b505050505081565b600160a060020a03338116600081815260056020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b6000600160a060020a03831615156103cf57600080fd5b600160a060020a0384166000908152600460205260409020548211156103f457600080fd5b600160a060020a038085166000908152600560209081526040808320339094168352929052205482111561042757600080fd5b600160a060020a038416600090815260046020526040902054610450908363ffffffff61087a16565b600160a060020a038086166000908152600460205260408082209390935590851681522054610485908363ffffffff61088c16565b600160a060020a038085166000908152600460209081526040808320949094558783168252600581528382203390931682529190915220546104cd908363ffffffff61087a16565b600160a060020a038086166000818152600560209081526040808320338616845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60085460ff1681565b600160a060020a033381166000908152600560209081526040808320938616835292905290812054808311156105a057600160a060020a0333811660009081526005602090815260408083209388168352929052908120556105d7565b6105b0818463ffffffff61087a16565b600160a060020a033381166000908152600560209081526040808320938916835292905220555b600160a060020a0333811660008181526005602090815260408083209489168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b600160a060020a031660009081526004602052604090205490565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103405780601f1061031557610100808354040283529160200191610340565b6000600160a060020a03831615156106c957600080fd5b600160a060020a0333166000908152600460205260409020548211156106ee57600080fd5b600160a060020a033316600090815260046020526040902054610717908363ffffffff61087a16565b600160a060020a03338116600090815260046020526040808220939093559085168152205461074c908363ffffffff61088c16565b600160a060020a038085166000818152600460209081526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600192915050565b600160a060020a0333811660009081526005602090815260408083209386168352929052908120546107e5908363ffffffff61088c16565b600160a060020a0333811660008181526005602090815260408083209489168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b60008282111561088657fe5b50900390565b60008282018381101561089b57fe5b93925050505600a165627a7a723058208b96115f633a094a7347d67b6dc411916c859b444bd757785dc27984a860f9f100290000000000000000000000008b8cc56b9bef930f7f3e31c6df44c1bd62e043ca",
  "constructorArguments": "0000000000000000000000008b8cc56b9bef930f7f3e31c6df44c1bd62e043ca"
}