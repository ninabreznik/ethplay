{
  "address": "0x346b31b2720faa1089e5a002ce5383bb7425511f",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Proxy",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-28\n*/\n\npragma solidity ^0.4.21;\n\ncontract Proxy{\n  address public owner;\n  address public target;\n  event ProxyTargetSet(address target);\n  event ProxyOwnerChanged(address _owner);\n\n  constructor () public{\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function setTarget(address _target) public onlyOwner {\n    target = _target;\n    emit ProxyTargetSet(_target);\n  }\n\n  function setOwner(address _owner) public onlyOwner {\n    owner = _owner;\n    emit ProxyOwnerChanged(_owner);\n  }\n\n  function () payable public {\n    address _impl = target;\n    require(_impl != address(0));\n\n    assembly {\n      let ptr := mload(0x40)\n      calldatacopy(ptr, 0, calldatasize)\n      let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\n      let size := returndatasize\n      returndatacopy(ptr, 0, size)\n\n      switch result\n      case 0 { revert(ptr, size) }\n      default { return(ptr, size) }\n    }\n  }\n}",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610262806100326000396000f3006080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166313af4035811461009e578063776d1a01146100c15780638da5cb5b146100e2578063d4b8399214610113575b600154600160a060020a031680151561007957600080fd5b60405136600082376000803683855af43d806000843e81801561009a578184f35b8184fd5b3480156100aa57600080fd5b506100bf600160a060020a0360043516610128565b005b3480156100cd57600080fd5b506100bf600160a060020a03600435166101a0565b3480156100ee57600080fd5b506100f7610218565b60408051600160a060020a039092168252519081900360200190f35b34801561011f57600080fd5b506100f7610227565b600054600160a060020a0316331461013f57600080fd5b60008054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517fe543d3a077035cec99b732bad2c4cf1c0fdee02ddf561ae543106ccc31cf35a39181900360200190a150565b600054600160a060020a031633146101b757600080fd5b60018054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517ff1b1e874978309afba903baec19abf568b0337fcedc05dde58cfea25ec25b94d9181900360200190a150565b600054600160a060020a031681565b600154600160a060020a0316815600a165627a7a723058201668b5647a5ebaa024e5669b95b970f231ce912f11e6d98c7bcf1502e8800dc00029"
}