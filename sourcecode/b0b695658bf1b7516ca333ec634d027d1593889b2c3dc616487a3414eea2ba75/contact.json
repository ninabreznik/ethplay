{
  "address": "0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Lympo Token",
  "contractName": "LympoToken",
  "compilerVersion": "v0.5.4+commit.9549d8ff",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-25\n*/\n\npragma solidity 0.5.4;\n\n/**\n * @title SafeMath\n * @dev Unsigned math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n    /**\n     * @dev Multiplies two unsigned integers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Adds two unsigned integers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    /**\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n * Updated for required architecture.\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor (address owner) internal {\n        _owner = owner;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @return the address of the owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n\n    /**\n     * @return true if `msg.sender` is the owner of the contract.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ninterface IERC20 {\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address who) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n * Originally based on code by FirstBlood:\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n *\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\n * compliant implementations may not do it.\n */\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowed;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev Total number of tokens in existence\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Gets the balance of the specified address.\n     * @param owner The address to query the balance of.\n     * @return An uint256 representing the amount owned by the passed address.\n     */\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param owner address The address which owns the funds.\n     * @param spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\n\n    /**\n     * @dev Transfer token for a specified address\n     * @param to The address to transfer to.\n     * @param value The amount to be transferred.\n     */\n    function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev Transfer tokens from one address to another.\n     * Note that while this function emits an Approval event, this is not required as per the specification,\n     * and other compliant implementations may not emit the event.\n     * @param from address The address which you want to send tokens from\n     * @param to address The address which you want to transfer to\n     * @param value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n        _transfer(from, to, value);\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n        return true;\n    }\n\n    /**\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\n     * approve should be called when allowed_[_spender] == 0. To increment\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * Emits an Approval event.\n     * @param spender The address which will spend the funds.\n     * @param addedValue The amount of tokens to increase the allowance by.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\n     * approve should be called when allowed_[_spender] == 0. To decrement\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * Emits an Approval event.\n     * @param spender The address which will spend the funds.\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Transfer token for a specified addresses\n     * @param from The address to transfer from.\n     * @param to The address to transfer to.\n     * @param value The amount to be transferred.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Internal function that mints an amount of the token and assigns it to\n     * an account. This encapsulates the modification of balances such that the\n     * proper events are emitted.\n     * @param account The account that will receive the created tokens.\n     * @param value The amount that will be created.\n     */\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\n\n    /**\n     * @dev Approve an address to spend another addresses' tokens.\n     * @param owner The address that owns the tokens.\n     * @param spender The address that will spend the tokens.\n     * @param value The number of tokens that can be spent.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n}\n\n/**\n *  @title The Lympo Token contract complies with the ERC20 standard (see https://github.com/ethereum/EIPs/issues/20).\n *  @dev All tokens not being sold during the crowdsale but the reserved token\n *  for tournaments future financing are burned.\n *  @author Roman Holovay\n */\ncontract LympoToken is ERC20, Ownable {\n    using SafeMath for uint;\n    \n    string constant public name = \"Lympo tokens\";\n    string constant public symbol = \"LYM\";\n    uint8 constant public decimals = 18;\n    \n    uint constant public TOKENS_PRE_ICO = 265000000e18; // 26.5%\n    uint constant public TOKENS_ICO = 385000000e18; // 38.5%\n    uint constant public TEAM_RESERVE = 100000000e18; // 10%\n    uint constant public ECO_LOCK_13 = 73326000e18; // 1/3 of ecosystem reserve\n    uint constant public START_TIME = 1519815600; // Time after ICO, when tokens became transferable. Wednesday, 28 February 2018 11:00:00 GMT\n    uint constant public LOCK_RELEASE_DATE_1_YEAR = START_TIME + 365 days; // 2019\n    uint constant public LOCK_RELEASE_DATE_2_YEARS = START_TIME + 730 days; // 2020\n\n    address public ecosystemAddr;\n    address public advisersAddr;\n\n    bool public reserveClaimed;\n    bool public ecosystemPart1Claimed;\n    bool public ecosystemPart2Claimed;\n    \n    address public airdropAddress;\n    uint public airdropBalance;\n    \n    uint private _initialSupply = 1000000000e18; // Initial supply of 1 billion Lympo Tokens\n    \n    constructor(address _ownerAddr, address _advisersAddr, address _ecosystemAddr, address _airdropAddr, uint _airdropBalance) public Ownable(_ownerAddr){\n        advisersAddr = _advisersAddr;\n        ecosystemAddr = _ecosystemAddr;\n        \n        _mint(owner(), _initialSupply); // Give the owner all initial tokens\n        \n        //lock tokens in token contract\n        _transfer(owner(), address(this), TEAM_RESERVE.add(ECO_LOCK_13).add(ECO_LOCK_13));\n        \n        //transfer tokens for airdrop\n        airdropAddress = _airdropAddr;\n        airdropBalance = _airdropBalance;\n        \n        if (airdropBalance != 0) {\n             _transfer(owner(), airdropAddress, airdropBalance);\n        }\n    }\n    \n    /**\n     * @dev claimTeamReserve allow owner to withdraw team reserve \n     * tokens from token contract.\n     */\n    function claimTeamReserve() public onlyOwner {\n        require (now > LOCK_RELEASE_DATE_2_YEARS && !reserveClaimed);\n        reserveClaimed = true;\n        _transfer(address(this), owner(), TEAM_RESERVE);\n    }\n    \n    /**\n     * @dev claimEcoSystemReservePart1 allow ecosystemAddr \n     * to withdraw locked for 1 year tokens from token contract\n     */\n    function claimEcoSystemReservePart1() public {\n        require (msg.sender == ecosystemAddr && !ecosystemPart1Claimed);\n        require (now > LOCK_RELEASE_DATE_1_YEAR);\n        ecosystemPart1Claimed = true;\n        _transfer(address(this), ecosystemAddr, ECO_LOCK_13);\n    }\n    \n    /**\n     * @dev claimEcoSystemReservePart2 allow ecosystemAddr \n     * to withdraw locked for 2 year tokens from token contract.\n     */\n    function claimEcoSystemReservePart2() public {\n        require (msg.sender == ecosystemAddr && !ecosystemPart2Claimed);\n        require (now > LOCK_RELEASE_DATE_2_YEARS);\n        ecosystemPart2Claimed = true;\n        _transfer(address(this), ecosystemAddr, ECO_LOCK_13);\n    }\n    \n    /**\n     * @dev recoverToken allow owner withdraw tokens\n     * that collected in this contract.\n     * @param _token means token address\n     */\n    function recoverToken(address _token) public onlyOwner {\n        require (now > LOCK_RELEASE_DATE_2_YEARS + 30 days);\n        IERC20 token = IERC20(_token);\n        uint256 balance = token.balanceOf(address(this));\n        token.transfer(msg.sender, balance);\n    }\n    \n    /**\n     * @dev airdrop an address to send tokens to required addresses.\n     * @param addresses The addresses that will receive tokens.\n     * @param values The number of tokens that can be received.\n     */\n    function airdrop(address[] memory addresses, uint[] memory values) public {\n        require(msg.sender == airdropAddress);\n        \n        for (uint i = 0; i < addresses.length; i ++){\n            _transfer(msg.sender, addresses[i], values[i]);\n        }\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"ecosystemPart2Claimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKENS_ICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimTeamReserve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimEcoSystemReservePart1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LOCK_RELEASE_DATE_1_YEAR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdropAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecosystemPart1Claimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecosystemAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisersAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"recoverToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LOCK_RELEASE_DATE_2_YEARS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKENS_PRE_ICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimEcoSystemReservePart2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"START_TIME\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM_RESERVE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdropBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ECO_LOCK_13\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ownerAddr\",\"type\":\"address\"},{\"name\":\"_advisersAddr\",\"type\":\"address\"},{\"name\":\"_ecosystemAddr\",\"type\":\"address\"},{\"name\":\"_airdropAddr\",\"type\":\"address\"},{\"name\":\"_airdropBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040526b033b2e3c9fd0803ce80000006008553480156200002157600080fd5b5060405160a0806200121e833981018060405260a08110156200004357600080fd5b5080516020820151604080840151606085015160809095015160038054600160a060020a031916600160a060020a0380881691909117918290559351959694959294939192879291909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060058054600160a060020a03808716600160a060020a031992831617909255600480549286169290911691909117905562000111620000ff640100000000620001ec810204565b600854640100000000620001fb810204565b6200018262000128640100000000620001ec810204565b30620001736a3ca7626ccbb9bc68c000006200015e6a52b7d2dcc80cd2e40000008264010000000062000dff620002a982021704565b9064010000000062000dff620002a982021704565b640100000000620002c3810204565b60068054600160a060020a031916600160a060020a03841617905560078190558015620001e157620001e1620001c0640100000000620001ec810204565b600654600754600160a060020a0390911690640100000000620002c3810204565b5050505050620003aa565b600354600160a060020a031690565b600160a060020a03821615156200021157600080fd5b6002546200022e908264010000000062000dff620002a982021704565b600255600160a060020a03821660009081526020819052604090205462000264908264010000000062000dff620002a982021704565b600160a060020a038316600081815260208181526040808320949094558351858152935192939192600080516020620011fe8339815191529281900390910190a35050565b600082820183811015620002bc57600080fd5b9392505050565b600160a060020a0382161515620002d957600080fd5b600160a060020a0383166000908152602081905260409020546200030c908264010000000062000dea6200039482021704565b600160a060020a0380851660009081526020819052604080822093909355908416815220546200034b908264010000000062000dff620002a982021704565b600160a060020a03808416600081815260208181526040918290209490945580518581529051919392871692600080516020620011fe83398151915292918290030190a3505050565b600082821115620003a457600080fd5b50900390565b610e4480620003ba6000396000f3fe608060405234801561001057600080fd5b506004361061020d576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b1161012c578063bd3eca6c116100bf578063ddaa26ad1161008e578063ddaa26ad14610600578063e5408eae14610608578063ee9267d114610610578063ef2697e8146106185761020d565b8063bd3eca6c146105ba578063c9507c9c146105c2578063d80233e5146105ca578063dd62ed3e146105d25761020d565b80639ba3c2e0116100fb5780639ba3c2e0146105345780639be65a601461053c578063a457c2d714610562578063a9059cbb1461058e5761020d565b80638f32d59b14610514578063916416141461051c57806393ed013d1461052457806395d89b411461052c5761020d565b80634fb0a3cd116101a457806370a082311161017357806370a08231146104ba5780637f89dd0f146104e057806384413b65146104e85780638da5cb5b1461050c5761020d565b80634fb0a3cd146103795780635d3512a9146103835780636521f28b1461038b57806367243482146103935761020d565b806323b872dd116101e057806323b872dd146102f1578063247a12a314610327578063313ce5671461032f578063395093511461034d5761020d565b806303436ed01461021257806306fdde031461022e578063095ea7b3146102ab57806318160ddd146102d7575b600080fd5b61021a610620565b604080519115158252519081900360200190f35b610236610643565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610270578181015183820152602001610258565b50505050905090810190601f16801561029d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61021a600480360360408110156102c157600080fd5b50600160a060020a03813516906020013561067a565b6102df610690565b60408051918252519081900360200190f35b61021a6004803603606081101561030757600080fd5b50600160a060020a03813581169160208101359091169060400135610696565b6102df6106ed565b6103376106fd565b6040805160ff9092168252519081900360200190f35b61021a6004803603604081101561036357600080fd5b50600160a060020a038135169060200135610702565b61038161073e565b005b61021a6107de565b6103816107ff565b610381600480360360408110156103a957600080fd5b8101906020810181356401000000008111156103c457600080fd5b8201836020820111156103d657600080fd5b803590602001918460208302840111640100000000831117156103f857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561044857600080fd5b82018360208201111561045a57600080fd5b8035906020019184602083028401116401000000008311171561047c57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506108aa945050505050565b6102df600480360360208110156104d057600080fd5b5035600160a060020a0316610913565b6102df61092e565b6104f0610936565b60408051600160a060020a039092168252519081900360200190f35b6104f0610945565b61021a610954565b61021a610965565b6104f0610987565b610236610996565b6104f06109cd565b6103816004803603602081101561055257600080fd5b5035600160a060020a03166109dc565b61021a6004803603604081101561057857600080fd5b50600160a060020a038135169060200135610b2c565b61021a600480360360408110156105a457600080fd5b50600160a060020a038135169060200135610b68565b6102df610b75565b6102df610b7d565b610381610b8c565b6102df600480360360408110156105e857600080fd5b50600160a060020a0381358116916020013516610c3a565b6102df610c65565b6102df610c6d565b6102df610c7c565b6102df610c82565b600554760100000000000000000000000000000000000000000000900460ff1681565b60408051808201909152600c81527f4c796d706f20746f6b656e730000000000000000000000000000000000000000602082015281565b6000610687338484610c91565b50600192915050565b60025490565b60006106a3848484610d1d565b600160a060020a0384166000908152600160209081526040808320338085529252909120546106e39186916106de908663ffffffff610dea16565b610c91565b5060019392505050565b6b013e76ebd202315f2100000081565b601281565b336000818152600160209081526040808320600160a060020a038716845290915281205490916106879185906106de908663ffffffff610dff16565b610746610954565b151561075157600080fd5b635e58f2b04211801561077f575060055474010000000000000000000000000000000000000000900460ff16155b151561078a57600080fd5b6005805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556107dc306107cb610945565b6a52b7d2dcc80cd2e4000000610d1d565b565b60055474010000000000000000000000000000000000000000900460ff1681565b600454600160a060020a03163314801561083557506005547501000000000000000000000000000000000000000000900460ff16155b151561084057600080fd5b635c77bf30421161085057600080fd5b6005805475ff000000000000000000000000000000000000000000191675010000000000000000000000000000000000000000001790556004546107dc903090600160a060020a03166a3ca7626ccbb9bc68c00000610d1d565b600654600160a060020a031633146108c157600080fd5b60005b825181101561090e576109063384838151811015156108df57fe5b9060200190602002015184848151811015156108f757fe5b90602001906020020151610d1d565b6001016108c4565b505050565b600160a060020a031660009081526020819052604090205490565b635c77bf3081565b600654600160a060020a031681565b600354600160a060020a031690565b600354600160a060020a0316331490565b6005547501000000000000000000000000000000000000000000900460ff1681565b600454600160a060020a031681565b60408051808201909152600381527f4c594d0000000000000000000000000000000000000000000000000000000000602082015281565b600554600160a060020a031681565b6109e4610954565b15156109ef57600080fd5b635e807fb042116109ff57600080fd5b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518291600091600160a060020a038416916370a08231916024808301926020929190829003018186803b158015610a6357600080fd5b505afa158015610a77573d6000803e3d6000fd5b505050506040513d6020811015610a8d57600080fd5b5051604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390529051919250600160a060020a0384169163a9059cbb916044808201926020929091908290030181600087803b158015610afb57600080fd5b505af1158015610b0f573d6000803e3d6000fd5b505050506040513d6020811015610b2557600080fd5b5050505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916106879185906106de908663ffffffff610dea16565b6000610687338484610d1d565b635e58f2b081565b6adb33eec91221fba900000081565b600454600160a060020a031633148015610bc35750600554760100000000000000000000000000000000000000000000900460ff16155b1515610bce57600080fd5b635e58f2b04211610bde57600080fd5b6005805476ff0000000000000000000000000000000000000000000019167601000000000000000000000000000000000000000000001790556004546107dc903090600160a060020a03166a3ca7626ccbb9bc68c00000610d1d565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b635a968bb081565b6a52b7d2dcc80cd2e400000081565b60075481565b6a3ca7626ccbb9bc68c0000081565b600160a060020a0382161515610ca657600080fd5b600160a060020a0383161515610cbb57600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a0382161515610d3257600080fd5b600160a060020a038316600090815260208190526040902054610d5b908263ffffffff610dea16565b600160a060020a038085166000908152602081905260408082209390935590841681522054610d90908263ffffffff610dff16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610df957600080fd5b50900390565b600082820183811015610e1157600080fd5b939250505056fea165627a7a7230582094448f54ecb241e71254b2a1ac17f4f905e3dad088f8804d3a02593eb587c1be0029ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef0000000000000000000000007272fc6c838d46621b27727adb79c2778ee68ba10000000000000000000000008eb4ebc152d4d47d49c7fff263012b549c93f46f00000000000000000000000065baa14823e0e881f2ca2983e6b052000263ad55000000000000000000000000f735b435766a92374737f5a958ba59995d8be96a0000000000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef0000000000000000000000007272fc6c838d46621b27727adb79c2778ee68ba10000000000000000000000008eb4ebc152d4d47d49c7fff263012b549c93f46f00000000000000000000000065baa14823e0e881f2ca2983e6b052000263ad55000000000000000000000000f735b435766a92374737f5a958ba59995d8be96a0000000000000000000000000000000000000000000000000000000000000000"
}