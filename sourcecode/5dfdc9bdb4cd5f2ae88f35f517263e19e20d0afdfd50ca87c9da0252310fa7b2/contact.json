{
  "address": "0xdc4578dc1c65f83e7081304d802d4a839d7773c7",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DirectAirDrop",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-05\n*/\n\npragma solidity 0.4.24;\n\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (_a == 0) {\n      return 0;\n    }\n\n    c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = _a / _b;\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n    return _a / _b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    c = _a + _b;\n    assert(c >= _a);\n    return c;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address _who) public view returns (uint256);\n  function transfer(address _to, uint256 _value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address _owner, address _spender)\n    public view returns (uint256);\n\n  function transferFrom(address _from, address _to, uint256 _value)\n    public returns (bool);\n\n  function approve(address _spender, uint256 _value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  function safeTransfer(\n    ERC20Basic _token,\n    address _to,\n    uint256 _value\n  )\n    internal\n  {\n    require(_token.transfer(_to, _value));\n  }\n\n  function safeTransferFrom(\n    ERC20 _token,\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    internal\n  {\n    require(_token.transferFrom(_from, _to, _value));\n  }\n\n  function safeApprove(\n    ERC20 _token,\n    address _spender,\n    uint256 _value\n  )\n    internal\n  {\n    require(_token.approve(_spender, _value));\n  }\n}\n\n// File: contracts\\vesting\\DirectAirDrop.sol\n\n/**\n * @title AirDrop\n * @notice Contract which allows batch tokens drop\n */\ncontract DirectAirDrop is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for ERC20;\n\n    event TokensReturn(uint256 amount);\n\n    ERC20 public token;\n\n    uint256 public totalDropped;\n    mapping(address => uint256) public dropped;\n\n    /**\n     * @notice Creates an airdrop contract\n     * @param _token token being airdropped\n     */\n    constructor(address _token) public {\n        require(_token != address(0));\n        token = ERC20(_token);\n    }\n\n    /**\n     * @notice Returns tokens to owner\n     */\n    function returnTokens() external onlyOwner {\n        uint256 remaining = token.balanceOf(address(this));\n        token.safeTransfer(owner, remaining);\n\n        emit TokensReturn(remaining);\n    }\n\n    /**\n     * @notice Returns tokens amount on contract balance\n     */\n    function tokensBalance() external view returns (uint256) {\n        return token.balanceOf(address(this));\n    }\n\n    /**\n     * @notice Drop tokens single to account\n     * @param _beneficiary Account which gets tokens\n     * @param _amount Amount of tokens\n     */\n    function drop(address _beneficiary, uint256 _amount) external onlyOwner {\n        totalDropped = totalDropped.add(_amount);\n        dropped[_beneficiary] = dropped[_beneficiary].add(_amount);\n        token.safeTransfer(_beneficiary, _amount);\n    }\n\n    /**\n     * @notice Drop tokens to list of accounts\n     * @param _addresses Accounts which will get tokens\n     * @param _amounts Promise amounts\n     */\n    function dropBatch(address[] _addresses, uint256[] _amounts) external onlyOwner {\n        require(_addresses.length == _amounts.length);\n\n        for (uint256 index = 0; index < _addresses.length; index++) {\n            address beneficiary = _addresses[index];\n            uint256 amount = _amounts[index];\n\n            totalDropped = totalDropped.add(amount);\n            dropped[beneficiary] = dropped[beneficiary].add(amount);\n            token.safeTransfer(beneficiary, amount);\n        }\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dropped\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"drop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"dropBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDropped\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"returnTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReturn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b506040516020806107b2833981016040525160008054600160a060020a03191633179055600160a060020a038116151561004957600080fd5b60018054600160a060020a031916600160a060020a039290921691909117905561073a806100786000396000f3006080604052600436106100a35763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a681146100a85780638837c796146100bf5780638d0f8cef146100f25780638da5cb5b146101165780639c27ba4914610147578063c8032a8414610173578063d144454b14610188578063f2fde38b1461019d578063f9718fc8146101be578063fc0c546a146101d3575b600080fd5b3480156100b457600080fd5b506100bd6101e8565b005b3480156100cb57600080fd5b506100e0600160a060020a0360043516610254565b60408051918252519081900360200190f35b3480156100fe57600080fd5b506100bd600160a060020a0360043516602435610266565b34801561012257600080fd5b5061012b6102f2565b60408051600160a060020a039092168252519081900360200190f35b34801561015357600080fd5b506100bd6024600480358281019290820135918135918201910135610301565b34801561017f57600080fd5b506100e06103f2565b34801561019457600080fd5b506100e0610488565b3480156101a957600080fd5b506100bd600160a060020a036004351661048e565b3480156101ca57600080fd5b506100bd6104b1565b3480156101df57600080fd5b5061012b6105b7565b600054600160a060020a031633146101ff57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60036020526000908152604090205481565b600054600160a060020a0316331461027d57600080fd5b600254610290908263ffffffff6105c616565b600255600160a060020a0382166000908152600360205260409020546102bc908263ffffffff6105c616565b600160a060020a038084166000908152600360205260409020919091556001546102ee9116838363ffffffff6105d916565b5050565b600054600160a060020a031681565b6000805481908190600160a060020a0316331461031d57600080fd5b85841461032957600080fd5b600092505b858310156103e95786868481811061034257fe5b90506020020135600160a060020a03169150848484818110151561036257fe5b905060200201359050610380816002546105c690919063ffffffff16565b600255600160a060020a0382166000908152600360205260409020546103ac908263ffffffff6105c616565b600160a060020a038084166000908152600360205260409020919091556001546103de9116838363ffffffff6105d916565b60019092019161032e565b50505050505050565b600154604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600092600160a060020a0316916370a0823191602480830192602092919082900301818787803b15801561045757600080fd5b505af115801561046b573d6000803e3d6000fd5b505050506040513d602081101561048157600080fd5b5051905090565b60025481565b600054600160a060020a031633146104a557600080fd5b6104ae81610691565b50565b60008054600160a060020a031633146104c957600080fd5b600154604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a03909216916370a08231916024808201926020929091908290030181600087803b15801561052f57600080fd5b505af1158015610543573d6000803e3d6000fd5b505050506040513d602081101561055957600080fd5b505160005460015491925061058191600160a060020a0390811691168363ffffffff6105d916565b6040805182815290517f7762b0fc55af35cf4e4c00f9224e75b0965d2ecb92cc8bf0607da3d74a0ed7fa9181900360200190a150565b600154600160a060020a031681565b818101828110156105d357fe5b92915050565b82600160a060020a031663a9059cbb83836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561065557600080fd5b505af1158015610669573d6000803e3d6000fd5b505050506040513d602081101561067f57600080fd5b5051151561068c57600080fd5b505050565b600160a060020a03811615156106a657600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058204c6b3bf2ab0c3f08f3e2a5b0006767c9340f82cf31223b3edf07f5934b1e74370029000000000000000000000000a249f0e9a464b9685f66992f41e1012388e39e81",
  "constructorArguments": "000000000000000000000000a249f0e9a464b9685f66992f41e1012388e39e81"
}