{
  "address": "0x4f7d5a7588771e7889b599dbcb67c63a28129732",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Gerc",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-09\n*/\n\npragma solidity ^0.4.24;\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev Total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/issues/20\n * Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    returns (bool)\n  {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(\n    address _spender,\n    uint256 _addedValue\n  )\n    public\n    returns (bool)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(\n    address _spender,\n    uint256 _subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    uint256 oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n}\n\n\n\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n}\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title SimpleToken\n * @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\n * Note they can later distribute these tokens as they wish using `transfer` and other\n * `StandardToken` functions.\n */\ncontract Gerc is StandardToken, Ownable {\n    using SafeMath for uint256;\n\n    string public constant name = \"Game Eternal Role Chain\";\n    string public constant symbol = \"GERC\";\n    uint8 public constant decimals = 3;\n    //总配额1000亿\n    uint256 constant INITIAL_SUPPLY = 100000000000 * (10 ** uint256(decimals));\n    //设置GERC代币官网短URL(32字节以内)，供管理平台自动查询\n    string public website = \"www.gerc.club\";\n    //设置GERC代币icon短URL(32字节以内)，供管理平台自动查询\n    string public icon = \"/css/gerc.png\";\n\n    /**\n     * @dev Constructor that gives msg.sender all of existing tokens.\n     */\n    constructor() public {\n        totalSupply_ = INITIAL_SUPPLY;\n        balances[msg.sender] = INITIAL_SUPPLY;\n        emit Transfer(0x0, msg.sender, INITIAL_SUPPLY);    \n    }\n\n    /**\n     * airdorp in batch\n     */\n    function airdrop(address[] payees, uint256 airdropValue) public onlyOwner returns(bool) {\n        uint256 _size = payees.length;       \n        uint256 amount = airdropValue.mul(_size);\n        require(amount <= balances[owner], \"balance error\"); \n\n        for (uint i = 0; i<_size; i++) {\n            if (payees[i] == address(0)) {\n                amount = amount.sub(airdropValue);\n                continue;   \n            }\n            balances[payees[i]] = balances[payees[i]].add(airdropValue);\n            emit Transfer(owner, payees[i], airdropValue);\n        }        \n        balances[owner] = balances[owner].sub(amount);\n        return true;\n    }\n\n    /**\n     * 设置token官网和icon信息\n     */\n    function setWebInfo(string _website, string _icon) public onlyOwner returns(bool){\n        website = _website;\n        icon = _icon;\n        return true;\n    }\n}",
  "bytecode": "60c0604052600d60808190527f7777772e676572632e636c75620000000000000000000000000000000000000060a090815261003e91600491906100fc565b5060408051808201909152600d8082527f2f6373732f676572632e706e67000000000000000000000000000000000000006020909201918252610083916005916100fc565b5034801561009057600080fd5b5060038054600160a060020a03191633908117909155655af3107a4000600181905560008281526020818152604080832084905580519384525191927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3610197565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013d57805160ff191683800117855561016a565b8280016001018555821561016a579182015b8281111561016a57825182559160200191906001019061014f565b5061017692915061017a565b5090565b61019491905b808211156101765760008155600101610180565b90565b610ea080620001a76000396000f3006080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101b757806323b872dd146101de578063313ce56714610208578063661884631461023357806370a08231146102575780638da5cb5b1461027857806395d89b41146102a9578063a9059cbb146102be578063beb0a416146102e2578063c204642c146102f7578063c557b9851461034e578063d73dd62314610363578063dd62ed3e14610387578063f2fde38b146103ae578063fae29ee8146103d1575b600080fd5b34801561010157600080fd5b5061010a610468565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014457818101518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018b57600080fd5b506101a3600160a060020a036004351660243561049f565b604080519115158252519081900360200190f35b3480156101c357600080fd5b506101cc610505565b60408051918252519081900360200190f35b3480156101ea57600080fd5b506101a3600160a060020a036004358116906024351660443561050c565b34801561021457600080fd5b5061021d610683565b6040805160ff9092168252519081900360200190f35b34801561023f57600080fd5b506101a3600160a060020a0360043516602435610688565b34801561026357600080fd5b506101cc600160a060020a036004351661077a565b34801561028457600080fd5b5061028d610795565b60408051600160a060020a039092168252519081900360200190f35b3480156102b557600080fd5b5061010a6107a4565b3480156102ca57600080fd5b506101a3600160a060020a03600435166024356107db565b3480156102ee57600080fd5b5061010a6108bc565b34801561030357600080fd5b50604080516020600480358082013583810280860185019096528085526101a395369593946024949385019291829185019084908082843750949750509335945061094a9350505050565b34801561035a57600080fd5b5061010a610b8a565b34801561036f57600080fd5b506101a3600160a060020a0360043516602435610be5565b34801561039357600080fd5b506101cc600160a060020a0360043581169060243516610c7e565b3480156103ba57600080fd5b506103cf600160a060020a0360043516610ca9565b005b3480156103dd57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101a394369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610d3e9650505050505050565b60408051808201909152601781527f47616d6520457465726e616c20526f6c6520436861696e000000000000000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6001545b90565b6000600160a060020a038316151561052357600080fd5b600160a060020a03841660009081526020819052604090205482111561054857600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561057857600080fd5b600160a060020a0384166000908152602081905260409020546105a1908363ffffffff610d8916565b600160a060020a0380861660009081526020819052604080822093909355908516815220546105d6908363ffffffff610d9b16565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610618908363ffffffff610d8916565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b600381565b336000908152600260209081526040808320600160a060020a0386168452909152812054808311156106dd57336000908152600260209081526040808320600160a060020a0388168452909152812055610712565b6106ed818463ffffffff610d8916565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3600191505b5092915050565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a031681565b60408051808201909152600481527f4745524300000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a03831615156107f257600080fd5b3360009081526020819052604090205482111561080e57600080fd5b3360009081526020819052604090205461082e908363ffffffff610d8916565b3360009081526020819052604080822092909255600160a060020a03851681522054610860908363ffffffff610d9b16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109425780601f1061091757610100808354040283529160200191610942565b820191906000526020600020905b81548152906001019060200180831161092557829003601f168201915b505050505081565b600354600090819081908190600160a060020a0316331461096a57600080fd5b8551925061097e858463ffffffff610db116565b600354600160a060020a0316600090815260208190526040902054909250821115610a0a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f62616c616e6365206572726f7200000000000000000000000000000000000000604482015290519081900360640190fd5b5060005b82811015610b38578551600090879083908110610a2757fe5b90602001906020020151600160a060020a03161415610a5757610a50828663ffffffff610d8916565b9150610b30565b610a9b856000808985815181101515610a6c57fe5b6020908102909101810151600160a060020a03168252810191909152604001600020549063ffffffff610d9b16565b6000808884815181101515610aac57fe5b6020908102909101810151600160a060020a03168252810191909152604001600020558551869082908110610add57fe5b602090810291909101810151600354604080518981529051600160a060020a039384169493909216927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35b600101610a0e565b600354600160a060020a0316600090815260208190526040902054610b63908363ffffffff610d8916565b600354600160a060020a031660009081526020819052604090205550600195945050505050565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109425780601f1061091757610100808354040283529160200191610942565b336000908152600260209081526040808320600160a060020a0386168452909152812054610c19908363ffffffff610d9b16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a03163314610cc057600080fd5b600160a060020a0381161515610cd557600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600354600090600160a060020a03163314610d5857600080fd5b8251610d6b906004906020860190610ddc565b508151610d7f906005906020850190610ddc565b5060019392505050565b600082821115610d9557fe5b50900390565b600082820183811015610daa57fe5b9392505050565b600080831515610dc45760009150610773565b50828202828482811515610dd457fe5b0414610daa57fe5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610e1d57805160ff1916838001178555610e4a565b82800160010185558215610e4a579182015b82811115610e4a578251825591602001919060010190610e2f565b50610e56929150610e5a565b5090565b61050991905b80821115610e565760008155600101610e605600a165627a7a72305820270fa1119476165b41d903415ecbd629b23636ba1b51400222466dce654533450029"
}