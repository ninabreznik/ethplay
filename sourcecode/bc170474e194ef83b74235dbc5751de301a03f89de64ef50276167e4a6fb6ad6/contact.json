{
  "address": "0xe638dc39b6adbee8526b5c22380b4b45daf46d8e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Gizer Gaming Token",
  "contractName": "GizerToken",
  "compilerVersion": "v0.4.20+commit.3155dd80",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-15\n*/\n\npragma solidity ^0.4.20;\n\n// ----------------------------------------------------------------------------\n//\n// GZR 'Gizer Gaming' token public sale contract\n//\n// For details, please visit: http://www.gizer.io\n//\n// ----------------------------------------------------------------------------\n\n\n// ----------------------------------------------------------------------------\n//\n// SafeMath\n//\n// ----------------------------------------------------------------------------\n\nlibrary SafeMath {\n\n  function add(uint a, uint b) internal pure returns (uint c) {\n    c = a + b;\n    require( c >= a );\n  }\n\n  function sub(uint a, uint b) internal pure returns (uint c) {\n    require( b <= a );\n    c = a - b;\n  }\n\n  function mul(uint a, uint b) internal pure returns (uint c) {\n    c = a * b;\n    require( a == 0 || c / a == b );\n  }\n\n}\n\n\n// ----------------------------------------------------------------------------\n//\n// Owned contract\n//\n// ----------------------------------------------------------------------------\n\ncontract Owned {\n\n  address public owner;\n  address public newOwner;\n\n  mapping(address => bool) public isAdmin;\n\n  // Events ---------------------------\n\n  event OwnershipTransferProposed(address indexed _from, address indexed _to);\n  event OwnershipTransferred(address indexed _from, address indexed _to);\n  event AdminChange(address indexed _admin, bool _status);\n\n  // Modifiers ------------------------\n\n  modifier onlyOwner { require( msg.sender == owner ); _; }\n  modifier onlyAdmin { require( isAdmin[msg.sender] ); _; }\n\n  // Functions ------------------------\n\n  function Owned() public {\n    owner = msg.sender;\n    isAdmin[owner] = true;\n  }\n\n  function transferOwnership(address _newOwner) public onlyOwner {\n    require( _newOwner != address(0x0) );\n    OwnershipTransferProposed(owner, _newOwner);\n    newOwner = _newOwner;\n  }\n\n  function acceptOwnership() public {\n    require(msg.sender == newOwner);\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n  \n  function addAdmin(address _a) public onlyOwner {\n    require( isAdmin[_a] == false );\n    isAdmin[_a] = true;\n    AdminChange(_a, true);\n  }\n\n  function removeAdmin(address _a) public onlyOwner {\n    require( isAdmin[_a] == true );\n    isAdmin[_a] = false;\n    AdminChange(_a, false);\n  }\n  \n}\n\n\n// ----------------------------------------------------------------------------\n//\n// ERC Token Standard #20 Interface\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n//\n// ----------------------------------------------------------------------------\n\ncontract ERC20Interface {\n\n  // Events ---------------------------\n\n  event Transfer(address indexed _from, address indexed _to, uint _value);\n  event Approval(address indexed _owner, address indexed _spender, uint _value);\n\n  // Functions ------------------------\n\n  function totalSupply() public view returns (uint);\n  function balanceOf(address _owner) public view returns (uint balance);\n  function transfer(address _to, uint _value) public returns (bool success);\n  function transferFrom(address _from, address _to, uint _value) public returns (bool success);\n  function approve(address _spender, uint _value) public returns (bool success);\n  function allowance(address _owner, address _spender) public view returns (uint remaining);\n\n}\n\n\n// ----------------------------------------------------------------------------\n//\n// ERC Token Standard #20\n//\n// ----------------------------------------------------------------------------\n\ncontract ERC20Token is ERC20Interface, Owned {\n  \n  using SafeMath for uint;\n\n  uint public tokensIssuedTotal = 0;\n  mapping(address => uint) balances;\n  mapping(address => mapping (address => uint)) allowed;\n\n  // Functions ------------------------\n\n  /* Total token supply */\n\n  function totalSupply() public view returns (uint) {\n    return tokensIssuedTotal;\n  }\n\n  /* Get the account balance for an address */\n\n  function balanceOf(address _owner) public view returns (uint balance) {\n    return balances[_owner];\n  }\n\n  /* Transfer the balance from owner's account to another account */\n\n  function transfer(address _to, uint _amount) public returns (bool success) {\n    // amount sent cannot exceed balance\n    require( balances[msg.sender] >= _amount );\n\n    // update balances\n    balances[msg.sender] = balances[msg.sender].sub(_amount);\n    balances[_to]        = balances[_to].add(_amount);\n\n    // log event\n    Transfer(msg.sender, _to, _amount);\n    return true;\n  }\n\n  /* Allow _spender to withdraw from your account up to _amount */\n\n  function approve(address _spender, uint _amount) public returns (bool success) {\n    // approval amount cannot exceed the balance\n    require( balances[msg.sender] >= _amount );\n      \n    // update allowed amount\n    allowed[msg.sender][_spender] = _amount;\n    \n    // log event\n    Approval(msg.sender, _spender, _amount);\n    return true;\n  }\n\n  /* Spender of tokens transfers tokens from the owner's balance */\n  /* Must be pre-approved by owner */\n\n  function transferFrom(address _from, address _to, uint _amount) public returns (bool success) {\n    // balance checks\n    require( balances[_from] >= _amount );\n    require( allowed[_from][msg.sender] >= _amount );\n\n    // update balances and allowed amount\n    balances[_from]            = balances[_from].sub(_amount);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n    balances[_to]              = balances[_to].add(_amount);\n\n    // log event\n    Transfer(_from, _to, _amount);\n    return true;\n  }\n\n  /* Returns the amount of tokens approved by the owner */\n  /* that can be transferred by spender */\n\n  function allowance(address _owner, address _spender) public view returns (uint remaining) {\n    return allowed[_owner][_spender];\n  }\n\n}\n\n\n// ----------------------------------------------------------------------------\n//\n// GZR public token sale\n//\n// ----------------------------------------------------------------------------\n\ncontract GizerToken is ERC20Token {\n\n  /* Utility variable */\n  \n  uint constant E6  = 10**6;\n\n  /* Basic token data */\n\n  string public constant name     = \"Gizer Gaming Token\";\n  string public constant symbol   = \"GZR\";\n  uint8  public constant decimals = 6;\n\n  /* Wallets */\n  \n  address public wallet;\n  address public redemptionWallet;\n  address public gizerItemsContract;\n\n  /* Crowdsale parameters (constants) */\n\n  uint public constant DATE_ICO_START = 1521122400; // 15-Mar-2018 14:00 UTC 10:00 EST\n\n  uint public constant TOKEN_SUPPLY_TOTAL = 10000000 * E6;\n  uint public constant TOKEN_SUPPLY_CROWD =  6112926 * E6;\n  uint public constant TOKEN_SUPPLY_OWNER =  3887074 * E6; // 2,000,000 tokens reserve\n                                                           // 1,887,074 presale tokens\n\n  uint public constant MIN_CONTRIBUTION = 1 ether / 100;  \n  \n  uint public constant TOKENS_PER_ETH = 1000;\n  \n  uint public constant DATE_TOKENS_UNLOCKED = 1539180000; // 10-OCT-2018 14:00 UTC 10:00 EST\n\n  /* Crowdsale parameters (can be modified by owner) */\n  \n  uint public date_ico_end = 1523368800; // 10-Apr-2018 14:00 UTC 10:00 EST\n\n  /* Crowdsale variables */\n\n  uint public tokensIssuedCrowd  = 0;\n  uint public tokensIssuedOwner  = 0;\n  uint public tokensIssuedLocked = 0;\n  \n  uint public etherReceived = 0; // does not include presale ethers\n\n  /* Keep track of + ethers contributed,\n                   + tokens received \n                   + tokens locked during Crowdsale */\n  \n  mapping(address => uint) public etherContributed;\n  mapping(address => uint) public tokensReceived;\n  mapping(address => uint) public locked;\n  \n  // Events ---------------------------\n  \n  event WalletUpdated(address _newWallet);\n  event GizerItemsContractUpdated(address _GizerItemsContract);\n  event RedemptionWalletUpdated(address _newRedemptionWallet);\n  event DateIcoEndUpdated(uint _unixts);\n  event TokensIssuedCrowd(address indexed _recipient, uint _tokens, uint _ether);\n  event TokensIssuedOwner(address indexed _recipient, uint _tokens, bool _locked);\n  event ItemsBought(address indexed _recipient, uint _lastIdx, uint _number);\n\n  // Basic Functions ------------------\n\n  /* Initialize */\n\n  function GizerToken() public {\n    require( TOKEN_SUPPLY_OWNER + TOKEN_SUPPLY_CROWD == TOKEN_SUPPLY_TOTAL );\n    wallet = owner;\n    redemptionWallet = owner;\n  }\n\n  /* Fallback */\n  \n  function () public payable {\n    buyTokens();\n  }\n\n  // Information Functions ------------\n  \n  /* What time is it? */\n  \n  function atNow() public view returns (uint) {\n    return now;\n  }\n\n  /* Are tokens tradeable */\n  \n  function tradeable() public view returns (bool) {\n    if (atNow() > date_ico_end) return true ;\n    return false;\n  }\n  \n  /* Available to mint by owner */\n  \n  function availableToMint() public view returns (uint available) {\n    if (atNow() <= date_ico_end) {\n      available = TOKEN_SUPPLY_OWNER.sub(tokensIssuedOwner);\n    } else {\n      available = TOKEN_SUPPLY_TOTAL.sub(tokensIssuedTotal);\n    }\n  }\n  \n  /* Unlocked tokens in an account */\n  \n  function unlockedTokens(address _account) public view returns (uint _unlockedTokens) {\n    if (atNow() <= DATE_TOKENS_UNLOCKED) {\n      return balances[_account] - locked[_account];\n    } else {\n      return balances[_account];\n    }\n  }\n\n  // Owner Functions ------------------\n  \n  /* Change the crowdsale wallet address */\n\n  function setWallet(address _wallet) public onlyOwner {\n    require( _wallet != address(0x0) );\n    wallet = _wallet;\n    WalletUpdated(_wallet);\n  }\n\n  /* Change the redemption wallet address */\n\n  function setRedemptionWallet(address _wallet) public onlyOwner {\n    require( _wallet != address(0x0) );\n    redemptionWallet = _wallet;\n    RedemptionWalletUpdated(_wallet);\n  }\n  \n  /* Change the Gizer Items contract address */\n\n  function setGizerItemsContract(address _contract) public onlyOwner {\n    require( _contract != address(0x0) );\n    gizerItemsContract = _contract;\n    GizerItemsContractUpdated(_contract);\n  }\n  \n  /* Change the ICO end date */\n\n  function extendIco(uint _unixts) public onlyOwner {\n    require( _unixts > date_ico_end );\n    require( _unixts < 1530316800 ); // must be before 30-JUN-2018\n    date_ico_end = _unixts;\n    DateIcoEndUpdated(_unixts);\n  }\n  \n  /* Minting of tokens by owner */\n\n  function mintTokens(address _account, uint _tokens) public onlyOwner {\n    // check token amount\n    require( _tokens <= availableToMint() );\n    \n    // update\n    balances[_account] = balances[_account].add(_tokens);\n    tokensIssuedOwner  = tokensIssuedOwner.add(_tokens);\n    tokensIssuedTotal  = tokensIssuedTotal.add(_tokens);\n    \n    // log event\n    Transfer(0x0, _account, _tokens);\n    TokensIssuedOwner(_account, _tokens, false);\n  }\n\n  /* Minting of tokens by owner */\n\n  function mintTokensLocked(address _account, uint _tokens) public onlyOwner {\n    // check token amount\n    require( _tokens <= availableToMint() );\n    \n    // update\n    balances[_account] = balances[_account].add(_tokens);\n    locked[_account]   = locked[_account].add(_tokens);\n    tokensIssuedOwner  = tokensIssuedOwner.add(_tokens);\n    tokensIssuedTotal  = tokensIssuedTotal.add(_tokens);\n    tokensIssuedLocked = tokensIssuedLocked.add(_tokens);\n    \n    // log event\n    Transfer(0x0, _account, _tokens);\n    TokensIssuedOwner(_account, _tokens, true);\n  }  \n  \n  /* Transfer out any accidentally sent ERC20 tokens */\n\n  function transferAnyERC20Token(address tokenAddress, uint amount) public onlyOwner returns (bool success) {\n      return ERC20Interface(tokenAddress).transfer(owner, amount);\n  }\n\n  // Private functions ----------------\n\n  /* Accept ETH during crowdsale (called by default function) */\n\n  function buyTokens() private {\n    \n    // basic checks\n    require( atNow() > DATE_ICO_START && atNow() < date_ico_end );\n    require( msg.value >= MIN_CONTRIBUTION );\n    \n    // check token volume\n    uint tokensAvailable = TOKEN_SUPPLY_CROWD.sub(tokensIssuedCrowd);\n    uint tokens = msg.value.mul(TOKENS_PER_ETH) / 10**12;\n    require( tokens <= tokensAvailable );\n    \n    // issue tokens\n    balances[msg.sender] = balances[msg.sender].add(tokens);\n    \n    // update global tracking variables\n    tokensIssuedCrowd  = tokensIssuedCrowd.add(tokens);\n    tokensIssuedTotal  = tokensIssuedTotal.add(tokens);\n    etherReceived      = etherReceived.add(msg.value);\n    \n    // update contributor tracking variables\n    etherContributed[msg.sender] = etherContributed[msg.sender].add(msg.value);\n    tokensReceived[msg.sender]   = tokensReceived[msg.sender].add(tokens);\n    \n    // transfer Ether out\n    if (this.balance > 0) wallet.transfer(this.balance);\n\n    // log token issuance\n    TokensIssuedCrowd(msg.sender, tokens, msg.value);\n    Transfer(0x0, msg.sender, tokens);\n  }\n\n  // ERC20 functions ------------------\n\n  /* Override \"transfer\" */\n\n  function transfer(address _to, uint _amount) public returns (bool success) {\n    require( tradeable() );\n    require( unlockedTokens(msg.sender) >= _amount );\n    return super.transfer(_to, _amount);\n  }\n  \n  /* Override \"transferFrom\" */\n\n  function transferFrom(address _from, address _to, uint _amount) public returns (bool success) {\n    require( tradeable() );\n    require( unlockedTokens(_from) >= _amount ); \n    return super.transferFrom(_from, _to, _amount);\n  }\n\n  // Bulk token transfer function -----\n\n  /* Multiple token transfers from one address to save gas */\n\n  function transferMultiple(address[] _addresses, uint[] _amounts) external {\n    require( tradeable() );\n    require( _addresses.length == _amounts.length );\n    require( _addresses.length <= 100 );\n    \n    // check token amounts\n    uint tokens_to_transfer = 0;\n    for (uint i = 0; i < _addresses.length; i++) {\n      tokens_to_transfer = tokens_to_transfer.add(_amounts[i]);\n    }\n    require( tokens_to_transfer <= unlockedTokens(msg.sender) );\n    \n    // do the transfers\n    for (i = 0; i < _addresses.length; i++) {\n      super.transfer(_addresses[i], _amounts[i]);\n    }\n  }\n  \n  // Functions to convert GZR to Gizer items -----------\n  \n  /* GZR token owner buys one Gizer Item */ \n  \n  function buyItem() public returns (uint idx) {\n    super.transfer(redemptionWallet, E6);\n    idx = mintItem(msg.sender);\n\n    // event\n    ItemsBought(msg.sender, idx, 1);\n  }\n  \n  /* GZR token owner buys several Gizer Items (max 100) */ \n  \n  function buyMultipleItems(uint8 _items) public returns (uint idx) {\n    \n    // between 0 and 100 items\n    require( _items > 0 && _items <= 100 );\n\n    // transfer GZR tokens to redemption wallet\n    super.transfer(redemptionWallet, _items * E6);\n    \n    // mint tokens, returning indexes of first and last item minted\n    for (uint i = 0; i < _items; i++) {\n      idx = mintItem(msg.sender);\n    }\n\n    // event\n    ItemsBought(msg.sender, idx, _items);\n  }\n\n  /* Internal function to call */\n  \n  function mintItem(address _owner) internal returns(uint idx) {\n    GizerItemsInterface g = GizerItemsInterface(gizerItemsContract);\n    idx = g.mint(_owner);\n  }\n  \n}\n\n\n// ----------------------------------------------------------------------------\n//\n// GZR Items interface\n//\n// ----------------------------------------------------------------------------\n\ncontract GizerItemsInterface is Owned {\n\n  function mint(address _to) public onlyAdmin returns (uint idx);\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DATE_TOKENS_UNLOCKED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"date_ico_end\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_CONTRIBUTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensIssuedOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensIssuedCrowd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SUPPLY_CROWD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"mintTokensLocked\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableToMint\",\"outputs\":[{\"name\":\"available\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"redemptionWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setGizerItemsContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyItem\",\"outputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensIssuedLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"atNow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"unlockedTokens\",\"outputs\":[{\"name\":\"_unlockedTokens\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensIssuedTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setRedemptionWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DATE_ICO_START\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"etherContributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SUPPLY_OWNER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKENS_PER_ETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"locked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SUPPLY_TOTAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_items\",\"type\":\"uint8\"}],\"name\":\"buyMultipleItems\",\"outputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_unixts\",\"type\":\"uint256\"}],\"name\":\"extendIco\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gizerItemsContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tradeable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"WalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_GizerItemsContract\",\"type\":\"address\"}],\"name\":\"GizerItemsContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newRedemptionWallet\",\"type\":\"address\"}],\"name\":\"RedemptionWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_unixts\",\"type\":\"uint256\"}],\"name\":\"DateIcoEndUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_ether\",\"type\":\"uint256\"}],\"name\":\"TokensIssuedCrowd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_locked\",\"type\":\"bool\"}],\"name\":\"TokensIssuedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_lastIdx\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_number\",\"type\":\"uint256\"}],\"name\":\"ItemsBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"AdminChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526000600355635accc3606009556000600a556000600b556000600c556000600d55341561003057600080fd5b60008054600160a060020a03338116600160a060020a03199283161780845581168352600260205260408320805460ff1916600117905582546006805491909216908316811790915560078054909216179055611a8a90819061009390396000f3006060604052600436106102375763ffffffff60e060020a60003504166306fdde038114610241578063095ea7b3146102cb5780631785f53c1461030157806318160ddd1461032057806320df7f351461034557806323b872dd1461035857806324d7806c14610380578063291948ff1461039f57806330adce0e146103b2578063313ce567146103c557806340650c91146103ee57806345395b03146104015780634b75f046146104145780634d7569ac14610427578063521eb2731461043a57806357fa580e146104695780635c1d22151461048857806370480275146104aa57806370a08231146104c957806374601c3c146104e85780637619317b146104fb57806377e5f6d01461050e578063795612d61461052d57806379ba5097146105405780637c38ce181461055357806381aea66814610566578063836115fe1461057957806384ef0778146105985780638da5cb5b146105ab578063954056f7146105be57806395cc2e8b146105dd57806395d89b41146105f0578063a05fccef14610603578063a82776dd1461062d578063a9059cbb1461064c578063bb74b4e61461066e578063bc6e660414610681578063cbf9fe5f14610694578063cef9db6d146106b3578063d289eb82146106c6578063d4ee1d90146106df578063dc39d06d146106f2578063dce579d114610714578063dd62ed3e1461072a578063deaa59df1461074f578063e0591ddc1461076e578063f0dda65c14610781578063f2fde38b146107a3578063f5ac9db6146107c2575b61023f6107d5565b005b341561024c57600080fd5b610254610a1c565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610290578082015183820152602001610278565b50505050905090810190601f1680156102bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102d657600080fd5b6102ed600160a060020a0360043516602435610a53565b604051901515815260200160405180910390f35b341561030c57600080fd5b61023f600160a060020a0360043516610ae3565b341561032b57600080fd5b610333610b80565b60405190815260200160405180910390f35b341561035057600080fd5b610333610b87565b341561036357600080fd5b6102ed600160a060020a0360043581169060243516604435610b8f565b341561038b57600080fd5b6102ed600160a060020a0360043516610bcc565b34156103aa57600080fd5b610333610be1565b34156103bd57600080fd5b610333610be7565b34156103d057600080fd5b6103d8610bed565b60405160ff909116815260200160405180910390f35b34156103f957600080fd5b610333610bf2565b341561040c57600080fd5b610333610bfd565b341561041f57600080fd5b610333610c03565b341561043257600080fd5b610333610c09565b341561044557600080fd5b61044d610c13565b604051600160a060020a03909116815260200160405180910390f35b341561047457600080fd5b610333600160a060020a0360043516610c22565b341561049357600080fd5b61023f600160a060020a0360043516602435610c34565b34156104b557600080fd5b61023f600160a060020a0360043516610d94565b34156104d457600080fd5b610333600160a060020a0360043516610e33565b34156104f357600080fd5b610333610e52565b341561050657600080fd5b61044d610ea4565b341561051957600080fd5b61023f600160a060020a0360043516610eb3565b341561053857600080fd5b610333610f4b565b341561054b57600080fd5b61023f610fbb565b341561055e57600080fd5b610333611046565b341561057157600080fd5b61033361104c565b341561058457600080fd5b610333600160a060020a0360043516611050565b34156105a357600080fd5b6103336110af565b34156105b657600080fd5b61044d6110b5565b34156105c957600080fd5b61023f600160a060020a03600435166110c4565b34156105e857600080fd5b61033361115c565b34156105fb57600080fd5b610254611164565b341561060e57600080fd5b61023f602460048035828101929082013591813591820191013561119b565b341561063857600080fd5b610333600160a060020a0360043516611274565b341561065757600080fd5b6102ed600160a060020a0360043516602435611286565b341561067957600080fd5b6103336112c1565b341561068c57600080fd5b6103336112cb565b341561069f57600080fd5b610333600160a060020a03600435166112d1565b34156106be57600080fd5b6103336112e3565b34156106d157600080fd5b61033360ff600435166112ed565b34156106ea57600080fd5b61044d6113a1565b34156106fd57600080fd5b6102ed600160a060020a03600435166024356113b0565b341561071f57600080fd5b61023f600435611453565b341561073557600080fd5b610333600160a060020a03600435811690602435166114c7565b341561075a57600080fd5b61023f600160a060020a03600435166114f2565b341561077957600080fd5b61044d61158a565b341561078c57600080fd5b61023f600160a060020a0360043516602435611599565b34156107ae57600080fd5b61023f600160a060020a03600435166116ae565b34156107cd57600080fd5b6102ed611749565b600080635aaa7c606107e561104c565b1180156107fa57506009546107f861104c565b105b151561080557600080fd5b662386f26fc1000034101561081957600080fd5b600a546108339065058f46c863809063ffffffff61176a16565b915064e8d4a5100061084d346103e863ffffffff61177f16565b81151561085657fe5b0490508181111561086657600080fd5b600160a060020a03331660009081526004602052604090205461088f908263ffffffff6117a416565b600160a060020a033316600090815260046020526040902055600a546108bb908263ffffffff6117a416565b600a556003546108d1908263ffffffff6117a416565b600355600d546108e7903463ffffffff6117a416565b600d55600160a060020a0333166000908152600e6020526040902054610913903463ffffffff6117a416565b600160a060020a0333166000908152600e6020908152604080832093909355600f90522054610948908263ffffffff6117a416565b600160a060020a033381166000908152600f602052604081209290925530163111156109a757600654600160a060020a039081169030163180156108fc0290604051600060405180830381858888f1935050505015156109a757600080fd5b33600160a060020a03167f2943fd5e8bd599cf8b898edb4c9e55db413d1dc5ec1494f2735f10b4d37bff03823460405191825260208201526040908101905180910390a233600160a060020a03166000600080516020611a3f8339815191528360405190815260200160405180910390a35050565b60408051908101604052601281527f47697a65722047616d696e6720546f6b656e0000000000000000000000000000602082015281565b600160a060020a03331660009081526004602052604081205482901015610a7957600080fd5b600160a060020a03338116600081815260056020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60005433600160a060020a03908116911614610afe57600080fd5b600160a060020a03811660009081526002602052604090205460ff161515600114610b2857600080fd5b600160a060020a038116600081815260026020526040808220805460ff191690557faff098f53523369cef878ae47c10d27a8a918f0da3221b889da1776ab58f553f919051901515815260200160405180910390a250565b6003545b90565b635bbe05e081565b6000610b99611749565b1515610ba457600080fd5b81610bae85611050565b1015610bb957600080fd5b610bc48484846117b4565b949350505050565b60026020526000908152604090205460ff1681565b60095481565b600d5481565b600681565b662386f26fc1000081565b600b5481565b600a5481565b65058f46c8638081565b600654600160a060020a031681565b600f6020526000908152604090205481565b60005433600160a060020a03908116911614610c4f57600080fd5b610c57610e52565b811115610c6357600080fd5b600160a060020a038216600090815260046020526040902054610c8c908263ffffffff6117a416565b600160a060020a038316600090815260046020908152604080832093909355601090522054610cc1908263ffffffff6117a416565b600160a060020a038316600090815260106020526040902055600b54610ced908263ffffffff6117a416565b600b55600354610d03908263ffffffff6117a416565b600355600c54610d19908263ffffffff6117a416565b600c55600160a060020a0382166000600080516020611a3f8339815191528360405190815260200160405180910390a381600160a060020a03167f09894422ad12553d2580a482cf496d6325e83e99bd7b01910866675b4ca234ee826001604051918252151560208201526040908101905180910390a25050565b60005433600160a060020a03908116911614610daf57600080fd5b600160a060020a03811660009081526002602052604090205460ff1615610dd557600080fd5b600160a060020a03811660008181526002602052604090819020805460ff191660019081179091557faff098f53523369cef878ae47c10d27a8a918f0da3221b889da1776ab58f553f9151901515815260200160405180910390a250565b600160a060020a0381166000908152600460205260409020545b919050565b6000600954610e5f61104c565b11610e8557600b54610e7e9065038907aa3c809063ffffffff61176a16565b9050610b84565b600354610e9f906509184e72a0009063ffffffff61176a16565b905090565b600754600160a060020a031681565b60005433600160a060020a03908116911614610ece57600080fd5b600160a060020a0381161515610ee357600080fd5b6008805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790557f761b7ef803b84beb49f389c95a16b74b635a1d0d79f58918404f1b0e3c59c80481604051600160a060020a03909116815260200160405180910390a150565b600754600090610f6790600160a060020a0316620f424061190f565b50610f71336119e2565b905033600160a060020a03167f416ad58d357577d0c8b5b91d5bca4d5c2a6aa7ca8fe5205f9cfef511d1487eb982600160405191825260208201526040908101905180910390a290565b60015433600160a060020a03908116911614610fd657600080fd5b600154600054600160a060020a0391821691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36001546000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b600c5481565b4290565b6000635bbe05e061105f61104c565b116110905750600160a060020a03811660009081526010602090815260408083205460049092529091205403610e4d565b50600160a060020a038116600090815260046020526040902054610e4d565b60035481565b600054600160a060020a031681565b60005433600160a060020a039081169116146110df57600080fd5b600160a060020a03811615156110f457600080fd5b6007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790557fbccb615726bb25bff9bcffa41eed7a8503660f94e19fcb9f2b3f03a47660609c81604051600160a060020a03909116815260200160405180910390a150565b635aaa7c6081565b60408051908101604052600381527f475a520000000000000000000000000000000000000000000000000000000000602082015281565b6000806111a6611749565b15156111b157600080fd5b8483146111bd57600080fd5b60648511156111cb57600080fd5b5060009050805b84811015611209576111ff8484838181106111e957fe5b90506020020135836117a490919063ffffffff16565b91506001016111d2565b61121233611050565b82111561121e57600080fd5b5060005b8481101561126c5761126386868381811061123957fe5b90506020020135600160a060020a0316858584818110151561125757fe5b9050602002013561190f565b50600101611222565b505050505050565b600e6020526000908152604090205481565b6000611290611749565b151561129b57600080fd5b816112a533611050565b10156112b057600080fd5b6112ba838361190f565b9392505050565b65038907aa3c8081565b6103e881565b60106020526000908152604090205481565b6509184e72a00081565b60008060008360ff16118015611307575060648360ff1611155b151561131257600080fd5b60075461133090600160a060020a031660ff8516620f42400261190f565b50600090505b8260ff168110156113545761134a336119e2565b9150600101611336565b33600160a060020a03167f416ad58d357577d0c8b5b91d5bca4d5c2a6aa7ca8fe5205f9cfef511d1487eb9838560405191825260ff1660208201526040908101905180910390a250919050565b600154600160a060020a031681565b6000805433600160a060020a039081169116146113cc57600080fd5b60008054600160a060020a038086169263a9059cbb929091169085906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561143257600080fd5b6102c65a03f1151561144357600080fd5b5050506040518051949350505050565b60005433600160a060020a0390811691161461146e57600080fd5b600954811161147c57600080fd5b635b36c800811061148c57600080fd5b60098190557fbe1526a1b8434b2862b93d67d7a130b3ff978279e40bb39c85eed9c46c97c8548160405190815260200160405180910390a150565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b60005433600160a060020a0390811691161461150d57600080fd5b600160a060020a038116151561152257600080fd5b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790557f4edbfac5b40fe46ac1af1fd222b224b38cfeeb9e21bd4fc6344526c245f7549b81604051600160a060020a03909116815260200160405180910390a150565b600854600160a060020a031681565b60005433600160a060020a039081169116146115b457600080fd5b6115bc610e52565b8111156115c857600080fd5b600160a060020a0382166000908152600460205260409020546115f1908263ffffffff6117a416565b600160a060020a038316600090815260046020526040902055600b5461161d908263ffffffff6117a416565b600b55600354611633908263ffffffff6117a416565b600355600160a060020a0382166000600080516020611a3f8339815191528360405190815260200160405180910390a381600160a060020a03167f09894422ad12553d2580a482cf496d6325e83e99bd7b01910866675b4ca234ee826000604051918252151560208201526040908101905180910390a25050565b60005433600160a060020a039081169116146116c957600080fd5b600160a060020a03811615156116de57600080fd5b600054600160a060020a0380831691167ff4e75b79500ab730f8a026ed3cba6d55331bcb64c9e9f60c548e371356e5e3c060405160405180910390a36001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600060095461175661104c565b111561176457506001610b84565b50600090565b60008282111561177957600080fd5b50900390565b818102821580611799575081838281151561179657fe5b04145b1515610add57600080fd5b81810182811015610add57600080fd5b600160a060020a038316600090815260046020526040812054829010156117da57600080fd5b600160a060020a03808516600090815260056020908152604080832033909416835292905220548290101561180e57600080fd5b600160a060020a038416600090815260046020526040902054611837908363ffffffff61176a16565b600160a060020a038086166000908152600460209081526040808320949094556005815283822033909316825291909152205461187a908363ffffffff61176a16565b600160a060020a03808616600090815260056020908152604080832033851684528252808320949094559186168152600490915220546118c0908363ffffffff6117a416565b600160a060020a0380851660008181526004602052604090819020939093559190861690600080516020611a3f8339815191529085905190815260200160405180910390a35060019392505050565b600160a060020a0333166000908152600460205260408120548290101561193557600080fd5b600160a060020a03331660009081526004602052604090205461195e908363ffffffff61176a16565b600160a060020a033381166000908152600460205260408082209390935590851681522054611993908363ffffffff6117a416565b600160a060020a038085166000818152600460205260409081902093909355913390911690600080516020611a3f8339815191529085905190815260200160405180910390a350600192915050565b600854600090600160a060020a031680636a62784284846040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561143257600080fd00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058208099f6ebaffb99346ae36903db92a05c16c204e8c6750180d7151ffa18f0918e0029"
}