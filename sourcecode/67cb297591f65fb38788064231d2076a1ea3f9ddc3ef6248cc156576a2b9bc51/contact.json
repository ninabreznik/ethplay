{
  "address": "0xc4d5545392f5fc57eba3af8981815669bb7e2a48",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "HedpayToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-10\n*/\n\npragma solidity ^0.4.24;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (_a == 0) {\n      return 0;\n    }\n\n    c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = _a / _b;\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n    return _a / _b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    c = _a + _b;\n    assert(c >= _a);\n    return c;\n  }\n}\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n\n/**\n * @title Contactable token\n * @dev Basic version of a contactable contract, allowing the owner to provide a string with their\n * contact information.\n */\ncontract Contactable is Ownable {\n\n  string public contactInformation;\n\n  /**\n    * @dev Allows the owner to set a string with their contact information.\n    * @param _info The contact information to attach to the contract.\n    */\n  function setContactInformation(string _info) public onlyOwner {\n    contactInformation = _info;\n  }\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ninterface IERC20 {\n  function totalSupply() external view returns (uint256);\n\n  function balanceOf(address who) external view returns (uint256);\n\n  function allowance(address owner, address spender)\n    external view returns (uint256);\n\n  function transfer(address to, uint256 value) external returns (bool);\n\n  function approve(address spender, uint256 value)\n    external returns (bool);\n\n  function transferFrom(address from, address to, uint256 value)\n    external returns (bool);\n\n  event Transfer(\n    address indexed from,\n    address indexed to,\n    uint256 value\n  );\n\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  function safeTransfer(\n    IERC20 token,\n    address to,\n    uint256 value\n  )\n    internal\n  {\n    require(token.transfer(to, value));\n  }\n\n  function safeTransferFrom(\n    IERC20 token,\n    address from,\n    address to,\n    uint256 value\n  )\n    internal\n  {\n    require(token.transferFrom(from, to, value));\n  }\n\n  function safeApprove(\n    IERC20 token,\n    address spender,\n    uint256 value\n  )\n    internal\n  {\n    require(token.approve(spender, value));\n  }\n}\n\n/** Function to receive approval and execute in one call\n*/\ncontract ApproveAndCallFallBack {\n    function receiveApproval(address _from, uint256 _tokens, address _token, bytes _data) public;\n}\n\n/**\n * @title HEdpAY Token Contract that can hold and transfer ERC-20 tokens\n */\ncontract HedpayToken is  IERC20, Contactable {\n\n   using SafeMath for uint;\n\n   string public  name;\n   string public symbol;\n   uint8 public decimals;\n   uint public _totalSupply;\n\n   mapping(address => uint) balances;\n   mapping(address => mapping(address => uint)) allowed;\n\n    /**\n    * @dev Constructor that sets the initial contract parameters\n    */\n    constructor() public {\n        name = \"HEdpAY\";\n        symbol = \"Hdp.Ñ„\";\n        decimals = 4;\n        _totalSupply = 10000000000000; //1 billion * 10000 (decimals)\n        balances[owner] = _totalSupply;\n    }\n\n    /**\n    * @dev Return actual totalSupply value\n    */\n    function totalSupply() public constant returns (uint) {\n        return _totalSupply  - balances[address(0)];\n    }\n\n    /**\n    * @dev Get the token balance for account of token owner\n    */\n    function balanceOf(address _owner) public constant returns (uint balance) {\n        require(_owner != address(0));\n\t\treturn balances[_owner];\n    }\n\n    /**\n    * @dev Gets the specified accounts approval value\n    * @param _owner address the tokens owner\n    * @param _spender address the tokens spender\n    * @return uint the specified accounts spending tokens amount\n    */\n    function allowance(address _owner, address _spender)\n    public view returns (uint) {\n        require(_owner != address(0));\n        require(_spender != address(0));\n        return allowed[_owner][_spender];\n    }\n\n    /**\n    * @dev Function to transfer tokens\n    * @param _to address the tokens recepient\n    * @param _value uint amount of the tokens to be transferred\n    */\n    function transfer(address _to, uint _value) public returns (bool success) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n    * @dev Function to transfer tokens from the approved `msg.sender` account\n    * @param _from address the tokens owner\n    * @param _to address the tokens recepient\n    * @param _value uint amount of the tokens to be transferred\n    */\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success) {\n\t\trequire(_from != address(0));\n        require(_to != address(0));\n        require(_value <= allowance(_from, msg.sender));\n        balances[_from] = balances[_from].sub(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n\t\temit Approval(_from, msg.sender, allowance(_from, msg.sender));\n        return true;\n    }\n\n    /**\n    * @dev Function to approve account to spend owned tokens\n    * @param _spender address the tokens spender\n    * @param _value uint amount of the tokens to be approved\n    */\n   function approve(address _spender, uint _value) public  returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n    *@dev Function to approve for spender to transferFrom tokens\n    *@param _spender address of the spender\n    *@param _tokens the value of tokens for transferring\n    *@param _data is used for metadata\n    */\n    function approveAndCall(address _spender, uint _tokens, bytes _data) public returns (bool success) {\n        allowed[msg.sender][_spender] = _tokens;\n        emit Approval(msg.sender, _spender, _tokens);\n        ApproveAndCallFallBack(_spender).receiveApproval(msg.sender, _tokens, this, _data);\n        return true;\n    }\n\n    /**\n    *@dev Function allows owner to transfer out\n    *any accidentally sent tokens\n    *@param _tokenAddress the address of tokens holder\n    *@param _tokens the amount of tokens for transferring\n    */\n    function transferAnyERC20Token(address _tokenAddress, uint _tokens) public onlyOwner returns (bool success) {\n        return IERC20(_tokenAddress).transfer(owner, _tokens);\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contactInformation\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_info\",\"type\":\"string\"}],\"name\":\"setContactInformation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a031916331790556040805180820190915260068082527f48456470415900000000000000000000000000000000000000000000000000006020909201918252610067916002916100e3565b506040805180820190915260068082527f4864702ed184000000000000000000000000000000000000000000000000000060209092019182526100ac916003916100e3565b506004805460ff1916811790556509184e72a000600581905560008054600160a060020a031681526006602052604090205561017e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012457805160ff1916838001178555610151565b82800160010185558215610151579182015b82811115610151578251825591602001919060010190610136565b5061015d929150610161565b5090565b61017b91905b8082111561015d5760008155600101610167565b90565b610d328061018d6000396000f3006080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101b757806323b872dd146101de578063313ce5671461020857806336f7ab5e146102335780633eaaf86b1461024857806370a082311461025d578063715018a61461027e5780638da5cb5b1461029557806395d89b41146102c6578063a9059cbb146102db578063b967a52e146102ff578063cae9ca5114610358578063dc39d06d146103c1578063dd62ed3e146103e5578063f2fde38b1461040c575b600080fd5b34801561010157600080fd5b5061010a61042d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014457818101518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018b57600080fd5b506101a3600160a060020a03600435166024356104b8565b604080519115158252519081900360200190f35b3480156101c357600080fd5b506101cc61051e565b60408051918252519081900360200190f35b3480156101ea57600080fd5b506101a3600160a060020a0360043581169060243516604435610551565b34801561021457600080fd5b5061021d6106e5565b6040805160ff9092168252519081900360200190f35b34801561023f57600080fd5b5061010a6106ee565b34801561025457600080fd5b506101cc610748565b34801561026957600080fd5b506101cc600160a060020a036004351661074e565b34801561028a57600080fd5b50610293610781565b005b3480156102a157600080fd5b506102aa6107ed565b60408051600160a060020a039092168252519081900360200190f35b3480156102d257600080fd5b5061010a6107fc565b3480156102e757600080fd5b506101a3600160a060020a0360043516602435610857565b34801561030b57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102939436949293602493928401919081908401838280828437509497506109079650505050505050565b34801561036457600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101a3948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506109359650505050505050565b3480156103cd57600080fd5b506101a3600160a060020a0360043516602435610a96565b3480156103f157600080fd5b506101cc600160a060020a0360043581169060243516610b51565b34801561041857600080fd5b50610293600160a060020a0360043516610ba9565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104b05780601f10610485576101008083540402835291602001916104b0565b820191906000526020600020905b81548152906001019060200180831161049357829003601f168201915b505050505081565b336000818152600760209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f854600554035b90565b6000600160a060020a038416151561056857600080fd5b600160a060020a038316151561057d57600080fd5b6105878433610b51565b82111561059357600080fd5b600160a060020a0384166000908152600660205260409020546105bc908363ffffffff610bcc16565b600160a060020a03851660009081526006602090815260408083209390935560078152828220338352905220546105f9908363ffffffff610bcc16565b600160a060020a03808616600090815260076020908152604080832033845282528083209490945591861681526006909152205461063d908363ffffffff610bde16565b600160a060020a0380851660008181526006602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a333600160a060020a0385167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256106ca8784610b51565b60408051918252519081900360200190a35060019392505050565b60045460ff1681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104b05780601f10610485576101008083540402835291602001916104b0565b60055481565b6000600160a060020a038216151561076557600080fd5b50600160a060020a031660009081526006602052604090205490565b600054600160a060020a0316331461079857600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104b05780601f10610485576101008083540402835291602001916104b0565b33600090815260066020526040812054610877908363ffffffff610bcc16565b3360009081526006602052604080822092909255600160a060020a038516815220546108a9908363ffffffff610bde16565b600160a060020a0384166000818152600660209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600054600160a060020a0316331461091e57600080fd5b8051610931906001906020840190610c6e565b5050565b336000818152600760209081526040808320600160a060020a038816808552908352818420879055815187815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a36040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018690523060448401819052608060648501908152865160848601528651600160a060020a038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b83811015610a25578181015183820152602001610a0d565b50505050905090810190601f168015610a525780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610a7457600080fd5b505af1158015610a88573d6000803e3d6000fd5b506001979650505050505050565b60008054600160a060020a03163314610aae57600080fd5b60008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810186905290519186169263a9059cbb926044808401936020939083900390910190829087803b158015610b1e57600080fd5b505af1158015610b32573d6000803e3d6000fd5b505050506040513d6020811015610b4857600080fd5b50519392505050565b6000600160a060020a0383161515610b6857600080fd5b600160a060020a0382161515610b7d57600080fd5b50600160a060020a03918216600090815260076020908152604080832093909416825291909152205490565b600054600160a060020a03163314610bc057600080fd5b610bc981610bf1565b50565b600082821115610bd857fe5b50900390565b81810182811015610beb57fe5b92915050565b600160a060020a0381161515610c0657600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610caf57805160ff1916838001178555610cdc565b82800160010185558215610cdc579182015b82811115610cdc578251825591602001919060010190610cc1565b50610ce8929150610cec565b5090565b61054e91905b80821115610ce85760008155600101610cf25600a165627a7a72305820091e02d0d247736286ba4eac818e82150ecee5cd2e21459a715236abf8f3fca60029"
}