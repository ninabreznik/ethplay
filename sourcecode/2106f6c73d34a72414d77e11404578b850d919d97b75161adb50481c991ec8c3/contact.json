{
  "address": "0x73d7b530d181ef957525c6fbe2ab8f28bf4f81cf",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "AxieOriginCoin",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-04-24\n*/\n\npragma solidity ^0.4.23;\n\n// File: contracts/erc/erc20/ERC20Interface.sol\n\n/**\n * @title ERC-20 Token Standard.\n * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md.\n */\ncontract ERC20Interface {\n  /**\n   * @dev MUST trigger when tokens are transferred, including zero value transfers.\n   * @dev A token contract which creates new tokens SHOULD trigger a `Transfer` event\n   *   with the `_from` address set to `0x0` when tokens are created.\n   */\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n\n  /**\n   * @dev MUST trigger on any successful call to `approve(address _spender, uint256 _value)`.\n   */\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n  /**\n   * @notice Returns the total token supply.\n   * @return The supply.\n   */\n  function totalSupply() public view returns (uint256 _supply);\n\n  /**\n   * @notice Returns the balance of an account with address `_owner`.\n   * @return The account balance.\n   */\n  function balanceOf(address _owner) public view returns (uint256 _balance);\n\n  /**\n   * @notice Transfers `_value` amount of tokens to address `_to`.\n   *\n   * @param _to The address of the recipient.\n   * @param _value The amount of token to be transferred.\n   *\n   * @dev The function MUST fire the `Transfer` event.\n   * @dev The function SHOULD throw if the `_from` account balance does not have enough tokens to spend.\n   * @dev Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.\n   *\n   * @return Whether the transfer was successful or not.\n   */\n  function transfer(address _to, uint256 _value) public returns (bool _success);\n\n  /**\n   * @notice Transfers `_value` amount of tokens from address `_from` to address `_to`.\n   *\n   * @param _from The address of the sender.\n   * @param _to The address of the recipient.\n   * @param _value The amount of token to be transferred.\n   *\n   * @dev The `transferFrom` method is used for a withdraw workflow,\n   *   allowing contracts to transfer tokens on your behalf.\n   *   This can be used for example to allow a contract to transfer tokens on your behalf\n   *   and/or to charge fees in sub-currencies.\n   * @dev The function MUST fire the `Transfer` event.\n   * @dev The function SHOULD throw unless the `_from` account\n   *   has deliberately authorized the sender of the message via some mechanism.\n   * @dev Transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event.\n   *\n   * @return Whether the transfer was successful or not.\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool _success);\n\n  /**\n   * @notice Allows `_spender` to withdraw from your account multiple times, up to the `_value` amount.\n   *   If this function is called again it overwrites the current allowance with `_value`.\n   *\n   * @param _spender The address of the account able to transfer the tokens.\n   * @param _value The amount of tokens to be approved for transfer.\n   *\n   * @dev To prevent attack vectors like the one described in\n   *   https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/\n   *   and discussed in\n   *   https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729,\n   *   clients SHOULD make sure to create user interfaces in such a way\n   *   that they set the allowance first to 0 before setting it to another value for the same spender.\n   *   THOUGH The contract itself shouldn't enforce it,\n   *   to allow backwards compatibility with contracts deployed before.\n   *\n   * @return Whether the approval was successful or not.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool _success);\n\n  /**\n   * @notice Returns the amount which `_spender` is still allowed to withdraw from `_owner`.\n   *\n   * @param _owner The address of the account owning tokens.\n   * @param _spender The address of the account able to transfer the tokens.\n   *\n   * @return Amount of remaining tokens allowed to spent.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256 _remaining);\n}\n\n// File: zeppelin/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n// File: contracts/erc/erc20/ERC20.sol\n\n/**\n * @title An implementation of the ERC-20 Token Standard.\n * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md.\n */\ncontract ERC20 is ERC20Interface {\n  using SafeMath for uint256;\n\n  uint256 internal _totalSupply;\n  mapping (address => uint256) internal _balance;\n  mapping (address => mapping (address => uint256)) internal _allowed;\n\n\n  /**\n   * @notice Returns the total token supply.\n   * @return The supply.\n   */\n  function totalSupply() public view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @notice Returns the balance of an account with address `_owner`.\n   * @return The account balance.\n   */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return _balance[_owner];\n  }\n\n  /**\n   * @notice Transfers `_value` amount of tokens to address `_to`.\n   *\n   * @param _to The address of the recipient.\n   * @param _value The amount of token to be transferred.\n   *\n   * @return Whether the transfer was successful or not.\n   */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n\n    _balance[msg.sender] = _balance[msg.sender].sub(_value);\n    _balance[_to] = _balance[_to].add(_value);\n\n    emit Transfer(msg.sender, _to, _value);\n\n    return true;\n  }\n\n  /**\n   * @notice Transfers `_value` amount of tokens from address `_from` to address `_to`.\n   *\n   * @param _from The address of the sender.\n   * @param _to The address of the recipient.\n   * @param _value The amount of token to be transferred.\n   *\n   * @return Whether the transfer was successful or not.\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n\n    _balance[_from] = _balance[_from].sub(_value);\n    _balance[_to] = _balance[_to].add(_value);\n    _allowed[_from][msg.sender] = _allowed[_from][msg.sender].sub(_value);\n\n    emit Transfer(_from, _to, _value);\n\n    return true;\n  }\n\n  /**\n   * @notice Allows `_spender` to withdraw from your account multiple times, up to the `_value` amount.\n   *   If this function is called again it overwrites the current allowance with `_value`.\n   *\n   * @param _spender The address of the account able to transfer the tokens.\n   * @param _value The amount of tokens to be approved for transfer.\n   *\n   * @return Whether the approval was successful or not.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    _allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @notice Returns the amount which `_spender` is still allowed to withdraw from `_owner`.\n   *\n   * @param _owner The address of the account owning tokens.\n   * @param _spender The address of the account able to transfer the tokens.\n   *\n   * @return Amount of remaining tokens allowed to spent.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return _allowed[_owner][_spender];\n  }\n}\n\n// File: contracts/erc/erc20/ERC20Burnable.sol\n\n/**\n * @title An implementation of the ERC-20 Token Standard\n *   which allows tokens to be burnt.\n */\ncontract ERC20Burnable is ERC20 {\n  event Burn(address indexed burner, uint256 value);\n\n  function burn(uint256 _value) public returns (bool) {\n    _balance[msg.sender] = _balance[msg.sender].sub(_value);\n    _totalSupply = _totalSupply.sub(_value);\n\n    emit Transfer(msg.sender, address(0), _value);\n    emit Burn(msg.sender, _value);\n\n    return true;\n  }\n\n  function burnFrom(address _from, uint256 _value) public returns (bool) {\n    _balance[_from] = _balance[_from].sub(_value);\n    _totalSupply = _totalSupply.sub(_value);\n    _allowed[_from][msg.sender] = _allowed[_from][msg.sender].sub(_value);\n\n    emit Transfer(_from, address(0), _value);\n    emit Burn(_from, _value);\n\n    return true;\n  }\n}\n\n// File: contracts/erc/erc20/ERC20DetailedInterface.sol\n\n/**\n * @title Contains optional methods which give some detailed information about the token\n *   in ERC-20 Token Standard.\n * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md.\n */\ncontract ERC20DetailedInterface is ERC20Interface {\n  /**\n   * @notice Returns the name of the token.\n   * @return The name.\n   */\n  function name() public view returns (string _name);\n\n  /**\n   * @notice Returns the name of the token.\n   * @return The symbol.\n   */\n  function symbol() public view returns (string _symbol);\n\n  /**\n   * @notice Returns the number of decimals the token uses.\n   * @dev For example, 8 means to divide the token amount by 100,000,000\n   *   to get its user representation.\n   * @return The number of decimals.\n   */\n  function decimals() public view returns (uint8 _decimals);\n}\n\n// File: contracts/erc/erc20/ERC20RecipientInterface.sol\n\ninterface ERC20RecipientInterface {\n  function receiveApproval(address _from, uint256 _value, address _erc20Address, bytes _data) external;\n}\n\n// File: contracts/erc/erc20/ERC20Extended.sol\n\n/**\n * @title An implementation of the ERC-20 Token Standard\n *   which implements `approveAndCall` function according to the extended standard.\n */\ncontract ERC20Extended is ERC20 {\n  /**\n   * @notice Allows `_spender` to withdraw from your account multiple times, up to the `_value` amount.\n   *   After the approval, executes `receiveApproval` function on `_spender`.\n   *   If this function is called again it overwrites the current allowance with `_value`.\n   *\n   * @param _spender The address that will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   * @param _data Additional data to be passed to `receiveApproval` function on `_spender`.\n   *\n   * @return Whether the approval was successful or not.\n   */\n  function approveAndCall(address _spender, uint256 _value, bytes _data) public returns (bool) {\n    require(approve(_spender, _value));\n    ERC20RecipientInterface(_spender).receiveApproval(msg.sender, _value, this, _data);\n    return true;\n  }\n}\n\n// File: zeppelin/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n// File: contracts/erc/erc20/ERC20Mintable.sol\n\n/**\n * @title An implementation of the ERC-20 Token Standard\n *   which allows tokens to be minted.\n */\ncontract ERC20Mintable is ERC20, Ownable {\n  bool public mintingFinished = false;\n\n  event Mint(address indexed to, uint256 value);\n  event MintFinished();\n\n  modifier canMint() {\n    require(!mintingFinished);\n    _;\n  }\n\n  function mint(address _to, uint256 _value) onlyOwner canMint public returns (bool) {\n    _balance[_to] = _balance[_to].add(_value);\n    _totalSupply = _totalSupply.add(_value);\n\n    emit Mint(_to, _value);\n    emit Transfer(address(0), _to, _value);\n\n    return true;\n  }\n\n  function finishMinting() onlyOwner canMint public returns (bool) {\n    mintingFinished = true;\n    emit MintFinished();\n    return true;\n  }\n}\n\n// File: contracts/token/AxieOriginCoin.sol\n\n/**\n * @title The contract which holds Axie Origin Coins.\n * @dev Five Axie Origin Coins can be redeemed for one Origin Axie.\n */\ncontract AxieOriginCoin is ERC20DetailedInterface, ERC20Extended, ERC20Mintable, ERC20Burnable {\n  uint256 constant public NUM_COIN_PER_AXIE = 5;\n  uint256 constant public NUM_RESERVED_AXIE = 427;\n  uint256 constant public NUM_RESERVED_COIN = NUM_RESERVED_AXIE * NUM_COIN_PER_AXIE;\n\n  constructor() public {\n    // Reserve 20% of all remaining Axies from the Presale.\n    mint(msg.sender, NUM_RESERVED_COIN);\n\n    // As its name says.\n    _allocateUnspentRefTokens();\n\n    // Don't allow tokens to be minted anymore.\n    finishMinting();\n  }\n\n  /**\n   * @notice Returns the name of the token.\n   * @return The name.\n   */\n  function name() public view returns (string) {\n    return \"Axie Origin Coin\";\n  }\n\n  /**\n   * @notice Returns the name of the token.\n   * @return The symbol.\n   */\n  function symbol() public view returns (string) {\n    return \"AOC\";\n  }\n\n  /**\n   * @notice Returns the number of decimals the token uses.\n   * @return The number of decimals.\n   */\n  function decimals() public view returns (uint8) {\n    return 0;\n  }\n\n  function _allocateUnspentRefTokens() private {\n    // 0\n    mint(0x052731748979e182fdf9Bf849C6df54f9f196645, 3);\n    mint(0x1878B18693fc273DE9FD833B83f9679785c01aB2, 1);\n    mint(0x1E3934EA7E416F4E2BC5F7d55aE9783da0061475, 1);\n    mint(0x32451d81EB31411B2CA4e70F3d87B3DEACCEA2d2, 3);\n    mint(0x494952f01a30547d269aaF147e6226f940f5B041, 8);\n    // 5\n    mint(0x5BD73bB4e2A9f81922dbE7F4b321cfAE208BE2E6, 1);\n    mint(0x6564A5639e17e186f749e493Af98a51fd3092048, 12);\n    mint(0x696A567271BBDAC6f435CAb9D69e56cD115B76eB, 1);\n    mint(0x70580eA14d98a53fd59376dC7e959F4a6129bB9b, 2);\n    mint(0x75f732C1b1D0bBdA60f4B49EF0B36EB6e8AD6531, 1);\n    // 10\n    mint(0x84418eD93d141CFE7471dED46747D003117eCaD5, 2);\n    mint(0x9455A90Cbf43D331Dd76a2d07192431370f64384, 2);\n    mint(0x95fd3579c73Ea675C89415285355C4795118B345, 1);\n    mint(0xa3346F3Af6A3AE749aCA18d7968A03811d15d733, 1);\n    mint(0xA586A3B8939e9C0DC72D88166F6F6bb7558EeDCe, 1);\n    // 15\n    mint(0xAb01D4895b802c38Eee7553bb52A4160CFca2878, 1);\n    mint(0xd6E8D52Be82550B230176b6E9bA49BC3fAF43E4a, 1);\n    mint(0xEAB0c22D927d15391dd0CfbE89a3b59F6e814551, 3);\n    mint(0x03300279d711b8dEb1353DD9719eFf81Ea1b6bEd, 3);\n    mint(0x03b4A1fdeCeC66338071180a7F2f2D518CFf224A, 4);\n    // 20\n    mint(0x0537544De3935408246EE2Ad09949D046F92574D, 4);\n    mint(0x0E26169270D92Ff3649461B55CA51C99703dE59e, 1);\n    mint(0x16Ea1F673E01419BA9aF51365b88138Ac492489a, 1);\n    mint(0x28d02f67316123Dc0293849a0D254AD86b379b34, 2);\n    mint(0x38A6022FECb675a53F31CDaB3457456DD6e5911c, 2);\n    // 25\n    mint(0x4260E8206c58cD0530d9A5cff55B77D6165c7BCd, 1);\n    mint(0x7E1DCf785f0353BF657c38Ab7865C1f184EFE208, 4);\n    mint(0x7f328117b7de7579C6249258d084f75556E2699d, 1);\n    mint(0x8a9d49a6e9D037843560091fC280B9Ff9819e462, 3);\n    mint(0x8C5fC43ad00Cc53e11F61bEce329DDc5E3ea0929, 3);\n    // 30\n    mint(0x8FF9679fc77B077cB5f8818B7B63022582b5d538, 1);\n    mint(0x97bfc7fc1Ee5b25CfAF6075bac5d7EcA037AD694, 1);\n    mint(0x993a64DB27a51D1E6C1AFF56Fb61Ba0Dac253acb, 2);\n    mint(0xa6bCEc585F12CeFBa9709A080cE2EFD38f871024, 1);\n    mint(0xaF6488744207273c79B896922e65651C61033787, 5);\n    // 35\n    mint(0xB3C2a4ce7ce57A74371b7E3dAE8f3393229c2aaC, 3);\n    mint(0xb4A90c06d5bC51D79D44e11336077b6F9ccD5683, 23);\n    mint(0xB94c9e7D28e54cb37fA3B0D3FFeC24A8E4affA90, 3);\n    mint(0xDe0D2e92e85B8B7828723Ee789ffA3Ba9FdCDb9c, 1);\n    mint(0xe37Ba1117746473db68A807aE9E37a2088BDB20f, 1);\n    // 40\n    mint(0x5eA1D56D0ddE1cA5B50c277275855F69edEfA169, 1);\n    mint(0x6692DE2d4b3102ab922cB21157EeBCD9BDDDBb15, 4);\n    // 42\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NUM_RESERVED_AXIE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NUM_COIN_PER_AXIE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NUM_RESERVED_COIN\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040526003805460a060020a60ff02191690553480156200002157600080fd5b5060038054600160a060020a03191633600160a060020a03811691909117909155620000599061085764010000000062000087810204565b506200006d640100000000620001c5810204565b62000080640100000000620008d5810204565b506200098a565b60035460009033600160a060020a03908116911614620000a657600080fd5b60035474010000000000000000000000000000000000000000900460ff1615620000cf57600080fd5b600160a060020a03831660009081526001602052604090205462000102908364010000000062000d3a6200097382021704565b600160a060020a0384166000908152600160205260408120919091555462000139908364010000000062000d3a6200097382021704565b600055604080518381529051600160a060020a038516917f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885919081900360200190a2604080518381529051600160a060020a038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b620001ef73052731748979e182fdf9bf849c6df54f9f196645600364010000000062000087810204565b506200021a731878b18693fc273de9fd833b83f9679785c01ab2600164010000000062000087810204565b5062000245731e3934ea7e416f4e2bc5f7d55ae9783da0061475600164010000000062000087810204565b50620002707332451d81eb31411b2ca4e70f3d87b3deaccea2d2600364010000000062000087810204565b506200029b73494952f01a30547d269aaf147e6226f940f5b041600864010000000062000087810204565b50620002c6735bd73bb4e2a9f81922dbe7f4b321cfae208be2e6600164010000000062000087810204565b50620002f1736564a5639e17e186f749e493af98a51fd3092048600c64010000000062000087810204565b506200031c73696a567271bbdac6f435cab9d69e56cd115b76eb600164010000000062000087810204565b50620003477370580ea14d98a53fd59376dc7e959f4a6129bb9b600264010000000062000087810204565b50620003727375f732c1b1d0bbda60f4b49ef0b36eb6e8ad6531600164010000000062000087810204565b506200039d7384418ed93d141cfe7471ded46747d003117ecad5600264010000000062000087810204565b50620003c8739455a90cbf43d331dd76a2d07192431370f64384600264010000000062000087810204565b50620003f37395fd3579c73ea675c89415285355c4795118b345600164010000000062000087810204565b506200041e73a3346f3af6a3ae749aca18d7968a03811d15d733600164010000000062000087810204565b506200044973a586a3b8939e9c0dc72d88166f6f6bb7558eedce600164010000000062000087810204565b506200047473ab01d4895b802c38eee7553bb52a4160cfca2878600164010000000062000087810204565b506200049f73d6e8d52be82550b230176b6e9ba49bc3faf43e4a600164010000000062000087810204565b50620004ca73eab0c22d927d15391dd0cfbe89a3b59f6e814551600364010000000062000087810204565b50620004f57303300279d711b8deb1353dd9719eff81ea1b6bed600364010000000062000087810204565b50620005207303b4a1fdecec66338071180a7f2f2d518cff224a600464010000000062000087810204565b506200054b730537544de3935408246ee2ad09949d046f92574d600464010000000062000087810204565b5062000576730e26169270d92ff3649461b55ca51c99703de59e600164010000000062000087810204565b50620005a17316ea1f673e01419ba9af51365b88138ac492489a600164010000000062000087810204565b50620005cc7328d02f67316123dc0293849a0d254ad86b379b34600264010000000062000087810204565b50620005f77338a6022fecb675a53f31cdab3457456dd6e5911c600264010000000062000087810204565b5062000622734260e8206c58cd0530d9a5cff55b77d6165c7bcd600164010000000062000087810204565b506200064d737e1dcf785f0353bf657c38ab7865c1f184efe208600464010000000062000087810204565b5062000678737f328117b7de7579c6249258d084f75556e2699d600164010000000062000087810204565b50620006a3738a9d49a6e9d037843560091fc280b9ff9819e462600364010000000062000087810204565b50620006ce738c5fc43ad00cc53e11f61bece329ddc5e3ea0929600364010000000062000087810204565b50620006f9738ff9679fc77b077cb5f8818b7b63022582b5d538600164010000000062000087810204565b50620007247397bfc7fc1ee5b25cfaf6075bac5d7eca037ad694600164010000000062000087810204565b506200074f73993a64db27a51d1e6c1aff56fb61ba0dac253acb600264010000000062000087810204565b506200077a73a6bcec585f12cefba9709a080ce2efd38f871024600164010000000062000087810204565b50620007a573af6488744207273c79b896922e65651c61033787600564010000000062000087810204565b50620007d073b3c2a4ce7ce57a74371b7e3dae8f3393229c2aac600364010000000062000087810204565b50620007fb73b4a90c06d5bc51d79d44e11336077b6f9ccd5683601764010000000062000087810204565b506200082673b94c9e7d28e54cb37fa3b0d3ffec24a8e4affa90600364010000000062000087810204565b506200085173de0d2e92e85b8b7828723ee789ffa3ba9fdcdb9c600164010000000062000087810204565b506200087c73e37ba1117746473db68a807ae9e37a2088bdb20f600164010000000062000087810204565b50620008a7735ea1d56d0dde1ca5b50c277275855f69edefa169600164010000000062000087810204565b50620008d2736692de2d4b3102ab922cb21157eebcd9bdddbb15600464010000000062000087810204565b50565b60035460009033600160a060020a03908116911614620008f457600080fd5b60035474010000000000000000000000000000000000000000900460ff16156200091d57600080fd5b6003805460a060020a60ff021916740100000000000000000000000000000000000000001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b6000828201838110156200098357fe5b9392505050565b610d9c806200099a6000396000f3006080604052600436106101115763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461011657806306fdde031461013f578063095ea7b3146101c95780630d605c4a146101ed57806318160ddd1461021457806323b872dd14610229578063313ce5671461025357806340c10f191461027e57806342966c68146102a257806370a08231146102ba57806379cc6790146102db5780637d64bcb4146102ff5780638da5cb5b1461031457806395d89b4114610345578063a9059cbb1461035a578063b17184551461037e578063cae9ca5114610393578063d69d895e146103fc578063dd62ed3e14610411578063f2fde38b14610438575b600080fd5b34801561012257600080fd5b5061012b61045b565b604080519115158252519081900360200190f35b34801561014b57600080fd5b5061015461047c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018e578181015183820152602001610176565b50505050905090810190601f1680156101bb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101d557600080fd5b5061012b600160a060020a03600435166024356104b3565b3480156101f957600080fd5b5061020261051d565b60408051918252519081900360200190f35b34801561022057600080fd5b50610202610523565b34801561023557600080fd5b5061012b600160a060020a0360043581169060243516604435610529565b34801561025f57600080fd5b50610268610641565b6040805160ff9092168252519081900360200190f35b34801561028a57600080fd5b5061012b600160a060020a0360043516602435610646565b3480156102ae57600080fd5b5061012b60043561075c565b3480156102c657600080fd5b50610202600160a060020a036004351661082b565b3480156102e757600080fd5b5061012b600160a060020a0360043516602435610846565b34801561030b57600080fd5b5061012b61096c565b34801561032057600080fd5b50610329610a16565b60408051600160a060020a039092168252519081900360200190f35b34801561035157600080fd5b50610154610a25565b34801561036657600080fd5b5061012b600160a060020a0360043516602435610a5c565b34801561038a57600080fd5b50610202610b20565b34801561039f57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261012b948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610b259650505050505050565b34801561040857600080fd5b50610202610c5e565b34801561041d57600080fd5b50610202600160a060020a0360043581169060243516610c64565b34801561044457600080fd5b50610459600160a060020a0360043516610c8f565b005b60035474010000000000000000000000000000000000000000900460ff1681565b60408051808201909152601081527f41786965204f726967696e20436f696e00000000000000000000000000000000602082015290565b600160a060020a03338116600081815260026020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6101ab81565b60005490565b6000600160a060020a038316151561054057600080fd5b600160a060020a038416600090815260016020526040902054610569908363ffffffff610d2816565b600160a060020a03808616600090815260016020526040808220939093559085168152205461059e908363ffffffff610d3a16565b600160a060020a038085166000908152600160209081526040808320949094558783168252600281528382203390931682529190915220546105e6908363ffffffff610d2816565b600160a060020a03808616600081815260026020908152604080832033861684528252918290209490945580518681529051928716939192600080516020610d51833981519152929181900390910190a35060019392505050565b600090565b60035460009033600160a060020a0390811691161461066457600080fd5b60035474010000000000000000000000000000000000000000900460ff161561068c57600080fd5b600160a060020a0383166000908152600160205260409020546106b5908363ffffffff610d3a16565b600160a060020a038416600090815260016020526040812091909155546106e2908363ffffffff610d3a16565b600055604080518381529051600160a060020a038516917f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885919081900360200190a2604080518381529051600160a060020a03851691600091600080516020610d518339815191529181900360200190a350600192915050565b600160a060020a033316600090815260016020526040812054610785908363ffffffff610d2816565b600160a060020a033316600090815260016020526040812091909155546107b2908363ffffffff610d2816565b600090815560408051848152905133600160a060020a031691600080516020610d51833981519152919081900360200190a3604080518381529051600160a060020a033316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2506001919050565b600160a060020a031660009081526001602052604090205490565b600160a060020a03821660009081526001602052604081205461086f908363ffffffff610d2816565b600160a060020a0384166000908152600160205260408120919091555461089c908363ffffffff610d2816565b6000908155600160a060020a0380851682526002602090815260408084203390931684529190529020546108d6908363ffffffff610d2816565b600160a060020a038085166000818152600260209081526040808320339095168352938152838220949094558251868152925190939192600080516020610d5183398151915292908290030190a3604080518381529051600160a060020a038516917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a250600192915050565b60035460009033600160a060020a0390811691161461098a57600080fd5b60035474010000000000000000000000000000000000000000900460ff16156109b257600080fd5b6003805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600354600160a060020a031681565b60408051808201909152600381527f414f430000000000000000000000000000000000000000000000000000000000602082015290565b6000600160a060020a0383161515610a7357600080fd5b600160a060020a033316600090815260016020526040902054610a9c908363ffffffff610d2816565b600160a060020a033381166000908152600160205260408082209390935590851681522054610ad1908363ffffffff610d3a16565b600160a060020a03808516600081815260016020908152604091829020949094558051868152905191933390931692600080516020610d5183398151915292918290030190a350600192915050565b600581565b6000610b3184846104b3565b1515610b3c57600080fd5b83600160a060020a0316638f4ffcb1338530866040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610bed578181015183820152602001610bd5565b50505050905090810190601f168015610c1a5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610c3c57600080fd5b505af1158015610c50573d6000803e3d6000fd5b506001979650505050505050565b61085781565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a03908116911614610caa57600080fd5b600160a060020a0381161515610cbf57600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610d3457fe5b50900390565b600082820183811015610d4957fe5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058200af71108af0255efd4917da60ba0ec748697c11ebfd1b33f5f9c295a7f6181dd0029"
}