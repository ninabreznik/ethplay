{
  "address": "0xf7e299bfc9d4c510273f9e7ce6365d8be2b63ede",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Bounty0xStaking",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-20\n*/\n\npragma solidity ^0.4.23;\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n\n\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\n\n\n\n\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n\n\n\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n\n\ncontract BntyControllerInterface {\n    function destroyTokensInBntyTokenContract(address _owner, uint _amount) public returns (bool);\n}\n\n\n\n\ncontract Bounty0xStaking is Ownable, Pausable {\n\n    using SafeMath for uint256;\n\n    address public Bounty0xToken;\n    uint public lockTime;\n\n    mapping (address => uint) public balances;\n    mapping (uint => mapping (address => uint)) public stakes; // mapping of submission ids to mapping of addresses that staked an amount of bounty token\n    mapping (address => uint) public huntersLockDateTime;\n    mapping (address => uint) public huntersLockAmount;\n    \n    \n    event Deposit(address indexed depositor, uint amount, uint balance);\n    event Withdraw(address indexed depositor, uint amount, uint balance);\n    event Stake(uint indexed submissionId, address indexed hunter, uint amount, uint balance);\n    event StakeReleased(uint indexed submissionId, address indexed from, address indexed to, uint amount);\n    event Lock(address indexed hunter, uint amount, uint endDateTime);\n    event Unlock(address indexed hunter, uint amount);\n\n\n    constructor(address _bounty0xToken) public {\n        Bounty0xToken = _bounty0xToken;\n        lockTime = 30 days;\n    }\n    \n\n    function deposit(uint _amount) external whenNotPaused {\n        //remember to call Token(address).approve(this, amount) or this contract will not be able to do the transfer on your behalf.\n        require(ERC20(Bounty0xToken).transferFrom(msg.sender, this, _amount));\n        balances[msg.sender] = SafeMath.add(balances[msg.sender], _amount);\n\n        emit Deposit(msg.sender, _amount, balances[msg.sender]);\n    }\n    \n    function withdraw(uint _amount) external whenNotPaused {\n        require(balances[msg.sender] >= _amount);\n        balances[msg.sender] = SafeMath.sub(balances[msg.sender], _amount);\n        require(ERC20(Bounty0xToken).transfer(msg.sender, _amount));\n\n        emit Withdraw(msg.sender, _amount, balances[msg.sender]);\n    }\n    \n    \n    function lock(uint _amount) external whenNotPaused {\n        require(_amount != 0);\n        require(balances[msg.sender] >= _amount);\n        \n        balances[msg.sender] = SafeMath.sub(balances[msg.sender], _amount);\n        huntersLockAmount[msg.sender] = SafeMath.add(huntersLockAmount[msg.sender], _amount);\n        huntersLockDateTime[msg.sender] = SafeMath.add(now, lockTime);\n        \n        emit Lock(msg.sender, huntersLockAmount[msg.sender], huntersLockDateTime[msg.sender]);\n    }\n    \n    function unlock() external whenNotPaused {\n        require(huntersLockDateTime[msg.sender] <= now);\n        uint amountLocked = huntersLockAmount[msg.sender];\n        require(amountLocked != 0);\n        \n        huntersLockAmount[msg.sender] = SafeMath.sub(huntersLockAmount[msg.sender], amountLocked);\n        balances[msg.sender] = SafeMath.add(balances[msg.sender], amountLocked);\n        \n        emit Unlock(msg.sender, amountLocked);\n    }\n\n\n    function stake(uint _submissionId, uint _amount) external whenNotPaused {\n        require(balances[msg.sender] >= _amount);\n        balances[msg.sender] = SafeMath.sub(balances[msg.sender], _amount);\n        stakes[_submissionId][msg.sender] = SafeMath.add(stakes[_submissionId][msg.sender], _amount);\n\n        emit Stake(_submissionId, msg.sender, _amount, balances[msg.sender]);\n    }\n\n    function stakeToMany(uint[] _submissionIds, uint[] _amounts) external whenNotPaused {\n        uint totalAmount = 0;\n        for (uint j = 0; j < _amounts.length; j++) {\n            totalAmount = SafeMath.add(totalAmount, _amounts[j]);\n        }\n        require(balances[msg.sender] >= totalAmount);\n        balances[msg.sender] = SafeMath.sub(balances[msg.sender], totalAmount);\n\n        for (uint i = 0; i < _submissionIds.length; i++) {\n            stakes[_submissionIds[i]][msg.sender] = SafeMath.add(stakes[_submissionIds[i]][msg.sender], _amounts[i]);\n\n            emit Stake(_submissionIds[i], msg.sender, _amounts[i], balances[msg.sender]);\n        }\n    }\n\n\n    function releaseStake(uint _submissionId, address _from, address _to) external onlyOwner {\n        require(stakes[_submissionId][_from] != 0);\n\n        balances[_to] = SafeMath.add(balances[_to], stakes[_submissionId][_from]);\n        emit StakeReleased(_submissionId, _from, _to, stakes[_submissionId][_from]);\n        \n        stakes[_submissionId][_from] = 0;\n    }\n\n    function releaseManyStakes(uint[] _submissionIds, address[] _from, address[] _to) external onlyOwner {\n        require(_submissionIds.length == _from.length &&\n                _submissionIds.length == _to.length);\n\n        for (uint i = 0; i < _submissionIds.length; i++) {\n            require(_from[i] != address(0));\n            require(_to[i] != address(0));\n            require(stakes[_submissionIds[i]][_from[i]] != 0);\n            \n            balances[_to[i]] = SafeMath.add(balances[_to[i]], stakes[_submissionIds[i]][_from[i]]);\n            emit StakeReleased(_submissionIds[i], _from[i], _to[i], stakes[_submissionIds[i]][_from[i]]);\n            \n            stakes[_submissionIds[i]][_from[i]] = 0;\n        }\n    }\n    \n\n    function changeLockTime(uint _periodInSeconds) external onlyOwner {\n        lockTime = _periodInSeconds;\n    }\n    \n    \n    // Burnable mechanism\n\n    address public bntyController;\n\n    event Burn(uint indexed submissionId, address indexed from, uint amount);\n\n    function changeBntyController(address _bntyController) external onlyOwner {\n        bntyController = _bntyController;\n    }\n\n\n    function burnStake(uint _submissionId, address _from) external onlyOwner {\n        require(stakes[_submissionId][_from] > 0);\n\n        uint amountToBurn = stakes[_submissionId][_from];\n        stakes[_submissionId][_from] = 0;\n\n        require(BntyControllerInterface(bntyController).destroyTokensInBntyTokenContract(this, amountToBurn));\n        emit Burn(_submissionId, _from, amountToBurn);\n    }\n\n\n    // in case of emergency\n    function emergentWithdraw() external onlyOwner {\n        require(ERC20(Bounty0xToken).transfer(msg.sender, this.balance));\n    }\n    \n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bntyController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_submissionId\",\"type\":\"uint256\"},{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"burnStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_submissionId\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_submissionId\",\"type\":\"uint256\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"releaseStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"emergentWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_periodInSeconds\",\"type\":\"uint256\"}],\"name\":\"changeLockTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_submissionIds\",\"type\":\"uint256[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"stakeToMany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bntyController\",\"type\":\"address\"}],\"name\":\"changeBntyController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_submissionIds\",\"type\":\"uint256[]\"},{\"name\":\"_from\",\"type\":\"address[]\"},{\"name\":\"_to\",\"type\":\"address[]\"}],\"name\":\"releaseManyStakes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"huntersLockAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Bounty0xToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"huntersLockDateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_bounty0xToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"hunter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hunter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"endDateTime\",\"type\":\"uint256\"}],\"name\":\"Lock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hunter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60806040526000805460a060020a60ff021916905534801561002057600080fd5b5060405160208061157e833981016040525160008054600160a060020a0319908116331790915560018054600160a060020a039093169290911691909117905562278d00600255611508806100766000396000f3006080604052600436106101485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630d668087811461014d57806327e235e3146101745780632e1a7d4d146101955780633f4ba83a146101af5780635bf47d40146101c45780635c975abb146101f557806367c3ad8e1461021e578063715018a6146102425780637b0472f0146102575780637de548d8146102725780638456cb591461029c5780638a9920b7146102b15780638da5cb5b146102c657806396cf5227146102db57806397e8e520146102f35780639ed999511461031f5780639f11731714610340578063a69df4b514610378578063a9a3bba41461038d578063b1b60ff0146103b1578063b6b55f25146103d2578063c7aaa83f146103ea578063d25e5f0a146103ff578063dd46706414610420578063f2fde38b14610438575b600080fd5b34801561015957600080fd5b50610162610459565b60408051918252519081900360200190f35b34801561018057600080fd5b50610162600160a060020a036004351661045f565b3480156101a157600080fd5b506101ad600435610471565b005b3480156101bb57600080fd5b506101ad6105c0565b3480156101d057600080fd5b506101d9610636565b60408051600160a060020a039092168252519081900360200190f35b34801561020157600080fd5b5061020a610645565b604080519115158252519081900360200190f35b34801561022a57600080fd5b506101ad600435600160a060020a0360243516610655565b34801561024e57600080fd5b506101ad6107a6565b34801561026357600080fd5b506101ad600435602435610812565b34801561027e57600080fd5b506101ad600435600160a060020a03602435811690604435166108f3565b3480156102a857600080fd5b506101ad610a0a565b3480156102bd57600080fd5b506101ad610a85565b3480156102d257600080fd5b506101d9610b42565b3480156102e757600080fd5b506101ad600435610b51565b3480156102ff57600080fd5b506101ad6024600480358281019290820135918135918201910135610b6d565b34801561032b57600080fd5b506101ad600160a060020a0360043516610d1c565b34801561034c57600080fd5b506101ad6024600480358281019290820135918135808301929082013591604435918201910135610d62565b34801561038457600080fd5b506101ad6110c0565b34801561039957600080fd5b50610162600435600160a060020a036024351661119d565b3480156103bd57600080fd5b50610162600160a060020a03600435166111ba565b3480156103de57600080fd5b506101ad6004356111cc565b3480156103f657600080fd5b506101d96112fb565b34801561040b57600080fd5b50610162600160a060020a036004351661130a565b34801561042c57600080fd5b506101ad60043561131c565b34801561044457600080fd5b506101ad600160a060020a0360043516611417565b60025481565b60036020526000908152604090205481565b60005460a060020a900460ff161561048857600080fd5b336000908152600360205260409020548111156104a457600080fd5b336000908152600360205260409020546104be908261143a565b3360008181526003602090815260408083209490945560015484517fa9059cbb0000000000000000000000000000000000000000000000000000000081526004810194909452602484018690529351600160a060020a039094169363a9059cbb93604480820194918390030190829087803b15801561053c57600080fd5b505af1158015610550573d6000803e3d6000fd5b505050506040513d602081101561056657600080fd5b5051151561057357600080fd5b336000818152600360209081526040918290205482518581529182015281517ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568929181900390910190a250565b600054600160a060020a031633146105d757600080fd5b60005460a060020a900460ff1615156105ef57600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b600754600160a060020a031681565b60005460a060020a900460ff1681565b60008054600160a060020a0316331461066d57600080fd5b6000838152600460209081526040808320600160a060020a03861684529091528120541161069a57600080fd5b506000828152600460208181526040808420600160a060020a03868116865290835281852080549086905560075483517f252f497700000000000000000000000000000000000000000000000000000000815230968101969096526024860182905292519095929091169363252f4977936044808301949193928390030190829087803b15801561072a57600080fd5b505af115801561073e573d6000803e3d6000fd5b505050506040513d602081101561075457600080fd5b5051151561076157600080fd5b604080518281529051600160a060020a0384169185917fe1b6e34006e9871307436c226f232f9c5e7690c1d2c4f4adda4f607a75a9beca9181900360200190a3505050565b600054600160a060020a031633146107bd57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60005460a060020a900460ff161561082957600080fd5b3360009081526003602052604090205481111561084557600080fd5b3360009081526003602052604090205461085f908261143a565b3360008181526003602090815260408083209490945585825260048152838220928252919091522054610892908261144c565b60008381526004602090815260408083203380855290835281842094909455600382529182902054825185815291820152815185927f507ac39eb33610191cd8fd54286e91c5cc464c262861643be3978f5a9f18ab02928290030190a35050565b600054600160a060020a0316331461090a57600080fd5b6000838152600460209081526040808320600160a060020a0386168452909152902054151561093857600080fd5b600160a060020a0380821660009081526003602090815260408083205487845260048352818420948716845293909152902054610975919061144c565b600160a060020a0380831660008181526003602090815260408083209590955587825260048152848220938716808352938152908490205484519081529351919387927fac8f720ed7882952a138b50752a3b3a7d82d0fbe16c51aa7e83a0599dbe17624929181900390910190a4506000918252600460209081526040808420600160a060020a039093168452919052812055565b600054600160a060020a03163314610a2157600080fd5b60005460a060020a900460ff1615610a3857600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a03163314610a9c57600080fd5b600154604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152303160248201529051600160a060020a039092169163a9059cbb916044808201926020929091908290030181600087803b158015610b0957600080fd5b505af1158015610b1d573d6000803e3d6000fd5b505050506040513d6020811015610b3357600080fd5b50511515610b4057600080fd5b565b600054600160a060020a031681565b600054600160a060020a03163314610b6857600080fd5b600255565b600080548190819060a060020a900460ff1615610b8957600080fd5b60009250600091505b83821015610bc357610bb683868685818110610baa57fe5b9050602002013561144c565b9250600190910190610b92565b33600090815260036020526040902054831115610bdf57600080fd5b33600090815260036020526040902054610bf9908461143a565b3360009081526003602052604081209190915590505b85811015610d1357610c5d60046000898985818110610c2a57fe5b602090810292909201358352508181019290925260409081016000908120338252909252902054868684818110610baa57fe5b60046000898985818110610c6d57fe5b6020908102929092013583525081810192909252604090810160009081203380835293522091909155878783818110610ca257fe5b905060200201357f507ac39eb33610191cd8fd54286e91c5cc464c262861643be3978f5a9f18ab028787858181101515610cd857fe5b3360009081526003602090815260409182902054825193820295909501358352820193909352825190819003909201919050a3600101610c0f565b50505050505050565b600054600160a060020a03163314610d3357600080fd5b6007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008054600160a060020a03163314610d7a57600080fd5b8584148015610d8857508582145b1515610d9357600080fd5b5060005b85811015610d13576000858583818110610dad57fe5b90506020020135600160a060020a0316600160a060020a031614151515610dd357600080fd5b6000838383818110610de157fe5b90506020020135600160a060020a0316600160a060020a031614151515610e0757600080fd5b60046000888884818110610e1757fe5b90506020020135815260200190815260200160002060008686848181101515610e3c57fe5b90506020020135600160a060020a0316600160a060020a0316600160a060020a0316815260200190815260200160002054600014151515610e7c57600080fd5b610f2d60036000858585818110610e8f57fe5b90506020020135600160a060020a0316600160a060020a0316600160a060020a0316815260200190815260200160002054600460008a8a868181101515610ed257fe5b90506020020135815260200190815260200160002060008888868181101515610ef757fe5b90506020020135600160a060020a0316600160a060020a0316600160a060020a031681526020019081526020016000205461144c565b60036000858585818110610f3d57fe5b60209081029290920135600160a060020a031683525081019190915260400160002055828282818110610f6c57fe5b90506020020135600160a060020a0316600160a060020a03168585838181101515610f9357fe5b90506020020135600160a060020a0316600160a060020a03168888848181101515610fba57fe5b905060200201357fac8f720ed7882952a138b50752a3b3a7d82d0fbe16c51aa7e83a0599dbe17624600460008c8c888181101515610ff457fe5b90506020020135815260200190815260200160002060008a8a88818110151561101957fe5b90506020020135600160a060020a0316600160a060020a0316600160a060020a03168152602001908152602001600020546040518082815260200191505060405180910390a4600060048189898581811061107057fe5b9050602002013581526020019081526020016000206000878785818110151561109557fe5b60209081029290920135600160a060020a031683525081019190915260400160002055600101610d97565b6000805460a060020a900460ff16156110d857600080fd5b336000908152600560205260409020544210156110f457600080fd5b503360009081526006602052604090205480151561111157600080fd5b3360009081526006602052604090205461112b908261143a565b33600090815260066020908152604080832093909355600390522054611151908261144c565b33600081815260036020908152604091829020939093558051848152905191927f6381d9813cabeb57471b5a7e05078e64845ccdb563146a6911d536f24ce960f192918290030190a250565b600460209081526000928352604080842090915290825290205481565b60066020526000908152604090205481565b60005460a060020a900460ff16156111e357600080fd5b600154604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490529051600160a060020a03909216916323b872dd916064808201926020929091908290030181600087803b15801561125657600080fd5b505af115801561126a573d6000803e3d6000fd5b505050506040513d602081101561128057600080fd5b5051151561128d57600080fd5b336000908152600360205260409020546112a7908261144c565b33600081815260036020908152604091829020849055815185815290810193909352805191927f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15929081900390910190a250565b600154600160a060020a031681565b60056020526000908152604090205481565b60005460a060020a900460ff161561133357600080fd5b80151561133f57600080fd5b3360009081526003602052604090205481111561135b57600080fd5b33600090815260036020526040902054611375908261143a565b3360009081526003602090815260408083209390935560069052205461139b908261144c565b336000908152600660205260409020556002546113b990429061144c565b3360008181526005602081815260408084208690556006825292839020549181528251918252810193909352805191927f49eaf4942f1237055eb4cfa5f31c9dfe50d5b4ade01e021f7de8be2fbbde557b929081900390910190a250565b600054600160a060020a0316331461142e57600080fd5b6114378161145f565b50565b60008282111561144657fe5b50900390565b8181018281101561145957fe5b92915050565b600160a060020a038116151561147457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820e6a89f66a9e9bfdc4673d5bcd93948dd74fc04b8a5c6b742fab7cc9ac63d27890029000000000000000000000000d2d6158683aee4cc838067727209a0aaf4359de3",
  "constructorArguments": "000000000000000000000000d2d6158683aee4cc838067727209a0aaf4359de3"
}