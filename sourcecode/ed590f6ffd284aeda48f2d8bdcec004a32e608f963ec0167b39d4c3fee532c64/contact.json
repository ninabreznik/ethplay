{
  "address": "0xea3de549afbffa291b4cc075ba84acdc680e5ee6",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "STCoin",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-04\n*/\n\npragma solidity ^0.4.19;\n\nlibrary SafeMath {\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tuint256 c = a * b;\n\t\tassert(a == 0 || c / a == b);\n\t\treturn c;\n\t}\n\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tassert(b > 0); // Solidity automatically throws when dividing by 0\n\t\tuint256 c = a / b;\n\t\tassert(a == b * c + a % b); // There is no case in which this doesn't hold\n\t\treturn c;\n\t}\n\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tassert(b <= a);\n\t\treturn a - b;\n\t}\n\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tuint256 c = a + b;\n\t\tassert(c >= a);\n\t\treturn c;\n\t}\n}\n\ncontract Ownable {\n\taddress public owner;\n\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\t\n\tfunction Ownable() public {\n        owner = msg.sender;\n    }\n\n\tmodifier onlyOwner() {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n\t\n\tfunction transferOwnership(address newOwner) public onlyOwner {\n\t\trequire(newOwner != address(0));\n\t\tOwnershipTransferred(owner, newOwner);\n\t\towner = newOwner;\n\t}\n}\n\ncontract ERC20 {\n\tuint public totalSupply;\n\tfunction balanceOf(address _owner) public constant returns (uint balance);\n\tfunction transfer(address _to,uint _value) public returns (bool success);\n\tfunction transferFrom(address _from,address _to,uint _value) public returns (bool success);\n\tfunction approve(address _spender,uint _value) public returns (bool success);\n\tfunction allownce(address _owner,address _spender) public constant returns (uint remaining);\n\tevent Transfer(address indexed _from,address indexed _to,uint _value);\n\tevent Approval(address indexed _owner,address indexed _spender,uint _value);\n}\n\ncontract STCoin is ERC20,Ownable {\n\tusing SafeMath for uint8;\n\tusing SafeMath for uint256;\n\t\n\tevent Increase(address indexed _to, uint256 _value);\n\n\tstring public name;\n\tstring public symbol;\n\tuint8 public decimals;\n\tmapping (address => uint256) public balances;\n\tmapping (address => mapping (address => uint256)) allowed;\n\t\n\tfunction STCoin () public {\n\t\tname = 'STCoin';\n\t\tsymbol = 'STC';\n\t\tdecimals = 18;\n\t\ttotalSupply = 10000000000 * (10 ** 18);\n\t\tbalances[msg.sender] = totalSupply;\n\t}\n\t\n\tfunction balanceOf(address _owner) public constant returns (uint balance) {\n\t\treturn balances[_owner];\n\t}\n\t\n\tfunction transfer(address _to,uint _value) public returns (bool success) {\n\t\tif(balances[msg.sender] >= _value && _value > 0 && balances[_to] + _value > balances[_to]){\n\t\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\n\t\t\tbalances[_to] = balances[_to].add(_value);\n\t\t\tTransfer(msg.sender,_to,_value);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction transferFrom(address _from,address _to,uint _value) public returns (bool success) {\n\t\tif(balances[_from] >= _value && _value > 0 && balances[_to] + _value > balances[_to]) {\n\t\t\tif(_from != msg.sender) {\n\t\t\t\trequire(allowed[_from][msg.sender] > _value);\n\t\t\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\t\t\t}\n\t\t\tbalances[_from] = balances[_from].sub(_value);\n\t\t\tbalances[_to] = balances[_to].add(_value);\n\t\t\tTransfer(_from,_to,_value);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction approve(address _spender, uint _value) public returns (bool success) {\n\t\tallowed[msg.sender][_spender] = _value;\n\t\tApproval(msg.sender,_spender,_value);\n\t\treturn true;\n\t}\n\t\n\tfunction allownce(address _owner,address _spender) public constant returns (uint remaining) {\n\t\treturn allowed[_owner][_spender];\n\t}\n\t\n\tfunction increase(uint256 _value) public onlyOwner returns (bool success) {\n\t\tif(balances[msg.sender] + _value > balances[msg.sender]) {\n\t\t\ttotalSupply = totalSupply.add(_value);\n\t\t\tbalances[msg.sender] = balances[msg.sender].add(_value);\n\t\t\tIncrease(msg.sender, _value);\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tfunction multisend(address[] _dests, uint256[] _values) public returns (bool success) {\n\t\trequire(_dests.length == _values.length);\n\t\tfor(uint256 i = 0; i < _dests.length; i++) {\n\t\t\ttransfer(_dests[i], _values[i]);\n\t\t}\n\t\treturn true;\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increase\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allownce\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dests\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"multisend\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Increase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b60018054600160a060020a03191633600160a060020a031617905560408051908101604052600681527f5354436f696e0000000000000000000000000000000000000000000000000000602082015260029080516100719291602001906100f3565b506040805190810160405260038082527f535443000000000000000000000000000000000000000000000000000000000060208301529080516100b89291602001906100f3565b506004805460ff191660121790556b204fce5e3e250261100000006000818155600160a060020a03331681526005602052604090205561018e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013457805160ff1916838001178555610161565b82800160010185558215610161579182015b82811115610161578251825591602001919060010190610146565b5061016d929150610171565b5090565b61018b91905b8082111561016d5760008155600101610177565b90565b610a8a8061019d6000396000f3006060604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d4578063095ea7b31461015e57806318160ddd1461019457806323b872dd146101b957806327e235e3146101e157806330f3f0db14610200578063313ce5671461021657806370a082311461023f5780638da5cb5b1461025e57806395d89b411461028d578063a20bc7fe146102a0578063a9059cbb146102c5578063aad41a41146102e7578063f2fde38b14610376575b600080fd5b34156100df57600080fd5b6100e7610397565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012357808201518382015260200161010b565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016957600080fd5b610180600160a060020a0360043516602435610435565b604051901515815260200160405180910390f35b341561019f57600080fd5b6101a76104a2565b60405190815260200160405180910390f35b34156101c457600080fd5b610180600160a060020a03600435811690602435166044356104a8565b34156101ec57600080fd5b6101a7600160a060020a0360043516610670565b341561020b57600080fd5b610180600435610682565b341561022157600080fd5b61022961075b565b60405160ff909116815260200160405180910390f35b341561024a57600080fd5b6101a7600160a060020a0360043516610764565b341561026957600080fd5b61027161077f565b604051600160a060020a03909116815260200160405180910390f35b341561029857600080fd5b6100e761078e565b34156102ab57600080fd5b6101a7600160a060020a03600435811690602435166107f9565b34156102d057600080fd5b610180600160a060020a0360043516602435610824565b34156102f257600080fd5b61018060046024813581810190830135806020818102016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284375094965061093d95505050505050565b341561038157600080fd5b610395600160a060020a03600435166109a2565b005b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561042d5780601f106104025761010080835404028352916020019161042d565b820191906000526020600020905b81548152906001019060200180831161041057829003601f168201915b505050505081565b600160a060020a03338116600081815260066020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60005481565b600160a060020a0383166000908152600560205260408120548290108015906104d15750600082115b80156104f65750600160a060020a038316600090815260056020526040902054828101115b156106655733600160a060020a031684600160a060020a03161415156105a857600160a060020a038085166000908152600660209081526040808320339094168352929052205482901161054957600080fd5b600160a060020a0380851660009081526006602090815260408083203390941683529290522054610580908363ffffffff610a3d16565b600160a060020a03808616600090815260066020908152604080832033909416835292905220555b600160a060020a0384166000908152600560205260409020546105d1908363ffffffff610a3d16565b600160a060020a038086166000908152600560205260408082209390935590851681522054610606908363ffffffff610a4f16565b600160a060020a03808516600081815260056020526040908190209390935591908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610669565b5060005b9392505050565b60056020526000908152604090205481565b60015460009033600160a060020a039081169116146106a057600080fd5b600160a060020a0333166000908152600560205260409020548281011115610756576000546106d5908363ffffffff610a4f16565b6000908155600160a060020a033316815260056020526040902054610700908363ffffffff610a4f16565b600160a060020a0333166000818152600560205260409081902092909255907f12007e72f6f07d1e7dd33219d5187184ceba138e79459b6c241cec9a9399fe0c9084905190815260200160405180910390a25060015b919050565b60045460ff1681565b600160a060020a031660009081526005602052604090205490565b600154600160a060020a031681565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561042d5780601f106104025761010080835404028352916020019161042d565b600160a060020a03918216600090815260066020908152604080832093909416825291909152205490565b600160a060020a03331660009081526005602052604081205482901080159061084d5750600082115b80156108725750600160a060020a038316600090815260056020526040902054828101115b1561093557600160a060020a0333166000908152600560205260409020546108a0908363ffffffff610a3d16565b600160a060020a0333811660009081526005602052604080822093909355908516815220546108d5908363ffffffff610a4f16565b600160a060020a0380851660008181526005602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600161049c565b50600061049c565b600080825184511461094e57600080fd5b5060005b83518110156109985761098f84828151811061096a57fe5b9060200190602002015184838151811061098057fe5b90602001906020020151610824565b50600101610952565b5060019392505050565b60015433600160a060020a039081169116146109bd57600080fd5b600160a060020a03811615156109d257600080fd5b600154600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610a4957fe5b50900390565b60008282018381101561066957fe00a165627a7a723058205c6a7196570041986e5e9dcf142e0ccd1ee90cb768f87ffc406f41089e1c2bfa0029"
}