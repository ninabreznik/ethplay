{
  "address": "0x795fd253a5a90dfd029403101079815817524244",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "VokenTeamFund",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-03\n*/\n\npragma solidity ^0.5.7;\n\n// Voken Team Fund\n//   Freezed till 2021-06-30 23:59:59, (timestamp 1625039999).\n//   Release 10% per 3 months.\n//\n// More info:\n//   https://vision.network\n//   https://voken.io\n//\n// Contact us:\n//   [emailÂ protected]\n//   [emailÂ protected]\n\n\n/**\n * @title SafeMath\n * @dev Unsigned math operations with safety checks that revert on error.\n */\nlibrary SafeMath {\n    /**\n     * @dev Adds two unsigned integers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n     * @dev Multiplies two unsigned integers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        if (a == 0) {\n            return 0;\n        }\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two unsigned integers truncating the quotient,\n     * reverts on division by zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0);\n        uint256 c = a / b;\n        assert(a == b * c + a % b);\n        return a / b;\n    }\n\n    /**\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\n\n\n/**\n * @title Ownable\n */\ncontract Ownable {\n    address internal _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract\n     * to the sender account.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @return the address of the owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == _owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) external onlyOwner {\n        require(newOwner != address(0));\n        _owner = newOwner;\n        emit OwnershipTransferred(_owner, newOwner);\n    }\n\n    /**\n     * @dev Withdraw Ether\n     */\n    function withdrawEther(address payable to, uint256 amount) external onlyOwner {\n        require(to != address(0));\n\n        uint256 balance = address(this).balance;\n\n        require(balance >= amount);\n        to.transfer(amount);\n    }\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://eips.ethereum.org/EIPS/eip-20\n */\ninterface IERC20{\n    function balanceOf(address owner) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n}\n\n\n/**\n * @title Voken Team Fund\n */\ncontract VokenTeamFund is Ownable{\n    using SafeMath for uint256;\n    \n    IERC20 public VOKEN;\n\n    uint256 private _till = 1625039999;\n    uint256 private _vokenAmount = 4200000000000000; // 4.2 billion\n    uint256 private _3mo = 2592000; // Three months: 2,592,000 seconds\n\n    uint256[10] private _freezedPct = [\n        100,    // 100%\n        90,     // 90%\n        80,     // 80%\n        70,     // 70%\n        60,     // 60%\n        50,     // 50%\n        40,     // 40%\n        30,     // 30%\n        20,     // 20%\n        10      // 10%\n    ];\n\n    event Donate(address indexed account, uint256 amount);\n\n\n    /**\n     * @dev constructor\n     */\n    constructor() public {\n        VOKEN = IERC20(0x82070415FEe803f94Ce5617Be1878503e58F0a6a);\n    }\n\n    /**\n     * @dev Voken freezed amount.\n     */\n    function vokenFreezed() public view returns (uint256) {\n        uint256 __freezed;\n\n        if (now > _till) {\n            uint256 __qrPassed = now.sub(_till).div(_3mo);\n\n            if (__qrPassed >= 10) {\n                __freezed = 0;\n            }\n            else {\n                __freezed = _vokenAmount.mul(_freezedPct[__qrPassed]).div(100);\n            }\n\n            return __freezed;\n        }\n\n        return _vokenAmount;\n    }\n\n    /**\n     * @dev Donate\n     */\n    function () external payable {\n        emit Donate(msg.sender, msg.value);\n    }\n\n    /**\n     * @dev transfer Voken\n     */\n    function transferVoken(address to, uint256 amount) external onlyOwner {\n        uint256 __freezed = vokenFreezed();\n        uint256 __released = VOKEN.balanceOf(address(this)).sub(__freezed);\n\n        require(__released >= amount);\n\n        assert(VOKEN.transfer(to, amount));\n    }\n\n    /**\n     * @dev Rescue compatible ERC20 Token, except \"Voken\"\n     *\n     * @param tokenAddr ERC20 The address of the ERC20 token contract\n     * @param receiver The address of the receiver\n     * @param amount uint256\n     */\n    function rescueTokens(address tokenAddr, address receiver, uint256 amount) external onlyOwner {\n        IERC20 _token = IERC20(tokenAddr);\n        require(VOKEN != _token);\n        require(receiver != address(0));\n    \n        uint256 balance = _token.balanceOf(address(this));\n        require(balance >= amount);\n        assert(_token.transfer(receiver, amount));\n    }\n}",
  "bytecode": "6360dc247f600255660eebe0b40e800060035562278d006004556101c060405260646080908152605a60a052605060c052604660e052603c61010052603261012052602861014052601e61016052601461018052600a6101a0819052610067916005916100e9565b5034801561007457600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600180546001600160a01b0319167382070415fee803f94ce5617be1878503e58f0a6a179055610149565b82600a810192821561011c579160200282015b8281111561011c578251829060ff169055916020019190600101906100fc565b5061012892915061012c565b5090565b61014691905b808211156101285760008155600101610132565b90565b6106eb806101586000396000f3fe6080604052600436106100705760003560e01c80639b28fa7b1161004e5780639b28fa7b1461014d578063cea9d26f14610162578063f2fde38b146101a5578063face064c146101d857610070565b8063522f6815146100a85780635f1be196146100e35780638da5cb5b1461011c575b60408051348152905133917f0553260a2e46b0577270d8992db02d30856ca880144c72d6e9503760946aef13919081900360200190a2005b3480156100b457600080fd5b506100e1600480360360408110156100cb57600080fd5b506001600160a01b0381351690602001356101ff565b005b3480156100ef57600080fd5b506100e16004803603604081101561010657600080fd5b506001600160a01b038135169060200135610274565b34801561012857600080fd5b506101316103c1565b604080516001600160a01b039092168252519081900360200190f35b34801561015957600080fd5b506101316103d1565b34801561016e57600080fd5b506100e16004803603606081101561018557600080fd5b506001600160a01b038135811691602081013590911690604001356103e0565b3480156101b157600080fd5b506100e1600480360360208110156101c857600080fd5b50356001600160a01b0316610548565b3480156101e457600080fd5b506101ed6105c0565b60408051918252519081900360200190f35b6000546001600160a01b0316331461021657600080fd5b6001600160a01b03821661022957600080fd5b30318181101561023857600080fd5b6040516001600160a01b0384169083156108fc029084906000818181858888f1935050505015801561026e573d6000803e3d6000fd5b50505050565b6000546001600160a01b0316331461028b57600080fd5b60006102956105c0565b60015460408051600160e01b6370a0823102815230600482015290519293506000926103279285926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156102ef57600080fd5b505afa158015610303573d6000803e3d6000fd5b505050506040513d602081101561031957600080fd5b50519063ffffffff61064216565b90508281101561033657600080fd5b60015460408051600160e01b63a9059cbb0281526001600160a01b038781166004830152602482018790529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b505050506040513d60208110156103b957600080fd5b505161026e57fe5b6000546001600160a01b03165b90565b6001546001600160a01b031681565b6000546001600160a01b031633146103f757600080fd5b60015483906001600160a01b038083169116141561041457600080fd5b6001600160a01b03831661042757600080fd5b60408051600160e01b6370a0823102815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b15801561047457600080fd5b505afa158015610488573d6000803e3d6000fd5b505050506040513d602081101561049e57600080fd5b50519050828110156104af57600080fd5b816001600160a01b031663a9059cbb85856040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b505050506040513d602081101561053957600080fd5b505161054157fe5b5050505050565b6000546001600160a01b0316331461055f57600080fd5b6001600160a01b03811661057257600080fd5b600080546001600160a01b0319166001600160a01b0383811691821780845560405192939116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60008060025442111561063a5760006105f66004546105ea6002544261064290919063ffffffff16565b9063ffffffff61065916565b9050600a81106106095760009150610632565b61062f60646105ea600584600a811061061e57fe5b01546003549063ffffffff61069a16565b91505b5090506103ce565b505060035490565b60008282111561064e57fe5b508082035b92915050565b600080821161066457fe5b600082848161066f57fe5b04905082848161067b57fe5b0681840201841461068857fe5b82848161069157fe5b04949350505050565b6000826106a957506000610653565b50818102818382816106b757fe5b041461065357fefea165627a7a72305820d1dedeb4dcff767ddc9101e7923e29c05ec78e9882b82b4927d1cd053fa748200029"
}