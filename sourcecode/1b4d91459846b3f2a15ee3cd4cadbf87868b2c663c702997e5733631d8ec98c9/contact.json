{
  "address": "0x9998db897783603c9344ed2678ab1b5d73d0f7c3",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "IGTToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-02\n*/\n\npragma solidity ^0.4.23;\n\ncontract ERC20Basic {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender)\n        public view returns (uint256);\n\n    function transferFrom(address from, address to, uint256 value)\n        public returns (bool);\n\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n    );\n}\n\n\n\nlibrary SafeMath {\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        if (a == 0) {\n            return 0;\n        }\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n\n\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n\n    uint256 totalSupply_;\n\n    function totalSupply() public view returns (uint256) {\n        return totalSupply_;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n  \n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances[_owner];\n    }\n\n}\n\n\ncontract StandardToken is ERC20, BasicToken {\n\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    )\n        public\n        returns (bool)\n    {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n\n    function allowance(\n        address _owner,\n        address _spender\n    )\n    public\n    view\n    returns (uint256)\n    {\n        return allowed[_owner][_spender];\n    }\n\n\n    function increaseApproval(\n        address _spender,\n        uint _addedValue\n    )\n    public\n    returns (bool)\n    {\n        allowed[msg.sender][_spender] = (\n        allowed[msg.sender][_spender].add(_addedValue));\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n\n    function decreaseApproval(\n        address _spender,\n        uint _subtractedValue\n    )\n        public\n        returns (bool)\n    {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n}\n\n\ncontract IGTToken is StandardToken {\n    string public constant name = \"IGT Token\";\n    string public constant symbol = \"IGTT\";\n    uint32 public constant decimals = 18;\n    uint256 public INITIAL_SUPPLY = 21000000 * 1 ether;\n    address public CrowdsaleAddress;\n    uint256 public soldTokens;\n    bool public lockTransfers = true;\n\n    function getSoldTokens() public view returns (uint256) {\n        return soldTokens;\n    }\n\n\n  \n  \n    constructor(address _CrowdsaleAddress) public {\n    \n        CrowdsaleAddress = _CrowdsaleAddress;\n        totalSupply_ = INITIAL_SUPPLY;\n        balances[msg.sender] = INITIAL_SUPPLY;      \n    }\n  \n    modifier onlyOwner() {\n        require(msg.sender == CrowdsaleAddress);\n        _;\n    }\n\n    function setSoldTokens(uint256 _value) public onlyOwner {\n        soldTokens = _value;\n    }\n\n    function acceptTokens(address _from, uint256 _value) public onlyOwner returns (bool){\n        require (balances[_from] >= _value);\n        balances[_from] = balances[_from].sub(_value);\n        balances[CrowdsaleAddress] = balances[CrowdsaleAddress].add(_value);\n        emit Transfer(_from, CrowdsaleAddress, _value);\n        return true;\n    }\n\n\n     // Override\n    function transfer(address _to, uint256 _value) public returns(bool){\n        if (msg.sender != CrowdsaleAddress){\n            require(!lockTransfers, \"Transfers are prohibited\");\n        }\n        return super.transfer(_to,_value);\n    }\n\n     // Override\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool){\n        if (msg.sender != CrowdsaleAddress){\n            require(!lockTransfers, \"Transfers are prohibited\");\n        }\n        return super.transferFrom(_from,_to,_value);\n    }\n\n    function lockTransfer(bool _lock) public onlyOwner {\n        lockTransfers = _lock;\n    }\n\n    function() external payable {\n        // The token contract don`t receive ether\n        revert();\n    }  \n}",
  "bytecode": "60806040526a115eec47f6cf7e350000006003556006805460ff1916600117905534801561002c57600080fd5b50604051602080610c78833981016040908152905160048054600160a060020a031916600160a060020a039092169190911790556003546001819055336000908152602081905291822055610bf190819061008790396000f3006080604052600436106101065763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461010b578063095ea7b31461019557806318160ddd146101cd57806320b44b29146101f457806323b872dd146102105780632ff2e9dc1461023a578063313ce5671461024f5780633cb8cfc81461027d5780635ed9ebfc146102a157806366188463146102b657806370a08231146102da57806382b74b89146102fb57806395d89b4114610310578063a6ceaeb814610325578063a9059cbb1461033a578063d73dd6231461035e578063dd62ed3e14610382578063e34dd755146103a9578063eaced5b7146103da575b600080fd5b34801561011757600080fd5b506101206103f2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015a578181015183820152602001610142565b50505050905090810190601f1680156101875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a157600080fd5b506101b9600160a060020a0360043516602435610429565b604080519115158252519081900360200190f35b3480156101d957600080fd5b506101e261048f565b60408051918252519081900360200190f35b34801561020057600080fd5b5061020e6004351515610495565b005b34801561021c57600080fd5b506101b9600160a060020a03600435811690602435166044356104bf565b34801561024657600080fd5b506101e2610559565b34801561025b57600080fd5b5061026461055f565b6040805163ffffffff9092168252519081900360200190f35b34801561028957600080fd5b506101b9600160a060020a0360043516602435610564565b3480156102ad57600080fd5b506101e261066a565b3480156102c257600080fd5b506101b9600160a060020a0360043516602435610670565b3480156102e657600080fd5b506101e2600160a060020a0360043516610760565b34801561030757600080fd5b506101b961077b565b34801561031c57600080fd5b50610120610784565b34801561033157600080fd5b506101e26107bb565b34801561034657600080fd5b506101b9600160a060020a03600435166024356107c1565b34801561036a57600080fd5b506101b9600160a060020a0360043516602435610859565b34801561038e57600080fd5b506101e2600160a060020a03600435811690602435166108f2565b3480156103b557600080fd5b506103be61091d565b60408051600160a060020a039092168252519081900360200190f35b3480156103e657600080fd5b5061020e60043561092c565b60408051808201909152600981527f49475420546f6b656e0000000000000000000000000000000000000000000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b600454600160a060020a031633146104ac57600080fd5b6006805460ff1916911515919091179055565b600454600090600160a060020a031633146105465760065460ff161561054657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f5472616e7366657273206172652070726f686962697465640000000000000000604482015290519081900360640190fd5b610551848484610948565b949350505050565b60035481565b601281565b600454600090600160a060020a0316331461057e57600080fd5b600160a060020a0383166000908152602081905260409020548211156105a357600080fd5b600160a060020a0383166000908152602081905260409020546105cc908363ffffffff610abf16565b600160a060020a038085166000908152602081905260408082209390935560045490911681522054610604908363ffffffff610ad116565b60048054600160a060020a03908116600090815260208181526040918290209490945591548251868152925190821693918716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a350600192915050565b60055481565b336000908152600260209081526040808320600160a060020a0386168452909152812054808311156106c557336000908152600260209081526040808320600160a060020a03881684529091528120556106fa565b6106d5818463ffffffff610abf16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b60065460ff1681565b60408051808201909152600481527f4947545400000000000000000000000000000000000000000000000000000000602082015281565b60055490565b600454600090600160a060020a031633146108485760065460ff161561084857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f5472616e7366657273206172652070726f686962697465640000000000000000604482015290519081900360640190fd5b6108528383610ae4565b9392505050565b336000908152600260209081526040808320600160a060020a038616845290915281205461088d908363ffffffff610ad116565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600454600160a060020a031681565b600454600160a060020a0316331461094357600080fd5b600555565b6000600160a060020a038316151561095f57600080fd5b600160a060020a03841660009081526020819052604090205482111561098457600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156109b457600080fd5b600160a060020a0384166000908152602081905260409020546109dd908363ffffffff610abf16565b600160a060020a038086166000908152602081905260408082209390935590851681522054610a12908363ffffffff610ad116565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610a54908363ffffffff610abf16565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b600082821115610acb57fe5b50900390565b81810182811015610ade57fe5b92915050565b6000600160a060020a0383161515610afb57600080fd5b33600090815260208190526040902054821115610b1757600080fd5b33600090815260208190526040902054610b37908363ffffffff610abf16565b3360009081526020819052604080822092909255600160a060020a03851681522054610b69908363ffffffff610ad116565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3506001929150505600a165627a7a723058202cb346c38dbdb84be05524fff652297f64db33d58396f66a94994409fcb824b1002900000000000000000000000056f57384492c0f3d746199fac7e5b848363f9148",
  "constructorArguments": "00000000000000000000000056f57384492c0f3d746199fac7e5b848363f9148"
}