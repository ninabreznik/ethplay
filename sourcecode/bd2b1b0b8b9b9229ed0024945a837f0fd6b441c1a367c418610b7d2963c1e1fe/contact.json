{
  "address": "0x07829cca2f215ced7aa41e51921f6dd42c906190",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DiceGame",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-07\n*/\n\npragma solidity ^0.4.24;\n\ncontract DiceGame {\n   \n    uint constant HOUSE_EDGE_MINIMUM_AMOUNT = 0.0003 ether;\n    uint constant MIN_BET = 0.01 ether;\n    uint constant MAX_AMOUNT = 1000 ether;\n    uint constant MAX_ROLL_UNDER = 96;\n    uint constant MIN_ROLL_UNDER = 1;\n    uint constant BET_EXPIRATION_BLOCKS = 250;\n\n    address public croupier;\n    uint public maxProfit;\n    uint128 public lockedInBets;\n    uint128 public lockedInviteProfits;\n\n    // A structure representing a single bet.\n    struct Game {\n        uint amount;\n        uint8 rollUnder;\n        uint40 placeBlockNumber;\n        address player;\n        address inviter;\n        bool finished;\n    }\n\n    mapping (uint => Game) public bets;\n    mapping (bytes32 => bool) public administrators;\n    mapping (address => uint) public inviteProfits;\n\n    \n    // Events \n    event FailedPayment(address indexed beneficiary, uint amount);\n    event Payment(address indexed beneficiary, uint amount);\n    event ShowResult(uint reveal, uint result );\n    event Commit(uint commit);\n\n\n    modifier onlyAdmin {\n        address _customerAddress = msg.sender;\n        require(administrators[keccak256(abi.encodePacked(_customerAddress))], \"Only Admin could call this function.\");\n        _;\n    }\n\n    modifier onlyCroupier {\n        require (msg.sender == croupier, \"Only croupier could call this function\");\n        _;\n    }\n\n    constructor (address _croupier, uint _maxProfit) public {\n        administrators[0x4c709c79c406763d17c915eedc9f1af255061e3bf2e93e236a24e01486c7713a] = true;\n        croupier = _croupier;\n        require(_maxProfit < MAX_AMOUNT, \"maxProfit should be a sane number\");\n        maxProfit = _maxProfit;\n        lockedInBets = 0;\n        lockedInviteProfits = 0;\n    }\n\n    function() public payable {\n    }\n\n    function setAdministrator(bytes32 _identifier, bool _status) external onlyAdmin {\n        administrators[_identifier] = _status;\n    }\n\n    function setCroupier(address newCroupier) external onlyAdmin {\n        croupier = newCroupier;\n    }\n\n    function setMaxProfit(uint _maxProfit) external onlyAdmin {\n        require (_maxProfit < MAX_AMOUNT, \"maxProfit should be a sane number.\");\n        maxProfit = _maxProfit;\n    }\n\n    function withdrawFunds(address beneficiary, uint withdrawAmount) external onlyAdmin {\n        require (withdrawAmount <= address(this).balance, \"Increase amount larger than balance.\");\n        require (lockedInBets + withdrawAmount <= address(this).balance, \"Not enough funds.\");\n        sendFunds(beneficiary, withdrawAmount);\n    }\n\n    function kill(address _owner) external onlyAdmin {\n        require (lockedInBets == 0, \"All games should be processed (settled or refunded) before self-destruct.\");\n        selfdestruct(_owner);\n    }\n\n    function placeGame(\n        uint rollUnder, \n        uint commitLastBlock, \n        uint commit, \n        bytes32 r, \n        bytes32 s,\n        address inviter\n    ) external payable {\n        Game storage bet = bets[commit];\n        require (bet.player == address(0), \"Game should be in a 'clean' state.\");\n        require (msg.sender != inviter, \"Player and inviter should be different\");\n        uint amount = msg.value;\n        require (amount >= MIN_BET && amount <= MAX_AMOUNT, \"Amount should be in range\");\n        require (block.number <= commitLastBlock, \"Commit has expired\");\n\n        bytes memory prefix = \"\\x19Ethereum Signed Message:\\n32\";\n        bytes32 signatureHash = keccak256(abi.encodePacked(prefix,commit));\n\n        require (croupier == ecrecover(signatureHash, 27, r, s), \"Invalid signature\");\n        require (rollUnder >= MIN_ROLL_UNDER && rollUnder <= MAX_ROLL_UNDER, \"Roll under should be within range.\");\n        \n        uint possibleWinAmount;\n        uint inviteProfit;\n        address amountInvitor = inviter != croupier ? inviter : 0;\n\n        (possibleWinAmount,inviteProfit) = getDiceWinAmount(amount, rollUnder, amountInvitor);\n\n        require (possibleWinAmount <= amount + maxProfit, \"maxProfit limit violation.\");\n\n        lockedInBets += uint128(possibleWinAmount);\n        lockedInviteProfits += uint128(inviteProfit);\n\n        require ((lockedInBets + lockedInviteProfits)  <= address(this).balance, \"Cannot afford to lose this bet.\");\n\n        emit Commit(commit);\n\n        bet.amount = amount;\n        bet.rollUnder = uint8(rollUnder);\n        bet.placeBlockNumber = uint40(block.number);\n        bet.player = msg.sender;\n        bet.finished = false;\n        if (inviter != croupier) {\n            bet.inviter = inviter;\n        }\n    }\n\n    function settleGame(uint reveal, bytes32 blockHash) external onlyCroupier {\n        uint commit = uint(keccak256(abi.encodePacked(reveal)));\n\n        Game storage bet = bets[commit];\n        uint placeBlockNumber = bet.placeBlockNumber;\n\n        require (block.number > placeBlockNumber, \"settleGame in the same block as placeGame, or before.\");\n        require (block.number <= placeBlockNumber + BET_EXPIRATION_BLOCKS, \"Game has expired\");\n        require (blockhash(placeBlockNumber) == blockHash, \"Blockhash is not correct\");\n\n        settleGameCommon(bet, reveal, blockHash);\n    }\n\n    function refundGame(uint commit) external {\n        Game storage bet = bets[commit];\n        bet.finished = true;\n        uint amount = bet.amount;\n\n        require (amount != 0, \"Game should be in an 'active' state\");\n\n        require (block.number > bet.placeBlockNumber + BET_EXPIRATION_BLOCKS, \"Game has not expired yet\");\n\n        bet.amount = 0;\n\n        uint diceWinAmount;\n        uint inviteProfit;\n        (diceWinAmount,inviteProfit) = getDiceWinAmount(amount, bet.rollUnder, bet.inviter);\n\n        lockedInBets -= uint128(diceWinAmount);\n\n        sendFunds(bet.player, amount);\n    }\n\n    function withdrawInvitationProfit() external {\n        uint amount = inviteProfits[msg.sender];\n        require(amount > 0, \"no profit\");\n        inviteProfits[msg.sender] = 0;\n        lockedInviteProfits -= uint128(amount);\n        sendFunds(msg.sender, amount);\n    }\n\n    function getInvitationBalance() external view returns (uint profit){\n        profit = inviteProfits[msg.sender];\n    }\n\n  \n    function settleGameCommon(Game storage bet, uint reveal, bytes32 entropyBlockHash) private {\n        uint amount = bet.amount;\n        uint rollUnder = bet.rollUnder;\n        address player = bet.player;\n\n        require (amount != 0, \"Game should be in an 'active' state\");\n        bet.amount = 0;\n\n        bytes32 seed = keccak256(abi.encodePacked(reveal, entropyBlockHash));\n\n        uint dice = uint(seed) % 100 + 1;\n        \n        emit ShowResult(reveal, dice);\n\n        uint diceWinAmount;\n        uint inviteProfit;\n        \n        (diceWinAmount, inviteProfit) = getDiceWinAmount(amount, rollUnder, bet.inviter);\n\n        uint diceWin = 0;\n        \n        if (dice <= rollUnder) {\n            diceWin = diceWinAmount;\n        }\n        lockedInBets -= uint128(diceWinAmount);\n        inviteProfits[bet.inviter] += inviteProfit;\n        \n        bet.finished = true;\n        sendFunds(player, diceWin);\n    }\n\n    function sendFunds(address beneficiary, uint amount) private {\n        if (amount > 0){\n            if (beneficiary.send(amount)) {\n                emit Payment(beneficiary, amount);\n            } else {\n                emit FailedPayment(beneficiary, amount);\n            }\n        }\n    }\n\n\n    function getDiceWinAmount(uint amount, uint rollUnder, address inviter) private pure returns (uint winAmount, uint inviteProfit) {\n        require (MIN_ROLL_UNDER <= rollUnder && rollUnder <= MAX_ROLL_UNDER, \"Win probability out of range.\");\n        uint houseEdge = amount / 50;\n        inviteProfit = 0;\n        if (inviter > 0) {\n            inviteProfit = amount / 100;\n            houseEdge = amount / 100;   \n        }\n\n        if (houseEdge < HOUSE_EDGE_MINIMUM_AMOUNT) {\n            houseEdge = HOUSE_EDGE_MINIMUM_AMOUNT;\n        }\n\n        require (houseEdge <= amount, \"Bet doesn't even cover house edge.\");\n        winAmount = (amount - houseEdge - inviteProfit) * 100 / rollUnder;\n    }\n\n}",
  "bytecode": "608060405234801561001057600080fd5b50604051604080612bc283398101806040528101908080519060200190929190805190602001909291905050506001600460007f4c709c79c406763d17c915eedc9f1af255061e3bf2e93e236a24e01486c7713a60010260001916815260200190815260200160002060006101000a81548160ff021916908315150217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550683635c9adc5dea0000081101515610176576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f6d617850726f6669742073686f756c6420626520612073616e65206e756d626581526020017f720000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b806001819055506000600260006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000600260106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050506129c0806102026000396000f3006080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309bf84fb146100f35780631a53c5fb1461014257806322af00fa146101b25780633032b3a714610286578063392efb521461029d5780634a161af6146102e65780636b5c5f391461032157806389135ae914610378578063895c9e66146103b5578063b539cd551461040c578063c107532914610437578063cbf0b0c014610484578063d7260cba146104c7578063df88126f146104f4578063e3ef679614610543578063f8bb201c1461056e578063fbd668a9146105b1575b005b3480156100ff57600080fd5b506101086105de565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101b060048036038101908080359060200190929190803590602001909291908035906020019092919080356000191690602001909291908035600019169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610600565b005b3480156101be57600080fd5b506101dd60048036038101908080359060200190929190505050610ff3565b604051808781526020018660ff1660ff1681526020018564ffffffffff1664ffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001965050505050505060405180910390f35b34801561029257600080fd5b5061029b61109a565b005b3480156102a957600080fd5b506102cc6004803603810190808035600019169060200190929190505050611202565b604051808215151515815260200191505060405180910390f35b3480156102f257600080fd5b5061031f600480360381019080803590602001909291908035600019169060200190929190505050611222565b005b34801561032d57600080fd5b50610336611577565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561038457600080fd5b506103b3600480360381019080803560001916906020019092919080351515906020019092919050505061159c565b005b3480156103c157600080fd5b506103f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611758565b6040518082815260200191505060405180910390f35b34801561041857600080fd5b50610421611770565b6040518082815260200191505060405180910390f35b34801561044357600080fd5b50610482600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611776565b005b34801561049057600080fd5b506104c5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a7f565b005b3480156104d357600080fd5b506104f260048036038101908080359060200190929190505050611d10565b005b34801561050057600080fd5b50610509611f68565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561054f57600080fd5b50610558611f8a565b6040518082815260200191505060405180910390f35b34801561057a57600080fd5b506105af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fd1565b005b3480156105bd57600080fd5b506105dc60048036038101908080359060200190929190505050612199565b005b600260109054906101000a90046fffffffffffffffffffffffffffffffff1681565b6000806060600080600080600360008c81526020019081526020016000209650600073ffffffffffffffffffffffffffffffffffffffff168760010160069054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561070e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f47616d652073686f756c6420626520696e20612027636c65616e27207374617481526020017f652e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f506c6179657220616e6420696e76697465722073686f756c642062652064696681526020017f666572656e74000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b349550662386f26fc1000086101580156107fb5750683635c9adc5dea000008611155b151561086f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f416d6f756e742073686f756c6420626520696e2072616e67650000000000000081525060200191505060405180910390fd5b8b43111515156108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f436f6d6d6974206861732065787069726564000000000000000000000000000081525060200191505060405180910390fd5b6040805190810160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509450848b6040516020018083805190602001908083835b6020831015156109595780518252602082019150602081019050602083039250610934565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156109c957805182526020820191506020810190506020830392506109a4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209350600184601b8c8c604051600081526020016040526040518085600019166000191681526020018460ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1158015610a6d573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610b3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f496e76616c6964207369676e617475726500000000000000000000000000000081525060200191505060405180910390fd5b60018d10158015610b4c575060608d11155b1515610be6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526f6c6c20756e6465722073686f756c642062652077697468696e2072616e6781526020017f652e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161415610c42576000610c44565b875b9050610c51868e836123ce565b809350819450505060015486018311151515610cd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f6d617850726f666974206c696d69742076696f6c6174696f6e2e00000000000081525060200191505060405180910390fd5b82600260008282829054906101000a90046fffffffffffffffffffffffffffffffff160192506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555081600260108282829054906101000a90046fffffffffffffffffffffffffffffffff160192506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff1631600260109054906101000a90046fffffffffffffffffffffffffffffffff16600260009054906101000a90046fffffffffffffffffffffffffffffffff16016fffffffffffffffffffffffffffffffff1611151515610e68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f43616e6e6f74206166666f726420746f206c6f73652074686973206265742e0081525060200191505060405180910390fd5b7f5bdd2fc99022530157777690475b670d3872f32262eb1d47d9ba8000dad58f878b6040518082815260200191505060405180910390a18587600001819055508c8760010160006101000a81548160ff021916908360ff160217905550438760010160016101000a81548164ffffffffff021916908364ffffffffff160217905550338760010160066101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008760020160146101000a81548160ff0219169083151502179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141515610fe457878760020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505050505050505050505050565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900464ffffffffff16908060010160069054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16905086565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081111515611156576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f2070726f666974000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600260108282829054906101000a90046fffffffffffffffffffffffffffffffff160392506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506111ff3382612580565b50565b60046020528060005260406000206000915054906101000a900460ff1681565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611311576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f6e6c792063726f757069657220636f756c642063616c6c207468697320667581526020017f6e6374696f6e000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b84604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b6020831015156113665780518252602082019150602081019050602083039250611341565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900492506003600084815260200190815260200160002091508160010160019054906101000a900464ffffffffff1664ffffffffff169050804311151561146a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001807f736574746c6547616d6520696e207468652073616d6520626c6f636b2061732081526020017f706c61636547616d652c206f72206265666f72652e000000000000000000000081525060400191505060405180910390fd5b60fa810143111515156114e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f47616d652068617320657870697265640000000000000000000000000000000081525060200191505060405180910390fd5b8360001916814060001916141515611565576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f426c6f636b68617368206973206e6f7420636f7272656374000000000000000081525060200191505060405180910390fd5b61157082868661266a565b5050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003390506004600082604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b6020831015156116355780518252602082019150602081019050602083039250611610565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515611720576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f4f6e6c792041646d696e20636f756c642063616c6c20746869732066756e637481526020017f696f6e2e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8160046000856000191660001916815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60056020528060005260406000206000915090505481565b60015481565b60003390506004600082604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b60208310151561180f57805182526020820191506020810190506020830392506117ea565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615156118fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f4f6e6c792041646d696e20636f756c642063616c6c20746869732066756e637481526020017f696f6e2e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163182111515156119af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f496e63726561736520616d6f756e74206c6172676572207468616e2062616c6181526020017f6e63652e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163182600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff160111151515611a70576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4e6f7420656e6f7567682066756e64732e00000000000000000000000000000081525060200191505060405180910390fd5b611a7a8383612580565b505050565b60003390506004600082604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b602083101515611b185780518252602082019150602081019050602083039250611af3565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515611c03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f4f6e6c792041646d696e20636f756c642063616c6c20746869732066756e637481526020017f696f6e2e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16141515611cf7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260498152602001807f416c6c2067616d65732073686f756c642062652070726f63657373656420287381526020017f6574746c6564206f7220726566756e64656429206265666f72652073656c662d81526020017f64657374727563742e000000000000000000000000000000000000000000000081525060600191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16ff5b60008060008060036000868152602001908152602001600020935060018460020160146101000a81548160ff0219169083151502179055508360000154925060008314151515611dee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f47616d652073686f756c6420626520696e20616e20276163746976652720737481526020017f617465000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60fa8460010160019054906101000a900464ffffffffff1664ffffffffff160143111515611e84576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f47616d6520686173206e6f74206578706972656420796574000000000000000081525060200191505060405180910390fd5b60008460000181905550611ed1838560010160009054906101000a900460ff1660ff168660020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166123ce565b809250819350505081600260008282829054906101000a90046fffffffffffffffffffffffffffffffff160392506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550611f618460010160069054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684612580565b5050505050565b600260009054906101000a90046fffffffffffffffffffffffffffffffff1681565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60003390506004600082604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b60208310151561206a5780518252602082019150602081019050602083039250612045565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515612155576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f4f6e6c792041646d696e20636f756c642063616c6c20746869732066756e637481526020017f696f6e2e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60003390506004600082604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b602083101515612232578051825260208201915060208101905060208303925061220d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151561231d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f4f6e6c792041646d696e20636f756c642063616c6c20746869732066756e637481526020017f696f6e2e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b683635c9adc5dea00000821015156123c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f6d617850726f6669742073686f756c6420626520612073616e65206e756d626581526020017f722e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b816001819055505050565b6000806000846001111580156123e5575060608511155b1515612459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f57696e2070726f626162696c697479206f7574206f662072616e67652e00000081525060200191505060405180910390fd5b60328681151561246557fe5b0490506000915060008473ffffffffffffffffffffffffffffffffffffffff1611156124aa5760648681151561249757fe5b0491506064868115156124a657fe5b0490505b660110d9316ec0008110156124c457660110d9316ec00090505b858111151515612562576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f42657420646f65736e2774206576656e20636f76657220686f7573652065646781526020017f652e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b84606483838903030281151561257457fe5b04925050935093915050565b6000811115612666578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015612616578173ffffffffffffffffffffffffffffffffffffffff167fd4f43975feb89f48dd30cabbb32011045be187d1e11c8ea9faa43efc35282519826040518082815260200191505060405180910390a2612665565b8173ffffffffffffffffffffffffffffffffffffffff167fac464fe4d3a86b9121261ac0a01dd981bfe0777c7c9d9c8f4473d31a9c0f9d2d826040518082815260200191505060405180910390a25b5b5050565b6000806000806000806000808a6000015497508a60010160009054906101000a900460ff1660ff1696508a60010160069054906101000a900473ffffffffffffffffffffffffffffffffffffffff1695506000881415151561275a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f47616d652073686f756c6420626520696e20616e20276163746976652720737481526020017f617465000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60008b600001819055508989604051602001808381526020018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156127c957805182526020820191506020810190506020830392506127a4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020945060016064866001900481151561280a57fe5b060193507f0de2c806e4e5828c90f97cde098331ae12b1d49a17ffa59f3d1fad3bdfee5e4f8a85604051808381526020018281526020019250505060405180910390a161287c88888d60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166123ce565b8093508194505050600090508684111515612895578290505b82600260008282829054906101000a90046fffffffffffffffffffffffffffffffff160392506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555081600560008d60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555060018b60020160146101000a81548160ff0219169083151502179055506129878682612580565b50505050505050505050505600a165627a7a723058204f16e6739aeb0ea3e1048a6c733b85ffecf1df7cac099aa5d09210ab6a6f8f4a0029000000000000000000000000ab3204d4ae7d4bbff4207df0946d6728dcc35e7100000000000000000000000000000000000000000000000029a2241af62c0000",
  "constructorArguments": "000000000000000000000000ab3204d4ae7d4bbff4207df0946d6728dcc35e7100000000000000000000000000000000000000000000000029a2241af62c0000"
}