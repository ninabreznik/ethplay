{
  "address": "0x4acd03e3f95272b7c12e4dfbe54ba7a72d9c6076",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MOCoinstantine",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-27\n*/\n\npragma solidity ^0.5.0;\n\ninterface Token {\n  /// @return total amount of tokens\n  function totalSupply() external view returns (uint256 supply);\n\n  /// @param _owner The address from which the balance will be retrieved\n  /// @return The balance\n  function balanceOf(address _owner) external view returns (uint256 balance);\n\n  /// @notice send `_value` token to `_to` from `msg.sender`\n  /// @param _to The address of the recipient\n  /// @param _value The amount of token to be transferred\n  /// @return Whether the transfer was successful or not\n  function transfer(address _to, uint256 _value) external returns (bool success);\n\n  /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n  /// @param _from The address of the sender\n  /// @param _to The address of the recipient\n  /// @param _value The amount of token to be transferred\n  /// @return Whether the transfer was successful or not\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\n\n  /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\n  /// @param _spender The address of the account able to transfer the tokens\n  /// @param _value The amount of wei to be approved for transfer\n  /// @return Whether the approval was successful or not\n  function approve(address _spender, uint256 _value) external returns (bool success);\n\n  /// @param _owner The address of the account owning tokens\n  /// @param _spender The address of the account able to transfer the tokens\n  /// @return Amount of remaining tokens allowed to spent\n  function allowance(address _owner, address _spender) external view returns (uint256 remaining);\n\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\nlibrary SafeMath {\n    function safeMul(uint a, uint b) internal pure returns (uint) {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeSub(uint a, uint b) internal pure returns (uint) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint a, uint b) internal pure returns (uint) {\n        uint c = a + b;\n        assert(c>=a && c>=b);\n        return c;\n    }\n\n    function safeDiv(uint a, uint b) internal pure returns (uint) {\n        assert(b > 0);\n        uint c = a / b;\n        assert(a == b * c + a % b);\n        return c;\n    }\n}\n\ncontract ERC20 is Token {\n    using SafeMath for uint256;\n    \n    mapping (address => uint256) public balance;\n\n    mapping (address => mapping (address => uint256)) public allowed;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event TransferFrom(address indexed spender, address indexed from, address indexed to, uint256 _value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    uint256 constant private MAX_UINT256 = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(_to != address(0), \"Can't send to null\");\n\n        balance[msg.sender] = balance[msg.sender].safeSub(_value);\n        balance[_to] = balance[_to].safeAdd(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_to != address(0), \"Can't send to null\");\n        require(_to != address(this), \"Can't send to contract\");\n        \n        uint256 allowance = allowed[_from][msg.sender];\n        require(_value <= allowance || _from == msg.sender, \"Not allowed to send that much\");\n\n        balance[_to] = balance[_to].safeAdd(_value);\n        balance[_from] = balance[_from].safeSub(_value);\n\n        if (allowed[_from][msg.sender] != MAX_UINT256 && _from != msg.sender) {\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].safeSub(_value);\n        }\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n    * @notice `msg.sender` approves `_spender` to spend `_value` tokens\n    *\n    * @param _spender The address of the account able to transfer the tokens\n    * @param _value The amount of tokens to be approved for transfer\n    * @return Whether the approval was successful or not\n    */\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        require(_spender != address(0), \"spender can't be null\");\n\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        remaining = allowed[_owner][_spender];\n    } \n\n    function totalSupply() public view returns (uint256 supply) {\n        return 0;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 ownerBalance) {\n        return balance[_owner];\n    }\n}\n\ncontract Ownable {\n    address payable public admin;\n\n  /**\n   * @dev The Ownable constructor sets the original `admin` of the contract to the sender\n   * account.\n   */\n    constructor() public {\n        admin = msg.sender;\n    }\n\n  /**\n   * @dev Throws if called by any account other than the admin.\n   */\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Function reserved to admin\");\n        _;\n    }\n\n  /**\n   * @dev Allows the current admin to transfer control of the contract to a new admin.\n   * @param _newAdmin The address to transfer ownership to.\n   */\n\n    function transferOwnership(address payable _newAdmin) public onlyAdmin {\n        require(_newAdmin != address(0), \"New admin can't be null\");      \n        admin = _newAdmin;\n    }\n\n    function destroy() onlyAdmin public {\n        selfdestruct(admin);\n    }\n\n    function destroyAndSend(address payable _recipient) public onlyAdmin {\n        selfdestruct(_recipient);\n    }\n}\n\ncontract NotTransferable is ERC20, Ownable {\n    /// @notice Enables token holders to transfer their tokens freely if true\n   /// @param _enabledTransfer True if transfers are allowed in the clone\n    bool public enabledTransfer = false;\n\n    function enableTransfers(bool _enabledTransfer) public onlyAdmin {\n        enabledTransfer = _enabledTransfer;\n    }\n\n    function transferFromContract(address _to, uint256 _value) public onlyAdmin returns (bool success) {\n        return super.transfer(_to, _value);\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(enabledTransfer, \"Transfers are not allowed yet\");\n        return super.transfer(_to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(enabledTransfer, \"Transfers are not allowed yet\");\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        require(enabledTransfer, \"Transfers are not allowed yet\");\n        return super.approve(_spender, _value);\n    }\n}\n\ncontract MOCoinstantine is NotTransferable {\n\n    string constant public NAME = \"MOCoinstantine\";\n\n    string constant public SYMBOL = \"MOC\";\n\n    uint8 constant public DECIMALS = 0;\n\n    uint256 public TOTALSUPPLY = 0;\n\n    constructor(uint256 totalSupply) public {\n        TOTALSUPPLY = totalSupply;\n        balance[msg.sender] = totalSupply;\n    }\n\n    function totalSupply() public view returns (uint256 supply) {\n        return TOTALSUPPLY;\n    }\n}",
  "bytecode": "608060405260028054600160a01b60ff0219169055600060035534801561002557600080fd5b50604051602080610e1c8339810180604052602081101561004557600080fd5b5051600280546001600160a01b031916339081179091556003829055600090815260208190526040902055610d9d8061007f6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063a3f4df7e116100ad578063f2fde38b11610071578063f2fde38b1461036b578063f41e60c514610391578063f5074f41146103b0578063f76f8d78146103d6578063f851a440146103de57610121565b8063a3f4df7e14610266578063a53ba959146102e3578063a9059cbb146102eb578063dd62ed3e14610317578063e3d670d71461034557610121565b80632e0f2625116100f45780632e0f2625146101e25780635c6581651461020057806370a082311461022e57806383197ef01461025457806394a08c691461025e57610121565b8063095ea7b31461012657806318160ddd146101665780631a88f3061461018057806323b872dd146101ac575b600080fd5b6101526004803603604081101561013c57600080fd5b506001600160a01b038135169060200135610402565b604080519115158252519081900360200190f35b61016e610477565b60408051918252519081900360200190f35b6101526004803603604081101561019657600080fd5b506001600160a01b03813516906020013561047d565b610152600480360360608110156101c257600080fd5b506001600160a01b038135811691602081013590911690604001356104da565b6101ea610551565b6040805160ff9092168252519081900360200190f35b61016e6004803603604081101561021657600080fd5b506001600160a01b0381358116916020013516610556565b61016e6004803603602081101561024457600080fd5b50356001600160a01b0316610573565b61025c61058e565b005b61016e6105ec565b61026e6105f2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102a8578181015183820152602001610290565b50505050905090810190601f1680156102d55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61015261062b565b6101526004803603604081101561030157600080fd5b506001600160a01b03813516906020013561063b565b61016e6004803603604081101561032d57600080fd5b506001600160a01b038135811691602001351661069f565b61016e6004803603602081101561035b57600080fd5b50356001600160a01b03166106ca565b61025c6004803603602081101561038157600080fd5b50356001600160a01b03166106dc565b61025c600480360360208110156103a757600080fd5b503515156107ac565b61025c600480360360208110156103c657600080fd5b50356001600160a01b031661082b565b61026e610887565b6103e66108a9565b604080516001600160a01b039092168252519081900360200190f35b600254600090600160a01b900460ff166104665760408051600160e51b62461bcd02815260206004820152601d60248201527f5472616e736665727320617265206e6f7420616c6c6f77656420796574000000604482015290519081900360640190fd5b61047083836108b8565b9392505050565b60035490565b6002546000906001600160a01b031633146104d05760408051600160e51b62461bcd02815260206004820152601a6024820152600080516020610d52833981519152604482015290519081900360640190fd5b610470838361097f565b600254600090600160a01b900460ff1661053e5760408051600160e51b62461bcd02815260206004820152601d60248201527f5472616e736665727320617265206e6f7420616c6c6f77656420796574000000604482015290519081900360640190fd5b610549848484610a85565b949350505050565b600081565b600160209081526000928352604080842090915290825290205481565b6001600160a01b031660009081526020819052604090205490565b6002546001600160a01b031633146105de5760408051600160e51b62461bcd02815260206004820152601a6024820152600080516020610d52833981519152604482015290519081900360640190fd5b6002546001600160a01b0316ff5b60035481565b6040518060400160405280600e81526020017f4d4f436f696e7374616e74696e6500000000000000000000000000000000000081525081565b600254600160a01b900460ff1681565b600254600090600160a01b900460ff166104d05760408051600160e51b62461bcd02815260206004820152601d60248201527f5472616e736665727320617265206e6f7420616c6c6f77656420796574000000604482015290519081900360640190fd5b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006020819052908152604090205481565b6002546001600160a01b0316331461072c5760408051600160e51b62461bcd02815260206004820152601a6024820152600080516020610d52833981519152604482015290519081900360640190fd5b6001600160a01b03811661078a5760408051600160e51b62461bcd02815260206004820152601760248201527f4e65772061646d696e2063616e2774206265206e756c6c000000000000000000604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031633146107fc5760408051600160e51b62461bcd02815260206004820152601a6024820152600080516020610d52833981519152604482015290519081900360640190fd5b60028054911515600160a01b0274ff000000000000000000000000000000000000000019909216919091179055565b6002546001600160a01b0316331461087b5760408051600160e51b62461bcd02815260206004820152601a6024820152600080516020610d52833981519152604482015290519081900360640190fd5b806001600160a01b0316ff5b604051806040016040528060038152602001600160e81b624d4f430281525081565b6002546001600160a01b031681565b60006001600160a01b0383166109185760408051600160e51b62461bcd02815260206004820152601560248201527f7370656e6465722063616e2774206265206e756c6c0000000000000000000000604482015290519081900360640190fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60006001600160a01b0383166109d75760408051600160e51b62461bcd0281526020600482015260126024820152600160721b7110d85b89dd081cd95b99081d1bc81b9d5b1b02604482015290519081900360640190fd5b336000908152602081905260409020546109f7908363ffffffff610d2416565b33600090815260208190526040808220929092556001600160a01b03851681522054610a29908363ffffffff610d3616565b6001600160a01b038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60006001600160a01b038316610add5760408051600160e51b62461bcd0281526020600482015260126024820152600160721b7110d85b89dd081cd95b99081d1bc81b9d5b1b02604482015290519081900360640190fd5b6001600160a01b038316301415610b3e5760408051600160e51b62461bcd02815260206004820152601660248201527f43616e27742073656e6420746f20636f6e747261637400000000000000000000604482015290519081900360640190fd5b6001600160a01b03841660009081526001602090815260408083203384529091529020548083111580610b7957506001600160a01b03851633145b610bcd5760408051600160e51b62461bcd02815260206004820152601d60248201527f4e6f7420616c6c6f77656420746f2073656e642074686174206d756368000000604482015290519081900360640190fd5b6001600160a01b038416600090815260208190526040902054610bf6908463ffffffff610d3616565b6001600160a01b038086166000908152602081905260408082209390935590871681522054610c2b908463ffffffff610d2416565b6001600160a01b03861660009081526020818152604080832093909355600181528282203383529052205460001914801590610c7057506001600160a01b0385163314155b15610cce576001600160a01b0385166000908152600160209081526040808320338452909152902054610ca9908463ffffffff610d2416565b6001600160a01b03861660009081526001602090815260408083203384529091529020555b836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3506001949350505050565b600082821115610d3057fe5b50900390565b6000828201838110801590610d4b5750828110155b61047057fefe46756e6374696f6e20726573657276656420746f2061646d696e000000000000a165627a7a72305820b397c1d55ce0b69ccbbba30b225599eee8324c138e1df1e3af66f5d390253f79002900000000000000000000000000000000000000000000000000000000005b8d80",
  "constructorArguments": "00000000000000000000000000000000000000000000000000000000005b8d80"
}