{
  "address": "0x556ea1fe7cb0964e7de8dfe6cde63f1e40908541",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DUSDProxy",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-06-06\n*/\n\npragma solidity 0.5.8;\n\n\n/**\n * @title Proxy\n * @dev This is the proxy contract for the DUSDToken Registry\n */\ncontract Proxy {\n    \n    /**\n    * @dev Tell the address of the implementation where every call will be delegated.\n    * @return address of the implementation to which it will be delegated\n    */\n    function implementation() public view returns (address);\n\n    /**\n    * @dev Fallback function allowing to perform a delegatecall to the given implementation.\n    * This function will return whatever the implementation call returns.\n    */\n    function() external payable {\n        address _impl = implementation();\n        require(_impl != address(0), \"Proxy: implementation contract not set\");\n        \n        assembly {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0, calldatasize)\n            let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\n            let size := returndatasize\n            returndatacopy(ptr, 0, size)\n\n            switch result\n            case 0 { revert(ptr, size) }\n            default { return(ptr, size) }\n        }\n    }\n}\n\n\n/**\n * @title UpgradeabilityProxy\n * @dev This contract represents a proxy where the implementation address to which it will delegate can be upgraded.\n */\ncontract UpgradeabilityProxy is Proxy {\n\n    // Event, it will be emitted every time the implementation gets upgraded.\n    event Upgraded(address indexed currentImplementation, address indexed newImplementation);\n\n    // Storage position of the address of the current implementation\n    bytes32 private constant implementationPosition = keccak256(\"DUSD.proxy.implementation\");\n\n    /**\n    * @dev Return to the current implementation.\n    */\n    function implementation() public view returns (address impl) {\n        bytes32 position = implementationPosition;\n        assembly {\n          impl := sload(position)\n        }\n    }\n\n    /**\n    * @dev Set the address of the current implementation.\n    * @param newImplementation address representing the new implementation to be set.\n    */\n    function _setImplementation(address newImplementation) internal {\n        bytes32 position = implementationPosition;\n        assembly {\n          sstore(position, newImplementation)\n        }\n    }\n\n    /**\n    * @dev Upgrade the implementation address.\n    * @param newImplementation representing the address of the new implementation to be set.\n    */\n    function _upgradeTo(address newImplementation) internal {\n        address currentImplementation = implementation();\n        require(currentImplementation != newImplementation, \"UpgradeabilityProxy: newImplementation is the same as currentImplementation\");\n        emit Upgraded(currentImplementation, newImplementation);\n        _setImplementation(newImplementation);\n    }\n}\n\n\n/**\n * @title DUSDProxy\n * @dev This contract combines an upgradeability proxy with basic authorization control functionalities\n */\ncontract DUSDProxy is UpgradeabilityProxy {\n\n    // Event to show ownership has been transferred.\n    event ProxyOwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    // Event to show ownership transfer is pending.\n    event NewPendingOwner(address currentOwner, address pendingOwner);\n    \n    // Storage position of the owner and pendingOwner of the contract.\n    bytes32 private constant proxyOwnerPosition = keccak256(\"DUSD.proxy.owner\");\n    bytes32 private constant pendingProxyOwnerPosition = keccak256(\"DUSD.pending.proxy.owner\");\n\n    /**\n    * @dev The constructor sets the original owner of the contract to the sender account.\n    */\n    constructor() public {\n        _setUpgradeabilityOwner(0xfe30e619cc2915C905Ca45C1BA8311109A3cBdB1);\n    }\n\n    /**\n    * @dev Throw if called by any account other than the proxy owner.\n    */\n    modifier onlyProxyOwner() {\n        require(msg.sender == proxyOwner(), \"DUSDProxy: the caller must be the proxy Owner\");\n        _;\n    }\n\n    /**\n    * @dev Throw if called by any account other than the pending owner.\n    */\n    modifier onlyPendingProxyOwner() {\n        require(msg.sender == pendingProxyOwner(), \"DUSDProxy: the caller must be the pending proxy Owner\");\n        _;\n    }\n\n    /**\n    * @dev Return the address of the proxy owner.\n    * @return The address of the proxy owner.\n    */\n    function proxyOwner() public view returns (address owner) {\n        bytes32 position = proxyOwnerPosition;\n        assembly {\n            owner := sload(position)\n        }\n    }\n\n    /**\n    * @dev Return the address of the pending proxy owner.\n    * @return The address of the pending proxy owner.\n    */\n    function pendingProxyOwner() public view returns (address pendingOwner) {\n        bytes32 position = pendingProxyOwnerPosition;\n        assembly {\n            pendingOwner := sload(position)\n        }\n    }\n\n    /**\n    * @dev Set the address of the proxy owner.\n    */\n    function _setUpgradeabilityOwner(address newProxyOwner) internal {\n        bytes32 position = proxyOwnerPosition;\n        assembly {\n            sstore(position, newProxyOwner)\n        }\n    }\n\n    /**\n    * @dev Set the address of the pending proxy owner.\n    */\n    function _setPendingUpgradeabilityOwner(address newPendingProxyOwner) internal {\n        bytes32 position = pendingProxyOwnerPosition;\n        assembly {\n            sstore(position, newPendingProxyOwner)\n        }\n    }\n\n    /**\n    * @dev Change the owner of the proxy.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferProxyOwnership(address newOwner) external onlyProxyOwner {\n        require(newOwner != address(0), \"DUSDProxy: cannot transfer control of the proxy owner to the zero address\");\n        _setPendingUpgradeabilityOwner(newOwner);\n        emit NewPendingOwner(proxyOwner(), newOwner);\n    }\n\n    /**\n    * @dev Allow the pendingOwner to claim ownership of the proxy.\n    */\n    function claimProxyOwnership() external onlyPendingProxyOwner {\n        emit ProxyOwnershipTransferred(proxyOwner(), pendingProxyOwner());\n        _setUpgradeabilityOwner(pendingProxyOwner());\n        _setPendingUpgradeabilityOwner(address(0));\n    }\n\n    /**\n    * @dev Allow the proxy owner to upgrade the current version of the proxy.\n    * @param implementation representing the address of the new implementation to be set.\n    */\n    function upgradeTo(address implementation) external onlyProxyOwner {\n        _upgradeTo(implementation);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"proxyOwner\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingProxyOwner\",\"outputs\":[{\"name\":\"pendingOwner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"name\":\"impl\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimProxyOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferProxyOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ProxyOwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"currentOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"NewPendingOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"currentImplementation\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5061003473fe30e619cc2915c905ca45c1ba8311109a3cbdb161003960201b60201c565b61006e565b604080517f445553442e70726f78792e6f776e6572000000000000000000000000000000008152905190819003601001902055565b6106eb8061007d6000396000f3fe6080604052600436106100555760003560e01c8063025313a2146100ce5780630add8140146100ff5780633659cfe6146101145780635c60da1b146101495780639965b3d61461015e578063f1739cae14610173575b600061005f6101a6565b90506001600160a01b0381166100a957604051600160e51b62461bcd0281526004018080602001828103825260268152602001806105a46026913960400191505060405180910390fd5b60405136600082376000803683855af43d806000843e8180156100ca578184f35b8184fd5b3480156100da57600080fd5b506100e36101dc565b604080516001600160a01b039092168252519081900360200190f35b34801561010b57600080fd5b506100e3610208565b34801561012057600080fd5b506101476004803603602081101561013757600080fd5b50356001600160a01b031661023e565b005b34801561015557600080fd5b506100e36101a6565b34801561016a57600080fd5b506101476102a4565b34801561017f57600080fd5b506101476004803603602081101561019657600080fd5b50356001600160a01b0316610368565b604080517f445553442e70726f78792e696d706c656d656e746174696f6e00000000000000815290519081900360190190205490565b60408051600160811b6f222aa9a217383937bc3c9737bbb732b902815290519081900360100190205490565b604080517f445553442e70656e64696e672e70726f78792e6f776e65720000000000000000815290519081900360180190205490565b6102466101dc565b6001600160a01b0316336001600160a01b03161461029857604051600160e51b62461bcd02815260040180806020018281038252602d815260200180610693602d913960400191505060405180910390fd5b6102a181610461565b50565b6102ac610208565b6001600160a01b0316336001600160a01b0316146102fe57604051600160e51b62461bcd0281526004018080602001828103825260358152602001806105ca6035913960400191505060405180910390fd5b610306610208565b6001600160a01b03166103176101dc565b6001600160a01b03167f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd960405160405180910390a361035c610357610208565b61050e565b6103666000610539565b565b6103706101dc565b6001600160a01b0316336001600160a01b0316146103c257604051600160e51b62461bcd02815260040180806020018281038252602d815260200180610693602d913960400191505060405180910390fd5b6001600160a01b03811661040a57604051600160e51b62461bcd0281526004018080602001828103825260498152602001806105ff6049913960600191505060405180910390fd5b61041381610539565b7fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b61043c6101dc565b604080516001600160a01b03928316815291841660208301528051918290030190a150565b600061046b6101a6565b9050816001600160a01b0316816001600160a01b031614156104c157604051600160e51b62461bcd02815260040180806020018281038252604b815260200180610648604b913960600191505060405180910390fd5b816001600160a01b0316816001600160a01b03167f5d611f318680d00598bb735d61bacf0c514c6b50e1e5ad30040a4df2b12791c760405160405180910390a361050a8261056e565b5050565b60408051600160811b6f222aa9a217383937bc3c9737bbb732b9028152905190819003601001902055565b604080517f445553442e70656e64696e672e70726f78792e6f776e657200000000000000008152905190819003601801902055565b604080517f445553442e70726f78792e696d706c656d656e746174696f6e00000000000000815290519081900360190190205556fe50726f78793a20696d706c656d656e746174696f6e20636f6e7472616374206e6f74207365744455534450726f78793a207468652063616c6c6572206d757374206265207468652070656e64696e672070726f7879204f776e65724455534450726f78793a2063616e6e6f74207472616e7366657220636f6e74726f6c206f66207468652070726f7879206f776e657220746f20746865207a65726f2061646472657373557067726164656162696c69747950726f78793a206e6577496d706c656d656e746174696f6e206973207468652073616d652061732063757272656e74496d706c656d656e746174696f6e4455534450726f78793a207468652063616c6c6572206d757374206265207468652070726f7879204f776e6572a165627a7a723058200968ee6228ffc3115383125c18ee0282bf8e0df1cf7e24a8bbb24287caed72430029"
}