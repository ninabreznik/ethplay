{
  "address": "0xc11326aa6bd9cea8b51f34097ba32c4e5d8aa8d5",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenERC20",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-22\n*/\n\npragma solidity ^0.4.21;\n\n\nlibrary SafeMath {\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract owned {\n    address public owner;\n\n    function owned() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address newOwner) onlyOwner public {\n        owner = newOwner;\n    }\n}\n\ncontract TokenERC20 is owned {\n\t\n    using SafeMath for uint256;\n    \n    string public constant name       = \"Potter coin\";\n    string public constant symbol     = \"POTB\";\n    uint32 public constant decimals   = 18;\n    uint256 public totalSupply;\n\n    mapping(address => uint256) balances;\n\tmapping(address => mapping (address => uint256)) internal allowed;\n\tmapping(address => bool) public frozenAccount;\n\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n     // This notifies clients about the amount burnt\n    event Burn(address indexed from, uint256 value);\n     /* This generates a public event on the blockchain that will notify clients */\n    event FrozenFunds(address target, bool frozen);\n\n\t\n\tfunction TokenERC20(\n        uint256 initialSupply\n    ) public {\n        totalSupply = initialSupply * 10 ** uint256(decimals);  // Update total supply with the decimal amount\n        balances[msg.sender] = totalSupply;                // Give the creator all initial tokens\n    }\n\t\n    function totalSupply() public view returns (uint256) {\n\t\treturn totalSupply;\n\t}\t\n\t\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {\n\t\trequire(_to != address(0));\n\t\trequire(_value <= balances[msg.sender]);\n\t\tif(!frozenAccount[msg.sender]){\n\t\t    balances[msg.sender] = balances[msg.sender].sub(_value);\n\t\t    balances[_to] = balances[_to].add(_value);\n\t\t    emit Transfer(msg.sender, _to, _value);\n\t\t    return true;\n\t\t} else{\n\t\t    return false;\n\t\t}\n\t\t\n\t}\n\t\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n\t\trequire(_to != address(0));\n\t\trequire(_value <= balances[_from]);\n\t\trequire(_value <= allowed[_from][msg.sender]);\n\t\tif(!frozenAccount[_from]){\n\t\t    balances[_from] = balances[_from].sub(_value);\n\t\t    balances[_to] = balances[_to].add(_value);\n\t\t    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\t\t    emit Transfer(_from, _to, _value);\n\t\t    return true;\n\t\t}else{\n\t\t    return false;\n\t\t}\n\t\t\n\t}\n\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n\t\tallowed[msg.sender][_spender] = _value;\n\t\temit Approval(msg.sender, _spender, _value);\n\t\treturn true;\n\t}\n\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n\t\treturn allowed[_owner][_spender];\n\t}\n\n\tfunction increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\t\treturn true;\n\t}\n\n\tfunction decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n\t\tuint oldValue = allowed[msg.sender][_spender];\n\t\tif (_subtractedValue > oldValue) {\n\t\t\tallowed[msg.sender][_spender] = 0;\n\t\t} else {\n\t\t\tallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n\t\t}\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\t\treturn true;\n\t}\n\t\n \n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n    \n    ////\n    /**\n     * Destroy tokens from other account\n     *\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\n     *\n     * @param _from the address of the sender\n     * @param _value the amount of money to burn\n     */\n     \n       function burnFrom(address _from, uint256 _value) public onlyOwner returns (bool success) {\n        require(balances[_from] >= _value);              \n        balances[_from] = balances[_from].sub(_value);                          \n        balances[msg.sender] = balances[msg.sender].add(_value);\n        return true;\n    }\n    \n  \n    /// @notice `freeze? Prevent | Allow` `target` from sending & receiving tokens\n    /// @param target Address to be frozen\n    /// @param freeze either to freeze it or not\n    function freezeAccount(address target, bool freeze) onlyOwner public {\n        frozenAccount[target] = freeze;\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b604051602080610b618339810160405280805160008054600160a060020a033316600160a060020a031990911681178255670de0b6b3a76400009092026001819055918152600260205260409020555050610af28061006f6000396000f3006060604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100ea578063095ea7b31461017457806318160ddd146101aa57806323b872dd146101cf578063313ce567146101f7578063661884631461022357806370a082311461024557806379cc6790146102645780638da5cb5b1461028657806395d89b41146102b5578063a9059cbb146102c8578063b414d4b6146102ea578063d73dd62314610309578063dd62ed3e1461032b578063e724529c14610350578063f2fde38b14610376575b600080fd5b34156100f557600080fd5b6100fd610395565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610139578082015183820152602001610121565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017f57600080fd5b610196600160a060020a03600435166024356103cc565b604051901515815260200160405180910390f35b34156101b557600080fd5b6101bd610439565b60405190815260200160405180910390f35b34156101da57600080fd5b610196600160a060020a036004358116906024351660443561043f565b341561020257600080fd5b61020a6105ec565b60405163ffffffff909116815260200160405180910390f35b341561022e57600080fd5b610196600160a060020a03600435166024356105f1565b341561025057600080fd5b6101bd600160a060020a03600435166106eb565b341561026f57600080fd5b610196600160a060020a0360043516602435610706565b341561029157600080fd5b6102996107c9565b604051600160a060020a03909116815260200160405180910390f35b34156102c057600080fd5b6100fd6107d8565b34156102d357600080fd5b610196600160a060020a036004351660243561080f565b34156102f557600080fd5b610196600160a060020a0360043516610933565b341561031457600080fd5b610196600160a060020a0360043516602435610948565b341561033657600080fd5b6101bd600160a060020a03600435811690602435166109ec565b341561035b57600080fd5b610374600160a060020a03600435166024351515610a17565b005b341561038157600080fd5b610374600160a060020a0360043516610a5d565b60408051908101604052600b81527f506f7474657220636f696e000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260036020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60015490565b6000600160a060020a038316151561045657600080fd5b600160a060020a03841660009081526002602052604090205482111561047b57600080fd5b600160a060020a03808516600090815260036020908152604080832033909416835292905220548211156104ae57600080fd5b600160a060020a03841660009081526004602052604090205460ff1615156105e157600160a060020a0384166000908152600260205260409020546104f9908363ffffffff610aa716565b600160a060020a03808616600090815260026020526040808220939093559085168152205461052e908363ffffffff610ab916565b600160a060020a03808516600090815260026020908152604080832094909455878316825260038152838220339093168252919091522054610576908363ffffffff610aa716565b600160a060020a03808616600081815260036020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060016105e5565b5060005b9392505050565b601281565b600160a060020a0333811660009081526003602090815260408083209386168352929052908120548083111561064e57600160a060020a033381166000908152600360209081526040808320938816835292905290812055610685565b61065e818463ffffffff610aa716565b600160a060020a033381166000908152600360209081526040808320938916835292905220555b600160a060020a0333811660008181526003602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600160a060020a031660009081526002602052604090205490565b6000805433600160a060020a0390811691161461072257600080fd5b600160a060020a0383166000908152600260205260409020548290101561074857600080fd5b600160a060020a038316600090815260026020526040902054610771908363ffffffff610aa716565b600160a060020a038085166000908152600260205260408082209390935533909116815220546107a7908363ffffffff610ab916565b600160a060020a03331660009081526002602052604090205550600192915050565b600054600160a060020a031681565b60408051908101604052600481527f504f544200000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a038316151561082657600080fd5b600160a060020a03331660009081526002602052604090205482111561084b57600080fd5b600160a060020a03331660009081526004602052604090205460ff16151561092b57600160a060020a033316600090815260026020526040902054610896908363ffffffff610aa716565b600160a060020a0333811660009081526002602052604080822093909355908516815220546108cb908363ffffffff610ab916565b600160a060020a0380851660008181526002602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610433565b506000610433565b60046020526000908152604090205460ff1681565b600160a060020a033381166000908152600360209081526040808320938616835292905290812054610980908363ffffffff610ab916565b600160a060020a0333811660008181526003602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b60005433600160a060020a03908116911614610a3257600080fd5b600160a060020a03919091166000908152600460205260409020805460ff1916911515919091179055565b60005433600160a060020a03908116911614610a7857600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610ab357fe5b50900390565b8181018281101561043357fe00a165627a7a72305820a9365905c4b205551a8a420b09836bf9f8f47589d1313b47bf0d3a82a96bde2c0029000000000000000000000000000000000000000000000000000000002de54480",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000002de54480"
}