{
  "address": "0x05aaaa829afa407d83315cded1d45eb16025910c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SPXToken",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-02-06\n*/\n\npragma solidity ^0.4.18;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n}\n\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   */\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n\n// Migration Agent interface\ncontract MigrationAgent {\n  function migrateFrom(address _from, uint _value) public;\n}\n\n/**\n * @title Spade Token\n */\ncontract SPXToken is StandardToken {\n\n  string public constant name = \"SP8DE Token\";\n  string public constant symbol = \"SPX\";\n  uint8 public constant decimals = 18;\n  address public ico;\n  \n  bool public isFrozen = true;  \n  uint public constant TOKEN_LIMIT = 8888888888 * (1e18);\n\n  // Token migration variables\n  address public migrationMaster;\n  address public migrationAgent;\n  uint public totalMigrated;\n\n  event Migrate(address indexed _from, address indexed _to, uint _value);\n  \n  // Constructor\n  function SPXToken(address _ico, address _migrationMaster) public {\n    require(_ico != 0);\n    ico = _ico;\n    migrationMaster = _migrationMaster;\n  }\n\n  // Create tokens\n  function mint(address holder, uint value) public {\n    require(msg.sender == ico);\n    require(value > 0);\n    require(totalSupply + value <= TOKEN_LIMIT);\n\n    balances[holder] += value;\n    totalSupply += value;\n    Transfer(0x0, holder, value);\n  }\n\n  // Allow token transfer.\n  function unfreeze() public {\n      require(msg.sender == ico);\n      isFrozen = false;\n  }\n\n  // ERC20 functions\n  // =========================\n  function transfer(address _to, uint _value) public returns (bool) {\n    require(_to != address(0));\n    require(!isFrozen);\n    return super.transfer(_to, _value);\n  }\n\n  function transferFrom(address _from, address _to, uint _value) public returns (bool) {\n    require(!isFrozen);\n    return super.transferFrom(_from, _to, _value);\n  }\n\n  function approve(address _spender, uint _value) public returns (bool) {\n    require(!isFrozen);\n    return super.approve(_spender, _value);\n  }\n\n  // Token migration\n  function migrate(uint value) external {\n    require(migrationAgent != 0);\n    require(value > 0);\n    require(value <= balances[msg.sender]);\n\n    balances[msg.sender] -= value;\n    totalSupply -= value;\n    totalMigrated += value;\n    MigrationAgent(migrationAgent).migrateFrom(msg.sender, value);\n    Migrate(msg.sender, migrationAgent, value);\n  }\n\n  // Set address of migration contract\n  function setMigrationAgent(address _agent) external {\n    require(migrationAgent == 0);\n    require(msg.sender == migrationMaster);\n    migrationAgent = _agent;\n  }\n\n  function setMigrationMaster(address _master) external {\n    require(msg.sender == migrationMaster);\n    require(_master != 0);\n    migrationMaster = _master;\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_master\",\"type\":\"address\"}],\"name\":\"setMigrationMaster\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migrationMaster\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"setMigrationAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migrationAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMigrated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ico\",\"type\":\"address\"},{\"name\":\"_migrationMaster\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Migrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60606040526003805460a060020a60ff02191674010000000000000000000000000000000000000000179055341561003657600080fd5b604051604080610e2c8339810160405280805191906020018051915050600160a060020a038216151561006857600080fd5b60038054600160a060020a03938416600160a060020a03199182161790915560048054929093169116179055610d89806100a36000396000f3006060604052600436106101275763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663031bd4c4811461012c57806306fdde0314610151578063095ea7b3146101db57806318160ddd1461021157806323b872dd1461022457806326316e581461024c578063313ce5671461026d57806333eeb1471461029657806340c10f19146102a9578063454b0608146102cb5780635d452201146102e15780636618846314610310578063676d2e62146103325780636a28f0001461034557806370a082311461035857806375e2ff65146103775780638328dbcd1461039657806395a0f5eb146103a957806395d89b41146103bc578063a9059cbb146103cf578063d73dd623146103f1578063dd62ed3e14610413575b600080fd5b341561013757600080fd5b61013f610438565b60405190815260200160405180910390f35b341561015c57600080fd5b610164610448565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101a0578082015183820152602001610188565b50505050905090810190601f1680156101cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101e657600080fd5b6101fd600160a060020a036004351660243561047f565b604051901515815260200160405180910390f35b341561021c57600080fd5b61013f6104aa565b341561022f57600080fd5b6101fd600160a060020a03600435811690602435166044356104b0565b341561025757600080fd5b61026b600160a060020a03600435166104dd565b005b341561027857600080fd5b61028061053c565b60405160ff909116815260200160405180910390f35b34156102a157600080fd5b6101fd610541565b34156102b457600080fd5b61026b600160a060020a0360043516602435610551565b34156102d657600080fd5b61026b6004356105f3565b34156102ec57600080fd5b6102f4610732565b604051600160a060020a03909116815260200160405180910390f35b341561031b57600080fd5b6101fd600160a060020a0360043516602435610741565b341561033d57600080fd5b6102f461083b565b341561035057600080fd5b61026b61084a565b341561036357600080fd5b61013f600160a060020a0360043516610885565b341561038257600080fd5b61026b600160a060020a03600435166108a0565b34156103a157600080fd5b6102f4610900565b34156103b457600080fd5b61013f61090f565b34156103c757600080fd5b610164610915565b34156103da57600080fd5b6101fd600160a060020a036004351660243561094c565b34156103fc57600080fd5b6101fd600160a060020a0360043516602435610984565b341561041e57600080fd5b61013f600160a060020a0360043581169060243516610a28565b6b1cb8b7702ae75fb695e0000081565b60408051908101604052600b81527f535038444520546f6b656e000000000000000000000000000000000000000000602082015281565b60035460009060a060020a900460ff161561049957600080fd5b6104a38383610a53565b9392505050565b60005481565b60035460009060a060020a900460ff16156104ca57600080fd5b6104d5848484610abf565b949350505050565b60045433600160a060020a039081169116146104f857600080fd5b600160a060020a038116151561050d57600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b601281565b60035460a060020a900460ff1681565b60035433600160a060020a0390811691161461056c57600080fd5b6000811161057957600080fd5b6000546b1cb8b7702ae75fb695e00000908201111561059757600080fd5b600160a060020a0382166000818152600160205260408082208054850190558154840182557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a35050565b600554600160a060020a0316151561060a57600080fd5b6000811161061757600080fd5b600160a060020a03331660009081526001602052604090205481111561063c57600080fd5b33600160a060020a03818116600090815260016020526040808220805486900390558154859003909155600680548501905560055490911691637a3130e3918490517c010000000000000000000000000000000000000000000000000000000063ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b15156106d757600080fd5b6102c65a03f115156106e857600080fd5b5050600554600160a060020a03908116915033167f18df02dcc52b9c494f391df09661519c0069bd8540141946280399408205ca1a8360405190815260200160405180910390a350565b600354600160a060020a031681565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120548083111561079e57600160a060020a0333811660009081526002602090815260408083209388168352929052908120556107d5565b6107ae818463ffffffff610c4116565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600454600160a060020a031681565b60035433600160a060020a0390811691161461086557600080fd5b6003805474ff000000000000000000000000000000000000000019169055565b600160a060020a031660009081526001602052604090205490565b600554600160a060020a0316156108b657600080fd5b60045433600160a060020a039081169116146108d157600080fd5b6005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600554600160a060020a031681565b60065481565b60408051908101604052600381527f5350580000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a038316151561096357600080fd5b60035460a060020a900460ff161561097a57600080fd5b6104a38383610c53565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120546109bc908363ffffffff610d4e16565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b6000600160a060020a0383161515610ad657600080fd5b600160a060020a038416600090815260016020526040902054821115610afb57600080fd5b600160a060020a0380851660009081526002602090815260408083203390941683529290522054821115610b2e57600080fd5b600160a060020a038416600090815260016020526040902054610b57908363ffffffff610c4116565b600160a060020a038086166000908152600160205260408082209390935590851681522054610b8c908363ffffffff610d4e16565b600160a060020a03808516600090815260016020908152604080832094909455878316825260028152838220339093168252919091522054610bd4908363ffffffff610c4116565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b600082821115610c4d57fe5b50900390565b6000600160a060020a0383161515610c6a57600080fd5b600160a060020a033316600090815260016020526040902054821115610c8f57600080fd5b600160a060020a033316600090815260016020526040902054610cb8908363ffffffff610c4116565b600160a060020a033381166000908152600160205260408082209390935590851681522054610ced908363ffffffff610d4e16565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b6000828201838110156104a357fe00a165627a7a72305820bcab5807b194002f04c419000c8c60b4b0cd3c77c8f9978314b38570603ca2b10029000000000000000000000000fdb3c07c25f5a6879cc8b00685ed1a080c59615e000000000000000000000000b4c512558b951001f7fb636b966768fb0cd8ab41",
  "constructorArguments": "000000000000000000000000fdb3c07c25f5a6879cc8b00685ed1a080c59615e000000000000000000000000b4C512558B951001F7fB636b966768FB0Cd8Ab41"
}