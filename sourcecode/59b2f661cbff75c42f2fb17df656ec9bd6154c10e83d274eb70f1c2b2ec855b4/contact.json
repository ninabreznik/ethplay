{
  "address": "0x3d339b3962f011d844c67d166504376a82e7285b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MTT",
  "compilerVersion": "v0.4.13+commit.fb4cb1a",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-03\n*/\n\npragma solidity ^0.4.13;\n\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public constant returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public constant returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n\n\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\ncontract MTT is ERC20,Ownable{\n\tusing SafeMath for uint256;\n\n\tstring public constant name=\"Medical treatment token\";\n\tstring public symbol=\"MTT\";\n\tstring public constant version = \"1.0\";\n\tuint256 public constant decimals = 18;\n\tuint256 public totalSupply;\n\n\tuint256 public constant MAX_SUPPLY=uint256(100000000)*uint256(10)**decimals;\n\n\t\n    mapping(address => uint256) balances;\n\tmapping (address => mapping (address => uint256)) allowed;\n\tevent GetETH(address indexed _from, uint256 _value);\n\n\t//owner一次性获取代币\n\tfunction MTT(){\n\t\ttotalSupply=MAX_SUPPLY;\n\t\tbalances[msg.sender] = MAX_SUPPLY;\n\t\tTransfer(0x0, msg.sender, MAX_SUPPLY);\n\t}\n\n\t//允许用户往合约账户打币\n\tfunction () payable external\n\t{\n\t\tGetETH(msg.sender,msg.value);\n\t}\n\n\tfunction etherProceeds() external\n\t\tonlyOwner\n\t{\n\t\tif(!msg.sender.send(this.balance)) revert();\n\t}\n\n  \tfunction transfer(address _to, uint256 _value) public  returns (bool)\n \t{\n\t\trequire(_to != address(0));\n        require(_to != address(this));\n        require(msg.sender != address(0));\n        require(_value <= balances[msg.sender]);\n\t\t// SafeMath.sub will throw if there is not enough balance.\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\n\t\tbalances[_to] = balances[_to].add(_value);\n\t\tTransfer(msg.sender, _to, _value);\n\t\treturn true;\n  \t}\n\n  \tfunction balanceOf(address _owner) public constant returns (uint256 balance) \n  \t{\n\t\treturn balances[_owner];\n  \t}\n\n  \tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) \n  \t{\n\t    require(_from != address(0));\n        require(_to != address(0));\n        require(_to != address(this));\n        \n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n        \n\t\tuint256 _allowance = allowed[_from][msg.sender];\n\n\t\tbalances[_from] = balances[_from].sub(_value);\n\t\tbalances[_to] = balances[_to].add(_value);\n\t\tallowed[_from][msg.sender] = _allowance.sub(_value);\n\t\tTransfer(_from, _to, _value);\n\t\treturn true;\n  \t}\n\n  \tfunction approve(address _spender, uint256 _value) public returns (bool) \n  \t{\n  \t    require(_value > 0);\n\t\tallowed[msg.sender][_spender] = _value;\n\t\tApproval(msg.sender, _spender, _value);\n\t\treturn true;\n  \t}\n\n  \tfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining) \n  \t{\n\t\treturn allowed[_owner][_spender];\n  \t}\n\n\t  \n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"etherProceeds\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"GetETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "606060405260408051908101604052600381527f4d545400000000000000000000000000000000000000000000000000000000006020820152600290805161004b9291602001906100de565b50341561005757600080fd5b5b5b60018054600160a060020a03191633600160a060020a03161790555b6a52b7d2dcc80cd2e40000006003819055600160a060020a033316600081815260046020526040808220849055919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91905190815260200160405180910390a35b61017e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011f57805160ff191683800117855561014c565b8280016001018555821561014c579182015b8281111561014c578251825591602001919060010190610131565b5b5061015992915061015d565b5090565b61017b91905b808211156101595760008155600101610163565b5090565b90565b610acf8061018d6000396000f300606060405236156100cd5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610113578063095ea7b31461019e57806318160ddd146101d457806323b872dd146101f9578063313ce5671461023557806332cb6b0c1461025a57806354fd4d501461027f57806370a082311461030a578063801aba561461033b5780638da5cb5b1461035057806395d89b411461037f578063a9059cbb1461040a578063dd62ed3e14610440578063f2fde38b14610477575b6101115b33600160a060020a03167f59cbf1251d8592510b5a3df66c42ab0664604d319dcd3202a097a04a1cfbda083460405190815260200160405180910390a25b565b005b341561011e57600080fd5b610126610498565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101635780820151818401525b60200161014a565b50505050905090810190601f1680156101905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a957600080fd5b6101c0600160a060020a03600435166024356104cf565b604051901515815260200160405180910390f35b34156101df57600080fd5b6101e7610547565b60405190815260200160405180910390f35b341561020457600080fd5b6101c0600160a060020a036004358116906024351660443561054d565b604051901515815260200160405180910390f35b341561024057600080fd5b6101e7610707565b60405190815260200160405180910390f35b341561026557600080fd5b6101e761070c565b60405190815260200160405180910390f35b341561028a57600080fd5b61012661071b565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101635780820151818401525b60200161014a565b50505050905090810190601f1680156101905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561031557600080fd5b6101e7600160a060020a0360043516610752565b60405190815260200160405180910390f35b341561034657600080fd5b610111610771565b005b341561035b57600080fd5b6103636107cd565b604051600160a060020a03909116815260200160405180910390f35b341561038a57600080fd5b6101266107dc565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101635780820151818401525b60200161014a565b50505050905090810190601f1680156101905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561041557600080fd5b6101c0600160a060020a036004351660243561087a565b604051901515815260200160405180910390f35b341561044b57600080fd5b6101e7600160a060020a03600435811690602435166109ac565b60405190815260200160405180910390f35b341561048257600080fd5b610111600160a060020a03600435166109d9565b005b60408051908101604052601781527f4d65646963616c2074726561746d656e7420746f6b656e000000000000000000602082015281565b60008082116104dd57600080fd5b600160a060020a03338116600081815260056020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60035481565b600080600160a060020a038516151561056557600080fd5b600160a060020a038416151561057a57600080fd5b30600160a060020a031684600160a060020a03161415151561059b57600080fd5b600160a060020a0385166000908152600460205260409020548311156105c057600080fd5b600160a060020a03808616600090815260056020908152604080832033909416835292905220548311156105f357600080fd5b50600160a060020a03808516600081815260056020908152604080832033909516835293815283822054928252600490529190912054610639908463ffffffff610a7216565b600160a060020a03808716600090815260046020526040808220939093559086168152205461066e908463ffffffff610a8916565b600160a060020a038516600090815260046020526040902055610697818463ffffffff610a7216565b600160a060020a03808716600081815260056020908152604080832033861684529091529081902093909355908616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3600191505b509392505050565b601281565b6a52b7d2dcc80cd2e400000081565b60408051908101604052600381527f312e300000000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a0381166000908152600460205260409020545b919050565b60015433600160a060020a0390811691161461078c57600080fd5b33600160a060020a03166108fc30600160a060020a0316319081150290604051600060405180830381858888f19350505050151561010f57600080fd5b5b5b565b600154600160a060020a031681565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108725780601f1061084757610100808354040283529160200191610872565b820191906000526020600020905b81548152906001019060200180831161085557829003601f168201915b505050505081565b6000600160a060020a038316151561089157600080fd5b30600160a060020a031683600160a060020a0316141515156108b257600080fd5b33600160a060020a031615156108c757600080fd5b600160a060020a0333166000908152600460205260409020548211156108ec57600080fd5b600160a060020a033316600090815260046020526040902054610915908363ffffffff610a7216565b600160a060020a03338116600090815260046020526040808220939093559085168152205461094a908363ffffffff610a8916565b600160a060020a0380851660008181526004602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b92915050565b600160a060020a038083166000908152600560209081526040808320938516835292905220545b92915050565b60015433600160a060020a039081169116146109f457600080fd5b600160a060020a0381161515610a0957600080fd5b600154600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b600082821115610a7e57fe5b508082035b92915050565b600082820183811015610a9857fe5b8091505b50929150505600a165627a7a723058200e96c5484e3fe0bd7830a258a18513ae7fd10c24f66d7a31e9b442179a3ab1500029"
}