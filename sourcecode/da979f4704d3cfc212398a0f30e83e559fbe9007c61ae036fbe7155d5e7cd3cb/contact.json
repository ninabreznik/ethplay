{
  "address": "0xf5ed657f9441672788a4935f279956745edf461b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BatchTransferEtherAndVoken",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-28\n*/\n\npragma solidity ^0.5.7;\n\n\n// Batch transfer Ether and Voken\n// \n// More info:\n//   https://vision.network\n//   https://voken.io\n//\n// Contact us:\n//   [email protected]\n//   [email protected]\n\n\n/**\n * @title SafeMath for uint256\n * @dev Unsigned math operations with safety checks that revert on error.\n */\nlibrary SafeMath256 {\n    /**\n     * @dev Multiplies two unsigned integers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        if (a == 0) {\n            return 0;\n        }\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n}\n\n\n/**\n * @title Ownable\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract\n     * to the sender account.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n    }\n\n    /**\n     * @return The address of the owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == _owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) external onlyOwner {\n        require(newOwner != address(0));\n        address __previousOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(__previousOwner, newOwner);\n    }\n\n    /**\n     * @dev Rescue compatible ERC20 Token\n     *\n     * @param tokenAddr ERC20 The address of the ERC20 token contract\n     * @param receiver The address of the receiver\n     * @param amount uint256\n     */\n    function rescueTokens(address tokenAddr, address receiver, uint256 amount) external onlyOwner {\n        IERC20 __token = IERC20(tokenAddr);\n        require(receiver != address(0));\n        uint256 __balance = __token.balanceOf(address(this));\n        \n        require(__balance >= amount);\n        assert(__token.transfer(receiver, amount));\n    }\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://eips.ethereum.org/EIPS/eip-20\n */\ninterface IERC20{\n    function balanceOf(address owner) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n}\n\n\n/**\n * @title Batch Transfer Ether And Voken\n */\ncontract BatchTransferEtherAndVoken is Ownable{\n    using SafeMath256 for uint256;\n    \n    IERC20 VOKEN = IERC20(0x82070415FEe803f94Ce5617Be1878503e58F0a6a);\n\n    /**\n     * @dev Batch transfer both.\n     */\n    function batchTransfer(address payable[] memory accounts, uint256 etherValue, uint256 vokenValue) public payable {\n        uint256 __etherBalance = address(this).balance;\n        uint256 __vokenAllowance = VOKEN.allowance(msg.sender, address(this));\n\n        require(__etherBalance >= etherValue.mul(accounts.length));\n        require(__vokenAllowance >= vokenValue.mul(accounts.length));\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            accounts[i].transfer(etherValue);\n            assert(VOKEN.transferFrom(msg.sender, accounts[i], vokenValue));\n        }\n    }\n\n    /**\n     * @dev Batch transfer Ether.\n     */\n    function batchTtransferEther(address payable[] memory accounts, uint256 etherValue) public payable {\n        uint256 __etherBalance = address(this).balance;\n\n        require(__etherBalance >= etherValue.mul(accounts.length));\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            accounts[i].transfer(etherValue);\n        }\n    }\n\n    /**\n     * @dev Batch transfer Voken.\n     */\n    function batchTransferVoken(address[] memory accounts, uint256 vokenValue) public {\n        uint256 __vokenAllowance = VOKEN.allowance(msg.sender, address(this));\n\n        require(__vokenAllowance >= vokenValue.mul(accounts.length));\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            assert(VOKEN.transferFrom(msg.sender, accounts[i], vokenValue));\n        }\n    }\n}",
  "bytecode": "6080604052600180546001600160a01b03199081167382070415fee803f94ce5617be1878503e58f0a6a17909155600080549091163317905561092e806100476000396000f3fe6080604052600436106100555760003560e01c806307446d551461005a578063416c2d3b146101045780637713e926146101a95780638da5cb5b1461025b578063cea9d26f1461028c578063f2fde38b146102cf575b600080fd5b6101026004803603606081101561007057600080fd5b81019060208101813564010000000081111561008b57600080fd5b82018360208201111561009d57600080fd5b803590602001918460208302840111640100000000831117156100bf57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505082359350505060200135610302565b005b6101026004803603604081101561011a57600080fd5b81019060208101813564010000000081111561013557600080fd5b82018360208201111561014757600080fd5b8035906020019184602083028401116401000000008311171561016957600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050913592506104fb915050565b3480156101b557600080fd5b50610102600480360360408110156101cc57600080fd5b8101906020810181356401000000008111156101e757600080fd5b8201836020820111156101f957600080fd5b8035906020019184602083028401116401000000008311171561021b57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250610584915050565b34801561026757600080fd5b50610270610702565b604080516001600160a01b039092168252519081900360200190f35b34801561029857600080fd5b50610102600480360360608110156102af57600080fd5b506001600160a01b03813581169160208101359091169060400135610711565b3480156102db57600080fd5b50610102600480360360208110156102f257600080fd5b50356001600160a01b031661085d565b60015460408051600160e11b636eb1769f028152336004820152306024820181905291519131926000926001600160a01b039091169163dd62ed3e916044808301926020929190829003018186803b15801561035d57600080fd5b505afa158015610371573d6000803e3d6000fd5b505050506040513d602081101561038757600080fd5b5051855190915061039f90859063ffffffff6108d716565b8210156103ab57600080fd5b84516103be90849063ffffffff6108d716565b8110156103ca57600080fd5b60005b85518110156104f3578581815181106103e257fe5b60200260200101516001600160a01b03166108fc869081150290604051600060405180830381858888f19350505050158015610422573d6000803e3d6000fd5b5060015486516001600160a01b03909116906323b872dd90339089908590811061044857fe5b6020026020010151876040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b031681526020018281526020019350505050602060405180830381600087803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b505050506040513d60208110156104e357600080fd5b50516104eb57fe5b6001016103cd565b505050505050565b815130319061051190839063ffffffff6108d716565b81101561051d57600080fd5b60005b835181101561057e5783818151811061053557fe5b60200260200101516001600160a01b03166108fc849081150290604051600060405180830381858888f19350505050158015610575573d6000803e3d6000fd5b50600101610520565b50505050565b60015460408051600160e11b636eb1769f02815233600482015230602482015290516000926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b1580156105d857600080fd5b505afa1580156105ec573d6000803e3d6000fd5b505050506040513d602081101561060257600080fd5b5051835190915061061a90839063ffffffff6108d716565b81101561062657600080fd5b60005b835181101561057e5760015484516001600160a01b03909116906323b872dd90339087908590811061065757fe5b6020026020010151866040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b031681526020018281526020019350505050602060405180830381600087803b1580156106c857600080fd5b505af11580156106dc573d6000803e3d6000fd5b505050506040513d60208110156106f257600080fd5b50516106fa57fe5b600101610629565b6000546001600160a01b031690565b6000546001600160a01b0316331461072857600080fd5b826001600160a01b03831661073c57600080fd5b60408051600160e01b6370a0823102815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b15801561078957600080fd5b505afa15801561079d573d6000803e3d6000fd5b505050506040513d60208110156107b357600080fd5b50519050828110156107c457600080fd5b816001600160a01b031663a9059cbb85856040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561082457600080fd5b505af1158015610838573d6000803e3d6000fd5b505050506040513d602081101561084e57600080fd5b505161085657fe5b5050505050565b6000546001600160a01b0316331461087457600080fd5b6001600160a01b03811661088757600080fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826108e6575060006108fc565b50818102818382816108f457fe5b04146108fc57fe5b9291505056fea165627a7a7230582028a7f9473cd74a35d7d7da0082145011b22e3b540b0624b371f0b9d67e450ef60029"
}