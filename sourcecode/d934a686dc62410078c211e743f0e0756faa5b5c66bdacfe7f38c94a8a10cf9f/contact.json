{
  "address": "0xf1ca9cb74685755965c7458528a36934df52a3ef",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "AVINOC Token",
  "contractName": "AVINOCToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-15\n*/\n\npragma solidity 0.4.24;\n\n\n// @title SafeMath\n// @dev Math operations with safety checks that throw on error\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n}\n\n\n// @title Ownable\n// @dev The Ownable contract has an owner address, and provides basic authorization control\n// functions, this simplifies the implementation of \"user permissions\".\ncontract Ownable {\n    address public owner;\n\n    // @dev The Ownable constructor sets the original `owner` of the contract to the sender account.\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    // @dev Throws if called by any account other than the owner.\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    // @dev Allows the current owner to transfer control of the contract to a newOwner.\n    // @param newOwner The address to transfer ownership to.\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0));\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n}\n\n\n// @title ERC20Basic\n// @dev Simpler version of ERC20 interface\n// @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\ncontract ERC20Basic {\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function totalSupply() public view returns (uint256 supply);\n\n    function balanceOf(address who) public view returns (uint256 balance);\n\n    function transfer(address to, uint256 value) public returns (bool success);\n}\n\n\n// @title ERC20 interface\n// @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\ncontract ERC20 is ERC20Basic {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    function allowance(address owner, address spender) public view returns (uint256 remaining);\n\n    function transferFrom(address from, address to, uint256 value) public returns (bool success);\n\n    function approve(address spender, uint256 value) public returns (bool success);\n}\n\n\n// @title Basic token\n// @dev Basic version of StandardToken, with no allowances.\ncontract BasicToken is Ownable, ERC20Basic {\n    using SafeMath for uint256;\n    mapping(address => uint256) public balances;\n\n    // @dev Fix for the ERC20 short address attack.\n    modifier onlyPayloadSize(uint256 size) {\n        require(!(msg.data.length < size + 4));\n        _;\n    }\n\n    // @dev transfer token for a specified address\n    // @param _to The address to transfer to.\n    // @param _value The amount to be transferred.\n    function transfer(address _to, uint256 _value) public onlyPayloadSize(2 * 32) returns (bool success) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    // @dev Gets the balance of the specified address.\n    // @param _owner The address to query the the balance of.\n    // @return An uint256 representing the amount owned by the passed address.\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n}\n\n\n// @title Standard ERC20 token\n// @dev Implementation of the basic standard token.\n// @dev https://github.com/ethereum/EIPs/issues/20\n// @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\ncontract StandardToken is BasicToken, ERC20 {\n    mapping(address => mapping(address => uint256)) public allowed;\n    uint256 public constant MAX_UINT256 = 2 ** 256 - 1;\n\n    // @dev Transfer tokens from one address to another\n    // @param _from address The address which you want to send tokens from\n    // @param _to address The address which you want to transfer to\n    // @param _value uint256 the amount of tokens to be transferred\n    function transferFrom(address _from, address _to, uint256 _value) public onlyPayloadSize(3 * 32) returns (bool success) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        uint256 _allowance = allowed[_from][msg.sender];\n        require(_value <= _allowance);\n\n        // @dev Treat 2^256-1 means unlimited allowance\n        if (_allowance < MAX_UINT256)\n            allowed[_from][msg.sender] = _allowance.sub(_value);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    // @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n    // Beware that changing an allowance with this method brings the risk that someone may use both the old\n    // and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n    // race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n    // https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    // @param _spender The address which will spend the funds.\n    // @param _value The amount of tokens to be spent.\n    function approve(address _spender, uint256 _value) public onlyPayloadSize(2 * 32) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    // @dev approve should be called when allowed[_spender] == 0. To increment allowed value is better to use\n    // @dev this function to avoid 2 calls (and wait until the first transaction is mined)\n    // @param _spender The address which will spend the funds.\n    // @param _addedValue The amount of tokens to be added to the allowance.\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool success) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool success) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue >= oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    // @dev Function to check the amount of tokens than an owner allowed to a spender.\n    // @param _owner address The address which owns the funds.\n    // @param _spender address The address which will spend the funds.\n    // @return A uint256 specifying the amount of tokens still available for the spender.\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n}\n\n\n// @title Upgraded standard token\n// @dev Contract interface that the upgraded contract has to implement\n// @dev Methods to be called by the legacy contract\n// @dev They have to ensure msg.sender to be the contract address\ncontract UpgradedStandardToken is StandardToken {\n    function transferByLegacy(address from, address to, uint256 value) public returns (bool success);\n\n    function transferFromByLegacy(address sender, address from, address spender, uint256 value) public returns (bool success);\n\n    function approveByLegacy(address from, address spender, uint256 value) public returns (bool success);\n\n    function increaseApprovalByLegacy(address from, address spender, uint256 value) public returns (bool success);\n\n    function decreaseApprovalByLegacy(address from, address spender, uint256 value) public returns (bool success);\n}\n\n\n// @title Upgradeable standard token\n// @dev The upgradeable contract interface\n// @dev\n// @dev They have to ensure msg.sender to be the contract address\ncontract UpgradeableStandardToken is StandardToken {\n    address public upgradeAddress;\n    uint256 public upgradeTimestamp;\n\n    //  The contract is initialized with an upgrade timestamp close to the heat death of the universe.\n    constructor() public {\n        upgradeAddress = address(0);\n        //  Set the timestamp of the upgrade to some time close to the heat death of the universe.\n        upgradeTimestamp = MAX_UINT256;\n    }\n\n    // Forward ERC20 methods to upgraded contract after the upgrade timestamp has been reached\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        if (now > upgradeTimestamp) {\n            return UpgradedStandardToken(upgradeAddress).transferByLegacy(msg.sender, _to, _value);\n        } else {\n            return super.transfer(_to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract after the upgrade timestamp has been reached\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        if (now > upgradeTimestamp) {\n            return UpgradedStandardToken(upgradeAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\n        } else {\n            return super.transferFrom(_from, _to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract after the upgrade timestamp has been reached\n    function balanceOf(address who) public view returns (uint256 balance) {\n        if (now > upgradeTimestamp) {\n            return UpgradedStandardToken(upgradeAddress).balanceOf(who);\n        } else {\n            return super.balanceOf(who);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract after the upgrade timestamp has been reached\n    function approve(address _spender, uint256 _value) public onlyPayloadSize(2 * 32) returns (bool success) {\n        if (now > upgradeTimestamp) {\n            return UpgradedStandardToken(upgradeAddress).approveByLegacy(msg.sender, _spender, _value);\n        } else {\n            return super.approve(_spender, _value);\n        }\n    }\n\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool success) {\n        if (now > upgradeTimestamp) {\n            return UpgradedStandardToken(upgradeAddress).increaseApprovalByLegacy(msg.sender, _spender, _addedValue);\n        } else {\n            return super.increaseApproval(_spender, _addedValue);\n        }\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool success) {\n        if (now > upgradeTimestamp) {\n            return UpgradedStandardToken(upgradeAddress).decreaseApprovalByLegacy(msg.sender, _spender, _subtractedValue);\n        } else {\n            return super.decreaseApproval(_spender, _subtractedValue);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract after the upgrade timestamp has been reached\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        if (now > upgradeTimestamp) {\n            return StandardToken(upgradeAddress).allowance(_owner, _spender);\n        } else {\n            return super.allowance(_owner, _spender);\n        }\n    }\n\n    // Upgrade this contract with a new one, it will auto-activate 12 weeks later\n    function upgrade(address _upgradeAddress) public onlyOwner {\n        require(now < upgradeTimestamp);\n        require(_upgradeAddress != address(0));\n\n        upgradeAddress = _upgradeAddress;\n        upgradeTimestamp = now.add(12 weeks);\n        emit Upgrading(_upgradeAddress, upgradeTimestamp);\n    }\n\n    // Called when contract is upgrading\n    event Upgrading(address newAddress, uint256 timestamp);\n}\n\n\n// @title The AVINOC Token contract\ncontract AVINOCToken is UpgradeableStandardToken {\n    string public constant name = \"AVINOC Token\";\n    string public constant symbol = \"AVINOC\";\n    uint8 public constant decimals = 18;\n    uint256 public constant decimalFactor = 10 ** uint256(decimals);\n    uint256 public constant TOTAL_SUPPLY = 1000000000 * decimalFactor;\n\n    constructor() public {\n        balances[owner] = TOTAL_SUPPLY;\n    }\n\n    // @dev Don't accept ETH\n    function() public payable {\n        revert();\n    }\n\n    // @dev return the fixed total supply\n    function totalSupply() public view returns (uint256) {\n        return TOTAL_SUPPLY;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradeAddress\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT256\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradeAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimalFactor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradeTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Upgrading\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a0319908116331780835560038054909216909155600019600455600160a060020a031681526001602052604090206b033b2e3c9fd0803ce80000009055611035806100686000396000f30060806040526004361061011c5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146101215780630900f010146101ab578063095ea7b3146101ce57806318160ddd1461020657806323b872dd1461022d57806327e235e314610257578063313ce5671461027857806333a581d2146102a35780635c658165146102b8578063631f0d66146102df57806366188463146103105780636d6a6a4d1461033457806370a08231146103495780638da5cb5b1461036a578063902d55a51461037f578063921bd6f01461039457806395d89b41146103a9578063a9059cbb146103be578063d73dd623146103e2578063dd62ed3e14610406578063f2fde38b1461042d575b600080fd5b34801561012d57600080fd5b5061013661044e565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610170578181015183820152602001610158565b50505050905090810190601f16801561019d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b757600080fd5b506101cc600160a060020a0360043516610485565b005b3480156101da57600080fd5b506101f2600160a060020a0360043516602435610540565b604080519115158252519081900360200190f35b34801561021257600080fd5b5061021b610618565b60408051918252519081900360200190f35b34801561023957600080fd5b506101f2600160a060020a0360043581169060243516604435610628565b34801561026357600080fd5b5061021b600160a060020a03600435166106f9565b34801561028457600080fd5b5061028d61070b565b6040805160ff9092168252519081900360200190f35b3480156102af57600080fd5b5061021b610710565b3480156102c457600080fd5b5061021b600160a060020a0360043581169060243516610716565b3480156102eb57600080fd5b506102f4610733565b60408051600160a060020a039092168252519081900360200190f35b34801561031c57600080fd5b506101f2600160a060020a0360043516602435610742565b34801561034057600080fd5b5061021b610809565b34801561035557600080fd5b5061021b600160a060020a0360043516610815565b34801561037657600080fd5b506102f46108cd565b34801561038b57600080fd5b5061021b6108dc565b3480156103a057600080fd5b5061021b6108ec565b3480156103b557600080fd5b506101366108f2565b3480156103ca57600080fd5b506101f2600160a060020a0360043516602435610929565b3480156103ee57600080fd5b506101f2600160a060020a03600435166024356109b4565b34801561041257600080fd5b5061021b600160a060020a0360043581169060243516610a3f565b34801561043957600080fd5b506101cc600160a060020a0360043516610ac5565b60408051808201909152600c81527f4156494e4f4320546f6b656e0000000000000000000000000000000000000000602082015281565b600054600160a060020a0316331461049c57600080fd5b60045442106104aa57600080fd5b600160a060020a03811615156104bf57600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790556104f442626ebe00610b2c565b600481905560408051600160a060020a0384168152602081019290925280517f31f318b4595f2fd3e053de63a164ee2bf718790dabfdab118b5573c6606971cb9281900390910190a150565b60006040604436101561055257600080fd5b60045442111561060457600354604080517faee92d33000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038781166024830152604482018790529151919092169163aee92d339160648083019260209291908290030181600087803b1580156105d157600080fd5b505af11580156105e5573d6000803e3d6000fd5b505050506040513d60208110156105fb57600080fd5b50519150610611565b61060e8484610b3b565b91505b5092915050565b6b033b2e3c9fd0803ce800000090565b60006004544211156106e457600354604080517f8b477adb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03878116602483015286811660448301526064820186905291519190921691638b477adb9160848083019260209291908290030181600087803b1580156106b157600080fd5b505af11580156106c5573d6000803e3d6000fd5b505050506040513d60208110156106db57600080fd5b505190506106f2565b6106ef848484610bb5565b90505b9392505050565b60016020526000908152604090205481565b601281565b60001981565b600260209081526000928352604080842090915290825290205481565b600354600160a060020a031681565b60006004544211156107f657600354604080517f6001279f000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a0386811660248301526044820186905291519190921691636001279f9160648083019260209291908290030181600087803b1580156107c357600080fd5b505af11580156107d7573d6000803e3d6000fd5b505050506040513d60208110156107ed57600080fd5b50519050610803565b6108008383610d35565b90505b92915050565b670de0b6b3a764000081565b60006004544211156108bc57600354604080517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916370a082319160248083019260209291908290030181600087803b15801561088957600080fd5b505af115801561089d573d6000803e3d6000fd5b505050506040513d60208110156108b357600080fd5b505190506108c8565b6108c582610e24565b90505b919050565b600054600160a060020a031681565b6b033b2e3c9fd0803ce800000081565b60045481565b60408051808201909152600681527f4156494e4f430000000000000000000000000000000000000000000000000000602082015281565b60006004544211156109aa57600354604080517f6e18980a000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a0386811660248301526044820186905291519190921691636e18980a9160648083019260209291908290030181600087803b1580156107c357600080fd5b6108008383610e3f565b6000600454421115610a3557600354604080517fa9538157000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038681166024830152604482018690529151919092169163a95381579160648083019260209291908290030181600087803b1580156107c357600080fd5b6108008383610f33565b6000600454421115610abb57600354604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015285811660248301529151919092169163dd62ed3e9160448083019260209291908290030181600087803b1580156107c357600080fd5b6108008383610fcc565b600054600160a060020a03163314610adc57600080fd5b600160a060020a0381161515610af157600080fd5b600160a060020a03811615610b29576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b6000828201838110156106f257fe5b600060406044361015610b4d57600080fd5b336000818152600260209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008060606064361015610bc857600080fd5b600160a060020a0385161515610bdd57600080fd5b600160a060020a038616600090815260016020526040902054841115610c0257600080fd5b600160a060020a0386166000908152600260209081526040808320338452909152902054915081841115610c3557600080fd5b600019821015610c7457610c4f828563ffffffff610ff716565b600160a060020a03871660009081526002602090815260408083203384529091529020555b600160a060020a038616600090815260016020526040902054610c9d908563ffffffff610ff716565b600160a060020a038088166000908152600160205260408082209390935590871681522054610cd2908563ffffffff610b2c16565b600160a060020a0380871660008181526001602090815260409182902094909455805188815290519193928a16927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600195945050505050565b336000908152600260209081526040808320600160a060020a0386168452909152812054808310610d8957336000908152600260209081526040808320600160a060020a0388168452909152812055610dbe565b610d99818463ffffffff610ff716565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526001602052604090205490565b600060406044361015610e5157600080fd5b600160a060020a0384161515610e6657600080fd5b33600090815260016020526040902054831115610e8257600080fd5b33600090815260016020526040902054610ea2908463ffffffff610ff716565b3360009081526001602052604080822092909255600160a060020a03861681522054610ed4908463ffffffff610b2c16565b600160a060020a0385166000818152600160209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610f67908363ffffffff610b2c16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561100357fe5b509003905600a165627a7a72305820035f59e0b981f0f9e3ec408d8e3d65828ed6dcd1563e76a4cba52261982347a50029"
}