{
  "address": "0x47ba0689fbd72936749b007d18dfb75d34bf241b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MainContract",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-28\n*/\n\npragma solidity ^0.4.1;\n\n// File: contracts/OwnerValidator.sol\n\ncontract TokenContract {\n    function totalSupply() constant returns (uint256 supply);\n    function decimals() constant returns(uint8 units);\n    function balanceOf(address _owner) constant returns (uint256 balance);\n    function transfer(address _to, address _msgSender, uint256 _value) returns (bool success);\n    function transferFrom(address _from, address _to, address _msgSender, uint256 _value) returns (bool success);\n    function transferFromSender(address _to, uint256 _value) returns (bool success);\n    function approve(address _spender, address _msgSender, uint256 _value) returns (bool success);\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n}\ncontract OwnerValidator {\n    function validate(address addr) constant returns (bool);\n}\n\ncontract Owned {\n    function ownerValidate(address addr) constant returns (bool);\n    bool public isWorking;\n\n    function Owned() {\n        isWorking = true;\n    }\n\n    modifier onlyOwner {\n        if (!ownerValidate(msg.sender)) throw;\n        _;\n    }\n\n    modifier onlyWorking {\n        if (!isWorking) throw;\n        _;\n    }\n\n    modifier onlyNotWorking {\n        if (isWorking) throw;\n        _;\n    }\n\n    function setWorking(bool _isWorking) onlyOwner {\n        isWorking = _isWorking;\n    }\n}\n\ncontract OwnerValidatorImpl is OwnerValidator, Owned {\n\n    address[] public owners;\n\n\n    TokenContract public tokenContract;\n\n    function OwnerValidatorImpl() {\n        owners.push(msg.sender);\n    }\n\n\n    function indexOfOwners(address _address) private constant returns (uint pos) {\n        pos = 0;\n        for (uint i = 0; i < owners.length; i++) {\n            if (owners[i] == _address) {\n                pos = i + 1;\n                break;\n            }\n        }\n        return pos;                \n    }\n\n    function validate(address addr) constant returns (bool) {\n        return (indexOfOwners(addr) != 0);\n    }\n        \n    function getOwners() constant returns (address[]) {\n        return owners;\n    } \n\n    function addOwner(address addr) onlyWorking {\n        if (validate(msg.sender)) {\n            if (!validate(addr)) {\n                owners.push(addr);\n            }\n        }\n    }\n\n    function removeOwner(address addr) onlyWorking {\n        if (validate(msg.sender)) {\n            uint pos = indexOfOwners(addr);\n            if (pos > 0) {\n                owners[pos - 1] = 0x0;\n            }\n        }\n    }\n\n    function setTokenContract(address _tokenContract) onlyWorking {\n        if (validate(msg.sender)) {\n            tokenContract = TokenContract(_tokenContract);\n        }\n    }\n\n    function ownerValidate(address addr) constant returns (bool) {\n        return validate(addr);\n    }\n\n    function transferFromSender(address _to, uint256 _value) returns (bool success) {\n        if (!validate(msg.sender)) throw;\n        return tokenContract.transferFromSender(_to, _value);\n    }\n\n    function sendFromOwn(address _to, uint256 _value) returns (bool success) {\n        if (!validate(msg.sender)) throw;\n        if (!_to.send(_value)) throw;\n        return true;\n    }\n}\n\n// File: contracts/OffChainManager.sol\n\ncontract OffChainManager {\n    function isToOffChainAddress(address addr) constant returns (bool);\n    function getOffChainRootAddress() constant returns (address);\n}\n\ncontract OffChainManagerImpl is OffChainManager, Owned {\n    address public rootAddress;\n    address[] public offChainAddreses;\n\n    mapping (address => uint256) refOffChainAddresses; \n\n    OwnerValidator public ownerValidator;\n\n    TokenContract public tokenContract;\n\n    function OffChainManagerImpl(\n        address _rootAddress,\n        address _ownerValidator\n    ) {\n        rootAddress = _rootAddress;\n        ownerValidator = OwnerValidator(_ownerValidator);\n    }\n\n    function setRootAddress(address _address) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            rootAddress = _address;\n        }\n    }\n\n    function setOwnerValidatorAddress(address _ownerValidator) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            ownerValidator = OwnerValidator(_ownerValidator);\n        }\n    }\n\n    function setTokenContract(address _tokenContract) {\n        if (ownerValidator.validate(msg.sender)) {\n            tokenContract = TokenContract(_tokenContract);\n        }\n    }\n\n    function offChainAddresesValidCount() constant returns (uint) {\n        uint cnt = 0;\n        for (uint i = 0; i < offChainAddreses.length; i++) {\n            if (offChainAddreses[i] != 0) {\n                cnt++;\n            }\n        }\n        return cnt;\n    }\n\n    function addOffChainAddress(address _address) private {\n        if (!isToOffChainAddress(_address)) {\n            offChainAddreses.push(_address);\n            refOffChainAddresses[_address] = offChainAddreses.length;\n        }\n    }\n\n    function removeOffChainAddress(address _address) private {\n        uint pos = refOffChainAddresses[_address];\n        if (pos > 0) {\n            offChainAddreses[pos - 1] = 0;\n            refOffChainAddresses[_address] = 0x0;\n        }\n    }\n\n    function addOffChainAddresses(address[] _addresses) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            for (uint i = 0; i < _addresses.length; i++) {\n                addOffChainAddress(_addresses[i]);\n            }\n        }\n    }\n\n    function removeOffChainAddresses(address[] _addresses) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            for (uint i = 0; i < _addresses.length; i++) {\n                removeOffChainAddress(_addresses[i]);\n            }\n        }\n    }\n\n    function ownerValidate(address addr) constant returns (bool) {\n        return ownerValidator.validate(addr);\n    }\n\n    function transferFromSender(address _to, uint256 _value) returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw;\n        return tokenContract.transferFromSender(_to, _value);\n    }\n\n    function sendFromOwn(address _to, uint256 _value) returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw; \n        if (!_to.send(_value)) throw;\n        return true;\n    }\n\n    function isToOffChainAddress(address addr) constant returns (bool) {\n        return refOffChainAddresses[addr] > 0;\n    }\n\n    function getOffChainRootAddress() constant returns (address) {\n        return rootAddress;\n    }\n\n    function getOffChainAddresses() constant returns (address[]) {\n        return offChainAddreses;\n    } \n\n    function isToOffChainAddresses(address[] _addresses) constant returns (bool) {\n        for (uint i = 0; i < _addresses.length; i++) {\n            if (!isToOffChainAddress(_addresses[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\n// File: contracts/TokenContract.sol\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\n// assert(b > 0);\n    uint256 c = a / b;\n// assert(a == b * c + a % b);\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract TokenContractImpl is TokenContract, Owned {\n    using SafeMath for uint256;\n    string public standard = \"Token 0.1\";\n    uint256 _totalSupply;\n    uint8 _decimals;\n    address public _mainAddress;\n\n    mapping (address => uint256) public balances;\n    mapping (address => mapping (address => uint256)) public allowed;\n\n    OwnerValidator public ownerValidator;\n    OffChainManager public offChainManager;\n\n    bool public isRedenominated;\n    uint256 public redenomiValue;\n    mapping (address => uint256) public redenominatedBalances;\n    mapping (address => mapping (address => uint256)) public redenominatedAllowed;\n\n    function TokenContractImpl(\n        uint256 initialSupply,\n        uint8 decimals,\n        address _ownerValidator,\n        address _offChainManager\n    ){\n        balances[msg.sender] = initialSupply;\n        _totalSupply = initialSupply;\n        _decimals = decimals;\n        ownerValidator = OwnerValidator(_ownerValidator);\n        offChainManager = OffChainManager(_offChainManager);\n    }\n\n    function totalSupply() constant returns (uint256 totalSupply) {\n        if (isRedenominated) {\n            return redenominatedValue(_totalSupply);\n        }\n        return _totalSupply;\n    }\n\n    function decimals() constant returns (uint8 decimals) {\n        return _decimals;\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        if (isRedenominated) {\n            if (redenominatedBalances[_owner] > 0) {\n                return redenominatedBalances[_owner];\n            }\n            return redenominatedValue(balances[_owner]);\n        }\n        return balances[_owner];\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {\n        if (isRedenominated) {\n            if (redenominatedAllowed[_owner][_spender] > 0) {\n                return redenominatedAllowed[_owner][_spender];\n            }\n            return redenominatedValue(allowed[_owner][_spender]);\n        }\n        return allowed[_owner][_spender];\n    }\n\n    function redenominatedValue(uint256 _value) private returns (uint256) {\n        return _value.mul(redenomiValue);\n    }\n\n    function ownerValidate(address addr) constant returns (bool) {\n        return ownerValidator.validate(addr);\n    }\n\n\n    function redenominate(uint256 _redenomiValue) {\n        if (isRedenominated) throw;\n        if (ownerValidator.validate(msg.sender)) {\n            redenomiValue = _redenomiValue;\n            Redenominate(msg.sender, isRedenominated, redenomiValue);\n        }\n    }   \n\n\n    function applyRedenomination() onlyNotWorking {\n        if (isRedenominated) throw;\n        if (redenomiValue == 0) throw;\n        if (ownerValidator.validate(msg.sender)) {\n            isRedenominated = true;\n            ApplyRedenomination(msg.sender, isRedenominated, redenomiValue);\n        }\n    }   \n\n    function setOwnerValidatorAddress(address _ownerValidator) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            ownerValidator = OwnerValidator(_ownerValidator);\n        }\n    }\n\n    function setOffChainManagerAddress(address _offChainManager) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            offChainManager = OffChainManager(_offChainManager);\n        }\n    }\n\n    function transfer(address _to, address _msgSender, uint256 _value) onlyWorking returns (bool success) {\n        if (msg.sender != _mainAddress) throw; \n        return transferProcess(_msgSender, _to, _value);\n    }\n\n    function transferProcess(address _from, address _to, uint256 _value) private returns (bool success) {\n        if (balanceOf(_from) < _value) throw;\n        subtractBalance(_from, _value);\n        if (offChainManager.isToOffChainAddress(_to)) {\n            addBalance(offChainManager.getOffChainRootAddress(), _value);\n            ToOffChainTransfer(_from, _to, _to, _value);\n        } else {\n            addBalance(_to, _value);\n        }\n        return true;        \n    }\n\n    function addBalance(address _address, uint256 _value) private {\n        if (isRedenominated) {\n            if (redenominatedBalances[_address] == 0) {\n                if (balances[_address] > 0) {\n                    redenominatedBalances[_address] = redenominatedValue(balances[_address]);\n                    balances[_address] = 0;\n                }\n            }\n            redenominatedBalances[_address] = redenominatedBalances[_address].add(_value);\n        } else {\n            balances[_address] = balances[_address].add(_value);\n        }\n    }\n\n    function subtractBalance(address _address, uint256 _value) private {\n        if (isRedenominated) {\n            if (redenominatedBalances[_address] == 0) {\n                if (balances[_address] > 0) {\n                    redenominatedBalances[_address] = redenominatedValue(balances[_address]);\n                    balances[_address] = 0;\n                }\n            }\n            redenominatedBalances[_address] = redenominatedBalances[_address].sub(_value);\n        } else {\n            balances[_address] = balances[_address].sub(_value);\n        }\n    }\n\n    function transferFrom(address _from, address _to, address _msgSender, uint256 _value) onlyWorking returns (bool success) {\n        if (msg.sender != _mainAddress) throw; \n        if (balanceOf(_from) < _value) throw;\n        if (balanceOf(_to).add(_value) < balanceOf(_to)) throw;\n        if (_value > allowance(_from, _msgSender)) throw;\n        subtractBalance(_from, _value);\n        if (offChainManager.isToOffChainAddress(_to)) {\n            addBalance(offChainManager.getOffChainRootAddress(), _value);\n            ToOffChainTransfer(_msgSender, _to, _to, _value);\n        } else {\n            addBalance(_to, _value);\n        }\n        subtractAllowed(_from, _msgSender, _value);\n        return true;\n    }\n\n\n    function transferFromSender(address _to, uint256 _value) onlyWorking returns (bool success) {\n        if (!transferProcess(msg.sender, _to, _value)) throw;\n        TransferFromSender(msg.sender, _to, _value);\n        return true;\n    }\n\n\n    function transferFromOwn(address _to, uint256 _value) onlyWorking returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw;\n        if (!transferProcess(this, _to, _value)) throw;\n        TransferFromSender(this, _to, _value);    \n        return true;\n    }\n\n    function sendFromOwn(address _to, uint256 _value) returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw; \n        if (!_to.send(_value)) throw;\n        return true;\n    }\n\n    function approve(address _spender, address _msgSender, uint256 _value) onlyWorking returns (bool success) {\n        if (msg.sender != _mainAddress) throw; \n        setAllowed(_msgSender, _spender, _value);\n        return true;\n    }\n\n    function subtractAllowed(address _from, address _spender, uint256 _value) private {\n        if (isRedenominated) {\n            if (redenominatedAllowed[_from][_spender] == 0) {\n                if (allowed[_from][_spender] > 0) {\n                    redenominatedAllowed[_from][_spender] = redenominatedValue(allowed[_from][_spender]);\n                    allowed[_from][_spender] = 0;\n                }\n            }\n            redenominatedAllowed[_from][_spender] = redenominatedAllowed[_from][_spender].sub(_value);\n        } else {\n            allowed[_from][_spender] = allowed[_from][_spender].sub(_value);\n        }\n    }\n\n    function setAllowed(address _owner, address _spender, uint256 _value) private {\n        if (isRedenominated) {\n            redenominatedAllowed[_owner][_spender] = _value;\n        } else {\n            allowed[_owner][_spender] = _value;\n        }\n    }\n\n    function setMainAddress(address _address) onlyOwner {\n        _mainAddress = _address;\n    }\n\n    event TransferFromSender(address indexed _from, address indexed _to, uint256 _value);\n    event ToOffChainTransfer(address indexed _from, address indexed _toKey, address _to, uint256 _value);\n    event Redenominate(address _owner, bool _isRedenominated, uint256 _redenomiVakye);\n    event ApplyRedenomination(address _owner, bool _isRedenominated, uint256 _redenomiVakye);\n}\n\n// File: contracts/MainContract.sol\n\ncontract MainContract {\n    string public standard = \"Token 0.1\";\n    string public name;\n    string public symbol;\n\n    OwnerValidator public ownerValidator;\n    TokenContract public tokenContract;\n\n    function MainContract(\n        string _tokenName,\n        address _ownerValidator,\n        address _tokenContract,\n        string _symbol\n    ) {\n        ownerValidator = OwnerValidator(_ownerValidator);\n        tokenContract = TokenContract(_tokenContract);\n        name = _tokenName;\n        symbol = _symbol;\n    }\n\n    function totalSupply() constant returns(uint256 totalSupply) {\n        return tokenContract.totalSupply();\n    }\n\n    function decimals() constant returns(uint8 decimals) {\n        return tokenContract.decimals();\n    }\n\n    function setOwnerValidateAddress(address _ownerValidator) {\n        if (ownerValidator.validate(msg.sender)) {\n            ownerValidator = OwnerValidator(_ownerValidator);\n        }\n    }\n\n    function setTokenContract(address _tokenContract) {\n        if (ownerValidator.validate(msg.sender)) {\n            tokenContract = TokenContract(_tokenContract);\n        }\n    }\n\n    function transferFromSender(address _to, uint256 _value) returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw;\n        return tokenContract.transferFromSender(_to, _value);\n    }\n\n    function sendFromOwn(address _to, uint256 _value) returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw; \n        if (!_to.send(_value)) throw;\n        return true;\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return uint256(tokenContract.balanceOf(_owner));\n    }\n\n    function transfer(address _to, uint256 _value) returns (bool success) {\n        if (tokenContract.transfer(_to, msg.sender, _value)) {\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else {\n            throw;\n        }\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n        if (tokenContract.transferFrom(_from, _to, msg.sender, _value)) {\n            Transfer(_from, _to, _value);\n            return true;\n        } else {\n            throw;\n        }\n    }\n\n    function approve(address _spender, uint256 _value) returns (bool success) {\n        if (tokenContract.approve(_spender,msg.sender,_value)) {\n            Approval(msg.sender,_spender,_value);\n            return true;\n        } else {\n            throw;\n        }\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n        return tokenContract.allowance(_owner,_spender);\n    }\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ownerValidator\",\"type\":\"address\"}],\"name\":\"setOwnerValidateAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendFromOwn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFromSender\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"setTokenContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerValidator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_ownerValidator\",\"type\":\"address\"},{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600960808190527f546f6b656e20302e31000000000000000000000000000000000000000000000060a090815261003e91600091906100dc565b5034801561004b57600080fd5b50604051610eac380380610eac833981016040908152815160208084015192840151606085015160038054600160a060020a03808816600160a060020a0319928316179092556004805492851692909116919091179055928501805190959193909101916100be916001918701906100dc565b5080516100d29060029060208401906100dc565b5050505050610177565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011d57805160ff191683800117855561014a565b8280016001018555821561014a579182015b8281111561014a57825182559160200191906001019061012f565b5061015692915061015a565b5090565b61017491905b808211156101565760008155600101610160565b90565b610d26806101866000396000f3006080604052600436106100cc5763ffffffff60e060020a60003504166306fdde0381146100d1578063095ea7b31461015b57806318160ddd1461019357806323b872dd146101ba578063313ce567146101e457806350e86e1e1461020f57806355a373d6146102325780635a3b7e421461026357806370a08231146102785780637e6216671461029957806395d89b41146102bd578063a9059cbb146102d2578063bae804a7146102f6578063bbcd5bbe1461031a578063d2d5a55c1461033b578063dd62ed3e14610350575b600080fd5b3480156100dd57600080fd5b506100e6610377565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610120578181015183820152602001610108565b50505050905090810190601f16801561014d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016757600080fd5b5061017f600160a060020a0360043516602435610404565b604080519115158252519081900360200190f35b34801561019f57600080fd5b506101a86104f9565b60408051918252519081900360200190f35b3480156101c657600080fd5b5061017f600160a060020a036004358116906024351660443561057f565b3480156101f057600080fd5b506101f9610687565b6040805160ff9092168252519081900360200190f35b34801561021b57600080fd5b50610230600160a060020a03600435166106dc565b005b34801561023e57600080fd5b50610247610789565b60408051600160a060020a039092168252519081900360200190f35b34801561026f57600080fd5b506100e6610798565b34801561028457600080fd5b506101a8600160a060020a03600435166107f3565b3480156102a557600080fd5b5061017f600160a060020a0360043516602435610892565b3480156102c957600080fd5b506100e6610951565b3480156102de57600080fd5b5061017f600160a060020a03600435166024356109a9565b34801561030257600080fd5b5061017f600160a060020a0360043516602435610a9c565b34801561032657600080fd5b50610230600160a060020a0360043516610bc8565b34801561034757600080fd5b50610247610c76565b34801561035c57600080fd5b506101a8600160a060020a0360043581169060243516610c85565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103fc5780601f106103d1576101008083540402835291602001916103fc565b820191906000526020600020905b8154815290600101906020018083116103df57829003601f168201915b505050505081565b60048054604080517fe1f21c67000000000000000000000000000000000000000000000000000000008152600160a060020a03868116948201949094523360248201526044810185905290516000939092169163e1f21c679160648082019260209290919082900301818787803b15801561047e57600080fd5b505af1158015610492573d6000803e3d6000fd5b505050506040513d60208110156104a857600080fd5b5051156100cc57604080518381529051600160a060020a0385169133917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259181900360200190a35060015b92915050565b6000600460009054906101000a9004600160a060020a0316600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561054e57600080fd5b505af1158015610562573d6000803e3d6000fd5b505050506040513d602081101561057857600080fd5b5051905090565b60048054604080517f15dacbea000000000000000000000000000000000000000000000000000000008152600160a060020a03878116948201949094528584166024820152336044820152606481018590529051600093909216916315dacbea9160848082019260209290919082900301818787803b15801561060157600080fd5b505af1158015610615573d6000803e3d6000fd5b505050506040513d602081101561062b57600080fd5b5051156100cc5782600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35060019392505050565b6000600460009054906101000a9004600160a060020a0316600160a060020a031663313ce5676040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561054e57600080fd5b6003546040805160e060020a63207c64fb0281523360048201529051600160a060020a039092169163207c64fb916024808201926020929091908290030181600087803b15801561072c57600080fd5b505af1158015610740573d6000803e3d6000fd5b505050506040513d602081101561075657600080fd5b505115610786576003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b600454600160a060020a031681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103fc5780601f106103d1576101008083540402835291602001916103fc565b60048054604080517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a03858116948201949094529051600093909216916370a082319160248082019260209290919082900301818787803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b505050506040513d602081101561088a57600080fd5b505192915050565b6003546040805160e060020a63207c64fb0281523360048201529051600092600160a060020a03169163207c64fb91602480830192602092919082900301818787803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b505050506040513d602081101561090b57600080fd5b5051151561091857600080fd5b604051600160a060020a0384169083156108fc029084906000818181858888f19350505050151561094857600080fd5b50600192915050565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103fc5780601f106103d1576101008083540402835291602001916103fc565b60048054604080517fbeabacc8000000000000000000000000000000000000000000000000000000008152600160a060020a03868116948201949094523360248201526044810185905290516000939092169163beabacc89160648082019260209290919082900301818787803b158015610a2357600080fd5b505af1158015610a37573d6000803e3d6000fd5b505050506040513d6020811015610a4d57600080fd5b5051156100cc57604080518381529051600160a060020a0385169133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35060016104f3565b6003546040805160e060020a63207c64fb0281523360048201529051600092600160a060020a03169163207c64fb91602480830192602092919082900301818787803b158015610aeb57600080fd5b505af1158015610aff573d6000803e3d6000fd5b505050506040513d6020811015610b1557600080fd5b50511515610b2257600080fd5b60048054604080517fbae804a7000000000000000000000000000000000000000000000000000000008152600160a060020a0387811694820194909452602481018690529051929091169163bae804a7916044808201926020929091908290030181600087803b158015610b9557600080fd5b505af1158015610ba9573d6000803e3d6000fd5b505050506040513d6020811015610bbf57600080fd5b50519392505050565b6003546040805160e060020a63207c64fb0281523360048201529051600160a060020a039092169163207c64fb916024808201926020929091908290030181600087803b158015610c1857600080fd5b505af1158015610c2c573d6000803e3d6000fd5b505050506040513d6020811015610c4257600080fd5b5051156107865760048054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff1990911617905550565b600354600160a060020a031681565b60048054604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a0386811694820194909452848416602482015290516000939092169163dd62ed3e9160448082019260209290919082900301818787803b158015610b9557600080fd00a165627a7a723058206acf518e718535a435a0ec953e858465b7bbf424b07f0e5c9702091e19d7931b0029000000000000000000000000000000000000000000000000000000000000008000000000000000000000000057bfdc2f6142f5388d697fd44fa79435b9ce144c0000000000000000000000005ab29bff32e9d910a6319a761837612d467a2d4000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000084e4147455a454e4900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034e5a450000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000057bfdc2f6142f5388d697fd44fa79435b9ce144c0000000000000000000000005ab29bff32e9d910a6319a761837612d467a2d4000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000084e4147455a454e4900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034e5a450000000000000000000000000000000000000000000000000000000000"
}