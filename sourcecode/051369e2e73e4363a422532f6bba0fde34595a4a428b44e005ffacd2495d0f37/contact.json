{
  "address": "0x9db21e6228b347e504cc346baf15067d44d12ce0",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "moduleToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-15\n*/\n\npragma solidity ^0.4.16;\ncontract moduleTokenInterface{\n    uint256 public totalSupply;\n\n    function balanceOf(address _owner) public constant returns (uint256 balance);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    \n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n    \n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed a_owner, address indexed _spender, uint256 _value);\n    event OwnerChang(address indexed _old,address indexed _new,uint256 _coin_change);\n\tevent adminUsrChange(address usrAddr,address changeBy,bool isAdded);\n\tevent onAdminTransfer(address to,uint256 value);\n}\n\ncontract moduleToken is moduleTokenInterface {\n    \n    struct transferPlanInfo{\n        uint256 transferValidValue;\n        bool isInfoValid;\n    }\n    \n    struct ethPlanInfo{\n\t    uint256 ethNum;\n\t    uint256 coinNum;\n\t    bool isValid;\n\t}\n\t\n\t//管理员之一发起一个转账操作，需要多人批准时采用这个数据结构\n\tstruct transferEthAgreement{\n\t\t//要哪些人签署\n\t    mapping(address=>bool) signUsrList;\t\t\n\t\t\n\t\t//已经签署的人数\n\t\tuint32 signedUsrCount;\n\t\t\n\t\t//要求转出的eth数量\n\t    uint256 transferEthInWei;\n\t\t\n\t\t//转往哪里\n\t\taddress to;\n\t\t\n\t\t//当前转账要求的发起人\n\t\taddress infoOwner;\n\t\t\n\t\t//当前记录是否有效(必须123456789)\n\t    uint32 magic;\n\t    \n\t    //是否生效了\n\t    bool isValid;\n\t}\n\t\n\t\n\n    string public name;                   //名称，例如\"My test token\"\n    uint8 public decimals;               //返回token使用的小数点后几位。比如如果设置为3，就是支持0.001表示.\n    string public symbol;               //token简称,like MTT\n    address public owner;\n    \n    mapping (address => uint256) public balances;\n    mapping (address => mapping (address => uint256)) public allowed;\n\t\n\t//是否允许直接接受eth而不返回cot\n\tbool public canRecvEthDirect=false;\n    \n    \n    //以下为本代币协议特殊逻辑所需的相关变\n    //\n    \n    //币的价格，为0时则花钱按价格购买的逻辑不生效   \n\tuint256 public coinPriceInWei;\n\t\n\t//在列表里的人转出代币必须遵守规定的时间、数量限制(比如实现代币定时解冻)\n\tmapping(address=>transferPlanInfo) public transferPlanList;\n\t\n\t//指定的人按指定的以太币数量、代币数量购买代币，不按价格逻辑购买（比如天使轮募资）\n\t//否则按价格相关逻辑处理购买代币的请求\n\tmapping(address => ethPlanInfo) public ethPlanList;\n\t\n\tuint public blockTime=block.timestamp;\n    \n    bool public isTransPaused=false;//为true时禁止转账 \n    \n     //实现多管理员相关的变量  \n    struct adminUsrInfo{\n        bool isValid;\n\t    string userName;\n\t\tstring descInfo;\n    }\n    mapping(address=>adminUsrInfo) public adminOwners; //管理员组\n    bool public isAdminOwnersValid;\n    uint32 public adminUsrCount;//有效的管理员用户数\n    mapping(uint256=>transferEthAgreement) public transferEthAgreementList;\n\n    function moduleToken(\n        uint256 _initialAmount,\n        uint8 _decimalUnits) public \n    {\n        owner=msg.sender;//记录合约的owner\n\t\tif(_initialAmount<=0){\n\t\t    totalSupply = 100000000000;   // 设置初始总量\n\t\t    balances[owner]=100000000000;\n\t\t}else{\n\t\t    totalSupply = _initialAmount;   // 设置初始总量\n\t\t    balances[owner]=_initialAmount;\n\t\t}\n\t\tif(_decimalUnits<=0){\n\t\t    decimals=2;\n\t\t}else{\n\t\t    decimals = _decimalUnits;\n\t\t}\n        name = \"CareerOn Token\"; \n        symbol = \"COT\";\n    }\n    \n    function changeContractName(string _newName,string _newSymbol) public {\n        require(msg.sender==owner || adminOwners[msg.sender].isValid && tx.origin==msg.sender);\n        name=_newName;\n        symbol=_newSymbol;\n    }\n    \n    \n    function transfer(\n        address _to, \n        uint256 _value) public returns (bool success) \n    {\n        require(tx.origin==msg.sender && _to!=msg.sender);\n        if(isTransPaused){\n            revert();\n            return;\n        }\n        //默认totalSupply 不会超过最大值 (2^256 - 1).\n        //如果随着时间的推移将会有新的token生成，则可以用下面这句避免溢出的异常\n\t\tif(_to==address(this)){\n            revert();\n            return;\n\t\t}\n\t\tif(balances[msg.sender] < _value || \n\t\t\tbalances[_to] + _value <= balances[_to]\n\t\t\t)\n\t\t{\n            revert();\n            return;\n\t\t}\n        if(transferPlanList[msg.sender].isInfoValid && transferPlanList[msg.sender].transferValidValue<_value)\n\t\t{\n            revert();\n            return;\n\t\t}\n        balances[msg.sender] -= _value;//从消息发送者账户中减去token数量_value\n        balances[_to] += _value;//往接收账户增加token数量_value\n        if(transferPlanList[msg.sender].isInfoValid){\n            transferPlanList[msg.sender].transferValidValue -=_value;\n        }\n        if(msg.sender==owner){\n            emit Transfer(address(this), _to, _value);//触发转币交易事件\n        }else{\n            emit Transfer(msg.sender, _to, _value);//触发转币交易事件\n        }\n        return true;\n    }\n\n\n    function transferFrom(\n        address _from, \n        address _to, \n        uint256 _value) public returns (bool success) \n    {\n        require(tx.origin==msg.sender && _from!=_to);\n        if(isTransPaused){\n            revert();\n            return;\n        }\n\t\tif(_to==address(this)){\n            revert();\n            return;\n\t\t}\n        if(balances[_from] < _value ||\n\t\t\tallowed[_from][msg.sender] < _value ||\n\t\t\tbalances[_to] + _value<balances[_to])\n\t\t{\n            revert();\n            return;\n\t\t}\n        if(transferPlanList[_from].isInfoValid && transferPlanList[_from].transferValidValue<_value)\n\t\t{\n            revert();\n            return;\n\t\t}\n        balances[_to] += _value;//接收账户增加token数量_value\n        balances[_from] -= _value; //支出账户_from减去token数量_value\n        allowed[_from][msg.sender] -= _value;//消息发送者可以从账户_from中转出的数量减少_value\n        if(transferPlanList[_from].isInfoValid){\n            transferPlanList[_from].transferValidValue -=_value;\n        }\n        if(msg.sender==owner){\n            emit Transfer(address(this), _to, _value);//触发转币交易事件\n        }else{\n            emit Transfer(msg.sender, _to, _value);//触发转币交易事件\n        }\n        return true;\n    }\n    \n    function balanceOf(address accountAddr) public constant returns (uint256 balance) {\n        return balances[accountAddr];\n    }\n\n\n    function approve(address _spender, uint256 _value) public returns (bool success) \n    { \n        require(msg.sender!=_spender && _value>0 && tx.origin==msg.sender);\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(\n        address _owner, \n        address _spender) public constant returns (uint256 remaining) \n    {\n        return allowed[_owner][_spender];//允许_spender从_owner中转出的token数\n    }\n\t\n\t//以下为本代币协议的特殊逻辑\n\t\n\t//转移协议所有权并将附带的代币一并转移过去\n\tfunction changeOwner(address newOwner) public{\n        require(msg.sender==owner && \n            msg.sender!=newOwner && \n            tx.origin==msg.sender && \n            !adminOwners[newOwner].isValid);\n        balances[newOwner]=balances[owner];\n        balances[owner]=0;\n        owner=newOwner;\n        emit OwnerChang(msg.sender,newOwner,balances[owner]);//触发合约所有权的转移事件\n    }\n    \n    function setPauseStatus(bool isPaused)public{\n        require(tx.origin==msg.sender);\n        if(msg.sender!=owner && !adminOwners[msg.sender].isValid){\n            revert();\n            return;\n        }\n        isTransPaused=isPaused;\n    }\n    \n    //设置转账限制，比如冻结什么的\n\tfunction setTransferPlan(address addr,\n\t                        uint256 allowedMaxValue,\n\t                        bool isValid) public\n\t{\n\t    require(tx.origin==msg.sender);\n\t    if(msg.sender!=owner && !adminOwners[msg.sender].isValid){\n\t        revert();\n\t        return ;\n\t    }\n\t    transferPlanList[addr].isInfoValid=isValid;\n\t    if(transferPlanList[addr].isInfoValid){\n\t        transferPlanList[addr].transferValidValue=allowedMaxValue;\n\t    }\n\t}\n    \n    //把本代币协议账户下的eth转到指定账户\n\tfunction TransferEthToAddr(address _to,uint256 _value)public payable{\n\t    require(tx.origin==msg.sender);\n        require(msg.sender==owner && !isAdminOwnersValid);\n        _to.transfer(_value);\n    }\n    \n    function createTransferAgreement(uint256 agreeMentId,\n                                      uint256 transferEthInWei,\n                                      address to) public {\n        require(msg.sender==tx.origin);\n        require(adminOwners[msg.sender].isValid && \n        transferEthAgreementList[agreeMentId].magic!=123456789 && \n        transferEthAgreementList[agreeMentId].magic!=987654321);\n        transferEthAgreementList[agreeMentId].magic=123456789;\n        transferEthAgreementList[agreeMentId].infoOwner=msg.sender;\n        transferEthAgreementList[agreeMentId].transferEthInWei=transferEthInWei;\n        transferEthAgreementList[agreeMentId].to=to;\n        transferEthAgreementList[agreeMentId].isValid=true;\n        transferEthAgreementList[agreeMentId].signUsrList[msg.sender]=true;\n        transferEthAgreementList[agreeMentId].signedUsrCount=1;\n        \n    }\n\t\n\tfunction disableTransferAgreement(uint256 agreeMentId) public {\n\t    require(msg.sender==tx.origin);\n\t\trequire(transferEthAgreementList[agreeMentId].infoOwner==msg.sender &&\n\t\t\t    transferEthAgreementList[agreeMentId].magic==123456789);\n\t\ttransferEthAgreementList[agreeMentId].isValid=false;\n\t\ttransferEthAgreementList[agreeMentId].magic=987654321;\n\t}\n\t\n\tfunction sign(uint256 agreeMentId,address to,uint256 transferEthInWei) public payable{\n\t    require(tx.origin==msg.sender);\n\t\trequire(transferEthAgreementList[agreeMentId].magic==123456789 &&\n\t\ttransferEthAgreementList[agreeMentId].isValid &&\n\t\ttransferEthAgreementList[agreeMentId].transferEthInWei==transferEthInWei &&\n\t\ttransferEthAgreementList[agreeMentId].to==to &&\n\t\tadminOwners[msg.sender].isValid &&\n\t\ttransferEthAgreementList[agreeMentId].signUsrList[msg.sender]!=true &&\n\t\tadminUsrCount>=2\n\t\t);\n\t\ttransferEthAgreementList[agreeMentId].signUsrList[msg.sender]=true;\n\t\ttransferEthAgreementList[agreeMentId].signedUsrCount++;\n\t\t\n\t\tif(transferEthAgreementList[agreeMentId].signedUsrCount<=adminUsrCount/2)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tto.transfer(transferEthInWei);\n\t\ttransferEthAgreementList[agreeMentId].isValid=false;\n\t\ttransferEthAgreementList[agreeMentId].magic=987654321;\n\t\temit onAdminTransfer(to,transferEthInWei);\n\t\treturn;\n\t}\n\t\n\tstruct needToAddAdminInfo{\n\t\tuint256 magic;\n\t\tmapping(address=>uint256) postedPeople;\n\t\tuint32 postedCount;\n\t}\n\tmapping(address=>needToAddAdminInfo) public needToAddAdminInfoList;\n\tfunction addAdminOwners(address usrAddr,\n\t\t\t\t\t  string userName,\n\t\t\t\t\t  string descInfo)public \n\t{\n\t\trequire(msg.sender==tx.origin);\n\t\tneedToAddAdminInfo memory info;\n\t\t//不是管理员也不是owner，则禁止任何操作\n\t\tif(!adminOwners[msg.sender].isValid && owner!=msg.sender){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\t//任何情况,owner地址不可以被添加到管理员组\n\t\tif(usrAddr==owner){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t//已经在管理员组的不可以被添加\n\t\tif(adminOwners[usrAddr].isValid){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\t//不允许添加自己到管理员组\n\t\tif(usrAddr==msg.sender){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\t//管理员不到2人时，owner可以至多添加2人到管理员\n\t\tif(adminUsrCount<2){\n\t\t\tif(msg.sender!=owner){\n\t\t\t\trevert();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tadminOwners[usrAddr].isValid=true;\n\t\t\tadminOwners[usrAddr].userName=userName;\n\t\t\tadminOwners[usrAddr].descInfo=descInfo;\n\t\t\tadminUsrCount++;\n\t\t\tif(adminUsrCount>=2) isAdminOwnersValid=true;\n\t\t\temit adminUsrChange(usrAddr,msg.sender,true);\n\t\t\treturn;\n\t\t}\n\t\t//管理员大于等于2人时，owner添加管理员需要得到过半数管理员的同意，而且至少必须是2\n\t\tif(msg.sender==owner){\n\t\t\t//某个用户已经被要求添加到管理员组，owner此时是没有投票权的\n\t\t\tif(needToAddAdminInfoList[usrAddr].magic==123456789){\n\t\t\t\trevert();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//允许owner把某个人添加到要求进入管理员组的列表里，后续由其它管理员投票\n\t\t\tinfo.magic=123456789;\n\t\t\tinfo.postedCount=0;\n\t\t\tneedToAddAdminInfoList[usrAddr]=info;\n\t\t\treturn;\n\t\t\t\n\t\t}//管理员大于等于2人时，owner添加新的管理员，必须过半数管理员同意且至少是2\n\t\telse if(adminOwners[msg.sender].isValid)\n\t\t{\n\t\t\t//管理员只能投票确认添加管理员，不能直接添加管理员\n\t\t\tif(needToAddAdminInfoList[usrAddr].magic!=123456789){\n\t\t\t\trevert();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//已经投过票的管理员不允许再投\t\t\t\n\t\t\tif(needToAddAdminInfoList[usrAddr].postedPeople[msg.sender]==123456789){\n\t\t\t\trevert();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tneedToAddAdminInfoList[usrAddr].postedCount++;\n\t\t\tneedToAddAdminInfoList[usrAddr].postedPeople[msg.sender]=123456789;\n\t\t\tif(adminUsrCount>=2 && \n\t\t\t   needToAddAdminInfoList[usrAddr].postedCount>adminUsrCount/2){\n\t\t\t\tadminOwners[usrAddr].userName=userName;\n\t\t\t\tadminOwners[usrAddr].descInfo=descInfo;\n\t\t\t\tadminOwners[usrAddr].isValid=true;\n\t\t\t\tneedToAddAdminInfoList[usrAddr]=info;\n\t\t\t\tadminUsrCount++;\n\t\t\t\temit adminUsrChange(usrAddr,msg.sender,true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t}else{\n\t\t\treturn revert();//其它情况一律不可以添加管理员\n\t\t}\t\t\n\t}\n\tstruct needDelFromAdminInfo{\n\t\tuint256 magic;\n\t\tmapping(address=>uint256) postedPeople;\n\t\tuint32 postedCount;\n\t}\n\tmapping(address=>needDelFromAdminInfo) public needDelFromAdminInfoList;\n\tfunction delAdminUsrs(address usrAddr) public {\n\t    require(msg.sender==tx.origin);\n\t    //不是管理员也不是owner，则禁止任何操作\n\t\tif(!adminOwners[msg.sender].isValid && owner!=msg.sender){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\tneedDelFromAdminInfo memory info;\n\t\t//尚不是管理员，无需删除\n\t\tif(!adminOwners[usrAddr].isValid){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\t//当前管理员数小于4的话不让再删用户\n\t\tif(adminUsrCount<4){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\t//当前管理员数是奇数时不让删用户\n\t\tif(adminUsrCount%2!=0){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\t//不允许把自己退出管理员\n\t\tif(usrAddr==msg.sender){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\tif(msg.sender==owner){\n\t\t\t//owner没有权限确认删除管理员\n\t\t\tif(needDelFromAdminInfoList[usrAddr].magic==123456789){\n\t\t\t\trevert();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//owner可以提议删除管理员，但是需要管理员过半数同意\n\t\t\tinfo.magic=123456789;\n\t\t\tinfo.postedCount=0;\n\t\t\tneedDelFromAdminInfoList[usrAddr]=info;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t//管理员确认删除用户\n\t\t\n\t\t//管理员只有权限确认删除\n\t\tif(needDelFromAdminInfoList[usrAddr].magic!=123456789){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\t//已经投过票的不允许再投\n\t\tif(needDelFromAdminInfoList[usrAddr].postedPeople[msg.sender]==123456789){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\tneedDelFromAdminInfoList[usrAddr].postedCount++;\n\t\tneedDelFromAdminInfoList[usrAddr].postedPeople[msg.sender]=123456789;\n\t\t//同意的人数尚未超过一半则直接返回\n\t\tif(needDelFromAdminInfoList[usrAddr].postedCount<=adminUsrCount/2){\n\t\t\treturn;\n\t\t}\n\t\t//同意的人数超过一半\n\t\tadminOwners[usrAddr].isValid=false;\n\t\tif(adminUsrCount>=1) adminUsrCount--;\n\t\tif(adminUsrCount<=1) isAdminOwnersValid=false;\n\t\tneedDelFromAdminInfoList[usrAddr]=info;\n\t\temit adminUsrChange(usrAddr,msg.sender,false);\n\t}\n\t\n\t//设置指定人按固定eth数、固定代币数购买代币，比如天使轮募资\n\tfunction setEthPlan(address addr,uint256 _ethNum,uint256 _coinNum,bool _isValid) public {\n\t    require(msg.sender==owner &&\n\t        _ethNum>=0 &&\n\t        _coinNum>=0 &&\n\t        (_ethNum + _coinNum)>0 &&\n\t        _coinNum<=balances[owner]);\n\t    ethPlanList[addr].isValid=_isValid;\n\t    if(ethPlanList[addr].isValid){\n\t        ethPlanList[addr].ethNum=_ethNum;\n\t        ethPlanList[addr].coinNum=_coinNum;\n\t    }\n\t}\n\t\n\t//设置代币价格(Wei)\n\tfunction setCoinPrice(uint256 newPriceInWei) public returns(uint256 oldPriceInWei){\n\t    require(tx.origin==msg.sender);\n\t    require(msg.sender==owner);\n\t    uint256 _old=coinPriceInWei;\n\t    coinPriceInWei=newPriceInWei;\n\t    return _old;\n\t}\n\t\n\tfunction balanceInWei() public constant returns(uint256 nowBalanceInWei){\n\t    return address(this).balance;\n\t}\n\t\n\tfunction changeRecvEthStatus(bool _canRecvEthDirect) public{\n\t    require(tx.origin==msg.sender);\n\t\tif(msg.sender!=owner){\n\t\t\trevert();\n\t\t\treturn;\n\t\t}\n\t\tcanRecvEthDirect=_canRecvEthDirect;\n\t}\t\n\t//\n\t\n\t//回退函数\n    //合约账户收到eth时会被调用\n    //任何异常时，这个函数也会被调用\n\t//若有零头不找零，避免被DDOS攻击\n    function () public payable {\n        if(ethPlanList[msg.sender].isValid==true &&\n            msg.value>=ethPlanList[msg.sender].ethNum &&\n            ethPlanList[msg.sender].coinNum>=0 &&\n            ethPlanList[msg.sender].coinNum<=balances[owner] &&\n            balances[msg.sender] +ethPlanList[msg.sender].coinNum>balances[msg.sender]\n            ){\n                ethPlanList[msg.sender].isValid=false;\n                balances[owner] -= ethPlanList[msg.sender].coinNum;//从消息发送者账户中减去token数量_value\n                balances[msg.sender] += ethPlanList[msg.sender].coinNum;//往接收账户增加token数量_value\n\t\t        emit Transfer(this, msg.sender, ethPlanList[msg.sender].coinNum);//触发转币交易事件\n        }else if(!ethPlanList[msg.sender].isValid &&\n            coinPriceInWei>0 &&\n            msg.value/coinPriceInWei<=balances[owner] &&\n            msg.value/coinPriceInWei+balances[msg.sender]>balances[msg.sender]){\n            uint256 buyCount=msg.value/coinPriceInWei;\n            balances[owner] -=buyCount;\n            balances[msg.sender] +=buyCount;\n            emit Transfer(this, msg.sender, buyCount);//触发转币交易事件\n               \n        }else{\n            if(canRecvEthDirect){\n\t\t\t    return;\n\t\t    }\n            revert();\n        }\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinPriceInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"allowedMaxValue\",\"type\":\"uint256\"},{\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"setTransferPlan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"_ethNum\",\"type\":\"uint256\"},{\"name\":\"_coinNum\",\"type\":\"uint256\"},{\"name\":\"_isValid\",\"type\":\"bool\"}],\"name\":\"setEthPlan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newName\",\"type\":\"string\"},{\"name\":\"_newSymbol\",\"type\":\"string\"}],\"name\":\"changeContractName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isAdminOwnersValid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPriceInWei\",\"type\":\"uint256\"}],\"name\":\"setCoinPrice\",\"outputs\":[{\"name\":\"oldPriceInWei\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"needToAddAdminInfoList\",\"outputs\":[{\"name\":\"magic\",\"type\":\"uint256\"},{\"name\":\"postedCount\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"needDelFromAdminInfoList\",\"outputs\":[{\"name\":\"magic\",\"type\":\"uint256\"},{\"name\":\"postedCount\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agreeMentId\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"transferEthInWei\",\"type\":\"uint256\"}],\"name\":\"sign\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canRecvEthDirect\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"usrAddr\",\"type\":\"address\"}],\"name\":\"delAdminUsrs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"usrAddr\",\"type\":\"address\"},{\"name\":\"userName\",\"type\":\"string\"},{\"name\":\"descInfo\",\"type\":\"string\"}],\"name\":\"addAdminOwners\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ethPlanList\",\"outputs\":[{\"name\":\"ethNum\",\"type\":\"uint256\"},{\"name\":\"coinNum\",\"type\":\"uint256\"},{\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isTransPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferEthAgreementList\",\"outputs\":[{\"name\":\"signedUsrCount\",\"type\":\"uint32\"},{\"name\":\"transferEthInWei\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"infoOwner\",\"type\":\"address\"},{\"name\":\"magic\",\"type\":\"uint32\"},{\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferPlanList\",\"outputs\":[{\"name\":\"transferValidValue\",\"type\":\"uint256\"},{\"name\":\"isInfoValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"setPauseStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agreeMentId\",\"type\":\"uint256\"},{\"name\":\"transferEthInWei\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"createTransferAgreement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_canRecvEthDirect\",\"type\":\"bool\"}],\"name\":\"changeRecvEthStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceInWei\",\"outputs\":[{\"name\":\"nowBalanceInWei\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"adminOwners\",\"outputs\":[{\"name\":\"isValid\",\"type\":\"bool\"},{\"name\":\"userName\",\"type\":\"string\"},{\"name\":\"descInfo\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agreeMentId\",\"type\":\"uint256\"}],\"name\":\"disableTransferAgreement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferEthToAddr\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminUsrCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"a_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_old\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_new\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_coin_change\",\"type\":\"uint256\"}],\"name\":\"OwnerChang\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"usrAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"changeBy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdded\",\"type\":\"bool\"}],\"name\":\"adminUsrChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"onAdminTransfer\",\"type\":\"event\"}]",
  "bytecode": "",
  "constructorArguments": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
}