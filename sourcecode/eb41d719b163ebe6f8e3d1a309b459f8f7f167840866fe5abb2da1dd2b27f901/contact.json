{
  "address": "0x09b872715b0d32ce67bd37d45224a7c9ff29fe51",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "VokenAirdrop",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-20\n*/\n\npragma solidity ^0.5.8;\n\n// Voken Airdrop Fund\n//   Keep your ETH balance > (...)\n//      See https://voken.io/en/latest/token/airdrop_via_contract.html\n//\n//   And call this contract (send 0 ETH here),\n//   and you will receive 100-200 VNET Tokens immediately.\n// \n// More info:\n//   https://vision.network\n//   https://voken.io\n//\n// Contact us:\n//   [email protected]\n//   [email protected]\n\n\n/**\n * @title Ownable\n */\ncontract Ownable {\n    address internal _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract\n     * to the sender account.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @return the address of the owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == _owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) external onlyOwner {\n        require(newOwner != address(0));\n        _owner = newOwner;\n        emit OwnershipTransferred(_owner, newOwner);\n    }\n\n    /**\n     * @dev Rescue compatible ERC20 Token\n     *\n     * @param tokenAddr ERC20 The address of the ERC20 token contract\n     * @param receiver The address of the receiver\n     * @param amount uint256\n     */\n    function rescueTokens(address tokenAddr, address receiver, uint256 amount) external onlyOwner {\n        IERC20 _token = IERC20(tokenAddr);\n        require(receiver != address(0));\n        uint256 balance = _token.balanceOf(address(this));\n\n        require(balance >= amount);\n        assert(_token.transfer(receiver, amount));\n    }\n\n    /**\n     * @dev Withdraw Ether\n     */\n    function withdrawEther(address payable to, uint256 amount) external onlyOwner {\n        require(to != address(0));\n\n        uint256 balance = address(this).balance;\n\n        require(balance >= amount);\n        to.transfer(amount);\n    }\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://eips.ethereum.org/EIPS/eip-20\n */\ninterface IERC20{\n    function balanceOf(address owner) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n}\n\n\n/**\n * @title SafeMath\n * @dev Unsigned math operations with safety checks that revert on error.\n */\nlibrary SafeMath {\n    /**\n     * @dev Adds two unsigned integers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n     * @dev Multiplies two unsigned integers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        if (a == 0) {\n            return 0;\n        }\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two unsigned integers truncating the quotient,\n     * reverts on division by zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0);\n        uint256 c = a / b;\n        assert(a == b * c + a % b);\n        return a / b;\n    }\n\n    /**\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\n\n\n/**\n * @title Voken Airdrop\n */\ncontract VokenAirdrop is Ownable {\n    using SafeMath for uint256;\n\n    IERC20 public Voken;\n\n    uint256 private _wei_min;\n\n    mapping(address => bool) public _airdopped;\n\n    event Donate(address indexed account, uint256 amount);\n\n    /**\n     * @dev constructor\n     */\n    constructor() public {\n        Voken = IERC20(0x82070415FEe803f94Ce5617Be1878503e58F0a6a);\n    }\n\n    /**\n     * @dev receive ETH and send Vokens\n     */\n    function () external payable {\n        require(_airdopped[msg.sender] != true);\n        require(msg.sender.balance >= _wei_min);\n\n        uint256 balance = Voken.balanceOf(address(this));\n        require(balance > 0);\n\n        uint256 vokenAmount = 100;\n        vokenAmount = vokenAmount.add(uint256(keccak256(abi.encode(now, msg.sender, now))) % 100).mul(10 ** 6);\n        \n        if (vokenAmount <= balance) {\n            assert(Voken.transfer(msg.sender, vokenAmount));\n        } else {\n            assert(Voken.transfer(msg.sender, balance));\n        }\n        \n        if (msg.value > 0) {\n            emit Donate(msg.sender, msg.value);\n        }\n    }\n\n    /**\n     * @dev set wei min\n     */\n    function setWeiMin(uint256 value) external onlyOwner {\n        _wei_min = value;\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600180546001600160a01b0319167382070415fee803f94ce5617be1878503e58f0a6a1790556107358061008f6000396000f3fe6080604052600436106100705760003560e01c8063b068b7ad1161004e578063b068b7ad14610394578063cea9d26f146103a9578063d9e50186146103ec578063f2fde38b1461041657610070565b8063522f6815146102e157806385aa7bdc1461031c5780638da5cb5b14610363575b3360009081526003602052604090205460ff1615156001141561009257600080fd5b600254333110156100a257600080fd5b60015460408051600160e01b6370a0823102815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156100f057600080fd5b505afa158015610104573d6000803e3d6000fd5b505050506040513d602081101561011a57600080fd5b505190508061012857600080fd5b604080514260208083018290523383850152606080840192909252835180840390920182526080909201909252815191012060649061018090620f424090610174908490819006610449565b9063ffffffff61045c16565b90508181116102175760015460408051600160e01b63a9059cbb0281523360048201526024810184905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b1580156101e057600080fd5b505af11580156101f4573d6000803e3d6000fd5b505050506040513d602081101561020a57600080fd5b505161021257fe5b6102a0565b60015460408051600160e01b63a9059cbb0281523360048201526024810185905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b15801561026e57600080fd5b505af1158015610282573d6000803e3d6000fd5b505050506040513d602081101561029857600080fd5b50516102a057fe5b34156102dd5760408051348152905133917f0553260a2e46b0577270d8992db02d30856ca880144c72d6e9503760946aef13919081900360200190a25b5050005b3480156102ed57600080fd5b5061031a6004803603604081101561030457600080fd5b506001600160a01b038135169060200135610481565b005b34801561032857600080fd5b5061034f6004803603602081101561033f57600080fd5b50356001600160a01b03166104f6565b604080519115158252519081900360200190f35b34801561036f57600080fd5b5061037861050b565b604080516001600160a01b039092168252519081900360200190f35b3480156103a057600080fd5b5061037861051a565b3480156103b557600080fd5b5061031a600480360360608110156103cc57600080fd5b506001600160a01b03813581169160208101359091169060400135610529565b3480156103f857600080fd5b5061031a6004803603602081101561040f57600080fd5b5035610675565b34801561042257600080fd5b5061031a6004803603602081101561043957600080fd5b50356001600160a01b0316610691565b8181018281101561045657fe5b92915050565b60008261046b57506000610456565b508181028183828161047957fe5b041461045657fe5b6000546001600160a01b0316331461049857600080fd5b6001600160a01b0382166104ab57600080fd5b3031818110156104ba57600080fd5b6040516001600160a01b0384169083156108fc029084906000818181858888f193505050501580156104f0573d6000803e3d6000fd5b50505050565b60036020526000908152604090205460ff1681565b6000546001600160a01b031690565b6001546001600160a01b031681565b6000546001600160a01b0316331461054057600080fd5b826001600160a01b03831661055457600080fd5b60408051600160e01b6370a0823102815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b1580156105a157600080fd5b505afa1580156105b5573d6000803e3d6000fd5b505050506040513d60208110156105cb57600080fd5b50519050828110156105dc57600080fd5b816001600160a01b031663a9059cbb85856040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561063c57600080fd5b505af1158015610650573d6000803e3d6000fd5b505050506040513d602081101561066657600080fd5b505161066e57fe5b5050505050565b6000546001600160a01b0316331461068c57600080fd5b600255565b6000546001600160a01b031633146106a857600080fd5b6001600160a01b0381166106bb57600080fd5b600080546001600160a01b0319166001600160a01b0383811691821780845560405192939116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35056fea165627a7a72305820640a9e204c273fbae60ccbb0e1b38cc6c8aab8408a34587bfb4950522d7e23440029"
}