{
  "address": "0x34f7560337e832066972caed80c844b01548c405",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Sale",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-31\n*/\n\npragma solidity ^0.4.24;\n\ninterface token {\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n}\n\ncontract Sale {\n    address private maintoken = 0x2054a15c6822a722378d13c4e4ea85365e46e50b;\n    address private owner = 0xabc45921642cbe058555361490f49b6321ed6989;\n    address private owner8 = 0x8610a40e51454a5bbc6fc3d31874595d7b2cb8f0;\n    uint256 private sendtoken;\n    uint256 public cost1token = 0.0004 ether;\n    uint256 private ethersum;\n    uint256 private ethersum8;\n    token public tokenReward;\n    \n    function Sale() public {\n        tokenReward = token(maintoken);\n    }\n    \n    function() external payable {\n        sendtoken = (msg.value)/cost1token;\n        if (msg.value >= 5 ether) {\n            sendtoken = (msg.value)/cost1token;\n            sendtoken = sendtoken*125/100;\n        }\n        if (msg.value >= 10 ether) {\n            sendtoken = (msg.value)/cost1token;\n            sendtoken = sendtoken*150/100;\n        }\n        if (msg.value >= 15 ether) {\n            sendtoken = (msg.value)/cost1token;\n            sendtoken = sendtoken*175/100;\n        }\n        if (msg.value >= 20 ether) {\n            sendtoken = (msg.value)/cost1token;\n            sendtoken = sendtoken*200/100;\n        }\n        tokenReward.transferFrom(owner, msg.sender, sendtoken);\n        \n        ethersum8 = (msg.value)*8/100;\n    \tethersum = (msg.value)-ethersum8;    \t    \t    \t    \t        \n        owner8.transfer(ethersum8);\n        owner.transfer(ethersum);\n    }\n}",
  "bytecode": "6080604052732054a15c6822a722378d13c4e4ea85365e46e50b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073abc45921642cbe058555361490f49b6321ed6989600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738610a40e51454a5bbc6fc3d31874595d7b2cb8f0600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555066016bcc41e9000060045534801561011957600080fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104858061018b6000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680636e66f6e9146103ab5780639518589a14610402575b6004543481151561005957fe5b04600381905550674563918244f400003410151561009e576004543481151561007e57fe5b046003819055506064607d6003540281151561009657fe5b046003819055505b678ac7230489e80000341015156100dc57600454348115156100bc57fe5b0460038190555060646096600354028115156100d457fe5b046003819055505b67d02ab486cedc00003410151561011a57600454348115156100fa57fe5b04600381905550606460af6003540281151561011257fe5b046003819055505b6801158e460913d0000034101515610159576004543481151561013957fe5b04600381905550606460c86003540281151561015157fe5b046003819055505b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336003546040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561027657600080fd5b505af115801561028a573d6000803e3d6000fd5b505050506040513d60208110156102a057600080fd5b8101908080519060200190929190505050506064600834028115156102c157fe5b046006819055506006543403600581905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006549081150290604051600060405180830381858888f1935050505015801561033d573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6005549081150290604051600060405180830381858888f193505050501580156103a8573d6000803e3d6000fd5b50005b3480156103b757600080fd5b506103c061042d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561040e57600080fd5b50610417610453565b6040518082815260200191505060405180910390f35b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600454815600a165627a7a723058201a01948912786a795168a47f24556511066c6a253523262d348286d2eed2541e0029"
}