{
  "address": "0x0229cc0290da2a9d2a80a8c7cd283d046b1ada57",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "VertNite",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-11-23\n*/\n\npragma solidity ^0.4.18;\n\ninterface IERC20 {\n    function totalSupply() constant returns (uint256 totalSupply);\n    function balanceOf(address _owner) constant returns (uint256 balance);\n    function transfer(address _to, uint256 _value) returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n    function approve(address _spender, uint256 _value) returns (bool success);\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\npragma solidity ^0.4.18;\n\n\ncontract VertNite is IERC20 {\n    \n    uint public constant _totalSupply = 20000000000000000000000000;\n    \n    string public constant symbol = \"VTN\";\n    string public constant name = \"VertNite\";\n    uint8 public constant decimals = 18;\n    \n    mapping(address => uint256) balances;\n    mapping(address => mapping(address => uint256)) allowed;\n    \n    function VertNite() {\n        balances[msg.sender] = _totalSupply;\n    }\n    \n    function totalSupply() constant returns (uint256 totalSupply) {\n        return _totalSupply;\n    }\n    \n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n    \n    function transfer(address _to, uint256 _value) returns (bool success) {\n        require(\n            balances[msg.sender] >= _value\n            && _value > 0\n        );\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n    \n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n        require(\n            allowed[_from][msg.sender] >= _value\n            && balances[_from] >= _value\n            && _value > 0\n        );\n        balances[_from] -= _value;\n        balances[_to] += _value;\n        allowed[_from][msg.sender] -= _value;\n        Transfer(_from, _to, _value);\n        return true;\n    }\n    \n    function approve(address _spender, uint256 _value) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    \n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n    \n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    \n}",
  "bytecode": "6060604052341561000f57600080fd5b600160a060020a03331660009081526020819052604090206a108b2a2c280290940000009055610570806100446000396000f3006060604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016857806323b872dd1461018d578063313ce567146101b55780633eaaf86b146101de57806370a08231146101f157806395d89b4114610210578063a9059cbb14610223578063dd62ed3e14610245575b600080fd5b34156100b357600080fd5b6100bb61026a565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f75780820151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013d57600080fd5b610154600160a060020a03600435166024356102a1565b604051901515815260200160405180910390f35b341561017357600080fd5b61017b61030d565b60405190815260200160405180910390f35b341561019857600080fd5b610154600160a060020a036004358116906024351660443561031c565b34156101c057600080fd5b6101c8610411565b60405160ff909116815260200160405180910390f35b34156101e957600080fd5b61017b610416565b34156101fc57600080fd5b61017b600160a060020a0360043516610425565b341561021b57600080fd5b6100bb610440565b341561022e57600080fd5b610154600160a060020a0360043516602435610477565b341561025057600080fd5b61017b600160a060020a0360043581169060243516610519565b60408051908101604052600881527f566572744e697465000000000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260016020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b6a108b2a2c2802909400000090565b600160a060020a0380841660009081526001602090815260408083203390941683529290529081205482901080159061036e5750600160a060020a038416600090815260208190526040902054829010155b801561037a5750600082115b151561038557600080fd5b600160a060020a0380851660008181526020818152604080832080548890039055878516808452818420805489019055848452600183528184203390961684529490915290819020805486900390557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b601281565b6a108b2a2c2802909400000081565b600160a060020a031660009081526020819052604090205490565b60408051908101604052600381527f56544e0000000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a0333166000908152602081905260408120548290108015906104a05750600082115b15156104ab57600080fd5b600160a060020a033381166000818152602081905260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b600160a060020a039182166000908152600160209081526040808320939094168252919091522054905600a165627a7a72305820dfafb907245e94067e1e730159f4aa1212f99cac538798992124d16fcb6b00af0029"
}