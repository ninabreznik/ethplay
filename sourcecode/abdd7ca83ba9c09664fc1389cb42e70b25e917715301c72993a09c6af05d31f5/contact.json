{
  "address": "0x9c0e119dfe427d6176c42ad2ceff00fdba2b1f02",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TestABI",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-29\n*/\n\npragma solidity ^0.4.25 ;\n\ncontract TestABI{\n    address owner;\n    constructor() public payable{\n        owner = msg.sender;\n    }\n    modifier onlyOwner(){\n        require (msg.sender==owner);\n        _;\n    }\n    function () payable public {\n        // 其他逻辑\n    }\n    // 获取合约账户余额\n    function getBalance() public constant returns(uint){\n        return address(this).balance;\n    }\n    // 合约出账\n    function sendTransfer(address _user,uint _price) public onlyOwner{\n        require(_user!=owner);\n        if(address(this).balance>=_price){\n            _user.transfer(_price);\n        }\n    }\n    // 提币\n    function getEth(uint _price) public onlyOwner{\n        if(_price>0){\n            if(address(this).balance>=_price){\n                owner.transfer(_price);\n            }\n        }else{\n           owner.transfer(address(this).balance); \n        }\n    }\n}",
  "bytecode": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e1806100536000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146100595780638e3073a6146100845780639e0994a1146100b1575b005b34801561006557600080fd5b5061006e6100fe565b6040518082815260200191505060405180910390f35b34801561009057600080fd5b506100af6004803603810190808035906020019092919050505061011d565b005b3480156100bd57600080fd5b506100fc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610292565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561017857600080fd5b600081111561020f57803073ffffffffffffffffffffffffffffffffffffffff163110151561020a576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610208573d6000803e3d6000fd5b505b61028f565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561028d573d6000803e3d6000fd5b505b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102ed57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561034957600080fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015156103b1578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103af573d6000803e3d6000fd5b505b50505600a165627a7a7230582096f4395e6bb70bc48c8add6ab95e6068361c28621fd290acf37cdb76ac2a35480029"
}