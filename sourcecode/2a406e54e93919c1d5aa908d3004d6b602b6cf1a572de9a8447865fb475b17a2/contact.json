{
  "address": "0x9075118e1165e20e9fBe9CD92449faE8Bbf46E12",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Core",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-15\n*/\n\npragma solidity 0.5.7;\n\nlibrary SafeMath {\n    \n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b > 0);\n    uint256 c = a / b;\n    return c;\n  }\n\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a && c >= b);\n    return c;\n  }\n  \n}\n\ncontract Owned {\n\n    address public owner;\n    bool public transferStatus = true;\n    event ownershipChanged(address indexed _invoker, address indexed _newOwner);        \n    event transferStatusChanged(bool _newStatus);\n    uint256 public _totalSupply = 85000000000000000000000000;\n    mapping(address => uint256) userBalances;\n    \n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    \n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier _onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function changeOwner(address _AddressToMake) public _onlyOwner returns (bool _success) {\n\n        owner = _AddressToMake;\n        emit ownershipChanged(msg.sender, _AddressToMake);\n\n        return true;\n\n    }\n\n    function changeTransferStatus(bool _newStatus) public _onlyOwner returns (bool _success) {\n\n        transferStatus = _newStatus;\n        emit transferStatusChanged(_newStatus);\n    \n        return true;\n    \n    }\n\t\n   function mint(uint256 _amount) public _onlyOwner returns (bool _success) {\n\n        _totalSupply = SafeMath.safeAdd(_totalSupply, _amount);\n        userBalances[msg.sender] = SafeMath.safeAdd(userBalances[msg.sender], _amount);\n\t\n        emit Transfer(address(0), msg.sender, _amount);\n\n        return true;\n\n    }    \n\t\n   function mintToAddress(address _address, uint256 _amount) public _onlyOwner returns (bool _success) {\n\n        _totalSupply = SafeMath.safeAdd(_totalSupply, _amount);\n        userBalances[_address] = SafeMath.safeAdd(userBalances[_address], _amount);\n\t\n        emit Transfer(address(0), _address, _amount);\n\n        return true;\n\n    }\n\n    function burn(uint256 _amount) public _onlyOwner returns (bool _success) {\n\n        require(SafeMath.safeSub(userBalances[msg.sender], _amount) >= 0);\n        _totalSupply = SafeMath.safeSub(_totalSupply, _amount);\n        userBalances[msg.sender] = SafeMath.safeSub(userBalances[msg.sender], _amount);\n\t\n\t    emit Transfer(msg.sender, address(0), _amount);\n\n        return true;\n\n    }\n\n    function burnFromAddress(address _address, uint256 _amount) public _onlyOwner returns (bool _success) {\n\n        require(SafeMath.safeSub(userBalances[_address], _amount) >= 0);\n        _totalSupply = SafeMath.safeSub(_totalSupply, _amount);\n        userBalances[_address] = SafeMath.safeSub(userBalances[_address], _amount);\n\t\n\t    emit Transfer(_address, address(0), _amount);\n\n        return true;\n\n    }\n        \n}\n\ncontract Core is Owned {\n\n    string public name = \"AdzBrick\";\n    string public symbol = \"ADZB\";\n    uint256 public decimals = 18;\n    mapping(address => mapping(address => uint256)) public userAllowances;\n\n    constructor() public {\n\n        userBalances[msg.sender] = _totalSupply;\n\n    }\n\n    function _transferCheck(address _sender, address _recipient, uint256 _amount) private view returns (bool success) {\n\n        require(transferStatus == true);\n        require(_amount > 0);\n        require(_recipient != address(0));\n        require(userBalances[_sender] >= _amount);\n        require(SafeMath.safeSub(userBalances[_sender], _amount) >= 0);\n        require(SafeMath.safeAdd(userBalances[_recipient], _amount) > userBalances[_recipient]);\n        \n        return true;\n\n    }\n\n    function transfer(address _receiver, uint256 _amount) public returns (bool status) {\n\n        require(_transferCheck(msg.sender, _receiver, _amount));\n        userBalances[msg.sender] = SafeMath.safeSub(userBalances[msg.sender], _amount);\n        userBalances[_receiver] = SafeMath.safeAdd(userBalances[_receiver], _amount);\n        \n        emit Transfer(msg.sender, _receiver, _amount);\n        \n        return true;\n\n    }\n\n    function transferFrom(address _owner, address _receiver, uint256 _amount) public returns (bool status) {\n\n        require(_transferCheck(_owner, _receiver, _amount));\n        require(SafeMath.safeSub(userAllowances[_owner][msg.sender], _amount) >= 0);\n        userAllowances[_owner][msg.sender] = SafeMath.safeSub(userAllowances[_owner][msg.sender], _amount);\n        userBalances[_owner] = SafeMath.safeSub(userBalances[_owner], _amount);\n        userBalances[_receiver] = SafeMath.safeAdd(userBalances[_receiver], _amount);\n        \n        emit Transfer(_owner, _receiver, _amount);\n\n        return true;\n\n    }\n\n    function multiTransfer(address[] memory _destinations, uint256[] memory _values) public returns (uint256) {\n\n        uint256 max = 0;\n\n\t\tfor (uint256 i = 0; i < _destinations.length; i++) {\n            require(transfer(_destinations[i], _values[i]));\n            max = i;\n        }\n\n        return max;\n\n    }\n\n    function approve(address _spender, uint256 _amount) public returns (bool approved) {\n\n        require(_amount >= 0);\n        userAllowances[msg.sender][_spender] = _amount;\n        \n        emit Approval(msg.sender, _spender, _amount);\n\n        return true;\n\n    }\n\n    function balanceOf(address _address) public view returns (uint256 balance) {\n\n        return userBalances[_address];\n\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 allowed) {\n\n        return userAllowances[_owner][_spender];\n\n    }\n\n    function totalSupply() public view returns (uint256 supply) {\n\n        return _totalSupply;\n\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"approved\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destinations\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintToAddress\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"status\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFromAddress\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newStatus\",\"type\":\"bool\"}],\"name\":\"changeTransferStatus\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_AddressToMake\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"status\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"allowed\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userAllowances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_invoker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"ownershipChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newStatus\",\"type\":\"bool\"}],\"name\":\"transferStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60008054600160a01b60ff021916740100000000000000000000000000000000000000001790556a464f733baa0ae67500000060015560c0604052600860808190527f41647a427269636b00000000000000000000000000000000000000000000000060a090815261007491600391906100f4565b506040805180820190915260048082527f41445a420000000000000000000000000000000000000000000000000000000060209092019182526100b791816100f4565b5060126005553480156100c957600080fd5b50600080546001600160a01b031916339081178255600154908252600260205260409091205561018f565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013557805160ff1916838001178555610162565b82800160010185558215610162579182015b82811115610162578251825591602001919060010190610147565b5061016e929150610172565b5090565b61018c91905b8082111561016e5760008155600101610178565b90565b610df78061019e6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063a6f9dae111610071578063a6f9dae114610478578063a9059cbb1461049e578063dd62ed3e146104ca578063dddaec1d146104f8578063f4880b22146105265761012c565b806370a08231146103ea5780638da5cb5b146104105780638fadae681461043457806395d89b4114610453578063a0712d681461045b5761012c565b806323b872dd116100f457806323b872dd1461035b578063313ce56714610391578063365342ca146103995780633eaaf86b146103c557806342966c68146103cd5761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee5780631e89d5451461020857806321ca42361461032f575b600080fd5b61013961052e565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356105bc565b604080519115158252519081900360200190f35b6101f6610622565b60408051918252519081900360200190f35b6101f66004803603604081101561021e57600080fd5b81019060208101813564010000000081111561023957600080fd5b82018360208201111561024b57600080fd5b8035906020019184602083028401116401000000008311171561026d57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156102bd57600080fd5b8201836020820111156102cf57600080fd5b803590602001918460208302840111640100000000831117156102f157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610628945050505050565b6101da6004803603604081101561034557600080fd5b506001600160a01b038135169060200135610682565b6101da6004803603606081101561037157600080fd5b506001600160a01b03813581169160208101359091169060400135610717565b6101f661084d565b6101da600480360360408110156103af57600080fd5b506001600160a01b038135169060200135610853565b6101f6610915565b6101da600480360360208110156103e357600080fd5b503561091b565b6101f66004803603602081101561040057600080fd5b50356001600160a01b03166109c1565b6104186109dc565b604080516001600160a01b039092168252519081900360200190f35b6101da6004803603602081101561044a57600080fd5b503515156109eb565b610139610a6c565b6101da6004803603602081101561047157600080fd5b5035610ac7565b6101da6004803603602081101561048e57600080fd5b50356001600160a01b0316610b49565b6101da600480360360408110156104b457600080fd5b506001600160a01b038135169060200135610bb1565b6101f6600480360360408110156104e057600080fd5b506001600160a01b0381358116916020013516610c59565b6101f66004803603604081101561050e57600080fd5b506001600160a01b0381358116916020013516610c84565b6101da610ca1565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105b45780601f10610589576101008083540402835291602001916105b4565b820191906000526020600020905b81548152906001019060200180831161059757829003601f168201915b505050505081565b3360008181526006602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b600080805b845181101561067a5761066685828151811061064557fe5b602002602001015185838151811061065957fe5b6020026020010151610bb1565b61066f57600080fd5b90506001810161062d565b509392505050565b600080546001600160a01b0316331461069a57600080fd5b6106a660015483610cb1565b6001556001600160a01b0383166000908152600260205260409020546106cc9083610cb1565b6001600160a01b0384166000818152600260209081526040808320949094558351868152935192939192600080516020610dac8339815191529281900390910190a350600192915050565b6000610724848484610cd3565b61072d57600080fd5b6001600160a01b038416600090815260066020908152604080832033845290915281205461075b9084610d99565b101561076657600080fd5b6001600160a01b03841660009081526006602090815260408083203384529091529020546107949083610d99565b6001600160a01b0385166000818152600660209081526040808320338452825280832094909455918152600290915220546107cf9083610d99565b6001600160a01b0380861660009081526002602052604080822093909355908516815220546107fe9083610cb1565b6001600160a01b038085166000818152600260209081526040918290209490945580518681529051919392881692600080516020610dac83398151915292918290030190a35060019392505050565b60055481565b600080546001600160a01b0316331461086b57600080fd5b6001600160a01b03831660009081526002602052604081205461088e9084610d99565b101561089957600080fd5b6108a560015483610d99565b6001556001600160a01b0383166000908152600260205260409020546108cb9083610d99565b6001600160a01b038416600081815260026020908152604080832094909455835186815293519193600080516020610dac833981519152929081900390910190a350600192915050565b60015481565b600080546001600160a01b0316331461093357600080fd5b3360009081526002602052604081205461094d9084610d99565b101561095857600080fd5b61096460015483610d99565b600155336000908152600260205260409020546109819083610d99565b33600081815260026020908152604080832094909455835186815293519193600080516020610dac833981519152929081900390910190a3506001919050565b6001600160a01b031660009081526002602052604090205490565b6000546001600160a01b031681565b600080546001600160a01b03163314610a0357600080fd5b60008054831515600160a01b810274ff0000000000000000000000000000000000000000199092169190911790915560408051918252517fcbf620be2e812ff1ff009520f704825c88925dcd66226cd7cc741b8a8469e6279181900360200190a1506001919050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105b45780601f10610589576101008083540402835291602001916105b4565b600080546001600160a01b03163314610adf57600080fd5b610aeb60015483610cb1565b60015533600090815260026020526040902054610b089083610cb1565b336000818152600260209081526040808320949094558351868152935192939192600080516020610dac8339815191529281900390910190a3506001919050565b600080546001600160a01b03163314610b6157600080fd5b600080546001600160a01b0319166001600160a01b0384169081178255604051909133917f5d92051b4a9b6e7154c5be37e18edd17bfd2e650a3a6dbf8c3eded0ef431ff0e9190a3506001919050565b6000610bbe338484610cd3565b610bc757600080fd5b33600090815260026020526040902054610be19083610d99565b33600090815260026020526040808220929092556001600160a01b03851681522054610c0d9083610cb1565b6001600160a01b038416600081815260026020908152604091829020939093558051858152905191923392600080516020610dac8339815191529281900390910190a350600192915050565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b600660209081526000928352604080842090915290825290205481565b600054600160a01b900460ff1681565b6000828201838110801590610cc65750828110155b610ccc57fe5b9392505050565b60008054600160a01b900460ff161515600114610cef57600080fd5b60008211610cfc57600080fd5b6001600160a01b038316610d0f57600080fd5b6001600160a01b038416600090815260026020526040902054821115610d3457600080fd5b6001600160a01b038416600090815260026020526040812054610d579084610d99565b1015610d6257600080fd5b6001600160a01b038316600090815260026020526040902054610d858184610cb1565b11610d8f57600080fd5b5060019392505050565b600082821115610da557fe5b5090039056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058204b79311a28187e9b613e5544d5fb0d4ea0ced09d539904b30611dbd6a1fbdbe40029"
}