{
  "address": "0xcb378ea13660951792ab37bcd8e1188e385d15c5",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "EKToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-25\n*/\n\npragma solidity ^0.4.24;\n\n\n\n/**\n\n * @title ERC20Basic\n\n * @dev Simpler version of ERC20 interface\n\n * See https://github.com/ethereum/EIPs/issues/179\n\n */\n\ncontract ERC20Basic {\n\n  function totalSupply() public view returns (uint256);\n\n  function balanceOf(address who) public view returns (uint256);\n\n  function transfer(address to, uint256 value) public returns (bool);\n\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n}\n\n\n\n/**\n\n * @title SafeMath\n\n * @dev Math operations with safety checks that throw on error\n\n */\n\nlibrary SafeMath {\n\n  /**\n\n  * @dev Multiplies two numbers, throws on overflow.\n\n  */\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n\n    // benefit is lost if 'b' is also tested.\n\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n\n    if (a == 0) {\n\n      return 0;\n\n    }\n\n\n\n    c = a * b;\n\n    assert(c / a == b);\n\n    return c;\n\n  }\n\n\n\n  /**\n\n  * @dev Integer division of two numbers, truncating the quotient.\n\n  */\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n\n    // uint256 c = a / b;\n\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return a / b;\n\n  }\n\n\n\n  /**\n\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n\n  */\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\n    assert(b <= a);\n\n    return a - b;\n\n  }\n\n\n\n  /**\n\n  * @dev Adds two numbers, throws on overflow.\n\n  */\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n\n    c = a + b;\n\n    assert(c >= a);\n\n    return c;\n\n  }\n\n}\n\n\n\n/**\n\n * @title Basic token\n\n * @dev Basic version of StandardToken, with no allowances.\n\n */\n\ncontract BasicToken is ERC20Basic {\n\n  using SafeMath for uint256;\n\n\n\n  mapping(address => uint256) balances;\n\n\n\n  uint256 totalSupply_;\n\n\n\n  /**\n\n  * @dev Total number of tokens in existence\n\n  */\n\n  function totalSupply() public view returns (uint256) {\n\n    return totalSupply_;\n\n  }\n\n\n\n  /**\n\n  * @dev Transfer token for a specified address\n\n  * @param _to The address to transfer to.\n\n  * @param _value The amount to be transferred.\n\n  */\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n\n    require(_to != address(0));\n\n    require(_value <= balances[msg.sender]);\n\n\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n\n    balances[_to] = balances[_to].add(_value);\n\n    emit Transfer(msg.sender, _to, _value);\n\n    return true;\n\n  }\n\n\n\n  /**\n\n  * @dev Gets the balance of the specified address.\n\n  * @param _owner The address to query the the balance of.\n\n  * @return An uint256 representing the amount owned by the passed address.\n\n  */\n\n  function balanceOf(address _owner) public view returns (uint256) {\n\n    return balances[_owner];\n\n  }\n\n}\n\n\n\n/**\n\n * @title ERC20 interface\n\n * @dev see https://github.com/ethereum/EIPs/issues/20\n\n */\n\ncontract ERC20 is ERC20Basic {\n\n  function allowance(address owner, address spender)\n\n    public view returns (uint256);\n\n\n\n  function transferFrom(address from, address to, uint256 value)\n\n    public returns (bool);\n\n\n\n  function approve(address spender, uint256 value) public returns (bool);\n\n  event Approval(\n\n    address indexed owner,\n\n    address indexed spender,\n\n    uint256 value\n\n  );\n\n}\n\n\n\n/**\n\n * @title Standard ERC20 token\n\n *\n\n * @dev Implementation of the basic standard token.\n\n * https://github.com/ethereum/EIPs/issues/20\n\n * Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n\n */\n\ncontract StandardToken is ERC20, BasicToken {\n\n\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n\n  /**\n\n   * @dev Transfer tokens from one address to another\n\n   * @param _from address The address which you want to send tokens from\n\n   * @param _to address The address which you want to transfer to\n\n   * @param _value uint256 the amount of tokens to be transferred\n\n   */\n\n  function transferFrom(\n\n    address _from,\n\n    address _to,\n\n    uint256 _value\n\n  )\n\n    public\n\n    returns (bool)\n\n  {\n\n    require(_to != address(0));\n\n    require(_value <= balances[_from]);\n\n    require(_value <= allowed[_from][msg.sender]);\n\n\n\n    balances[_from] = balances[_from].sub(_value);\n\n    balances[_to] = balances[_to].add(_value);\n\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\n    emit Transfer(_from, _to, _value);\n\n    return true;\n\n  }\n\n\n\n  /**\n\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * @param _spender The address which will spend the funds.\n\n   * @param _value The amount of tokens to be spent.\n\n   */\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n\n    allowed[msg.sender][_spender] = _value;\n\n    emit Approval(msg.sender, _spender, _value);\n\n    return true;\n\n  }\n\n\n\n  /**\n\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n\n   * @param _owner address The address which owns the funds.\n\n   * @param _spender address The address which will spend the funds.\n\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n\n   */\n\n  function allowance(\n\n    address _owner,\n\n    address _spender\n\n   )\n\n    public\n\n    view\n\n    returns (uint256)\n\n  {\n\n    return allowed[_owner][_spender];\n\n  }\n\n\n\n  /**\n\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n\n   * approve should be called when allowed[_spender] == 0. To increment\n\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n\n   * the first transaction is mined)\n\n   * From MonolithDAO Token.sol\n\n   * @param _spender The address which will spend the funds.\n\n   * @param _addedValue The amount of tokens to increase the allowance by.\n\n   */\n\n  function increaseApproval(\n\n    address _spender,\n\n    uint256 _addedValue\n\n  )\n\n    public\n\n    returns (bool)\n\n  {\n\n    allowed[msg.sender][_spender] = (\n\n      allowed[msg.sender][_spender].add(_addedValue));\n\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\n    return true;\n\n  }\n\n\n\n  /**\n\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n\n   * approve should be called when allowed[_spender] == 0. To decrement\n\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n\n   * the first transaction is mined)\n\n   * From MonolithDAO Token.sol\n\n   * @param _spender The address which will spend the funds.\n\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n\n   */\n\n  function decreaseApproval(\n\n    address _spender,\n\n    uint256 _subtractedValue\n\n  )\n\n    public\n\n    returns (bool)\n\n  {\n\n    uint256 oldValue = allowed[msg.sender][_spender];\n\n    if (_subtractedValue > oldValue) {\n\n      allowed[msg.sender][_spender] = 0;\n\n    } else {\n\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n\n    }\n\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\n    return true;\n\n  }\n\n\n\n}\n\n\n\ncontract EKToken is StandardToken {\n\n    string public name = \"EKToken\"; \n\n    string public symbol = \"EK\";\n\n    uint public decimals = 8;\n\n    uint public totalSupply = 5000000000 * (10 ** decimals);\n\n    \n\n    constructor() public {\n\n        balances[msg.sender] = totalSupply;\n\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600760808190527f454b546f6b656e0000000000000000000000000000000000000000000000000060a090815261003e91600391906100ba565b506040805180820190915260028082527f454b0000000000000000000000000000000000000000000000000000000000006020909201918252610083916004916100ba565b5060086005556706f05b59d3b200006006553480156100a157600080fd5b5060065433600090815260208190526040902055610155565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100fb57805160ff1916838001178555610128565b82800160010185558215610128579182015b8281111561012857825182559160200191906001019061010d565b50610134929150610138565b5090565b61015291905b80821115610134576000815560010161013e565b90565b610877806101646000396000f3006080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b3578063095ea7b31461013d57806318160ddd1461017557806323b872dd1461019c578063313ce567146101c657806366188463146101db57806370a08231146101ff57806395d89b4114610220578063a9059cbb14610235578063d73dd62314610259578063dd62ed3e1461027d575b600080fd5b3480156100bf57600080fd5b506100c86102a4565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101025781810151838201526020016100ea565b50505050905090810190601f16801561012f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014957600080fd5b50610161600160a060020a0360043516602435610332565b604080519115158252519081900360200190f35b34801561018157600080fd5b5061018a610398565b60408051918252519081900360200190f35b3480156101a857600080fd5b50610161600160a060020a036004358116906024351660443561039e565b3480156101d257600080fd5b5061018a610515565b3480156101e757600080fd5b50610161600160a060020a036004351660243561051b565b34801561020b57600080fd5b5061018a600160a060020a036004351661060b565b34801561022c57600080fd5b506100c8610626565b34801561024157600080fd5b50610161600160a060020a0360043516602435610681565b34801561026557600080fd5b50610161600160a060020a0360043516602435610762565b34801561028957600080fd5b5061018a600160a060020a03600435811690602435166107fb565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b505050505081565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60065481565b6000600160a060020a03831615156103b557600080fd5b600160a060020a0384166000908152602081905260409020548211156103da57600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561040a57600080fd5b600160a060020a038416600090815260208190526040902054610433908363ffffffff61082616565b600160a060020a038086166000908152602081905260408082209390935590851681522054610468908363ffffffff61083816565b600160a060020a038085166000908152602081815260408083209490945591871681526002825282812033825290915220546104aa908363ffffffff61082616565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60055481565b336000908152600260209081526040808320600160a060020a03861684529091528120548083111561057057336000908152600260209081526040808320600160a060020a03881684529091528120556105a5565b610580818463ffffffff61082616565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561032a5780601f106102ff5761010080835404028352916020019161032a565b6000600160a060020a038316151561069857600080fd5b336000908152602081905260409020548211156106b457600080fd5b336000908152602081905260409020546106d4908363ffffffff61082616565b3360009081526020819052604080822092909255600160a060020a03851681522054610706908363ffffffff61083816565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610796908363ffffffff61083816565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561083257fe5b50900390565b8181018281101561084557fe5b929150505600a165627a7a723058209bb2135ef3ad687ab6a92a7de06b721853921d9729f364a1adc853418c6e0fa90029"
}