{
  "address": "0x29fe0248fe903e7cb6d7b71161e6d7233ae460e3",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "EthereumBet",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-31\n*/\n\npragma solidity ^0.4.24;\ncontract EthereumBet{\n\n\taddress gameOwner = address(0);\n\n\tbool locked = false;\n\n\tfunction bet() payable\n\t{\n\t\tif ((random()%2==1) && (msg.value == 1 ether) && (!locked))\n\t\t{\n\t\t\tif (!msg.sender.call.value(2 ether)())\n\t\t\t\tthrow;\n\t\t}\n\t}\n\n\tfunction lock()\n\t{\n\t\tif (gameOwner==msg.sender)\n\t\t{\n\t\t\tlocked = true;\n\t\t}\n\t}\n\n\tfunction unlock()\n\t{\n\t\tif (gameOwner==msg.sender)\n\t\t{\n\t\t\tlocked = false;\n\t\t}\n\t}\n\n\tfunction own(address owner)\n\t{\n\t\tif ((gameOwner == address(0)) || (gameOwner == msg.sender))\n\t\t{\n\t\t\tgameOwner = owner;\n\t\t}\n\t}\n\n\tfunction releaseFunds(uint amount)\n\t{\n\t\tif (gameOwner==msg.sender)\n\t\t{\n\t\t\tif (!msg.sender.call.value( amount * (1 ether))())\n\t\t\t\tthrow;\n\t\t}\n\t}\n\n\n\tfunction random() view returns (uint8) {\n        \treturn uint8(uint256(keccak256(block.timestamp, block.difficulty))%256);\n    \t}\n\n\tfunction () public  payable\n\t{\n\t\tbet();\n\t}\n}",
  "bytecode": "608060405260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff02191690831515021790555034801561006b57600080fd5b506104bd8061007b6000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311610c25146100825780634d68282f1461008c5780635ec01e4d146100b9578063a69df4b5146100ea578063f349e3e314610101578063f83d08ba14610144575b61008061015b565b005b61008a61015b565b005b34801561009857600080fd5b506100b7600480360381019080803590602001909291905050506101eb565b005b3480156100c557600080fd5b506100ce610285565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100f657600080fd5b506100ff6102bb565b005b34801561010d57600080fd5b50610142600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061032d565b005b34801561015057600080fd5b5061015961041e565b005b60016002610167610285565b60ff1681151561017357fe5b0660ff1614801561018b5750670de0b6b3a764000034145b80156101a45750600060149054906101000a900460ff16155b156101e9573373ffffffffffffffffffffffffffffffffffffffff16671bc16d674ec8000060405160006040518083038185875af19250505015156101e857600080fd5b5b565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610282573373ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a7640000820260405160006040518083038185875af192505050151561028157600080fd5b5b50565b6000610100424460405180838152602001828152602001925050506040518091039020600190048115156102b557fe5b06905090565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561032b5760008060146101000a81548160ff0219169083151502179055505b565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806103d557503373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b1561041b57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561048f576001600060146101000a81548160ff0219169083151502179055505b5600a165627a7a72305820cf9d08887638f188812f5e495964ecc113a60b2e5245138e39a5cd8e4df9c2ae0029"
}