{
  "address": "0xa70b2f0738749248153446e8feaece123714a104",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenERC20",
  "compilerVersion": "v0.5.1+commit.c8a2cb62",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-11\n*/\n\npragma solidity ^0.5.1;\n\n\ncontract TokenERC20 {\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public decimals = 8;  // 18 是建议的默认值\n\n    uint256 public totalSupply;\n\n    mapping (address => uint256) public balanceOf;  //\n\n    mapping (address => mapping (address => uint256)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Burn(address indexed from, uint256 value);\n\n    constructor(uint256 initialSupply, string memory tokenName, string memory tokenSymbol) public{\n\n        totalSupply = initialSupply * 10 ** uint256(decimals);\n\n        balanceOf[msg.sender] = totalSupply;\n\n        name = tokenName;\n\n        symbol = tokenSymbol;\n\n    }\n\n    function _transfer(address _from, address _to, uint _value) internal {\n\n        require(_to != address(0));\n\n        require(balanceOf[_from] >= _value);\n\n        require(balanceOf[_to] + _value > balanceOf[_to]);\n\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n\n        balanceOf[_from] -= _value;\n\n        balanceOf[_to] += _value;\n\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n\n        emit Transfer(_from, _to, _value);\n\n\n\n    }\n\n    function transfer(address _to, uint256 _value) public {\n\n        _transfer(msg.sender, _to, _value);\n\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\n\n        allowance[_from][msg.sender] -= _value;\n\n        _transfer(_from, _to, _value);\n\n        return true;\n\n    }\n\n    function approve(address _spender, uint256 _value) public\n\n    returns (bool success) {\n\n        allowance[msg.sender][_spender] = _value;\n\n        return true;\n\n    }\n\n\n    function burn(uint256 _value) public returns (bool success) {\n\n        require(balanceOf[msg.sender] >= _value);\n\n        balanceOf[msg.sender] -= _value;\n\n        totalSupply -= _value;\n\n        emit Burn(msg.sender, _value);\n\n        return true;\n\n    }\n\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n\n        require(balanceOf[_from] >= _value);\n\n        require(_value <= allowance[_from][msg.sender]);\n\n        balanceOf[_from] -= _value;\n\n        allowance[_from][msg.sender] -= _value;\n\n        totalSupply -= _value;\n\n        emit Burn(_from, _value);\n\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "60806040526002805460ff1916600817905534801561001d57600080fd5b5060405161094a38038061094a8339810180604052606081101561004057600080fd5b81516020830180519193928301929164010000000081111561006157600080fd5b8201602081018481111561007457600080fd5b815164010000000081118282018710171561008e57600080fd5b505092919060200180516401000000008111156100aa57600080fd5b820160208101848111156100bd57600080fd5b81516401000000008111828201871017156100d757600080fd5b505060025460ff16600a0a8602600381905533600090815260046020908152604082209290925586519295506101129450925085019061012f565b50805161012690600190602084019061012f565b505050506101ca565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017057805160ff191683800117855561019d565b8280016001018555821561019d579182015b8281111561019d578251825591602001919060010190610182565b506101a99291506101ad565b5090565b6101c791905b808211156101a957600081556001016101b3565b90565b610771806101d96000396000f3fe6080604052600436106100a8577c0100000000000000000000000000000000000000000000000000000000600035046306fdde0381146100ad578063095ea7b31461013757806318160ddd1461018457806323b872dd146101ab578063313ce567146101ee57806342966c681461021957806370a082311461024357806379cc67901461027657806395d89b41146102af578063a9059cbb146102c4578063dd62ed3e146102ff575b600080fd5b3480156100b957600080fd5b506100c261033a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fc5781810151838201526020016100e4565b50505050905090810190601f1680156101295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014357600080fd5b506101706004803603604081101561015a57600080fd5b50600160a060020a0381351690602001356103c8565b604080519115158252519081900360200190f35b34801561019057600080fd5b506101996103f5565b60408051918252519081900360200190f35b3480156101b757600080fd5b50610170600480360360608110156101ce57600080fd5b50600160a060020a038135811691602081013590911690604001356103fb565b3480156101fa57600080fd5b5061020361046a565b6040805160ff9092168252519081900360200190f35b34801561022557600080fd5b506101706004803603602081101561023c57600080fd5b5035610473565b34801561024f57600080fd5b506101996004803603602081101561026657600080fd5b5035600160a060020a03166104eb565b34801561028257600080fd5b506101706004803603604081101561029957600080fd5b50600160a060020a0381351690602001356104fd565b3480156102bb57600080fd5b506100c26105ce565b3480156102d057600080fd5b506102fd600480360360408110156102e757600080fd5b50600160a060020a038135169060200135610628565b005b34801561030b57600080fd5b506101996004803603604081101561032257600080fd5b50600160a060020a0381358116916020013516610637565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103c05780601f10610395576101008083540402835291602001916103c0565b820191906000526020600020905b8154815290600101906020018083116103a357829003601f168201915b505050505081565b336000908152600560209081526040808320600160a060020a039590951683529390529190912055600190565b60035481565b600160a060020a038316600090815260056020908152604080832033845290915281205482111561042b57600080fd5b600160a060020a0384166000908152600560209081526040808320338452909152902080548390039055610460848484610654565b5060019392505050565b60025460ff1681565b3360009081526004602052604081205482111561048f57600080fd5b3360008181526004602090815260409182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b60046020526000908152604090205481565b600160a060020a03821660009081526004602052604081205482111561052257600080fd5b600160a060020a038316600090815260056020908152604080832033845290915290205482111561055257600080fd5b600160a060020a0383166000818152600460209081526040808320805487900390556005825280832033845282529182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a250600192915050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103c05780601f10610395576101008083540402835291602001916103c0565b610633338383610654565b5050565b600560209081526000928352604080842090915290825290205481565b600160a060020a038216151561066957600080fd5b600160a060020a03831660009081526004602052604090205481111561068e57600080fd5b600160a060020a038216600090815260046020526040902054818101116106b457600080fd5b600160a060020a0382811660009081526004602052604080822080549387168352912080548481038255825485019283905590549201910181146106f457fe5b82600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050505056fea165627a7a72305820506eefa72e06f00300d4f823db0af04496f1b6c926e26f5031cd712d8050fa4a0029000000000000000000000000000000000000000000000000000000003b9aca00000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000034b544e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034b544e0000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000003b9aca00000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000034b544e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034b544e0000000000000000000000000000000000000000000000000000000000"
}