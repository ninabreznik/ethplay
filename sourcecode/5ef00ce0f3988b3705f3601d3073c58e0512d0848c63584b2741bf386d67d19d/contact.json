{
  "address": "0x3018f598fcc8aa5acc17c1f133e4679dfcd8274a",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BitcoinStore",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-09\n*/\n\npragma solidity ^0.4.11;\n\ncontract Ownable {\n  address public owner;\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    if (msg.sender != owner) {\n      throw;\n    }\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner {\n    if (newOwner != address(0)) {\n      owner = newOwner;\n    }\n  }\n\n}\n\ncontract ERC20Basic {\n  uint public totalSupply;\n  function balanceOf(address who) constant returns (uint);\n  function transfer(address to, uint value);\n  event Transfer(address indexed from, address indexed to, uint value);\n}\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) constant returns (uint);\n  function transferFrom(address from, address to, uint value);\n  function approve(address spender, uint value);\n  event Approval(address indexed owner, address indexed spender, uint value);\n}\n\n\ncontract BitcoinStore is Ownable {\n\n  address constant public Bitcoin_address = 0xB6eD7644C69416d67B522e20bC294A9a9B405B31;\n  uint tokenPrice = 35e14; // 0.0035 eth starting price\n  uint tokenFactor = 1e8;\n\n  function getBalance()\n  public\n  view\n  returns (uint)\n  {\n      return ERC20Basic(Bitcoin_address).balanceOf(this);\n  }\n\n  function getPrice()\n  public\n  view\n  returns (uint)\n  {\n      return tokenPrice;\n  }\n\n  function updatePrice(uint newPrice)\n  onlyOwner\n  {\n      tokenPrice = newPrice;\n  }\n\n  function send(address _tokenAddr, address dest, uint value)\n  onlyOwner\n  {\n      ERC20(_tokenAddr).transfer(dest, value);\n  }\n\n  /* fallback function for when ether is sent to the contract */\n  function () external payable {\n      uint buytokens = msg.value * tokenFactor / tokenPrice;\n      require(getBalance() >= buytokens);\n      ERC20(Bitcoin_address).transfer(msg.sender, buytokens);\n  }\n\n  function buy() public payable {\n      uint buytokens = msg.value * tokenFactor / tokenPrice;\n      require(getBalance() >= buytokens);\n      ERC20(Bitcoin_address).transfer(msg.sender, buytokens);\n  }\n\n  function withdraw() onlyOwner {\n      msg.sender.transfer(this.balance);\n  }\n}",
  "bytecode": "6080604052660c6f3b40b6c0006001556305f5e10060025560008054600160a060020a03191633179055610569806100386000396000f3006080604052600436106100985763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630779afe6811461014f578063092626a71461017b57806312065fe0146101ac5780633ccfd60b146101d35780638d6cc56d146101e85780638da5cb5b1461020057806398d5fdca14610215578063a6f2ae3a1461022a578063f2fde38b14610232575b600060015460025434028115156100ab57fe5b049050806100b7610253565b10156100c257600080fd5b604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815233600482015260248101839052905173b6ed7644c69416d67b522e20bc294a9a9b405b319163a9059cbb91604480830192600092919082900301818387803b15801561013457600080fd5b505af1158015610148573d6000803e3d6000fd5b5050505050005b34801561015b57600080fd5b50610179600160a060020a03600435811690602435166044356102f3565b005b34801561018757600080fd5b506101906103a3565b60408051600160a060020a039092168252519081900360200190f35b3480156101b857600080fd5b506101c1610253565b60408051918252519081900360200190f35b3480156101df57600080fd5b506101796103bb565b3480156101f457600080fd5b50610179600435610402565b34801561020c57600080fd5b5061019061041e565b34801561022157600080fd5b506101c161042d565b610179610433565b34801561023e57600080fd5b50610179600160a060020a03600435166104ea565b604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905160009173b6ed7644c69416d67b522e20bc294a9a9b405b31916370a082319160248082019260209290919082900301818787803b1580156102c257600080fd5b505af11580156102d6573d6000803e3d6000fd5b505050506040513d60208110156102ec57600080fd5b5051905090565b600054600160a060020a0316331461030a57600080fd5b82600160a060020a031663a9059cbb83836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561038657600080fd5b505af115801561039a573d6000803e3d6000fd5b50505050505050565b73b6ed7644c69416d67b522e20bc294a9a9b405b3181565b600054600160a060020a031633146103d257600080fd5b6040513390303180156108fc02916000818181858888f193505050501580156103ff573d6000803e3d6000fd5b50565b600054600160a060020a0316331461041957600080fd5b600155565b600054600160a060020a031681565b60015490565b6000600154600254340281151561044657fe5b04905080610452610253565b101561045d57600080fd5b604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815233600482015260248101839052905173b6ed7644c69416d67b522e20bc294a9a9b405b319163a9059cbb91604480830192600092919082900301818387803b1580156104cf57600080fd5b505af11580156104e3573d6000803e3d6000fd5b5050505050565b600054600160a060020a0316331461050157600080fd5b600160a060020a038116156103ff5760008054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116179055505600a165627a7a723058207deacdb77235fc6fa38a1bde96cd25c34faba6d2684b08cb8b5214a65362ee1a0029"
}