{
  "address": "0x182a603541a4483c308475147d621bbb4e2587c6",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Zerobank Token",
  "contractName": "ZBToken",
  "compilerVersion": "v0.4.22+commit.4cb486ee",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-18\n*/\n\npragma solidity ^0.4.16;\ninterface ContractReceiver {\n  function tokenFallback( address from, uint value, bytes data ) external;\n}\n\ninterface TokenRecipient {\n  function receiveApproval( address from, uint256 value, bytes data ) external;\n}\n\ninterface ERC223TokenBasic {\n    function transfer(address receiver, uint256 amount, bytes data) external;\n    function balanceOf(address owner) external constant returns (uint);    \n    function transferFrom( address from, address to, uint256 value ) external returns (bool success);\n}\ncontract ZBToken is ERC223TokenBasic\n{\n  string  public name;\n  string  public symbol;\n  uint8   public decimals;\n  uint256 public totalSupply;\n  address public issuer;\n\n  mapping( address => uint256 ) balances_;\n  mapping( address => mapping(address => uint256) ) allowances_;\n\n  // ERC20\n  event Approval( address indexed owner,\n                  address indexed spender,\n                  uint value );\n\n  event Transfer( address indexed from,\n                  address indexed to,\n                  uint256 value );\n               // bytes    data ); use ERC20 version instead\n\n  // Ethereum Token\n  event Burn( address indexed from, uint256 value );\n\n  constructor ( uint256 initialSupply,\n                string tokenName,\n                uint8 decimalUnits,\n                string tokenSymbol ) public\n  {\n    totalSupply = initialSupply * 10 ** uint256(decimalUnits);\n    balances_[msg.sender] = totalSupply;\n    name = tokenName;\n    decimals = decimalUnits;\n    symbol = tokenSymbol;\n    issuer = msg.sender;\n    emit Transfer( address(0), msg.sender, totalSupply );\n  }\n\n  function() public payable { revert(); } // does not accept ETH\n\n  // ERC20\n  function balanceOf( address owner ) public constant returns (uint) {\n    return balances_[owner];\n  }\n\n  // ERC20\n  //\n  // WARNING! When changing the approval amount, first set it back to zero\n  // AND wait until the transaction is mined. Only afterwards set the new\n  // amount. Otherwise you may be prone to a race condition attack.\n  // See: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n  function approve( address spender, uint256 value ) public\n  returns (bool success)\n  {\n    allowances_[msg.sender][spender] = value;\n    emit Approval( msg.sender, spender, value );\n    return true;\n  }\n\n  // recommended fix for known attack on any ERC20\n  function safeApprove( address _spender,\n                        uint256 _currentValue,\n                        uint256 _value ) public\n                        returns (bool success) \n  {\n    // If current allowance for _spender is equal to _currentValue, then\n    // overwrite it with _value and return true, otherwise return false.\n    if (allowances_[msg.sender][_spender] == _currentValue)\n      return approve(_spender, _value);\n\n    return false;\n  }\n\n  // ERC20\n  function allowance( address owner, address spender ) public constant\n  returns (uint256 remaining)\n  {\n    return allowances_[owner][spender];\n  }\n\n  function transfer(address to, uint256 value) public returns (bool success)\n  {\n    bytes memory empty; // null\n    _transfer( msg.sender, to, value, empty );\n    return true;\n  }\n\n  // ERC20\n  function transferFrom( address from, address to, uint256 value ) public returns (bool success)\n  {\n    require( value <= allowances_[from][msg.sender] );\n\n    allowances_[from][msg.sender] -= value;\n    bytes memory empty;\n    _transfer( from, to, value, empty );\n\n    return true;\n  }\n\n  // Ethereum Token\n  function approveAndCall( address spender,\n                           uint256 value,\n                           bytes context ) public\n  returns (bool success)\n  {\n    if ( approve(spender, value) )\n    {\n      TokenRecipient recip = TokenRecipient( spender );\n      recip.receiveApproval( msg.sender, value, context );\n      return true;\n    }\n    return false;\n  }\n\n  // Ethereum Token\n  function burn( uint256 value ) public\n  returns (bool success)\n  {\n    require( balances_[msg.sender] >= value );\n    balances_[msg.sender] -= value;\n    totalSupply -= value;\n\n    emit Burn( msg.sender, value );\n    return true;\n  }\n\n  // Ethereum Token\n  function burnFrom( address from, uint256 value ) public\n  returns (bool success)\n  {\n    require( balances_[from] >= value );\n    require( value <= allowances_[from][msg.sender] );\n\n    balances_[from] -= value;\n    allowances_[from][msg.sender] -= value;\n    totalSupply -= value;\n\n    emit Burn( from, value );\n    return true;\n  }\n\n  // ERC223 Transfer to a contract or externally-owned account\n  function transfer( address to, uint value, bytes data ) external\n  {\n    if (isContract(to)) {\n      transferToContract( to, value, data );\n    }\n    else\n    {\n      _transfer( msg.sender, to, value, data );\n    }\n  }\n\n  // ERC223 Transfer and invoke specified callback\n  function transfer( address to,\n                     uint value,\n                     bytes data,\n                     string custom_fallback ) public returns (bool success)\n  {\n    _transfer( msg.sender, to, value, data );\n\n    if ( isContract(to) )\n    {\n      ContractReceiver rx = ContractReceiver( to );\n      require( address(rx).call.value(0)(bytes4(keccak256(abi.encodePacked(custom_fallback))),\n               msg.sender,\n               value,\n               data) );\n    }\n\n    return true;\n  }\n\n  // ERC223 Transfer to contract and invoke tokenFallback() method\n  function transferToContract( address to, uint value, bytes data ) private\n  returns (bool success)\n  {\n    _transfer( msg.sender, to, value, data );\n\n    ContractReceiver cr = ContractReceiver(to);\n    cr.tokenFallback( msg.sender, value, data );\n\n    return true;\n  }\n\n  // ERC223 fetch contract size (must be nonzero to be a contract)\n  function isContract( address _addr ) private constant returns (bool)\n  {\n    uint length;\n    assembly { length := extcodesize(_addr) }\n    return (length > 0);\n  }\n\n  function _transfer( address from,\n                      address to,\n                      uint value,\n                      bytes data ) internal\n  {\n    require( to != 0x0 );\n    require( balances_[from] >= value );\n    require( balances_[to] + value > balances_[to] ); // catch overflow\n\n    balances_[from] -= value;\n    balances_[to] += value;\n\n    //Transfer( from, to, value, data ); ERC223-compat version\n    bytes memory empty;\n    empty = data;\n    emit Transfer( from, to, value ); // ERC20-compat version\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issuer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"custom_fallback\",\"type\":\"string\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_currentValue\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"safeApprove\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50604051610f63380380610f63833981016040908152815160208084015183850151606086015160ff8216600a0a85026003819055600160a060020a03331660009081526005865296872055918601805194969095919492019261007792908601906100fc565b506002805460ff191660ff8416179055805161009a9060019060208401906100fc565b5060048054600160a060020a033316600160a060020a0319909116811790915560035460408051918252516000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a350505050610197565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013d57805160ff191683800117855561016a565b8280016001018555821561016a579182015b8281111561016a57825182559160200191906001019061014f565b5061017692915061017a565b5090565b61019491905b808211156101765760008155600101610180565b90565b610dbd806101a66000396000f3006080604052600436106100cc5763ffffffff60e060020a60003504166306fdde0381146100d1578063095ea7b31461015b57806318160ddd146101935780631d143848146101ba57806323b872dd146101eb578063313ce5671461021557806342966c681461024057806370a082311461025857806379cc67901461027957806395d89b411461029d578063a9059cbb146102b2578063be45fd62146102d6578063cae9ca5114610309578063dd62ed3e14610372578063f6368f8a14610399578063f650366214610440575b600080fd5b3480156100dd57600080fd5b506100e6610467565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610120578181015183820152602001610108565b50505050905090810190601f16801561014d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016757600080fd5b5061017f600160a060020a03600435166024356104f5565b604080519115158252519081900360200190f35b34801561019f57600080fd5b506101a861055f565b60408051918252519081900360200190f35b3480156101c657600080fd5b506101cf610565565b60408051600160a060020a039092168252519081900360200190f35b3480156101f757600080fd5b5061017f600160a060020a0360043581169060243516604435610574565b34801561022157600080fd5b5061022a6105f2565b6040805160ff9092168252519081900360200190f35b34801561024c57600080fd5b5061017f6004356105fb565b34801561026457600080fd5b506101a8600160a060020a0360043516610685565b34801561028557600080fd5b5061017f600160a060020a03600435166024356106a0565b3480156102a957600080fd5b506100e661077c565b3480156102be57600080fd5b5061017f600160a060020a03600435166024356107d6565b3480156102e257600080fd5b5061030760048035600160a060020a03169060248035916044359182019101356107f0565b005b34801561031557600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261017f948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506108819650505050505050565b34801561037e57600080fd5b506101a8600160a060020a036004358116906024351661098f565b3480156103a557600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261017f948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506109ba9650505050505050565b34801561044c57600080fd5b5061017f600160a060020a0360043516602435604435610b6a565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104ed5780601f106104c2576101008083540402835291602001916104ed565b820191906000526020600020905b8154815290600101906020018083116104d057829003601f168201915b505050505081565b600160a060020a03338116600081815260066020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035481565b600454600160a060020a031681565b600160a060020a038084166000908152600660209081526040808320339094168352929052908120546060908311156105ac57600080fd5b600160a060020a03808616600090815260066020908152604080832033909416835292905220805484900390556105e585858584610bb5565b600191505b509392505050565b60025460ff1681565b600160a060020a03331660009081526005602052604081205482111561062057600080fd5b600160a060020a03331660008181526005602090815260409182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b600160a060020a031660009081526005602052604090205490565b600160a060020a0382166000908152600560205260408120548211156106c557600080fd5b600160a060020a03808416600090815260066020908152604080832033909416835292905220548211156106f857600080fd5b600160a060020a038084166000818152600560209081526040808320805488900390556006825280832033909516835293815290839020805486900390556003805486900390558251858152925191927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5929081900390910190a250600192915050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104ed5780601f106104c2576101008083540402835291602001916104ed565b600060606107e633858584610bb5565b5060019392505050565b6107f984610c87565b1561083f57610839848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843750610c8f945050505050565b5061087b565b61087b33858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843750610bb5945050505050565b50505050565b60008061088e85856104f5565b156109845784905080600160a060020a031663a2d578533386866040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156109155781810151838201526020016108fd565b50505050905090810190601f1680156109425780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561096357600080fd5b505af1158015610977573d6000803e3d6000fd5b50505050600191506105ea565b506000949350505050565b600160a060020a03918216600090815260066020908152604080832093909416825291909152205490565b6000806109c933878787610bb5565b6109d286610c87565b15610b5e5785905080600160a060020a03166000846040516020018082805190602001908083835b60208310610a195780518252601f1990920191602091820191016109fa565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610a7c5780518252601f199092019160209182019101610a5d565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060e060020a9004903388886040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b83811015610b0e578181015183820152602001610af6565b50505050905090810190601f168015610b3b5780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af193505050501515610b5e57600080fd5b50600195945050505050565b600160a060020a033381166000908152600660209081526040808320938716835292905290812054831415610baa57610ba384836104f5565b9050610bae565b5060005b9392505050565b6060600160a060020a0384161515610bcc57600080fd5b600160a060020a038516600090815260056020526040902054831115610bf157600080fd5b600160a060020a03841660009081526005602052604090205483810111610c1757600080fd5b50600160a060020a03808516600081815260056020908152604080832080548890039055938716808352918490208054870190558351868152935185949293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a35050505050565b6000903b1190565b600080610c9e33868686610bb5565b84905080600160a060020a031663c0ee0b8a3386866040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610d20578181015183820152602001610d08565b50505050905090810190601f168015610d4d5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610d6e57600080fd5b505af1158015610d82573d6000803e3d6000fd5b506001989750505050505050505600a165627a7a72305820c4f8dcc1b90f2b875c0d3cea635d6b27f0fadbeea63fa50ca66ea297fe9aa5870029000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000075a42546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000025a42000000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000075a42546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000025a42000000000000000000000000000000000000000000000000000000000000"
}