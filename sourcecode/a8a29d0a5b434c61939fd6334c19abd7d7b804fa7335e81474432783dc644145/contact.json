{
  "address": "0xc40d3367c4f8be6296b5f91feb21b4def3b9d7a4",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "WhiteXToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-11\n*/\n\npragma solidity ^0.4.25;\n\ncontract SafeMath {\n    function safeAdd(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        assert(c >= a);\n    }\n\n    function safeSub(uint a, uint b) internal pure returns (uint c) {\n        c = a - b;\n        assert(c <= a);\n    }\n}\n\ncontract ERC20Interface {\n    event Transfer(address indexed _from, address indexed _to, uint _tokens);\n    event Approval(address indexed _tokenOwner, address indexed _spender, uint _tokens);\n    \n    function name() external view returns (string _name);\n    function symbol() external view returns (string _symbol);\n    function decimals() external view returns (uint8 _decimal);\n    function totalSupply() external view returns (uint _totalSupply);\n    function balanceOf(address _tokenOwner) external view returns (uint _balance);\n    function allowance(address _tokenOwner, address _spender) external view returns (uint _remaining);\n    function transfer(address _to, uint _tokens) public returns (bool _success);\n    function approve(address _spender, uint _tokens) public returns (bool _success);\n    function transferFrom(address _from, address _to, uint _tokens) public returns (bool _success);\n}\n\n// abstract contract\ninterface tokenRecipient {\n    function recieveApproval(address _from, uint _tokens, address _token, bytes _data) external;\n}\n\ncontract Owned {\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n}\n\ncontract WhiteXToken is ERC20Interface, Owned, SafeMath {\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint public totalSupply;\n    \n    mapping(address => uint) public balances;\n    mapping(address => mapping(address => uint)) public allowed;\n    mapping(address => bool) public frozenAccount;\n    \n    event FrozenFunds(address _target, bool _frozen);\n\n    constructor() public {\n        name = \"White X Chain\";\n        symbol = \"XPS\";\n        decimals = 18;\n        totalSupply = 1000000000 * 10 ** 18;\n        balances[msg.sender] = totalSupply;\n        emit Transfer(address(0), owner, totalSupply);\n    }\n    \n    // destroy contract\n    function kill() external onlyOwner {\n        selfdestruct(owner);\n    }\n\n    // transfer contract administrator\n    function transferOwnership(address _newOwner) external onlyOwner {\n        require(_newOwner != address(0));\n        emit Transfer(owner, _newOwner, balances[owner]);\n        balances[_newOwner] = safeAdd(balances[_newOwner], balances[owner]);\n        balances[owner] = 0;\n        owner = _newOwner;\n    }\n    \n    // reissuing token\n    function mintToken(uint _mintedAmount) external onlyOwner {\n        balances[owner] = safeAdd(balances[owner], _mintedAmount);\n        totalSupply = safeAdd(totalSupply, _mintedAmount);\n        emit Transfer(address(0), owner, _mintedAmount);\n    }\n    \n    // freeze account\n    function freezeAccount(address _target, bool _freeze) external onlyOwner {\n        frozenAccount[_target] = _freeze;\n        emit FrozenFunds(_target, _freeze);\n    }\n    \n    function name() external view returns (string _name) {\n        _name = name;\n    }\n    \n    function symbol() external view returns (string _symbol) {\n        _symbol = symbol;\n    }\n    \n    function decimals() external view returns (uint8 _decimals) {\n        _decimals = decimals;\n    }\n    \n    function totalSupply() external view returns (uint _totalSupply) {\n        _totalSupply =  totalSupply - balances[address(0)];\n    }\n\n    function balanceOf(address _tokenOwner) external view returns (uint _balance) {\n        _balance = balances[_tokenOwner];\n    }\n\n    function transfer(address _to, uint _tokens) public returns (bool _success) {\n        require(!frozenAccount[msg.sender]);\n        require(_tokens > 0);\n        require(balances[msg.sender] >= _tokens);\n        balances[msg.sender] = safeSub(balances[msg.sender], _tokens);\n        balances[_to] = safeAdd(balances[_to], _tokens);\n        emit Transfer(msg.sender, _to, _tokens);\n        _success = true;\n    }\n\n    function approve(address _spender, uint _tokens) public returns (bool _success) {\n        allowed[msg.sender][_spender] = _tokens;\n        emit Approval(msg.sender, _spender, _tokens);\n        _success = true;\n    }\n\n    function transferFrom(address _from, address _to, uint _tokens) public returns (bool _success) {\n        require(!frozenAccount[msg.sender]);\n        require(_tokens > 0);\n        require(allowed[_from][msg.sender] >= _tokens);\n        require(balances[msg.sender] >= _tokens);\n        allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _tokens);\n        balances[_from] = safeSub(balances[_from], _tokens);\n        balances[_to] = safeAdd(balances[_to], _tokens);\n        emit Transfer(_from, _to, _tokens);\n        _success = true;\n    }\n\n    function allowance(address _tokenOwner, address _spender) external view returns (uint _remaining) {\n        _remaining = allowed[_tokenOwner][_spender];\n    }\n\n    function approveAndCall(address _spender, uint _tokens, bytes _data) external returns (bool _success) {\n        require(approve(_spender, _tokens));\n        tokenRecipient(_spender).recieveApproval(msg.sender, _tokens, this, _data);\n        _success = true;\n    }\n\n    // Don't accept ETH\n    function () external payable {\n        revert();\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"_remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a0319163317905560408051808201909152600d8082527f5768697465205820436861696e00000000000000000000000000000000000000602090920191825261006791600191610125565b506040805180820190915260038082527f585053000000000000000000000000000000000000000000000000000000000060209092019182526100ac91600291610125565b506003805460ff191660121790556b033b2e3c9fd0803ce80000006004819055336000908152600560209081526040808320849055825481519485529051600160a060020a0391909116937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a36101c0565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061016657805160ff1916838001178555610193565b82800160010185558215610193579182015b82811115610193578251825591602001919060010190610178565b5061019f9291506101a3565b5090565b6101bd91905b8082111561019f57600081556001016101a9565b90565b610bc1806101cf6000396000f3006080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610100578063095ea7b31461018a57806318160ddd146101c257806323b872dd146101e957806327e235e314610213578063313ce5671461023457806341c0e1b51461025f5780635c6581651461027657806370a082311461029d5780638da5cb5b146102be57806395d89b41146102ef578063a9059cbb14610304578063b414d4b614610328578063c634d03214610349578063cae9ca5114610361578063dd62ed3e14610392578063e724529c146103b9578063f2fde38b146103df575b600080fd5b34801561010c57600080fd5b50610115610400565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014f578181015183820152602001610137565b50505050905090810190601f16801561017c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019657600080fd5b506101ae600160a060020a0360043516602435610495565b604080519115158252519081900360200190f35b3480156101ce57600080fd5b506101d76104fb565b60408051918252519081900360200190f35b3480156101f557600080fd5b506101ae600160a060020a036004358116906024351660443561052d565b34801561021f57600080fd5b506101d7600160a060020a036004351661068a565b34801561024057600080fd5b5061024961069c565b6040805160ff9092168252519081900360200190f35b34801561026b57600080fd5b506102746106a5565b005b34801561028257600080fd5b506101d7600160a060020a03600435811690602435166106ca565b3480156102a957600080fd5b506101d7600160a060020a03600435166106e7565b3480156102ca57600080fd5b506102d3610702565b60408051600160a060020a039092168252519081900360200190f35b3480156102fb57600080fd5b50610115610711565b34801561031057600080fd5b506101ae600160a060020a036004351660243561076f565b34801561033457600080fd5b506101ae600160a060020a0360043516610847565b34801561035557600080fd5b5061027460043561085c565b34801561036d57600080fd5b506101ae60048035600160a060020a03169060248035916044359182019101356108f4565b34801561039e57600080fd5b506101d7600160a060020a03600435811690602435166109c6565b3480156103c557600080fd5b50610274600160a060020a036004351660243515156109f1565b3480156103eb57600080fd5b50610274600160a060020a0360043516610a6c565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561048b5780601f106104605761010080835404028352916020019161048b565b820191906000526020600020905b81548152906001019060200180831161046e57829003601f168201915b5050505050905090565b336000818152600660209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6000805260056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc546004540390565b3360009081526007602052604081205460ff161561054a57600080fd5b6000821161055757600080fd5b600160a060020a038416600090815260066020908152604080832033845290915290205482111561058757600080fd5b336000908152600560205260409020548211156105a357600080fd5b600160a060020a03841660009081526006602090815260408083203384529091529020546105d19083610b55565b600160a060020a03851660008181526006602090815260408083203384528252808320949094559181526005909152205461060c9083610b55565b600160a060020a03808616600090815260056020526040808220939093559085168152205461063b9083610b68565b600160a060020a038085166000818152600560209081526040918290209490945580518681529051919392881692600080516020610b7683398151915292918290030190a35060019392505050565b60056020526000908152604090205481565b60035460ff1690565b600054600160a060020a031633146106bc57600080fd5b600054600160a060020a0316ff5b600660209081526000928352604080842090915290825290205481565b600160a060020a031660009081526005602052604090205490565b600054600160a060020a031681565b60028054604080516020601f600019610100600187161502019094168590049384018190048102820181019092528281526060939092909183018282801561048b5780601f106104605761010080835404028352916020019161048b565b3360009081526007602052604081205460ff161561078c57600080fd5b6000821161079957600080fd5b336000908152600560205260409020548211156107b557600080fd5b336000908152600560205260409020546107cf9083610b55565b3360009081526005602052604080822092909255600160a060020a038516815220546107fb9083610b68565b600160a060020a038416600081815260056020908152604091829020939093558051858152905191923392600080516020610b768339815191529281900390910190a350600192915050565b60076020526000908152604090205460ff1681565b600054600160a060020a0316331461087357600080fd5b60008054600160a060020a03168152600560205260409020546108969082610b68565b60008054600160a060020a03168152600560205260409020556004546108bc9082610b68565b60045560008054604080518481529051600160a060020a039092169291600080516020610b768339815191529181900360200190a350565b60006109008585610495565b151561090b57600080fd5b6040517fbde6312c000000000000000000000000000000000000000000000000000000008152336004820181815260248301879052306044840181905260806064850190815260848501879052600160a060020a038a169463bde6312c94938a93928a928a92919060a40184848082843782019150509650505050505050600060405180830381600087803b1580156109a357600080fd5b505af11580156109b7573d6000803e3d6000fd5b50600198975050505050505050565b600160a060020a03918216600090815260066020908152604080832093909416825291909152205490565b600054600160a060020a03163314610a0857600080fd5b600160a060020a038216600081815260076020908152604091829020805460ff191685151590811790915582519384529083015280517f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a59281900390910190a15050565b600054600160a060020a03163314610a8357600080fd5b600160a060020a0381161515610a9857600080fd5b60008054600160a060020a03908116808352600560209081526040938490205484519081529351928516939192600080516020610b768339815191529281900390910190a3600160a060020a038082166000908152600560205260408082205482549093168252902054610b0c9190610b68565b600160a060020a039182166000818152600560205260408082209390935580549093168352908220829055815473ffffffffffffffffffffffffffffffffffffffff1916179055565b80820382811115610b6257fe5b92915050565b81810182811015610b6257fe00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820a8b754e790163ca09bf68ed6f188e832778cfa24514d4bf195b4ba573b8b52380029"
}