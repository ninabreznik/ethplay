{
  "address": "0xd588b586d61c826a0e87919b3d1a239206d58bf2",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "EtherID",
  "contractName": "EtherId",
  "compilerVersion": "v0.3.5-2016-06-21-b23c300",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2016-06-28\n*/\n\n// Ethereum Name Registrar as it should be!\n//\n// Written by Alexandre Naverniouk\n// twitter @AlexNa\n\n\ncontract EtherId {\n\nuint constant MAX_PROLONG = 2000000; // Maximum number of blocks to prolong the ownership. About one year.\n\nuint public n_domains = 0;      // total number of registered domains\nuint public root_domain = 0;    // name of the first domain in the linked list\naddress contract_owner = 0; //\n\nstruct Id {                     // Id record. Double linked list. Allows to delete ID\n    uint value;\n    uint next_id;\n    uint prev_id;\n}\n\nstruct Domain {                 // Domain record. Linked list. \n    address owner;              // Owner of the domain\n    uint expires;               // Expiration block namber\n    uint price;                 // Sale price ( 0 - not for sale )\n    address transfer;           // Address of the new owner\n    uint next_domain;           // Makes linked list for scanning\n    uint root_id;               // Name of the first ID in the list\n    mapping (uint => Id) ids;   // Map of the ID's\n}\n\nmapping (uint => Domain) domains; // Map of the domains\n\nfunction EtherId()\n{\n    contract_owner = msg.sender;\n}\n\nevent DomainChanged( address indexed sender, uint domain, uint id ); // Fired every time the registry is changed\n\nfunction getId( uint domain, uint id ) constant returns (uint v, uint next_id, uint prev_id )\n{\n    Id i = domains[domain].ids[id]; \n\n    v = i.value;\n    next_id = i.next_id;\n    prev_id = i.prev_id;\n}\n\nfunction getDomain( uint domain ) constant returns \n    (address owner, uint expires, uint price, address transfer, uint next_domain, uint root_id )\n{\n    Domain d = domains[ domain ];\n    \n    owner = d.owner;\n    expires = d.expires;\n    price = d.price;\n    transfer = d.transfer;\n    next_domain = d.next_domain;\n    root_id = d.root_id;    \n}\n\n\nfunction changeDomain( uint domain, uint expires, uint price, address transfer ) \n{\n    uint money_used = 0;            // How much was spent here\n\n    if( expires > MAX_PROLONG )     // Not prolong for too long\n    {\n        expires = MAX_PROLONG;\n    }\n    \n    if( domain == 0 ) throw;        // Prevents creating 0 domain\n\n    Domain d = domains[ domain ];\n\n    if( d.owner == 0 )              // 0 means the domain is not yet registered\n    { \n        d.owner = msg.sender;       // Simple calim\n        d.price = price;\n        d.transfer = transfer;\n        d.expires = block.number + expires;\n        \n        d.next_domain = root_domain;// Put the new domain into the linked list\n        root_domain = domain;\n        \n        //****************************************************************************\n        //*** SPECIAL CODE FOR TRANSFERING FIRST 32301 DOMAINS INTO THE NEW CONTRACT\n        if( msg.sender == contract_owner && n_domains < 32301 && transfer != 0 ) { \n            d.owner = transfer; // immediately transfer the ownership to the old owner\n            d.transfer = 0;\n        }\n        //****************************************************************************\n        \n        \n        n_domains = n_domains + 1;\n        DomainChanged( msg.sender, domain, 0 );\n    }\n    else                            // The domain already has an owner\n    {\n        if( d.owner == msg.sender || block.number > d.expires ) { // If it is yours or expired, you have all rights to change\n            d.owner = msg.sender;   // Possible change of the ownershp if expired\n            d.price = price;\n            d.transfer = transfer;\n            d.expires = block.number + expires;\n            DomainChanged( msg.sender, domain, 0 );\n        }\n        else                        // Not yours and not expired\n        {\n            if( d.transfer != 0 ) { // The new owner is specified and ...\n                if( d.transfer == msg.sender && msg.value >= d.price ) // ... it is you and enought money \n                {\n                    if( d.price > 0 ) \n                    { \n                        if( address( d.owner ).send( d.price ) ) // The money goes to the owner\n                        {\n                            money_used = d.price;   // remember how much spent\n                        }\n                        else throw; // problem with send()\n                    }\n\n                    d.owner = msg.sender;   // Change the ownership\n                    d.price = price;        // New price\n                    d.transfer = transfer;  // New transfer\n                    d.expires = block.number + expires; //New expiration\n                    DomainChanged( msg.sender, domain, 0 );\n                }\n            } \n            else  // not set for transfer, but...\n            {\n                if( d.price > 0 &&  msg.value >= d.price ) // ... on sale, and enough money\n                {\n                    if( address( d.owner ).send( d.price ) ) // The money goes to the owner\n                    {\n                        money_used = d.price; // remember how much spent\n                    }\n                    else throw; // problem with send()\n\n                    d.owner = msg.sender;   // Change the ownership\n                    d.price = price;        // New price\n                    d.transfer = transfer;  // New transfer\n                    d.expires = block.number + expires; // New expiration\n                    DomainChanged( msg.sender, domain, 0 );\n                }\n            }\n        }\n    }\n    \n    if( msg.value > money_used ) // If transaction has more money than was needed\n    {\n        if( !msg.sender.send( msg.value - money_used ) ) throw; // We do not need your leftover\n    }\n}\n\nfunction changeId( uint domain, uint name, uint value ) {\n\n    if( domain == 0 ) throw;        // Prevents creating 0 domain\n    if( name == 0 ) throw;          // Prevents creating 0 id\n    \n    Domain d = domains[ domain ];\n\n    if( d.owner == msg.sender )     // Only owner can change the ID\n    {\n        Id id = d.ids[ name ];\n\n        if( id.value == 0 ) {       // 0 means the ID was not found\n            if( value != 0 ) {      // Only add non zero values\n                id.value = value;   \n                id.next_id = d.root_id; // Put into the head of the list\n                // id.prev_id = 0;  // 0 is the default, no need to assign\n                \n                if( d.root_id != 0 ) \n                {\n                    d.ids[ d.root_id ].prev_id = name; // link the next ID back\n                }\n\n                d.root_id = name;   \n                DomainChanged( msg.sender, domain, name );\n            }\n        }\n        else                        // The ID was found\n        {\n            if( value != 0 )        // Simple change of the value\n            {\n                id.value = value;\n                DomainChanged( msg.sender, domain, name );\n            }\n            else                    // Deleting the ID\n            {\n                if( id.prev_id != 0 ) // Modify the double linked list\n                {\n                    d.ids[ id.prev_id ].next_id = id.next_id;   \n                }\n                else\n                {\n                    d.root_id = id.next_id;\n                }\n\n                if( id.next_id != 0 )\n                {\n                    d.ids[ id.next_id ].prev_id = id.prev_id;   \n                }\n                \n                id.prev_id = 0;   // Clear the storage\n                id.next_id = 0;   \n                id.value = 0;   \n                DomainChanged( msg.sender, domain, name );\n            }\n        }\n    }\n    \n    if( msg.value > 0 ) // If transaction has any money...\n    {\n        if( !msg.sender.send( msg.value ) ) throw; // ... it is a mistake, so send it back\n    }\n}\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"root_domain\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"domain\",\"type\":\"uint256\"}],\"name\":\"getDomain\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"transfer\",\"type\":\"address\"},{\"name\":\"next_domain\",\"type\":\"uint256\"},{\"name\":\"root_id\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"n_domains\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"domain\",\"type\":\"uint256\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getId\",\"outputs\":[{\"name\":\"v\",\"type\":\"uint256\"},{\"name\":\"next_id\",\"type\":\"uint256\"},{\"name\":\"prev_id\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"domain\",\"type\":\"uint256\"},{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"transfer\",\"type\":\"address\"}],\"name\":\"changeDomain\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"domain\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"uint256\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"changeId\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"domain\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"DomainChanged\",\"type\":\"event\"}]",
  "bytecode": "6060604052600060006000505560006001600050556000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b610de68061007b6000396000f360606040523615610074576000357c010000000000000000000000000000000000000000000000000000000090048063138716e8146100765780631a7a98e2146100995780631e9da16a1461011457806324fc65ed1461013757806375090ebf1461017a578063eb1ff845146101ad57610074565b005b61008360048050506101d7565b6040518082815260200191505060405180910390f35b6100af60048080359060200190919050506101e0565b604051808773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001965050505050505060405180910390f35b6101216004805050610296565b6040518082815260200191505060405180910390f35b610156600480803590602001909190803590602001909190505061029f565b60405180848152602001838152602001828152602001935050505060405180910390f35b6101ab6004808035906020019091908035906020019091908035906020019091908035906020019091905050610309565b005b6101d56004808035906020019091908035906020019091908035906020019091905050610a72565b005b60016000505481565b60006000600060006000600060006003600050600089815260200190815260200160002060005090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16965086508060010160005054955085508060020160005054945084508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935083508060040160005054925082508060050160005054915081505b5091939550919395565b60006000505481565b600060006000600060036000506000878152602001908152602001600020600050600601600050600086815260200190815260200160002060005090508060000160005054935083508060010160005054925082508060020160005054915081505b509250925092565b6000600060009150621e848085111561032557621e8480945084505b600086141561033357610002565b60036000506000878152602001908152602001600020600050905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057557338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550838160020160005081905550828160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508443018160010160005081905550600160005054816004016000508190555085600160005081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156104835750617e2d600060005054105b80156104a6575060008373ffffffffffffffffffffffffffffffffffffffff1614155b1561050757828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555060008160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b6001600060005054016000600050819055503373ffffffffffffffffffffffffffffffffffffffff167ff10cb5dcb691bb26c2685b3fd72f4ca4008c33eafd1ee88c27210ef1db722459876000604051808381526020018281526020019250505060405180910390a2610a21565b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806105d95750806001016000505443115b156106ae57338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550838160020160005081905550828160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555084430181600101600050819055503373ffffffffffffffffffffffffffffffffffffffff167ff10cb5dcb691bb26c2685b3fd72f4ca4008c33eafd1ee88c27210ef1db722459876000604051808381526020018281526020019250505060405180910390a2610a20565b60008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156108b7573373ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610758575080600201600050543410155b156108b2576000816002016000505411156107e6578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008260020160005054604051809050600060405180830381858888f19350505050156107e0578060020160005054915081506107e5565b610002565b5b338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550838160020160005081905550828160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555084430181600101600050819055503373ffffffffffffffffffffffffffffffffffffffff167ff10cb5dcb691bb26c2685b3fd72f4ca4008c33eafd1ee88c27210ef1db722459876000604051808381526020018281526020019250505060405180910390a25b610a1f565b600081600201600050541180156108d5575080600201600050543410155b15610a1e578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008260020160005054604051809050600060405180830381858888f193505050501561094d57806002016000505491508150610952565b610002565b338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550838160020160005081905550828160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555084430181600101600050819055503373ffffffffffffffffffffffffffffffffffffffff167ff10cb5dcb691bb26c2685b3fd72f4ca4008c33eafd1ee88c27210ef1db722459876000604051808381526020018281526020019250505060405180910390a25b5b5b5b81341115610a69573373ffffffffffffffffffffffffffffffffffffffff166000833403604051809050600060405180830381858888f193505050501515610a6857610002565b5b5b505050505050565b600060006000851415610a8457610002565b6000841415610a9257610002565b6003600050600086815260200190815260200160002060005091503373ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610d97578160060160005060008581526020019081526020016000206000509050600081600001600050541415610c0257600083141515610bfd578281600001600050819055508160050160005054816001016000508190555060008260050160005054141515610b9a578382600601600050600084600501600050548152602001908152602001600020600050600201600050819055505b8382600501600050819055503373ffffffffffffffffffffffffffffffffffffffff167ff10cb5dcb691bb26c2685b3fd72f4ca4008c33eafd1ee88c27210ef1db7224598686604051808381526020018281526020019250505060405180910390a25b610d96565b600083141515610c73578281600001600050819055503373ffffffffffffffffffffffffffffffffffffffff167ff10cb5dcb691bb26c2685b3fd72f4ca4008c33eafd1ee88c27210ef1db7224598686604051808381526020018281526020019250505060405180910390a2610d95565b60008160020160005054141515610cbd5780600101600050548260060160005060008360020160005054815260200190815260200160002060005060010160005081905550610cd1565b806001016000505482600501600050819055505b60008160010160005054141515610d1757806002016000505482600601600050600083600101600050548152602001908152602001600020600050600201600050819055505b6000816002016000508190555060008160010160005081905550600081600001600050819055503373ffffffffffffffffffffffffffffffffffffffff167ff10cb5dcb691bb26c2685b3fd72f4ca4008c33eafd1ee88c27210ef1db7224598686604051808381526020018281526020019250505060405180910390a25b5b5b6000341115610dde573373ffffffffffffffffffffffffffffffffffffffff16600034604051809050600060405180830381858888f193505050501515610ddd57610002565b5b5b505050505056"
}