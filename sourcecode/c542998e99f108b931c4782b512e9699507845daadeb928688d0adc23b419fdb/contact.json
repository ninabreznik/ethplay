{
  "address": "0x777777d1123591df7f68e053bc182de3cd4fa6de",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SlotsCoin",
  "compilerVersion": "v0.5.5+commit.47a71e8f",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-06\n*/\n\npragma solidity ^ 0.5.5;\n\nlibrary SafeMath {\n\n    /**\n     * @dev Multiplies two numbers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns(uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns(uint256) {\n        require(b > 0); // Solidity only automatically asserts when dividing by 0\n        uint256 c = a / b;\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns(uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n\n    address public owner;\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor()public {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n}\n\ncontract SlotsCoin is Ownable {\n    \n    using SafeMath\n    for uint;\n    \n    mapping(address => uint) public deposit;\n    mapping(address => uint) public withdrawal;\n    bool status = true;\n    uint min_payment = 0.05 ether;\n    address payable public marketing_address = 0x777777018285801412ec226229C6F6AE16445F89;\n    uint public rp = 0;\n    \n    event Deposit(\n        address indexed from,\n        uint indexed block,\n        uint value,\n        uint time\n    );\n    \n    event Withdrawal(\n        address indexed from,\n        uint indexed block,\n        uint value, \n        uint ident,\n        uint time\n    );\n    \n    modifier isNotContract() {\n        uint size;\n        address addr = msg.sender;\n        assembly { size := extcodesize(addr) }\n        require(size == 0 && tx.origin == msg.sender);\n        _;\n    }\n    \n    modifier contractIsOn() {\n        require(status);\n        _;\n    }\n    modifier minPayment() {\n        require(msg.value >= min_payment);\n        _;\n    }\n    \n    //automatic withdrawal using server bot\n    function multisend(address payable[] memory dests, uint256[] memory values, uint256[] memory ident) onlyOwner contractIsOn public returns(uint) {\n        uint256 i = 0;\n        \n        while (i < dests.length) {\n            uint transfer_value = values[i].sub(values[i].mul(3).div(100));\n            dests[i].transfer(transfer_value);\n            withdrawal[dests[i]]+=values[i];\n            emit Withdrawal(dests[i], block.number, values[i], ident[i], now);\n            rp += values[i].mul(3).div(100);\n            i += 1;\n        }\n        \n        return(i);\n    }\n    \n    function startProphylaxy()onlyOwner public {\n        status = false;\n    }\n    \n    function stopProphylaxy()onlyOwner public {\n        status = true;\n    }\n    \n    function() external isNotContract contractIsOn minPayment payable {\n        deposit[msg.sender]+= msg.value;\n        emit Deposit(msg.sender, block.number, msg.value, now);\n    }\n    \n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"marketing_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopProphylaxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"},{\"name\":\"ident\",\"type\":\"uint256[]\"}],\"name\":\"multisend\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startProphylaxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ident\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"}]",
  "bytecode": "60806040526001600360006101000a81548160ff02191690831515021790555066b1a2bc2ec5000060045573777777018285801412ec226229c6f6ae16445f89600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600655336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a6b806100d36000396000f3fe60806040526004361061007b5760003560e01c8063961310491161004e578063961310491461028f578063b4d4c5dc146102f4578063e0d015e2146104f5578063f340fa011461050c5761007b565b806354841e951461019f57806369b0551e146101f65780638da5cb5b1461020d578063904c1e1f14610264575b600080339050803b91506000821480156100c057503373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b15156100cb57600080fd5b600360009054906101000a900460ff1615156100e657600080fd5b60045434101515156100f757600080fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550433373ffffffffffffffffffffffffffffffffffffffff167f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e3442604051808381526020018281526020019250505060405180910390a35050005b3480156101ab57600080fd5b506101b4610571565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020257600080fd5b5061020b610597565b005b34801561021957600080fd5b5061022261060f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027057600080fd5b50610279610634565b6040518082815260200191505060405180910390f35b34801561029b57600080fd5b506102de600480360360208110156102b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061063a565b6040518082815260200191505060405180910390f35b34801561030057600080fd5b506104df6004803603606081101561031757600080fd5b810190808035906020019064010000000081111561033457600080fd5b82018360208201111561034657600080fd5b8035906020019184602083028401116401000000008311171561036857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103c857600080fd5b8201836020820111156103da57600080fd5b803590602001918460208302840111640100000000831117156103fc57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561045c57600080fd5b82018360208201111561046e57600080fd5b8035906020019184602083028401116401000000008311171561049057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610652565b6040518082815260200191505060405180910390f35b34801561050157600080fd5b5061050a610925565b005b34801561051857600080fd5b5061055b6004803603602081101561052f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061099d565b6040518082815260200191505060405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105f257600080fd5b6001600360006101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60026020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106af57600080fd5b600360009054906101000a900460ff1615156106ca57600080fd5b60008090505b845181101561091a57600061074261071c606461070e600389878151811015156106f657fe5b906020019060200201516109b590919063ffffffff16565b6109f390919063ffffffff16565b868481518110151561072a57fe5b90602001906020020151610a1d90919063ffffffff16565b9050858281518110151561075257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156107a1573d6000803e3d6000fd5b5084828151811015156107b057fe5b906020019060200201516002600088858151811015156107cc57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555043868381518110151561082c57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167f887e73c01568cecc3fe477a39c098f6599306a7592db9c8941dfc71ff9046d06878581518110151561087b57fe5b90602001906020020151878681518110151561089357fe5b906020019060200201514260405180848152602001838152602001828152602001935050505060405180910390a36108ff60646108f1600388868151811015156108d957fe5b906020019060200201516109b590919063ffffffff16565b6109f390919063ffffffff16565b600660008282540192505081905550600182019150506106d0565b809150509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561098057600080fd5b6000600360006101000a81548160ff021916908315150217905550565b60016020528060005260406000206000915090505481565b6000808314156109c857600090506109ed565b600082840290508284828115156109db57fe5b041415156109e857600080fd5b809150505b92915050565b60008082111515610a0357600080fd5b60008284811515610a1057fe5b0490508091505092915050565b6000828211151515610a2e57600080fd5b60008284039050809150509291505056fea165627a7a72305820a94db70aaea8dbc7acc07c61d922ddf55ef82a7fae2e3a191a22a56be14b7abc0029"
}