{
  "address": "0x7750730150eb69f7b3f309e35d9690617641280e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SimpleChildToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-28\n*/\n\npragma solidity ^0.4.21;\n\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n// File: contracts/ChildToken.sol\n\n/**\n * @title ChildToken\n * @dev ChildToken is the base contract of child token contracts\n */\ncontract ChildToken is StandardToken {\n}\n\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n// File: contracts/Refundable.sol\n\n/**\n * @title Refundable\n * @dev Base contract that can refund funds(ETH and tokens) by owner.\n * @dev Reference TokenDestructible(zeppelinand) TokenDestructible(zeppelin)\n */\ncontract Refundable is Ownable {\n\tevent RefundETH(address indexed owner, address indexed payee, uint256 amount);\n\tevent RefundERC20(address indexed owner, address indexed payee, address indexed token, uint256 amount);\n\n\tfunction Refundable() public payable {\n\t}\n\n\tfunction refundETH(address payee, uint256 amount) onlyOwner public {\n\t\trequire(payee != address(0));\n\t\trequire(this.balance >= amount);\n\t\tassert(payee.send(amount));\n\t\tRefundETH(owner, payee, amount);\n\t}\n\n\tfunction refundERC20(address tokenContract, address payee, uint256 amount) onlyOwner public {\n\t\trequire(payee != address(0));\n\t\tbool isContract;\n\t\tassembly {\n\t\t\tisContract := gt(extcodesize(tokenContract), 0)\n\t\t}\n\t\trequire(isContract);\n\n\t\tERC20 token = ERC20(tokenContract);\n\t\tassert(token.transfer(payee, amount));\n\t\tRefundERC20(owner, payee, tokenContract, amount);\n\t}\n}\n\n// File: contracts/SimpleChildToken.sol\n\n/**\n * @title SimpleChildToken\n * @dev Simple child token to be generated by TokenFather.\n */\ncontract SimpleChildToken is ChildToken, Refundable {\n\tstring public name;\n\tstring public symbol;\n\tuint8 public decimals;\n\n\tfunction SimpleChildToken(address _owner, string _name, string _symbol, uint256 _initSupply, uint8 _decimals) public {\n\t\trequire(_owner != address(0));\n\t\towner = _owner;\n\t\tname = _name;\n\t\tsymbol = _symbol;\n\t\tdecimals = _decimals;\n\n\t\tuint256 amount = _initSupply;\n\t\ttotalSupply_ = totalSupply_.add(amount);\n\t\tbalances[owner] = balances[owner].add(amount);\n\t\tTransfer(address(0), owner, amount);\n\t}\n}",
  "bytecode": "60806040523480156200001157600080fd5b5060405162000e3438038062000e3483398101604090815281516020830151918301516060840151608085015160038054600160a060020a0319163317905592949384019391909101916000600160a060020a03861615156200007357600080fd5b60038054600160a060020a031916600160a060020a0388161790558451620000a39060049060208801906200019a565b508351620000b99060059060208701906200019a565b50506006805460ff191660ff83161790556001548290620000e9908264010000000062000186810262000ba61704565b600155600354600160a060020a031660009081526020819052604090205462000121908264010000000062000ba66200018682021704565b60038054600160a060020a039081166000908152602081815260408083209590955592548451868152945192169390927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35050505050506200023f565b818101828110156200019457fe5b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001dd57805160ff19168380011785556200020d565b828001600101855582156200020d579182015b828111156200020d578251825591602001919060010190620001f0565b506200021b9291506200021f565b5090565b6200023c91905b808211156200021b576000815560010162000226565b90565b610be5806200024f6000396000f3006080604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df578063095ea7b31461016957806318160ddd146101a157806323b872dd146101c8578063313ce567146101f257806348c447121461021d5780634bd2276614610249578063661884631461026d57806370a08231146102915780638da5cb5b146102b257806395d89b41146102e3578063a9059cbb146102f8578063d73dd6231461031c578063dd62ed3e14610340578063f2fde38b14610367575b600080fd5b3480156100eb57600080fd5b506100f4610388565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012e578181015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017557600080fd5b5061018d600160a060020a0360043516602435610416565b604080519115158252519081900360200190f35b3480156101ad57600080fd5b506101b661047c565b60408051918252519081900360200190f35b3480156101d457600080fd5b5061018d600160a060020a0360043581169060243516604435610482565b3480156101fe57600080fd5b506102076105f9565b6040805160ff9092168252519081900360200190f35b34801561022957600080fd5b50610247600160a060020a0360043581169060243516604435610602565b005b34801561025557600080fd5b50610247600160a060020a0360043516602435610735565b34801561027957600080fd5b5061018d600160a060020a03600435166024356107e5565b34801561029d57600080fd5b506101b6600160a060020a03600435166108d5565b3480156102be57600080fd5b506102c76108f0565b60408051600160a060020a039092168252519081900360200190f35b3480156102ef57600080fd5b506100f46108ff565b34801561030457600080fd5b5061018d600160a060020a036004351660243561095a565b34801561032857600080fd5b5061018d600160a060020a0360043516602435610a3b565b34801561034c57600080fd5b506101b6600160a060020a0360043581169060243516610ad4565b34801561037357600080fd5b50610247600160a060020a0360043516610aff565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561040e5780601f106103e35761010080835404028352916020019161040e565b820191906000526020600020905b8154815290600101906020018083116103f157829003601f168201915b505050505081565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b6000600160a060020a038316151561049957600080fd5b600160a060020a0384166000908152602081905260409020548211156104be57600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156104ee57600080fd5b600160a060020a038416600090815260208190526040902054610517908363ffffffff610b9416565b600160a060020a03808616600090815260208190526040808220939093559085168152205461054c908363ffffffff610ba616565b600160a060020a0380851660009081526020818152604080832094909455918716815260028252828120338252909152205461058e908363ffffffff610b9416565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60065460ff1681565b6003546000908190600160a060020a0316331461061e57600080fd5b600160a060020a038416151561063357600080fd5b6000853b1191508161064457600080fd5b50604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152602482018590529151869283169163a9059cbb9160448083019260209291908290030181600087803b1580156106b157600080fd5b505af11580156106c5573d6000803e3d6000fd5b505050506040513d60208110156106db57600080fd5b505115156106e557fe5b600354604080518581529051600160a060020a0380891693888216939116917fa1e4855d49b75f7254460c3e0a5572cde83f71d659655bcef5319969068d5a639181900360200190a45050505050565b600354600160a060020a0316331461074c57600080fd5b600160a060020a038216151561076157600080fd5b303181111561076f57600080fd5b604051600160a060020a0383169082156108fc029083906000818181858888f19350505050151561079c57fe5b600354604080518381529051600160a060020a038086169316917f94c0c9648f44e27ff77f68e457219cb803cf319b29a83403156a3ef21747101e919081900360200190a35050565b336000908152600260209081526040808320600160a060020a03861684529091528120548083111561083a57336000908152600260209081526040808320600160a060020a038816845290915281205561086f565b61084a818463ffffffff610b9416565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a031681565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561040e5780601f106103e35761010080835404028352916020019161040e565b6000600160a060020a038316151561097157600080fd5b3360009081526020819052604090205482111561098d57600080fd5b336000908152602081905260409020546109ad908363ffffffff610b9416565b3360009081526020819052604080822092909255600160a060020a038516815220546109df908363ffffffff610ba616565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610a6f908363ffffffff610ba616565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a03163314610b1657600080fd5b600160a060020a0381161515610b2b57600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610ba057fe5b50900390565b81810182811015610bb357fe5b929150505600a165627a7a723058203ad6ad55aadee502c53a711f8c0f2fdc334bbcb68c344a76aee5d1ac28681c630029000000000000000000000000025bf0b26099c10b3f90f3a040703064faf84ac200000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000052b7d2dcc80cd2e4000000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000094d6f6f6b546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024d54000000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000025bf0b26099c10b3f90f3a040703064faf84ac200000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000052b7d2dcc80cd2e4000000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000094d6f6f6b546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024d54000000000000000000000000000000000000000000000000000000000000"
}