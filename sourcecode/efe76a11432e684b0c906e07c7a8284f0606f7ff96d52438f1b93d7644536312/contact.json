{
  "address": "0xc17195bde49d70cefcf8a9f2ee1759ffc27bf0b1",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Groocoin",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-09\n*/\n\npragma solidity ^0.4.18;\n\ncontract Ownable {\n    address public owner;\n    \n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    \n    function Ownable() public {\n        owner = msg.sender;\n    }\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    function transferOwnership(address newOwner) onlyOwner public {\n        require(newOwner != address(0));\n        OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n}\n\ncontract Pausable is Ownable {\n    bool public paused = false;\n    \n    event Pause();\n    event Unpause();\n\n    modifier whenNotPaused() {\n        require(!paused);\n        _;\n    }\n    \n    modifier whenPaused() {\n        require(paused);\n        _;\n    }\n    \n    function pause() onlyOwner whenNotPaused public {\n        paused = true;\n        Pause();\n    }\n    \n    function unpause() onlyOwner whenPaused public {\n        paused = false;\n        Unpause();\n    }\n}\n\ncontract ERC20Basic {\n    uint256 public totalSupply;\n    function balanceOf(address who) public constant returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n    \n    mapping(address => uint256) balances;\n    \n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n        \n        // SafeMath.sub will throw if there is not enough balance.\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n    \n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n}\n\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public constant returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeERC20 {\n    function safeTransfer(ERC20Basic token, address to, uint256 value) internal {\n        assert(token.transfer(to, value));\n    }\n    \n    function safeTransferFrom(ERC20 token, address from, address to, uint256 value) internal {\n        assert(token.transferFrom(from, to, value));\n    }\n    \n    function safeApprove(ERC20 token, address spender, uint256 value) internal {\n        assert(token.approve(spender, value));\n    }\n}\n\n\ncontract StandardToken is ERC20, BasicToken {\n    mapping (address => mapping (address => uint256)) internal allowed;\n    \n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n        \n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\n        uint oldValue = allowed[msg.sender][_spender];\n        \n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        \n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n}\n  \ncontract LockableToken is StandardToken, Ownable {\n    mapping (address => uint256) internal lockaddress;\n    \n    event Lock(address indexed locker, uint256 time);\n    \n    function lockStatus(address _address) public constant returns(uint256) {\n        return lockaddress[_address];\n    }\n    \n    function lock(address _address, uint256 _time) onlyOwner public {\n        require(_time > now);\n        \n        lockaddress[_address] = _time;\n        Lock(_address, _time);\n    }\n    \n    modifier isNotLocked() {\n        require(lockaddress[msg.sender] < now || lockaddress[msg.sender] == 0);\n        _;\n    }\n}\n  \ncontract BurnableToken is StandardToken {\n    event Burn(address indexed burner, uint256 value);\n    \n    function burn(uint256 _value) public {\n        require(_value > 0);\n        require(_value <= balances[msg.sender]);\n        \n        address burner = msg.sender;\n        balances[burner] = balances[burner].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        Burn(burner, _value);\n    }\n}\n\ncontract PausableToken is StandardToken, LockableToken, Pausable {\n    modifier whenNotPausedOrOwner() {\n        require(msg.sender == owner || !paused);\n        _;\n    }\n    \n    function transfer(address _to, uint256 _value) public whenNotPausedOrOwner isNotLocked returns (bool) {\n        return super.transfer(_to, _value);\n    }\n    \n    function transferFrom(address _from, address _to, uint256 _value) public whenNotPausedOrOwner isNotLocked returns (bool) {\n        return super.transferFrom(_from, _to, _value);\n    }\n    \n    function approve(address _spender, uint256 _value) public whenNotPausedOrOwner isNotLocked returns (bool) {\n        return super.approve(_spender, _value);\n    }\n    \n    function increaseApproval(address _spender, uint _addedValue) public whenNotPausedOrOwner isNotLocked returns (bool success) {\n        return super.increaseApproval(_spender, _addedValue);\n    }\n    \n    function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPausedOrOwner isNotLocked returns (bool success) {\n        return super.decreaseApproval(_spender, _subtractedValue);\n    }\n}\n\ncontract Groocoin is PausableToken, BurnableToken {\n    string constant public name = \"Groocoin\";\n    string constant public symbol = \"GROO\";\n    uint256 constant public decimals = 18;\n    uint256 constant TOKEN_UNIT = 10 ** uint256(decimals);\n    uint256 constant INITIAL_SUPPLY = 30000000000 * TOKEN_UNIT;\n    \n    function Groocoin() public {\n        paused = true;\n        \n        totalSupply = INITIAL_SUPPLY;\n        Transfer(0x0, msg.sender, INITIAL_SUPPLY);\n        balances[msg.sender] = INITIAL_SUPPLY;\n    }\n}\n\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n    \n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n    \n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n    \n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"lockStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"locker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"Lock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60606040526005805460ff19169055341561001957600080fd5b60038054600160a060020a03191633600160a060020a03169081179091556005805460ff191660011790556b60ef6b1aba6f0723300000006000818155907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060405190815260200160405180910390a3600160a060020a03331660009081526001602052604090206b60ef6b1aba6f0723300000009055610ec7806100c06000396000f3006060604052600436106101065763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461010b578063095ea7b31461019557806315497d2c146101cb57806318160ddd146101fc57806323b872dd1461020f578063282d3fdf14610237578063313ce5671461025b5780633f4ba83a1461026e57806342966c68146102815780635c975abb1461029757806366188463146102aa57806370a08231146102cc5780638456cb59146102eb5780638da5cb5b146102fe57806395d89b411461032d578063a9059cbb14610340578063d73dd62314610362578063dd62ed3e14610384578063f2fde38b146103a9575b600080fd5b341561011657600080fd5b61011e6103c8565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561015a578082015183820152602001610142565b50505050905090810190601f1680156101875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a057600080fd5b6101b7600160a060020a03600435166024356103ff565b604051901515815260200160405180910390f35b34156101d657600080fd5b6101ea600160a060020a0360043516610486565b60405190815260200160405180910390f35b341561020757600080fd5b6101ea6104a1565b341561021a57600080fd5b6101b7600160a060020a03600435811690602435166044356104a7565b341561024257600080fd5b610259600160a060020a0360043516602435610530565b005b341561026657600080fd5b6101ea6105ab565b341561027957600080fd5b6102596105b0565b341561028c57600080fd5b610259600435610614565b34156102a257600080fd5b6101b76106dd565b34156102b557600080fd5b6101b7600160a060020a03600435166024356106e6565b34156102d757600080fd5b6101ea600160a060020a0360043516610766565b34156102f657600080fd5b610259610781565b341561030957600080fd5b6103116107e7565b604051600160a060020a03909116815260200160405180910390f35b341561033857600080fd5b61011e6107f6565b341561034b57600080fd5b6101b7600160a060020a036004351660243561082d565b341561036d57600080fd5b6101b7600160a060020a03600435166024356108ad565b341561038f57600080fd5b6101ea600160a060020a036004358116906024351661092d565b34156103b457600080fd5b610259600160a060020a0360043516610958565b60408051908101604052600881527f47726f6f636f696e000000000000000000000000000000000000000000000000602082015281565b60035460009033600160a060020a0390811691161480610422575060055460ff16155b151561042d57600080fd5b600160a060020a0333166000908152600460205260409020544290108061046a5750600160a060020a033316600090815260046020526040902054155b151561047557600080fd5b61047f83836109f3565b9392505050565b600160a060020a031660009081526004602052604090205490565b60005481565b60035460009033600160a060020a03908116911614806104ca575060055460ff16155b15156104d557600080fd5b600160a060020a033316600090815260046020526040902054429010806105125750600160a060020a033316600090815260046020526040902054155b151561051d57600080fd5b610528848484610a5f565b949350505050565b60035433600160a060020a0390811691161461054b57600080fd5b42811161055757600080fd5b600160a060020a038216600081815260046020526040908190208390557f625fed9875dada8643f2418b838ae0bc78d9a148a18eee4ee1979ff0f3f5d4279083905190815260200160405180910390a25050565b601281565b60035433600160a060020a039081169116146105cb57600080fd5b60055460ff1615156105dc57600080fd5b6005805460ff191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600080821161062257600080fd5b600160a060020a03331660009081526001602052604090205482111561064757600080fd5b5033600160a060020a03811660009081526001602052604090205461066c9083610be1565b600160a060020a03821660009081526001602052604081209190915554610699908363ffffffff610be116565b600055600160a060020a0381167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58360405190815260200160405180910390a25050565b60055460ff1681565b60035460009033600160a060020a0390811691161480610709575060055460ff16155b151561071457600080fd5b600160a060020a033316600090815260046020526040902054429010806107515750600160a060020a033316600090815260046020526040902054155b151561075c57600080fd5b61047f8383610bf3565b600160a060020a031660009081526001602052604090205490565b60035433600160a060020a0390811691161461079c57600080fd5b60055460ff16156107ac57600080fd5b6005805460ff191660011790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600354600160a060020a031681565b60408051908101604052600481527f47524f4f00000000000000000000000000000000000000000000000000000000602082015281565b60035460009033600160a060020a0390811691161480610850575060055460ff16155b151561085b57600080fd5b600160a060020a033316600090815260046020526040902054429010806108985750600160a060020a033316600090815260046020526040902054155b15156108a357600080fd5b61047f8383610ced565b60035460009033600160a060020a03908116911614806108d0575060055460ff16155b15156108db57600080fd5b600160a060020a033316600090815260046020526040902054429010806109185750600160a060020a033316600090815260046020526040902054155b151561092357600080fd5b61047f8383610de8565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a0390811691161461097357600080fd5b600160a060020a038116151561098857600080fd5b600354600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b6000600160a060020a0383161515610a7657600080fd5b600160a060020a038416600090815260016020526040902054821115610a9b57600080fd5b600160a060020a0380851660009081526002602090815260408083203390941683529290522054821115610ace57600080fd5b600160a060020a038416600090815260016020526040902054610af7908363ffffffff610be116565b600160a060020a038086166000908152600160205260408082209390935590851681522054610b2c908363ffffffff610e8c16565b600160a060020a03808516600090815260016020908152604080832094909455878316825260028152838220339093168252919091522054610b74908363ffffffff610be116565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b600082821115610bed57fe5b50900390565b600160a060020a03338116600090815260026020908152604080832093861683529290529081205480831115610c5057600160a060020a033381166000908152600260209081526040808320938816835292905290812055610c87565b610c60818463ffffffff610be116565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b6000600160a060020a0383161515610d0457600080fd5b600160a060020a033316600090815260016020526040902054821115610d2957600080fd5b600160a060020a033316600090815260016020526040902054610d52908363ffffffff610be116565b600160a060020a033381166000908152600160205260408082209390935590851681522054610d87908363ffffffff610e8c16565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610e20908363ffffffff610e8c16565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b60008282018381101561047f57fe00a165627a7a72305820ab34a04f93f9afad4ea29dcbdd0f075a19eed495fb50207f9ef21af031c6ee470029"
}