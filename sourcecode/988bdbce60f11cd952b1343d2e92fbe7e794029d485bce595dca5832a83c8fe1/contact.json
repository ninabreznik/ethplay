{
  "address": "0x98f483cf521b5761172d73ef6081fb940fb2e115",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BitcoinBrand",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-24\n*/\n\npragma solidity ^0.4.19;\n\ncontract BaseToken {\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 public totalSupply;\n\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    function _transfer(address _from, address _to, uint _value) internal {\n        require(_to != 0x0);\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value > balanceOf[_to]);\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n        Transfer(_from, _to, _value);\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n}\n\ncontract AirdropToken is BaseToken {\n    uint256 public airAmount;\n    uint256 public airBegintime;\n    uint256 public airEndtime;\n    address public airSender;\n    uint32 public airLimitCount;\n\n    mapping (address => uint32) public airCountOf;\n\n    event Airdrop(address indexed from, uint32 indexed count, uint256 tokenValue);\n\n    function airdrop() public payable {\n        require(now >= airBegintime && now <= airEndtime);\n        require(msg.value == 0);\n        if (airLimitCount > 0 && airCountOf[msg.sender] >= airLimitCount) {\n            revert();\n        }\n        _transfer(airSender, msg.sender, airAmount);\n        airCountOf[msg.sender] += 1;\n        Airdrop(msg.sender, airCountOf[msg.sender], airAmount);\n    }\n}\n\ncontract ICOToken is BaseToken {\n    // 1 ether = icoRatio token\n    uint256 public icoRatio;\n    uint256 public icoBegintime;\n    uint256 public icoEndtime;\n    address public icoSender;\n    address public icoHolder;\n\n    event ICO(address indexed from, uint256 indexed value, uint256 tokenValue);\n    event Withdraw(address indexed from, address indexed holder, uint256 value);\n\n    function ico() public payable {\n        require(now >= icoBegintime && now <= icoEndtime);\n        uint256 tokenValue = (msg.value * icoRatio * 10 ** uint256(decimals)) / (1 ether / 1 wei);\n        if (tokenValue == 0 || balanceOf[icoSender] < tokenValue) {\n            revert();\n        }\n        _transfer(icoSender, msg.sender, tokenValue);\n        ICO(msg.sender, msg.value, tokenValue);\n    }\n\n    function withdraw() public {\n        uint256 balance = this.balance;\n        icoHolder.transfer(balance);\n        Withdraw(msg.sender, icoHolder, balance);\n    }\n}\n\ncontract BitcoinBrand is BaseToken, AirdropToken, ICOToken {\n    function BitcoinBrand() public {\n        totalSupply = 57000000000000000000000000000;\n        name = 'BitcoinBrand';\n        symbol = 'BTCB';\n        decimals = 18;\n        balanceOf[0x5678f46812a280829F7cFcE9F0b0D38994AFc7f0] = totalSupply;\n        Transfer(address(0), 0x5678f46812a280829F7cFcE9F0b0D38994AFc7f0, totalSupply);\n\n        airAmount = 1000000000000000000;\n        airBegintime = 1529956800;\n        airEndtime = 1529957100;\n        airSender = 0xc4e570D2644CCe3a71DC4345b13EE5FD3aF720d1;\n        airLimitCount = 1;\n\n        icoRatio = 20000000;\n        icoBegintime = 1529971200;\n        icoEndtime = 1535327940;\n        icoSender = 0xf46D665966674a8793aEd3109cCC65B2f638cF09;\n        icoHolder = 0xf46D665966674a8793aEd3109cCC65B2f638cF09;\n    }\n\n    function() public payable {\n        if (msg.value == 0) {\n            airdrop();\n        } else {\n            ico();\n        }\n    }\n}",
  "bytecode": "60806040523480156200001157600080fd5b506bb82d4b7f956c8d8fa80000006003819055506040805190810160405280600c81526020017f426974636f696e4272616e640000000000000000000000000000000000000000815250600090805190602001906200007292919062000320565b506040805190810160405280600481526020017f425443420000000000000000000000000000000000000000000000000000000081525060019080519060200190620000c092919062000320565b506012600260006101000a81548160ff021916908360ff16021790555060035460046000735678f46812a280829f7cfce9f0b0d38994afc7f073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550735678f46812a280829f7cfce9f0b0d38994afc7f073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3670de0b6b3a7640000600681905550635b3149c0600781905550635b314aec60088190555073c4e570d2644cce3a71dc4345b13ee5fd3af720d1600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600960146101000a81548163ffffffff021916908363ffffffff1602179055506301312d00600b81905550635b318200600c81905550635b833ec4600d8190555073f46d665966674a8793aed3109ccc65b2f638cf09600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073f46d665966674a8793aed3109ccc65b2f638cf09600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620003cf565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036357805160ff191683800117855562000394565b8280016001018555821562000394579182015b828111156200039357825182559160200191906001019062000376565b5b509050620003a39190620003a7565b5090565b620003cc91905b80821115620003c8576000816000905550600101620003ae565b5090565b90565b61140380620003df6000396000f300608060405260043610610133576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461015457806307cc6051146101e4578063095ea7b31461020f57806318160ddd1461027457806323b872dd1461029f578063313ce567146103245780633884d635146103555780633ccfd60b1461035f5780635d4522011461037657806370a08231146103805780637d720296146103d757806395d89b411461042e578063a2ebb20b146104be578063a3fe1ade14610515578063a9059cbb14610578578063b0f85a10146105dd578063b3b8c62014610608578063d211fe8614610633578063dd62ed3e1461065e578063de28fc1d146106d5578063e6136d841461072c578063e67ad25414610757578063e779a8cf14610782575b6000341415610149576101446107b9565b610152565b6101516109d1565b5b005b34801561016057600080fd5b50610169610b1b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101a957808201518184015260208101905061018e565b50505050905090810190601f1680156101d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f057600080fd5b506101f9610bb9565b6040518082815260200191505060405180910390f35b34801561021b57600080fd5b5061025a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bbf565b604051808215151515815260200191505060405180910390f35b34801561028057600080fd5b50610289610cb1565b6040518082815260200191505060405180910390f35b3480156102ab57600080fd5b5061030a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cb7565b604051808215151515815260200191505060405180910390f35b34801561033057600080fd5b50610339610de4565b604051808260ff1660ff16815260200191505060405180910390f35b61035d6107b9565b005b34801561036b57600080fd5b50610374610df7565b005b61037e6109d1565b005b34801561038c57600080fd5b506103c1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f06565b6040518082815260200191505060405180910390f35b3480156103e357600080fd5b506103ec610f1e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043a57600080fd5b50610443610f44565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610483578082015181840152602081019050610468565b50505050905090810190601f1680156104b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104ca57600080fd5b506104d3610fe2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052157600080fd5b50610556600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611008565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561058457600080fd5b506105c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061102b565b604051808215151515815260200191505060405180910390f35b3480156105e957600080fd5b506105f2611042565b6040518082815260200191505060405180910390f35b34801561061457600080fd5b5061061d611048565b6040518082815260200191505060405180910390f35b34801561063f57600080fd5b5061064861104e565b6040518082815260200191505060405180910390f35b34801561066a57600080fd5b506106bf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611054565b6040518082815260200191505060405180910390f35b3480156106e157600080fd5b506106ea611079565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561073857600080fd5b5061074161109f565b6040518082815260200191505060405180910390f35b34801561076357600080fd5b5061076c6110a5565b6040518082815260200191505060405180910390f35b34801561078e57600080fd5b506107976110ab565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b60075442101580156107cd57506008544211155b15156107d857600080fd5b6000341415156107e757600080fd5b6000600960149054906101000a900463ffffffff1663ffffffff1611801561087c5750600960149054906101000a900463ffffffff1663ffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1610155b1561088657600080fd5b6108b5600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336006546110c1565b6001600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff160217905550600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff163373ffffffffffffffffffffffffffffffffffffffff167fcce6ff7d594e7067a58df51c8588740b7c8b42537da7262add9823085de82e486006546040518082815260200191505060405180910390a3565b6000600c5442101580156109e75750600d544211155b15156109f257600080fd5b670de0b6b3a7640000600260009054906101000a900460ff1660ff16600a0a600b54340202811515610a2057fe5b0490506000811480610a9257508060046000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054105b15610a9c57600080fd5b610ac9600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633836110c1565b343373ffffffffffffffffffffffffffffffffffffffff167f4a987bc3d04b32db133ad9a3c7c0d8ecc441eb56f45a62b92c38384c095e7ac0836040518082815260200191505060405180910390a350565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bb15780601f10610b8657610100808354040283529160200191610bb1565b820191906000526020600020905b815481529060010190602001808311610b9457829003601f168201915b505050505081565b60065481565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60035481565b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610d4457600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610dd98484846110c1565b600190509392505050565b600260009054906101000a900460ff1681565b60003073ffffffffffffffffffffffffffffffffffffffff16319050600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e7b573d6000803e3d6000fd5b50600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb836040518082815260200191505060405180910390a350565b60046020528060005260406000206000915090505481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fda5780601f10610faf57610100808354040283529160200191610fda565b820191906000526020600020905b815481529060010190602001808311610fbd57829003601f168201915b505050505081565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915054906101000a900463ffffffff1681565b60006110383384846110c1565b6001905092915050565b60085481565b600b5481565b600d5481565b6005602052816000526040600020602052806000526040600020600091509150505481565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b60075481565b600960149054906101000a900463ffffffff1681565b6000808373ffffffffffffffffffffffffffffffffffffffff16141515156110e857600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561113657600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156111c457600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401905081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540114151561136c57fe5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3505050505600a165627a7a723058203ac96c0aca5b9759e34fdb3bcb957c2fc80f397ac5c15d5f29959aa6ea4f4aba0029"
}