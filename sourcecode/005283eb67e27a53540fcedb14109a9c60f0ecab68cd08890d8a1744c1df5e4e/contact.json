{
  "address": "0x2f0b4c0d841cd320dbae23aac7cc8e22f31b8b9e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Crowdsale",
  "compilerVersion": "v0.4.16+commit.d7661dd9",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-06-06\n*/\n\npragma solidity ^0.4.16;\n\ninterface token {\n    function transfer(address receiver, uint amount);\n}\n\ncontract Crowdsale {\n    address public beneficiary;  // 募资成功后的收款方\n    uint public fundingGoal;   // 募资额度\n    uint public amountRaised;   // 参与数量\n    uint public deadline;      // 募资截止期\n\n    uint public price;    //  token 与以太坊的汇率 , token卖多少钱\n    token public tokenReward;   // 要卖的token\n\n    mapping(address => uint256) public balanceOf;\n\n    bool fundingGoalReached = false;  // 众筹是否达到目标\n    bool crowdsaleClosed = false;   //  众筹是否结束\n\n    /**\n    * 事件可以用来跟踪信息\n    **/\n    event GoalReached(address recipient, uint totalAmountRaised);\n    event FundTransfer(address backer, uint amount, bool isContribution);\n\n    /**\n     * 构造函数, 设置相关属性\n     */\n    function Crowdsale(\n        address ifSuccessfulSendTo,\n        uint fundingGoalInEthers,\n        uint durationInMinutes,\n        uint finneyCostOfEachToken,\n        address addressOfTokenUsedAsReward) {\n            beneficiary = ifSuccessfulSendTo;\n            fundingGoal = fundingGoalInEthers * 1 ether;\n            deadline = now + durationInMinutes * 1 minutes;\n            price = finneyCostOfEachToken * 1 szabo;\n            tokenReward = token(addressOfTokenUsedAsReward);   // 传入已发布的 token 合约的地址来创建实例\n    }\n\n    /**\n     * 无函数名的Fallback函数，\n     * 在向合约转账时，这个函数会被调用\n     */\n    function () payable {\n        require(!crowdsaleClosed);\n        uint amount = msg.value;\n        balanceOf[msg.sender] += amount;\n        amountRaised += amount;\n        tokenReward.transfer(msg.sender, amount /price*1000000000000000);\n        FundTransfer(msg.sender, amount, true);\n    }\n\n    /**\n    *  定义函数修改器modifier（作用和Python的装饰器很相似）\n    * 用于在函数执行前检查某种前置条件（判断通过之后才会继续执行该方法）\n    * _ 表示继续执行之后的代码\n    **/\n    modifier afterDeadline() { if (now >= deadline) _; }\n\n    /**\n     * 判断众筹是否完成融资目标， 这个方法使用了afterDeadline函数修改器\n     *\n     */\n    function checkGoalReached() afterDeadline {\n        if (amountRaised >= fundingGoal) {\n            fundingGoalReached = true;\n            GoalReached(beneficiary, amountRaised);\n        }\n        crowdsaleClosed = true;\n    }\n\n\n    /**\n     * 完成融资目标时，融资款发送到收款方\n     * 未完成融资目标时，执行退款\n     *\n     */\n    function safeWithdrawal() afterDeadline {\n        if (!fundingGoalReached) {\n            uint amount = balanceOf[msg.sender];\n            balanceOf[msg.sender] = 0;\n            if (amount > 0) {\n                if (msg.sender.send(amount)) {\n                    FundTransfer(msg.sender, amount, false);\n                } else {\n                    balanceOf[msg.sender] = amount;\n                }\n            }\n        }\n\n        if (fundingGoalReached && beneficiary == msg.sender) {\n            if (beneficiary.send(amountRaised)) {\n                FundTransfer(beneficiary, amountRaised, false);\n            } else {\n                //If we fail to send the funds to beneficiary, unlock funders balance\n                fundingGoalReached = false;\n            }\n        }\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[],\"name\":\"checkGoalReached\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ifSuccessfulSendTo\",\"type\":\"address\"},{\"name\":\"fundingGoalInEthers\",\"type\":\"uint256\"},{\"name\":\"durationInMinutes\",\"type\":\"uint256\"},{\"name\":\"finneyCostOfEachToken\",\"type\":\"uint256\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalAmountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]",
  "bytecode": "60606040526000600760006101000a81548160ff0219169083151502179055506000600760016101000a81548160ff021916908315150217905550341561004557600080fd5b60405160a080610a54833981016040528080519060200190919080519060200190919080519060200190919080519060200190919080519060200190919050505b846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400008402600181905550603c8302420160038190555064e8d4a51000820260048190555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505050505b61090c806101486000396000f30060606040523615610097576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301cb3b201461028057806329dcb0cf1461029557806338af3eed146102be5780636e66f6e91461031357806370a08231146103685780637a3a0e84146103b55780637b3e5e7b146103de578063a035b1fe14610407578063fd6b7ef814610430575b5b6000600760019054906101000a900460ff161515156100b657600080fd5b34905080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555080600260008282540192505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3366038d7ea4c680006004548581151561016a57fe5b04026040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15156101f057600080fd5b6102c65a03f1151561020157600080fd5b5050507fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf633826001604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a15b50005b341561028b57600080fd5b610293610445565b005b34156102a057600080fd5b6102a8610527565b6040518082815260200191505060405180910390f35b34156102c957600080fd5b6102d161052d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561031e57600080fd5b610326610552565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561037357600080fd5b61039f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610578565b6040518082815260200191505060405180910390f35b34156103c057600080fd5b6103c8610590565b6040518082815260200191505060405180910390f35b34156103e957600080fd5b6103f1610596565b6040518082815260200191505060405180910390f35b341561041257600080fd5b61041a61059c565b6040518082815260200191505060405180910390f35b341561043b57600080fd5b6104436105a2565b005b6003544210151561052457600154600254101515610507576001600760006101000a81548160ff0219169083151502179055507fec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c856000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600254604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b6001600760016101000a81548160ff0219169083151502179055505b5b5b565b60035481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090505481565b60015481565b60025481565b60045481565b6000600354421015156108dc57600760009054906101000a900460ff16151561075357600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000811115610752573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501561070c577fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf633826000604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a1610751565b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b5b600760009054906101000a900460ff1680156107bb57503373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156108da576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f19350505050156108bd577fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf66000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002546000604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a16108d9565b6000600760006101000a81548160ff0219169083151502179055505b5b5b5b5b505600a165627a7a72305820d677a52b4da8073ab06951482ceb482d09d49aeee477e98b233fe018796f77b50029000000000000000000000000c2799904ce0df07092d41a8f55caea7c45ea2b3d0000000000000000000000000000000000000000000000000000000000000514000000000000000000000000000000000000000000000000000000000000ea600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000e95f77245335ec58f9dd1575540e830c4c1a75fc",
  "constructorArguments": "000000000000000000000000c2799904ce0df07092d41a8f55caea7c45ea2b3d0000000000000000000000000000000000000000000000000000000000000514000000000000000000000000000000000000000000000000000000000000ea600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000e95f77245335ec58f9dd1575540e830c4c1a75fc"
}