{
  "address": "0x338ffc2cafc121bc83bf7a610ccc136ba7247b64",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SaleMarket",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-25\n*/\n\npragma solidity ^0.4.23;\n\n/// @title BlockchainCuties: Collectible and breedable cuties on the Ethereum blockchain.\n/// @author https://BlockChainArchitect.io\n/// @dev This is the BlockchainCuties configuration. It can be changed redeploying another version.\ninterface ConfigInterface\n{\n    function isConfig() external pure returns (bool);\n\n    function getCooldownIndexFromGeneration(uint16 _generation, uint40 _cutieId) external view returns (uint16);\n    function getCooldownEndTimeFromIndex(uint16 _cooldownIndex, uint40 _cutieId) external view returns (uint40);\n    function getCooldownIndexFromGeneration(uint16 _generation) external view returns (uint16);\n    function getCooldownEndTimeFromIndex(uint16 _cooldownIndex) external view returns (uint40);\n\n    function getCooldownIndexCount() external view returns (uint256);\n\n    function getBabyGenFromId(uint40 _momId, uint40 _dadId) external view returns (uint16);\n    function getBabyGen(uint16 _momGen, uint16 _dadGen) external pure returns (uint16);\n\n    function getTutorialBabyGen(uint16 _dadGen) external pure returns (uint16);\n\n    function getBreedingFee(uint40 _momId, uint40 _dadId) external view returns (uint256);\n}\n\n\ncontract CutieCoreInterface\n{\n    function isCutieCore() pure public returns (bool);\n\n    ConfigInterface public config;\n\n    function transferFrom(address _from, address _to, uint256 _cutieId) external;\n    function transfer(address _to, uint256 _cutieId) external;\n\n    function ownerOf(uint256 _cutieId)\n        external\n        view\n        returns (address owner);\n\n    function getCutie(uint40 _id)\n        external\n        view\n        returns (\n        uint256 genes,\n        uint40 birthTime,\n        uint40 cooldownEndTime,\n        uint40 momId,\n        uint40 dadId,\n        uint16 cooldownIndex,\n        uint16 generation\n    );\n\n    function getGenes(uint40 _id)\n        public\n        view\n        returns (\n        uint256 genes\n    );\n\n\n    function getCooldownEndTime(uint40 _id)\n        public\n        view\n        returns (\n        uint40 cooldownEndTime\n    );\n\n    function getCooldownIndex(uint40 _id)\n        public\n        view\n        returns (\n        uint16 cooldownIndex\n    );\n\n\n    function getGeneration(uint40 _id)\n        public\n        view\n        returns (\n        uint16 generation\n    );\n\n    function getOptional(uint40 _id)\n        public\n        view\n        returns (\n        uint64 optional\n    );\n\n\n    function changeGenes(\n        uint40 _cutieId,\n        uint256 _genes)\n        public;\n\n    function changeCooldownEndTime(\n        uint40 _cutieId,\n        uint40 _cooldownEndTime)\n        public;\n\n    function changeCooldownIndex(\n        uint40 _cutieId,\n        uint16 _cooldownIndex)\n        public;\n\n    function changeOptional(\n        uint40 _cutieId,\n        uint64 _optional)\n        public;\n\n    function changeGeneration(\n        uint40 _cutieId,\n        uint16 _generation)\n        public;\n\n    function createSaleAuction(\n        uint40 _cutieId,\n        uint128 _startPrice,\n        uint128 _endPrice,\n        uint40 _duration\n    )\n    public;\n\n    function getApproved(uint256 _tokenId) external returns (address);\n    function totalSupply() view external returns (uint256);\n    function createPromoCutie(uint256 _genes, address _owner) external;\n    function checkOwnerAndApprove(address _claimant, uint40 _cutieId, address _pluginsContract) external view;\n    function breedWith(uint40 _momId, uint40 _dadId) public payable returns (uint40);\n    function getBreedingFee(uint40 _momId, uint40 _dadId) public view returns (uint256);\n}\n\npragma solidity ^0.4.23;\n\n\npragma solidity ^0.4.23;\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\npragma solidity ^0.4.23;\n\n/// @title Auction Market for Blockchain Cuties.\n/// @author https://BlockChainArchitect.io\ncontract MarketInterface \n{\n    function withdrawEthFromBalance() external;\n\n    function createAuction(uint40 _cutieId, uint128 _startPrice, uint128 _endPrice, uint40 _duration, address _seller) public payable;\n    function createAuctionWithTokens(uint40 _cutieId, uint128 _startPrice, uint128 _endPrice, uint40 _duration, address _seller, address[] allowedTokens) public payable;\n\n    function bid(uint40 _cutieId) public payable;\n\n    function cancelActiveAuctionWhenPaused(uint40 _cutieId) public;\n\n\tfunction getAuctionInfo(uint40 _cutieId)\n        public\n        view\n        returns\n    (\n        address seller,\n        uint128 startPrice,\n        uint128 endPrice,\n        uint40 duration,\n        uint40 startedAt,\n        uint128 featuringFee,\n        address[] allowedTokens\n    );\n}\n\npragma solidity ^0.4.23;\n\ninterface Gen0CallbackInterface\n{\n    function onGen0Created(uint40 _cutieId) external;\n}\n\npragma solidity ^0.4.23;\n\n// ----------------------------------------------------------------------------\n// Contract function to receive approval and execute function in one call\n//\n// Borrowed from MiniMeToken\n\ninterface TokenRecipientInterface\n{\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external;\n}\n\npragma solidity ^0.4.23;\n\n// https://github.com/ethereum/EIPs/issues/223\ninterface TokenFallback\n{\n    function tokenFallback(address _from, uint _value, bytes _data) external;\n}\n\npragma solidity ^0.4.23;\n\npragma solidity ^0.4.23;\n\n// ----------------------------------------------------------------------------\ncontract ERC20 {\n\n    // ERC Token Standard #223 Interface\n    // https://github.com/ethereum/EIPs/issues/223\n\n    string public symbol;\n    string public  name;\n    uint8 public decimals;\n\n    function transfer(address _to, uint _value, bytes _data) external returns (bool success);\n\n    // approveAndCall\n    function approveAndCall(address spender, uint tokens, bytes data) external returns (bool success);\n\n    // ERC Token Standard #20 Interface\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n\n\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\n    // bulk operations\n    function transferBulk(address[] to, uint[] tokens) public;\n    function approveBulk(address[] spender, uint[] tokens) public;\n}\n\n\ninterface TokenRegistryInterface\n{\n    function getPriceInToken(ERC20 tokenContract, uint128 priceWei) external view returns (uint128);\n    function areAllTokensAllowed(address[] tokens) external view returns (bool);\n    function isTokenInList(address[] allowedTokens, address currentToken) external pure returns (bool);\n    function getDefaultTokens() external view returns (address[]);\n    function getDefaultCreatorTokens() external view returns (address[]);\n    function onTokensReceived(ERC20 tokenContract, uint tokenCount) external;\n    function withdrawEthFromBalance() external;\n    function canConvertToEth(ERC20 tokenContract) external view returns (bool);\n    function convertTokensToEth(ERC20 tokenContract, address seller, uint sellerValue, uint fee) external;\n}\n\n\n/// @title Auction Market for Blockchain Cuties.\n/// @author https://BlockChainArchitect.io\ncontract Market is MarketInterface, Pausable, TokenRecipientInterface, TokenFallback\n{\n    // Shows the auction on an Cutie Token\n    struct Auction {\n        // Price (in wei or tokens) at the beginning of auction\n        uint128 startPrice;\n        // Price (in wei or tokens) at the end of auction\n        uint128 endPrice;\n        // Current owner of Token\n        address seller;\n        // Auction duration in seconds\n        uint40 duration;\n        // Time when auction started\n        // NOTE: 0 if this auction has been concluded\n        uint40 startedAt;\n        // Featuring fee (in wei, optional)\n        uint128 featuringFee;\n        // list of erc20 tokens addresses, that is allowed to bid with\n        address[] allowedTokens;\n    }\n\n    // Reference to contract that tracks ownership\n    CutieCoreInterface public coreContract;\n    Gen0CallbackInterface public gen0Callback;\n\n    // Cut owner takes on each auction, in basis points - 1/100 of a per cent.\n    // Values 0-10,000 map to 0%-100%\n    uint16 public ownerFee;\n\n    // Map from token ID to their corresponding auction.\n    mapping (uint40 => Auction) public cutieIdToAuction;\n    TokenRegistryInterface public tokenRegistry;\n\n\n    address operatorAddress;\n\n    event AuctionCreatedWithTokens(uint40 indexed cutieId, uint128 startPrice, uint128 endPrice, uint40 duration, uint128 fee, address[] allowedTokens);\n    event AuctionSuccessful(uint40 indexed cutieId, uint128 totalPriceWei, address indexed winner);\n    event AuctionSuccessfulForToken(uint40 indexed cutieId, uint128 totalPriceWei, address indexed winner, uint128 priceInTokens, address indexed token);\n    event AuctionCancelled(uint40 indexed cutieId);\n\n    modifier onlyOperator() {\n        require(msg.sender == operatorAddress || msg.sender == owner);\n        _;\n    }\n\n    function setOperator(address _newOperator) public onlyOwner {\n        require(_newOperator != address(0));\n\n        operatorAddress = _newOperator;\n    }\n\n    /// @dev enable sending fund to this contract\n    function() external payable {}\n\n    modifier canBeStoredIn128Bits(uint256 _value)\n    {\n        require(_value <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\n        _;\n    }\n\n    // @dev Adds to the list of open auctions and fires the\n    //  AuctionCreated event.\n    // @param _cutieId The token ID is to be put on auction.\n    // @param _auction To add an auction.\n    // @param _fee Amount of money to feature auction\n    function _addAuction(uint40 _cutieId, Auction _auction) internal\n    {\n        if (_auction.seller == address(coreContract))\n        {\n            if (address(gen0Callback) != 0x0)\n            {\n                gen0Callback.onGen0Created(_cutieId);\n            }\n            if (_auction.duration == 0)\n            {\n                _transfer(operatorAddress, _cutieId);\n                return;\n            }\n        }\n        // Require that all auctions have a duration of\n        // at least one minute. (Keeps our math from getting hairy!)\n        require(_auction.duration >= 1 minutes);\n\n        cutieIdToAuction[_cutieId] = _auction;\n        \n        emit AuctionCreatedWithTokens(\n            _cutieId,\n            _auction.startPrice,\n            _auction.endPrice,\n            _auction.duration,\n            _auction.featuringFee,\n            _auction.allowedTokens\n        );\n    }\n\n    // @dev Returns true if the token is claimed by the claimant.\n    // @param _claimant - Address claiming to own the token.\n    function _isOwner(address _claimant, uint256 _cutieId) internal view returns (bool)\n    {\n        return (coreContract.ownerOf(_cutieId) == _claimant);\n    }\n\n    // @dev Transfers the token owned by this contract to another address.\n    // Returns true when the transfer succeeds.\n    // @param _receiver - Address to transfer token to.\n    // @param _cutieId - Token ID to transfer.\n    function _transfer(address _receiver, uint40 _cutieId) internal\n    {\n        // it will throw if transfer fails\n        coreContract.transfer(_receiver, _cutieId);\n    }\n\n    // @dev Escrows the token and assigns ownership to this contract.\n    // Throws if the escrow fails.\n    // @param _owner - Current owner address of token to escrow.\n    // @param _cutieId - Token ID the approval of which is to be verified.\n    function _escrow(address _owner, uint40 _cutieId) internal\n    {\n        // it will throw if transfer fails\n        coreContract.transferFrom(_owner, this, _cutieId);\n    }\n\n    // @dev just cancel auction.\n    function _cancelActiveAuction(uint40 _cutieId, address _seller) internal\n    {\n        _removeAuction(_cutieId);\n        _transfer(_seller, _cutieId);\n        emit AuctionCancelled(_cutieId);\n    }\n\n    // @dev Calculates the price and transfers winnings.\n    // Does not transfer token ownership.\n    function _bid(uint40 _cutieId, uint128 _bidAmount)\n        internal\n        returns (uint128)\n    {\n        // Get a reference to the auction struct\n        Auction storage auction = cutieIdToAuction[_cutieId];\n\n        require(_isOnAuction(auction));\n\n        // Check that bid > current price\n        uint128 price = _currentPrice(auction);\n        require(_bidAmount >= price);\n\n        // Provide a reference to the seller before the auction struct is deleted.\n        address seller = auction.seller;\n\n        _removeAuction(_cutieId);\n\n        // Transfer proceeds to seller (if there are any!)\n        if (price > 0 && seller != address(coreContract)) {\n            uint128 fee = _computeFee(price);\n            uint128 sellerValue = price - fee;\n\n            seller.transfer(sellerValue);\n        }\n\n        emit AuctionSuccessful(_cutieId, price, msg.sender);\n\n        return price;\n    }\n\n    // @dev Removes from the list of open auctions.\n    // @param _cutieId - ID of token on auction.\n    function _removeAuction(uint40 _cutieId) internal\n    {\n        delete cutieIdToAuction[_cutieId];\n    }\n\n    // @dev Returns true if the token is on auction.\n    // @param _auction - Auction to check.\n    function _isOnAuction(Auction storage _auction) internal view returns (bool)\n    {\n        return (_auction.startedAt > 0);\n    }\n\n    // @dev calculate current price of auction. \n    //  When testing, make this function public and turn on\n    //  `Current price calculation` test suite.\n    function _computeCurrentPrice(\n        uint128 _startPrice,\n        uint128 _endPrice,\n        uint40 _duration,\n        uint40 _secondsPassed\n    )\n        internal\n        pure\n        returns (uint128)\n    {\n        if (_secondsPassed >= _duration) {\n            return _endPrice;\n        } else {\n            int256 totalPriceChange = int256(_endPrice) - int256(_startPrice);\n            int256 currentPriceChange = totalPriceChange * int256(_secondsPassed) / int256(_duration);\n            uint128 currentPrice = _startPrice + uint128(currentPriceChange);\n            \n            return currentPrice;\n        }\n    }\n    // @dev return current price of token.\n    function _currentPrice(Auction storage _auction)\n        internal\n        view\n        returns (uint128)\n    {\n        uint40 secondsPassed = 0;\n\n        uint40 timeNow = uint40(now);\n        if (timeNow > _auction.startedAt) {\n            secondsPassed = timeNow - _auction.startedAt;\n        }\n\n        return _computeCurrentPrice(\n            _auction.startPrice,\n            _auction.endPrice,\n            _auction.duration,\n            secondsPassed\n        );\n    }\n\n    // @dev Calculates owner's cut of a sale.\n    // @param _price - Sale price of cutie.\n    function _computeFee(uint128 _price) internal view returns (uint128)\n    {\n        return _price * ownerFee / 10000;\n    }\n\n    // @dev Remove all Ether from the contract with the owner's cuts. Also, remove any Ether sent directly to the contract address.\n    //  Transfers to the token contract, but can be called by\n    //  the owner or the token contract.\n    function withdrawEthFromBalance() external\n    {\n        address coreAddress = address(coreContract);\n\n        require(\n            msg.sender == owner ||\n            msg.sender == coreAddress\n        );\n\n        tokenRegistry.withdrawEthFromBalance();\n        coreAddress.transfer(address(this).balance);\n    }\n\n    // @dev create and start a new auction\n    // @param _cutieId - ID of cutie to auction, sender must be owner.\n    // @param _startPrice - Price of item (in wei) at the beginning of auction.\n    // @param _endPrice - Price of item (in wei) at the end of auction.\n    // @param _duration - Length of auction (in seconds). Most significant bit od duration is to allow sell for all tokens.\n    // @param _seller - Seller\n    function createAuction(uint40 _cutieId, uint128 _startPrice, uint128 _endPrice, uint40 _duration, address _seller)\n        public whenNotPaused payable\n    {\n        require(_isOwner(_seller, _cutieId));\n        _escrow(_seller, _cutieId);\n\n        bool allowTokens = _duration < 0x8000000000; // first bit of duration is boolean flag (1 to disable tokens)\n        _duration = _duration % 0x8000000000; // clear flag from duration\n\n        Auction memory auction = Auction(\n            _startPrice,\n            _endPrice,\n            _seller,\n            _duration,\n            uint40(now),\n            uint128(msg.value),\n            allowTokens ?\n                (_seller == address(coreContract) ? tokenRegistry.getDefaultCreatorTokens() : tokenRegistry.getDefaultTokens())\n                : new address[](0)\n        );\n        _addAuction(_cutieId, auction);\n    }\n\n    // @dev create and start a new auction\n    // @param _cutieId - ID of cutie to auction, sender must be owner.\n    // @param _startPrice - Price of item (in wei) at the beginning of auction.\n    // @param _endPrice - Price of item (in wei) at the end of auction.\n    // @param _duration - Length of auction (in seconds).\n    // @param _seller - Seller\n    // @param _allowedTokens - list of tokens addresses, that can be used as currency to buy cutie.\n    function createAuctionWithTokens(\n        uint40 _cutieId,\n        uint128 _startPrice,\n        uint128 _endPrice,\n        uint40 _duration,\n        address _seller,\n        address[] _allowedTokens) public payable\n    {\n        require(tokenRegistry.areAllTokensAllowed(_allowedTokens));\n        require(_isOwner(_seller, _cutieId));\n        _escrow(_seller, _cutieId);\n\n        Auction memory auction = Auction(\n            _startPrice,\n            _endPrice,\n            _seller,\n            _duration,\n            uint40(now),\n            uint128(msg.value),\n            _allowedTokens\n        );\n        _addAuction(_cutieId, auction);\n    }\n\n    // @dev Set the reference to cutie ownership contract. Verify the owner's fee.\n    //  @param fee should be between 0-10,000.\n    function setup(address _coreContractAddress, TokenRegistryInterface _tokenRegistry, uint16 _fee) public onlyOwner\n    {\n        require(_fee <= 10000);\n\n        ownerFee = _fee;\n\n        CutieCoreInterface candidateContract = CutieCoreInterface(_coreContractAddress);\n        require(candidateContract.isCutieCore());\n        coreContract = candidateContract;\n        tokenRegistry = _tokenRegistry;\n    }\n\n    function setGen0Callback(Gen0CallbackInterface _gen0Callback) public onlyOwner\n    {\n        gen0Callback = _gen0Callback;\n    }\n\n    // @dev Set the owner's fee.\n    //  @param fee should be between 0-10,000.\n    function setFee(uint16 _fee) public onlyOwner\n    {\n        require(_fee <= 10000);\n\n        ownerFee = _fee;\n    }\n\n    // @dev bid on auction. Complete it and transfer ownership of cutie if enough ether was given.\n    function bid(uint40 _cutieId) public payable whenNotPaused canBeStoredIn128Bits(msg.value)\n    {\n        // _bid throws if something failed.\n        _bid(_cutieId, uint128(msg.value));\n        _transfer(msg.sender, _cutieId);\n    }\n\n    function getCutieId(bytes _extraData) pure internal returns (uint40)\n    {\n        require(_extraData.length == 5); // 40 bits\n\n        return\n            uint40(_extraData[0]) +\n            uint40(_extraData[1]) * 0x100 +\n            uint40(_extraData[2]) * 0x10000 +\n            uint40(_extraData[3]) * 0x100000 +\n            uint40(_extraData[4]) * 0x10000000;\n    }\n\n    function bidWithToken(address _tokenContract, uint40 _cutieId) external whenNotPaused\n    {\n        _bidWithToken(_tokenContract, _cutieId, msg.sender);\n    }\n\n    function tokenFallback(address _sender, uint _value, bytes _extraData) external whenNotPaused\n    {\n        uint40 cutieId = getCutieId(_extraData);\n        address tokenContractAddress = msg.sender;\n        ERC20 tokenContract = ERC20(tokenContractAddress);\n\n        // Get a reference to the auction struct\n        Auction storage auction = cutieIdToAuction[cutieId];\n\n        require(tokenRegistry.isTokenInList(auction.allowedTokens, tokenContractAddress)); // buy for token is allowed\n\n        require(_isOnAuction(auction));\n\n        uint128 priceWei = _currentPrice(auction);\n\n        uint128 priceInTokens = tokenRegistry.getPriceInToken(tokenContract, priceWei);\n\n        // Check that bid > current price (this tokens are already sent to currect contract)\n        require(_value >= priceInTokens);\n\n        // Provide a reference to the seller before the auction struct is deleted.\n        address seller = auction.seller;\n\n        _removeAuction(cutieId);\n\n        // send tokens to seller\n        if (seller != address(coreContract))\n        {\n            uint128 fee = _computeFee(priceInTokens);\n            uint128 sellerValue = priceInTokens - fee;\n\n            tokenContract.transfer(seller, sellerValue);\n        }\n\n        emit AuctionSuccessfulForToken(cutieId, priceWei, _sender, priceInTokens, tokenContractAddress);\n        _transfer(_sender, cutieId);\n    }\n\n    // https://github.com/BitGuildPlatform/Documentation/blob/master/README.md#2-required-game-smart-contract-changes\n    // Function that is called when trying to use PLAT for payments from approveAndCall\n    function receiveApproval(address _sender, uint256 _value, address _tokenContract, bytes _extraData)\n        external\n        canBeStoredIn128Bits(_value)\n        whenNotPaused\n    {\n        uint40 cutieId = getCutieId(_extraData);\n        _bidWithToken(_tokenContract, cutieId, _sender);\n    }\n\n    function _bidWithToken(address _tokenContract, uint40 _cutieId, address _sender) internal\n    {\n        ERC20 tokenContract = ERC20(_tokenContract);\n\n        // Get a reference to the auction struct\n        Auction storage auction = cutieIdToAuction[_cutieId];\n\n        bool allowTokens = tokenRegistry.isTokenInList(auction.allowedTokens, _tokenContract); // buy for token is allowed\n        bool allowConvertToEth = tokenRegistry.canConvertToEth(tokenContract);\n\n        require(allowTokens || allowConvertToEth);\n\n        require(_isOnAuction(auction));\n\n        uint128 priceWei = _currentPrice(auction);\n\n        uint128 priceInTokens = tokenRegistry.getPriceInToken(tokenContract, priceWei);\n\n        // Provide a reference to the seller before the auction struct is deleted.\n        address seller = auction.seller;\n\n        _removeAuction(_cutieId);\n\n        if (seller != address(coreContract))\n        {\n            uint128 fee = _computeFee(priceInTokens);\n            uint128 sellerValueTokens = priceInTokens - fee;\n\n            if (allowTokens)\n            {\n                // seller income - tokens\n                require(tokenContract.transferFrom(_sender, seller, sellerValueTokens));\n\n                // market fee - convert tokens to eth\n                require(tokenContract.transferFrom(_sender, address(tokenRegistry), fee));\n                tokenRegistry.onTokensReceived(tokenContract, fee);\n            }\n            else\n            {\n                // seller income\n                require(tokenContract.transferFrom(_sender, address(tokenRegistry), priceInTokens)); // sellerValueTokens + fee\n                tokenRegistry.convertTokensToEth(tokenContract, seller, priceInTokens, ownerFee); // sellerValueTokens = priceInTokens * (100% - fee)\n            }\n        }\n        else\n        {\n            require(tokenContract.transferFrom(_sender, address(tokenRegistry), priceInTokens));\n            tokenRegistry.onTokensReceived(tokenContract, priceInTokens);\n        }\n        emit AuctionSuccessfulForToken(_cutieId, priceWei, _sender, priceInTokens, _tokenContract);\n        _transfer(_sender, _cutieId);\n    }\n\n    // @dev Returns auction info for a token on auction.\n    // @param _cutieId - ID of token on auction.\n    function getAuctionInfo(uint40 _cutieId)\n        public\n        view\n        returns\n    (\n        address seller,\n        uint128 startPrice,\n        uint128 endPrice,\n        uint40 duration,\n        uint40 startedAt,\n        uint128 featuringFee,\n        address[] allowedTokens\n    ) {\n        Auction storage auction = cutieIdToAuction[_cutieId];\n        require(_isOnAuction(auction));\n        return (\n            auction.seller,\n            auction.startPrice,\n            auction.endPrice,\n            auction.duration,\n            auction.startedAt,\n            auction.featuringFee,\n            auction.allowedTokens\n        );\n    }\n\n    // @dev Returns auction info for a token on auction.\n    // @param _cutieId - ID of token on auction.\n    function isOnAuction(uint40 _cutieId)\n        public\n        view\n        returns (bool) \n    {\n        return cutieIdToAuction[_cutieId].startedAt > 0;\n    }\n\n/*\n    /// @dev Import cuties from previous version of Core contract.\n    /// @param _oldAddress Old core contract address\n    /// @param _fromIndex (inclusive)\n    /// @param _toIndex (inclusive)\n    function migrate(address _oldAddress, uint40 _fromIndex, uint40 _toIndex) public onlyOwner whenPaused\n    {\n        Market old = Market(_oldAddress);\n\n        for (uint40 i = _fromIndex; i <= _toIndex; i++)\n        {\n            if (coreContract.ownerOf(i) == _oldAddress)\n            {\n                address seller;\n                uint128 startPrice;\n                uint128 endPrice;\n                uint40 duration;\n                uint40 startedAt;\n                uint128 featuringFee;   \n                (seller, startPrice, endPrice, duration, startedAt, featuringFee) = old.getAuctionInfo(i);\n\n                Auction memory auction = Auction({\n                    seller: seller, \n                    startPrice: startPrice, \n                    endPrice: endPrice, \n                    duration: duration, \n                    startedAt: startedAt, \n                    featuringFee: featuringFee\n                });\n                _addAuction(i, auction);\n            }\n        }\n    }*/\n\n    // @dev Returns the current price of an auction.\n    function getCurrentPrice(uint40 _cutieId)\n        public\n        view\n        returns (uint128)\n    {\n        Auction storage auction = cutieIdToAuction[_cutieId];\n        require(_isOnAuction(auction));\n        return _currentPrice(auction);\n    }\n\n    // @dev Cancels unfinished auction and returns token to owner. \n    // Can be called when contract is paused.\n    function cancelActiveAuction(uint40 _cutieId) public\n    {\n        Auction storage auction = cutieIdToAuction[_cutieId];\n        require(_isOnAuction(auction));\n        address seller = auction.seller;\n        require(msg.sender == seller);\n        _cancelActiveAuction(_cutieId, seller);\n    }\n\n    // @dev Cancels auction when contract is on pause. Option is available only to owners in urgent situations. Tokens returned to seller.\n    //  Used on Core contract upgrade.\n    function cancelActiveAuctionWhenPaused(uint40 _cutieId) whenPaused onlyOwner public\n    {\n        Auction storage auction = cutieIdToAuction[_cutieId];\n        require(_isOnAuction(auction));\n        _cancelActiveAuction(_cutieId, auction.seller);\n    }\n\n    // @dev Cancels unfinished auction and returns token to owner.\n    // Can be called when contract is paused.\n    function cancelCreatorAuction(uint40 _cutieId) public onlyOperator\n    {\n        Auction storage auction = cutieIdToAuction[_cutieId];\n        require(_isOnAuction(auction));\n        address seller = auction.seller;\n        require(seller == address(coreContract));\n        _cancelActiveAuction(_cutieId, msg.sender);\n    }\n\n    // @dev Transfers to _withdrawToAddress all tokens controlled by\n    // contract _tokenContract.\n    function withdrawTokenFromBalance(ERC20 _tokenContract, address _withdrawToAddress) external\n    {\n        address coreAddress = address(coreContract);\n\n        require(\n            msg.sender == owner ||\n            msg.sender == operatorAddress ||\n            msg.sender == coreAddress\n        );\n        uint256 balance = _tokenContract.balanceOf(address(this));\n        _tokenContract.transfer(_withdrawToAddress, balance);\n    }\n\n    function isPluginInterface() public pure returns (bool)\n    {\n        return true;\n    }\n\n    function onRemove() public {}\n\n    function run(\n        uint40 /*_cutieId*/,\n        uint256 /*_parameter*/,\n        address /*_seller*/\n    )\n    public\n    payable\n    {\n        revert();\n    }\n\n    function runSigned(\n        uint40 /*_cutieId*/,\n        uint256 /*_parameter*/,\n        address /*_owner*/\n    )\n        external\n        payable\n    {\n        revert();\n    }\n\n    function withdraw() public\n    {\n        require(\n            msg.sender == owner ||\n            msg.sender == address(coreContract)\n        );\n        if (address(this).balance > 0)\n        {\n            address(coreContract).transfer(address(this).balance);\n        }\n    }\n}\n\n\n/// @title Auction market for cuties sale \n/// @author https://BlockChainArchitect.io\ncontract SaleMarket is Market\n{\n    // @dev Sanity check reveals that the\n    //  auction in our setSaleAuctionAddress() call is right.\n    bool public isSaleMarket = true;\n\n    // @dev LastSalePrice is updated if seller is the token contract.\n    // Otherwise, default bid method is used.\n    function bid(uint40 _cutieId)\n        public\n        payable\n        canBeStoredIn128Bits(msg.value)\n    {\n        // _bid verifies token ID size\n        _bid(_cutieId, uint128(msg.value));\n        _transfer(msg.sender, _cutieId);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"gen0Callback\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"onRemove\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_cutieId\",\"type\":\"uint40\"}],\"name\":\"isOnAuction\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_coreContractAddress\",\"type\":\"address\"},{\"name\":\"_tokenRegistry\",\"type\":\"address\"},{\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cutieId\",\"type\":\"uint40\"}],\"name\":\"cancelCreatorAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gen0Callback\",\"type\":\"address\"}],\"name\":\"setGen0Callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isSaleMarket\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_cutieId\",\"type\":\"uint40\"}],\"name\":\"bidWithToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawEthFromBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_cutieId\",\"type\":\"uint40\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint40\"}],\"name\":\"cutieIdToAuction\",\"outputs\":[{\"name\":\"startPrice\",\"type\":\"uint128\"},{\"name\":\"endPrice\",\"type\":\"uint128\"},{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"duration\",\"type\":\"uint40\"},{\"name\":\"startedAt\",\"type\":\"uint40\"},{\"name\":\"featuringFee\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPluginInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"uint40\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"runSigned\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cutieId\",\"type\":\"uint40\"}],\"name\":\"cancelActiveAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_cutieId\",\"type\":\"uint40\"}],\"name\":\"getAuctionInfo\",\"outputs\":[{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"startPrice\",\"type\":\"uint128\"},{\"name\":\"endPrice\",\"type\":\"uint128\"},{\"name\":\"duration\",\"type\":\"uint40\"},{\"name\":\"startedAt\",\"type\":\"uint40\"},{\"name\":\"featuringFee\",\"type\":\"uint128\"},{\"name\":\"allowedTokens\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"uint40\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"run\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cutieId\",\"type\":\"uint40\"}],\"name\":\"cancelActiveAuctionWhenPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cutieId\",\"type\":\"uint40\"},{\"name\":\"_startPrice\",\"type\":\"uint128\"},{\"name\":\"_endPrice\",\"type\":\"uint128\"},{\"name\":\"_duration\",\"type\":\"uint40\"},{\"name\":\"_seller\",\"type\":\"address\"},{\"name\":\"_allowedTokens\",\"type\":\"address[]\"}],\"name\":\"createAuctionWithTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cutieId\",\"type\":\"uint40\"}],\"name\":\"bid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cutieId\",\"type\":\"uint40\"},{\"name\":\"_startPrice\",\"type\":\"uint128\"},{\"name\":\"_endPrice\",\"type\":\"uint128\"},{\"name\":\"_duration\",\"type\":\"uint40\"},{\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"createAuction\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_withdrawToAddress\",\"type\":\"address\"}],\"name\":\"withdrawTokenFromBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coreContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"cutieId\",\"type\":\"uint40\"},{\"indexed\":false,\"name\":\"startPrice\",\"type\":\"uint128\"},{\"indexed\":false,\"name\":\"endPrice\",\"type\":\"uint128\"},{\"indexed\":false,\"name\":\"duration\",\"type\":\"uint40\"},{\"indexed\":false,\"name\":\"fee\",\"type\":\"uint128\"},{\"indexed\":false,\"name\":\"allowedTokens\",\"type\":\"address[]\"}],\"name\":\"AuctionCreatedWithTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"cutieId\",\"type\":\"uint40\"},{\"indexed\":false,\"name\":\"totalPriceWei\",\"type\":\"uint128\"},{\"indexed\":true,\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"AuctionSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"cutieId\",\"type\":\"uint40\"},{\"indexed\":false,\"name\":\"totalPriceWei\",\"type\":\"uint128\"},{\"indexed\":true,\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"priceInTokens\",\"type\":\"uint128\"},{\"indexed\":true,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AuctionSuccessfulForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"cutieId\",\"type\":\"uint40\"}],\"name\":\"AuctionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "6080604052600080546005805460a060020a60ff02191674010000000000000000000000000000000000000000179055600160a860020a03191633179055612b638061004c6000396000f3006080604052600436106101925763ffffffff60e060020a60003504166303c2444e811461019457806311952369146101c55780632177885d146101da5780632c5959f91461020d57806330d9161d1461023b5780633ccfd60b1461025a5780633f4ba83a1461026f5780634c2a6dcb146102845780635c975abb146102a55780636066b066146102ba57806370f6fcad146102cf578063776247c4146102fa5780637ea310d41461030f57806381baab241461034a5780638456cb59146103ba5780638da5cb5b146103cf5780638e005553146103e45780638f4ffcb11461040057806394a89233146104385780639652713e1461044d57806398c9faac1461046e5780639ccaec981461048d5780639d23c4c714610551578063a055d4551461044d578063b2fb3b9014610566578063b3ab15fb14610585578063b9fbad0d146105a6578063c0ee0b8a14610622578063c170fd5414610653578063c1d1faf314610665578063cda8c7151461069e578063d5b2a01a146106c5578063e80db5db146106f1578063f2fde38b14610706575b005b3480156101a057600080fd5b506101a9610727565b60408051600160a060020a039092168252519081900360200190f35b3480156101d157600080fd5b50610192610736565b3480156101e657600080fd5b506101f964ffffffffff60043516610738565b604080519115158252519081900360200190f35b34801561021957600080fd5b50610192600160a060020a036004358116906024351661ffff60443516610761565b34801561024757600080fd5b5061019264ffffffffff60043516610855565b34801561026657600080fd5b506101926108e4565b34801561027b57600080fd5b50610192610959565b34801561029057600080fd5b50610192600160a060020a03600435166109cf565b3480156102b157600080fd5b506101f9610a08565b3480156102c657600080fd5b506101f9610a18565b3480156102db57600080fd5b50610192600160a060020a036004351664ffffffffff60243516610a28565b34801561030657600080fd5b50610192610a4e565b34801561031b57600080fd5b5061032e64ffffffffff60043516610b2c565b604080516001608060020a039092168252519081900360200190f35b34801561035657600080fd5b5061036964ffffffffff60043516610b66565b604080516001608060020a0397881681529587166020870152600160a060020a039094168585015264ffffffffff92831660608601529116608084015290921660a082015290519081900360c00190f35b3480156103c657600080fd5b50610192610bce565b3480156103db57600080fd5b506101a9610c49565b3480156103f057600080fd5b5061019261ffff60043516610c58565b34801561040c57600080fd5b5061019260048035600160a060020a039081169160248035926044351691606435918201910135610cb5565b34801561044457600080fd5b506101f9610d32565b61019264ffffffffff60043516602435600160a060020a0360443516610d38565b34801561047a57600080fd5b5061019264ffffffffff60043516610d3d565b34801561049957600080fd5b506104ac64ffffffffff60043516610d8d565b60408051600160a060020a03891681526001608060020a038089166020808401919091528882169383019390935264ffffffffff808816606084015286166080830152841660a082015260e060c08201818152845191830191909152835191929091610100840191858101910280838360005b8381101561053757818101518382015260200161051f565b505050509050019850505050505050505060405180910390f35b34801561055d57600080fd5b506101a9610e94565b34801561057257600080fd5b5061019264ffffffffff60043516610ea3565b34801561059157600080fd5b50610192600160a060020a0360043516610f17565b6040805160a435600481810135602081810285810182019096528185526101929564ffffffffff84358116966001608060020a03602480358216986044359092169760643590941696600160a060020a036084351696369660c4959490930192829185019084908082843750949750610f659650505050505050565b34801561062e57600080fd5b5061019260048035600160a060020a03169060248035916044359182019101356110db565b61019264ffffffffff6004351661149e565b61019264ffffffffff6004358116906001608060020a036024358116916044359091169060643516600160a060020a03608435166114c8565b3480156106aa57600080fd5b50610192600160a060020a036004358116906024351661179a565b3480156106d157600080fd5b506106da611911565b6040805161ffff9092168252519081900360200190f35b3480156106fd57600080fd5b506101a9611922565b34801561071257600080fd5b50610192600160a060020a0360043516611931565b600254600160a060020a031681565b565b64ffffffffff90811660009081526003602052604081206001015460c860020a90049091161190565b60008054600160a060020a0316331461077957600080fd5b61271061ffff8316111561078c57600080fd5b81600260146101000a81548161ffff021916908361ffff16021790555083905080600160a060020a0316634d6a813a6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156107ea57600080fd5b505af11580156107fe573d6000803e3d6000fd5b505050506040513d602081101561081457600080fd5b5051151561082157600080fd5b60018054600160a060020a03928316600160a060020a03199182161790915560048054949092169316929092179091555050565b6005546000908190600160a060020a031633148061087d5750600054600160a060020a031633145b151561088857600080fd5b64ffffffffff8316600090815260036020526040902091506108a9826119b8565b15156108b457600080fd5b506001808201549054600160a060020a03918216911681146108d557600080fd5b6108df83336119d1565b505050565b600054600160a060020a03163314806109075750600154600160a060020a031633145b151561091257600080fd5b60003031111561073657600154604051600160a060020a0390911690303180156108fc02916000818181858888f19350505050158015610956573d6000803e3d6000fd5b50565b600054600160a060020a0316331461097057600080fd5b60005460a060020a900460ff16151561098857600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b600054600160a060020a031633146109e657600080fd5b60028054600160a060020a031916600160a060020a0392909216919091179055565b60005460a060020a900460ff1681565b60055460a060020a900460ff1681565b60005460a060020a900460ff1615610a3f57600080fd5b610a4a828233611a1a565b5050565b600154600054600160a060020a039182169116331480610a76575033600160a060020a038216145b1515610a8157600080fd5b60048054604080517f776247c40000000000000000000000000000000000000000000000000000000081529051600160a060020a039092169263776247c492828201926000929082900301818387803b158015610add57600080fd5b505af1158015610af1573d6000803e3d6000fd5b5050604051600160a060020a0384169250303180156108fc029250906000818181858888f19350505050158015610a4a573d6000803e3d6000fd5b64ffffffffff81166000908152600360205260408120610b4b816119b8565b1515610b5657600080fd5b610b5f816121dd565b9392505050565b6003602052600090815260409020805460018201546002909201546001608060020a0380831693700100000000000000000000000000000000909304811692600160a060020a0381169264ffffffffff60a060020a830481169360c860020a90930416911686565b600054600160a060020a03163314610be557600080fd5b60005460a060020a900460ff1615610bfc57600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b600054600160a060020a03163314610c6f57600080fd5b61271061ffff82161115610c8257600080fd5b6002805461ffff90921660a060020a0275ffff000000000000000000000000000000000000000019909216919091179055565b6000846001608060020a03811115610ccc57600080fd5b60005460a060020a900460ff1615610ce357600080fd5b610d1c84848080601f01602080910402602001604051908101604052809392919081815260200183838082843750612264945050505050565b9150610d29858389611a1a565b50505050505050565b60015b90565b600080fd5b64ffffffffff8116600090815260036020526040812090610d5d826119b8565b1515610d6857600080fd5b506001810154600160a060020a0316338114610d8357600080fd5b6108df83826119d1565b64ffffffffff8116600090815260036020526040812081908190819081908190606090610db9816119b8565b1515610dc457600080fd5b60018101548154600283015460038401805460408051602080840282018101909252828152600160a060020a038716966001608060020a0380881697700100000000000000000000000000000000900481169664ffffffffff60a060020a840481169760c860020a9094041695911693919291839190830182828015610e7357602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610e55575b50505050509050975097509750975097509750975050919395979092949650565b600454600160a060020a031681565b6000805460a060020a900460ff161515610ebc57600080fd5b600054600160a060020a03163314610ed357600080fd5b5064ffffffffff81166000908152600360205260409020610ef3816119b8565b1515610efe57600080fd5b6001810154610a4a908390600160a060020a03166119d1565b600054600160a060020a03163314610f2e57600080fd5b600160a060020a0381161515610f4357600080fd5b60058054600160a060020a031916600160a060020a0392909216919091179055565b610f6d612a38565b600480546040517f90a308a50000000000000000000000000000000000000000000000000000000081526020928101838152855160248301528551600160a060020a03909316936390a308a59387938392604490910191818601910280838360005b83811015610fe7578181015183820152602001610fcf565b5050505090500192505050602060405180830381600087803b15801561100c57600080fd5b505af1158015611020573d6000803e3d6000fd5b505050506040513d602081101561103657600080fd5b5051151561104357600080fd5b611054838864ffffffffff16612358565b151561105f57600080fd5b6110698388612401565b60e060405190810160405280876001608060020a03168152602001866001608060020a0316815260200184600160a060020a031681526020018564ffffffffff1681526020014264ffffffffff168152602001346001608060020a03168152602001838152509050610d298782612479565b60008060008060008060008060008060149054906101000a900460ff1615151561110457600080fd5b61113d8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843750612264945050505050565b64ffffffffff81166000908152600360208190526040918290206004805484517f223e6b5b0000000000000000000000000000000000000000000000000000000081523360248201819052928101958652938301805460448601819052969f50919d508d9c50919a50600160a060020a039091169363223e6b5b9391928c9291829160640190859080156111fa57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116111dc575b50509350505050602060405180830381600087803b15801561121b57600080fd5b505af115801561122f573d6000803e3d6000fd5b505050506040513d602081101561124557600080fd5b5051151561125257600080fd5b61125b866119b8565b151561126657600080fd5b61126f866121dd565b60048054604080517fa01da7b2000000000000000000000000000000000000000000000000000000008152600160a060020a038c8116948201949094526001608060020a0385166024820152905193985091169163a01da7b2916044808201926020929091908290030181600087803b1580156112eb57600080fd5b505af11580156112ff573d6000803e3d6000fd5b505050506040513d602081101561131557600080fd5b505193506001608060020a0384168c101561132f57600080fd5b6001860154600160a060020a031692506113488961278d565b600154600160a060020a0384811691161461140657611366846127fb565b9150818403905086600160a060020a031663a9059cbb84836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a03168152602001826001608060020a0316815260200192505050602060405180830381600087803b1580156113d957600080fd5b505af11580156113ed573d6000803e3d6000fd5b505050506040513d602081101561140357600080fd5b50505b87600160a060020a03168d600160a060020a03168a64ffffffffff167ff65c85ee1272f6f51bd40bae1565e2868b8e887082e6f94b4924d29d21f842d7888860405180836001608060020a03166001608060020a03168152602001826001608060020a03166001608060020a031681526020019250505060405180910390a461148f8d8a612822565b50505050505050505050505050565b346001608060020a038111156114b357600080fd5b6114bd8234612896565b50610a4a3383612822565b60006114d2612a38565b60005460a060020a900460ff16156114e957600080fd5b6114fa838864ffffffffff16612358565b151561150557600080fd5b61150f8388612401565b64800000000064ffffffffff8516818110935006935060e060405190810160405280876001608060020a03168152602001866001608060020a0316815260200184600160a060020a031681526020018564ffffffffff1681526020014264ffffffffff168152602001346001608060020a03168152602001836115a05760408051600081526020810190915261178c565b600154600160a060020a038681169116146116a35760048054604080517f0352bc580000000000000000000000000000000000000000000000000000000081529051600160a060020a0390921692630352bc5892828201926000929082900301818387803b15801561161157600080fd5b505af1158015611625573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561164e57600080fd5b81019080805164010000000081111561166657600080fd5b8201602081018481111561167957600080fd5b815185602082028301116401000000008211171561169657600080fd5b505092919050505061178c565b60048054604080517f1a05e21d0000000000000000000000000000000000000000000000000000000081529051600160a060020a0390921692631a05e21d92828201926000929082900301818387803b1580156116ff57600080fd5b505af1158015611713573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561173c57600080fd5b81019080805164010000000081111561175457600080fd5b8201602081018481111561176757600080fd5b815185602082028301116401000000008211171561178457600080fd5b509093505050505b90529050610d298782612479565b60015460008054600160a060020a0392831692163314806117c55750600554600160a060020a031633145b806117d8575033600160a060020a038316145b15156117e357600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038616916370a082319160248083019260209291908290030181600087803b15801561184457600080fd5b505af1158015611858573d6000803e3d6000fd5b505050506040513d602081101561186e57600080fd5b5051604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0386811660048301526024820184905291519293509086169163a9059cbb916044808201926020929091908290030181600087803b1580156118df57600080fd5b505af11580156118f3573d6000803e3d6000fd5b505050506040513d602081101561190957600080fd5b505050505050565b60025460a060020a900461ffff1681565b600154600160a060020a031681565b600054600160a060020a0316331461194857600080fd5b600160a060020a038116151561195d57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360008054600160a060020a031916600160a060020a0392909216919091179055565b60010154600060c860020a90910464ffffffffff161190565b6119da8261278d565b6119e48183612822565b60405164ffffffffff8316907ff6680ade663631ec4dd74f7eaa1f75125361380cd50a22f969e9acfa5f53670490600090a25050565b64ffffffffff821660009081526003602081905260408083206004805483517f223e6b5b000000000000000000000000000000000000000000000000000000008152600160a060020a03808b1660248301529281019485529483018054604487018190528a9794969495869586958695869586958695939092169363223e6b5b9391928e9291829160649091019085908015611adf57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311611ac1575b50509350505050602060405180830381600087803b158015611b0057600080fd5b505af1158015611b14573d6000803e3d6000fd5b505050506040513d6020811015611b2a57600080fd5b505160048054604080517f6c8251d2000000000000000000000000000000000000000000000000000000008152600160a060020a038e8116948201949094529051939a50911691636c8251d2916024808201926020929091908290030181600087803b158015611b9957600080fd5b505af1158015611bad573d6000803e3d6000fd5b505050506040513d6020811015611bc357600080fd5b505195508680611bd05750855b1515611bdb57600080fd5b611be4886119b8565b1515611bef57600080fd5b611bf8886121dd565b60048054604080517fa01da7b2000000000000000000000000000000000000000000000000000000008152600160a060020a038e8116948201949094526001608060020a0385166024820152905193985091169163a01da7b2916044808201926020929091908290030181600087803b158015611c7457600080fd5b505af1158015611c88573d6000803e3d6000fd5b505050506040513d6020811015611c9e57600080fd5b50516001890154909450600160a060020a03169250611cbc8b61278d565b600154600160a060020a0384811691161461201157611cda846127fb565b9150508083038615611ebc576040805160e060020a6323b872dd028152600160a060020a038c8116600483015285811660248301526001608060020a03841660448301529151918b16916323b872dd916064808201926020929091908290030181600087803b158015611d4c57600080fd5b505af1158015611d60573d6000803e3d6000fd5b505050506040513d6020811015611d7657600080fd5b50511515611d8357600080fd5b600480546040805160e060020a6323b872dd028152600160a060020a038e81169482019490945291831660248301526001608060020a038516604483015251918b16916323b872dd916064808201926020929091908290030181600087803b158015611dee57600080fd5b505af1158015611e02573d6000803e3d6000fd5b505050506040513d6020811015611e1857600080fd5b50511515611e2557600080fd5b60048054604080517f4e82a391000000000000000000000000000000000000000000000000000000008152600160a060020a038d8116948201949094526001608060020a038616602482015290519290911691634e82a3919160448082019260009290919082900301818387803b158015611e9f57600080fd5b505af1158015611eb3573d6000803e3d6000fd5b5050505061200c565b600480546040805160e060020a6323b872dd028152600160a060020a038e81169482019490945291831660248301526001608060020a038716604483015251918b16916323b872dd916064808201926020929091908290030181600087803b158015611f2757600080fd5b505af1158015611f3b573d6000803e3d6000fd5b505050506040513d6020811015611f5157600080fd5b50511515611f5e57600080fd5b60048054600254604080517ffee16ea9000000000000000000000000000000000000000000000000000000008152600160a060020a038e81169582019590955287851660248201526001608060020a038916604482015260a060020a90920461ffff16606483015251929091169163fee16ea99160848082019260009290919082900301818387803b158015611ff357600080fd5b505af1158015612007573d6000803e3d6000fd5b505050505b612146565b600480546040805160e060020a6323b872dd028152600160a060020a038e81169482019490945291831660248301526001608060020a038716604483015251918b16916323b872dd916064808201926020929091908290030181600087803b15801561207c57600080fd5b505af1158015612090573d6000803e3d6000fd5b505050506040513d60208110156120a657600080fd5b505115156120b357600080fd5b60048054604080517f4e82a391000000000000000000000000000000000000000000000000000000008152600160a060020a038d8116948201949094526001608060020a038816602482015290519290911691634e82a3919160448082019260009290919082900301818387803b15801561212d57600080fd5b505af1158015612141573d6000803e3d6000fd5b505050505b8b600160a060020a03168a600160a060020a03168c64ffffffffff167ff65c85ee1272f6f51bd40bae1565e2868b8e887082e6f94b4924d29d21f842d7888860405180836001608060020a03166001608060020a03168152602001826001608060020a03166001608060020a031681526020019250505060405180910390a46121cf8a8c612822565b505050505050505050505050565b60018101546000908190429064ffffffffff60c860020a9091048116908216111561221a57600184015460c860020a900464ffffffffff16810391505b8354600185015461225c916001608060020a0380821692700100000000000000000000000000000000909204169060a060020a900464ffffffffff16856129d1565b949350505050565b805160009060051461227557600080fd5b81600481518110151561228457fe5b90602001015160f860020a900460f860020a0260f860020a90046310000000028260038151811015156122b357fe5b90602001015160f860020a900460f860020a0260f860020a900462100000028360028151811015156122e157fe5b90602001015160f860020a900460f860020a0260f860020a9004620100000284600181518110151561230f57fe5b90602001015160f860020a900460f860020a0260f860020a90046101000285600081518110151561233c57fe5b016020015160f860020a90819004810204010101019050919050565b600154604080517f6352211e000000000000000000000000000000000000000000000000000000008152600481018490529051600092600160a060020a0380871693911691636352211e9160248082019260209290919082900301818887803b1580156123c457600080fd5b505af11580156123d8573d6000803e3d6000fd5b505050506040513d60208110156123ee57600080fd5b5051600160a060020a0316149392505050565b6001546040805160e060020a6323b872dd028152600160a060020a03858116600483015230602483015264ffffffffff85166044830152915191909216916323b872dd91606480830192600092919082900301818387803b15801561246557600080fd5b505af1158015611909573d6000803e3d6000fd5b6001546040820151600160a060020a039081169116141561255757600254600160a060020a03161561252a57600254604080517f6762ca5900000000000000000000000000000000000000000000000000000000815264ffffffffff851660048201529051600160a060020a0390921691636762ca599160248082019260009290919082900301818387803b15801561251157600080fd5b505af1158015612525573d6000803e3d6000fd5b505050505b606081015164ffffffffff1615156125575760055461255290600160a060020a031683612822565b610a4a565b603c816060015164ffffffffff161015151561257257600080fd5b64ffffffffff80831660009081526003602081815260409283902085518154838801516001608060020a03908116700100000000000000000000000000000000029281166fffffffffffffffffffffffffffffffff199283161781169290921783559487015160018301805460608a015160808b01518a1660c860020a027fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff91909a1660a060020a0278ffffffffff000000000000000000000000000000000000000019600160a060020a03909516600160a060020a0319909316929092179390931617919091169690961790955560a08601516002820180549190961694169390931790935560c084015180518594612690938501920190612a76565b509050508164ffffffffff167f204860a5ee867ceff41013d88caf4a6e6b852d0eba7efaf413c8978d9589f4588260000151836020015184606001518560a001518660c0015160405180866001608060020a03166001608060020a03168152602001856001608060020a03166001608060020a031681526020018464ffffffffff1664ffffffffff168152602001836001608060020a03166001608060020a0316815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561277257818101518382015260200161275a565b50505050905001965050505050505060405180910390a25050565b64ffffffffff8116600090815260036020819052604082208281556001810180547fffff0000000000000000000000000000000000000000000000000000000000001690556002810180546fffffffffffffffffffffffffffffffff1916905591906108df90830182612adb565b6002546000906127109060a060020a900461ffff1683026001608060020a03160492915050565b600154604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015264ffffffffff851660248301529151919092169163a9059cbb91604480830192600092919082900301818387803b15801561246557600080fd5b64ffffffffff82166000908152600360205260408120818080806128b9856119b8565b15156128c457600080fd5b6128cd856121dd565b93506001608060020a0380851690881610156128e857600080fd5b6001850154600160a060020a031692506129018861278d565b6000846001608060020a03161180156129285750600154600160a060020a03848116911614155b1561297e57612936846127fb565b6040519092508285039150600160a060020a038416906001608060020a03831680156108fc02916000818181858888f1935050505015801561297c573d6000803e3d6000fd5b505b604080516001608060020a03861681529051339164ffffffffff8b16917f8500e47909916e51e97e4880e742d8b9af1afaeb9ea54166947cf42e6616b1179181900360200190a350919695505050505050565b600080808064ffffffffff808716908616106129ef57869350612a2d565b876001608060020a0316876001608060020a03160392508564ffffffffff168564ffffffffff168402811515612a2157fe5b05915081880190508093505b505050949350505050565b6040805160e08101825260008082526020820181905291810182905260608082018390526080820183905260a082019290925260c081019190915290565b828054828255906000526020600020908101928215612acb579160200282015b82811115612acb5782518254600160a060020a031916600160a060020a03909116178255602090920191600190910190612a96565b50612ad7929150612af9565b5090565b50805460008255906000526020600020908101906109569190612b1d565b610d3591905b80821115612ad7578054600160a060020a0319168155600101612aff565b610d3591905b80821115612ad75760008155600101612b235600a165627a7a7230582027c6c033308add4ad8ee35dd21b0f9284b4850fba82afb198b0225669fa2b76a0029"
}