{
  "address": "0x5afc0b82bd845f20804e42ec049bee8e17fa9700",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CevacToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-11\n*/\n\npragma solidity ^0.4.11;\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\n\n\n\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  modifier stopInEmergency {\n    if (paused) {\n      throw;\n    }\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    Unpause();\n  }\n}\n\n\ncontract Token {\n    uint256 public totalSupply;\n    function balanceOf(address _owner) constant returns (uint256 balance);\n    function transfer(address _to, uint256 _value) returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n    function approve(address _spender, uint256 _value) returns (bool success);\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n\n/*  ERC 20 token */\ncontract CevacToken is Token,Ownable {\n    string public constant name = \"Cevac Token\";\n    string public constant symbol = \"CEVAC\";\n    uint256 public constant decimals = 8;\n    string public version = \"1.0\";\n    uint public valueToBeSent = 1;\n\n    bool public finalizedICO = false;\n\n    uint256 public ethraised;\n    uint256 public btcraised;\n    uint256 public usdraised;\n\n\n    uint256 public numberOfBackers;\n\n    bool public istransferAllowed;\n\n    uint256 public constant CevacFund = 36 * (10**8) * 10**decimals; \n    uint256 public fundingStartBlock; //start = 1533081600 //1 august 2018\n    uint256 public fundingEndBlock; ///end = 1585612800 ///31 march 2020\n    uint256 public tokenCreationMax= 1836 * (10**6) * 10**decimals;//TODO\n    mapping (address => bool) public ownership;\n    uint256 public minCapUSD = 210000000;\n    uint256 public maxCapUSD = 540000000;\n\n    address public ownerWallet = 0x46F525e84B5C59CA63a5E1503fa82dF98fBb026b;\n\n\n    mapping (address => uint256) public balances;\n    mapping (address => mapping (address => uint256)) public allowed;\n\n    modifier onlyPayloadSize(uint size) {\n        require(msg.data.length >= size + 4);\n        _;\n    }\n\n    function transfer(address _to, uint256 _value) onlyPayloadSize(2 * 32) returns (bool success) {\n      if(!istransferAllowed) throw;\n      if (balances[msg.sender] >= _value && _value > 0) {\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        Transfer(msg.sender, _to, _value);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    function burnTokens(uint256 _value) public{\n        require(balances[msg.sender]>=_value);\n        balances[msg.sender] = SafeMath.sub(balances[msg.sender],_value);\n        totalSupply =SafeMath.sub(totalSupply,_value);\n    }\n\n\n    //this is the default constructor\n    function CevacToken(uint256 _fundingStartBlock, uint256 _fundingEndBlock){\n        balances[ownerWallet] = CevacFund;\n        totalSupply = CevacFund;\n        fundingStartBlock = _fundingStartBlock;\n        fundingEndBlock = _fundingEndBlock;\n       \n\n    }\n\n    ///change the funding end block\n    function changeEndBlock(uint256 _newFundingEndBlock) public onlyOwner{\n        fundingEndBlock = _newFundingEndBlock;\n    }\n\n    ///change the funding start block\n    function changeStartBlock(uint256 _newFundingStartBlock) public onlyOwner{\n        fundingStartBlock = _newFundingStartBlock;\n    }\n\n    ///the Min Cap USD \n    ///function too chage the miin cap usd\n    function changeMinCapUSD(uint256 _newMinCap) public onlyOwner{\n        minCapUSD = _newMinCap;\n    }\n\n\n    ///fucntion to change the max cap usd\n    function changeMaxCapUSD(uint256 _newMaxCap) public onlyOwner{\n        maxCapUSD = _newMaxCap;\n    }\n\n\n    function transferFrom(address _from, address _to, uint256 _value) onlyPayloadSize(3 * 32) returns (bool success) {\n      if(!istransferAllowed) throw;\n      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\n        balances[_to] += _value;\n        balances[_from] -= _value;\n        allowed[_from][msg.sender] -= _value;\n        Transfer(_from, _to, _value);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n\n    function addToBalances(address _person,uint256 value) {\n        if(!ownership[msg.sender]) throw;\n        balances[ownerWallet] = SafeMath.sub(balances[ownerWallet],value);\n        balances[_person] = SafeMath.add(balances[_person],value);\n        Transfer(address(this), _person, value);\n    }\n\n    /**\n    This is to add the token sale platform ownership to send tokens\n    **/\n    function addToOwnership(address owners) onlyOwner{\n        ownership[owners] = true;\n    }\n\n    /**\n    To be done after killing the old conttract else conflicts can take place\n    This is to remove the token sale platform ownership to send tokens\n    **/\n    function removeFromOwnership(address owners) onlyOwner{\n        ownership[owners] = false;\n    }\n\n    function balanceOf(address _owner) view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) onlyPayloadSize(2 * 32) returns (bool success) {\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) view returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n\n    function increaseEthRaised(uint256 value){\n        require(ownership[msg.sender]);\n        ethraised+=value;\n    }\n\n    function increaseBTCRaised(uint256 value){\n        require(ownership[msg.sender]);\n        btcraised+=value;\n    }\n\n    function increaseUSDRaised(uint256 value){\n        require(ownership[msg.sender]);\n        usdraised+=value;\n    }\n\n    function finalizeICO() public{\n    require(ownership[msg.sender]);\n    require(usdraised>=minCapUSD);\n    finalizedICO = true;\n    istransferAllowed = true;\n    }\n\n    function enableTransfers() public onlyOwner{\n        istransferAllowed = true;\n    }\n\n    function disableTransfers() public onlyOwner{\n        istransferAllowed = false;\n    }\n\n    //functiion to force finalize the ICO by the owner no checks called here\n    function finalizeICOOwner() onlyOwner{\n        finalizedICO = true;\n        istransferAllowed = true;\n    }\n\n    function isValid() returns(bool){\n        if(now>=fundingStartBlock && now<fundingEndBlock ){\n            return true;\n        }else{\n            return false;\n        }\n        if(usdraised>maxCapUSD) throw;\n    }\n\n    ///do not allow payments on this address\n\n    function() payable{\n        throw;\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"owners\",\"type\":\"address\"}],\"name\":\"removeFromOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfBackers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btcraised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"increaseEthRaised\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CevacFund\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"valueToBeSent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreationMax\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_person\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addToBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalizeICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"increaseBTCRaised\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"increaseUSDRaised\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFundingStartBlock\",\"type\":\"uint256\"}],\"name\":\"changeStartBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalizedICO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalizeICOOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFundingEndBlock\",\"type\":\"uint256\"}],\"name\":\"changeEndBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"usdraised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingEndBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newMaxCap\",\"type\":\"uint256\"}],\"name\":\"changeMaxCapUSD\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newMinCap\",\"type\":\"uint256\"}],\"name\":\"changeMinCapUSD\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"isValid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owners\",\"type\":\"address\"}],\"name\":\"addToOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethraised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxCapUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minCapUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"istransferAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_fundingStartBlock\",\"type\":\"uint256\"},{\"name\":\"_fundingEndBlock\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040526040805190810160405280600381526020017f312e3000000000000000000000000000000000000000000000000000000000008152506002908051906020019062000051929190620001f8565b5060016003556000600460006101000a81548160ff0219169083151502179055506008600a0a636d6f230002600c55630c845880600e5563202fbf00600f557346f525e84b5c59ca63a5e1503fa82df98fbb026b601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015620000f257600080fd5b506040516040806200246f833981018060405281019080805190602001909291908051906020019092919050505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506008600a0a63d693a4000260116000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506008600a0a63d693a4000260008190555081600a8190555080600b819055505050620002a7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200023b57805160ff19168380011785556200026c565b828001600101855582156200026c579182015b828111156200026b5782518255916020019190600101906200024e565b5b5090506200027b91906200027f565b5090565b620002a491905b80821115620002a057600081600090555060010162000286565b5090565b90565b6121b880620002b76000396000f300608060405260043610610225576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063060f400b1461022a57806306fdde031461026d578063095ea7b3146102fd5780630dbd527014610362578063112b466e1461038d5780631186560e146103b857806312dd8700146103e557806318160ddd146104105780631b3281001461043b5780631f97c00e14610466578063218a76671461049157806323b872dd146104de57806323cc75a81461056357806327d6d6e01461057a57806327e235e3146105d5578063313ce5671461062c578063375e88bd146106575780633a67a0f614610684578063525426fd1461069b5780635437f098146106c857806354fd4d50146106f55780635c658165146107855780636d1b229d146107fc57806370a082311461082957806376197591146108805780637fe650b1146108af57806382222674146108c65780638da5cb5b146108f3578063912148411461094a57806391b43d13146109755780639335dcb7146109a057806395d89b41146109f7578063a9059cbb14610a87578063af35c6c714610aec578063b7645ed414610b03578063b9384f1214610b30578063bb5d40eb14610b5d578063bed1cfcd14610b8c578063c376290414610bcf578063d5f5b78814610bfa578063d648a64714610c25578063dd62ed3e14610c50578063ded317a814610cc7578063f2fde38b14610cf2578063fa85d33e14610d35575b600080fd5b34801561023657600080fd5b5061026b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d64565b005b34801561027957600080fd5b50610282610e1b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102c25780820151818401526020810190506102a7565b50505050905090810190601f1680156102ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561030957600080fd5b50610348600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e54565b604051808215151515815260200191505060405180910390f35b34801561036e57600080fd5b50610377610ff5565b6040518082815260200191505060405180910390f35b34801561039957600080fd5b506103a2610ffb565b6040518082815260200191505060405180910390f35b3480156103c457600080fd5b506103e360048036038101908080359060200190929190505050611001565b005b3480156103f157600080fd5b506103fa61106c565b6040518082815260200191505060405180910390f35b34801561041c57600080fd5b5061042561107a565b6040518082815260200191505060405180910390f35b34801561044757600080fd5b50610450611080565b6040518082815260200191505060405180910390f35b34801561047257600080fd5b5061047b611086565b6040518082815260200191505060405180910390f35b34801561049d57600080fd5b506104dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061108c565b005b3480156104ea57600080fd5b50610549600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112a9565b604051808215151515815260200191505060405180910390f35b34801561056f57600080fd5b50610578611559565b005b34801561058657600080fd5b506105bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115fc565b604051808215151515815260200191505060405180910390f35b3480156105e157600080fd5b50610616600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061161c565b6040518082815260200191505060405180910390f35b34801561063857600080fd5b50610641611634565b6040518082815260200191505060405180910390f35b34801561066357600080fd5b5061068260048036038101908080359060200190929190505050611639565b005b34801561069057600080fd5b506106996116a4565b005b3480156106a757600080fd5b506106c66004803603810190808035906020019092919050505061171d565b005b3480156106d457600080fd5b506106f360048036038101908080359060200190929190505050611788565b005b34801561070157600080fd5b5061070a6117ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561074a57808201518184015260208101905061072f565b50505050905090810190601f1680156107775780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561079157600080fd5b506107e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061188c565b6040518082815260200191505060405180910390f35b34801561080857600080fd5b50610827600480360381019080803590602001909291905050506118b1565b005b34801561083557600080fd5b5061086a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119a0565b6040518082815260200191505060405180910390f35b34801561088c57600080fd5b506108956119e9565b604051808215151515815260200191505060405180910390f35b3480156108bb57600080fd5b506108c46119fc565b005b3480156108d257600080fd5b506108f160048036038101908080359060200190929190505050611a90565b005b3480156108ff57600080fd5b50610908611af6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561095657600080fd5b5061095f611b1c565b6040518082815260200191505060405180910390f35b34801561098157600080fd5b5061098a611b22565b6040518082815260200191505060405180910390f35b3480156109ac57600080fd5b506109b5611b28565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a0357600080fd5b50610a0c611b4e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a4c578082015181840152602081019050610a31565b50505050905090810190601f168015610a795780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a9357600080fd5b50610ad2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b87565b604051808215151515815260200191505060405180910390f35b348015610af857600080fd5b50610b01611d24565b005b348015610b0f57600080fd5b50610b2e60048036038101908080359060200190929190505050611d9d565b005b348015610b3c57600080fd5b50610b5b60048036038101908080359060200190929190505050611e03565b005b348015610b6957600080fd5b50610b72611e69565b604051808215151515815260200191505060405180910390f35b348015610b9857600080fd5b50610bcd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e94565b005b348015610bdb57600080fd5b50610be4611f4b565b6040518082815260200191505060405180910390f35b348015610c0657600080fd5b50610c0f611f51565b6040518082815260200191505060405180910390f35b348015610c3157600080fd5b50610c3a611f57565b6040518082815260200191505060405180910390f35b348015610c5c57600080fd5b50610cb1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f5d565b6040518082815260200191505060405180910390f35b348015610cd357600080fd5b50610cdc611fe4565b6040518082815260200191505060405180910390f35b348015610cfe57600080fd5b50610d33600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fea565b005b348015610d4157600080fd5b50610d4a612142565b604051808215151515815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dc057600080fd5b6000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6040805190810160405280600b81526020017f436576616320546f6b656e00000000000000000000000000000000000000000081525081565b6000604060048101600036905010151515610e6e57600080fd5b6000831480610ef957506000601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b1515610f0457600080fd5b82601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b60085481565b60065481565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561105957600080fd5b8060056000828254019250508190555050565b6008600a0a63d693a4000281565b60005481565b60035481565b600c5481565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156110e457600080fd5b61114f60116000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612155565b60116000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111fd601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261216e565b601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60006060600481016000369050101515156112c357600080fd5b600960009054906101000a900460ff1615156112de57600080fd5b82601160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156113a9575082601260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156113b55750600083115b1561154c5782601160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555082601160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555082601260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150611551565b600091505b509392505050565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156115b157600080fd5b600e54600754101515156115c457600080fd5b6001600460006101000a81548160ff0219169083151502179055506001600960006101000a81548160ff021916908315150217905550565b600d6020528060005260406000206000915054906101000a900460ff1681565b60116020528060005260406000206000915090505481565b600881565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561169157600080fd5b8060066000828254019250508190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561170057600080fd5b6000600960006101000a81548160ff021916908315150217905550565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561177557600080fd5b8060076000828254019250508190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117e457600080fd5b80600a8190555050565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118845780601f1061185957610100808354040283529160200191611884565b820191906000526020600020905b81548152906001019060200180831161186757829003601f168201915b505050505081565b6012602052816000526040600020602052806000526040600020600091509150505481565b80601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156118ff57600080fd5b611948601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612155565b601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061199760005482612155565b60008190555050565b6000601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600460009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a5857600080fd5b6001600460006101000a81548160ff0219169083151502179055506001600960006101000a81548160ff021916908315150217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611aec57600080fd5b80600b8190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b600b5481565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600581526020017f434556414300000000000000000000000000000000000000000000000000000081525081565b6000604060048101600036905010151515611ba157600080fd5b600960009054906101000a900460ff161515611bbc57600080fd5b82601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015611c0b5750600083115b15611d185782601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555082601160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150611d1d565b600091505b5092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d8057600080fd5b6001600960006101000a81548160ff021916908315150217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611df957600080fd5b80600f8190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e5f57600080fd5b80600e8190555050565b6000600a544210158015611e7e5750600b5442105b15611e8c5760019050611e91565b600090505b90565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ef057600080fd5b6001600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60055481565b600f5481565b600a5481565b6000601260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600e5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561204657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561208257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600960009054906101000a900460ff1681565b600082821115151561216357fe5b818303905092915050565b600080828401905083811015151561218257fe5b80915050929150505600a165627a7a7230582084fab6e94a1528f59e7eb4701719eb1b77999c4959ca7ec237470fa62490114d0029000000000000000000000000000000000000000000000000000000005b60f800000000000000000000000000000000000000000000000000000000005e828800",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000005b60f800000000000000000000000000000000000000000000000000000000005e828800"
}