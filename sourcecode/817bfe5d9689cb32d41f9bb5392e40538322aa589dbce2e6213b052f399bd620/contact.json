{
  "address": "0x3caf82e500dc104b370b86ef302bf66f8682bcae",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "VestingContract",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-10\n*/\n\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    function Owned() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        assert(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        require(_newOwner != owner);\n        newOwner = _newOwner;\n    }\n\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        emit OwnerUpdate(owner, newOwner);\n        owner = newOwner;\n        newOwner = 0x0;\n    }\n\n    event OwnerUpdate(address _prevOwner, address _newOwner);\n}\n\ncontract IERC20Token {\n  function totalSupply() constant returns (uint256 totalSupply);\n  function balanceOf(address _owner) constant returns (uint256 balance) {}\n  function transfer(address _to, uint256 _value) returns (bool success) {}\n  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}\n  function approve(address _spender, uint256 _value) returns (bool success) {}\n  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\n\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n\ncontract VestingContract is Owned {\n    \n    address public withdrawalAddress;\n    address public tokenAddress;\n    \n    uint public lastBlockClaimed;\n    uint public blockDelay;\n    uint public level;\n    \n    event ClaimExecuted(uint _amount, uint _blockNumber, address _destination);\n    \n    function VestingContract() public {\n        \n        lastBlockClaimed = 6402520; \n        blockDelay = 175680; \n        level = 1;\n        tokenAddress = 0x574F84108a98c575794F75483d801d1d5DC861a5;\n    }\n    \n    function claimReward() public onlyOwner {\n        require(block.number >= lastBlockClaimed + blockDelay);\n        uint withdrawalAmount;\n        if (IERC20Token(tokenAddress).balanceOf(address(this)) > getReward()) {\n            withdrawalAmount = getReward();\n        }else {\n            withdrawalAmount = IERC20Token(tokenAddress).balanceOf(address(this));\n        }\n        IERC20Token(tokenAddress).transfer(withdrawalAddress, withdrawalAmount);\n        level += 1;\n        lastBlockClaimed += blockDelay;\n        emit ClaimExecuted(withdrawalAmount, block.number, withdrawalAddress);\n    }\n    \n    function getReward() internal returns (uint){\n        if (level == 1) { return  3166639968300000000000000; }\n        else if (level == 2) { return 3166639968300000000000000; }\n        else if (level == 3) { return 3166639968300000000000000; }\n        else if (level == 4) { return 3166639968300000000000000; }\n        else if (level == 5) { return 3166639968300000000000000; }\n        else if (level == 6) { return 3166639968300000000000000; }\n        else if (level == 7) { return 3166639968300000000000000; }\n        else if (level == 8) { return 3166639968300000000000000; }\n        else if (level == 9) { return 3166639968300000000000000; }\n        else if (level == 10) { return 3166639968300000000000000; }\n        else if (level == 11) { return 0;}\n        else {return 0;}\n    }\n    \n    function salvageTokensFromContract(address _tokenAddress, address _to, uint _amount) public onlyOwner {\n        require(_tokenAddress != tokenAddress);\n        \n        IERC20Token(_tokenAddress).transfer(_to, _amount);\n    }\n    \n    //\n    // Setters\n    //\n\n    function setWithdrawalAddress(address _newAddress) public onlyOwner {\n        withdrawalAddress = _newAddress;\n    }\n    \n    function setBlockDelay(uint _newBlockDelay) public onlyOwner {\n        blockDelay = _newBlockDelay;\n    }\n    \n    //\n    // Getters\n    //\n    \n    function getTokenBalance() public constant returns(uint) {\n        return IERC20Token(tokenAddress).balanceOf(address(this));\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"setWithdrawalAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"salvageTokensFromContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockDelay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawalAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastBlockClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newBlockDelay\",\"type\":\"uint256\"}],\"name\":\"setBlockDelay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_destination\",\"type\":\"address\"}],\"name\":\"ClaimExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506261b1d86004819055506202ae40600581905550600160068190555073574f84108a98c575794f75483d801d1d5dc861a5600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611019806100cf6000396000f3006060604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806321b8092e146100d55780636fd5ae151461010e57806379ba50971461013757806382b2e2571461014c5780638da5cb5b146101755780639d76ea58146101ca578063a0929cda1461021f578063b88a802f14610280578063d4ee1d9014610295578063d98f6088146102ea578063f2bcd02214610313578063f2fde38b14610368578063f4d218f9146103a1578063fa67ae5a146103ca575b600080fd5b34156100e057600080fd5b61010c600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506103ed565b005b341561011957600080fd5b610121610489565b6040518082815260200191505060405180910390f35b341561014257600080fd5b61014a61048f565b005b341561015757600080fd5b61015f61066b565b6040518082815260200191505060405180910390f35b341561018057600080fd5b610188610745565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101d557600080fd5b6101dd61076a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561022a57600080fd5b61027e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610790565b005b341561028b57600080fd5b610293610904565b005b34156102a057600080fd5b6102a8610cf2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102f557600080fd5b6102fd610d18565b6040518082815260200191505060405180910390f35b341561031e57600080fd5b610326610d1e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561037357600080fd5b61039f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d44565b005b34156103ac57600080fd5b6103b4610e3c565b6040518082815260200191505060405180910390f35b34156103d557600080fd5b6103eb6004808035906020019091905050610e42565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561044557fe5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104eb57600080fd5b7f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561072957600080fd5b5af1151561073657600080fd5b50505060405180519050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107e857fe5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561084557600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156108e757600080fd5b5af115156108f457600080fd5b5050506040518051905050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561095e57fe5b60055460045401431015151561097357600080fd5b61097b610ea4565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1515610a3757600080fd5b5af11515610a4457600080fd5b505050604051805190501115610a6357610a5c610ea4565b9050610b39565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1515610b1f57600080fd5b5af11515610b2c57600080fd5b5050506040518051905090505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610c1f57600080fd5b5af11515610c2c57600080fd5b505050604051805190505060016006600082825401925050819055506005546004600082825401925050819055507f1db38da2cfe44b50604674302d346eee06a6b387fd6a5d192c31e221fb0676068143600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d9c57fe5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610df857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e9a57fe5b8060058190555050565b600060016006541415610ec4576a029e8fe58b373e515ec0009050610fea565b60026006541415610ee2576a029e8fe58b373e515ec0009050610fea565b60036006541415610f00576a029e8fe58b373e515ec0009050610fea565b60046006541415610f1e576a029e8fe58b373e515ec0009050610fea565b60056006541415610f3c576a029e8fe58b373e515ec0009050610fea565b600680541415610f59576a029e8fe58b373e515ec0009050610fea565b60076006541415610f77576a029e8fe58b373e515ec0009050610fea565b60086006541415610f95576a029e8fe58b373e515ec0009050610fea565b60096006541415610fb3576a029e8fe58b373e515ec0009050610fea565b600a6006541415610fd1576a029e8fe58b373e515ec0009050610fea565b600b6006541415610fe55760009050610fea565b600090505b905600a165627a7a72305820a88ca833c00d5ec113d907fe81f2cc55b8ef9be9897ebfab62188fd483c411490029"
}