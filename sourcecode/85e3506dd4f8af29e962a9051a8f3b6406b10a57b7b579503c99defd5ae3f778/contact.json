{
  "address": "0xed060436267364637dad7fa3809af26b9a221431",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MicroVC",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-17\n*/\n\npragma solidity ^0.4.25;\n\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n          return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n    \n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n    \n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n    \n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract Owned {\n    address public owner;\n    address public newOwner;\n    modifier onlyOwner { require(msg.sender == owner); _; }\n    event OwnerUpdate(address _prevOwner, address _newOwner);\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        require(_newOwner != owner);\n        newOwner = _newOwner;\n    }\n\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        emit OwnerUpdate(owner, newOwner);\n        owner = newOwner;\n        newOwner = 0x0;\n    }\n}\n\n// ERC20 Interface\ncontract ERC20 {\n    function totalSupply() public view returns (uint _totalSupply);\n    function balanceOf(address _owner) public view returns (uint balance);\n    function transfer(address _to, uint _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success);\n    function approve(address _spender, uint _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public view returns (uint remaining);\n    event Transfer(address indexed _from, address indexed _to, uint _value);\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\n}\n\n// ERC20Token\ncontract ERC20Token is ERC20 {\n    using SafeMath for uint256;\n    mapping(address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n    uint256 public totalToken; \n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        if (balances[msg.sender] >= _value && _value > 0) {\n            balances[msg.sender] = balances[msg.sender].sub(_value);\n            balances[_to] = balances[_to].add(_value);\n            emit Transfer(msg.sender, _to, _value);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\n            balances[_from] = balances[_from].sub(_value);\n            balances[_to] = balances[_to].add(_value);\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n            emit Transfer(_from, _to, _value);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return totalToken;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n}\n\ncontract MicroVC is ERC20Token, Owned {\n\n    string  public constant name = \"MicroVC\";\n    string  public constant symbol = \"MVC\";\n    uint256 public constant decimals = 18;\n    uint256 public tokenDestroyed;\n\tevent Burn(address indexed _from, uint256 _tokenDestroyed, uint256 _timestamp);\n\n    constructor() public {\n\t\ttotalToken = 21000000000000000000000000;\n\t\tbalances[msg.sender] = totalToken;\n    }\n\n    function transferAnyERC20Token(address _tokenAddress, address _recipient, uint256 _amount) public onlyOwner returns (bool success) {\n        return ERC20(_tokenAddress).transfer(_recipient, _amount);\n    }\n\n    function burn (uint256 _burntAmount) public returns (bool success) {\n    \trequire(balances[msg.sender] >= _burntAmount && _burntAmount > 0);\n    \tbalances[msg.sender] = balances[msg.sender].sub(_burntAmount);\n    \ttotalToken = totalToken.sub(_burntAmount);\n    \ttokenDestroyed = tokenDestroyed.add(_burntAmount);\n    \trequire (tokenDestroyed <= 21000000000000000000000000);\n    \temit Transfer(address(this), 0x0, _burntAmount);\n    \temit Burn(msg.sender, _burntAmount, block.timestamp);\n    \treturn true;\n\t}\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_burntAmount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenDestroyed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenDestroyed\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060038054600160a060020a031916339081179091556a115eec47f6cf7e35000000600281905560009182526020829052604090912055610a84806100566000396000f3006080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101b757806323b872dd146101de578063313ce5671461020857806342966c681461021d578063626be5671461023557806370a082311461024a57806379ba50971461026b5780638da5cb5b1461028257806395d89b41146102b3578063a9059cbb146102c8578063d493b9ac146102ec578063d4ee1d9014610316578063d9aa18811461032b578063dd62ed3e14610340578063f2fde38b14610367575b600080fd5b34801561010157600080fd5b5061010a610388565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014457818101518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018b57600080fd5b506101a3600160a060020a03600435166024356103bf565b604080519115158252519081900360200190f35b3480156101c357600080fd5b506101cc610462565b60408051918252519081900360200190f35b3480156101ea57600080fd5b506101a3600160a060020a0360043581169060243516604435610468565b34801561021457600080fd5b506101cc6105d8565b34801561022957600080fd5b506101a36004356105dd565b34801561024157600080fd5b506101cc6106f5565b34801561025657600080fd5b506101cc600160a060020a03600435166106fb565b34801561027757600080fd5b50610280610716565b005b34801561028e57600080fd5b506102976107ad565b60408051600160a060020a039092168252519081900360200190f35b3480156102bf57600080fd5b5061010a6107bc565b3480156102d457600080fd5b506101a3600160a060020a03600435166024356107f3565b3480156102f857600080fd5b506101a3600160a060020a03600435811690602435166044356108cc565b34801561032257600080fd5b50610297610996565b34801561033757600080fd5b506101cc6109a5565b34801561034c57600080fd5b506101cc600160a060020a03600435811690602435166109ab565b34801561037357600080fd5b50610280600160a060020a03600435166109d6565b60408051808201909152600781527f4d6963726f564300000000000000000000000000000000000000000000000000602082015281565b60008115806103ef5750336000908152600160209081526040808320600160a060020a0387168452909152902054155b15156103fa57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60025490565b600160a060020a03831660009081526020819052604081205482118015906104b35750600160a060020a03841660009081526001602090815260408083203384529091529020548211155b80156104bf5750600082115b156105cd57600160a060020a0384166000908152602081905260409020546104ed908363ffffffff610a3716565b600160a060020a038086166000908152602081905260408082209390935590851681522054610522908363ffffffff610a4916565b600160a060020a03808516600090815260208181526040808320949094559187168152600182528281203382529091522054610564908363ffffffff610a3716565b600160a060020a03808616600081815260016020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060016105d1565b5060005b9392505050565b601281565b3360009081526020819052604081205482118015906105fc5750600082115b151561060757600080fd5b33600090815260208190526040902054610627908363ffffffff610a3716565b3360009081526020819052604090205560025461064a908363ffffffff610a3716565b600255600554610660908363ffffffff610a4916565b60058190556a115eec47f6cf7e35000000101561067c57600080fd5b60408051838152905160009130917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a360408051838152426020820152815133927f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a928290030190a2506001919050565b60025481565b600160a060020a031660009081526020819052604090205490565b600454600160a060020a0316331461072d57600080fd5b60035460045460408051600160a060020a03938416815292909116602083015280517f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a9281900390910190a1600480546003805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600354600160a060020a031681565b60408051808201909152600381527f4d56430000000000000000000000000000000000000000000000000000000000602082015281565b3360009081526020819052604081205482118015906108125750600082115b156108c45733600090815260208190526040902054610837908363ffffffff610a3716565b3360009081526020819052604080822092909255600160a060020a03851681522054610869908363ffffffff610a4916565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600161045c565b50600061045c565b600354600090600160a060020a031633146108e657600080fd5b83600160a060020a031663a9059cbb84846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561096257600080fd5b505af1158015610976573d6000803e3d6000fd5b505050506040513d602081101561098c57600080fd5b5051949350505050565b600454600160a060020a031681565b60055481565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600354600160a060020a031633146109ed57600080fd5b600354600160a060020a0382811691161415610a0857600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610a4357fe5b50900390565b6000828201838110156105d157fe00a165627a7a72305820a1151c61fed7068bc3d506438893e720b4f0f9e1d95fb728775ec092f0cb8f6d0029"
}