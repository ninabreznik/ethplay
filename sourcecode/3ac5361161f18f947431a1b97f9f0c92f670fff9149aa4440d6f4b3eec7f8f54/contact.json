{
  "address": "0x92fe8a79d123c57f3714f564ef7985184f6e94a6",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Airdrop",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-28\n*/\n\npragma solidity ^0.4.24;\n\ncontract Owned {\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        owner = newOwner;\n    }\n}\n\n\ncontract SafeMath {\n    function mul(uint a, uint b) internal pure returns (uint) {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint a, uint b) internal pure returns (uint) {\n        assert(b > 0);\n        uint c = a / b;\n        assert(a == b * c + a % b);\n        return c;\n    }\n\n    function sub(uint a, uint b) internal pure returns (uint) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint a, uint b) internal pure returns (uint) {\n        uint c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ninterface Qobi {\n    function transfer(address _to, uint256 _value) external returns (bool success);\n    function balanceOf(address _owner) external view returns (uint256 balance);\n}\n\n// for test, not use on production\ncontract Airdrop is SafeMath, Owned {\n    Qobi public token;\n    event CandySent(address user, uint256 amount);\n\n    constructor(address _addressOfToken) public {\n        token = Qobi(_addressOfToken);\n    }\n\n    function sendCandy(address[] dests, uint256[] values) onlyOwner public returns(bool success) {\n        require(dests.length > 0);\n        require(dests.length == values.length);\n\n        // calculate total amount\n        uint256 totalAmount = 0;\n        for (uint i = 0; i < values.length; i++) {\n            totalAmount = add(totalAmount, values[i]);\n        }\n\n        require(totalAmount > 0, \"total amount must > 0\");\n        require(totalAmount < token.balanceOf(address(this)), \"total amount must < this address token balance \");\n\n        for (uint j = 0; j < dests.length; j++) {\n            token.transfer(dests[j], values[j]); // mul decimal\n            emit CandySent(dests[j], values[j]);\n        }\n\n        return true;\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"sendCandy\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_addressOfToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CandySent\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b506040516020806105f2833981016040525160008054600160a060020a0319908116331790915560018054600160a060020a03909316929091169190911790556105938061005f6000396000f3006080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166359b4b44281146100665780638da5cb5b14610108578063f2fde38b14610139578063fc0c546a1461015c575b600080fd5b34801561007257600080fd5b50604080516020600480358082013583810280860185019096528085526100f495369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506101719650505050505050565b604080519115158252519081900360200190f35b34801561011457600080fd5b5061011d6104ed565b60408051600160a060020a039092168252519081900360200190f35b34801561014557600080fd5b5061015a600160a060020a03600435166104fc565b005b34801561016857600080fd5b5061011d610542565b60008054819081908190600160a060020a0316331461018f57600080fd5b855160001061019d57600080fd5b84518651146101ab57600080fd5b60009250600091505b84518210156101eb576101de8386848151811015156101cf57fe5b90602001906020020151610551565b92506001909101906101b4565b6000831161025a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f74616c20616d6f756e74206d757374203e20300000000000000000000000604482015290519081900360640190fd5b600154604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a03909216916370a08231916024808201926020929091908290030181600087803b1580156102c057600080fd5b505af11580156102d4573d6000803e3d6000fd5b505050506040513d60208110156102ea57600080fd5b5051831061037f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f746f74616c20616d6f756e74206d757374203c2074686973206164647265737360448201527f20746f6b656e2062616c616e6365200000000000000000000000000000000000606482015290519081900360840190fd5b5060005b85518110156104e1576001548651600160a060020a039091169063a9059cbb908890849081106103af57fe5b9060200190602002015187848151811015156103c757fe5b906020019060200201516040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561043c57600080fd5b505af1158015610450573d6000803e3d6000fd5b505050506040513d602081101561046657600080fd5b505085517f3286bb2fbaa0fc5c45fe07c1529e6d4235381e3994a961d4cd40c0462243ccff9087908390811061049857fe5b9060200190602002015186838151811015156104b057fe5b602090810290910181015160408051600160a060020a039094168452918301528051918290030190a1600101610383565b50600195945050505050565b600054600160a060020a031681565b600054600160a060020a0316331461051357600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600154600160a060020a031681565b60008282018381101561056057fe5b93925050505600a165627a7a72305820b65a9b63cd020d67eea5f092429fb215ebc623abd80a2ee674c108d4880caa450029000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7",
  "constructorArguments": "000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7"
}