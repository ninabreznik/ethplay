{
  "address": "0x62e9ce974213c04bbf97dee1e15f1a0b9df7274c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "WideEnergy",
  "compilerVersion": "v0.4.11+commit.68ef5810",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-03\n*/\n\npragma solidity ^0.4.11;\n\n\ncontract WideEnergy{\n    \n    uint public constant _totalsupply = 75000000;\n    \n    string public constant symbol = \"WIDE\";\n    string public constant name = \"Wide Energy\";\n    uint8 public constant decimls = 18;\n    \n    mapping(address => uint256) balances;\n    mapping(address => mapping(address => uint256)) allowed;\n    \n    function WideEnergy() {\n       balances[msg.sender] = _totalsupply;\n    }\n\n    function totalSupply() constant returns (uint256 totalSupply) {\n        return _totalsupply;\n    }\n    \n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n    \n    function transfer(address _to, uint256 _value) returns (bool success) {\n       require(\n        balances[msg.sender] >= _value\n        && _value > 0\n        \n        );\n      balances[msg.sender] -= _value;\n      balances[_to] += _value;\n      Transfer(msg.sender, _to, _value);\n      return true;\n      \n        \n        \n    }\n    \n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n        require(\n            allowed[_from][msg.sender] >= _value\n            && balances[_from] >= _value\n            && _value > 0 \n            );\n            balances[_from] -= _value;\n            balances[_to] += _value;\n            allowed[_from][msg.sender] -= _value;\n            Transfer(_from, _to, _value);\n            return true;\n    }\n    \n    function approve(address _spender, uint256 _value) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    \n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n    \n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n\n}",
  "bytecode": "6060604052341561000c57fe5b5b63047868c0600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b610a85806100666000396000f300606060405236156100a2576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100a4578063095ea7b31461013d57806318160ddd1461019457806323b872dd146101ba57806370a0823114610230578063748b95b61461027a57806395d89b41146102a6578063a393dc441461033f578063a9059cbb14610365578063dd62ed3e146103bc575bfe5b34156100ac57fe5b6100b4610425565b6040518080602001828103825283818151815260200191508051906020019080838360008314610103575b805182526020831115610103576020820191506020810190506020830392506100df565b505050905090810190601f16801561012f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014557fe5b61017a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061045f565b604051808215151515815260200191505060405180910390f35b341561019c57fe5b6101a4610552565b6040518082815260200191505060405180910390f35b34156101c257fe5b610216600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061055f565b604051808215151515815260200191505060405180910390f35b341561023857fe5b610264600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506107d9565b6040518082815260200191505060405180910390f35b341561028257fe5b61028a610823565b604051808260ff1660ff16815260200191505060405180910390f35b34156102ae57fe5b6102b6610828565b6040518080602001828103825283818151815260200191508051906020019080838360008314610305575b805182526020831115610305576020820191506020810190506020830392506102e1565b505050905090810190601f1680156103315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561034757fe5b61034f610862565b6040518082815260200191505060405180910390f35b341561036d57fe5b6103a2600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061086a565b604051808215151515815260200191505060405180910390f35b34156103c457fe5b61040f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109d1565b6040518082815260200191505060405180910390f35b604060405190810160405280600b81526020017f5769646520456e6572677900000000000000000000000000000000000000000081525081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3600190505b92915050565b600063047868c090505b90565b600081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015801561062c575081600060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156106385750600082115b15156106445760006000fd5b81600060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190505b9392505050565b6000600060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b601281565b604060405190810160405280600481526020017f574944450000000000000000000000000000000000000000000000000000000081525081565b63047868c081565b600081600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156108bb5750600082115b15156108c75760006000fd5b81600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190505b92915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b929150505600a165627a7a72305820e3f723d3382d8ba34a14631561c383e921c9df4257564fec1834f55afd3458e50029"
}