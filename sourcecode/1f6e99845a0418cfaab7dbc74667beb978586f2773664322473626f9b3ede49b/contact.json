{
  "address": "0x2793a23341012e0970cf478bab08606b56504c3e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenDelegate",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-10\n*/\n\npragma solidity ^0.4.24;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\n\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n\ncontract Administratable is Ownable {\n  using SafeMath for uint256;\n\n  address[] public adminsForIndex;\n  address[] public superAdminsForIndex;\n  mapping (address => bool) public admins;\n  mapping (address => bool) public superAdmins;\n  mapping (address => bool) private processedAdmin;\n  mapping (address => bool) private processedSuperAdmin;\n\n  event AddAdmin(address indexed admin);\n  event RemoveAdmin(address indexed admin);\n  event AddSuperAdmin(address indexed admin);\n  event RemoveSuperAdmin(address indexed admin);\n\n  modifier onlyAdmins {\n    require (msg.sender == owner || superAdmins[msg.sender] || admins[msg.sender]);\n    _;\n  }\n\n  modifier onlySuperAdmins {\n    require (msg.sender == owner || superAdmins[msg.sender]);\n    _;\n  }\n\n  function totalSuperAdminsMapping() public view returns (uint256) {\n    return superAdminsForIndex.length;\n  }\n\n  function addSuperAdmin(address admin) public onlySuperAdmins {\n    require(admin != address(0));\n    superAdmins[admin] = true;\n    if (!processedSuperAdmin[admin]) {\n      superAdminsForIndex.push(admin);\n      processedSuperAdmin[admin] = true;\n    }\n\n    emit AddSuperAdmin(admin);\n  }\n\n  function removeSuperAdmin(address admin) public onlySuperAdmins {\n    require(admin != address(0));\n    superAdmins[admin] = false;\n\n    emit RemoveSuperAdmin(admin);\n  }\n\n  function totalAdminsMapping() public view returns (uint256) {\n    return adminsForIndex.length;\n  }\n\n  function addAdmin(address admin) public onlySuperAdmins {\n    require(admin != address(0));\n    admins[admin] = true;\n    if (!processedAdmin[admin]) {\n      adminsForIndex.push(admin);\n      processedAdmin[admin] = true;\n    }\n\n    emit AddAdmin(admin);\n  }\n\n  function removeAdmin(address admin) public onlySuperAdmins {\n    require(admin != address(0));\n    admins[admin] = false;\n\n    emit RemoveAdmin(admin);\n  }\n}\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n\n/**\n * @title EternalStorage\n * @dev An Administratable contract that can be used as a storage where the variables\n * are stored in a set of mappings indexed by hash names.\n */\ncontract EternalStorage is Administratable {\n\n  struct Storage {\n    mapping(bytes32 => bool) _bool;\n    mapping(bytes32 => int) _int;\n    mapping(bytes32 => uint256) _uint;\n    mapping(bytes32 => string) _string;\n    mapping(bytes32 => address) _address;\n    mapping(bytes32 => bytes) _bytes;\n  }\n\n  Storage internal s;\n\n  /**\n   * @dev Allows admins to set a value for a boolean variable.\n   * @param h The keccak256 hash of the variable name\n   * @param v The value to be stored\n   */\n  function setBoolean(bytes32 h, bool v) public onlyAdmins {\n    s._bool[h] = v;\n  }\n\n  /**\n   * @dev Allows admins to set a value for a int variable.\n   * @param h The keccak256 hash of the variable name\n   * @param v The value to be stored\n   */\n  function setInt(bytes32 h, int v) public onlyAdmins {\n    s._int[h] = v;\n  }\n\n  /**\n   * @dev Allows admins to set a value for a boolean variable.\n   * @param h The keccak256 hash of the variable name\n   * @param v The value to be stored\n   */\n  function setUint(bytes32 h, uint256 v) public onlyAdmins {\n    s._uint[h] = v;\n  }\n\n  /**\n   * @dev Allows admins to set a value for a address variable.\n   * @param h The keccak256 hash of the variable name\n   * @param v The value to be stored\n   */\n  function setAddress(bytes32 h, address v) public onlyAdmins {\n    s._address[h] = v;\n  }\n\n  /**\n   * @dev Allows admins to set a value for a string variable.\n   * @param h The keccak256 hash of the variable name\n   * @param v The value to be stored\n   */\n  function setString(bytes32 h, string v) public onlyAdmins {\n    s._string[h] = v;\n  }\n\n  /**\n   * @dev Allows the owner to set a value for a bytes variable.\n   * @param h The keccak256 hash of the variable name\n   * @param v The value to be stored\n   */\n  function setBytes(bytes32 h, bytes v) public onlyAdmins {\n    s._bytes[h] = v;\n  }\n\n  /**\n   * @dev Get the value stored of a boolean variable by the hash name\n   * @param h The keccak256 hash of the variable name\n   */\n  function getBoolean(bytes32 h) public view returns (bool){\n    return s._bool[h];\n  }\n\n  /**\n   * @dev Get the value stored of a int variable by the hash name\n   * @param h The keccak256 hash of the variable name\n   */\n  function getInt(bytes32 h) public view returns (int){\n    return s._int[h];\n  }\n\n  /**\n   * @dev Get the value stored of a uint variable by the hash name\n   * @param h The keccak256 hash of the variable name\n   */\n  function getUint(bytes32 h) public view returns (uint256){\n    return s._uint[h];\n  }\n\n  /**\n   * @dev Get the value stored of a address variable by the hash name\n   * @param h The keccak256 hash of the variable name\n   */\n  function getAddress(bytes32 h) public view returns (address){\n    return s._address[h];\n  }\n\n  /**\n   * @dev Get the value stored of a string variable by the hash name\n   * @param h The keccak256 hash of the variable name\n   */\n  function getString(bytes32 h) public view returns (string){\n    return s._string[h];\n  }\n\n  /**\n   * @dev Get the value stored of a bytes variable by the hash name\n   * @param h The keccak256 hash of the variable name\n   */\n  function getBytes(bytes32 h) public view returns (bytes){\n    return s._bytes[h];\n  }\n}\n\n\nlibrary TokenLib {\n  using SafeMath for uint256;\n\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n  /* struct TokenStorage { address storage} */\n\n  function transfer(address _storage, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    uint256 senderBalance = EternalStorage(_storage).getUint(keccak256(abi.encodePacked('balance', msg.sender)));\n    require(_value <= senderBalance);\n\n    uint256 receiverBalance = balanceOf(_storage, _to);\n    EternalStorage(_storage).setUint(keccak256(abi.encodePacked('balance', msg.sender)), senderBalance.sub(_value));\n    EternalStorage(_storage).setUint(keccak256(abi.encodePacked('balance', _to)), receiverBalance.add(_value));\n    emit Transfer(msg.sender, _to, _value);\n\n    return true;\n  }\n\n  function mint(address _storage, address _to, uint256 _value) public {\n    EternalStorage(_storage).setUint(keccak256(abi.encodePacked('balance', _to)), _value);\n    EternalStorage(_storage).setUint(keccak256(abi.encodePacked('totalSupply')), _value);\n  }\n\n  function setTotalSupply(address _storage, uint256 _totalSupply) public {\n    EternalStorage(_storage).setUint(keccak256(abi.encodePacked('totalSupply')), _totalSupply);\n  }\n\n  function totalSupply(address _storage) public view returns (uint256) {\n    return EternalStorage(_storage).getUint(keccak256(abi.encodePacked('totalSupply')));\n  }\n\n\n  function balanceOf(address _storage, address _owner) public view returns (uint256 balance) {\n    return EternalStorage(_storage).getUint(keccak256(abi.encodePacked('balance', _owner)));\n  }\n\n  function getAllowance(address _storage, address _owner, address _spender) public view returns (uint256) {\n    return EternalStorage(_storage).getUint(keccak256(abi.encodePacked('allowance', _owner, _spender)));\n  }\n\n  function setAllowance(address _storage, address _owner, address _spender, uint256 _allowance) public {\n    EternalStorage(_storage).setUint(keccak256(abi.encodePacked('allowance', _owner, _spender)), _allowance);\n  }\n\n  function allowance(address _storage, address _owner, address _spender) public view  returns (uint256) {\n    return getAllowance(_storage, _owner, _spender);\n  }\n\n  function transferFrom(address _storage, address _from, address _to, uint256 _value) public  returns (bool) {\n    require(_to != address(0));\n    require(_from != msg.sender);\n    require(_value > 0);\n    uint256 senderBalance = balanceOf(_storage, _from);\n    require(senderBalance >= _value);\n\n    uint256 allowanceValue = allowance(_storage, _from, msg.sender);\n    require(allowanceValue >= _value);\n\n    uint256 receiverBalance = balanceOf(_storage, _to);\n    EternalStorage(_storage).setUint(keccak256(abi.encodePacked('balance', _from)), senderBalance.sub(_value));\n    EternalStorage(_storage).setUint(keccak256(abi.encodePacked('balance', _to)), receiverBalance.add(_value));\n\n    setAllowance(_storage, _from, msg.sender, allowanceValue.sub(_value));\n    emit Transfer(_from, _to, _value);\n\n    return true;\n  }\n\n  function approve(address _storage, address _spender, uint256 _value) public returns (bool) {\n    require(_spender != address(0));\n    require(msg.sender != _spender);\n\n    setAllowance(_storage, msg.sender, _spender, _value);\n\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function increaseApproval(address _storage, address _spender, uint256 _addedValue) public returns (bool) {\n    return approve(_storage, _spender, getAllowance(_storage, msg.sender, _spender).add(_addedValue));\n  }\n\n  function decreaseApproval(address _storage, address _spender, uint256 _subtractedValue) public returns (bool) {\n    uint256 oldValue = getAllowance(_storage, msg.sender, _spender);\n\n    if (_subtractedValue > oldValue) {\n      return approve(_storage, _spender, 0);\n    } else {\n      return approve(_storage, _spender, oldValue.sub(_subtractedValue));\n    }\n  }\n}\n\n\n\n\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\ncontract UpgradableToken is ERC20, Ownable {\n  address public predecessor;\n  address public successor;\n  string public version;\n\n  event UpgradedTo(address indexed successor);\n  event UpgradedFrom(address indexed predecessor);\n\n  modifier unlessUpgraded() {\n    require (msg.sender == successor || successor == address(0));\n    _;\n  }\n\n  modifier isUpgraded() {\n    require (successor != address(0));\n    _;\n  }\n\n  modifier hasPredecessor() {\n    require (predecessor != address(0));\n    _;\n  }\n\n  function isDeprecated() public view returns (bool) {\n    return successor != address(0);\n  }\n\n  constructor(string _version) public {\n      version = _version;\n  }\n\n  function upgradeTo(address _successor) public onlyOwner unlessUpgraded returns (bool){\n    require(_successor != address(0));\n\n    uint remainingContractBalance = balanceOf(this);\n\n    if (remainingContractBalance > 0) {\n      this.transfer(_successor, remainingContractBalance);\n    }\n    successor = _successor;\n    emit UpgradedTo(_successor);\n    return true;\n  }\n\n  function upgradedFrom(address _predecessor) public onlyOwner returns (bool) {\n    require(_predecessor != address(0));\n\n    predecessor = _predecessor;\n\n    emit UpgradedFrom(_predecessor);\n\n    return true;\n  }\n}\n\n\n\ncontract Token is Ownable {\n  event UpgradedTo(address indexed implementation);\n\n  address internal _implementation;\n\n  function implementation() public view returns (address) {\n    return _implementation;\n  }\n\n  function upgradeTo(address impl) public onlyOwner {\n    require(_implementation != impl);\n    _implementation = impl;\n    emit UpgradedTo(impl);\n  }\n\n  function () payable public {\n    address _impl = implementation();\n    require(_impl != address(0));\n    bytes memory data = msg.data;\n\n    assembly {\n      let result := delegatecall(gas, _impl, add(data, 0x20), mload(data), 0, 0)\n      let size := returndatasize\n      let ptr := mload(0x40)\n      returndatacopy(ptr, 0, size)\n      switch result\n      case 0 { revert(ptr, size) }\n      default { return(ptr, size) }\n    }\n  }\n}\n\n\n/**\n * @title DetailedERC20 token\n * @dev The decimals are only for visualization purposes.\n * All the operations are done using the smallest and indivisible token unit,\n * just as on Ethereum all the operations are done in wei.\n */\ncontract DetailedERC20 is ERC20 {\n  string public name;\n  string public symbol;\n  uint8 public decimals;\n\n  constructor(string _name, string _symbol, uint8 _decimals) public {\n    name = _name;\n    symbol = _symbol;\n    decimals = _decimals;\n  }\n}\n\n\n\ncontract TokenDelegate is UpgradableToken, DetailedERC20, Pausable {\n    using TokenLib for address;\n\n    address tokenStorage;\n\n    constructor(string _name, string _symbol, uint8 _decimals, address _storage, string _version)\n        DetailedERC20(_name, _symbol, _decimals) UpgradableToken(_version) public {\n        setStorage(_storage);\n    }\n\n    function setTotalSupply(uint256 _totalSupply) public onlyOwner {\n        tokenStorage.setTotalSupply(_totalSupply);\n    }\n\n    function setStorage(address _storage) public onlyOwner unlessUpgraded whenNotPaused {\n        tokenStorage = _storage;\n    }\n\n    function totalSupply() public view returns (uint){\n        return tokenStorage.totalSupply();\n    }\n\n    function mint(address _to, uint _value) public onlyOwner unlessUpgraded whenNotPaused {\n        tokenStorage.mint(_to, _value);\n    }\n\n    function balanceOf(address _owner) public view returns (uint256) {\n        return tokenStorage.balanceOf(_owner);\n    }\n\n    function transfer(address _to, uint _value) public unlessUpgraded whenNotPaused returns(bool) {\n        return tokenStorage.transfer(_to, _value);\n    }\n\n    function approve(address _to, uint _value) public unlessUpgraded whenNotPaused returns(bool) {\n        return tokenStorage.approve(_to, _value);\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return tokenStorage.allowance(_owner, _spender);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public unlessUpgraded whenNotPaused returns (bool) {\n        return tokenStorage.transferFrom(_from, _to, _value);\n    }\n\n    function increaseApproval(address _spender, uint256 _addedValue) public unlessUpgraded whenNotPaused returns (bool) {\n        return tokenStorage.increaseApproval(_spender, _addedValue);\n    }\n\n    function decreaseApproval(address _spender, uint256 _subtractedValue) public unlessUpgraded whenNotPaused returns (bool) {\n        return tokenStorage.decreaseApproval(_spender, _subtractedValue);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_successor\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_predecessor\",\"type\":\"address\"}],\"name\":\"upgradedFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"successor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_storage\",\"type\":\"address\"}],\"name\":\"setStorage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"predecessor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isDeprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"name\":\"setTotalSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_storage\",\"type\":\"address\"},{\"name\":\"_version\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"successor\",\"type\":\"address\"}],\"name\":\"UpgradedTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"predecessor\",\"type\":\"address\"}],\"name\":\"UpgradedFrom\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040526006805461ff00191690553480156200001c57600080fd5b5060405162001562380380620015628339810160409081528151602080840151928401516060850151608086015160008054600160a060020a0319163317905586018051948701969590950194919390928691869186918591620000869160039184019062000171565b505082516200009d90600490602086019062000171565b508151620000b390600590602085019062000171565b506006805460ff191660ff9290921691909117905550620000df905082640100000000620000ea810204565b505050505062000216565b600054600160a060020a031633146200010257600080fd5b600254600160a060020a0316331480620001255750600254600160a060020a0316155b15156200013157600080fd5b600654610100900460ff16156200014757600080fd5b60068054600160a060020a0390921662010000026201000060b060020a0319909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001b457805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e4578251825591602001919060010190620001c7565b50620001f2929150620001f6565b5090565b6200021391905b80821115620001f25760008155600101620001fd565b90565b61133c80620002266000396000f3006080604052600436106101535763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610158578063095ea7b3146101e257806318160ddd1461021a57806323b872dd14610241578063313ce5671461026b5780633659cfe6146102965780633f4ba83a146102b757806340c10f19146102ce57806354fd4d50146102f25780635c975abb14610307578063661884631461031c57806366e3cb68146103405780636ff968c31461036157806370a0823114610392578063715018a6146103b35780638456cb59146103c85780638da5cb5b146103dd5780639137c1a7146103f257806395d89b4114610413578063a9059cbb14610428578063b719d0321461044c578063c717823014610461578063d73dd62314610476578063dd62ed3e1461049a578063f2fde38b146104c1578063f7ea7a3d146104e2575b600080fd5b34801561016457600080fd5b5061016d6104fa565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a757818101518382015260200161018f565b50505050905090810190601f1680156101d45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ee57600080fd5b50610206600160a060020a0360043516602435610588565b604080519115158252519081900360200190f35b34801561022657600080fd5b5061022f61068b565b60408051918252519081900360200190f35b34801561024d57600080fd5b50610206600160a060020a036004358116906024351660443561073b565b34801561027757600080fd5b50610280610847565b6040805160ff9092168252519081900360200190f35b3480156102a257600080fd5b50610206600160a060020a0360043516610850565b3480156102c357600080fd5b506102cc6109b2565b005b3480156102da57600080fd5b506102cc600160a060020a0360043516602435610a15565b3480156102fe57600080fd5b5061016d610b15565b34801561031357600080fd5b50610206610b70565b34801561032857600080fd5b50610206600160a060020a0360043516602435610b7e565b34801561034c57600080fd5b50610206600160a060020a0360043516610c4e565b34801561036d57600080fd5b50610376610cd7565b60408051600160a060020a039092168252519081900360200190f35b34801561039e57600080fd5b5061022f600160a060020a0360043516610ce6565b3480156103bf57600080fd5b506102cc610da0565b3480156103d457600080fd5b506102cc610e0c565b3480156103e957600080fd5b50610376610e72565b3480156103fe57600080fd5b506102cc600160a060020a0360043516610e81565b34801561041f57600080fd5b5061016d610f11565b34801561043457600080fd5b50610206600160a060020a0360043516602435610f6c565b34801561045857600080fd5b5061037661103c565b34801561046d57600080fd5b5061020661104b565b34801561048257600080fd5b50610206600160a060020a036004351660243561105c565b3480156104a657600080fd5b5061022f600160a060020a036004358116906024351661112c565b3480156104cd57600080fd5b506102cc600160a060020a03600435166111bc565b3480156104ee57600080fd5b506102cc6004356111df565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105805780601f1061055557610100808354040283529160200191610580565b820191906000526020600020905b81548152906001019060200180831161056357829003601f168201915b505050505081565b600254600090600160a060020a03163314806105ad5750600254600160a060020a0316155b15156105b857600080fd5b600654610100900460ff16156105cd57600080fd5b600654604080517fe1f21c67000000000000000000000000000000000000000000000000000000008152600160a060020a03620100009093048316600482015291851660248301526044820184905251731ee9faa44d313a1d2e4bfa135ffb15c6f0da8a279163e1f21c67916064808301926020929190829003018186803b15801561065857600080fd5b505af415801561066c573d6000803e3d6000fd5b505050506040513d602081101561068257600080fd5b50519392505050565b600654604080517fe4dc2aa400000000000000000000000000000000000000000000000000000000815262010000909204600160a060020a0316600483015251600091731ee9faa44d313a1d2e4bfa135ffb15c6f0da8a279163e4dc2aa491602480820192602092909190829003018186803b15801561070a57600080fd5b505af415801561071e573d6000803e3d6000fd5b505050506040513d602081101561073457600080fd5b5051905090565b600254600090600160a060020a03163314806107605750600254600160a060020a0316155b151561076b57600080fd5b600654610100900460ff161561078057600080fd5b600654604080517f15dacbea000000000000000000000000000000000000000000000000000000008152600160a060020a036201000090930483166004820152868316602482015291851660448301526064820184905251731ee9faa44d313a1d2e4bfa135ffb15c6f0da8a27916315dacbea916084808301926020929190829003018186803b15801561081357600080fd5b505af4158015610827573d6000803e3d6000fd5b505050506040513d602081101561083d57600080fd5b5051949350505050565b60065460ff1681565b600080548190600160a060020a0316331461086a57600080fd5b600254600160a060020a031633148061088c5750600254600160a060020a0316155b151561089757600080fd5b600160a060020a03831615156108ac57600080fd5b6108b530610ce6565b9050600081111561095557604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0385166004820152602481018390529051309163a9059cbb9160448083019260209291908290030181600087803b15801561092857600080fd5b505af115801561093c573d6000803e3d6000fd5b505050506040513d602081101561095257600080fd5b50505b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0385169081179091556040517f1466d4e2c17718222b4ada7f7cbc8907912d6083fdaf34382703d6a9602eef5590600090a250600192915050565b600054600160a060020a031633146109c957600080fd5b600654610100900460ff1615156109df57600080fd5b6006805461ff00191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600054600160a060020a03163314610a2c57600080fd5b600254600160a060020a0316331480610a4e5750600254600160a060020a0316155b1515610a5957600080fd5b600654610100900460ff1615610a6e57600080fd5b600654604080517fc6c3bbe6000000000000000000000000000000000000000000000000000000008152600160a060020a03620100009093048316600482015291841660248301526044820183905251731ee9faa44d313a1d2e4bfa135ffb15c6f0da8a279163c6c3bbe6916064808301926000929190829003018186803b158015610af957600080fd5b505af4158015610b0d573d6000803e3d6000fd5b505050505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105805780601f1061055557610100808354040283529160200191610580565b600654610100900460ff1681565b600254600090600160a060020a0316331480610ba35750600254600160a060020a0316155b1515610bae57600080fd5b600654610100900460ff1615610bc357600080fd5b600654604080517ff019c267000000000000000000000000000000000000000000000000000000008152600160a060020a03620100009093048316600482015291851660248301526044820184905251731ee9faa44d313a1d2e4bfa135ffb15c6f0da8a279163f019c267916064808301926020929190829003018186803b15801561065857600080fd5b60008054600160a060020a03163314610c6657600080fd5b600160a060020a0382161515610c7b57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384169081179091556040517f75c09cedaf6c35dc577b0fd0a8c77c569c84be03eae895084c7c60788eac7d6490600090a2506001919050565b600254600160a060020a031681565b600654604080517ff7888aec000000000000000000000000000000000000000000000000000000008152600160a060020a036201000090930483166004820152918316602483015251600091731ee9faa44d313a1d2e4bfa135ffb15c6f0da8a279163f7888aec91604480820192602092909190829003018186803b158015610d6e57600080fd5b505af4158015610d82573d6000803e3d6000fd5b505050506040513d6020811015610d9857600080fd5b505192915050565b600054600160a060020a03163314610db757600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a03163314610e2357600080fd5b600654610100900460ff1615610e3857600080fd5b6006805461ff0019166101001790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600054600160a060020a031681565b600054600160a060020a03163314610e9857600080fd5b600254600160a060020a0316331480610eba5750600254600160a060020a0316155b1515610ec557600080fd5b600654610100900460ff1615610eda57600080fd5b60068054600160a060020a03909216620100000275ffffffffffffffffffffffffffffffffffffffff000019909216919091179055565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105805780601f1061055557610100808354040283529160200191610580565b600254600090600160a060020a0316331480610f915750600254600160a060020a0316155b1515610f9c57600080fd5b600654610100900460ff1615610fb157600080fd5b600654604080517fbeabacc8000000000000000000000000000000000000000000000000000000008152600160a060020a03620100009093048316600482015291851660248301526044820184905251731ee9faa44d313a1d2e4bfa135ffb15c6f0da8a279163beabacc8916064808301926020929190829003018186803b15801561065857600080fd5b600154600160a060020a031681565b600254600160a060020a0316151590565b600254600090600160a060020a03163314806110815750600254600160a060020a0316155b151561108c57600080fd5b600654610100900460ff16156110a157600080fd5b600654604080517fbcdd6121000000000000000000000000000000000000000000000000000000008152600160a060020a03620100009093048316600482015291851660248301526044820184905251731ee9faa44d313a1d2e4bfa135ffb15c6f0da8a279163bcdd6121916064808301926020929190829003018186803b15801561065857600080fd5b600654604080517f927da105000000000000000000000000000000000000000000000000000000008152600160a060020a0362010000909304831660048201528483166024820152918316604483015251600091731ee9faa44d313a1d2e4bfa135ffb15c6f0da8a279163927da10591606480820192602092909190829003018186803b15801561065857600080fd5b600054600160a060020a031633146111d357600080fd5b6111dc81611293565b50565b600054600160a060020a031633146111f657600080fd5b600654604080517f79ba7f3900000000000000000000000000000000000000000000000000000000815262010000909204600160a060020a031660048301526024820183905251731ee9faa44d313a1d2e4bfa135ffb15c6f0da8a27916379ba7f39916044808301926000929190829003018186803b15801561127857600080fd5b505af415801561128c573d6000803e3d6000fd5b5050505050565b600160a060020a03811615156112a857600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820680ecf2bbd309216d7921b24b986df9892af14fcc74bc5541cbc5ef524100e89002900000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000306b5cf6f9ee067b676a3a6be0dff0b5df2f629f0000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000b4879706572627269646765000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000348425800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003312e300000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000306b5cf6f9ee067b676a3a6be0dff0b5df2f629f0000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000b4879706572627269646765000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000348425800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003312e300000000000000000000000000000000000000000000000000000000000",
  "libraries": [
    {
      "name": "TokenLib",
      "address": "0x1ee9faa44d313a1d2e4bfa135ffb15c6f0da8a27"
    }
  ]
}