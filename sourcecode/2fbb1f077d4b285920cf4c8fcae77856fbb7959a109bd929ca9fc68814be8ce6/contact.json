{
  "address": "0x1295b55fa04fbac6d9e7c351ecb3486e88129027",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "LightCoinToken",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-29\n*/\n\npragma solidity 0.4.18;\n\n/**\n\n * Math operations with safety checks\n\n */\n\ncontract BaseSafeMath {\n\n\n    /*\n    standard uint256 functions\n     */\n\n\n\n    function add(uint256 a, uint256 b) internal pure\n\n    returns (uint256) {\n\n        uint256 c = a + b;\n\n        assert(c >= a);\n\n        return c;\n\n    }\n\n\n    function sub(uint256 a, uint256 b) internal pure\n\n    returns (uint256) {\n\n        assert(b <= a);\n\n        return a - b;\n\n    }\n\n\n    function mul(uint256 a, uint256 b) internal pure\n\n    returns (uint256) {\n\n        uint256 c = a * b;\n\n        assert(a == 0 || c / a == b);\n\n        return c;\n\n    }\n\n\n    function div(uint256 a, uint256 b) internal pure\n\n    returns (uint256) {\n\n\t    assert( b > 0 );\n\t\t\n        uint256 c = a / b;\n\n        return c;\n\n    }\n\n\n    function min(uint256 x, uint256 y) internal pure\n\n    returns (uint256 z) {\n\n        return x <= y ? x : y;\n\n    }\n\n\n    function max(uint256 x, uint256 y) internal pure\n\n    returns (uint256 z) {\n\n        return x >= y ? x : y;\n\n    }\n\n\n\n    /*\n\n    uint128 functions\n\n     */\n\n\n\n    function madd(uint128 a, uint128 b) internal pure\n\n    returns (uint128) {\n\n        uint128 c = a + b;\n\n        assert(c >= a);\n\n        return c;\n\n    }\n\n\n    function msub(uint128 a, uint128 b) internal pure\n\n    returns (uint128) {\n\n        assert(b <= a);\n\n        return a - b;\n\n    }\n\n\n    function mmul(uint128 a, uint128 b) internal pure\n\n    returns (uint128) {\n\n        uint128 c = a * b;\n\n        assert(a == 0 || c / a == b);\n\n        return c;\n\n    }\n\n\n    function mdiv(uint128 a, uint128 b) internal pure\n\n    returns (uint128) {\n\n\t    assert( b > 0 );\n\t\n        uint128 c = a / b;\n\n        return c;\n\n    }\n\n\n    function mmin(uint128 x, uint128 y) internal pure\n\n    returns (uint128 z) {\n\n        return x <= y ? x : y;\n\n    }\n\n\n    function mmax(uint128 x, uint128 y) internal pure\n\n    returns (uint128 z) {\n\n        return x >= y ? x : y;\n\n    }\n\n\n\n    /*\n\n    uint64 functions\n\n     */\n\n\n\n    function miadd(uint64 a, uint64 b) internal pure\n\n    returns (uint64) {\n\n        uint64 c = a + b;\n\n        assert(c >= a);\n\n        return c;\n\n    }\n\n\n    function misub(uint64 a, uint64 b) internal pure\n\n    returns (uint64) {\n\n        assert(b <= a);\n\n        return a - b;\n\n    }\n\n\n    function mimul(uint64 a, uint64 b) internal pure\n\n    returns (uint64) {\n\n        uint64 c = a * b;\n\n        assert(a == 0 || c / a == b);\n\n        return c;\n\n    }\n\n\n    function midiv(uint64 a, uint64 b) internal pure\n\n    returns (uint64) {\n\n\t    assert( b > 0 );\n\t\n        uint64 c = a / b;\n\n        return c;\n\n    }\n\n\n    function mimin(uint64 x, uint64 y) internal pure\n\n    returns (uint64 z) {\n\n        return x <= y ? x : y;\n\n    }\n\n\n    function mimax(uint64 x, uint64 y) internal pure\n\n    returns (uint64 z) {\n\n        return x >= y ? x : y;\n\n    }\n\n\n}\n\n\n// Abstract contract for the full ERC 20 Token standard\n\n// https://github.com/ethereum/EIPs/issues/20\n\n\n\ncontract BaseERC20 {\n\n    // Public variables of the token\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    // 18 decimals is the strongly suggested default, avoid changing it\n    uint256 public totalSupply;\n\n    // This creates an array with all balances\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowed;\n\n    // This generates a public event on the blockchain that will notify clients\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\t\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    /**\n     * Internal transfer, only can be called by this contract\n     */\n    function _transfer(address _from, address _to, uint _value) internal;\n\n    /**\n     * Transfer tokens\n     *\n     * Send `_value` tokens to `_to` from your account\n     *\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    /**\n     * Transfer tokens from other address\n     *\n     * Send `_value` tokens to `_to` on behalf of `_from`\n     *\n     * @param _from The address of the sender\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n\n    /**\n     * Set allowance for other address\n     *\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf\n     *\n     * @param _spender The address authorized to spend\n     * @param _value the max amount they can spend\n     */\n    function approve(address _spender, uint256 _value) public returns (bool success);\n}\n\n/** \n   * @title Ownable \n   * @dev The Ownable contract has an owner address, and provides basic authorization control \n   * functions, this simplifies the implementation of \n   \"user permissions\". \n*/ \n\ncontract Ownable { \n\taddress public publishOwner; \n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner); \n\t\n\t/**\n\t   * @dev The Ownable constructor sets the original `owner` of the contract to the sender \n\t   * account. \n\t   */\n\tfunction Ownable() public {\n\t\tpublishOwner = msg.sender; \n\t} \n\t\n\t/**\n\t   * @dev Throws if called by any account other than the owner. \n\t   */ \n\tmodifier onlyOwner() { \n\t\trequire(msg.sender == publishOwner); \n\t\t_; \n\t}\n \n\t/** \n      * @dev Allows the current owner to transfer control of the contract to a newOwner. \n      * @param newOwner The address to transfer ownership to. \n      */ \n\tfunction transferOwnership(address newOwner) onlyOwner public { \n\t\trequire(newOwner != address(0)); \n\t\tOwnershipTransferred(publishOwner, newOwner); \n\t\tpublishOwner = newOwner; \n\t} \n} \n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable { \n\tevent Pause(); \n\tevent Unpause(); \n\tbool public paused = false;\n \n\t/** \n      * @dev Modifier to make a function callable only when the contract is not paused. \n      */\n\tmodifier whenNotPaused() \n\t{ \n\t\trequire(!paused); \n\t\t_; \n\t}\n\t /** \n       * @dev Modifier to make a function callable only when the contract is paused. \n       */\n\tmodifier whenPaused() { \n\t\trequire(paused); \n\t\t_;\n\t} \n\n\t/** \n      * @dev called by the owner to pause, triggers stopped state \n      */ \n\tfunction pause() onlyOwner whenNotPaused public { \n\t\tpaused = true; \n\t\tPause(); \n\t} \n\n\t/** \n      * @dev called by the owner to unpause, returns to normal state \n      */ \n\tfunction unpause() onlyOwner whenPaused public {\n\t\tpaused = false; \n\t\tUnpause(); \n\t} \n} \n\n\n/**\n\n * @title Standard ERC20 token\n\n *\n\n * @dev Implementation of the basic standard token.\n\n * @dev https://github.com/ethereum/EIPs/issues/20\n\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n\n */\n\ncontract LightCoinToken is BaseERC20, BaseSafeMath, Pausable {\n\n    //The solidity created time\n\taddress public owner;\n\taddress public lockOwner;\n\tuint256 public lockAmount ;\n\tuint256 public startTime ;\n    function LightCoinToken() public {\n\t\towner = 0x55ae8974743DB03761356D703A9cfc0F24045ebb;\n\t\tlockOwner = 0x07d4C8CC52BB7c4AB46A1A65DCEEdC1ab29aBDd6;\n\t\tstartTime = 1515686400;\n        name = \"Lightcoin\";\n        symbol = \"Light\";\n        decimals = 8;\n        ///totalSupply = 21000000000000000000;\n        totalSupply = 2.1e19;\n\t\tbalanceOf[owner] = totalSupply * 90 /100;\n\t\tlockAmount = totalSupply * 10 / 100 ;\n\t    Transfer(address(0), owner, balanceOf[owner]);\n    }\n\n\t/// @param _owner The address from which the balance will be retrieved\n    /// @return The balance\n    function getBalanceOf(address _owner) public constant returns (uint256 balance) {\n\t\t return balanceOf[_owner];\n\t}\n\t\n    function _transfer(address _from, address _to, uint256 _value) internal {\n        // Prevent transfer to 0x0 address. Use burn() instead\n        require(_to != 0x0);\n\n        // Save this for an assertion in the future\n        uint previousBalances = add(balanceOf[_from], balanceOf[_to]);\n\t\t\n        // Subtract from the sender\n        balanceOf[_from] = sub(balanceOf[_from], _value);\n        // Add the same to the recipient\n        balanceOf[_to] = add(balanceOf[_to], _value);\n\t\t\n\t\t// Asserts are used to use static analysis to find bugs in your code. They should never fail\n        assert(add(balanceOf[_from], balanceOf[_to]) == previousBalances);\n\t\t\n        Transfer(_from, _to, _value);\n\n    }\n\n    function transfer(address _to, uint256 _value) public whenNotPaused returns (bool success)  {\n        _transfer(msg.sender, _to, _value);\n\t\treturn true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool success) {\n        // Check allowance\n        allowed[_from][msg.sender] = sub(allowed[_from][msg.sender], _value);\n\t\t\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public\n    returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n\t\t\n\t\tApproval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /// @param _owner The address of the account owning tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n\t}\n\t\n\tfunction releaseToken() public{\n\t   uint256 releaseBegin = add(startTime,  2 * 365 * 86400);\n\t   require(now >= releaseBegin );\n\t   \n\t   uint256 interval = sub(now, releaseBegin);\n       uint256 i = div(interval, (0.5 * 365 * 86400));\n       if (i > 3) \n       {\n            i = 3;\n       }\n\n\t   uint256 releasevalue = div(totalSupply, 40);\n\t   uint256 remainInterval = sub(3, i);\n\t   \n\t   require(lockAmount > mul(remainInterval, releasevalue));\n\t   lockAmount = sub(lockAmount, releasevalue);\n\t   \n\t   balanceOf[lockOwner] = add( balanceOf[lockOwner],  releasevalue);\n\t   Transfer(address(0), lockOwner, releasevalue);\n    }\n    \n    function () public payable{ revert(); }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publishOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526006805460a060020a60ff0219169055341561001f57600080fd5b60068054600160a060020a033316600160a060020a0319918216179091556007805482167355ae8974743db03761356d703a9cfc0f24045ebb179055600880549091167307d4c8cc52bb7c4ab46a1a65dceedc1ab29abdd6179055635a578a00600a5560408051908101604052600981527f4c69676874636f696e0000000000000000000000000000000000000000000000602082015260009080516100c99291602001906101b6565b5060408051908101604052600581527f4c69676874000000000000000000000000000000000000000000000000000000602082015260019080516101119291602001906101b6565b506002805460ff191660081790556801236efcbcbb340000600355606468667504da59d0480000600754600160a060020a031660009081526004602052604090209190049055600354606490600a0204600955600754600160a060020a0316600081815260046020526040808220547fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915190815260200160405180910390a3610251565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101f757805160ff1916838001178555610224565b82800160010185558215610224579182015b82811115610224578251825591602001919060010190610209565b50610230929150610234565b5090565b61024e91905b80821115610230576000815560010161023a565b90565b610b62806102606000396000f30060606040526004361061011c5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610121578063095ea7b3146101ab57806318160ddd146101e157806323b872dd14610206578063313ce5671461022e5780633f4ba83a146102575780635c6581651461026c5780635c975abb1461029157806369cd61be146102a457806370a08231146102d357806378e97925146102f25780638456cb59146103055780638da5cb5b1461031857806395d89b411461032b5780639b96eece1461033e578063a9059cbb1461035d578063d8df5dc11461037f578063dd62ed3e14610392578063e60fb021146103b7578063ec715a31146103ca578063f2fde38b146103dd575b600080fd5b341561012c57600080fd5b6101346103fc565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610170578082015183820152602001610158565b50505050905090810190601f16801561019d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101b657600080fd5b6101cd600160a060020a036004351660243561049a565b604051901515815260200160405180910390f35b34156101ec57600080fd5b6101f4610506565b60405190815260200160405180910390f35b341561021157600080fd5b6101cd600160a060020a036004358116906024351660443561050c565b341561023957600080fd5b610241610593565b60405160ff909116815260200160405180910390f35b341561026257600080fd5b61026a61059c565b005b341561027757600080fd5b6101f4600160a060020a036004358116906024351661061b565b341561029c57600080fd5b6101cd610638565b34156102af57600080fd5b6102b7610648565b604051600160a060020a03909116815260200160405180910390f35b34156102de57600080fd5b6101f4600160a060020a0360043516610657565b34156102fd57600080fd5b6101f4610669565b341561031057600080fd5b61026a61066f565b341561032357600080fd5b6102b76106f3565b341561033657600080fd5b610134610702565b341561034957600080fd5b6101f4600160a060020a036004351661076d565b341561036857600080fd5b6101cd600160a060020a0360043516602435610788565b341561038a57600080fd5b6101f46107b6565b341561039d57600080fd5b6101f4600160a060020a03600435811690602435166107bc565b34156103c257600080fd5b6102b76107e7565b34156103d557600080fd5b61026a6107f6565b34156103e857600080fd5b61026a600160a060020a036004351661090e565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104925780601f1061046757610100808354040283529160200191610492565b820191906000526020600020905b81548152906001019060200180831161047557829003601f168201915b505050505081565b600160a060020a03338116600081815260056020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60035481565b60065460009060a060020a900460ff161561052657600080fd5b600160a060020a038085166000908152600560209081526040808320339094168352929052205461055790836109a9565b600160a060020a03808616600090815260056020908152604080832033909416835292905220556105898484846109bb565b5060019392505050565b60025460ff1681565b60065433600160a060020a039081169116146105b757600080fd5b60065460a060020a900460ff1615156105cf57600080fd5b6006805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600560209081526000928352604080842090915290825290205481565b60065460a060020a900460ff1681565b600854600160a060020a031681565b60046020526000908152604090205481565b600a5481565b60065433600160a060020a0390811691161461068a57600080fd5b60065460a060020a900460ff16156106a157600080fd5b6006805474ff0000000000000000000000000000000000000000191660a060020a1790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600754600160a060020a031681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104925780601f1061046757610100808354040283529160200191610492565b600160a060020a031660009081526004602052604090205490565b60065460009060a060020a900460ff16156107a257600080fd5b6107ad3384846109bb565b50600192915050565b60095481565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600654600160a060020a031681565b600080600080600061080e600a546303c26700610adc565b9450428590101561081e57600080fd5b61082842866109a9565b93506108378462f099c0610af2565b9250600383111561084757600392505b6108546003546028610af2565b91506108616003846109a9565b905061086d8183610b12565b6009541161087a57600080fd5b610886600954836109a9565b600955600854600160a060020a03166000908152600460205260409020546108ae9083610adc565b60088054600160a060020a0390811660009081526004602052604080822094909455915416917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35050505050565b60065433600160a060020a0390811691161461092957600080fd5b600160a060020a038116151561093e57600080fd5b600654600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000828211156109b557fe5b50900390565b6000600160a060020a03831615156109d257600080fd5b600160a060020a038085166000908152600460205260408082205492861682529020546109ff9190610adc565b600160a060020a038516600090815260046020526040902054909150610a2590836109a9565b600160a060020a038086166000908152600460205260408082209390935590851681522054610a549083610adc565b600160a060020a0380851660008181526004602052604080822085905592881681529182205491528291610a889190610adc565b14610a8f57fe5b82600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a350505050565b600082820183811015610aeb57fe5b9392505050565b600080808311610afe57fe5b8284811515610b0957fe5b04949350505050565b6000828202831580610b2e5750828482811515610b2b57fe5b04145b1515610aeb57fe00a165627a7a7230582082a3f0a2ad6f12f9b29a2a5ed8d678e0e10d0272ebc9868c9eeb2a9dcb724cef0029"
}