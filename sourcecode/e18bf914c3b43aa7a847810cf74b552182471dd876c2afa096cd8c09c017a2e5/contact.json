{
  "address": "0x94236591125e935f5ac128bb3d5062944c24958c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "VGWToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-18\n*/\n\npragma solidity ^0.4.23;\n\nlibrary SafeMath {\n\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    /**\n    * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract Ownable {\n    address public owner;\n    bool public stopped = false;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor() public{\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n    /** \n    * Stop ICO contract\n    */\n    function stop() onlyOwner public{\n        stopped = true;\n    }\n\n    /** \n    * Start ICO contract\n    */\n    function start() onlyOwner public{\n        stopped = false;\n    }\n\n    /** \n    Validate if ICO running\n    */\n    modifier isRunning {\n        assert (!stopped);\n        _;\n    }\n}\n\ncontract ERC20Basic {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n\n    uint256 totalSupply_;\n\n    /**\n    * @dev total number of tokens in existence\n    */\n    function totalSupply() public view returns (uint256) {\n        return totalSupply_;\n    }\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n\n        // SafeMath.sub will throw if there is not enough balance.\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n}\n\ncontract BurnableToken is BasicToken, Ownable {\n\n    event Burn(address indexed burner, uint256 value);\n\n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param _value The amount of token to be burned.\n     */\n    function burn(uint256 _value) public onlyOwner{\n        require(_value <= balances[msg.sender]);\n        // no need to require value <= totalSupply, since that would imply the\n        // sender's balance is greater than the totalSupply, which *should* be an assertion failure\n\n        address burner = msg.sender;\n        balances[burner] = balances[burner].sub(_value);\n        totalSupply_ = totalSupply_.sub(_value);\n        emit Burn(burner, _value);\n    }\n}\n\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public view returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeERC20 {\n    function safeTransfer(ERC20Basic token, address to, uint256 value) internal {\n        assert(token.transfer(to, value));\n    }\n\n    function safeTransferFrom(ERC20 token, address from, address to, uint256 value) internal {\n        assert(token.transferFrom(from, to, value));\n    }\n\n    function safeApprove(ERC20 token, address spender, uint256 value) internal {\n        assert(token.approve(spender, value));\n    }\n}\n\ncontract StandardToken is ERC20, BasicToken {\n\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n    /**\n     * @dev Transfer tokens from one address to another\n     * @param _from address The address which you want to send tokens from\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     *\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param _spender The address which will spend the funds.\n     * @param _value The amount of tokens to be spent.\n     */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param _owner address The address which owns the funds.\n     * @param _spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\n     *\n     * approve should be called when allowed[_spender] == 0. To increment\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * @param _spender The address which will spend the funds.\n     * @param _addedValue The amount of tokens to increase the allowance by.\n     */\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    /**\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\n     *\n     * approve should be called when allowed[_spender] == 0. To decrement\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * @param _spender The address which will spend the funds.\n     * @param _subtractedValue The amount of tokens to decrease the allowance by.\n     */\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n}\n\ncontract VGWToken is StandardToken, BurnableToken {\n\n    using SafeMath for uint;    \n\n    string constant public symbol = \"VGW\";\n    string constant public name = \"VegaWallet\";\n\n    uint8 constant public decimals = 5;    \n    uint256 public constant decimalFactor = 10 ** uint256(decimals);\n    uint256 public constant INITIAL_SUPPLY = 200000000 * decimalFactor;\n\n    uint constant ITSStartTime = 1537185600;  // Monday, Sep 17, 2018 12:00:00 AM\n    uint constant ITSEndTime = 1542369600;    // Friday, Nov 16, 2018 12:00:00 PM\n    uint constant unlockTimeF1 = 1550125800;  // Thursday, Feb 14, 2019 12.00.00 PM\n    uint constant unlockTimeF2 = 1565937000;  // Friday, August 16, 2019 12.00.00 PM\n\n    uint256 constant publicTokens = 120000000 * decimalFactor;\n    uint256 constant investorTokens = 20000000 * decimalFactor;\n    uint256 constant founderTokens1 = 8750000 * decimalFactor;\n    uint256 constant founderTokens2 = 26250000 * decimalFactor;\n    uint256 constant devTokens = 25000000 * decimalFactor;\n\n    address constant adrInvestor = 0x23Ce1F8d4926bd6d768815Cc45B1D4Fc7B920efB;\n    address constant adrFounder1 = 0xf56E5B449f2966fc3718AD6d44B9e75a94B6852b;\n    address constant adrFounder2 = 0x73EE65A92f551D613b77Ab6D72Ee08570cfC8Dc6;\n    address constant adrDevTeam = 0x8856D5434602a65933DBbb0636a19953AA5dcCa1;\n\n    constructor(address owner) public {\n        totalSupply_ = INITIAL_SUPPLY;\n        //InitialDistribution\n        preSale(owner,publicTokens);\n        preSale(adrInvestor,investorTokens);\n        preSale(adrFounder1,founderTokens1);\n        preSale(adrFounder2,founderTokens2);\n        preSale(adrDevTeam,devTokens);\n    }\n\n    function preSale(address _address, uint _amount) internal returns (bool) {\n        balances[_address] = _amount;\n        emit Transfer(address(0x0), _address, _amount);\n    }\n\n    function checkPermissions(address _address) internal view returns (bool) {\n\n        if( ( _address == adrInvestor || _address == adrDevTeam ) && ( block.timestamp < ITSEndTime ) ){\n            return false;\n        }else if( ( block.timestamp < unlockTimeF1 ) && ( _address == adrFounder1 ) ){\n            return false;\n        }else if( ( block.timestamp < unlockTimeF2 ) && ( _address == adrFounder2 ) ){\n            return false;\n        }else if ( _address == owner ){\n            return true;\n        }else if( block.timestamp < ITSEndTime ){\n            return false;\n        }else{\n            return true;\n        }\n    }\n\n    function transfer(address _to, uint256 _value) isRunning public returns (bool) {\n\n        require(checkPermissions(msg.sender));\n        super.transfer(_to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) isRunning public returns (bool) {\n\n        require(checkPermissions(_from));\n        super.transferFrom(_from, _to, _value);\n    }\n\n    function () public payable {\n        require(msg.value >= 1e16);\n        owner.transfer(msg.value);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimalFactor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040526003805460a060020a60ff021916905534801561002057600080fd5b50604051602080610eec833981016040525160038054600160a060020a031916331790556512309ce5400060015561006781650ae9f7bcc000640100000000610125810204565b506100957323ce1f8d4926bd6d768815cc45b1d4fc7b920efb6501d1a94a2000640100000000610125810204565b506100c273f56e5b449f2966fc3718ad6d44b9e75a94b6852b64cbba106e00640100000000610125810204565b506100f07373ee65a92f551d613b77ab6d72ee08570cfc8dc66502632e314a00640100000000610125810204565b5061011e738856d5434602a65933dbbb0636a19953aa5dcca1650246139ca800640100000000610125810204565b505061017b565b600160a060020a0382166000818152602081815260408083208590558051858152905192939284927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928290030190a392915050565b610d628061018a6000396000f3006080604052600436106101065763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461015657806307da68f5146101e0578063095ea7b3146101f757806318160ddd1461022f57806323b872dd146102565780632ff2e9dc14610280578063313ce5671461029557806342966c68146102c057806366188463146102d85780636d6a6a4d146102fc57806370a082311461031157806375f12b21146103325780638da5cb5b1461034757806395d89b4114610378578063a9059cbb1461038d578063be9a6555146103b1578063d73dd623146103c6578063dd62ed3e146103ea578063f2fde38b14610411575b662386f26fc1000034101561011a57600080fd5b600354604051600160a060020a03909116903480156108fc02916000818181858888f19350505050158015610153573d6000803e3d6000fd5b50005b34801561016257600080fd5b5061016b610432565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a557818101518382015260200161018d565b50505050905090810190601f1680156101d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ec57600080fd5b506101f5610469565b005b34801561020357600080fd5b5061021b600160a060020a03600435166024356104b7565b604080519115158252519081900360200190f35b34801561023b57600080fd5b5061024461051d565b60408051918252519081900360200190f35b34801561026257600080fd5b5061021b600160a060020a0360043581169060243516604435610523565b34801561028c57600080fd5b50610244610572565b3480156102a157600080fd5b506102aa61057c565b6040805160ff9092168252519081900360200190f35b3480156102cc57600080fd5b506101f5600435610581565b3480156102e457600080fd5b5061021b600160a060020a036004351660243561064a565b34801561030857600080fd5b5061024461073c565b34801561031d57600080fd5b50610244600160a060020a0360043516610743565b34801561033e57600080fd5b5061021b610762565b34801561035357600080fd5b5061035c610783565b60408051600160a060020a039092168252519081900360200190f35b34801561038457600080fd5b5061016b610792565b34801561039957600080fd5b5061021b600160a060020a03600435166024356107c9565b3480156103bd57600080fd5b506101f561080f565b3480156103d257600080fd5b5061021b600160a060020a0360043516602435610846565b3480156103f657600080fd5b50610244600160a060020a03600435811690602435166108df565b34801561041d57600080fd5b506101f5600160a060020a036004351661090a565b60408051808201909152600a81527f5665676157616c6c657400000000000000000000000000000000000000000000602082015281565b600354600160a060020a0316331461048057600080fd5b6003805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b60035460009074010000000000000000000000000000000000000000900460ff161561054b57fe5b6105548461099f565b151561055f57600080fd5b61056a848484610ab6565b509392505050565b6512309ce5400081565b600581565b600354600090600160a060020a0316331461059b57600080fd5b336000908152602081905260409020548211156105b757600080fd5b50336000818152602081905260409020546105d8908363ffffffff610c2d16565b600160a060020a038216600090815260208190526040902055600154610604908363ffffffff610c2d16565b600155604080518381529051600160a060020a038316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25050565b336000908152600260209081526040808320600160a060020a03861684529091528120548083111561069f57336000908152600260209081526040808320600160a060020a03881684529091528120556106d4565b6106af818463ffffffff610c2d16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3600191505b5092915050565b620186a081565b600160a060020a0381166000908152602081905260409020545b919050565b60035474010000000000000000000000000000000000000000900460ff1681565b600354600160a060020a031681565b60408051808201909152600381527f5647570000000000000000000000000000000000000000000000000000000000602082015281565b60035460009074010000000000000000000000000000000000000000900460ff16156107f157fe5b6107fa3361099f565b151561080557600080fd5b6107358383610c3f565b600354600160a060020a0316331461082657600080fd5b6003805474ff000000000000000000000000000000000000000019169055565b336000908152600260209081526040808320600160a060020a038616845290915281205461087a908363ffffffff610d2016565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a0316331461092157600080fd5b600160a060020a038116151561093657600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000600160a060020a0382167323ce1f8d4926bd6d768815cc45b1d4fc7b920efb14806109e85750600160a060020a038216738856d5434602a65933dbbb0636a19953aa5dcca1145b80156109f75750635beeb14042105b15610a045750600061075d565b635c650ae842108015610a335750600160a060020a03821673f56e5b449f2966fc3718ad6d44b9e75a94b6852b145b15610a405750600061075d565b635d564d6842108015610a6f5750600160a060020a0382167373ee65a92f551d613b77ab6d72ee08570cfc8dc6145b15610a7c5750600061075d565b600354600160a060020a0383811691161415610a9a5750600161075d565b635beeb140421015610aae5750600061075d565b50600161075d565b6000600160a060020a0383161515610acd57600080fd5b600160a060020a038416600090815260208190526040902054821115610af257600080fd5b600160a060020a0384166000908152600260209081526040808320338452909152902054821115610b2257600080fd5b600160a060020a038416600090815260208190526040902054610b4b908363ffffffff610c2d16565b600160a060020a038086166000908152602081905260408082209390935590851681522054610b80908363ffffffff610d2016565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610bc2908363ffffffff610c2d16565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b600082821115610c3957fe5b50900390565b6000600160a060020a0383161515610c5657600080fd5b33600090815260208190526040902054821115610c7257600080fd5b33600090815260208190526040902054610c92908363ffffffff610c2d16565b3360009081526020819052604080822092909255600160a060020a03851681522054610cc4908363ffffffff610d2016565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600082820183811015610d2f57fe5b93925050505600a165627a7a7230582049ead25ab5df63d7b7484196c4aad658ff42fa95a07b56f41fc27c5aa5a16d6800290000000000000000000000002098c7e36c99b19c1e1afa1be0218760aa19f23c",
  "constructorArguments": "0000000000000000000000002098c7e36c99b19c1e1afa1be0218760aa19f23c"
}