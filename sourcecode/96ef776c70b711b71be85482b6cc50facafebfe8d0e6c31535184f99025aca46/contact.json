{
  "address": "0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Suretly Token",
  "contractName": "SuretlyToken",
  "compilerVersion": "v0.4.16-nightly.2017.8.11+commit.c84de7fa",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-08-13\n*/\n\npragma solidity ^0.4.11;\n\ncontract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }\n\ncontract SuretlyToken {\n\n  string public constant standard = 'Token 0.1';\n  string public constant name = \"Suretly\";\n  string public constant symbol = \"SUR\";\n  uint8 public constant decimals = 8;\n  uint256 public totalSupply = 237614 * 100000000;\n\n  address public owner;\n\n  mapping (address => uint256) public balanceOf;\n  mapping (address => mapping (address => uint256)) public allowance;\n\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event NewOwner(address _newOwner);\n  event Burn(address indexed _from, uint256 _value);\n\n  function SuretlyToken() {\n    owner = msg.sender;\n    balanceOf[owner] = totalSupply;\n  }\n\n  function replaceOwner(address _newOwner) returns (bool success) {\n    assert(msg.sender == owner);\n    owner = _newOwner;\n    NewOwner(_newOwner);\n    return true;\n  }\n\n  function transfer(address _to, uint256 _value) {\n    require(_to != 0x0);\n    require(_to != address(this));\n    assert(!(balanceOf[msg.sender] < _value));\n    assert(!(balanceOf[_to] + _value < balanceOf[_to]));\n    balanceOf[msg.sender] -= _value;\n    balanceOf[_to] += _value;\n    Transfer(msg.sender, _to, _value);\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n    require(_to != 0x0);\n    require(_to != address(this));\n    assert(!(balanceOf[_from] < _value));\n    assert(!(balanceOf[_to] + _value < balanceOf[_to]));\n    assert(!(_value > allowance[_from][msg.sender]));\n    balanceOf[_from] -= _value;\n    balanceOf[_to] += _value;\n    allowance[_from][msg.sender] -= _value;\n    Transfer(_from, _to, _value);\n    return true;\n  }\n\n  function approve(address _spender, uint256 _value) returns (bool success) {\n    allowance[msg.sender][_spender] = _value;\n    return true;\n  }\n\n  function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\n    tokenRecipient spender = tokenRecipient(_spender);\n    if (approve(_spender, _value)) {\n      spender.receiveApproval(msg.sender, _value, this, _extraData);\n      return true;\n    }\n  }\n\n  function burn(uint256 _value) returns (bool success) {\n    assert(!(balanceOf[msg.sender] < _value));\n    balanceOf[msg.sender] -= _value;\n    totalSupply -= _value;\n    Burn(msg.sender, _value);\n    return true;\n  }\n\n  function burnFrom(address _from, uint256 _value) returns (bool success) {\n    assert(!(balanceOf[_from] < _value));\n    assert(!(_value > allowance[_from][msg.sender]));\n    balanceOf[_from] -= _value;\n    totalSupply -= _value;\n    Burn(_from, _value);\n    return true;\n }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"replaceOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "606060405265159c61ce6e00600055341561001957600080fd5b5b60018054600160a060020a03191633600160a060020a03908116919091179182905560008054929091168152600260205260409020555b5b610b71806100616000396000f300606060405236156100d85763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100dd578063095ea7b31461016857806318160ddd1461019e57806323b872dd146101c3578063313ce567146101ff57806342966c68146102285780635a3b7e421461025257806370a08231146102dd57806379cc67901461030e5780638da5cb5b1461034457806395d89b4114610373578063a39a45b7146103fe578063a9059cbb14610431578063cae9ca5114610455578063dd62ed3e146104ce575b600080fd5b34156100e857600080fd5b6100f0610505565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012d5780820151818401525b602001610114565b50505050905090810190601f16801561015a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017357600080fd5b61018a600160a060020a036004351660243561053c565b604051901515815260200160405180910390f35b34156101a957600080fd5b6101b161056d565b60405190815260200160405180910390f35b34156101ce57600080fd5b61018a600160a060020a0360043581169060243516604435610573565b604051901515815260200160405180910390f35b341561020a57600080fd5b6102126106b1565b60405160ff909116815260200160405180910390f35b341561023357600080fd5b61018a6004356106b6565b604051901515815260200160405180910390f35b341561025d57600080fd5b6100f061073d565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012d5780820151818401525b602001610114565b50505050905090810190601f16801561015a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102e857600080fd5b6101b1600160a060020a0360043516610774565b60405190815260200160405180910390f35b341561031957600080fd5b61018a600160a060020a0360043516602435610786565b604051901515815260200160405180910390f35b341561034f57600080fd5b61035761083e565b604051600160a060020a03909116815260200160405180910390f35b341561037e57600080fd5b6100f061084d565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012d5780820151818401525b602001610114565b50505050905090810190601f16801561015a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561040957600080fd5b61018a600160a060020a0360043516610884565b604051901515815260200160405180910390f35b341561043c57600080fd5b610453600160a060020a036004351660243561090d565b005b341561046057600080fd5b61018a60048035600160a060020a03169060248035919060649060443590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506109f495505050505050565b604051901515815260200160405180910390f35b34156104d957600080fd5b6101b1600160a060020a0360043581169060243516610b28565b60405190815260200160405180910390f35b60408051908101604052600781527f53757265746c7900000000000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600090815260036020908152604080832093861683529290522081905560015b92915050565b60005481565b6000600160a060020a038316151561058a57600080fd5b30600160a060020a031683600160a060020a0316141515156105ab57600080fd5b600160a060020a038416600090815260026020526040902054829010156105ce57fe5b600160a060020a03831660009081526002602052604090205482810110156105f257fe5b600160a060020a038085166000908152600360209081526040808320339094168352929052205482111561062257fe5b600160a060020a03808516600081815260026020908152604080832080548890039055878516808452818420805489019055848452600383528184203390961684529490915290819020805486900390557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b9392505050565b600881565b600160a060020a033316600090815260026020526040812054829010156106d957fe5b600160a060020a0333166000818152600260205260408082208054869003905581548590039091557fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59084905190815260200160405180910390a25060015b919050565b60408051908101604052600981527f546f6b656e20302e310000000000000000000000000000000000000000000000602082015281565b60026020526000908152604090205481565b600160a060020a038216600090815260026020526040812054829010156107a957fe5b600160a060020a03808416600090815260036020908152604080832033909416835292905220548211156107d957fe5b600160a060020a0383166000818152600260205260408082208054869003905581548590039091557fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59084905190815260200160405180910390a25060015b92915050565b600154600160a060020a031681565b60408051908101604052600381527f5355520000000000000000000000000000000000000000000000000000000000602082015281565b60015460009033600160a060020a0390811691161461089f57fe5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161790557f3edd90e7770f06fafde38004653b33870066c33bfc923ff6102acd601f85dfbc82604051600160a060020a03909116815260200160405180910390a15060015b919050565b600160a060020a038216151561092257600080fd5b30600160a060020a031682600160a060020a03161415151561094357600080fd5b600160a060020a0333166000908152600260205260409020548190101561096657fe5b600160a060020a038216600090815260026020526040902054818101101561098a57fe5b600160a060020a033381166000818152600260205260408082208054869003905592851680825290839020805485019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a35b5050565b600083610a01818561053c565b15610b1f5780600160a060020a0316638f4ffcb1338630876040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ab85780820151818401525b602001610a9f565b50505050905090810190601f168015610ae55780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1515610b0657600080fd5b6102c65a03f11515610b1757600080fd5b505050600191505b5b509392505050565b6003602090815260009283526040808420909152908252902054815600a165627a7a723058208319cc751d6b6a8580d5ba5b16dd4ae45eaa30792f05cec9f2bdcdfbcd7fe8ad0029"
}