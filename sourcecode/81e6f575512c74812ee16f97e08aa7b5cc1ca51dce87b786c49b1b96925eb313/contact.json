{
  "address": "0x8432a5a61cf1cc5ca5bc5ab919d0665427fb513c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "IcoToken",
  "compilerVersion": "v0.4.24-nightly.2018.5.16+commit.7f965c86",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-26\n*/\n\npragma solidity ^0.4.15;\n\n\n\ncontract Ownable {\n  address public owner;\n\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function transferOwnership(address newOwner) public  onlyOwner {\n    if (newOwner != address(0)) {\n      owner = newOwner;\n    }\n  }\n}\n\n\n\n\ncontract SafeMath {\n\n  function safeAdd(uint256 x, uint256 y) internal pure returns(uint256) {\n    uint256 z = x + y;\n    assert((z >= x) && (z >= y));\n    return z;\n  }\n\n  function safeSubtract(uint256 x, uint256 y) internal pure returns(uint256) {\n    assert(x >= y);\n    uint256 z = x - y;\n    return z;\n  }\n\n  function safeMult(uint256 x, uint256 y) internal pure returns(uint256) {\n    uint256 z = x * y;\n    assert((x == 0)||(z/x == y));\n    return z;\n  }\n}\n\n\n\n\ncontract ERC20 {\n  uint public totalSupply;\n  function balanceOf(address who) public  constant returns (uint);\n  function allowance(address owner, address spender) public  constant returns (uint);\n  function transfer(address to, uint value) public  returns (bool ok);\n  function transferFrom(address from, address to, uint value) public  returns (bool ok);\n  function approve(address spender, uint value) public  returns (bool ok);\n  event Transfer(address indexed from, address indexed to, uint value);\n  event Approval(address indexed owner, address indexed spender, uint value);\n}\n\n\n\ncontract StandardToken is ERC20, SafeMath {\n  \n  modifier onlyPayloadSize(uint size) {\n    require(msg.data.length >= size + 4) ;\n    _;\n  }\n\n  mapping(address => uint) balances;\n  mapping (address => mapping (address => uint)) allowed;\n\n  function transfer(address _to, uint _value) public  onlyPayloadSize(2 * 32)  returns (bool success){\n    balances[msg.sender] = safeSubtract(balances[msg.sender], _value);\n    balances[_to] = safeAdd(balances[_to], _value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function transferFrom(address _from, address _to, uint _value) public  onlyPayloadSize(3 * 32) returns (bool success) {\n    uint _allowance = allowed[_from][msg.sender];\n\n    balances[_to] = safeAdd(balances[_to], _value);\n    balances[_from] = safeSubtract(balances[_from], _value);\n    allowed[_from][msg.sender] = safeSubtract(_allowance, _value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  function balanceOf(address _owner) public  constant returns (uint balance) {\n    return balances[_owner];\n  }\n\n  function approve(address _spender, uint _value) public  returns (bool success) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function allowance(address _owner, address _spender) public  constant returns (uint remaining) {\n    return allowed[_owner][_spender];\n  }\n}\n\n\n\n\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  \n  modifier whenNotPaused() {\n    require (!paused);\n    _;\n  }\n\n  \n  modifier whenPaused {\n    require (paused) ;\n    _;\n  }\n\n  \n  function pause() public onlyOwner whenNotPaused returns (bool) {\n    paused = true;\n    emit Pause();\n    return true;\n  }\n\n  \n  function unpause() public onlyOwner whenPaused returns (bool) {\n    paused = false;\n    emit Unpause();\n    return true;\n  }\n}\n\n\n\ncontract IcoToken is SafeMath, StandardToken, Pausable {\n  string public name;\n  string public symbol;\n  uint256 public decimals;\n  string public version;\n  address public icoContract;\n\n  constructor(\n    string _name,\n    string _symbol,\n    uint256 _decimals,\n    string _version\n  ) public\n  {\n    name = _name;\n    symbol = _symbol;\n    decimals = _decimals;\n    version = _version;\n  }\n\n  function transfer(address _to, uint _value) public  whenNotPaused returns (bool success) {\n    \n    if(msg.sender ==0xf54f1Bdd09bE61d2d92687b25a12D91FafdF94fc){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x5c400ac1b5e78a4ed47426d6c2be62b9075debe5){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x8012eb27b9f5ac2b74a975a100f60d2403365871){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x21c88c3ec04e0a6099bd9be1149e65429b1361c0){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x77f0999d0e46b319d496d4d7b9c3b1319e9b6322){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xe6cabcacd186043e29bd1ff77267d9c134e79777){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xa30a3b240c564aef6a73d4c457fe34aacb112447){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x99d9bf4f83e1f34dd3db5710b90ae5e6e18a578b){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x231a6ebdb86bff2092e8a852cd641d56edfb9ae2){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x8d0427ece989cd59f02e449793d62abb8b2bb2cf){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x01c2124aa4864e368a6a3fc012035e8abfb86d63){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xc940dbfff2924ca40d69444771e984718303e922){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x35cd7bc183927156b96d639cc1e35dbfefb3bd2b){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xc9d03422738d3ae561a69e2006d2cac1f5cd31da){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x8c80470abb2c1ba5c5bc1b008ba7ec9b538cf265){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x5b1f26f46d1c6f2646f27022a15bc5f15187dfe4){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x4d7b8d2f2133b7d34dd9bb827bbe96f77b52fd4c){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x013bb8e1fd674914e8a4f33b2bef5f9ce0f44d1d){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xda739d043a015ffd38c4057f0777535969013950){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x7b30bd3cdbdc371c81ceed186c04db00f313ff97){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x261f4abf6248d5f9df4fb14879e6cb582b5798f3){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xe176c1a5bfa33d213451f20049513d950223b884){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x3d24bc034d4986232ae4274ef01c3e5cc47cf21e){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xf1f98f465c0c93d9243e3320c3619b61c46bf075){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xae68532c6efbacfaec8df3876b400eabf706d21d){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xa4722ba977c7948bbdbfbcc95bbae50621cb18b7){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x345693ce70454b2ee4ca4cda02c34e2af600f162){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xaac3c5f0d477a0e9d9f5bfc24e8c8556c6c94e58){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xf1a9bd9a7536d35536aa7d04398f3ff26a88ac69){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0x1515beb50fca69f75a26493d6aeb104399346973){\n      return super.transfer(_to,_value);\n    }\n    \n    if(msg.sender ==0xa7d9ced087e97d510ed6ea370fdcc7fd4d5961de){\n      return super.transfer(_to,_value);\n    }\n    \n    \n    \n    \n    \n    if(now < 1569887999) {\n      return ;\n    }\n    return super.transfer(_to,_value);\n  }\n\n  function approve(address _spender, uint _value) public  whenNotPaused returns (bool success) {\n    return super.approve(_spender,_value);\n  }\n\n  function balanceOf(address _owner) public  constant returns (uint balance) {\n    return super.balanceOf(_owner);\n  }\n\n  function setIcoContract(address _icoContract) public onlyOwner {\n    if (_icoContract != address(0)) {\n      icoContract = _icoContract;\n    }\n  }\n\n  function sell(address _recipient, uint256 _value) public whenNotPaused returns (bool success) {\n      assert(_value > 0);\n      require(msg.sender == icoContract);\n\n      balances[_recipient] += _value;\n      totalSupply += _value;\n\n      emit Transfer(0x0, owner, _value);\n      emit Transfer(owner, _recipient, _value);\n      return true;\n  }\n\n}\n\n\n\n\ncontract IcoContract is SafeMath, Pausable {\n  IcoToken public ico;\n\n  uint256 public tokenCreationCap;\n  uint256 public totalSupply;\n\n  address public ethFundDeposit;\n  address public icoAddress;\n\n  uint256 public fundingStartTime;\n  uint256 public fundingEndTime;\n  uint256 public minContribution;\n\n  bool public isFinalized;\n  uint256 public tokenExchangeRate;\n\n  event LogCreateICO(address from, address to, uint256 val);\n\n  function CreateICO(address to, uint256 val) internal returns (bool success) {\n    emit LogCreateICO(0x0, to, val);\n    return ico.sell(to, val);\n  }\n\n  constructor(\n    address _ethFundDeposit,\n    address _icoAddress,\n    uint256 _tokenCreationCap,\n    uint256 _tokenExchangeRate,\n    uint256 _fundingStartTime,\n    uint256 _fundingEndTime,\n    uint256 _minContribution\n  ) public\n  {\n    ethFundDeposit = _ethFundDeposit;\n    icoAddress = _icoAddress;\n    tokenCreationCap = _tokenCreationCap;\n    tokenExchangeRate = _tokenExchangeRate;\n    fundingStartTime = _fundingStartTime;\n    minContribution = _minContribution;\n    fundingEndTime = _fundingEndTime;\n    ico = IcoToken(icoAddress);\n    isFinalized = false;\n  }\n\n  function () public payable {\n    createTokens(msg.sender, msg.value);\n  }\n\n  \n  function createTokens(address _beneficiary, uint256 _value) internal whenNotPaused {\n    require (tokenCreationCap > totalSupply);\n    require (now >= fundingStartTime);\n    require (now <= fundingEndTime);\n    require (_value >= minContribution);\n    require (!isFinalized);\n    uint256 tokens;\n    if (_beneficiary == ethFundDeposit) {\n      tokens = safeMult(_value, 300000000);\n    }\n    uint256 checkedSupply = safeAdd(totalSupply, tokens);\n\n    if (tokenCreationCap < checkedSupply) {\n      uint256 tokensToAllocate = safeSubtract(tokenCreationCap, totalSupply);\n      uint256 tokensToRefund   = safeSubtract(tokens, tokensToAllocate);\n      totalSupply = tokenCreationCap;\n      uint256 etherToRefund = tokensToRefund / tokenExchangeRate;\n\n      require(CreateICO(_beneficiary, tokensToAllocate));\n      msg.sender.transfer(etherToRefund);\n      ethFundDeposit.transfer(address(this).balance);\n      return;\n    }\n\n    totalSupply = checkedSupply;\n\n    require(CreateICO(_beneficiary, tokens));\n    ethFundDeposit.transfer(address(this).balance);\n  }\n\n  \n  function finalize() external onlyOwner {\n    require (!isFinalized);\n    \n    isFinalized = true;\n    ethFundDeposit.transfer(address(this).balance);\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_icoContract\",\"type\":\"address\"}],\"name\":\"setIcoContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"},{\"name\":\"_version\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040526000600360146101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162001fb938038062001fb98339810180604052810190808051820192919060200180518201929190602001805190602001909291908051820192919050505033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360049080519060200190620000c89291906200010c565b508260059080519060200190620000e19291906200010c565b50816006819055508060079080519060200190620001019291906200010c565b5050505050620001bb565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200014f57805160ff191683800117855562000180565b8280016001018555821562000180579182015b828111156200017f57825182559160200191906001019062000162565b5b5090506200018f919062000193565b5090565b620001b891905b80821115620001b45760008160009055506001016200019a565b5090565b90565b611dee80620001cb6000396000f3006080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610101578063095ea7b31461019157806318160ddd146101f657806323b872dd14610221578063313ce567146102a65780633f4ba83a146102d157806354fd4d50146103005780635c975abb146103905780636c197ff5146103bf57806370a08231146104245780638456cb591461047b5780638da5cb5b146104aa57806395d89b4114610501578063a9059cbb14610591578063c66e4095146105f6578063dd62ed3e1461064d578063e09678fd146106c4578063f2fde38b14610707575b600080fd5b34801561010d57600080fd5b5061011661074a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015657808201518184015260208101905061013b565b50505050905090810190601f1680156101835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019d57600080fd5b506101dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107e8565b604051808215151515815260200191505060405180910390f35b34801561020257600080fd5b5061020b610818565b6040518082815260200191505060405180910390f35b34801561022d57600080fd5b5061028c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081e565b604051808215151515815260200191505060405180910390f35b3480156102b257600080fd5b506102bb610acc565b6040518082815260200191505060405180910390f35b3480156102dd57600080fd5b506102e6610ad2565b604051808215151515815260200191505060405180910390f35b34801561030c57600080fd5b50610315610b99565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035557808201518184015260208101905061033a565b50505050905090810190601f1680156103825780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561039c57600080fd5b506103a5610c37565b604051808215151515815260200191505060405180910390f35b3480156103cb57600080fd5b5061040a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c4a565b604051808215151515815260200191505060405180910390f35b34801561043057600080fd5b50610465600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e2f565b6040518082815260200191505060405180910390f35b34801561048757600080fd5b50610490610e41565b604051808215151515815260200191505060405180910390f35b3480156104b657600080fd5b506104bf610f09565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561050d57600080fd5b50610516610f2f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561055657808201518184015260208101905061053b565b50505050905090810190601f1680156105835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561059d57600080fd5b506105dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fcd565b604051808215151515815260200191505060405180910390f35b34801561060257600080fd5b5061060b611842565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065957600080fd5b506106ae600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611868565b6040518082815260200191505060405180910390f35b3480156106d057600080fd5b50610705600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118ef565b005b34801561071357600080fd5b50610748600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119c6565b005b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107e05780601f106107b5576101008083540402835291602001916107e0565b820191906000526020600020905b8154815290600101906020018083116107c357829003601f168201915b505050505081565b6000600360149054906101000a900460ff1615151561080657600080fd5b6108108383611a9d565b905092915050565b60005481565b60008060606004810160003690501015151561083957600080fd5b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150610901600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485611b8f565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061098d600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485611bb9565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109da8285611bb9565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a36001925050509392505050565b60065481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b3057600080fd5b600360149054906101000a900460ff161515610b4b57600080fd5b6000600360146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a16001905090565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c2f5780601f10610c0457610100808354040283529160200191610c2f565b820191906000526020600020905b815481529060010190602001808311610c1257829003601f168201915b505050505081565b600360149054906101000a900460ff1681565b6000600360149054906101000a900460ff16151515610c6857600080fd5b600082111515610c7457fe5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cd057600080fd5b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816000808282540192505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a38273ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000610e3a82611bd7565b9050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e9f57600080fd5b600360149054906101000a900460ff16151515610ebb57600080fd5b6001600360146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fc55780601f10610f9a57610100808354040283529160200191610fc5565b820191906000526020600020905b815481529060010190602001808311610fa857829003601f168201915b505050505081565b6000600360149054906101000a900460ff16151515610feb57600080fd5b73f54f1bdd09be61d2d92687b25a12d91fafdf94fc73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156110445761103d8383611c20565b905061183c565b735c400ac1b5e78a4ed47426d6c2be62b9075debe53373ffffffffffffffffffffffffffffffffffffffff161415611087576110808383611c20565b905061183c565b738012eb27b9f5ac2b74a975a100f60d24033658713373ffffffffffffffffffffffffffffffffffffffff1614156110ca576110c38383611c20565b905061183c565b7321c88c3ec04e0a6099bd9be1149e65429b1361c03373ffffffffffffffffffffffffffffffffffffffff16141561110d576111068383611c20565b905061183c565b7377f0999d0e46b319d496d4d7b9c3b1319e9b63223373ffffffffffffffffffffffffffffffffffffffff161415611150576111498383611c20565b905061183c565b73e6cabcacd186043e29bd1ff77267d9c134e797773373ffffffffffffffffffffffffffffffffffffffff1614156111935761118c8383611c20565b905061183c565b73a30a3b240c564aef6a73d4c457fe34aacb1124473373ffffffffffffffffffffffffffffffffffffffff1614156111d6576111cf8383611c20565b905061183c565b7399d9bf4f83e1f34dd3db5710b90ae5e6e18a578b3373ffffffffffffffffffffffffffffffffffffffff161415611219576112128383611c20565b905061183c565b73231a6ebdb86bff2092e8a852cd641d56edfb9ae23373ffffffffffffffffffffffffffffffffffffffff16141561125c576112558383611c20565b905061183c565b738d0427ece989cd59f02e449793d62abb8b2bb2cf3373ffffffffffffffffffffffffffffffffffffffff16141561129f576112988383611c20565b905061183c565b7301c2124aa4864e368a6a3fc012035e8abfb86d633373ffffffffffffffffffffffffffffffffffffffff1614156112e2576112db8383611c20565b905061183c565b73c940dbfff2924ca40d69444771e984718303e9223373ffffffffffffffffffffffffffffffffffffffff1614156113255761131e8383611c20565b905061183c565b7335cd7bc183927156b96d639cc1e35dbfefb3bd2b3373ffffffffffffffffffffffffffffffffffffffff161415611368576113618383611c20565b905061183c565b73c9d03422738d3ae561a69e2006d2cac1f5cd31da3373ffffffffffffffffffffffffffffffffffffffff1614156113ab576113a48383611c20565b905061183c565b738c80470abb2c1ba5c5bc1b008ba7ec9b538cf2653373ffffffffffffffffffffffffffffffffffffffff1614156113ee576113e78383611c20565b905061183c565b735b1f26f46d1c6f2646f27022a15bc5f15187dfe43373ffffffffffffffffffffffffffffffffffffffff1614156114315761142a8383611c20565b905061183c565b734d7b8d2f2133b7d34dd9bb827bbe96f77b52fd4c3373ffffffffffffffffffffffffffffffffffffffff1614156114745761146d8383611c20565b905061183c565b73013bb8e1fd674914e8a4f33b2bef5f9ce0f44d1d3373ffffffffffffffffffffffffffffffffffffffff1614156114b7576114b08383611c20565b905061183c565b73da739d043a015ffd38c4057f07775359690139503373ffffffffffffffffffffffffffffffffffffffff1614156114fa576114f38383611c20565b905061183c565b737b30bd3cdbdc371c81ceed186c04db00f313ff973373ffffffffffffffffffffffffffffffffffffffff16141561153d576115368383611c20565b905061183c565b73261f4abf6248d5f9df4fb14879e6cb582b5798f33373ffffffffffffffffffffffffffffffffffffffff161415611580576115798383611c20565b905061183c565b73e176c1a5bfa33d213451f20049513d950223b8843373ffffffffffffffffffffffffffffffffffffffff1614156115c3576115bc8383611c20565b905061183c565b733d24bc034d4986232ae4274ef01c3e5cc47cf21e3373ffffffffffffffffffffffffffffffffffffffff161415611606576115ff8383611c20565b905061183c565b73f1f98f465c0c93d9243e3320c3619b61c46bf0753373ffffffffffffffffffffffffffffffffffffffff161415611649576116428383611c20565b905061183c565b73ae68532c6efbacfaec8df3876b400eabf706d21d3373ffffffffffffffffffffffffffffffffffffffff16141561168c576116858383611c20565b905061183c565b73a4722ba977c7948bbdbfbcc95bbae50621cb18b73373ffffffffffffffffffffffffffffffffffffffff1614156116cf576116c88383611c20565b905061183c565b73345693ce70454b2ee4ca4cda02c34e2af600f1623373ffffffffffffffffffffffffffffffffffffffff1614156117125761170b8383611c20565b905061183c565b73aac3c5f0d477a0e9d9f5bfc24e8c8556c6c94e583373ffffffffffffffffffffffffffffffffffffffff1614156117555761174e8383611c20565b905061183c565b73f1a9bd9a7536d35536aa7d04398f3ff26a88ac693373ffffffffffffffffffffffffffffffffffffffff161415611798576117918383611c20565b905061183c565b731515beb50fca69f75a26493d6aeb1043993469733373ffffffffffffffffffffffffffffffffffffffff1614156117db576117d48383611c20565b905061183c565b73a7d9ced087e97d510ed6ea370fdcc7fd4d5961de3373ffffffffffffffffffffffffffffffffffffffff16141561181e576118178383611c20565b905061183c565b635d9296ff42101561182f5761183c565b6118398383611c20565b90505b92915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561194b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156119c35780600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a2257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611a9a5780600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000808284019050838110158015611ba75750828110155b1515611baf57fe5b8091505092915050565b600080828410151515611bc857fe5b82840390508091505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000604060048101600036905010151515611c3a57600080fd5b611c83600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484611bb9565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d0f600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484611b8f565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a36001915050929150505600a165627a7a72305820e80350dc221b432daef838b85c9920dede33fd249d7b6f20901f2a98669a66b80029000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000b476162726f20546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000447424f2e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003312e300000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000b476162726f20546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000447424f2e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003312e300000000000000000000000000000000000000000000000000000000000"
}