{
  "address": "0x047686fb287e7263a23873dea66b4501015a2226",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "BC: Cute Coin",
  "contractName": "CuteCoin",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-11\n*/\n\npragma solidity ^0.4.24;\n\n// ----------------------------------------------------------------------------\ncontract ERC20Interface {\n\n    // ERC Token Standard #223 Interface\n    // https://github.com/ethereum/EIPs/issues/223\n\n    string public symbol;\n    string public  name;\n    uint8 public decimals;\n\n    function transfer(address _to, uint _value, bytes _data) external returns (bool success);\n\n    // approveAndCall\n    function approveAndCall(address spender, uint tokens, bytes data) external returns (bool success);\n\n    // ERC Token Standard #20 Interface\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n\n\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\n    // bulk operations\n    function transferBulk(address[] to, uint[] tokens) public;\n    function approveBulk(address[] spender, uint[] tokens) public;\n}\n\npragma solidity ^0.4.24;\n\n/// @author https://BlockChainArchitect.iocontract Bank is CutiePluginBase\ncontract PluginInterface\n{\n    /// @dev simply a boolean to indicate this is the contract we expect to be\n    function isPluginInterface() public pure returns (bool);\n\n    function onRemove() public;\n\n    /// @dev Begins new feature.\n    /// @param _cutieId - ID of token to auction, sender must be owner.\n    /// @param _parameter - arbitrary parameter\n    /// @param _seller - Old owner, if not the message sender\n    function run(\n        uint40 _cutieId,\n        uint256 _parameter,\n        address _seller\n    ) \n    public\n    payable;\n\n    /// @dev Begins new feature, approved and signed by COO.\n    /// @param _cutieId - ID of token to auction, sender must be owner.\n    /// @param _parameter - arbitrary parameter\n    function runSigned(\n        uint40 _cutieId,\n        uint256 _parameter,\n        address _owner\n    )\n    external\n    payable;\n\n    function withdraw() public;\n}\n\n\ncontract CuteCoinInterface is ERC20Interface\n{\n    function mint(address target, uint256 mintedAmount) public;\n    function mintBulk(address[] target, uint256[] mintedAmount) external;\n    function burn(uint256 amount) external;\n}\n\npragma solidity ^0.4.24;\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\npragma solidity ^0.4.24;\n\n// ----------------------------------------------------------------------------\n// Safe maths\n// ----------------------------------------------------------------------------\nlibrary SafeMath {\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    function div(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n}\n\npragma solidity ^0.4.24;\n\n// ----------------------------------------------------------------------------\n// Contract function to receive approval and execute function in one call\n//\n// Borrowed from MiniMeToken\n\ninterface TokenRecipientInterface\n{\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external;\n}\n\npragma solidity ^0.4.24;\n\n// https://github.com/ethereum/EIPs/issues/223\ninterface TokenFallback\n{\n    function tokenFallback(address _from, uint _value, bytes _data) external;\n}\n\n\ncontract CuteCoin is CuteCoinInterface, Ownable\n{\n    using SafeMath for uint;\n\n    constructor() public\n    {\n        symbol = \"CUTE\";\n        name = \"Cute Coin\";\n        decimals = 18;\n    }\n\n    uint _totalSupply;\n    mapping (address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n\n    event Transfer(address indexed from, address indexed to, uint256 value, bytes data);\n\n    // ---------------------------- Operator ----------------------------\n    mapping (address => bool) operatorAddress;\n\n    function addOperator(address _operator) public onlyOwner\n    {\n        operatorAddress[_operator] = true;\n    }\n\n    function removeOperator(address _operator) public onlyOwner\n    {\n        delete(operatorAddress[_operator]);\n    }\n\n    modifier onlyOperator() {\n        require(operatorAddress[msg.sender] || msg.sender == owner);\n        _;\n    }\n\n    function withdrawEthFromBalance() external onlyOwner\n    {\n        owner.transfer(address(this).balance);\n    }\n\n    // ------------------------------------------------------------------------\n    // Owner can transfer out any accidentally sent ERC20 tokens\n    // ------------------------------------------------------------------------\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n    }\n\n    // ---------------------------- Do not accept money ----------------------------\n    function () payable public\n    {\n        revert();\n    }\n\n    // ---------------------------- Minting ----------------------------\n\n    function mint(address target, uint256 mintedAmount) public onlyOperator\n    {\n        balances[target] = balances[target].add(mintedAmount);\n        _totalSupply = _totalSupply.add(mintedAmount);\n        emit Transfer(0, target, mintedAmount);\n    }\n\n    function mintBulk(address[] target, uint256[] mintedAmount) external onlyOperator\n    {\n        require(target.length == mintedAmount.length);\n        for (uint i = 0; i < target.length; i++)\n        {\n            mint(target[i], mintedAmount[i]);\n        }\n    }\n\n    function burn(uint256 amount) external\n    {\n        balances[msg.sender] = balances[msg.sender].sub(amount);\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(msg.sender, 0, amount);\n    }\n\n\n    // ---------------------------- ERC20 ----------------------------\n\n    function totalSupply() public constant returns (uint)\n    {\n        return _totalSupply;\n    }\n\n    // ------------------------------------------------------------------------\n    // Get the token balance for account `tokenOwner`\n    // ------------------------------------------------------------------------\n    function balanceOf(address tokenOwner) public constant returns (uint balance)\n    {\n        return balances[tokenOwner];\n    }\n\n    // ------------------------------------------------------------------------\n    // Returns the amount of tokens approved by the owner that can be\n    // transferred to the spender's account\n    // ------------------------------------------------------------------------\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining)\n    {\n        return allowed[tokenOwner][spender];\n    }\n\n    // ------------------------------------------------------------------------\n    // Transfer the balance from token owner's account to `to` account\n    // - Owner's account must have sufficient balance to transfer\n    // - 0 value transfers are allowed\n    // ------------------------------------------------------------------------\n    function transfer(address to, uint tokens) public returns (bool success) {\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(msg.sender, to, tokens);\n        return true;\n    }\n\n    // ------------------------------------------------------------------------\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n    // from the token owner's account\n    //\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n    // recommends that there are no checks for the approval double-spend attack\n    // as this should be implemented in user interfaces\n    // ------------------------------------------------------------------------\n    function approve(address spender, uint tokens) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n\n    // ------------------------------------------------------------------------\n    // Transfer `tokens` from the `from` account to the `to` account\n    //\n    // The calling account must already have sufficient tokens approve(...)-d\n    // for spending from the `from` account and\n    // - From account must have sufficient balance to transfer\n    // - Spender must have sufficient allowance to transfer\n    // - 0 value transfers are allowed\n    // ------------------------------------------------------------------------\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n        balances[from] = balances[from].sub(tokens);\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(from, to, tokens);\n        return true;\n    }\n\n    // ------------------------------------------------------------------------\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n    // from the token owner's account. The `spender` contract function\n    // `receiveApproval(...)` is then executed\n    // ------------------------------------------------------------------------\n    function approveAndCall(address spender, uint tokens, bytes data) external returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        TokenRecipientInterface(spender).receiveApproval(msg.sender, tokens, this, data);\n        return true;\n    }\n\n    function transferBulk(address[] to, uint[] tokens) public\n    {\n        require(to.length == tokens.length);\n        for (uint i = 0; i < to.length; i++)\n        {\n            transfer(to[i], tokens[i]);\n        }\n    }\n\n    function approveBulk(address[] spender, uint[] tokens) public\n    {\n        require(spender.length == tokens.length);\n        for (uint i = 0; i < spender.length; i++)\n        {\n            approve(spender[i], tokens[i]);\n        }\n    }\n\n// ---------------------------- ERC223 ----------------------------\n\n    // Function that is called when a user or another contract wants to transfer funds .\n    function transfer(address _to, uint _value, bytes _data) external returns (bool success) {\n        if(isContract(_to)) {\n            return transferToContract(_to, _value, _data);\n        }\n        else {\n            return transferToAddress(_to, _value, _data);\n        }\n    }\n\n    //function that is called when transaction target is a contract\n    function transferToContract(address _to, uint _value, bytes _data) public returns (bool success) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        TokenFallback receiver = TokenFallback(_to);\n        receiver.tokenFallback(msg.sender, _value, _data);\n        emit Transfer(msg.sender, _to, _value, _data);\n        return true;\n    }\n\n\n    //assemble the given address bytecode. If bytecode exists then the _addr is a contract.\n    function isContract(address _addr) private view returns (bool is_contract) {\n        uint length;\n        assembly {\n        //retrieve the size of the code on target address, this needs assembly\n            length := extcodesize(_addr)\n        }\n        return (length>0);\n    }\n\n    //function that is called when transaction target is an address\n    function transferToAddress(address _to, uint tokens, bytes _data) public returns (bool success) {\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n        balances[_to] = balances[_to].add(tokens);\n        emit Transfer(msg.sender, _to, tokens, _data);\n        return true;\n    }\n\n    // @dev Transfers to _withdrawToAddress all tokens controlled by\n    // contract _tokenContract.\n    function withdrawTokenFromBalance(ERC20Interface _tokenContract, address _withdrawToAddress)\n        external\n        onlyOperator\n    {\n        uint256 balance = _tokenContract.balanceOf(address(this));\n        _tokenContract.transfer(_withdrawToAddress, balance);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferToAddress\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferToContract\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawEthFromBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address[]\"},{\"name\":\"mintedAmount\",\"type\":\"uint256[]\"}],\"name\":\"mintBulk\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address[]\"},{\"name\":\"tokens\",\"type\":\"uint256[]\"}],\"name\":\"transferBulk\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address[]\"},{\"name\":\"tokens\",\"type\":\"uint256[]\"}],\"name\":\"approveBulk\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_withdrawToAddress\",\"type\":\"address\"}],\"name\":\"withdrawTokenFromBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": ""
}