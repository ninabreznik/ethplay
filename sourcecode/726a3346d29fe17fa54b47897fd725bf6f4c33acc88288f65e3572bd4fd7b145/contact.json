{
  "address": "0xefc6d9d05d41134b1f44b379e319079ef2855edb",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TorusCoin",
  "compilerVersion": "v0.4.21-nightly.2018.3.6+commit.a9e02acc",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-08\n*/\n\npragma solidity ^0.4.18;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  /**\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract ForeignToken {\n    function balanceOf(address owner) constant public returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n}\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n}\n\n\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n\n/**\n * TorusCoin pre-sell contract.\n *\n */\ncontract TorusCoin is StandardToken {\n    using SafeMath for uint256;\n\n    string public name = \"Torus\";\n    string public symbol = \"TORUS\";\n    uint256 public decimals = 18;\n\n    uint256 public startDatetime;\n    uint256 public endDatetime;\n\n    // Initial founder address (set in constructor)\n    // All deposited ETH will be instantly forwarded to this address.\n    address public founder;\n\n    // administrator address\n    address public admin;\n\n    uint256 public coinAllocation = 700 * 10**8 * 10**decimals; //70000M tokens supply for pre-sell\n    uint256 public founderAllocation = 300 * 10**8 * 10**decimals; //30000M of token supply allocated for the team allocation\n\n    bool public founderAllocated = false; //this will change to true when the founder fund is allocated\n\n    uint256 public saleTokenSupply = 0; //this will keep track of the token supply created during the pre-sell\n    uint256 public salesVolume = 0; //this will keep track of the Ether raised during the pre-sell\n\n    bool public halted = false; //the admin address can set this to true to halt the pre-sell due to emergency\n\n    event Buy(address sender, address recipient, uint256 eth, uint256 tokens);\n    event AllocateFounderTokens(address sender, address founder, uint256 tokens);\n    event AllocateInflatedTokens(address sender, address holder, uint256 tokens);\n\n    modifier onlyAdmin {\n        require(msg.sender == admin);\n        _;\n    }\n\n    modifier duringCrowdSale {\n        require(block.timestamp >= startDatetime && block.timestamp < endDatetime);\n        _;\n    }\n\n    /**\n     *\n     * Integer value representing the number of seconds since 1 January 1970 00:00:00 UTC\n     */\n    function TorusCoin(uint256 startDatetimeInSeconds, address founderWallet) public {\n\n        admin = msg.sender;\n        founder = founderWallet;\n\n        startDatetime = startDatetimeInSeconds;\n        endDatetime = startDatetime + 16 * 1 days;\n    }\n\n    /**\n     * allow anyone sends funds to the contract\n     */\n    function() public payable {\n        buy(msg.sender);\n    }\n\n    /**\n     * Main token buy function.\n     * Buy for the sender itself or buy on the behalf of somebody else (third party address).\n     */\n    function buy(address recipient) payable public duringCrowdSale  {\n\n        require(!halted);\n        require(msg.value >= 0.01 ether);\n\n        uint256 tokens = msg.value.mul(35e4);\n\n        require(tokens > 0);\n\n        require(saleTokenSupply.add(tokens)<=coinAllocation );\n\n        balances[recipient] = balances[recipient].add(tokens);\n\n        totalSupply_ = totalSupply_.add(tokens);\n        saleTokenSupply = saleTokenSupply.add(tokens);\n        salesVolume = salesVolume.add(msg.value);\n\n        if (!founder.call.value(msg.value)()) revert(); //immediately send Ether to founder address\n\n        Buy(msg.sender, recipient, msg.value, tokens);\n    }\n\n    /**\n     * Set up founder address token balance.\n     */\n    function allocateFounderTokens() public onlyAdmin {\n        require( block.timestamp > endDatetime );\n        require(!founderAllocated);\n\n        balances[founder] = balances[founder].add(founderAllocation);\n        totalSupply_ = totalSupply_.add(founderAllocation);\n        founderAllocated = true;\n\n        AllocateFounderTokens(msg.sender, founder, founderAllocation);\n    }\n\n    /**\n     * Emergency Stop crowdsale.\n     */\n    function halt() public onlyAdmin {\n        halted = true;\n    }\n\n    function unhalt() public onlyAdmin {\n        halted = false;\n    }\n\n    /**\n     * Change admin address.\n     */\n    function changeAdmin(address newAdmin) public onlyAdmin  {\n        admin = newAdmin;\n    }\n\n    /**\n     * Change founder address.\n     */\n    function changeFounder(address newFounder) public onlyAdmin  {\n        founder = newFounder;\n    }\n\n     /**\n      * Inflation\n      */\n    function inflate(address holder, uint256 tokens) public onlyAdmin {\n        require( block.timestamp > endDatetime );\n        require(saleTokenSupply.add(tokens) <= coinAllocation );\n\n        balances[holder] = balances[holder].add(tokens);\n        saleTokenSupply = saleTokenSupply.add(tokens);\n        totalSupply_ = totalSupply_.add(tokens);\n\n        AllocateInflatedTokens(msg.sender, holder, tokens);\n\n     }\n\n    /**\n     * withdraw foreign tokens\n     */\n    function withdrawForeignTokens(address tokenContract) onlyAdmin public returns (bool) {\n        ForeignToken token = ForeignToken(tokenContract);\n        uint256 amount = token.balanceOf(address(this));\n        return token.transfer(admin, amount);\n    }\n\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"salesVolume\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"inflate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newFounder\",\"type\":\"address\"}],\"name\":\"changeFounder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDatetime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateFounderTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unhalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDatetime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"startDatetimeInSeconds\",\"type\":\"uint256\"},{\"name\":\"founderWallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"founder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"AllocateFounderTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"AllocateInflatedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "606060405260408051908101604052600581527f546f727573000000000000000000000000000000000000000000000000000000602082015260039080516200004d92916020019062000145565b5060408051908101604052600581527f544f525553000000000000000000000000000000000000000000000000000000602082015260049080516200009792916020019062000145565b5060126005556be22ea493b30310a770000000600a556b60ef6b1aba6f072330000000600b55600c805460ff199081169091556000600d819055600e55600f805490911690553415620000e957600080fd5b60405160408062001344833981016040528080519190602001805160098054600160a060020a03338116600160a060020a03199283161790925560088054929093169116179055505060068190556215180001600755620001ea565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200018857805160ff1916838001178555620001b8565b82800160010185558215620001b8579182015b82811115620001b85782518255916020019190600101906200019b565b50620001c6929150620001ca565b5090565b620001e791905b80821115620001c65760008155600101620001d1565b90565b61114a80620001fa6000396000f30060606040526004361061015b5763ffffffff60e060020a60003504166306fdde038114610166578063095ea7b3146101f05780630aaba4321461022657806318160ddd1461024b57806323b872dd1461025e578063313ce567146102865780633d3b26a6146102995780634d853ee5146102bb5780635ed7ca5b146102ea57806366188463146102fd57806370a082311461031f578063824338bd1461033e5780638f2839701461035157806393c32e061461037057806395d89b411461038f578063977615a3146103a257806399d22e48146103b5578063a9059cbb146103c8578063b9b8af0b146103ea578063bcfcb03e146103fd578063c0ad742714610410578063cb3e64fd14610423578063d73dd62314610436578063d781be4614610458578063dd62ed3e1461046b578063e399331b14610490578063e58fc54c146104a3578063f088d547146104c2578063f851a440146104d6575b610164336104e9565b005b341561017157600080fd5b61017961067d565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101b557808201518382015260200161019d565b50505050905090810190601f1680156101e25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101fb57600080fd5b610212600160a060020a036004351660243561071b565b604051901515815260200160405180910390f35b341561023157600080fd5b610239610787565b60405190815260200160405180910390f35b341561025657600080fd5b61023961078d565b341561026957600080fd5b610212600160a060020a0360043581169060243516604435610793565b341561029157600080fd5b610239610913565b34156102a457600080fd5b610164600160a060020a0360043516602435610919565b34156102c657600080fd5b6102ce610a25565b604051600160a060020a03909116815260200160405180910390f35b34156102f557600080fd5b610164610a34565b341561030857600080fd5b610212600160a060020a0360043516602435610a5e565b341561032a57600080fd5b610239600160a060020a0360043516610b5a565b341561034957600080fd5b610239610b75565b341561035c57600080fd5b610164600160a060020a0360043516610b7b565b341561037b57600080fd5b610164600160a060020a0360043516610bc5565b341561039a57600080fd5b610179610c0f565b34156103ad57600080fd5b610239610c7a565b34156103c057600080fd5b610212610c80565b34156103d357600080fd5b610212600160a060020a0360043516602435610c89565b34156103f557600080fd5b610212610d9b565b341561040857600080fd5b610164610da4565b341561041b57600080fd5b610239610eb0565b341561042e57600080fd5b610164610eb6565b341561044157600080fd5b610212600160a060020a0360043516602435610edd565b341561046357600080fd5b610239610f81565b341561047657600080fd5b610239600160a060020a0360043581169060243516610f87565b341561049b57600080fd5b610239610fb2565b34156104ae57600080fd5b610212600160a060020a0360043516610fb8565b610164600160a060020a03600435166104e9565b34156104e157600080fd5b6102ce6110bc565b600060065442101580156104fe575060075442105b151561050957600080fd5b600f5460ff161561051957600080fd5b662386f26fc1000034101561052d57600080fd5b610540346205573063ffffffff6110cb16565b90506000811161054f57600080fd5b600a54600d54610565908363ffffffff6110fd16565b111561057057600080fd5b600160a060020a038216600090815260208190526040902054610599908263ffffffff6110fd16565b600160a060020a0383166000908152602081905260409020556001546105c5908263ffffffff6110fd16565b600155600d546105db908263ffffffff6110fd16565b600d55600e546105f1903463ffffffff6110fd16565b600e55600854600160a060020a03163460405160006040518083038185875af192505050151561062057600080fd5b7f89f5adc174562e07c9c9b1cae7109bbecb21cf9d1b2847e550042b8653c54a0e33833484604051600160a060020a0394851681529290931660208301526040808301919091526060820192909252608001905180910390a15050565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107135780601f106106e857610100808354040283529160200191610713565b820191906000526020600020905b8154815290600101906020018083116106f657829003601f168201915b505050505081565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b600e5481565b60015490565b6000600160a060020a03831615156107aa57600080fd5b600160a060020a0384166000908152602081905260409020548211156107cf57600080fd5b600160a060020a038085166000908152600260209081526040808320339094168352929052205482111561080257600080fd5b600160a060020a03841660009081526020819052604090205461082b908363ffffffff61110c16565b600160a060020a038086166000908152602081905260408082209390935590851681522054610860908363ffffffff6110fd16565b600160a060020a03808516600090815260208181526040808320949094558783168252600281528382203390931682529190915220546108a6908363ffffffff61110c16565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b60055481565b60095433600160a060020a0390811691161461093457600080fd5b600754421161094257600080fd5b600a54600d54610958908363ffffffff6110fd16565b111561096357600080fd5b600160a060020a03821660009081526020819052604090205461098c908263ffffffff6110fd16565b600160a060020a038316600090815260208190526040902055600d546109b8908263ffffffff6110fd16565b600d556001546109ce908263ffffffff6110fd16565b6001557f2ce6831aa926b1c193d1767103c48a68d3257e10bc36462f7ba3b25652a24a36338383604051600160a060020a039384168152919092166020820152604080820192909252606001905180910390a15050565b600854600160a060020a031681565b60095433600160a060020a03908116911614610a4f57600080fd5b600f805460ff19166001179055565b600160a060020a03338116600090815260026020908152604080832093861683529290529081205480831115610abb57600160a060020a033381166000908152600260209081526040808320938816835292905290812055610af2565b610acb818463ffffffff61110c16565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a3600191505b5092915050565b600160a060020a031660009081526020819052604090205490565b600b5481565b60095433600160a060020a03908116911614610b9657600080fd5b6009805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60095433600160a060020a03908116911614610be057600080fd5b6008805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107135780601f106106e857610100808354040283529160200191610713565b60065481565b600c5460ff1681565b6000600160a060020a0383161515610ca057600080fd5b600160a060020a033316600090815260208190526040902054821115610cc557600080fd5b600160a060020a033316600090815260208190526040902054610cee908363ffffffff61110c16565b600160a060020a033381166000908152602081905260408082209390935590851681522054610d23908363ffffffff6110fd16565b60008085600160a060020a0316600160a060020a031681526020019081526020016000208190555082600160a060020a031633600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a350600192915050565b600f5460ff1681565b60095433600160a060020a03908116911614610dbf57600080fd5b6007544211610dcd57600080fd5b600c5460ff1615610ddd57600080fd5b600b54600854600160a060020a0316600090815260208190526040902054610e0a9163ffffffff6110fd16565b600854600160a060020a0316600090815260208190526040902055600b54600154610e3a9163ffffffff6110fd16565b6001908155600c805460ff19169091179055600854600b547ffcd7ce98f647be4f89988a6b2fa0524682d08dbce3adfae5f49b1d0be2443cf1913391600160a060020a0390911690604051600160a060020a039384168152919092166020820152604080820192909252606001905180910390a1565b600d5481565b60095433600160a060020a03908116911614610ed157600080fd5b600f805460ff19169055565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610f15908363ffffffff6110fd16565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b60075481565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600a5481565b6009546000908190819033600160a060020a03908116911614610fda57600080fd5b83915081600160a060020a03166370a082313060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561102b57600080fd5b5af1151561103857600080fd5b5050506040518051600954909250600160a060020a03808516925063a9059cbb91168360405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561109e57600080fd5b5af115156110ab57600080fd5b505050604051805195945050505050565b600954600160a060020a031681565b6000808315156110de5760009150610b53565b508282028284828115156110ee57fe5b04146110f657fe5b9392505050565b6000828201838110156110f657fe5b60008282111561111857fe5b509003905600a165627a7a723058205338e8492ee25d99f4543df9601c16df99de2398a26d688aca540a6d64c470f20029000000000000000000000000000000000000000000000000000000005aaa98800000000000000000000000009f278394cc6dff32a4bf2f6abd87f239affa147d",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000005aaa98800000000000000000000000009f278394cc6dff32a4bf2f6abd87f239affa147d"
}