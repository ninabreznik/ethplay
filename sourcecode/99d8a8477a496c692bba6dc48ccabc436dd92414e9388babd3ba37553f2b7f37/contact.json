{
  "address": "0x68af0f18c974a9603ec863fefcebb4ceb2589070",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "PIGGYBANK",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-10\n*/\n\npragma solidity ^0.4.24;\n\ncontract PIGGYBANK\n{\n    \n    bytes32 hashPwd;\n    \n    bool isclosed = false;\n    \n    uint cashOutTime;\n    \n    address sender;\n    \n    address myadress;\n \n    \n    \n    function CashOut(bytes pass) external payable\n    {\n        if(hashPwd == keccak256(pass) && now>cashOutTime)\n        {\n            msg.sender.transfer(this.balance);\n        }\n    }\n    \n    function CashOut() public payable\n    {\n        if(msg.sender==myadress && now>cashOutTime)\n        {\n            msg.sender.transfer(this.balance);\n        }\n    }\n    \n    \n\n \n    function DebugHash(bytes pass) public pure returns (bytes32) {return keccak256(pass);}\n    \n    function SetPwd(bytes32 hash) public payable\n    {\n        if( (!isclosed&&(msg.value>1 ether)) || hashPwd==0x00)\n        {\n            hashPwd = hash;\n            sender = msg.sender;\n            cashOutTime = now;\n        }\n    }\n    \n    function SetcashOutTime(uint date) public\n    {\n        if(msg.sender==sender)\n        {\n            cashOutTime = date;\n        }\n    }\n    \n    function Setmyadress(address _myadress) public\n    {\n        if(msg.sender==sender)\n        {\n            myadress = _myadress;\n        }\n    }\n    \n    function PwdHasBeenSet(bytes32 hash) public\n    {\n        if(hash==hashPwd&&msg.sender==sender)\n        {\n           isclosed=true;\n        }\n    }\n    \n    function() public payable{}\n    \n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"pass\",\"type\":\"bytes\"}],\"name\":\"CashOut\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myadress\",\"type\":\"address\"}],\"name\":\"Setmyadress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pass\",\"type\":\"bytes\"}],\"name\":\"DebugHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"PwdHasBeenSet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"CashOut\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"SetcashOutTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"SetPwd\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]",
  "bytecode": "60806040526000600160006101000a81548160ff02191690831515021790555034801561002b57600080fd5b5061061a8061003b6000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806325f885d0146100855780633f3c51c3146100b357806342fc63be146100f657806365d61ad61461017b578063a1e564b1146101ac578063a8276d97146101b6578063df9933e5146101e3575b005b6100b1600480360381019080803590602001908201803590602001919091929391929390505050610207565b005b3480156100bf57600080fd5b506100f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102a5565b005b34801561010257600080fd5b5061015d600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610340565b60405180826000191660001916815260200191505060405180910390f35b34801561018757600080fd5b506101aa60048036038101908080356000191690602001909291905050506103ac565b005b6101b4610435565b005b3480156101c257600080fd5b506101e1600480360381019080803590602001909291905050506104f9565b005b610205600480360381019080803560001916906020019092919050505061055a565b005b8181604051808383808284378201915050925050506040518091039020600019166000546000191614801561023d575060025442115b156102a1573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561029f573d6000803e3d6000fd5b505b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561033d5780600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000816040518082805190602001908083835b6020831015156103785780518252602082019150602081019050602083039250610353565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050919050565b6000546000191681600019161480156104125750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b156104325760018060006101000a81548160ff0219169083151502179055505b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610493575060025442115b156104f7573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156104f5573d6000803e3d6000fd5b505b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561055757806002819055505b50565b600160009054906101000a900460ff1615801561057e5750670de0b6b3a764000034115b806105925750600060010260005460001916145b156105eb57806000816000191690555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426002819055505b505600a165627a7a72305820b551042c2aaa753ac4f23198626d05234cd18663c140b10a51df3790da7712b10029"
}