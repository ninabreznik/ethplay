{
  "address": "0x0198f46f520f33cd4329bd4be380a25a90536cd5",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "PlayChip",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-30\n*/\n\n/*\n-----------------------------------------------------------------\nFILE INFORMATION\n-----------------------------------------------------------------\n\nfile:       PlayChip.sol\nversion:    0.8\ndate:       2018-10-4\nauthors:    Joel Aquilina\n            Anton Jurisevic\n\n-----------------------------------------------------------------\nMODULE DESCRIPTION\n-----------------------------------------------------------------\n\nA simple ERC20 token with additional functionality to send\nbatched transfers and approvals. This way transactions can be\nmade in bulk, saving time and gas.\n\nThe contract can be paused by the owner so that transfers are\ndisabled until it is unpaused. The contract begins paused\nso that during this initialisation phase, all tokens are to\nbe distributed by the deployer of the contract.\n\nThe contract can also be self-destructed by the owner after a\nfour week delay after announcing the self-destruction. Note\nthat pausing the contract will do nothing during the\nself-destruction period.\n\n-----------------------------------------------------------------\n*/\n\n\npragma solidity 0.4.25;\npragma experimental \"v0.5.0\";\n\n\n/*\n-----------------------------------------------------------------\nFILE INFORMATION\n-----------------------------------------------------------------\n\nfile:       ERC20Token.sol\nversion:    1.0\n\n-----------------------------------------------------------------\nMODULE DESCRIPTION\n-----------------------------------------------------------------\n\nStandard ERC20 token interface.\n\n-----------------------------------------------------------------\n*/\n\n\n\n\n/**\n * @title A basic ERC20 token interface.\n * @dev To use this, be sure to implement the `approve`, `transfer`, and `transferFrom`\n *      abstract functions, and to initialise `name`, `symbol`, `decimals`, and `totalSupply`.\n */\ncontract ERC20Token {\n\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint public totalSupply;\n\n    mapping(address => uint) public balanceOf;\n    mapping(address => mapping(address => uint)) public allowance;\n\n    function approve(address spender, uint quantity) public returns (bool);\n    function transfer(address to, uint quantity) public returns (bool);\n    function transferFrom(address from, address to, uint quantity) public returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint quantity);\n    event Approval(address indexed owner, address indexed spender, uint quantity);\n\n}\n/*\n-----------------------------------------------------------------\nFILE INFORMATION\n-----------------------------------------------------------------\n\nfile:       Owned.sol\nversion:    1.1\ndate:       2018-2-26\nauthor:     Anton Jurisevic\n            Dominic Romanowski\n\nauditors: Sigma Prime, https://github.com/sigp/havven-audit\n          BlocTrax, https://havven.io/uploads/havven_bloctrax_security_audit_june-6th.pdf\n\n-----------------------------------------------------------------\nMODULE DESCRIPTION\n-----------------------------------------------------------------\n\nA contract with an owner, to be inherited by other contracts.\nRequires its owner to be explicitly set in the constructor.\nProvides an onlyOwner access modifier.\n\nTo change owner, the current owner must nominate the next owner,\nwho then has to accept the nomination. The nomination can be\ncancelled before it is accepted by the new owner by having the\nprevious owner change the nomination (setting it to 0).\n\nIf the ownership is to be relinquished, then it can be handed\nto a smart contract whose only function is to accept that\nownership, which guarantees no owner-only functionality can\never be invoked.\n\n-----------------------------------------------------------------\n*/\n\n\n/**\n * @title A contract with an owner.\n * @notice Contract ownership is transferred by first nominating the new owner,\n * who must then accept the ownership, which prevents accidental incorrect ownership transfers.\n */\ncontract Owned {\n    address public owner;\n    address public nominatedOwner;\n\n    /**\n     * @dev Owned Constructor\n     * @param _owner The initial owner of the contract.\n     */\n    constructor(address _owner)\n        public\n    {\n        require(_owner != address(0), \"Null owner address.\");\n        owner = _owner;\n        emit OwnerChanged(address(0), _owner);\n    }\n\n    /**\n     * @notice Nominate a new owner of this contract.\n     * @dev Only the current owner may nominate a new owner.\n     * @param _owner The new owner to be nominated.\n     */\n    function nominateNewOwner(address _owner)\n        public\n        onlyOwner\n    {\n        nominatedOwner = _owner;\n        emit OwnerNominated(_owner);\n    }\n\n    /**\n     * @notice Accept the nomination to be owner.\n     */\n    function acceptOwnership()\n        external\n    {\n        require(msg.sender == nominatedOwner, \"Not nominated.\");\n        emit OwnerChanged(owner, nominatedOwner);\n        owner = nominatedOwner;\n        nominatedOwner = address(0);\n    }\n\n    modifier onlyOwner\n    {\n        require(msg.sender == owner, \"Not owner.\");\n        _;\n    }\n\n    event OwnerNominated(address newOwner);\n    event OwnerChanged(address oldOwner, address newOwner);\n}\n\n/*\n-----------------------------------------------------------------------------\nMIT License\n\nCopyright (c) 2018 Havven\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n-----------------------------------------------------------------------------\n*/\n/*\n-----------------------------------------------------------------\nFILE INFORMATION\n-----------------------------------------------------------------\n\nfile:       Pausable.sol\nversion:    0.8\ndate:       2018-10-5\nauthor:     Anton Jurisevic\n\n-----------------------------------------------------------------\nMODULE DESCRIPTION\n-----------------------------------------------------------------\n\nThis contract allows inheritors to be paused and unpaused by\nitself or its owner. It offers modifiers allowing decorated functions\nto operate only if the contract is paused or unpaused as\naccording to need.\n\nThe inheriting contract must itself inherit from Owned,\nand initialise it.\n\n-----------------------------------------------------------------\n*/\n\n\n\n\n\n\n/**\n * @title A pausable contract.\n * @dev The inheriting contract must itself inherit from Owned, and initialise it.\n */\ncontract Pausable is Owned {\n\n    bool public paused;\n    \n    /**\n     * @dev Internal `pause()` with no owner-only constraint.\n     */\n    function _pause()\n        internal\n    {\n        if (!paused) {\n            paused = true;\n            emit Paused();\n        }\n    }\n\n    /**\n     * @notice Pause operations of the contract.\n     * @dev Functions modified with `onlyUnpaused` will cease to operate,\n     *      while functions with `onlyPaused` will start operating.\n     *      If this is called while the contract is paused, nothing will happen. \n     */\n    function pause() \n        public\n        onlyOwner\n    {\n        _pause();\n    }\n\n    /**\n     * @dev Internal `unpause()` with no owner-only constraint.\n     */\n    function _unpause()\n        internal\n    {\n        if (paused) {\n            paused = false;\n            emit Unpaused();\n        }\n    }\n\n    /**\n     * @notice Unpause operations of the contract.\n     * @dev Functions modified with `onlyPaused` will cease to operate,\n     *      while functions with `onlyUnpaused` will start operating.\n     *      If this is called while the contract is unpaused, nothing will happen. \n     */\n    function unpause()\n        public\n        onlyOwner\n    {\n        _unpause();\n    }\n\n    modifier onlyPaused {\n        require(paused, \"Contract must be paused.\");\n        _;\n    }\n\n    modifier pausable {\n        require(!paused, \"Contract must not be paused.\");\n        _;\n    }\n\n    event Paused();\n    event Unpaused();\n\n}\n/*\n-----------------------------------------------------------------\nFILE INFORMATION\n-----------------------------------------------------------------\n\nfile:       SelfDestructible.sol\nversion:    1.2\ndate:       2018-05-29\nauthor:     Anton Jurisevic\n\nauditors: Sigma Prime, https://github.com/sigp/havven-audit\n          BlocTrax, https://havven.io/uploads/havven_bloctrax_security_audit_june-6th.pdf\n\n-----------------------------------------------------------------\nMODULE DESCRIPTION\n-----------------------------------------------------------------\n\nThis contract allows an inheriting contract to be destroyed after\nits owner indicates an intention and then waits for a period\nwithout changing their mind. All ether contained in the contract\nis forwarded to a nominated beneficiary upon destruction.\n\nThe inheriting contract must itself inherit from Owned, and\ninitialise it.\n\n-----------------------------------------------------------------\n*/\n\n\n\n\n\n\n/**\n * @title This contract can be destroyed by its owner after a delay elapses.\n * @dev The inheriting contract must itself inherit from Owned, and initialise it.\n */\ncontract SelfDestructible is Owned {\n\n    uint public selfDestructInitiationTime;\n    bool public selfDestructInitiated;\n    address public selfDestructBeneficiary;\n    uint public constant SELFDESTRUCT_DELAY = 4 weeks;\n\n    /**\n     * @dev Constructor\n     * @param _beneficiary The account which will receive ether upon self-destruct.\n     */\n    constructor(address _beneficiary)\n        public\n    {\n        selfDestructBeneficiary = _beneficiary;\n        emit SelfDestructBeneficiaryUpdated(_beneficiary);\n    }\n\n    /**\n     * @notice Set the beneficiary address of this contract.\n     * @dev Only the contract owner may call this. The provided beneficiary must be non-null.\n     * @param _beneficiary The address to pay any eth contained in this contract to upon self-destruction.\n     */\n    function setSelfDestructBeneficiary(address _beneficiary)\n        external\n        onlyOwner\n    {\n        require(_beneficiary != address(0), \"Beneficiary must not be the zero address.\");\n        selfDestructBeneficiary = _beneficiary;\n        emit SelfDestructBeneficiaryUpdated(_beneficiary);\n    }\n\n    /**\n     * @notice Begin the self-destruction counter of this contract.\n     * Once the delay has elapsed, the contract may be self-destructed.\n     * @dev Only the contract owner may call this, and only if self-destruct has not been initiated.\n     */\n    function initiateSelfDestruct()\n        external\n        onlyOwner\n    {\n        require(!selfDestructInitiated, \"Self-destruct already initiated.\");\n        selfDestructInitiationTime = now;\n        selfDestructInitiated = true;\n        emit SelfDestructInitiated(SELFDESTRUCT_DELAY);\n    }\n\n    /**\n     * @notice Terminate and reset the self-destruction timer.\n     * @dev Only the contract owner may call this, and only during self-destruction.\n     */\n    function terminateSelfDestruct()\n        external\n        onlyOwner\n    {\n        require(selfDestructInitiated, \"Self-destruct not yet initiated.\");\n        selfDestructInitiationTime = 0;\n        selfDestructInitiated = false;\n        emit SelfDestructTerminated();\n    }\n\n    /**\n     * @notice If the self-destruction delay has elapsed, destroy this contract and\n     * remit any ether it owns to the beneficiary address.\n     * @dev Only the contract owner may call this.\n     */\n    function selfDestruct()\n        external\n        onlyOwner\n    {\n        require(selfDestructInitiated, \"Self-destruct not yet initiated.\");\n        require(selfDestructInitiationTime + SELFDESTRUCT_DELAY < now, \"Self-destruct delay has not yet elapsed.\");\n        address beneficiary = selfDestructBeneficiary;\n        emit SelfDestructed(beneficiary);\n        selfdestruct(beneficiary);\n    }\n\n    event SelfDestructTerminated();\n    event SelfDestructed(address beneficiary);\n    event SelfDestructInitiated(uint selfDestructDelay);\n    event SelfDestructBeneficiaryUpdated(address newBeneficiary);\n}\n\n/*\n-----------------------------------------------------------------------------\nMIT License\n\nCopyright (c) 2018 Havven\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n-----------------------------------------------------------------------------\n*/\n\n\n/**\n * @title The PlayChip token contract.\n * @notice This token contract has an owner, who can pause or\n *         self-destruct it after a delay. Transfers will be disabled\n *         except from the contract itself while it is paused, unless it is\n *         self-destructing.\n * @dev The contract starts paused and must be unpaused before it will operate.\n */\ncontract PlayChip is ERC20Token, Owned, Pausable, SelfDestructible {\n\n    /**\n     * @param _totalSupply The initial supply of tokens, which will be given to\n     *                     the initial owner of the contract. This quantity is\n     *                     a fixed-point integer with 18 decimal places (wei).\n     * @param _owner The initial owner of the contract, who must unpause the contract\n     *               before it can be used, but may use the `initBatchTransfer` to disburse\n     *               funds to initial token holders before unpausing it.\n     */\n    constructor(uint _totalSupply, address _owner)\n        Owned(_owner)\n        Pausable()\n        SelfDestructible(_owner)\n        public\n    {\n        _pause();\n        name = \"PlayChip\";\n        symbol = \"PLA\";\n        decimals = 18;\n        totalSupply = _totalSupply;\n        balanceOf[this] = totalSupply;\n        emit Transfer(address(0), this, totalSupply);\n    }\n\n\n    /* ========== MODIFIERS AND UTILITIES ========== */\n\n    modifier requireSameLength(uint a, uint b) {\n        require(a == b, \"Input array lengths differ.\");\n        _;\n    }\n\n    /* Although we could have merged SelfDestructible and Pausable, this\n     * modifier keeps those contracts decoupled. */\n    modifier pausableIfNotSelfDestructing {\n        require(!paused || selfDestructInitiated, \"Contract must not be paused.\");\n        _;\n    }\n\n    /**\n     * @dev Returns the difference of the given arguments. Will throw an exception iff `x < y`.\n     * @return `y` subtracted from `x`.\n     */\n    function safeSub(uint x, uint y)\n        pure\n        internal\n        returns (uint)\n    {\n        require(y <= x, \"Safe sub failed.\");\n        return x - y;\n    }\n\n\n    /* ========== ERC20 FUNCTIONS ========== */\n\n    /**\n     * @notice Transfers `quantity` tokens from `from` to `to`.\n     * @dev Throws an exception if the balance owned by the `from` address is less than `quantity`, or if\n     *      the transfer is to the 0x0 address, in case it was the result of an omitted argument.\n     * @param from The spender.\n     * @param to The recipient.\n     * @param quantity The quantity to transfer, in wei.\n     * @return Always returns true if no exception was thrown.\n     */\n    function _transfer(address from, address to, uint quantity)\n        internal\n        returns (bool)\n    {\n        require(to != address(0), \"Transfers to 0x0 disallowed.\");\n        balanceOf[from] = safeSub(balanceOf[from], quantity); // safeSub handles insufficient balance.\n        balanceOf[to] += quantity;\n        emit Transfer(from, to, quantity);\n        return true;\n\n        /* Since balances are only manipulated here, and the sum of all\n         * balances is preserved, no balance is greater than\n         * totalSupply; the safeSub implies that balanceOf[to] + quantity is\n         * no greater than totalSupply.\n         * Thus a safeAdd is unnecessary, since overflow is impossible. */\n    }\n\n    /**\n      * @notice ERC20 transfer function; transfers `quantity` tokens from the message sender to `to`.\n      * @param to The recipient.\n      * @param quantity The quantity to transfer, in wei.\n      * @dev Exceptional conditions:\n      *          * The contract is paused if it is not self-destructing.\n      *          * The sender's balance is less than the transfer quantity.\n      *          * The `to` parameter is 0x0.\n      * @return Always returns true if no exception was thrown.\n      */\n    function transfer(address to, uint quantity)\n        public\n        pausableIfNotSelfDestructing\n        returns (bool)\n    {\n        return _transfer(msg.sender, to, quantity);\n    }\n\n    /**\n     * @notice ERC20 approve function; approves `spender` to transfer up to `quantity` tokens on the sender's behalf.\n     * @param spender The approvee.\n     * @param quantity The maximum spend quantity in wei; overwrites any existing quantity.\n     * @dev Throws an exception if the contract is paused if it is not self-destructing, or if `spender` is 0x0.\n     * @return Always returns true.\n     */\n    function approve(address spender, uint quantity)\n        public\n        pausableIfNotSelfDestructing\n        returns (bool)\n    {\n        require(spender != address(0), \"Approvals for 0x0 disallowed.\");\n        allowance[msg.sender][spender] = quantity;\n        emit Approval(msg.sender, spender, quantity);\n        return true;\n    }\n\n    /**\n      * @notice ERC20 transferFrom function; transfers `quantity` tokens from\n      *         `from` to `to` if the sender is approved.\n      * @param from The spender; balance is deducted from this account.\n      * @param to The recipient.\n      * @param quantity The quantity to transfer, in wei.\n      * @dev Exceptional conditions:\n      *          * The contract is paused if it is not self-destructing.\n      *          * The `from` account has approved the sender to spend less than the transfer quantity.\n      *          * The `from` account's balance is less than the transfer quantity.\n      *          * The `to` parameter is 0x0.\n      * @return Always returns true if no exception was thrown.\n      */\n    function transferFrom(address from, address to, uint quantity)\n        public\n        pausableIfNotSelfDestructing\n        returns (bool)\n    {\n        // safeSub handles insufficient allowance.\n        allowance[from][msg.sender] = safeSub(allowance[from][msg.sender], quantity);\n        return _transfer(from, to, quantity);\n    }\n\n\n    /* ========== BATCHED ERC20 FUNCTIONS ========== */\n\n    /**\n      * @notice Performs ERC20 transfers in batches; for each `i`,\n      *         transfers `quantity[i]` tokens from the message sender to `to[i]`.\n      * @param recipients An array of recipients.\n      * @param quantities A corresponding array of transfer quantities, in wei.\n      * @dev Exceptional conditions:\n      *          * The `recipients` and `quantities` arrays differ in length.\n      *          * The sender's balance is less than the transfer quantity.\n      *          * Any recipient is 0x0.\n      * @return Always returns true if no exception was thrown.\n      */\n    function _batchTransfer(address sender, address[] recipients, uint[] quantities)\n        internal\n        requireSameLength(recipients.length, quantities.length)\n        returns (bool)\n    {\n        uint length = recipients.length;\n        for (uint i = 0; i < length; i++) {\n            _transfer(sender, recipients[i], quantities[i]);\n        }\n        return true;\n    }\n\n    /**\n      * @notice Performs ERC20 transfers in batches; for each `i`,\n      *         transfers `quantities[i]` tokens from the message sender to `recipients[i]`.\n      * @param recipients An array of recipients.\n      * @param quantities A corresponding array of transfer quantities, in wei.\n      * @dev Exceptional conditions:\n      *          * The contract is paused if it is not self-destructing.\n      *          * The `recipients` and `quantities` arrays differ in length.\n      *          * The sender's balance is less than the transfer quantity.\n      *          * Any recipient is 0x0.\n      * @return Always returns true if no exception was thrown.\n      */\n    function batchTransfer(address[] recipients, uint[] quantities)\n        external\n        pausableIfNotSelfDestructing\n        returns (bool)\n    {\n        return _batchTransfer(msg.sender, recipients, quantities);\n    }\n\n    /**\n      * @notice Performs ERC20 approvals in batches; for each `i`,\n      *         approves `quantities[i]` tokens to be spent by `spenders[i]`\n      *         on behalf of the message sender.\n      * @param spenders An array of spenders.\n      * @param quantities A corresponding array of approval quantities, in wei.\n      * @dev Exceptional conditions:\n      *          * The contract is paused if it is not self-destructing.\n      *          * The `spenders` and `quantities` arrays differ in length.\n      *          * Any spender is 0x0.\n      * @return Always returns true if no exception was thrown.\n      */\n    function batchApprove(address[] spenders, uint[] quantities)\n        external\n        pausableIfNotSelfDestructing\n        requireSameLength(spenders.length, quantities.length)\n        returns (bool)\n    {\n        uint length = spenders.length;\n        for (uint i = 0; i < length; i++) {\n            approve(spenders[i], quantities[i]);\n        }\n        return true;\n    }\n\n    /**\n      * @notice Performs ERC20 transferFroms in batches; for each `i`,\n      *         transfers `quantities[i]` tokens from `spenders[i]` to `recipients[i]`\n      *         if the sender is approved.\n      * @param spenders An array of spenders.\n      * @param recipients An array of recipients.\n      * @param quantities A corresponding array of transfer quantities, in wei.\n      * @dev For the common use cases of transferring from many spenders to one recipient or vice versa,\n      *      the sole spender or recipient must be duplicated in the input array.\n      *      Exceptional conditions:\n      *          * The contract is paused if it is not self-destructing.\n      *          * Any of the `spenders`, `recipients`, or `quantities` arrays differ in length.\n      *          * Any spender account has approved the sender to spend less than the transfer quantity.\n      *          * Any spender account's balance is less than its corresponding transfer quantity.\n      *          * Any recipient is 0x0.\n      * @return Always returns true if no exception was thrown.\n      */\n    function batchTransferFrom(address[] spenders, address[] recipients, uint[] quantities)\n        external\n        pausableIfNotSelfDestructing\n        requireSameLength(spenders.length, recipients.length)\n        requireSameLength(recipients.length, quantities.length)\n        returns (bool)\n    {\n        uint length = spenders.length;\n        for (uint i = 0; i < length; i++) {\n            transferFrom(spenders[i], recipients[i], quantities[i]);\n        }\n        return true;\n    }\n\n\n    /* ========== ADMINISTRATION FUNCTIONS ========== */\n\n    /**\n      * @notice Performs ERC20 transfers from the contract address in batches; for each `i`,\n      *         transfers `quantities[i]` tokens from the contract to `recipients[i]`.\n      *         Allows the owner to perform transfers while the contract is paused.\n      *         Intended mainly to be used to disburse funds immediately after deployment.\n      * @param recipients An array of recipients.\n      * @param quantities A corresponding array of transfer quantities, in wei.\n      * @dev Exceptional conditions:\n      *          * The sender is not the contract's owner.\n      *          * The `recipients` and `quantities` arrays differ in length.\n      *          * The contract's balance is less than the transfer quantity.\n      *          * Any recipient is 0x0.\n      * @return Always returns true if no exception was thrown.\n      */\n    function contractBatchTransfer(address[] recipients, uint[] quantities)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        return _batchTransfer(this, recipients, quantities);\n    }\n\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"quantities\",\"type\":\"uint256[]\"}],\"name\":\"contractBatchTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"setSelfDestructBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"terminateSelfDestruct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spenders\",\"type\":\"address[]\"},{\"name\":\"quantities\",\"type\":\"uint256[]\"}],\"name\":\"batchApprove\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"quantities\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"selfDestruct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SELFDESTRUCT_DELAY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spenders\",\"type\":\"address[]\"},{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"quantities\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selfDestructInitiated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initiateSelfDestruct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selfDestructInitiationTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selfDestructBeneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SelfDestructTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"SelfDestructed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"selfDestructDelay\",\"type\":\"uint256\"}],\"name\":\"SelfDestructInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newBeneficiary\",\"type\":\"address\"}],\"name\":\"SelfDestructBeneficiaryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040523480156200001157600080fd5b5060405160408062001b0e8339810160405280516020909101518080600160a060020a0381161515620000a557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e756c6c206f776e657220616464726573732e00000000000000000000000000604482015290519081900360640190fd5b60068054600160a060020a031916600160a060020a0383169081179091556040805160008152602081019290925280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a15060098054600160a060020a038316610100810261010060a860020a03199092169190911790915560408051918252517fd5da63a0b864b315bc04128dedbc93888c8529ee6cf47ce664dc204339228c539181900360200190a1506200016d6401000000006200025c810204565b6040805180820190915260088082527f506c6179436869700000000000000000000000000000000000000000000000006020909201918252620001b391600091620002d4565b506040805180820190915260038082527f504c4100000000000000000000000000000000000000000000000000000000006020909201918252620001fa91600191620002d4565b506002805460ff191660121790556003829055306000818152600460209081526040808320869055805186815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3505062000379565b60075474010000000000000000000000000000000000000000900460ff161515620002d2576007805460a060020a60ff021916740100000000000000000000000000000000000000001790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a15b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031757805160ff191683800117855562000347565b8280016001018555821562000347579182015b82811115620003475782518255916020019190600101906200032a565b506200035592915062000359565b5090565b6200037691905b8082111562000355576000815560010162000360565b90565b61178580620003896000396000f3006080604052600436106101695763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166304dee65f811461016e57806306fdde03146101ae578063095ea7b3146102385780631627540c1461025c57806318160ddd1461027f57806320714f88146102a657806323b872dd146102c7578063313ce567146102f15780633278c9601461031c5780633e11b765146103315780633f4ba83a1461035d57806353a47bb7146103725780635c975abb146103a357806370a08231146103b857806379ba5097146103d95780638456cb59146103ee57806388d695b2146104035780638da5cb5b1461042f57806395d89b41146104445780639cb8a26a14610459578063a461fc821461046e578063a9059cbb14610483578063b818f9e4146104a7578063b8225dec146104df578063bd32aa44146104f4578063c0e5e13d14610509578063c58aaae61461051e578063dd62ed3e14610533575b600080fd5b34801561017a57600080fd5b5061019a602460048035828101929082013591813591820191013561055a565b604080519115158252519081900360200190f35b3480156101ba57600080fd5b506101c3610618565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101fd5781810151838201526020016101e5565b50505050905090810190601f16801561022a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024457600080fd5b5061019a600160a060020a03600435166024356106a6565b34801561026857600080fd5b5061027d600160a060020a03600435166107cf565b005b34801561028b57600080fd5b50610294610880565b60408051918252519081900360200190f35b3480156102b257600080fd5b5061027d600160a060020a0360043516610886565b3480156102d357600080fd5b5061019a600160a060020a03600435811690602435166044356109c5565b3480156102fd57600080fd5b50610306610a8c565b6040805160ff9092168252519081900360200190f35b34801561032857600080fd5b5061027d610a95565b34801561033d57600080fd5b5061019a6024600480358281019290820135918135918201910135610b7b565b34801561036957600080fd5b5061027d610c8d565b34801561037e57600080fd5b50610387610ce7565b60408051600160a060020a039092168252519081900360200190f35b3480156103af57600080fd5b5061019a610cf6565b3480156103c457600080fd5b50610294600160a060020a0360043516610d06565b3480156103e557600080fd5b5061027d610d18565b3480156103fa57600080fd5b5061027d610dfa565b34801561040f57600080fd5b5061019a6024600480358281019290820135918135918201910135610e52565b34801561043b57600080fd5b50610387610f16565b34801561045057600080fd5b506101c3610f25565b34801561046557600080fd5b5061027d610f7f565b34801561047a57600080fd5b5061029461110c565b34801561048f57600080fd5b5061019a600160a060020a0360043516602435611113565b3480156104b357600080fd5b5061019a6024600480358281019290820135918135808301929082013591604435918201910135611187565b3480156104eb57600080fd5b5061019a611302565b34801561050057600080fd5b5061027d61130b565b34801561051557600080fd5b506102946113ff565b34801561052a57600080fd5b50610387611405565b34801561053f57600080fd5b50610294600160a060020a0360043581169060243516611419565b600654600090600160a060020a031633146105ad576040805160e560020a62461bcd02815260206004820152600a602482015260008051602061173a833981519152604482015290519081900360640190fd5b61060f308686808060200260200160405190810160405280939291908181526020018383602002808284375050604080516020808c0282810182019093528b82529095508b94508a935083925085019084908082843750611436945050505050565b95945050505050565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561069e5780601f106106735761010080835404028352916020019161069e565b820191906000526020600020905b81548152906001019060200180831161068157829003601f168201915b505050505081565b60075460009060a060020a900460ff1615806106c4575060095460ff165b1515610708576040805160e560020a62461bcd02815260206004820152601c602482015260008051602061171a833981519152604482015290519081900360640190fd5b600160a060020a0383161515610768576040805160e560020a62461bcd02815260206004820152601d60248201527f417070726f76616c7320666f722030783020646973616c6c6f7765642e000000604482015290519081900360640190fd5b336000818152600560209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600654600160a060020a0316331461081f576040805160e560020a62461bcd02815260206004820152600a602482015260008051602061173a833981519152604482015290519081900360640190fd5b60078054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229181900360200190a150565b60035481565b600654600160a060020a031633146108d6576040805160e560020a62461bcd02815260206004820152600a602482015260008051602061173a833981519152604482015290519081900360640190fd5b600160a060020a038116151561095c576040805160e560020a62461bcd02815260206004820152602960248201527f42656e6566696369617279206d757374206e6f7420626520746865207a65726f60448201527f20616464726573732e0000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60098054600160a060020a038316610100810274ffffffffffffffffffffffffffffffffffffffff00199092169190911790915560408051918252517fd5da63a0b864b315bc04128dedbc93888c8529ee6cf47ce664dc204339228c539181900360200190a150565b60075460009060a060020a900460ff1615806109e3575060095460ff165b1515610a27576040805160e560020a62461bcd02815260206004820152601c602482015260008051602061171a833981519152604482015290519081900360640190fd5b600160a060020a0384166000908152600560209081526040808320338452909152902054610a5590836114ea565b600160a060020a0385166000908152600560209081526040808320338452909152902055610a8484848461154a565b949350505050565b60025460ff1681565b600654600160a060020a03163314610ae5576040805160e560020a62461bcd02815260206004820152600a602482015260008051602061173a833981519152604482015290519081900360640190fd5b60095460ff161515610b41576040805160e560020a62461bcd02815260206004820181905260248201527f53656c662d6465737472756374206e6f742079657420696e697469617465642e604482015290519081900360640190fd5b600060088190556009805460ff191690556040517f6adcc7125002935e0aa31697538ebbd65cfddf20431eb6ecdcfc3e238bfd082c9190a1565b6000806000600760149054906101000a900460ff161580610b9e575060095460ff165b1515610be2576040805160e560020a62461bcd02815260206004820152601c602482015260008051602061171a833981519152604482015290519081900360640190fd5b8584808214610c29576040805160e560020a62461bcd02815260206004820152601b60248201526000805160206116fa833981519152604482015290519081900360640190fd5b879350600092505b83831015610c7e57610c72898985818110610c4857fe5b90506020020135600160a060020a03168888868181101515610c6657fe5b905060200201356106a6565b50600190920191610c31565b50600198975050505050505050565b600654600160a060020a03163314610cdd576040805160e560020a62461bcd02815260206004820152600a602482015260008051602061173a833981519152604482015290519081900360640190fd5b610ce561163c565b565b600754600160a060020a031681565b60075460a060020a900460ff1681565b60046020526000908152604090205481565b600754600160a060020a03163314610d7a576040805160e560020a62461bcd02815260206004820152600e60248201527f4e6f74206e6f6d696e617465642e000000000000000000000000000000000000604482015290519081900360640190fd5b60065460075460408051600160a060020a03938416815292909116602083015280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a1600780546006805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600654600160a060020a03163314610e4a576040805160e560020a62461bcd02815260206004820152600a602482015260008051602061173a833981519152604482015290519081900360640190fd5b610ce5611697565b60075460009060a060020a900460ff161580610e70575060095460ff165b1515610eb4576040805160e560020a62461bcd02815260206004820152601c602482015260008051602061171a833981519152604482015290519081900360640190fd5b61060f338686808060200260200160405190810160405280939291908181526020018383602002808284375050604080516020808c0282810182019093528b82529095508b94508a935083925085019084908082843750611436945050505050565b600654600160a060020a031681565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561069e5780601f106106735761010080835404028352916020019161069e565b600654600090600160a060020a03163314610fd2576040805160e560020a62461bcd02815260206004820152600a602482015260008051602061173a833981519152604482015290519081900360640190fd5b60095460ff16151561102e576040805160e560020a62461bcd02815260206004820181905260248201527f53656c662d6465737472756374206e6f742079657420696e697469617465642e604482015290519081900360640190fd5b426224ea00600854011015156110b4576040805160e560020a62461bcd02815260206004820152602860248201527f53656c662d64657374727563742064656c617920686173206e6f74207965742060448201527f656c61707365642e000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b5060095460408051600160a060020a0361010090930492909216808352905190917f8a09e1677ced846cb537dc2b172043bd05a1a81ad7e0033a7ef8ba762df990b7919081900360200190a180600160a060020a0316ff5b6224ea0081565b60075460009060a060020a900460ff161580611131575060095460ff165b1515611175576040805160e560020a62461bcd02815260206004820152601c602482015260008051602061171a833981519152604482015290519081900360640190fd5b61118033848461154a565b9392505050565b6000806000600760149054906101000a900460ff1615806111aa575060095460ff165b15156111ee576040805160e560020a62461bcd02815260206004820152601c602482015260008051602061171a833981519152604482015290519081900360640190fd5b8786808214611235576040805160e560020a62461bcd02815260206004820152601b60248201526000805160206116fa833981519152604482015290519081900360640190fd5b878680821461127c576040805160e560020a62461bcd02815260206004820152601b60248201526000805160206116fa833981519152604482015290519081900360640190fd5b8b9550600094505b858510156112ef576112e38d8d8781811061129b57fe5b90506020020135600160a060020a03168c8c8881811015156112b957fe5b90506020020135600160a060020a03168b8b8981811015156112d757fe5b905060200201356109c5565b50600190940193611284565b5060019c9b505050505050505050505050565b60095460ff1681565b600654600160a060020a0316331461135b576040805160e560020a62461bcd02815260206004820152600a602482015260008051602061173a833981519152604482015290519081900360640190fd5b60095460ff16156113b6576040805160e560020a62461bcd02815260206004820181905260248201527f53656c662d646573747275637420616c726561647920696e697469617465642e604482015290519081900360640190fd5b426008556009805460ff19166001179055604080516224ea00815290517fcbd94ca75b8dc45c9d80c77e851670e78843c0d75180cb81db3e2158228fa9a69181900360200190a1565b60085481565b6009546101009004600160a060020a031681565b600560209081526000928352604080842090915290825290205481565b6000806000845184518082141515611486576040805160e560020a62461bcd02815260206004820152601b60248201526000805160206116fa833981519152604482015290519081900360640190fd5b86519350600092505b838310156114dc576114d08888858151811015156114a957fe5b9060200190602002015188868151811015156114c157fe5b9060200190602002015161154a565b5060019092019161148f565b506001979650505050505050565b600082821115611544576040805160e560020a62461bcd02815260206004820152601060248201527f5361666520737562206661696c65642e00000000000000000000000000000000604482015290519081900360640190fd5b50900390565b6000600160a060020a03831615156115ac576040805160e560020a62461bcd02815260206004820152601c60248201527f5472616e736665727320746f2030783020646973616c6c6f7765642e00000000604482015290519081900360640190fd5b600160a060020a0384166000908152600460205260409020546115cf90836114ea565b600160a060020a038086166000818152600460209081526040808320959095559287168082529084902080548701905583518681529351909391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928290030190a35060019392505050565b60075460a060020a900460ff1615610ce5576007805474ff0000000000000000000000000000000000000000191690556040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a1565b60075460a060020a900460ff161515610ce5576007805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a15600496e707574206172726179206c656e67746873206469666665722e0000000000436f6e7472616374206d757374206e6f74206265207061757365642e000000004e6f74206f776e65722e00000000000000000000000000000000000000000000a165627a7a7230582093da626361dc4092071646a276ab45e44bdea3751d581c71b62e4a158ad4a17500290000000000000000000000000000000000000000a18f07d736b90be55000000000000000000000000000000089c5d24906cd8f69156f30fcc83ef83900000000",
  "constructorArguments": "0000000000000000000000000000000000000000a18f07d736b90be55000000000000000000000000000000089c5d24906cd8f69156f30fcc83ef83900000000"
}