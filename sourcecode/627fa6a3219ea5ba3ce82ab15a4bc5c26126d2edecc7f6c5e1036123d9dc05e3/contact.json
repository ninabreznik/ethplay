{
  "address": "0x82070415fee803f94ce5617be1878503e58f0a6a",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Voken",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-15\n*/\n\npragma solidity ^0.5.7;\n\n\n// Vision.Network 100G Token -- is called \"Voken\" (upgraded)\n// \n// More info:\n//   https://vision.network\n//   https://voken.io\n//\n// Contact us:\n//   [email protected]\n//   [email protected]\n\n\n/**\n * @title SafeMath\n * @dev Unsigned math operations with safety checks that revert on error.\n */\nlibrary SafeMath {\n    /**\n     * @dev Adds two unsigned integers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n     * @dev Multiplies two unsigned integers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        if (a == 0) {\n            return 0;\n        }\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two unsigned integers truncating the quotient,\n     * reverts on division by zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0);\n        uint256 c = a / b;\n        assert(a == b * c + a % b);\n        return a / b;\n    }\n\n    /**\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://eips.ethereum.org/EIPS/eip-20\n */\ninterface IERC20{\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address owner) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n/**\n * @title Ownable\n */\ncontract Ownable {\n    address internal _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract\n     * to the sender account.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @return the address of the owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == _owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) external onlyOwner {\n        require(newOwner != address(0));\n        _owner = newOwner;\n        emit OwnershipTransferred(_owner, newOwner);\n    }\n\n    /**\n     * @dev Rescue compatible ERC20 Token\n     *\n     * @param tokenAddr ERC20 The address of the ERC20 token contract\n     * @param receiver The address of the receiver\n     * @param amount uint256\n     */\n    function rescueTokens(address tokenAddr, address receiver, uint256 amount) external onlyOwner {\n        IERC20 _token = IERC20(tokenAddr);\n        require(receiver != address(0));\n        uint256 balance = _token.balanceOf(address(this));\n        \n        require(balance >= amount);\n        assert(_token.transfer(receiver, amount));\n    }\n\n    /**\n     * @dev Withdraw Ether\n     */\n    function withdrawEther(address payable to, uint256 amount) external onlyOwner {\n        require(to != address(0));\n        \n        uint256 balance = address(this).balance;\n        \n        require(balance >= amount);\n        to.transfer(amount);\n    }\n}\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n    bool private _paused;\n\n    event Paused(address account);\n    event Unpaused(address account);\n\n    constructor () internal {\n        _paused = false;\n    }\n\n    /**\n     * @return Returns true if the contract is paused, false otherwise.\n     */\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!_paused);\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     */\n    modifier whenPaused() {\n        require(_paused);\n        _;\n    }\n\n    /**\n     * @dev Called by a pauser to pause, triggers stopped state.\n     */\n    function pause() external onlyOwner whenNotPaused {\n        _paused = true;\n        emit Paused(msg.sender);\n    }\n\n    /**\n     * @dev Called by a pauser to unpause, returns to normal state.\n     */\n    function unpause() external onlyOwner whenPaused {\n        _paused = false;\n        emit Unpaused(msg.sender);\n    }\n}\n\n/**\n * @title Voken Main Contract\n */\ncontract Voken is Ownable, Pausable, IERC20 {\n    using SafeMath for uint256;\n\n    string private _name = \"Vision.Network 100G Token\";\n    string private _symbol = \"Voken\";\n    uint8 private _decimals = 6;                // 6 decimals\n    uint256 private _cap = 35000000000000000;   // 35 billion cap, that is 35000000000.000000\n    uint256 private _totalSupply;\n    \n    mapping (address => bool) private _minter;\n    event Mint(address indexed to, uint256 value);\n    event MinterChanged(address account, bool state);\n\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowed;\n\n    bool private _allowWhitelistRegistration;\n    mapping(address => address) private _referrer;\n    mapping(address => uint256) private _refCount;\n\n    event VokenSaleWhitelistRegistered(address indexed addr, address indexed refAddr);\n    event VokenSaleWhitelistTransferred(address indexed previousAddr, address indexed _newAddr);\n    event VokenSaleWhitelistRegistrationEnabled();\n    event VokenSaleWhitelistRegistrationDisabled();\n\n    uint256 private _whitelistRegistrationValue = 1001000000;   // 1001 Voken, 1001.000000\n    uint256[15] private _whitelistRefRewards = [                // 100% Reward\n        301000000,  // 301 Voken for Level.1\n        200000000,  // 200 Voken for Level.2\n        100000000,  // 100 Voken for Level.3\n        100000000,  // 100 Voken for Level.4\n        100000000,  // 100 Voken for Level.5\n        50000000,   //  50 Voken for Level.6\n        40000000,   //  40 Voken for Level.7\n        30000000,   //  30 Voken for Level.8\n        20000000,   //  20 Voken for Level.9\n        10000000,   //  10 Voken for Level.10\n        10000000,   //  10 Voken for Level.11\n        10000000,   //  10 Voken for Level.12\n        10000000,   //  10 Voken for Level.13\n        10000000,   //  10 Voken for Level.14\n        10000000    //  10 Voken for Level.15\n    ];\n\n    event Donate(address indexed account, uint256 amount);\n\n\n    /**\n     * @dev Constructor\n     */\n    constructor() public {\n        _minter[msg.sender] = true;\n        _allowWhitelistRegistration = true;\n\n        emit VokenSaleWhitelistRegistrationEnabled();\n\n        _referrer[msg.sender] = msg.sender;\n        emit VokenSaleWhitelistRegistered(msg.sender, msg.sender);\n    }\n\n\n    /**\n     * @dev donate\n     */\n    function () external payable {\n        emit Donate(msg.sender, msg.value);\n    }\n\n\n    /**\n     * @return the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @return the symbol of the token.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @return the number of decimals of the token.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @return the cap for the token minting.\n     */\n    function cap() public view returns (uint256) {\n        return _cap;\n    }\n    \n    /**\n     * @dev Total number of tokens in existence.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Gets the balance of the specified address.\n     * @param owner The address to query the balance of.\n     * @return A uint256 representing the amount owned by the passed address.\n     */\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param owner address The address which owns the funds.\n     * @param spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\n\n    /**\n     * @dev Transfer token to a specified address.\n     * @param to The address to transfer to.\n     * @param value The amount to be transferred.\n     */\n    function transfer(address to, uint256 value) public whenNotPaused returns (bool) {\n        if (_allowWhitelistRegistration && value == _whitelistRegistrationValue\n            && inWhitelist(to) && !inWhitelist(msg.sender) && isNotContract(msg.sender)) {\n            // Register whitelist for Voken-Sale\n            _regWhitelist(msg.sender, to);\n            return true;\n        } else {\n            // Normal Transfer\n            _transfer(msg.sender, to, value);\n            return true;\n        }\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\n     * @param spender The address which will spend the funds.\n     * @param addedValue The amount of tokens to increase the allowance by.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\n     * @param spender The address which will spend the funds.\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n    /**\n     * @dev Transfer tokens from one address to another.\n     * @param from address The address which you want to send tokens from\n     * @param to address The address which you want to transfer to\n     * @param value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {\n        require(_allowed[from][msg.sender] >= value);\n        _transfer(from, to, value);\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n        return true;\n    }\n\n    /**\n     * @dev Transfer token for a specified addresses.\n     * @param from The address to transfer from.\n     * @param to The address to transfer to.\n     * @param value The amount to be transferred.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Approve an address to spend another addresses' tokens.\n     * @param owner The address that owns the tokens.\n     * @param spender The address that will spend the tokens.\n     * @param value The number of tokens that can be spent.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0));\n        require(spender != address(0));\n\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n\n    /**\n     * @dev Throws if called by account not a minter.\n     */\n    modifier onlyMinter() {\n        require(_minter[msg.sender]);\n        _;\n    }\n\n    /**\n     * @dev Returns true if the given account is minter.\n     */\n    function isMinter(address account) public view returns (bool) {\n        return _minter[account];\n    }\n\n    /**\n     * @dev Set a minter state\n     */\n    function setMinterState(address account, bool state) external onlyOwner {\n        _minter[account] = state;\n        emit MinterChanged(account, state);\n    }\n\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n\n    /**\n     * @dev Internal function that mints an amount of the token and assigns it to an account.\n     * @param account The account that will receive the created tokens.\n     * @param value The amount that will be created.\n     */\n    function _mint(address account, uint256 value) internal {\n        require(_totalSupply.add(value) <= _cap);\n        require(account != address(0));\n\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Mint(account, value);\n        emit Transfer(address(0), account, value);\n    }\n\n    /**\n     * @dev Throws if called by account not in whitelist.\n     */\n    modifier onlyInWhitelist() {\n        require(_referrer[msg.sender] != address(0));\n        _;\n    }\n\n    /**\n     * @dev Returns true if the whitelist registration is allowed.\n     */\n    function allowWhitelistRegistration() public view returns (bool) {\n        return _allowWhitelistRegistration;\n    }\n\n    /**\n     * @dev Returns true if the given account is in whitelist.\n     */\n    function inWhitelist(address account) public view returns (bool) {\n        return _referrer[account] != address(0);\n    }\n\n    /**\n     * @dev Returns the referrer of a given account address\n     */\n    function referrer(address account) public view returns (address) {\n        return _referrer[account];\n    }\n\n    /**\n     * @dev Returns the referrals count of a given account address\n     */\n    function refCount(address account) public view returns (uint256) {\n        return _refCount[account];\n    }\n\n    /**\n     * @dev Disable Voken-Sale whitelist registration. Unrecoverable!\n     */\n    function disableVokenSaleWhitelistRegistration() external onlyOwner {\n        _allowWhitelistRegistration = false;\n        emit VokenSaleWhitelistRegistrationDisabled();\n    }\n\n    /**\n     * @dev Register whitelist for Voken-Sale\n     */\n    function _regWhitelist(address account, address refAccount) internal {\n        _refCount[refAccount] = _refCount[refAccount].add(1);\n        _referrer[account] = refAccount;\n\n        emit VokenSaleWhitelistRegistered(account, refAccount);\n\n        // Whitelist Registration Referral Reward\n        _transfer(msg.sender, address(this), _whitelistRegistrationValue);\n        address cursor = account;\n        uint256 remain = _whitelistRegistrationValue;\n        for(uint i = 0; i < _whitelistRefRewards.length; i++) {\n            address receiver = _referrer[cursor];\n\n            if (cursor != receiver) {\n                if (_refCount[receiver] > i) {\n                    _transfer(address(this), receiver, _whitelistRefRewards[i]);\n                    remain = remain.sub(_whitelistRefRewards[i]);\n                }\n            } else {\n                _transfer(address(this), refAccount, remain);\n                break;\n            }\n\n            cursor = _referrer[cursor];\n        }\n    }\n\n    /**\n     * @dev Transfer the whitelisted address to another.\n     */\n    function transferWhitelist(address account) external onlyInWhitelist {\n        require(isNotContract(account));\n\n        _refCount[account] = _refCount[msg.sender];\n        _refCount[msg.sender] = 0;\n        _referrer[account] = _referrer[msg.sender];\n        _referrer[msg.sender] = address(0);\n        emit VokenSaleWhitelistTransferred(msg.sender, account);\n    }\n\n    /**\n     * @dev Returns true if the given address is not a contract\n     */\n    function isNotContract(address addr) internal view returns (bool) {\n        uint size;\n        assembly {\n            size := extcodesize(addr)\n        }\n        return size == 0;\n    }\n\n    /**\n     * @dev Calculator\n     * Returns the reward amount if someone now registers the whitelist directly with the given whitelistedAccount.\n     */\n    function calculateTheRewardOfDirectWhitelistRegistration(address whitelistedAccount) external view returns (uint256 reward) {\n        if (!inWhitelist(whitelistedAccount)) {\n            return 0;\n        }\n\n        address cursor = whitelistedAccount;\n        uint256 remain = _whitelistRegistrationValue;\n        for(uint i = 1; i < _whitelistRefRewards.length; i++) {\n            address receiver = _referrer[cursor];\n\n            if (cursor != receiver) {\n                if (_refCount[receiver] > i) {\n                    remain = remain.sub(_whitelistRefRewards[i]);\n                }\n            } else {\n                reward = reward.add(remain);\n                break;\n            }\n\n            cursor = _referrer[cursor];\n        }\n\n        return reward;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"referrer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowWhitelistRegistration\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"whitelistedAccount\",\"type\":\"address\"}],\"name\":\"calculateTheRewardOfDirectWhitelistRegistration\",\"outputs\":[{\"name\":\"reward\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableVokenSaleWhitelistRegistration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setMinterState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddr\",\"type\":\"address\"},{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"inWhitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"refCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"MinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"refAddr\",\"type\":\"address\"}],\"name\":\"VokenSaleWhitelistRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousAddr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newAddr\",\"type\":\"address\"}],\"name\":\"VokenSaleWhitelistTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VokenSaleWhitelistRegistrationEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VokenSaleWhitelistRegistrationDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60c0604052601960808190527f566973696f6e2e4e6574776f726b203130304720546f6b656e0000000000000060a09081526200004091600191906200024b565b506040805180820190915260058082527f566f6b656e000000000000000000000000000000000000000000000000000000602090920191825262000087916002916200024b565b506003805460ff19166006179055667c585087238000600455633baa0c40600c55604080516101e0810182526311f0e5408152630bebc20060208201526305f5e1009181018290526060810182905260808101919091526302faf08060a08201526302625a0060c08201526301c9c38060e08201526301312d006101008201526298968061012082018190526101408201819052610160820181905261018082018190526101a082018190526101c08201526200014990600d90600f620002d0565b503480156200015757600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360008054600160a01b60ff021916815533815260066020526040808220805460ff199081166001908117909255600980549091169091179055517fcef7e739d353dde448f883da880f02de6abc5795fd0797ac8de15ee96b23eb3d9190a1336000818152600a602052604080822080546001600160a01b031916841790555182917f5d37f63410f2d07f55a14544f74bda9e21c5439cce21a81b96e1df31145a854c91a362000329565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028e57805160ff1916838001178555620002be565b82800160010185558215620002be579182015b82811115620002be578251825591602001919060010190620002a1565b50620002cc92915062000309565b5090565b82600f8101928215620002be579160200282015b82811115620002be578251829063ffffffff16905591602001919060010190620002e4565b6200032691905b80821115620002cc576000815560010162000310565b90565b6114e780620003396000396000f3fe6080604052600436106101c25760003560e01c806361f3571e116100f7578063a746f93a11610095578063dd62ed3e11610064578063dd62ed3e146106c6578063e2aafa2114610701578063ec8f95fc14610734578063f2fde38b14610767576101c2565b8063a746f93a146105dc578063a9059cbb14610617578063aa271e1a14610650578063cea9d26f14610683576101c2565b80638456cb59116100d15780638456cb59146105645780638da5cb5b1461057957806395d89b411461058e578063a457c2d7146105a3576101c2565b806361f3571e146104e957806370a08231146104fe5780637ffbe24114610531576101c2565b806336b21ed41161016457806340c10f191161013e57806340c10f191461042f578063522f6815146104685780635c975abb146104a15780635ca23ce2146104b6576101c2565b806336b21ed4146103ca57806339509351146103df5780633f4ba83a14610418576101c2565b806323b872dd116101a057806323b872dd146102f85780632cf003c21461033b578063313ce5671461038a578063355274ea146103b5576101c2565b806306fdde03146101fa578063095ea7b31461028457806318160ddd146102d1575b60408051348152905133917f0553260a2e46b0577270d8992db02d30856ca880144c72d6e9503760946aef13919081900360200190a2005b34801561020657600080fd5b5061020f61079a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610249578181015183820152602001610231565b50505050905090810190601f1680156102765780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561029057600080fd5b506102bd600480360360408110156102a757600080fd5b506001600160a01b03813516906020013561082f565b604080519115158252519081900360200190f35b3480156102dd57600080fd5b506102e6610846565b60408051918252519081900360200190f35b34801561030457600080fd5b506102bd6004803603606081101561031b57600080fd5b506001600160a01b0381358116916020810135909116906040013561084c565b34801561034757600080fd5b5061036e6004803603602081101561035e57600080fd5b50356001600160a01b03166108e9565b604080516001600160a01b039092168252519081900360200190f35b34801561039657600080fd5b5061039f61090a565b6040805160ff9092168252519081900360200190f35b3480156103c157600080fd5b506102e6610913565b3480156103d657600080fd5b506102bd610919565b3480156103eb57600080fd5b506102bd6004803603604081101561040257600080fd5b506001600160a01b038135169060200135610922565b34801561042457600080fd5b5061042d61095e565b005b34801561043b57600080fd5b506102bd6004803603604081101561045257600080fd5b506001600160a01b0381351690602001356109d0565b34801561047457600080fd5b5061042d6004803603604081101561048b57600080fd5b506001600160a01b0381351690602001356109f6565b3480156104ad57600080fd5b506102bd610a6b565b3480156104c257600080fd5b506102e6600480360360208110156104d957600080fd5b50356001600160a01b0316610a7b565b3480156104f557600080fd5b5061042d610b55565b34801561050a57600080fd5b506102e66004803603602081101561052157600080fd5b50356001600160a01b0316610ba1565b34801561053d57600080fd5b5061042d6004803603602081101561055457600080fd5b50356001600160a01b0316610bbc565b34801561057057600080fd5b5061042d610c7a565b34801561058557600080fd5b5061036e610cf3565b34801561059a57600080fd5b5061020f610d02565b3480156105af57600080fd5b506102bd600480360360408110156105c657600080fd5b506001600160a01b038135169060200135610d60565b3480156105e857600080fd5b5061042d600480360360408110156105ff57600080fd5b506001600160a01b0381351690602001351515610d9c565b34801561062357600080fd5b506102bd6004803603604081101561063a57600080fd5b506001600160a01b038135169060200135610e17565b34801561065c57600080fd5b506102bd6004803603602081101561067357600080fd5b50356001600160a01b0316610e96565b34801561068f57600080fd5b5061042d600480360360608110156106a657600080fd5b506001600160a01b03813581169160208101359091169060400135610eb4565b3480156106d257600080fd5b506102e6600480360360408110156106e957600080fd5b506001600160a01b0381358116916020013516611000565b34801561070d57600080fd5b506102bd6004803603602081101561072457600080fd5b50356001600160a01b031661102b565b34801561074057600080fd5b506102e66004803603602081101561075757600080fd5b50356001600160a01b031661104b565b34801561077357600080fd5b5061042d6004803603602081101561078a57600080fd5b50356001600160a01b0316611066565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156108255780601f106107fa57610100808354040283529160200191610825565b820191906000526020600020905b81548152906001019060200180831161080857829003601f168201915b5050505050905090565b600061083c3384846110de565b5060015b92915050565b60055490565b60008054600160a01b900460ff161561086457600080fd5b6001600160a01b038416600090815260086020908152604080832033845290915290205482111561089457600080fd5b61089f848484611166565b6001600160a01b0384166000908152600860209081526040808320338085529252909120546108df9186916108da908663ffffffff61123316565b6110de565b5060019392505050565b6001600160a01b038082166000908152600a6020526040902054165b919050565b60035460ff1690565b60045490565b60095460ff1690565b3360008181526008602090815260408083206001600160a01b0387168452909152812054909161083c9185906108da908663ffffffff61124516565b6000546001600160a01b0316331461097557600080fd5b600054600160a01b900460ff1661098b57600080fd5b60008054600160a01b60ff02191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b3360009081526006602052604081205460ff166109ec57600080fd5b61083c8383611252565b6000546001600160a01b03163314610a0d57600080fd5b6001600160a01b038216610a2057600080fd5b303181811015610a2f57600080fd5b6040516001600160a01b0384169083156108fc029084906000818181858888f19350505050158015610a65573d6000803e3d6000fd5b50505050565b600054600160a01b900460ff1690565b6000610a868261102b565b610a9257506000610905565b600c54829060015b600f811015610b4d576001600160a01b038084166000818152600a6020526040902054909116908114610b0e576001600160a01b0381166000908152600b6020526040902054821015610b0957610b06600d83600f8110610af757fe5b0154849063ffffffff61123316565b92505b610b26565b610b1e858463ffffffff61124516565b945050610b4d565b506001600160a01b039283166000908152600a602052604090205490921691600101610a9a565b505050919050565b6000546001600160a01b03163314610b6c57600080fd5b6009805460ff191690556040517f8026f8893a6481bab71e1061fec48febf2d5bb80b1151831b0f697298d58bd9790600090a1565b6001600160a01b031660009081526007602052604090205490565b336000908152600a60205260409020546001600160a01b0316610bde57600080fd5b610be78161135c565b610bf057600080fd5b336000818152600b6020908152604080832080546001600160a01b038781168087528487209290925586865291859055600a90935281842080548486528386208054919093166001600160a01b03199182161790925585855280549091169055519092917f8f301448ae6ec66965bab75930c82a571ca27b842129ffcc59153ff3c4d2c7c691a350565b6000546001600160a01b03163314610c9157600080fd5b600054600160a01b900460ff1615610ca857600080fd5b60008054600160a01b60ff021916600160a01b1790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b6000546001600160a01b031690565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156108255780601f106107fa57610100808354040283529160200191610825565b3360008181526008602090815260408083206001600160a01b0387168452909152812054909161083c9185906108da908663ffffffff61123316565b6000546001600160a01b03163314610db357600080fd5b6001600160a01b038216600081815260066020908152604091829020805460ff191685151590811790915582519384529083015280517f04bca3656717d14c20f88f2a0122832cb0d2807bfc66ed9e932a2202cc59f4959281900390910190a15050565b60008054600160a01b900460ff1615610e2f57600080fd5b60095460ff168015610e425750600c5482145b8015610e525750610e528361102b565b8015610e645750610e623361102b565b155b8015610e745750610e743361135c565b15610e8b57610e833384611361565b506001610840565b610e83338484611166565b6001600160a01b031660009081526006602052604090205460ff1690565b6000546001600160a01b03163314610ecb57600080fd5b826001600160a01b038316610edf57600080fd5b60408051600160e01b6370a0823102815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b158015610f2c57600080fd5b505afa158015610f40573d6000803e3d6000fd5b505050506040513d6020811015610f5657600080fd5b5051905082811015610f6757600080fd5b816001600160a01b031663a9059cbb85856040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610fc757600080fd5b505af1158015610fdb573d6000803e3d6000fd5b505050506040513d6020811015610ff157600080fd5b5051610ff957fe5b5050505050565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6001600160a01b039081166000908152600a602052604090205416151590565b6001600160a01b03166000908152600b602052604090205490565b6000546001600160a01b0316331461107d57600080fd5b6001600160a01b03811661109057600080fd5b600080546001600160a01b0319166001600160a01b0383811691821780845560405192939116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b6001600160a01b0383166110f157600080fd5b6001600160a01b03821661110457600080fd5b6001600160a01b03808416600081815260086020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03821661117957600080fd5b6001600160a01b0383166000908152600760205260409020546111a2908263ffffffff61123316565b6001600160a01b0380851660009081526007602052604080822093909355908416815220546111d7908263ffffffff61124516565b6001600160a01b0380841660008181526007602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561123f57fe5b50900390565b8181018281101561084057fe5b600454600554611268908363ffffffff61124516565b111561127357600080fd5b6001600160a01b03821661128657600080fd5b600554611299908263ffffffff61124516565b6005556001600160a01b0382166000908152600760205260409020546112c5908263ffffffff61124516565b6001600160a01b038316600081815260076020908152604091829020939093558051848152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a26040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b3b1590565b6001600160a01b0381166000908152600b602052604090205461138b90600163ffffffff61124516565b6001600160a01b038083166000818152600b6020908152604080832095909555928616808252600a90935283812080546001600160a01b03191683179055925190927f5d37f63410f2d07f55a14544f74bda9e21c5439cce21a81b96e1df31145a854c91a36113fd3330600c54611166565b600c54829060005b600f811015610ff9576001600160a01b038084166000818152600a6020526040902054909116908114611483576001600160a01b0381166000908152600b602052604090205482101561147e5761146b3082600d85600f811061146457fe5b0154611166565b61147b600d83600f8110610af757fe5b92505b611494565b61148e308685611166565b50610ff9565b506001600160a01b039283166000908152600a60205260409020549092169160010161140556fea165627a7a72305820cf3991bccd230ca20ba7a60906997ef30273e35721afc8f252ee4414057ec5260029"
}