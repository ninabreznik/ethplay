{
  "address": "0xa3ebd756729904ba2a39289751d96d9b2eac793b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "RVCoin",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-03\n*/\n\npragma solidity ^0.4.23;\n\n// ================= Ownable Contract start =============================\n/*\n * Ownable\n *\n * Base contract with an owner.\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\n */\ncontract Ownable {\n  address public owner;\n\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function transferOwnership(address newOwner) public onlyOwner {\n    if (newOwner != address(0)) {\n      owner = newOwner;\n    }\n  }\n}\n// ================= Ownable Contract end ===============================\n\n// ================= Safemath Lib ============================\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  /**\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n// ================= Safemath Lib end ==============================\n\n// ================= ERC20 Token Contract start =========================\n/*\n * ERC20 interface\n * see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  function burn(uint256 _value) public returns (bool);\n\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n  \n  // This notifies clients about the amount burnt\n  event Burn(address indexed from, uint256 value);\n}\n// ================= ERC20 Token Contract end ===========================\n\n// ================= Standard Token Contract start ======================\ncontract StandardToken is ERC20 {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n\n    /**\n     * Destroy tokens\n     *\n     * Remove `_value` tokens from the system irreversibly\n     *\n     * @param _value the amount of money to burn\n     */\n  function burn(uint256 _value) public returns (bool success) {\n      require(balances[msg.sender] >= _value);   // Check if the sender has enough\n      balances[msg.sender] -= _value;            // Subtract from the sender\n      totalSupply_ -= _value;                      // Updates totalSupply\n      emit Burn(msg.sender, _value);\n      return true;\n  }\n  \n}\n// ================= Standard Token Contract end ========================\n\n// ================= Pausable Token Contract start ======================\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n  * @dev modifier to allow actions only when the contract IS paused\n  */\n  modifier whenNotPaused() {\n    require (!paused);\n    _;\n  }\n\n  /**\n  * @dev modifier to allow actions only when the contract IS NOT paused\n  */\n  modifier whenPaused {\n    require (paused) ;\n    _;\n  }\n\n  /**\n  * @dev called by the owner to pause, triggers stopped state\n  */\n  function pause() public onlyOwner whenNotPaused returns (bool) {\n    paused = true;\n    emit Pause();\n    return true;\n  }\n\n  /**\n  * @dev called by the owner to unpause, returns to normal state\n  */\n  function unpause() public onlyOwner whenPaused returns (bool) {\n    paused = false;\n    emit Unpause();\n    return true;\n  }\n}\n// ================= Pausable Token Contract end ========================\n\n// ================= RVCoin  start =======================\ncontract RVCoin is StandardToken, Pausable {\n  string public constant name = 'Renvale Coin';\n  string public constant symbol = 'RVC';\n  uint256 public constant decimals = 18;\n  address public rvDepositAddress; \n\n  uint256 public constant rvDeposit = 2000000000 * 10**decimals;\n\n  constructor(address _rvDepositAddress) public { \n    rvDepositAddress = _rvDepositAddress;\n\n    balances[rvDepositAddress] = rvDeposit;\n    emit Transfer(0x0, rvDepositAddress, rvDeposit);\n    totalSupply_ = rvDeposit;\n  }\n\n  function transfer(address _to, uint256 _value) public whenNotPaused returns (bool success) {\n    return super.transfer(_to,_value);\n  }\n\n  function approve(address _spender, uint256 _value) public whenNotPaused returns (bool success) {\n    return super.approve(_spender, _value);\n  }\n\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return super.balanceOf(_owner);\n  }\n\n  function burn(uint256 _value) public returns (bool success){\n     return super.burn(_value);\n  }\n}\n// ================= Token Contract end =======================",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rvDepositAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rvDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_rvDepositAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "60806040526003805460a060020a60ff021916905534801561002057600080fd5b50604051602080610ad2833981016040818152915160038054600160a060020a03338116600160a060020a031992831617909255600480548385169216919091178082558216600090815260208181528682206b06765c793fa10079d000000090819055925492865295519395919092169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3506b06765c793fa10079d00000006002556109f4806100de6000396000f3006080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101b757806323b872dd146101de5780632cae249a14610208578063313ce567146102395780633f4ba83a1461024e57806342966c68146102635780635c975abb1461027b57806370a08231146102905780638456cb59146102b15780638d24d147146102c65780638da5cb5b146102db57806395d89b41146102f0578063a9059cbb14610305578063dd62ed3e14610329578063f2fde38b14610350575b600080fd5b34801561010157600080fd5b5061010a610373565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014457818101518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018b57600080fd5b506101a3600160a060020a03600435166024356103aa565b604080519115158252519081900360200190f35b3480156101c357600080fd5b506101cc6103d5565b60408051918252519081900360200190f35b3480156101ea57600080fd5b506101a3600160a060020a03600435811690602435166044356103db565b34801561021457600080fd5b5061021d61055b565b60408051600160a060020a039092168252519081900360200190f35b34801561024557600080fd5b506101cc61056a565b34801561025a57600080fd5b506101a361056f565b34801561026f57600080fd5b506101a36004356105f2565b34801561028757600080fd5b506101a3610603565b34801561029c57600080fd5b506101cc600160a060020a0360043516610613565b3480156102bd57600080fd5b506101a361061e565b3480156102d257600080fd5b506101cc6106a6565b3480156102e757600080fd5b5061021d6106b6565b3480156102fc57600080fd5b5061010a6106c5565b34801561031157600080fd5b506101a3600160a060020a03600435166024356106fc565b34801561033557600080fd5b506101cc600160a060020a0360043581169060243516610720565b34801561035c57600080fd5b50610371600160a060020a036004351661074b565b005b60408051808201909152600c81527f52656e76616c6520436f696e0000000000000000000000000000000000000000602082015281565b60035460009060a060020a900460ff16156103c457600080fd5b6103ce83836107a1565b9392505050565b60025490565b6000600160a060020a03831615156103f257600080fd5b600160a060020a03841660009081526020819052604090205482111561041757600080fd5b600160a060020a038085166000908152600160209081526040808320339094168352929052205482111561044a57600080fd5b600160a060020a038416600090815260208190526040902054610473908363ffffffff61080b16565b600160a060020a0380861660009081526020819052604080822093909355908516815220546104a8908363ffffffff61081d16565b600160a060020a03808516600090815260208181526040808320949094558783168252600181528382203390931682529190915220546104ee908363ffffffff61080b16565b600160a060020a038086166000818152600160209081526040808320338616845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b600454600160a060020a031681565b601281565b60035460009033600160a060020a0390811691161461058d57600080fd5b60035460a060020a900460ff1615156105a557600080fd5b6003805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a150600190565b60006105fd8261082c565b92915050565b60035460a060020a900460ff1681565b60006105fd826108b4565b60035460009033600160a060020a0390811691161461063c57600080fd5b60035460a060020a900460ff161561065357600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a150600190565b6b06765c793fa10079d000000081565b600354600160a060020a031681565b60408051808201909152600381527f5256430000000000000000000000000000000000000000000000000000000000602082015281565b60035460009060a060020a900460ff161561071657600080fd5b6103ce83836108cf565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60035433600160a060020a0390811691161461076657600080fd5b600160a060020a0381161561079e576003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b600160a060020a03338116600081815260016020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60008282111561081757fe5b50900390565b6000828201838110156103ce57fe5b600160a060020a03331660009081526020819052604081205482111561085157600080fd5b600160a060020a0333166000818152602081815260409182902080548690039055600280548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b600160a060020a031660009081526020819052604090205490565b6000600160a060020a03831615156108e657600080fd5b600160a060020a03331660009081526020819052604090205482111561090b57600080fd5b600160a060020a033316600090815260208190526040902054610934908363ffffffff61080b16565b600160a060020a033381166000908152602081905260408082209390935590851681522054610969908363ffffffff61081d16565b600160a060020a03808516600081815260208181526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3506001929150505600a165627a7a7230582070af182191207d1538d6392ae4783f17739d7ec54b5e280ed17795d8ae3539b70029000000000000000000000000b3d4ccaa7993de3ac538ba6623e63ebc12fce36f",
  "constructorArguments": "000000000000000000000000b3d4ccaa7993de3ac538ba6623e63ebc12fce36f"
}