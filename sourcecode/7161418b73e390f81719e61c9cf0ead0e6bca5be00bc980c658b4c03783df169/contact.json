{
  "address": "0xe746993eb1b03327a8f432b93090aaa2314f8c07",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Smart234",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-07\n*/\n\n/**\n *  https://Smart-234.io\n *\n * Smart-contract start at 11 Dec 2018 10:00 UTC\n *\n *\n * Smart-234 Contract\n *  - GAIN 2.34% PER 24 HOURS\n *  -     +0.02% every day before the payment\n *\n *  - Minimal contribution 0.01 eth\n *  - Currency and payment - ETH\n *  - Contribution allocation schemes:\n *    -- 96% payments\n *    -- 4% Marketing\n *\n *\n * You get MORE PROFIT if you withdraw later !\n * Increase of the total rate of return by 0.02% every day before the payment.\n * The increase in profitability affects all previous days!\n *  After the dividend is paid, the rate of return is returned to 2.34 % per day\n *\n *           For example: if the Deposit is 10 ETH\n *\n *                days      |   %    |   profit\n *          --------------------------------------\n *            1 (>24 hours) | 2.36 % | 0.235 ETH\n *              10          | 2.54 % | 2.54  ETH\n *              30          | 2.94 % | 8.82  ETH\n *              50          | 3.34 % | 16.7  ETH\n *              100         | 4.34 % | 43.4  ETH\n *\n *\n * How to use:\n *  1. Send any amount of ether to make an investment\n *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're spending too much on GAS)\n *  OR\n *  2b. Send more ether to reinvest AND get your profit at the same time\n *\n * RECOMMENDED GAS LIMIT: 250000\n * RECOMMENDED GAS PRICE: https://ethgasstation.info/\n *\n * Contract reviewed and approved by experts!\n *\n */\n\npragma solidity ^0.4.24;\n\nlibrary SafeMath {\n\n    function mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        if (_a == 0) {\n            return 0;\n        }\n\n        uint256 c = _a * _b;\n        require(c / _a == _b);\n\n        return c;\n    }\n\n    function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        require(_b > 0);\n        uint256 c = _a / _b;\n\n        return c;\n    }\n\n    function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        require(_b <= _a);\n        uint256 c = _a - _b;\n\n        return c;\n    }\n\n    function add(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        uint256 c = _a + _b;\n        require(c >= _a);\n\n        return c;\n    }\n}\n\ncontract InvestorsStorage {\n    using SafeMath for uint256;\n\n    address private owner;\n    uint private _investorsCount;\n\n    struct Deposit {\n        uint amount;\n        uint start;\n    }\n\n    struct Investor {\n        Deposit[] deposits;\n        uint checkpoint;\n        address referrer;\n    }\n\n    mapping (address => Investor) private investors;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function addDeposit(address _address, uint _value) external onlyOwner {\n        investors[_address].deposits.push(Deposit(_value, block.timestamp));\n        if (investors[_address].checkpoint == 0) {\n            investors[_address].checkpoint = block.timestamp;\n            _investorsCount += 1;\n        }\n    }\n\n    function updateCheckpoint(address _address) external onlyOwner {\n        investors[_address].checkpoint = block.timestamp;\n    }\n\n    function addReferrer(address _referral, address _referrer) external onlyOwner {\n        investors[_referral].referrer = _referrer;\n    }\n\n    function getInterest(address _address, uint _index, bool _exception) public view returns(uint) {\n        if (investors[_address].deposits[_index].amount > 0) {\n            if (_exception) {\n                uint time = investors[_address].deposits[_index].start;\n            } else {\n                time = investors[_address].checkpoint;\n            }\n            return(234 + ((block.timestamp - time) / 1 days) * 2);\n        }\n    }\n\n    function isException(address _address, uint _index) public view returns(bool) {\n        if (investors[_address].deposits[_index].start > investors[_address].checkpoint) {\n            return true;\n        }\n    }\n\n    function d(address _address, uint _index) public view returns(uint) {\n        return investors[_address].deposits[_index].amount;\n    }\n\n    function c(address _address) public view returns(uint) {\n        return investors[_address].checkpoint;\n    }\n\n    function r(address _address) external view returns(address) {\n        return investors[_address].referrer;\n    }\n\n    function s(address _address, uint _index) public view returns(uint) {\n        return investors[_address].deposits[_index].start;\n    }\n\n    function sumOfDeposits(address _address) external view returns(uint) {\n        uint sum;\n        for (uint i = 0; i < investors[_address].deposits.length; i++) {\n            sum += investors[_address].deposits[i].amount;\n        }\n        return sum;\n    }\n\n    function amountOfDeposits(address _address) external view returns(uint) {\n        return investors[_address].deposits.length;\n    }\n\n    function dividends(address _address) external view returns(uint) {\n        uint _payout;\n        uint percent = getInterest(_address, 0, false);\n\n        for (uint i = 0; i < investors[_address].deposits.length; i++) {\n            if (!isException(_address, i)) {\n                _payout += (d(_address, i).mul(percent).div(10000)).mul(block.timestamp.sub(c(_address))).div(1 days);\n            } else {\n                _payout += (d(_address, i).mul(getInterest(_address, i, true)).div(10000)).mul(block.timestamp.sub(s(_address, i))).div(1 days);\n            }\n        }\n\n        return _payout;\n    }\n\n    function investorsCount() external view returns(uint) {\n        return _investorsCount;\n    }\n}\n\ncontract Smart234 {\n    using SafeMath for uint;\n\n    address admin;\n    uint waveStartUp;\n\n    uint invested;\n    uint payed;\n    uint startTime;\n\n    event LogInvestment(address indexed _addr, uint _value, uint _bonus);\n    event LogIncome(address indexed _addr, uint _value);\n    event LogReferrerAdded(address indexed _investor, address indexed _referrer);\n    event LogRefBonus(address indexed _investor, address indexed _referrer, uint _amount, uint indexed _level);\n    event LogNewWave(uint _waveStartUp);\n\n    InvestorsStorage private x;\n\n    modifier notOnPause() {\n        require(waveStartUp <= block.timestamp);\n        _;\n    }\n\n    function bytesToAddress(bytes _source) internal pure returns(address parsedReferrer) {\n        assembly {\n            parsedReferrer := mload(add(_source,0x14))\n        }\n        return parsedReferrer;\n    }\n\n    function addReferrer() internal returns(uint) {\n        address _referrer = bytesToAddress(bytes(msg.data));\n        if (_referrer != msg.sender) {\n            x.addReferrer(msg.sender, _referrer);\n            emit LogReferrerAdded(msg.sender, _referrer);\n            return(msg.value / 20);\n        }\n    }\n\n    function refSystem() private {\n        address first = x.r(msg.sender);\n        if (x.amountOfDeposits(first) < 500) {\n            x.addDeposit(first, msg.value / 10);\n            emit LogRefBonus(msg.sender, first, msg.value / 10, 1);\n        }\n        address second = x.r(first);\n        if (second != 0x0) {\n            if (x.amountOfDeposits(second) < 500) {\n                x.addDeposit(second, msg.value / 20);\n                emit LogRefBonus(msg.sender, second, msg.value / 20, 2);\n            }\n            address third = x.r(second);\n            if (third != 0x0) {\n                if (x.amountOfDeposits(third) < 500) {\n                    x.addDeposit(third, msg.value * 3 / 100);\n                    emit LogRefBonus(msg.sender, third, msg.value * 3 / 100, 3);\n                }\n            }\n        }\n    }\n\n    constructor(address _admin) public {\n        admin = _admin;\n        x = new InvestorsStorage();\n        startTime = 1544522400;\n        waveStartUp = 1544522400;\n    }\n\n    function() external payable {\n        if (msg.value == 0) {\n            withdraw();\n        } else {\n            invest();\n        }\n    }\n\n    function invest() notOnPause public payable {\n        require(msg.value >= 0.01 ether);\n        admin.transfer(msg.value / 25);\n\n        if (x.r(msg.sender) != 0x0) {\n            refSystem();\n        } else if (msg.data.length == 20) {\n            uint bonus = addReferrer();\n            refSystem();\n        }\n\n        x.addDeposit(msg.sender, msg.value + bonus);\n\n        invested += msg.value;\n        emit LogInvestment(msg.sender, msg.value, bonus);\n    }\n\n    function withdraw() public {\n\n        uint _payout = x.dividends(msg.sender);\n\n        if (_payout > 0) {\n\n            if (_payout > address(this).balance) {\n                nextWave();\n                return;\n            }\n\n            x.updateCheckpoint(msg.sender);\n            admin.transfer(_payout / 25);\n            msg.sender.transfer(_payout * 24 / 25);\n            emit LogIncome(msg.sender, _payout);\n            payed += _payout;\n        }\n    }\n\n    function getDeposits(address _address) external view returns(uint) {\n        return x.sumOfDeposits(_address);\n    }\n\n    function getDividends(address _address) external view returns(uint) {\n        return x.dividends(_address);\n    }\n\n    function getDividendsWithFee(address _address) external view returns(uint) {\n        return x.dividends(_address) * 24 / 25;\n    }\n\n    function getDaysAfterStart() external view returns(uint) {\n        return (block.timestamp.sub(startTime)) / 1 days;\n    }\n\n    function investorsCount() external view returns(uint) {\n        return x.investorsCount();\n    }\n\n    function getInvestedAmount() external view returns(uint) {\n        return invested;\n    }\n\n    function getPayedAmount() external view returns(uint) {\n        return payed;\n    }\n\n    function nextWave() private {\n        x = new InvestorsStorage();\n        invested = 0;\n        payed = 0;\n        waveStartUp = block.timestamp + 7 days;\n        emit LogNewWave(waveStartUp);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"getPayedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investorsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDividends\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInvestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDeposits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDaysAfterStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"invest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDividendsWithFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_bonus\",\"type\":\"uint256\"}],\"name\":\"LogInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"LogIncome\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_investor\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"LogReferrerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_investor\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_referrer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"LogRefBonus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_waveStartUp\",\"type\":\"uint256\"}],\"name\":\"LogNewWave\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50604051602080613b3683398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061007b6100f4565b604051809103906000f080158015610097573d6000803e3d6000fd5b50600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550635c0f8aa0600481905550635c0f8aa060018190555050610104565b604051610fd680612b6083390190565b612a4d806101136000396000f300608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301c5e789146100ba5780632b711051146100e55780633ccfd60b146101105780634634d81c14610127578063622430961461017e57806394f649dd146101a9578063a612ad1b14610200578063e8b5e51f1461022b578063fc6ce45414610235575b60003414156100af576100aa61028c565b6100b8565b6100b76105bf565b5b005b3480156100c657600080fd5b506100cf6108e9565b6040518082815260200191505060405180910390f35b3480156100f157600080fd5b506100fa6108f3565b6040518082815260200191505060405180910390f35b34801561011c57600080fd5b5061012561028c565b005b34801561013357600080fd5b50610168600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109bb565b6040518082815260200191505060405180910390f35b34801561018a57600080fd5b50610193610abc565b6040518082815260200191505060405180910390f35b3480156101b557600080fd5b506101ea600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ac6565b6040518082815260200191505060405180910390f35b34801561020c57600080fd5b50610215610bc7565b6040518082815260200191505060405180910390f35b6102336105bf565b005b34801561024157600080fd5b50610276600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bf1565b6040518082815260200191505060405180910390f35b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368306e43336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561034b57600080fd5b505af115801561035f573d6000803e3d6000fd5b505050506040513d602081101561037557600080fd5b8101908080519060200190929190505050905060008111156105bb573073ffffffffffffffffffffffffffffffffffffffff16318111156103bd576103b8610d01565b6105bc565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663702f5e19336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561047a57600080fd5b505af115801561048e573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6019838115156104d957fe5b049081150290604051600060405180830381858888f19350505050158015610505573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60196018840281151561052f57fe5b049081150290604051600060405180830381858888f1935050505015801561055b573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f775a4b833dabde5f04ba402b274ca998395ebc79ce796b112b67d85d272a38ee826040518082815260200191505060405180910390a2806003600082825401925050819055505b5b50565b600042600154111515156105d257600080fd5b662386f26fc1000034101515156105e857600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60193481151561062f57fe5b049081150290604051600060405180830381858888f1935050505015801561065b573d6000803e3d6000fd5b506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663566ab6f9336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561071b57600080fd5b505af115801561072f573d6000803e3d6000fd5b505050506040513d602081101561074557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415156107805761077b610dbd565b6107a1565b6014600036905014156107a057610795611817565b905061079f610dbd565b5b5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166333026bb6338334016040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561086857600080fd5b505af115801561087c573d6000803e3d6000fd5b50505050346002600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2bfd700a1e8c1a962881e39b6d7019b63359e1c0279e75f8210b98d33bbdab393483604051808381526020018281526020019250505060405180910390a250565b6000600354905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632b7110516040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561097b57600080fd5b505af115801561098f573d6000803e3d6000fd5b505050506040513d60208110156109a557600080fd5b8101908080519060200190929190505050905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368306e43836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610a7a57600080fd5b505af1158015610a8e573d6000803e3d6000fd5b505050506040513d6020811015610aa457600080fd5b81019080805190602001909291905050509050919050565b6000600254905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663759f7785836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610b8557600080fd5b505af1158015610b99573d6000803e3d6000fd5b505050506040513d6020811015610baf57600080fd5b81019080805190602001909291905050509050919050565b600062015180610be260045442611a0990919063ffffffff16565b811515610beb57fe5b04905090565b600060196018600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368306e43856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610cb457600080fd5b505af1158015610cc8573d6000803e3d6000fd5b505050506040513d6020811015610cde57600080fd5b810190808051906020019092919050505002811515610cf957fe5b049050919050565b610d09611a3b565b604051809103906000f080158015610d25573d6000803e3d6000fd5b50600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600281905550600060038190555062093a8042016001819055507f5988b0a8d3b8ed2d9961af381f4cf0619bd49b20e1e5c8db63322f6d0b7893606001546040518082815260200191505060405180910390a1565b6000806000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663566ab6f9336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610e7f57600080fd5b505af1158015610e93573d6000803e3d6000fd5b505050506040513d6020811015610ea957600080fd5b810190808051906020019092919050505092506101f4600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362c1a2a2856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610f7c57600080fd5b505af1158015610f90573d6000803e3d6000fd5b505050506040513d6020811015610fa657600080fd5b8101908080519060200190929190505050101561111a57600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166333026bb684600a3481151561100857fe5b046040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561108e57600080fd5b505af11580156110a2573d6000803e3d6000fd5b5050505060018373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffc1c3975fdae0d5f5c7627d64cf4359583a6a39394a8f8cdb2613d188544e3e8600a3481151561110357fe5b046040518082815260200191505060405180910390a45b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663566ab6f9846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156111d757600080fd5b505af11580156111eb573d6000803e3d6000fd5b505050506040513d602081101561120157600080fd5b8101908080519060200190929190505050915060008273ffffffffffffffffffffffffffffffffffffffff16141515611812576101f4600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362c1a2a2846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156112f457600080fd5b505af1158015611308573d6000803e3d6000fd5b505050506040513d602081101561131e57600080fd5b8101908080519060200190929190505050101561149257600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166333026bb68360143481151561138057fe5b046040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561140657600080fd5b505af115801561141a573d6000803e3d6000fd5b5050505060028273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffc1c3975fdae0d5f5c7627d64cf4359583a6a39394a8f8cdb2613d188544e3e860143481151561147b57fe5b046040518082815260200191505060405180910390a45b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663566ab6f9836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561154f57600080fd5b505af1158015611563573d6000803e3d6000fd5b505050506040513d602081101561157957600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff16141515611811576101f4600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362c1a2a2836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561166c57600080fd5b505af1158015611680573d6000803e3d6000fd5b505050506040513d602081101561169657600080fd5b8101908080519060200190929190505050101561181057600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166333026bb6826064600334028115156116fb57fe5b046040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561178157600080fd5b505af1158015611795573d6000803e3d6000fd5b5050505060038173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffc1c3975fdae0d5f5c7627d64cf4359583a6a39394a8f8cdb2613d188544e3e86064600334028115156117f957fe5b046040518082815260200191505060405180910390a45b5b5b505050565b6000806118566000368080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611a2a565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611a0457600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b94265b833836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561197e57600080fd5b505af1158015611992573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f21e821cf32de9f1f92f5867f267626030953b3b51e0dd789d49e24fca3a4070860405160405180910390a36014348115156119fc57fe5b049150611a05565b5b5090565b600080838311151515611a1b57600080fd5b82840390508091505092915050565b600060148201519050809050919050565b604051610fd680611a4c833901905600608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f76806100606000396000f3006080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806304ee65c0146100ca5780631787787b146101215780632b711051146101825780632fbe0b7b146101ad57806333026bb61461020e578063566ab6f91461025b57806362c1a2a2146102de57806368306e43146103355780636a9d55de1461038c578063702f5e19146103f1578063759f778514610434578063b94265b81461048b578063f8b05ddb146104ee575b600080fd5b3480156100d657600080fd5b5061010b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061055b565b6040518082815260200191505060405180910390f35b34801561012d57600080fd5b5061016c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a7565b6040518082815260200191505060405180910390f35b34801561018e57600080fd5b50610197610612565b6040518082815260200191505060405180910390f35b3480156101b957600080fd5b506101f8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061061c565b6040518082815260200191505060405180910390f35b34801561021a57600080fd5b50610259600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610687565b005b34801561026757600080fd5b5061029c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610822565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ea57600080fd5b5061031f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061088e565b6040518082815260200191505060405180910390f35b34801561034157600080fd5b50610376600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108dd565b6040518082815260200191505060405180910390f35b34801561039857600080fd5b506103d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a67565b604051808215151515815260200191505060405180910390f35b3480156103fd57600080fd5b50610432600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b23565b005b34801561044057600080fd5b50610475600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bc8565b6040518082815260200191505060405180910390f35b34801561049757600080fd5b506104ec600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c9a565b005b3480156104fa57600080fd5b50610545600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803515159060200190929190505050610d7a565b6040518082815260200191505060405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001828154811015156105f857fe5b906000526020600020906002020160010154905092915050565b6000600154905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018281548110151561066d57fe5b906000526020600020906002020160000154905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106e257600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016040805190810160405280838152602001428152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561081e5742600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600180600082825401925050819055505b5050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805490509050919050565b6000806000806108ef85600080610d7a565b9150600090505b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050811015610a5c5761094d8582610a67565b15156109cd576109c4620151806109b66109786109698961055b565b42610ec190919063ffffffff16565b6109a861271061099a8861098c8d8a61061c565b610ee290919063ffffffff16565b610f2090919063ffffffff16565b610ee290919063ffffffff16565b610f2090919063ffffffff16565b83019250610a4f565b610a4a62015180610a3c6109f36109e489866105a7565b42610ec190919063ffffffff16565b610a2e612710610a20610a088c896001610d7a565b610a128d8a61061c565b610ee290919063ffffffff16565b610f2090919063ffffffff16565b610ee290919063ffffffff16565b610f2090919063ffffffff16565b830192505b80806001019150506108f6565b829350505050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000183815481101515610afb57fe5b9060005260206000209060020201600101541115610b1c5760019050610b1d565b5b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b7e57600080fd5b42600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b60008060008090505b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050811015610c9057600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181815481101515610c6d57fe5b906000526020600020906002020160000154820191508080600101915050610bd1565b8192505050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cf557600080fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000185815481101515610dce57fe5b9060005260206000209060020201600001541115610eb8578215610e5457600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000184815481101515610e3b57fe5b9060005260206000209060020201600101549050610e9a565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490505b600262015180824203811515610eac57fe5b040260ea019150610eb9565b5b509392505050565b600080838311151515610ed357600080fd5b82840390508091505092915050565b6000806000841415610ef75760009150610f19565b8284029050828482811515610f0857fe5b04141515610f1557600080fd5b8091505b5092915050565b600080600083111515610f3257600080fd5b8284811515610f3d57fe5b04905080915050929150505600a165627a7a723058202c6097a16120cb794b5dde390a415d7e758909e0c28b705cab849565a545b7c70029a165627a7a723058203c6cca3724591b939b60de5e94aa70bfafe3364bc323242e86d962fcbb63608e0029608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f76806100606000396000f3006080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806304ee65c0146100ca5780631787787b146101215780632b711051146101825780632fbe0b7b146101ad57806333026bb61461020e578063566ab6f91461025b57806362c1a2a2146102de57806368306e43146103355780636a9d55de1461038c578063702f5e19146103f1578063759f778514610434578063b94265b81461048b578063f8b05ddb146104ee575b600080fd5b3480156100d657600080fd5b5061010b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061055b565b6040518082815260200191505060405180910390f35b34801561012d57600080fd5b5061016c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a7565b6040518082815260200191505060405180910390f35b34801561018e57600080fd5b50610197610612565b6040518082815260200191505060405180910390f35b3480156101b957600080fd5b506101f8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061061c565b6040518082815260200191505060405180910390f35b34801561021a57600080fd5b50610259600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610687565b005b34801561026757600080fd5b5061029c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610822565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ea57600080fd5b5061031f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061088e565b6040518082815260200191505060405180910390f35b34801561034157600080fd5b50610376600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108dd565b6040518082815260200191505060405180910390f35b34801561039857600080fd5b506103d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a67565b604051808215151515815260200191505060405180910390f35b3480156103fd57600080fd5b50610432600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b23565b005b34801561044057600080fd5b50610475600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bc8565b6040518082815260200191505060405180910390f35b34801561049757600080fd5b506104ec600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c9a565b005b3480156104fa57600080fd5b50610545600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803515159060200190929190505050610d7a565b6040518082815260200191505060405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001828154811015156105f857fe5b906000526020600020906002020160010154905092915050565b6000600154905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018281548110151561066d57fe5b906000526020600020906002020160000154905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106e257600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016040805190810160405280838152602001428152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561081e5742600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600180600082825401925050819055505b5050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805490509050919050565b6000806000806108ef85600080610d7a565b9150600090505b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050811015610a5c5761094d8582610a67565b15156109cd576109c4620151806109b66109786109698961055b565b42610ec190919063ffffffff16565b6109a861271061099a8861098c8d8a61061c565b610ee290919063ffffffff16565b610f2090919063ffffffff16565b610ee290919063ffffffff16565b610f2090919063ffffffff16565b83019250610a4f565b610a4a62015180610a3c6109f36109e489866105a7565b42610ec190919063ffffffff16565b610a2e612710610a20610a088c896001610d7a565b610a128d8a61061c565b610ee290919063ffffffff16565b610f2090919063ffffffff16565b610ee290919063ffffffff16565b610f2090919063ffffffff16565b830192505b80806001019150506108f6565b829350505050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000183815481101515610afb57fe5b9060005260206000209060020201600101541115610b1c5760019050610b1d565b5b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b7e57600080fd5b42600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b60008060008090505b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050811015610c9057600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181815481101515610c6d57fe5b906000526020600020906002020160000154820191508080600101915050610bd1565b8192505050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cf557600080fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000185815481101515610dce57fe5b9060005260206000209060020201600001541115610eb8578215610e5457600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000184815481101515610e3b57fe5b9060005260206000209060020201600101549050610e9a565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490505b600262015180824203811515610eac57fe5b040260ea019150610eb9565b5b509392505050565b600080838311151515610ed357600080fd5b82840390508091505092915050565b6000806000841415610ef75760009150610f19565b8284029050828482811515610f0857fe5b04141515610f1557600080fd5b8091505b5092915050565b600080600083111515610f3257600080fd5b8284811515610f3d57fe5b04905080915050929150505600a165627a7a723058202c6097a16120cb794b5dde390a415d7e758909e0c28b705cab849565a545b7c7002900000000000000000000000007ad3cc40eb43dc3f137308e5d7f3c0dde631792",
  "constructorArguments": "00000000000000000000000007ad3cc40eb43dc3f137308e5d7f3c0dde631792"
}