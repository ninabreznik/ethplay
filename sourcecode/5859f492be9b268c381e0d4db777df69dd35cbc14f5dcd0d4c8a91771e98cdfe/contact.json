{
  "address": "0xd8446236fa95b9b5f9fd0f8e7df1a944823c683d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "NEEO Token",
  "contractName": "Token",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-30\n*/\n\npragma solidity ^0.4.15;\n\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal constant returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal constant returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract ERC20 {\n    uint256 public totalSupply;\n\n    function balanceOf(address who) public constant returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    function allowance(address owner, address spender) public constant returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract StandartToken is ERC20 {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n\n    bool public isStarted = false;\n\n    modifier isStartedOnly() {\n        require(isStarted);\n        _;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n\n        // SafeMath.sub will throw if there is not enough balance.\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n}\n\ncontract Owned {\n    address public owner;\n    address public newOwner;\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function Owned() public {\n        owner = msg.sender;\n    }\n\n    function transferOwnership(address _newOwner) onlyOwner public {\n        newOwner = _newOwner;\n    }\n\n    function acceptOwnership() onlyOwner public {\n        OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n}\n\n\ncontract Token is Owned, StandartToken {\n    string public name = \"NEEO\";\n    string public symbol = \"NEEO\";\n    uint public decimals = 18;\n\n    address public crowdsaleMinter;\n\n    event Mint(address indexed to, uint256 amount);\n\n    modifier canMint() {\n        require(!isStarted);\n        _;\n    }\n\n    modifier onlyCrowdsaleMinter(){\n        require(msg.sender == crowdsaleMinter);\n        _;\n    }\n\n    function () public {\n        revert();\n    }\n\n    function setCrowdsaleMinter(address _crowdsaleMinter)\n        public\n        onlyOwner\n        canMint\n    {\n        crowdsaleMinter = _crowdsaleMinter;\n    }\n\n    function mint(address _to, uint256 _amount)\n        onlyCrowdsaleMinter\n        canMint\n        public\n        returns (bool)\n    {\n        totalSupply = totalSupply.add(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        Mint(_to, _amount);\n        return true;\n    }\n\n    function start()\n        onlyCrowdsaleMinter\n        canMint\n        public\n        returns (bool)\n    {\n        isStarted = true;\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isStarted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_crowdsaleMinter\",\"type\":\"address\"}],\"name\":\"setCrowdsaleMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "6005805460ff1916905560c0604052600460808190527f4e45454f0000000000000000000000000000000000000000000000000000000060a090815261004891600691906100aa565b506040805180820190915260048082527f4e45454f00000000000000000000000000000000000000000000000000000000602090920191825261008d916007916100aa565b50601260085560008054600160a060020a03191633179055610145565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100eb57805160ff1916838001178555610118565b82800160010185558215610118579182015b828111156101185782518255916020019190600101906100fd565b50610124929150610128565b5090565b61014291905b80821115610124576000815560010161012e565b90565b610c49806101546000396000f3006080604052600436106101115763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610123578063095ea7b3146101ad57806318160ddd146101e557806323b872dd1461020c578063313ce5671461023657806340c10f191461024b578063544736e61461026f578063661884631461028457806370a08231146102a857806379ba5097146102c95780638da5cb5b146102e057806395d89b4114610311578063a9059cbb14610326578063be9a65551461034a578063d4ee1d901461035f578063d73dd62314610374578063dcb3606314610398578063dd62ed3e146103ad578063f2fde38b146103d4578063fcb3a3a3146103f5575b34801561011d57600080fd5b50600080fd5b34801561012f57600080fd5b50610138610416565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017257818101518382015260200161015a565b50505050905090810190601f16801561019f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b957600080fd5b506101d1600160a060020a03600435166024356104a4565b604080519115158252519081900360200190f35b3480156101f157600080fd5b506101fa61050a565b60408051918252519081900360200190f35b34801561021857600080fd5b506101d1600160a060020a0360043581169060243516604435610510565b34801561024257600080fd5b506101fa610689565b34801561025757600080fd5b506101d1600160a060020a036004351660243561068f565b34801561027b57600080fd5b506101d1610753565b34801561029057600080fd5b506101d1600160a060020a036004351660243561075c565b3480156102b457600080fd5b506101fa600160a060020a036004351661084c565b3480156102d557600080fd5b506102de610867565b005b3480156102ec57600080fd5b506102f56108ec565b60408051600160a060020a039092168252519081900360200190f35b34801561031d57600080fd5b506101386108fb565b34801561033257600080fd5b506101d1600160a060020a0360043516602435610956565b34801561035657600080fd5b506101d1610a39565b34801561036b57600080fd5b506102f5610a77565b34801561038057600080fd5b506101d1600160a060020a0360043516602435610a86565b3480156103a457600080fd5b506102f5610b1f565b3480156103b957600080fd5b506101fa600160a060020a0360043581169060243516610b2e565b3480156103e057600080fd5b506102de600160a060020a0360043516610b59565b34801561040157600080fd5b506102de600160a060020a0360043516610b9f565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561049c5780601f106104715761010080835404028352916020019161049c565b820191906000526020600020905b81548152906001019060200180831161047f57829003601f168201915b505050505081565b336000818152600460209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60025481565b6000600160a060020a038316151561052757600080fd5b600160a060020a03841660009081526003602052604090205482111561054c57600080fd5b600160a060020a038416600090815260046020908152604080832033845290915290205482111561057c57600080fd5b600160a060020a0384166000908152600360205260409020546105a5908363ffffffff610bf516565b600160a060020a0380861660009081526003602052604080822093909355908516815220546105da908363ffffffff610c0716565b600160a060020a03808516600090815260036020908152604080832094909455918716815260048252828120338252909152205461061e908363ffffffff610bf516565b600160a060020a03808616600081815260046020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60085481565b600954600090600160a060020a031633146106a957600080fd5b60055460ff16156106b957600080fd5b6002546106cc908363ffffffff610c0716565b600255600160a060020a0383166000908152600360205260409020546106f8908363ffffffff610c0716565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a250600192915050565b60055460ff1681565b336000908152600460209081526040808320600160a060020a0386168452909152812054808311156107b157336000908152600460209081526040808320600160a060020a03881684529091528120556107e6565b6107c1818463ffffffff610bf516565b336000908152600460209081526040808320600160a060020a03891684529091529020555b336000818152600460209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526003602052604090205490565b600054600160a060020a0316331461087e57600080fd5b60015460008054604051600160a060020a0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36001546000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b600054600160a060020a031681565b6007805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561049c5780601f106104715761010080835404028352916020019161049c565b6000600160a060020a038316151561096d57600080fd5b3360009081526003602052604090205482111561098957600080fd5b336000908152600360205260409020546109a9908363ffffffff610bf516565b3360009081526003602052604080822092909255600160a060020a038516815220546109db908363ffffffff610c0716565b600160a060020a0384166000818152600360209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600954600090600160a060020a03163314610a5357600080fd5b60055460ff1615610a6357600080fd5b506005805460ff1916600190811790915590565b600154600160a060020a031681565b336000908152600460209081526040808320600160a060020a0386168452909152812054610aba908363ffffffff610c0716565b336000818152600460209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600954600160a060020a031681565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205490565b600054600160a060020a03163314610b7057600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a03163314610bb657600080fd5b60055460ff1615610bc657600080fd5b6009805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610c0157fe5b50900390565b600082820183811015610c1657fe5b93925050505600a165627a7a72305820f91b20f6d5f632b2590996a14aced09137e55cf8789591435d3652a78b0204300029"
}