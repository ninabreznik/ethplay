{
  "address": "0x603515243b98d6624adf243e1f4607144d21e281",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ZToken",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-13\n*/\n\npragma solidity ^0.4.16;\n\ncontract ERC20Token {\n\n    uint256 public totalSupply;\n    string public name;\n    uint8 public decimals;\n    string public symbol;\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n    \n    function balanceOf(address _owner) public constant returns (uint256 balance);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\ncontract ZToken is ERC20Token {\n\n\tfunction () public {\n        require(false);\n    }\n\n\tfunction ZToken(\n        uint256 _initialAmount,\n        string _tokenName,\n        uint8 _decimalUnits,\n        string _tokenSymbol\n        ) public {\n        totalSupply = _initialAmount * 10 ** uint256(_decimalUnits);\n        balances[msg.sender] = totalSupply;\n        name = _tokenName;\n        decimals = _decimalUnits;\n        symbol = _tokenSymbol;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        if (balances[msg.sender] >= _value && _value > 0) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else { \n\t    return false; \n\t}\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            allowed[_from][msg.sender] -= _value;\n            Transfer(_from, _to, _value);\n            return true;\n        } else { \n\t    return false; \n\t}\n    }\n\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n}",
  "bytecode": "6060604052341561000f57600080fd5b60405161073838038061073883398101604052808051919060200180518201919060200180519190602001805160ff8416600a0a86026000818155600160a060020a033316815260046020526040902055909101905060018380516100789291602001906100a5565b506002805460ff191660ff8416179055600381805161009b9291602001906100a5565b5050505050610140565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100e657805160ff1916838001178555610113565b82800160010185558215610113579182015b828111156101135782518255916020019190600101906100f8565b5061011f929150610123565b5090565b61013d91905b8082111561011f5760008155600101610129565b90565b6105e98061014f6000396000f3006060604052600436106100985763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016857806323b872dd1461018d578063313ce567146101b557806370a08231146101de57806395d89b41146101fd578063a9059cbb14610210578063dd62ed3e14610232575b34156100a357600080fd5b600080fd5b34156100b357600080fd5b6100bb610257565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f75780820151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013d57600080fd5b610154600160a060020a03600435166024356102f5565b604051901515815260200160405180910390f35b341561017357600080fd5b61017b610362565b60405190815260200160405180910390f35b341561019857600080fd5b610154600160a060020a0360043581169060243516604435610368565b34156101c057600080fd5b6101c8610460565b60405160ff909116815260200160405180910390f35b34156101e957600080fd5b61017b600160a060020a0360043516610469565b341561020857600080fd5b6100bb610484565b341561021b57600080fd5b610154600160a060020a03600435166024356104ef565b341561023d57600080fd5b61017b600160a060020a0360043581169060243516610592565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ed5780601f106102c2576101008083540402835291602001916102ed565b820191906000526020600020905b8154815290600101906020018083116102d057829003601f168201915b505050505081565b600160a060020a03338116600081815260056020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60005481565b600160a060020a0383166000908152600460205260408120548290108015906103b85750600160a060020a0380851660009081526005602090815260408083203390941683529290522054829010155b80156103c45750600082115b1561045557600160a060020a03808416600081815260046020908152604080832080548801905588851680845281842080548990039055600583528184203390961684529490915290819020805486900390559091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610459565b5060005b9392505050565b60025460ff1681565b600160a060020a031660009081526004602052604090205490565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ed5780601f106102c2576101008083540402835291602001916102ed565b600160a060020a0333166000908152600460205260408120548290108015906105185750600082115b1561058a57600160a060020a033381166000818152600460205260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600161035c565b50600061035c565b600160a060020a039182166000908152600560209081526040808320939094168252919091522054905600a165627a7a723058201d847f99fde00cb3f2cb93ecba2c15bf4b55325996afe1faf134dca9c9f07d670029000000000000000000000000000000000000000000000000000000001dcd65000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000b5a4154474f20544f4b454e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035a41540000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000001dcd65000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000b5a4154474f20544f4b454e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035a41540000000000000000000000000000000000000000000000000000000000"
}