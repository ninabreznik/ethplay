{
  "address": "0xce853db3359326db6d03981c9fb42983bbcdd007",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Penis",
  "compilerVersion": "v0.4.8+commit.60cc1668",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-10-17\n*/\n\npragma solidity ^0.4.8;\n\ncontract ERC20Interface {\n    function totalSupply() public constant returns (uint256 supply);\n    function balance() public constant returns (uint256);\n    function balanceOf(address _owner) public constant returns (uint256);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n// penispenispenispenis\n// YOU get a penis, and YOU get a penis, and YOU get a penis!\ncontract Penis is ERC20Interface {\n    string public constant symbol = \"PNS\";\n    string public constant name = \"Penis\";\n    uint8 public constant decimals = 2;\n\n    uint256 _totalSupply = 0;\n    uint256 _airdropAmount = 8008135;\n    uint256 _cutoff = _airdropAmount * 80085;\n\n    mapping(address => uint256) balances;\n    mapping(address => bool) initialized;\n\n    // Penis accepts request to tip-touch another Penis\n    mapping(address => mapping (address => uint256)) allowed;\n\n    function Penis() {\n        initialized[msg.sender] = true;\n        balances[msg.sender] = _airdropAmount * 8008;\n        _totalSupply = balances[msg.sender];\n    }\n\n    function totalSupply() constant returns (uint256 supply) {\n        return _totalSupply;\n    }\n\n    // What's my girth?\n    function balance() constant returns (uint256) {\n        return getBalance(msg.sender);\n    }\n\n    // What is the length of a particular Penis?\n    function balanceOf(address _address) constant returns (uint256) {\n        return getBalance(_address);\n    }\n\n    // Tenderly remove hand from Penis and place on another Penis\n    function transfer(address _to, uint256 _amount) returns (bool success) {\n        initialize(msg.sender);\n\n        if (balances[msg.sender] >= _amount\n            && _amount > 0) {\n            initialize(_to);\n            if (balances[_to] + _amount > balances[_to]) {\n\n                balances[msg.sender] -= _amount;\n                balances[_to] += _amount;\n\n                Transfer(msg.sender, _to, _amount);\n\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    // Perform the inevitable actions which cause release of that which each Penis\n    // is built to deliver. In EtherPenisLand there are only Penises, so this \n    // allows the transmission of one Penis's payload (or partial payload but that\n    // is not as much fun) INTO another Penis. This causes the Penisae to change \n    // form such that all may see the glory they each represent. Erections.\n    function transferFrom(address _from, address _to, uint256 _amount) returns (bool success) {\n        initialize(_from);\n\n        if (balances[_from] >= _amount\n            && allowed[_from][msg.sender] >= _amount\n            && _amount > 0) {\n            initialize(_to);\n            if (balances[_to] + _amount > balances[_to]) {\n\n                balances[_from] -= _amount;\n                allowed[_from][msg.sender] -= _amount;\n                balances[_to] += _amount;\n\n                Transfer(_from, _to, _amount);\n\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    // Allow splooger to cause a payload release from your Penis, multiple times, up to \n    // the point at which no further release is possible..\n    function approve(address _spender, uint256 _amount) returns (bool success) {\n        allowed[msg.sender][_spender] = _amount;\n        Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    // internal privats\n    function initialize(address _address) internal returns (bool success) {\n        if (_totalSupply < _cutoff && !initialized[_address]) {\n            initialized[_address] = true;\n            balances[_address] = _airdropAmount;\n            _totalSupply += _airdropAmount;\n        }\n        return true;\n    }\n\n    function getBalance(address _address) internal returns (uint256) {\n        if (_totalSupply < _cutoff && !initialized[_address]) {\n            return balances[_address] + _airdropAmount;\n        }\n        else {\n            return balances[_address];\n        }\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "606060405260008055627a31c760015564955255f29360025534610000575b600160a060020a0333166000908152600460209081526040808320805460ff191660019081179091555460039092528220611f489091029081905590555b5b6107788061006c6000396000f300606060405236156100885763ffffffff60e060020a60003504166306fdde03811461008d578063095ea7b31461011a57806318160ddd1461014a57806323b872dd14610169578063313ce5671461019f57806370a08231146101c257806395d89b41146101ed578063a9059cbb1461027a578063b69ef8a8146102aa578063dd62ed3e146102c9575b610000565b346100005761009a6102fa565b6040805160208082528351818301528351919283929083019185019080838382156100e0575b8051825260208311156100e057601f1990920191602091820191016100c0565b505050905090810190601f16801561010c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3461000057610136600160a060020a0360043516602435610331565b604080519115158252519081900360200190f35b346100005761015761039c565b60408051918252519081900360200190f35b3461000057610136600160a060020a03600435811690602435166044356103a3565b604080519115158252519081900360200190f35b34610000576101ac6104dd565b6040805160ff9092168252519081900360200190f35b3461000057610157600160a060020a03600435166104e2565b60408051918252519081900360200190f35b346100005761009a6104f5565b6040805160208082528351818301528351919283929083019185019080838382156100e0575b8051825260208311156100e057601f1990920191602091820191016100c0565b505050905090810190601f16801561010c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3461000057610136600160a060020a036004351660243561052c565b604080519115158252519081900360200190f35b346100005761015761061d565b60408051918252519081900360200190f35b3461000057610157600160a060020a036004358116906024351661062e565b60408051918252519081900360200190f35b60408051808201909152600581527f50656e6973000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260056020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b6000545b90565b60006103ae8461065b565b50600160a060020a0384166000908152600360205260409020548290108015906103ff5750600160a060020a0380851660009081526005602090815260408083203390941683529290522054829010155b801561040b5750600082115b156104c4576104198361065b565b50600160a060020a03831660009081526003602052604090205482810111156104c457600160a060020a03808516600081815260036020818152604080842080548990039055600582528084203387168552825280842080548990039055948816808452918152918490208054870190558351868152935190937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a35060016104d5565b5060006104d5565b6104d5565b5060005b5b9392505050565b600281565b60006104ed826106d1565b90505b919050565b60408051808201909152600381527f504e530000000000000000000000000000000000000000000000000000000000602082015281565b60006105373361065b565b50600160a060020a0333166000908152600360205260409020548290108015906105615750600082115b156106015761056f8361065b565b50600160a060020a038316600090815260036020526040902054828101111561060157600160a060020a03338116600081815260036020908152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3506001610396565b506000610396565b610396565b506000610396565b5b92915050565b6000610628336106d1565b90505b90565b600160a060020a038083166000908152600560209081526040808320938516835292905220545b92915050565b60006002546000541080156106895750600160a060020a03821660009081526004602052604090205460ff16155b156106c857600160a060020a0382166000908152600460209081526040808320805460ff19166001908117909155546003909252822081905581540190555b5060015b919050565b60006002546000541080156106ff5750600160a060020a03821660009081526004602052604090205460ff16155b156107275750600154600160a060020a038216600090815260036020526040902054016104f0565b50600160a060020a0381166000908152600360205260409020546104f0565b5b9190505600a165627a7a72305820fb506dbf3318c8a7f2647b040b7a7330818850ebcc989ed13f8f06059ddecb4f0029"
}