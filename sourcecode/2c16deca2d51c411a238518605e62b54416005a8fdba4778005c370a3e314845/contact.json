{
  "address": "0x0a1bad122f1dc2ec8735192ceaa70693414b0317",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BATSafe",
  "compilerVersion": "v0.4.10+commit.f0d539ae",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-09\n*/\n\npragma solidity ^0.4.10;\n\ncontract Token {\n    uint256 public totalSupply;\n    function balanceOf(address _owner) constant returns (uint256 balance);\n    function transfer(address _to, uint256 _value) returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n    function approve(address _spender, uint256 _value) returns (bool success);\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n\n/*  ERC 20 token */\ncontract StandardToken is Token {\n\n    function transfer(address _to, uint256 _value) returns (bool success) {\n      if (balances[msg.sender] >= _value && _value > 0) {\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        Transfer(msg.sender, _to, _value);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\n        balances[_to] += _value;\n        balances[_from] -= _value;\n        allowed[_from][msg.sender] -= _value;\n        Transfer(_from, _to, _value);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n}\n\n\n// requires 5,050,000 BAT deposited here\ncontract BATSafe {\n  mapping (address => uint256) allocations;\n  uint256 public unlockDate;\n  address public BAT;\n  uint256 public constant exponent = 10**18;\n\n  function BATSafe(address _BAT) {\n    BAT = _BAT;\n    unlockDate = now + 6 * 31 days;\n    allocations[0x29940Eec1d3E79e4E20574bB69f4bDF382E60E8A] = 1250000;\n    allocations[0x16733a097bC4aE65356083e2919D9aAD32b9106D] = 800000;\n    allocations[0xB228d4dEe3fD0667F0161FeF769ad44d8F433Bc9] = 200000;\n    allocations[0x245B07814af3d708538D9A1f183450197F0FEBdd] = 200000;\n    allocations[0xb29458e5CaaCc3963D286Eb357CEf0734ff22504] = 200000;\n    allocations[0x31cC98831574d37966b05f9BE44bc14CA303FcCD] = 200000;\n    allocations[0x24f430377A8497cFaD9Ea2839941D6248c3d5275] = 200000;\n    allocations[0x7C350e02319eC6703B120160C3B712821A661f62] = 200000;\n    allocations[0x0DBaC4B5C00C8aAe3c030878c51524C6ED3d2a51] = 200000;\n    allocations[0xdFEb81B6c32c808D53914Ad1A462d6b6439E4230] = 200000;\n    allocations[0xE4d59Aa22c99051BC25e51CDC844d851A0C72aAD] = 200000;\n    allocations[0x76C12809FA051F5edf2a864de8890C26BFb952c2] = 200000;\n    allocations[0xC6204459C59D8e498284337012fc023b7680E7a3] = 200000;\n    allocations[0x92b79d1A09Dde9F5b5Ada7aDE3fe8eB1e56a4D79] = 200000;\n    allocations[0xEE575340dAbE28f989d9521CEb8ca92c4Cd76047] = 200000;\n    allocations[0xb3C7372Bf84D1f13C602b1Fe76A9Ea9B415Be908] = 200000;\n    allocations[0x2761B6a570dB5175668Bd622F0248E6c32b158B7] = 200000;\n  }\n\n  function unlock() external {\n    if(now < unlockDate) throw;\n    uint256 entitled = allocations[msg.sender];\n    allocations[msg.sender] = 0;\n    if(!StandardToken(BAT).transfer(msg.sender, entitled * exponent)) throw;\n  }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"exponent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BAT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_BAT\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"}]",
  "bytecode": "6060604052341561000c57fe5b604051602080610997833981016040528080519060200190919050505b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062f537004201600181905550621312d0600060007329940eec1d3e79e4e20574bb69f4bdf382e60e8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620c3500600060007316733a097bc4ae65356083e2919d9aad32b9106d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d406000600073b228d4dee3fd0667f0161fef769ad44d8f433bc973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d406000600073245b07814af3d708538d9a1f183450197f0febdd73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d406000600073b29458e5caacc3963d286eb357cef0734ff2250473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d40600060007331cc98831574d37966b05f9be44bc14ca303fccd73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d40600060007324f430377a8497cfad9ea2839941d6248c3d527573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d4060006000737c350e02319ec6703b120160c3b712821a661f6273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d4060006000730dbac4b5c00c8aae3c030878c51524c6ed3d2a5173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d406000600073dfeb81b6c32c808d53914ad1a462d6b6439e423073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d406000600073e4d59aa22c99051bc25e51cdc844d851a0c72aad73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d40600060007376c12809fa051f5edf2a864de8890c26bfb952c273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d406000600073c6204459c59d8e498284337012fc023b7680e7a373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d40600060007392b79d1a09dde9f5b5ada7ade3fe8eb1e56a4d7973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d406000600073ee575340dabe28f989d9521ceb8ca92c4cd7604773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d406000600073b3c7372bf84d1f13c602b1fe76a9ea9b415be90873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062030d4060006000732761b6a570db5175668bd622f0248e6c32b158b773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b610304806106936000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806352f6ee581461005c5780635b7ab8911461008257806369ac5721146100d4578063a69df4b5146100fa575bfe5b341561006457fe5b61006c61010c565b6040518082815260200191505060405180910390f35b341561008a57fe5b610092610118565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100dc57fe5b6100e461013e565b6040518082815260200191505060405180910390f35b341561010257fe5b61010a610144565b005b670de0b6b3a764000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60006001544210156101565760006000fd5b600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33670de0b6b3a764000084026000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156102b157fe5b60325a03f115156102be57fe5b5050506040518051905015156102d45760006000fd5b5b505600a165627a7a7230582042246d3097f01ed33b6ef1cb62d763f5c6b7f13a521998994eb778de0d41ef6900290000000000000000000000000d8775f648430679a709e98d2b0cb6250d2887ef",
  "constructorArguments": "0000000000000000000000000d8775f648430679a709e98d2b0cb6250d2887ef"
}