{
  "address": "0x92d3e963aa94d909869940a8d15fa16ccbc6655e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "GYMRewardsToken",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-02-23\n*/\n\npragma solidity ^0.4.18;\n\ncontract Ownable {\naddress public owner;\n\n\nevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\nfunction Ownable() public {\nowner = msg.sender;\n}\n\nmodifier onlyOwner() {\nrequire(msg.sender == owner);\n_;\n}\n\nfunction transferOwnership(address newOwner) public onlyOwner {\nrequire(newOwner != address(0));\nOwnershipTransferred(owner, newOwner);\nowner = newOwner;\n}\n}\n\ncontract Pausable is Ownable {\nevent Pause();\nevent Unpause();\n\nbool public paused = false;\n\nmodifier whenNotPaused() {\nrequire(!paused);\n_;\n}\n\nmodifier whenPaused() {\nrequire(paused);\n_;\n}\n\nfunction pause() onlyOwner whenNotPaused public {\npaused = true;\nPause();\n}\n\nfunction unpause() onlyOwner whenPaused public {\npaused = false;\nUnpause();\n}\n\nfunction kill() onlyOwner public {\n    if (msg.sender == owner) selfdestruct(owner);\n}\n}\n\ncontract ERC20Basic {\nuint256 public totalSupply;\nfunction balanceOf(address who) public view returns (uint256);\nfunction transfer(address to, uint256 value) public returns (bool);\nevent Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\ncontract ERC20 is ERC20Basic {\nfunction allowance(address owner, address spender) public view returns (uint256);\nfunction transferFrom(address from, address to, uint256 value) public returns (bool);\nfunction approve(address spender, uint256 value) public returns (bool);\nevent Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\nfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\nif (a == 0) {\nreturn 0;\n}\nuint256 c = a * b;\nassert(c / a == b);\nreturn c;\n}\n\nfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\nuint256 c = a / b;\nreturn c;\n}\n\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\nassert(b <= a);\nreturn a - b;\n}\n\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\nuint256 c = a + b;\nassert(c >= a);\nreturn c;\n}\n}\n\n\ncontract BasicToken is ERC20Basic {\nusing SafeMath for uint256;\n\nmapping(address => uint256) balances;\n\nfunction transfer(address _to, uint256 _value) public returns (bool) {\nrequire(_to != address(0));\nrequire(_value <= balances[msg.sender]);\n\nbalances[msg.sender] = balances[msg.sender].sub(_value);\nbalances[_to] = balances[_to].add(_value);\nTransfer(msg.sender, _to, _value);\nreturn true;\n}\n\nfunction balanceOf(address _owner) public view returns (uint256 balance) {\nreturn balances[_owner];\n}\n}\n\ncontract StandardToken is ERC20, BasicToken {\n\nmapping (address => mapping (address => uint256)) internal allowed;\n\nfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\nrequire(_to != address(0));\nrequire(_value <= balances[_from]);\nrequire(_value <= allowed[_from][msg.sender]);\n\nbalances[_from] = balances[_from].sub(_value);\nbalances[_to] = balances[_to].add(_value);\nallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\nTransfer(_from, _to, _value);\nreturn true;\n}\n\nfunction approve(address _spender, uint256 _value) public returns (bool) {\nallowed[msg.sender][_spender] = _value;\nApproval(msg.sender, _spender, _value);\nreturn true;\n}\n\nfunction allowance(address _owner, address _spender) public view returns (uint256) {\nreturn allowed[_owner][_spender];\n}\n\nfunction increaseApproval(address _spender, uint _addedValue) public returns (bool) {\nallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\nApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\nreturn true;\n}\n\nfunction decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\nuint oldValue = allowed[msg.sender][_spender];\nif (_subtractedValue > oldValue) {\nallowed[msg.sender][_spender] = 0;\n} else {\nallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n}\nApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\nreturn true;\n}\n}\n\ncontract MintableToken is StandardToken, Ownable {\nevent Mint(address indexed to, uint256 amount);\nevent MintFinished();\n\nbool public mintingFinished = false;\n\n\nmodifier canMint() {\nrequire(!mintingFinished);\n_;\n}\n\nfunction mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\ntotalSupply = totalSupply.add(_amount);\nbalances[_to] = balances[_to].add(_amount);\nMint(_to, _amount);\nTransfer(address(0), _to, _amount);\nreturn true;\n}\n\nfunction finishMinting() onlyOwner canMint public returns (bool) {\nmintingFinished = true;\nMintFinished();\nreturn true;\n}\n}\n\ncontract TokenConfig {\n\nstring  public constant TOKEN_SYMBOL   = \"GYM\";\nstring  public constant TOKEN_NAME     = \"GYM Rewards\";\nuint8   public constant TOKEN_DECIMALS = 18;\n\nuint256 public constant DECIMALSFACTOR = 10**uint256(TOKEN_DECIMALS);\n}\n\ncontract TokenSaleConfig is TokenConfig {\n\nuint256 public constant START_TIME                = 1519689601; \nuint256 public constant PHASE2_START_TIME         = 1519862401;\nuint256 public constant PHASE3_START_TIME         = 1522540801; \nuint256 public constant PHASE4_START_TIME         = 1523750401;\nuint256 public constant PHASE5_START_TIME         = 1525046401; \nuint256 public constant END_TIME                  = 1526428799; \n\nuint256 public constant TIER1_RATE                  =  16000;\nuint256 public constant TIER2_RATE                  =  15000;\nuint256 public constant TIER3_RATE                  =  14000;\nuint256 public constant TIER4_RATE                  =  12000;\nuint256 public constant TIER5_RATE                  =  10000;\n\n\nuint256 public constant CONTRIBUTION_MIN          = 1 * 10 ** 16; \nuint256 public constant CONTRIBUTION_MAX          = 100000 ether;\n\nuint256 public constant MAX_TOKENS_SALE               = 1660000000  * DECIMALSFACTOR;  \nuint256 public constant MAX_TOKENS_FOUNDERS           =  100000000  * DECIMALSFACTOR; \nuint256 public constant MAX_TOKENS_RESERVE\t      =  100000000  * DECIMALSFACTOR; \nuint256 public constant MAX_TOKENS_AIRDROPS_BOUNTIES  =   80000000  * DECIMALSFACTOR; \nuint256 public constant MAX_TOKENS_ADVISORS_PARTNERS  =   60000000  * DECIMALSFACTOR; \n\n}\n\n\n\ncontract GYMRewardsToken is MintableToken, TokenConfig {\n\tstring public constant name = TOKEN_NAME;\n\tstring public constant symbol = TOKEN_SYMBOL;\n\tuint8 public constant decimals = TOKEN_DECIMALS;\n}\n\ncontract GYMRewardsCrowdsale is Pausable, TokenSaleConfig {\n\tusing SafeMath for uint256;\n\n\tGYMRewardsToken public token;\n\n\tuint256 public startTime;\n\tuint256 public tier2Time;\n\tuint256 public tier3Time;\n\tuint256 public tier4Time;\n\tuint256 public tier5Time;\n\tuint256 public endTime;\n\n\taddress public wallet = 0xE38cc3F48b4F98Cb3577aC75bB96DBBc87bc57d6;\n\taddress public airdrop_wallet = 0x5Fec898d08801Efd884A1162Fd159474757D422F;\n\taddress public reserve_wallet = 0x2A0Fc31cDE12a74143D7B9642423a2D8a3453b07;\n\taddress public founders_wallet = 0x5C11b5aF9f1b4CDEeab9f6BebEd4EdbAe67900C3;\n\taddress public advisors_wallet = 0xD8A1a54DcECe365C56B98EbDb9078Bdb2FA609da;\n\n\tuint256 public weiRaised;\n\n\tuint256 public tokensMintedForSale;\n\tuint256 public tokensMintedForOperations;\n\tbool public isFinalized = false;\n\tbool public opMinted = false;\n\n\n\tevent Finalized();\n\n\tmodifier onlyDuringSale() {\n\t\trequire(hasStarted() && !hasEnded());\n\t\t_;\n\t}\n\n\tmodifier onlyAfterSale() {\n\t\trequire(hasEnded());\n\t\t_;\n\t}\n\n\tevent TokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\n\tevent BountiesMinted(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\n\tevent LongTermReserveMinted(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\n\tevent CoreTeamMinted(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\n\tevent AdvisorsAndPartnersMinted(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\n\n\n\tfunction GYMRewardsCrowdsale() public {\n\t\n\t\ttoken = createTokenContract();\n\t\tstartTime = START_TIME;\n\t\ttier2Time = PHASE2_START_TIME;\n\t\ttier3Time = PHASE3_START_TIME;\n\t\ttier4Time = PHASE4_START_TIME;\n\t\ttier5Time = PHASE5_START_TIME;\n\t\tendTime = END_TIME;\n\n\t\tmintBounties();\n\t}\n\n\tfunction createTokenContract() internal returns (GYMRewardsToken) {\n\t\treturn new GYMRewardsToken();\n\t}\n\n\tfunction () public payable whenNotPaused onlyDuringSale {\n\t\tbuyTokens(msg.sender);\n\t}\n\n\tfunction mintBounties() public onlyOwner{\n\t\tif (opMinted == false)\n\t\t{\n\t\t\topMinted = true;\n\t\t\ttokensMintedForOperations = tokensMintedForOperations.add(MAX_TOKENS_AIRDROPS_BOUNTIES);\n\t\t\ttoken.mint(airdrop_wallet, MAX_TOKENS_AIRDROPS_BOUNTIES);\n\n\t\t\ttokensMintedForOperations = tokensMintedForOperations.add(MAX_TOKENS_RESERVE);\n\t\t\ttoken.mint(reserve_wallet, MAX_TOKENS_RESERVE);\n\n\t\t\ttokensMintedForOperations = tokensMintedForOperations.add(MAX_TOKENS_FOUNDERS);\n\t\t\ttoken.mint(founders_wallet, MAX_TOKENS_FOUNDERS);\n\n\t\t\ttokensMintedForOperations = tokensMintedForOperations.add(MAX_TOKENS_ADVISORS_PARTNERS);\n\t\t\ttoken.mint(advisors_wallet, MAX_TOKENS_ADVISORS_PARTNERS);\n\n\t\t\tBountiesMinted(owner, airdrop_wallet, MAX_TOKENS_AIRDROPS_BOUNTIES, MAX_TOKENS_AIRDROPS_BOUNTIES);\n\t\t\tLongTermReserveMinted(owner, reserve_wallet, MAX_TOKENS_RESERVE, MAX_TOKENS_RESERVE);\n\t\t\tCoreTeamMinted(owner, founders_wallet, MAX_TOKENS_FOUNDERS, MAX_TOKENS_FOUNDERS);\n\t\t\tAdvisorsAndPartnersMinted(owner, advisors_wallet, MAX_TOKENS_ADVISORS_PARTNERS, MAX_TOKENS_ADVISORS_PARTNERS);\n\t\t}\n\t}\n\n\tfunction buyTokens(address beneficiary) public payable whenNotPaused onlyDuringSale {\n\t\trequire(beneficiary != address(0));\n\t\trequire(msg.value > 0); \n\n\n\t\tuint256 weiAmount = msg.value;\n\n\t\tuint256 exchangeRate = calculateTierBonus();\n\t\tuint256 tokens = weiAmount.mul(exchangeRate);\n\n\t\trequire (tokensMintedForSale <= MAX_TOKENS_SALE);\n\n\n\t\tweiRaised = weiRaised.add(weiAmount); \n\t\ttokensMintedForSale = tokensMintedForSale.add(tokens); \n\n\t\ttoken.mint(beneficiary, tokens);\n\n\t\tTokenPurchase(msg.sender, beneficiary, weiAmount, tokens);\n\n\t\tif (tokensMintedForSale >= MAX_TOKENS_SALE) {\n\t\t\tfinalizeInternal();\n\t\t}\n\n\t\tforwardFunds();\n\t}\n\n\tfunction calculateTierBonus() public view returns (uint256){\n\t\t\tif(now >= startTime && now < tier2Time){\n\t\t\treturn TIER1_RATE;\n\t\t\t}\n\n\t\t\tif(now >= tier2Time && now < tier3Time){\n\t\t\treturn TIER2_RATE;\n\t\t\t}\n\n\t\t\tif(now >= tier3Time && now <= tier4Time){\n\t\t\treturn TIER3_RATE;\n\t\t\t}\n\n\t\t\tif(now >= tier4Time && now <= tier5Time){\n\t\t\treturn TIER4_RATE;\n\t\t\t}\n\n\t\t\tif(now >= tier5Time && now <= endTime){\n\t\t\treturn TIER5_RATE;\n\t\t\t}\n\t}\n\n\tfunction finalizeInternal() internal returns (bool) {\n\t\trequire(!isFinalized);\n\n\t\tisFinalized = true;\n\t\tFinalized();\n\t\treturn true;\n\t}\n\n\tfunction forwardFunds() internal {\n\t\twallet.transfer(msg.value);\n\t}\n\n\tfunction hasEnded() public constant returns (bool) {\n\t\tbool _saleIsOver = now > endTime;\n\t\treturn _saleIsOver || isFinalized;\n\t}\n\n\tfunction hasStarted() public constant returns (bool) {\n\t\treturn now >= startTime;\n\t}\n\n\tfunction tellTime() public constant returns (uint) {\n\t\treturn now;\n\t}\n\n\tfunction totalSupply() public constant returns(uint256)\n\t{\n\t\treturn tokensMintedForSale + tokensMintedForOperations;\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SYMBOL\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALSFACTOR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "606060405260038054600160a860020a03191633600160a060020a0316179055610bac8061002e6000396000f3006060604052600436106101115763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461011657806306fdde031461013d578063095ea7b3146101c757806318160ddd146101e9578063188214001461013d57806323b872dd1461020e5780632a90531814610236578063313ce5671461024957806340c10f19146102725780635b7f415c14610249578063661884631461029457806370a08231146102b65780637d64bcb4146102d55780638bc04eb7146102e85780638da5cb5b146102fb57806395d89b4114610236578063a9059cbb1461032a578063d73dd6231461034c578063dd62ed3e1461036e578063f2fde38b14610393575b600080fd5b341561012157600080fd5b6101296103b4565b604051901515815260200160405180910390f35b341561014857600080fd5b6101506103c4565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561018c578082015183820152602001610174565b50505050905090810190601f1680156101b95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101d257600080fd5b610129600160a060020a03600435166024356103fb565b34156101f457600080fd5b6101fc610467565b60405190815260200160405180910390f35b341561021957600080fd5b610129600160a060020a036004358116906024351660443561046d565b341561024157600080fd5b6101506105ef565b341561025457600080fd5b61025c610626565b60405160ff909116815260200160405180910390f35b341561027d57600080fd5b610129600160a060020a036004351660243561062b565b341561029f57600080fd5b610129600160a060020a0360043516602435610738565b34156102c157600080fd5b6101fc600160a060020a0360043516610832565b34156102e057600080fd5b61012961084d565b34156102f357600080fd5b6101fc6108d8565b341561030657600080fd5b61030e6108e4565b604051600160a060020a03909116815260200160405180910390f35b341561033557600080fd5b610129600160a060020a03600435166024356108f3565b341561035757600080fd5b610129600160a060020a03600435166024356109ee565b341561037957600080fd5b6101fc600160a060020a0360043581169060243516610a92565b341561039e57600080fd5b6103b2600160a060020a0360043516610abd565b005b60035460a060020a900460ff1681565b60408051908101604052600b81527f47594d2052657761726473000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60005481565b6000600160a060020a038316151561048457600080fd5b600160a060020a0384166000908152600160205260409020548211156104a957600080fd5b600160a060020a03808516600090815260026020908152604080832033909416835292905220548211156104dc57600080fd5b600160a060020a038416600090815260016020526040902054610505908363ffffffff610b5816565b600160a060020a03808616600090815260016020526040808220939093559085168152205461053a908363ffffffff610b6a16565b600160a060020a03808516600090815260016020908152604080832094909455878316825260028152838220339093168252919091522054610582908363ffffffff610b5816565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b60408051908101604052600381527f47594d0000000000000000000000000000000000000000000000000000000000602082015281565b601281565b60035460009033600160a060020a0390811691161461064957600080fd5b60035460a060020a900460ff161561066057600080fd5b600054610673908363ffffffff610b6a16565b6000908155600160a060020a03841681526001602052604090205461069e908363ffffffff610b6a16565b600160a060020a0384166000818152600160205260409081902092909255907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859084905190815260200160405180910390a2600160a060020a03831660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a350600192915050565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120548083111561079557600160a060020a0333811660009081526002602090815260408083209388168352929052908120556107cc565b6107a5818463ffffffff610b5816565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600160a060020a031660009081526001602052604090205490565b60035460009033600160a060020a0390811691161461086b57600080fd5b60035460a060020a900460ff161561088257600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790557fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a150600190565b670de0b6b3a764000081565b600354600160a060020a031681565b6000600160a060020a038316151561090a57600080fd5b600160a060020a03331660009081526001602052604090205482111561092f57600080fd5b600160a060020a033316600090815260016020526040902054610958908363ffffffff610b5816565b600160a060020a03338116600090815260016020526040808220939093559085168152205461098d908363ffffffff610b6a16565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610a26908363ffffffff610b6a16565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a03908116911614610ad857600080fd5b600160a060020a0381161515610aed57600080fd5b600354600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610b6457fe5b50900390565b600082820183811015610b7957fe5b93925050505600a165627a7a72305820e6136b3a6a729576697f20465cc8bce5a8313340643fafe1e9ea8c7c35ad6a790029"
}