{
  "address": "0x8897290f8603c9ef3440003dbf47f97cf55c2e1b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenMall",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-30\n*/\n\npragma solidity ^0.4.22;\ncontract Ownable {\n  address public owner;\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n  /**\n   * @dev 可拥有的构造函数将合同的原始“所有者”设置为发送者\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev 如果由所有者以外的任何帐户调用，则抛出\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev 允许业主放弃合同的控制权.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev 允许当前所有者将合同的控制转移给新所有者.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev 将合同的控制权移交给新所有者.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\ncontract TokenMall is Ownable {\n  /**\n   * @dev 抵押物上链信息.\n   */\n  struct MortgageInfo {\n      bytes32 projectId;//项目ID \n      string currency;//抵押币种 \n      string mortgageAmount;//抵押数量 \n      string releaseAmount;//释放数量 \n  }\n  mapping(bytes32 =>MortgageInfo) mInfo;\n  bytes32[] mortgageInfos;\n   \n  /**\n   * @dev 添加数据.\n   */\n    event MessageMintInfo(address sender,bool isScuccess,string message);\n    function mintMortgageInfo(string _projectId,string currency,string mortgageAmount,string releaseAmount) onlyOwner{\n        bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId != proId){\n              mInfo[proId].projectId = proId;\n              mInfo[proId].currency = currency;\n              mInfo[proId].mortgageAmount = mortgageAmount;\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageMintInfo(msg.sender, true,\"添加成功\");\n            return;\n        }else{\n             MessageMintInfo(msg.sender, false,\"项目ID已经存在\");\n            return;\n        }\n    }\n  /**\n   * @dev 更新数据.\n   */\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\n         bytes32 proId = stringToBytes32(_projectId);\n        if(mInfo[proId].projectId == proId){\n              mInfo[proId].releaseAmount = releaseAmount;\n              mortgageInfos.push(proId);\n              MessageUpdateInfo(msg.sender, true,\"修改成功\");\n            return;\n        }else{\n             MessageUpdateInfo(msg.sender, false,\"项目ID不存在\");\n            return;\n        }\n    }\n     \n     \n  /**\n   * @dev 查询数据.\n   */\n    function getMortgageInfo(string _projectId) \n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\n         \n         bytes32 proId = stringToBytes32(_projectId);\n         \n         MortgageInfo memory mi = mInfo[proId];\n        \n        return (_projectId,mi.currency,mi.mortgageAmount,mi.releaseAmount);\n    }\n    \n     /// string类型转化为bytes32型转\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\n        assembly{\n            result := mload(add(source,32))\n        }\n    }\n    /// bytes32类型转化为string型转\n    function bytes32ToString(bytes32 x) constant internal returns(string){\n        bytes memory bytesString = new bytes(32);\n        uint charCount = 0 ;\n        for(uint j = 0 ; j<32;j++){\n            byte char = byte(bytes32(uint(x) *2 **(8*j)));\n            if(char !=0){\n                bytesString[charCount] = char;\n                charCount++;\n            }\n        }\n        bytes memory bytesStringTrimmed = new bytes(charCount);\n        for(j=0;j<charCount;j++){\n            bytesStringTrimmed[j]=bytesString[j];\n        }\n        return string(bytesStringTrimmed);\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"string\"}],\"name\":\"getMortgageInfo\",\"outputs\":[{\"name\":\"projectId\",\"type\":\"string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"mortgageAmount\",\"type\":\"string\"},{\"name\":\"releaseAmount\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"mortgageAmount\",\"type\":\"string\"},{\"name\":\"releaseAmount\",\"type\":\"string\"}],\"name\":\"mintMortgageInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"string\"},{\"name\":\"releaseAmount\",\"type\":\"string\"}],\"name\":\"updateMortgageInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isScuccess\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"MessageMintInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isScuccess\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"MessageUpdateInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611077806100536000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806315924b511461007d578063715018a6146102a35780638da5cb5b146102ba578063cd752f2f14610311578063e614c9611461044c578063f2fde38b146104fb575b600080fd5b34801561008957600080fd5b506100e4600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061053e565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019080838360005b83811015610130578082015181840152602081019050610115565b50505050905090810190601f16801561015d5780820380516001836020036101000a031916815260200191505b50858103845288818151815260200191508051906020019080838360005b8381101561019657808201518184015260208101905061017b565b50505050905090810190601f1680156101c35780820380516001836020036101000a031916815260200191505b50858103835287818151815260200191508051906020019080838360005b838110156101fc5780820151818401526020810190506101e1565b50505050905090810190601f1680156102295780820380516001836020036101000a031916815260200191505b50858103825286818151815260200191508051906020019080838360005b83811015610262578082015181840152602081019050610247565b50505050905090810190601f16801561028f5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b3480156102af57600080fd5b506102b86107a4565b005b3480156102c657600080fd5b506102cf6108a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561031d57600080fd5b5061044a600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506108cb565b005b34801561045857600080fd5b506104f9600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610bb3565b005b34801561050757600080fd5b5061053c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e0b565b005b606080606080600061054e610f7a565b61055787610e72565b915060016000836000191660001916815260200190815260200160002060806040519081016040529081600082015460001916600019168152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561062b5780601f106106005761010080835404028352916020019161062b565b820191906000526020600020905b81548152906001019060200180831161060e57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106cd5780601f106106a2576101008083540402835291602001916106cd565b820191906000526020600020905b8154815290600101906020018083116106b057829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561076f5780601f106107445761010080835404028352916020019161076f565b820191906000526020600020905b81548152906001019060200180831161075257829003601f168201915b505050505081525050905086816020015182604001518360600151829250819150809050955095509550955050509193509193565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107ff57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092857600080fd5b61093185610e72565b905080600019166001600083600019166000191681526020019081526020016000206000015460001916141515610b02578060016000836000191660001916815260200190815260200160002060000181600019169055508360016000836000191660001916815260200190815260200160002060010190805190602001906109bb929190610fa6565b508260016000836000191660001916815260200190815260200160002060020190805190602001906109ee929190610fa6565b50816001600083600019166000191681526020019081526020016000206003019080519060200190610a21929190610fa6565b5060028190806001815401808255809150509060018203906000526020600020016000909192909190915090600019169055507f08c59a12a6c34309ea0dec9b11b3c580ec534cf49eabcbdaa89d277900e801d5336001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252600c8152602001807fe6b7bbe58aa0e68890e58a9f0000000000000000000000000000000000000000815250602001935050505060405180910390a1610bac565b7f08c59a12a6c34309ea0dec9b11b3c580ec534cf49eabcbdaa89d277900e801d5336000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200180602001828103825260148152602001807fe9a1b9e79bae4944e5b7b2e7bb8fe5ad98e59ca8000000000000000000000000815250602001935050505060405180910390a15b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c1057600080fd5b610c1983610e72565b9050806000191660016000836000191660001916815260200190815260200160002060000154600019161415610d5c57816001600083600019166000191681526020019081526020016000206003019080519060200190610c7b929190610fa6565b5060028190806001815401808255809150509060018203906000526020600020016000909192909190915090600019169055507f04131cee9582d939dfb836831b67e45f10cfc16beedeaf5a493478b230e2166a336001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252600c8152602001807fe4bfaee694b9e68890e58a9f0000000000000000000000000000000000000000815250602001935050505060405180910390a1610e06565b7f04131cee9582d939dfb836831b67e45f10cfc16beedeaf5a493478b230e2166a336000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200180602001828103825260118152602001807fe9a1b9e79bae4944e4b88de5ad98e59ca8000000000000000000000000000000815250602001935050505060405180910390a15b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e6657600080fd5b610e6f81610e80565b50565b600060208201519050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ebc57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b608060405190810160405280600080191681526020016060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610fe757805160ff1916838001178555611015565b82800160010185558215611015579182015b82811115611014578251825591602001919060010190610ff9565b5b5090506110229190611026565b5090565b61104891905b8082111561104457600081600090555060010161102c565b5090565b905600a165627a7a7230582054ce2893ffb06b2f4035c7da12f01a748180b508fe8baa62fe9866b5b1959f620029"
}