{
  "address": "0x8e4b48753e2e148c73fb73a0811cb860f12c3658",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenAirdroperFor5GT",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-14\n*/\n\nlibrary SafeMath {\n  function mul(uint a, uint b) internal pure  returns (uint) {\n    uint c = a * b;\n    require(a == 0 || c / a == b);\n    return c;\n  }\n  function div(uint a, uint b) internal pure returns (uint) {\n    require(b > 0);\n    uint c = a / b;\n    require(a == b * c + a % b);\n    return c;\n  }\n  function sub(uint a, uint b) internal pure returns (uint) {\n    require(b <= a);\n    return a - b;\n  }\n  function add(uint a, uint b) internal pure returns (uint) {\n    uint c = a + b;\n    require(c >= a);\n    return c;\n  }\n  function max64(uint64 a, uint64 b) internal  pure returns (uint64) {\n    return a >= b ? a : b;\n  }\n  function min64(uint64 a, uint64 b) internal  pure returns (uint64) {\n    return a < b ? a : b;\n  }\n  function max256(uint256 a, uint256 b) internal  pure returns (uint256) {\n    return a >= b ? a : b;\n  }\n  function min256(uint256 a, uint256 b) internal  pure returns (uint256) {\n    return a < b ? a : b;\n  }\n}\n\n\ncontract Ownable {\n    address public owner;\n\n    function Ownable() public{\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n    function transferOwnership(address newOwner) onlyOwner public{\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n}\n\ninterface IERC20 {\n    function transfer(address to, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    function balanceOf(address _owner) external view returns (uint256 balance);\n\n}\n\ncontract TokenAirdroperFor5GT is Ownable{\n    \n    using SafeMath for uint;\n\n    address public tokenAddress = 0xf82c9bbcc3b1407b494c8529256c2a8ea5dd8eb6;\n\n    uint256 public limitPayValue = 0.1 ether;\n  \n    uint256 public airdropRate = 555;\n    bool public airdropPaused = false;\n\n\n    constructor(){}\n     \n    function () payable public{\n        require(airdropPaused == false);\n        require(msg.value == limitPayValue);\n        require(owner.send(msg.value));\n        require(IERC20(tokenAddress).transfer(msg.sender,airdropRate.mul(1 ether)));\n    }\n    function changeAirdropStatus(bool _airdropPaused) public onlyOwner{\n        airdropPaused = _airdropPaused;\n    }\n    \n    function withdraw(address _tokenAddress) public onlyOwner{\n         if(_tokenAddress == address(0)){\n          require(owner.send(address(this).balance));\n          return;\n      }\n      IERC20 erc20 = IERC20(tokenAddress);\n      uint256 balance = erc20.balanceOf(this);\n      require(erc20.transfer(owner,balance));\n    }\n\n    \n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"limitPayValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdropPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_airdropPaused\",\"type\":\"bool\"}],\"name\":\"changeAirdropStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]",
  "bytecode": "608060405273f82c9bbcc3b1407b494c8529256c2a8ea5dd8eb6600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555067016345785d8a000060025561022b6003556000600460006101000a81548160ff02191690831515021790555034801561009257600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610968806100e26000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633eb77d491461024a57806351cff8d91461027557806364a2bc56146102b85780638891cf0d146102e75780638da5cb5b146103125780639d76ea5814610369578063adf3364c146103c0578063f2fde38b146103ef575b60001515600460009054906101000a900460ff1615151415156100b057600080fd5b600254341415156100c057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050151561012157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361017d670de0b6b3a764000060035461043290919063ffffffff16565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561020257600080fd5b505af1158015610216573d6000803e3d6000fd5b505050506040513d602081101561022c57600080fd5b8101908080519060200190929190505050151561024857600080fd5b005b34801561025657600080fd5b5061025f610468565b6040518082815260200191505060405180910390f35b34801561028157600080fd5b506102b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061046e565b005b3480156102c457600080fd5b506102cd61078b565b604051808215151515815260200191505060405180910390f35b3480156102f357600080fd5b506102fc61079e565b6040518082815260200191505060405180910390f35b34801561031e57600080fd5b506103276107a4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561037557600080fd5b5061037e6107c9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103cc57600080fd5b506103ed6004803603810190808035151590602001909291905050506107ef565b005b3480156103fb57600080fd5b50610430600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610867565b005b60008082840290506000841480610453575082848281151561045057fe5b04145b151561045e57600080fd5b8091505092915050565b60025481565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104cc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057e576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050151561057957600080fd5b610786565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561063e57600080fd5b505af1158015610652573d6000803e3d6000fd5b505050506040513d602081101561066857600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561073f57600080fd5b505af1158015610753573d6000803e3d6000fd5b505050506040513d602081101561076957600080fd5b8101908080519060200190929190505050151561078557600080fd5b5b505050565b600460009054906101000a900460ff1681565b60035481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561084a57600080fd5b80600460006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108c257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561093957806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820a7aaed3df4cfbe2453c9998ade37a1a333a74bfd959a0ccb31ceebe754b8a1f20029"
}