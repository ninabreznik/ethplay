{
  "address": "0x20d11cb319552871969526f4c58b99c34df9e6ed",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "FrankToken",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-25\n*/\n\npragma solidity ^0.5.7;\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  /*@CTK SafeMath_mul\n    @tag spec\n    @post __reverted == __has_assertion_failure\n    @post __has_assertion_failure == __has_overflow\n    @post __reverted == false -> c == a * b\n    @post msg == msg__post\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  /*@CTK SafeMath_div\n    @tag spec\n    @pre b != 0\n    @post __reverted == __has_assertion_failure\n    @post __has_overflow == true -> __has_assertion_failure == true\n    @post __reverted == false -> __return == a / b\n    @post msg == msg__post\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  /*@CTK SafeMath_sub\n    @tag spec\n    @post __reverted == __has_assertion_failure\n    @post __has_overflow == true -> __has_assertion_failure == true\n    @post __reverted == false -> __return == a - b\n    @post msg == msg__post\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  /*@CTK SafeMath_add\n    @tag spec\n    @post __reverted == __has_assertion_failure\n    @post __has_assertion_failure == __has_overflow\n    @post __reverted == false -> c == a + b\n    @post msg == msg__post\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  /*@CTK owner_set_on_success\n    @pre __reverted == false -> __post.owner == owner\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  constructor() public {\n    owner = msg.sender;\n  }\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  /*@CTK transferOwnership\n    @post __reverted == false -> (msg.sender == owner -> __post.owner == newOwner)\n    @post (owner != msg.sender) -> (__reverted == true)\n    @post (newOwner == address(0)) -> (__reverted == true)\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n}\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n  bool public paused = false;\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n  mapping(address => uint256) balances;\n  uint256 totalSupply_;\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  /*@CTK transfer_success\n    @pre _to != address(0)\n    @pre balances[msg.sender] >= _value\n    @pre __reverted == false\n    @post __reverted == false\n    @post __return == true\n   */\n  /*@CTK transfer_same_address\n    @tag no_overflow\n    @pre _to == msg.sender\n    @post this == __post\n   */\n  /*@CTK transfer_conditions\n    @tag assume_completion\n    @pre _to != msg.sender\n    @post __post.balances[_to] == balances[_to] + _value\n    @post __post.balances[msg.sender] == balances[msg.sender] - _value\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  /*@CTK balanceOf\n    @post __reverted == false\n    @post __return == balances[_owner]\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n}\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n  mapping (address => mapping (address => uint256)) internal allowed;\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  /*@CTK transferFrom\n    @tag assume_completion\n    @pre _from != _to\n    @post __return == true\n    @post __post.balances[_to] == balances[_to] + _value\n    @post __post.balances[_from] == balances[_from] - _value\n    @post __has_overflow == false\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  /*@CTK approve_success\n    @post _value == 0 -> __reverted == false\n    @post allowed[msg.sender][_spender] == 0 -> __reverted == false\n   */\n  /*@CTK approve\n    @tag assume_completion\n    @post __post.allowed[msg.sender][_spender] == _value\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  /*@CTK CtkIncreaseApprovalEffect\n    @tag assume_completion\n    @post __post.allowed[msg.sender][_spender] == allowed[msg.sender][_spender] + _addedValue\n    @post __has_overflow == false\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  /*@CTK CtkDecreaseApprovalEffect_1\n    @pre allowed[msg.sender][_spender] >= _subtractedValue\n    @tag assume_completion\n    @post __post.allowed[msg.sender][_spender] == allowed[msg.sender][_spender] - _subtractedValue\n    @post __has_overflow == false\n   */\n   /*@CTK CtkDecreaseApprovalEffect_2\n    @pre allowed[msg.sender][_spender] < _subtractedValue\n    @tag assume_completion\n    @post __post.allowed[msg.sender][_spender] == 0\n    @post __has_overflow == false\n   */\n  /* CertiK Smart Labelling, for more details visit: https://certik.org */\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n}\ncontract FrankToken is StandardToken, Pausable {\n    string public constant name = \"Frank Token\";\n    string public constant symbol = \"FT\";\n    uint8 public constant decimals = 0;\n    modifier validDestination(address to) {\n        require(to != address(0x0));\n        require(to != address(this));\n        _;\n    }\n    constructor(uint tokenTotalAmount) public {\n        totalSupply_ = tokenTotalAmount;\n        balances[msg.sender] = tokenTotalAmount;\n        emit Transfer(address(0x0), msg.sender, tokenTotalAmount);\n    }\n    /*@CTK CtkTransferNoEffect\n      @post (_to == address(0)) \\/ (paused == true) -> __reverted == true\n     */\n    /*@CTK CtkTransferEffect\n      @pre __reverted == false\n      @pre balances[msg.sender] >= _value\n      @pre paused == false\n      @pre __return == true\n      @pre msg.sender != _to\n      @post __post.balances[_to] == balances[_to] + _value\n      @post __has_overflow == false\n     */\n    /* CertiK Smart Labelling, for more details visit: https://certik.org */\n    function transfer(address _to, uint _value) public whenNotPaused\n        validDestination(_to)\n        returns (bool) {\n        return super.transfer(_to, _value);\n    }\n    /*@CTK CtkTransferFromNoEffect\n      @post (_to == address(0)) \\/ (paused == true) -> __reverted == true\n     */\n    /*@CTK CtkTransferFromEffect\n      @tag assume_completion\n      @pre _from != _to\n      @post __post.balances[_to] == balances[_to] + _value\n      @post __post.balances[_from] == balances[_from] - _value\n      @post __has_overflow == false\n     */\n    /* CertiK Smart Labelling, for more details visit: https://certik.org */\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused\n        validDestination(_to)\n        returns (bool) {\n        return super.transferFrom(_from, _to, _value);\n    }\n    /*@CTK CtkApproveNoEffect\n      @post (paused == true) -> __post == this\n     */\n    /*@CTK CtkApprove\n      @tag assume_completion\n      @post __post.allowed[msg.sender][_spender] == _value\n     */\n    /* CertiK Smart Labelling, for more details visit: https://certik.org */\n    function approve(address _spender, uint256 _value) public whenNotPaused\n      returns (bool) {\n      return super.approve(_spender, _value);\n    }\n    /*@CTK CtkIncreaseApprovalNoEffect\n      @post (paused == true) -> __reverted == true\n     */\n    /*@CTK CtkIncreaseApprovalEffect\n      @pre paused == false\n      @tag assume_completion\n      @post __post.allowed[msg.sender][_spender] == allowed[msg.sender][_spender] + _addedValue\n      @post __has_overflow == false\n     */\n    /* CertiK Smart Labelling, for more details visit: https://certik.org */\n    function increaseApproval(address _spender, uint _addedValue) public whenNotPaused\n      returns (bool success) {\n      return super.increaseApproval(_spender, _addedValue);\n    }\n    /*@CTK CtkDecreaseApprovalNoEffect\n      @post (paused == true) -> __reverted == true\n     */\n    /*@CTK CtkDecreaseApprovalEffect\n      @pre allowed[msg.sender][_spender] >= _subtractedValue\n      @tag assume_completion\n      @post __post.allowed[msg.sender][_spender] == allowed[msg.sender][_spender] - _subtractedValue\n      @post __has_overflow == false\n     */\n    /* CertiK Smart Labelling, for more details visit: https://certik.org */\n    function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused\n      returns (bool success) {\n      return super.decreaseApproval(_spender, _subtractedValue);\n    }\n}",
  "bytecode": "608060405260038054600160a01b60ff021916905534801561002057600080fd5b50604051602080610bf18339810180604052602081101561004057600080fd5b5051600380546001600160a01b031916339081179091556001829055600081815260208181526040808320859055805185815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a350610b41806100b06000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146102c8578063d73dd623146102f4578063dd62ed3e14610320578063f2fde38b1461034e57610100565b806370a082311461026e5780638456cb59146102945780638da5cb5b1461029c57806395d89b41146102c057610100565b8063313ce567116100d3578063313ce567146102125780633f4ba83a146102305780635c975abb1461023a578063661884631461024257610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610374565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561039e565b604080519115158252519081900360200190f35b6101ca6103c9565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b038135811691602081013590911690604001356103cf565b61021a610427565b6040805160ff9092168252519081900360200190f35b61023861042c565b005b6101ae610494565b6101ae6004803603604081101561025857600080fd5b506001600160a01b0381351690602001356104a4565b6101ca6004803603602081101561028457600080fd5b50356001600160a01b03166104c8565b6102386104e3565b6102a4610552565b604080516001600160a01b039092168252519081900360200190f35b61010d610561565b6101ae600480360360408110156102de57600080fd5b506001600160a01b038135169060200135610582565b6101ae6004803603604081101561030a57600080fd5b506001600160a01b0381351690602001356105d8565b6101ca6004803603604081101561033657600080fd5b506001600160a01b03813581169160200135166105fc565b6102386004803603602081101561036457600080fd5b50356001600160a01b0316610627565b6040518060400160405280600b8152602001600160a91b6a233930b735902a37b5b2b70281525081565b600354600090600160a01b900460ff16156103b857600080fd5b6103c283836106ad565b9392505050565b60015490565b600354600090600160a01b900460ff16156103e957600080fd5b826001600160a01b0381166103fd57600080fd5b6001600160a01b03811630141561041357600080fd5b61041e858585610713565b95945050505050565b600081565b6003546001600160a01b0316331461044357600080fd5b600354600160a01b900460ff1661045957600080fd5b60038054600160a01b60ff02191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600354600160a01b900460ff1681565b600354600090600160a01b900460ff16156104be57600080fd5b6103c28383610888565b6001600160a01b031660009081526020819052604090205490565b6003546001600160a01b031633146104fa57600080fd5b600354600160a01b900460ff161561051157600080fd5b60038054600160a01b60ff021916600160a01b1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b6003546001600160a01b031681565b604051806040016040528060028152602001600160f21b6111950281525081565b600354600090600160a01b900460ff161561059c57600080fd5b826001600160a01b0381166105b057600080fd5b6001600160a01b0381163014156105c657600080fd5b6105d08484610978565b949350505050565b600354600090600160a01b900460ff16156105f257600080fd5b6103c28383610a57565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6003546001600160a01b0316331461063e57600080fd5b6001600160a01b03811661065157600080fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b3360008181526002602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60006001600160a01b03831661072857600080fd5b6001600160a01b03841660009081526020819052604090205482111561074d57600080fd5b6001600160a01b038416600090815260026020908152604080832033845290915290205482111561077d57600080fd5b6001600160a01b0384166000908152602081905260409020546107a6908363ffffffff610af016565b6001600160a01b0380861660009081526020819052604080822093909355908516815220546107db908363ffffffff610b0216565b6001600160a01b0380851660009081526020818152604080832094909455918716815260028252828120338252909152205461081d908363ffffffff610af016565b6001600160a01b03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b3360009081526002602090815260408083206001600160a01b0386168452909152812054808311156108dd573360009081526002602090815260408083206001600160a01b0388168452909152812055610912565b6108ed818463ffffffff610af016565b3360009081526002602090815260408083206001600160a01b03891684529091529020555b3360008181526002602090815260408083206001600160a01b0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60006001600160a01b03831661098d57600080fd5b336000908152602081905260409020548211156109a957600080fd5b336000908152602081905260409020546109c9908363ffffffff610af016565b33600090815260208190526040808220929092556001600160a01b038516815220546109fb908363ffffffff610b0216565b6001600160a01b038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b3360009081526002602090815260408083206001600160a01b0386168452909152812054610a8b908363ffffffff610b0216565b3360008181526002602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600082821115610afc57fe5b50900390565b81810182811015610b0f57fe5b9291505056fea165627a7a72305820ee19628ab623b5140bf4c85b7aed0ddc8ebbd5db5ae0bd2840286bc37a436076002900000000000000000000000000000000000000000000000000000000000007cd",
  "constructorArguments": "00000000000000000000000000000000000000000000000000000000000007cd"
}