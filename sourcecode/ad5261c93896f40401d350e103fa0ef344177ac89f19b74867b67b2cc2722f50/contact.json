{
  "address": "0x5bc7e5f0ab8b2e10d2d0a3f21739fce62459aef3",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Hut34 Entropy Token",
  "contractName": "Hut34ENTRP",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-12-19\n*/\n\n/*\nfile:   Hut34ENTRP.sol\nver:    0.1.0\nauthor: Darryl Morris\ndate:   19-12-2017\nemail:  o0ragman0o AT gmail.com\n(c) Darryl Morris 2017\n\nA collated contract set for the receipt of funds and production and transfer\nof ERC20 tokens as specified by Hut34.\n\nLicense\n-------\nThis software is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \nSee MIT Licence for further details.\n<https://opensource.org/licenses/MIT>.\n\n-------------\nRelease Notes\n-------------\n* Reissuence of Hut34 ENT tokens as ENTRP tokens due to post sale offchain\nbulk transfer tool bug, and desire to update ticker / symbol.\n\nDedications\n-------------\n* With love to Isabella and Molly from your dad\n* xx to Edie, Robin, William and Charlotte x\n*/\n\npragma solidity ^0.4.17;\n\ncontract Hut34Config\n{\n    // ERC20 token name\n    string  public constant name            = \"Hut34 Entropy Token\";\n    \n    // ERC20 trading symbol\n    string  public constant symbol          = \"ENTRP\";\n\n    // ERC20 decimal places\n    uint8   public constant decimals        = 18;\n\n    // Total supply (* in unit ENT *)\n    uint    public constant TOTAL_TOKENS    = 100000000;\n\n    // Contract owner at time of deployment.\n    address public constant OWNER           = 0xdA3780Cff2aE3a59ae16eC1734DEec77a7fd8db2;\n\n    // A Hut34 address to own tokens\n    address public constant HUT34_RETAIN    = 0x3135F4acA3C1Ad4758981500f8dB20EbDc5A1caB;\n    \n    // A Hut34 address to accept raised funds\n    address public constant HUT34_WALLET    = 0xA70d04dC4a64960c40CD2ED2CDE36D76CA4EDFaB;\n    \n    // Percentage of tokens to be vested over 2 years. 20%\n    uint    public constant VESTED_PERCENT  = 20;\n\n    // Vesting period\n    uint    public constant VESTING_PERIOD  = 26 weeks;\n\n    // Origional Token sale contract with misallocated post token sale whitelist, see https://medium.com/@hut34project/entropy-token-reissuance-f37a8574c05c\n    address public constant REPLACES        = 0x9901ed1e649C4a77C7Fff3dFd446ffE3464da747;\n}\n\n\nlibrary SafeMath\n{\n    // a add to b\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        assert(c >= a);\n    }\n    \n    // a subtract b\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        c = a - b;\n        assert(c <= a);\n    }\n    \n    // a multiplied by b\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        assert(a == 0 || c / a == b);\n    }\n    \n    // a divided by b\n    function div(uint a, uint b) internal pure returns (uint c) {\n        assert(b != 0);\n        c = a / b;\n    }\n}\n\n\ncontract ERC20Token\n{\n    using SafeMath for uint;\n\n/* Constants */\n\n    // none\n    \n/* State variable */\n\n    /// @return The Total supply of tokens\n    uint public totalSupply;\n    \n    /// @return Tokens owned by an address\n    mapping (address => uint) balances;\n    \n    /// @return Tokens spendable by a thridparty\n    mapping (address => mapping (address => uint)) allowed;\n\n/* Events */\n\n    // Triggered when tokens are transferred.\n    event Transfer(\n        address indexed _from,\n        address indexed _to,\n        uint256 _amount);\n\n    // Triggered whenever approve(address _spender, uint256 _amount) is called.\n    event Approval(\n        address indexed _owner,\n        address indexed _spender,\n        uint256 _amount);\n\n/* Modifiers */\n\n    // none\n    \n/* Functions */\n\n    // Using an explicit getter allows for function overloading    \n    function balanceOf(address _addr)\n        public\n        view\n        returns (uint)\n    {\n        return balances[_addr];\n    }\n    \n    // Using an explicit getter allows for function overloading    \n    function allowance(address _owner, address _spender)\n        public\n        constant\n        returns (uint)\n    {\n        return allowed[_owner][_spender];\n    }\n\n    // Send _value amount of tokens to address _to\n    function transfer(address _to, uint256 _amount)\n        public\n        returns (bool)\n    {\n        return xfer(msg.sender, _to, _amount);\n    }\n\n    // Send _value amount of tokens from address _from to address _to\n    function transferFrom(address _from, address _to, uint256 _amount)\n        public\n        returns (bool)\n    {\n        require(_amount <= allowed[_from][msg.sender]);\n        \n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n        return xfer(_from, _to, _amount);\n    }\n\n    // Process a transfer internally.\n    function xfer(address _from, address _to, uint _amount)\n        internal\n        returns (bool)\n    {\n        require(_amount <= balances[_from]);\n\n        Transfer(_from, _to, _amount);\n        \n        // avoid wasting gas on 0 token transfers\n        if(_amount == 0) return true;\n        \n        balances[_from] = balances[_from].sub(_amount);\n        balances[_to]   = balances[_to].add(_amount);\n        \n        return true;\n    }\n\n    // Approves a third-party spender\n    function approve(address _spender, uint256 _amount)\n        public\n        returns (bool)\n    {\n        allowed[msg.sender][_spender] = _amount;\n        Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n}\n\n\ncontract Hut34ENTRPAbstract\n{\n    /// @dev Logged when new owner accepts ownership\n    /// @param _from the old owner address\n    /// @param _to the new owner address\n    event ChangedOwner(address indexed _from, address indexed _to);\n    \n    /// @dev Logged when owner initiates a change of ownership\n    /// @param _to the new owner address\n    event ChangeOwnerTo(address indexed _to);\n    \n    /// @dev Logged when vested tokens are released back to HUT32_WALLET\n    /// @param _releaseDate The official release date (even if released at\n    /// later date)\n    event VestingReleased(uint _releaseDate);\n\n//\n// Constants\n//\n\n    // The Hut34 vesting 'psudo-address' for transferring and releasing vested\n    // tokens to the Hut34 Wallet. The address is UTF8 encoding of the\n    // string and can only be accessed by the 'releaseVested()' function.\n    // `0x48757433342056657374696e6700000000000000`\n    address public constant HUT34_VEST_ADDR = address(bytes20(\"Hut34 Vesting\"));\n\n//\n// State Variables\n//\n\n    /// @dev An address permissioned to enact owner restricted functions\n    /// @return owner\n    address public owner;\n    \n    /// @dev An address permissioned to take ownership of the contract\n    /// @return new owner address\n    address public newOwner;\n\n    /// @returns Date of next vesting release\n    uint public nextReleaseDate;\n\n//\n// Modifiers\n//\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n//\n// Function Abstracts\n//\n\n\n    /// @notice Make bulk transfer of tokens to many addresses\n    /// @param _addrs An array of recipient addresses\n    /// @param _amounts An array of amounts to transfer to respective addresses\n    /// @return Boolean success value\n    function transferToMany(address[] _addrs, uint[] _amounts)\n        public returns (bool);\n\n    /// @notice Release vested tokens after a maturity date\n    /// @return Boolean success value\n    function releaseVested() public returns (bool);\n\n    /// @notice Salvage `_amount` tokens at `_kaddr` and send them to `_to`\n    /// @param _kAddr An ERC20 contract address\n    /// @param _to and address to send tokens\n    /// @param _amount The number of tokens to transfer\n    /// @return Boolean success value\n    function transferExternalToken(address _kAddr, address _to, uint _amount)\n        public returns (bool);\n}\n\n\n/*-----------------------------------------------------------------------------\\\n\n Hut34ENTRP implimentation\n\n\\*----------------------------------------------------------------------------*/\n\ncontract Hut34ENTRP is \n    ERC20Token,\n    Hut34ENTRPAbstract,\n    Hut34Config\n{\n    using SafeMath for uint;\n\n//\n// Constants\n//\n\n    // Token fixed point for decimal places\n    uint constant TOKEN = uint(10)**decimals; \n\n    // Calculate vested tokens\n    uint public constant VESTED_TOKENS =\n            TOTAL_TOKENS * TOKEN * VESTED_PERCENT / 100;\n            \n//\n// Functions\n//\n\n    function Hut34ENTRP()\n        public\n    {\n        // Run sanity checks\n        require(TOTAL_TOKENS != 0);\n        require(OWNER != 0x0);\n        require(HUT34_RETAIN != 0x0);\n        require(HUT34_WALLET != 0x0);\n        require(bytes(name).length != 0);\n        require(bytes(symbol).length != 0);\n\n        owner = OWNER;\n        totalSupply = TOTAL_TOKENS.mul(TOKEN);\n\n        // Mint the total supply into Hut34 token holding address\n        balances[HUT34_RETAIN] = totalSupply;\n        Transfer(0x0, HUT34_RETAIN, totalSupply);\n\n        // Transfer vested tokens to vesting account\n        xfer(HUT34_RETAIN, HUT34_VEST_ADDR, VESTED_TOKENS);\n\n        // Set first vesting release date\n        nextReleaseDate = now.add(VESTING_PERIOD);\n    }\n\n    // Releases vested tokens back to Hut34 wallet\n    function releaseVested()\n        public\n        returns (bool)\n    {\n        require(now > nextReleaseDate);\n        VestingReleased(nextReleaseDate);\n        nextReleaseDate = nextReleaseDate.add(VESTING_PERIOD);\n        return xfer(HUT34_VEST_ADDR, HUT34_RETAIN, VESTED_TOKENS / 4);\n    }\n\n//\n// ERC20 additional and overloaded functions\n//\n\n    // Allows a sender to transfer tokens to an array of recipients\n    function transferToMany(address[] _addrs, uint[] _amounts)\n        public\n        returns (bool)\n    {\n        require(_addrs.length == _amounts.length);\n        uint len = _addrs.length;\n        for(uint i = 0; i < len; i++) {\n            xfer(msg.sender, _addrs[i], _amounts[i]);\n        }\n        return true;\n    }\n    \n//\n// Contract management functions\n//\n\n    // Initiate a change of owner to `_owner`\n    function changeOwner(address _owner)\n        public\n        onlyOwner\n        returns (bool)\n    {\n        ChangeOwnerTo(_owner);\n        newOwner = _owner;\n        return true;\n    }\n    \n    // Finalise change of ownership to newOwner\n    function acceptOwnership()\n        public\n        returns (bool)\n    {\n        require(msg.sender == newOwner);\n        ChangedOwner(owner, msg.sender);\n        owner = newOwner;\n        delete newOwner;\n        return true;\n    }\n\n    // Owner can salvage ERC20 tokens that may have been sent to the account\n    function transferExternalToken(address _kAddr, address _to, uint _amount)\n        public\n        onlyOwner\n        returns (bool) \n    {\n        require(ERC20Token(_kAddr).transfer(_to, _amount));\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"VESTING_PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextReleaseDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_TOKENS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HUT34_VEST_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseVested\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_kAddr\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferExternalToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferToMany\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HUT34_WALLET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REPLACES\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VESTED_PERCENT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VESTED_TOKENS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HUT34_RETAIN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwnerTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_releaseDate\",\"type\":\"uint256\"}],\"name\":\"VestingReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "606060405234156200001057600080fd5b60006305f5e100141515156200002557600080fd5b600073da3780cff2ae3a59ae16ec1734deec77a7fd8db273ffffffffffffffffffffffffffffffffffffffff16141515156200006057600080fd5b6000733135f4aca3c1ad4758981500f8db20ebdc5a1cab73ffffffffffffffffffffffffffffffffffffffff16141515156200009b57600080fd5b600073a70d04dc4a64960c40cd2ed2cde36d76ca4edfab73ffffffffffffffffffffffffffffffffffffffff1614151515620000d657600080fd5b60006040805190810160405280601381526020017f487574333420456e74726f707920546f6b656e0000000000000000000000000081525051141515156200011d57600080fd5b60006040805190810160405280600581526020017f454e54525000000000000000000000000000000000000000000000000000000081525051141515156200016457600080fd5b73da3780cff2ae3a59ae16ec1734deec77a7fd8db2600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001e7601260ff16600a0a6305f5e1006200036264010000000002620015e2179091906401000000009004565b60008190555060005460016000733135f4aca3c1ad4758981500f8db20ebdc5a1cab73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550733135f4aca3c1ad4758981500f8db20ebdc5a1cab73ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000546040518082815260200191505060405180910390a36200032f733135f4aca3c1ad4758981500f8db20ebdc5a1cab7f48757433342056657374696e67000000000000000000000000000000000000006c01000000000000000000000000900460646014601260ff16600a0a6305f5e10002028115156200031457fe5b046200039364010000000002620013cc176401000000009004565b506200035662eff10042620005b364010000000002620013b3179091906401000000009004565b600581905550620005e7565b6000818302905060008314806200038457508183828115156200038157fe5b04145b15156200038d57fe5b92915050565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515620003e457600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360008214156200045d5760019050620005ac565b620004bf82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620005cd64010000000002620015c9179091906401000000009004565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200056482600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620005b364010000000002620013b3179091906401000000009004565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600190505b9392505050565b60008183019050828110151515620005c757fe5b92915050565b60008183039050828111151515620005e157fe5b92915050565b61163c80620005f76000396000f300606060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630197d9721461015957806306fdde0314610182578063095ea7b3146102105780630a91cad01461026a5780630b7abf77146102935780630d61a4ff146102bc578063117803e31461031157806318160ddd146103665780631f800e8e1461038f57806323b872dd146103bc5780632fbd243214610435578063313ce567146104ae57806370a08231146104dd57806379ba50971461052a5780637c33ebfd146105575780638da5cb5b1461060957806395d89b411461065e578063979d6dc7146106ec578063a1b6d4ae14610741578063a6f9dae114610796578063a9059cbb146107e7578063bf6888c814610841578063d4ee1d901461086a578063dd62ed3e146108bf578063df4e79fa1461092b578063ff41f5cc14610954575b600080fd5b341561016457600080fd5b61016c6109a9565b6040518082815260200191505060405180910390f35b341561018d57600080fd5b6101956109b0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d55780820151818401526020810190506101ba565b50505050905090810190601f1680156102025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561021b57600080fd5b610250600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506109e9565b604051808215151515815260200191505060405180910390f35b341561027557600080fd5b61027d610adb565b6040518082815260200191505060405180910390f35b341561029e57600080fd5b6102a6610ae1565b6040518082815260200191505060405180910390f35b34156102c757600080fd5b6102cf610ae9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561031c57600080fd5b610324610b1d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561037157600080fd5b610379610b35565b6040518082815260200191505060405180910390f35b341561039a57600080fd5b6103a2610b3b565b604051808215151515815260200191505060405180910390f35b34156103c757600080fd5b61041b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610c20565b604051808215151515815260200191505060405180910390f35b341561044057600080fd5b610494600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610dd0565b604051808215151515815260200191505060405180910390f35b34156104b957600080fd5b6104c1610f0a565b604051808260ff1660ff16815260200191505060405180910390f35b34156104e857600080fd5b610514600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610f0f565b6040518082815260200191505060405180910390f35b341561053557600080fd5b61053d610f58565b604051808215151515815260200191505060405180910390f35b341561056257600080fd5b6105ef600480803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919050506110c1565b604051808215151515815260200191505060405180910390f35b341561061457600080fd5b61061c61113a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561066957600080fd5b610671611160565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106b1578082015181840152602081019050610696565b50505050905090810190601f1680156106de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156106f757600080fd5b6106ff611199565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561074c57600080fd5b6107546111b1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107a157600080fd5b6107cd600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111c9565b604051808215151515815260200191505060405180910390f35b34156107f257600080fd5b610827600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506112b4565b604051808215151515815260200191505060405180910390f35b341561084c57600080fd5b6108546112c9565b6040518082815260200191505060405180910390f35b341561087557600080fd5b61087d6112ce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156108ca57600080fd5b610915600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506112f4565b6040518082815260200191505060405180910390f35b341561093657600080fd5b61093e61137b565b6040518082815260200191505060405180910390f35b341561095f57600080fd5b61096761139b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62eff10081565b6040805190810160405280601381526020017f487574333420456e74726f707920546f6b656e0000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60055481565b6305f5e10081565b7f48757433342056657374696e67000000000000000000000000000000000000006c01000000000000000000000000900481565b73da3780cff2ae3a59ae16ec1734deec77a7fd8db281565b60005481565b600060055442111515610b4d57600080fd5b7f87281fabebb3053dede10cd89db97c95421a1fb9385cd5d0bb6cf8db8dd11ae76005546040518082815260200191505060405180910390a1610b9e62eff1006005546113b390919063ffffffff16565b600581905550610c1b7f48757433342056657374696e67000000000000000000000000000000000000006c010000000000000000000000009004733135f4aca3c1ad4758981500f8db20ebdc5a1cab600460646014601260ff16600a0a6305f5e1000202811515610c0b57fe5b04811515610c1557fe5b046113cc565b905090565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610cad57600080fd5b610d3c82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115c990919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dc78484846113cc565b90509392505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e2e57600080fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610ed957600080fd5b6102c65a03f11515610eea57600080fd5b505050604051805190501515610eff57600080fd5b600190509392505050565b601281565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fb657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f2748503f8f31d8071821d1d5144384ba6a465036cda17fa1629a8a2509ccee0e60405160405180910390a3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001905090565b6000806000835185511415156110d657600080fd5b84519150600090505b8181101561112e576111203386838151811015156110f957fe5b90602001906020020151868481518110151561111157fe5b906020019060200201516113cc565b5080806001019150506110df565b60019250505092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600581526020017f454e54525000000000000000000000000000000000000000000000000000000081525081565b73a70d04dc4a64960c40cd2ed2cde36d76ca4edfab81565b739901ed1e649c4a77c7fff3dfd446ffe3464da74781565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561122757600080fd5b8173ffffffffffffffffffffffffffffffffffffffff167fbc48fdaddfcfb54d36a0ac4d7e52f46cdf854784b9c0978d385a35e8383262d460405160405180910390a281600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b60006112c13384846113cc565b905092915050565b601481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60646014601260ff16600a0a6305f5e100020281151561139757fe5b0481565b733135f4aca3c1ad4758981500f8db20ebdc5a1cab81565b600081830190508281101515156113c657fe5b92915050565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561141c57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600082141561149357600190506115c2565b6114e582600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115c990919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061157a82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113b390919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600190505b9392505050565b600081830390508281111515156115dc57fe5b92915050565b60008183029050600083148061160257508183828115156115ff57fe5b04145b151561160a57fe5b929150505600a165627a7a72305820216f0ed6de613e98bb8186818c7d26bf6030633a4c73a701d92071b91e67557e0029"
}