{
  "address": "0x5da482344df827dccecd7c8aee675c463b12a915",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "OurContract",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-19\n*/\n\npragma solidity ^0.4.18;\n\n//Standart full ECR20 contract interface\ncontract ERC20\n{\n    string public name;\n    string public symbol;\n    uint8 public constant decimals = 18;\n    \n    constructor(string _name, string _symbol) public \n    {\n        name = _name;\n        symbol = _symbol;\n    }\n    \n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    \n    function allowance(address owner, address spender) public view returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    \n}\n\n//Contract for check ownership\ncontract Ownable\n{\n    address internal owner;\n        \n    constructor() public \n    {\n        owner = msg.sender;\n    }\n    \n    modifier onlyOwner() \n    {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    modifier onlyNotOwner()\n    {\n        require(msg.sender != owner);\n        _;\n    }\n}\n\n//Contract for check Issuers\ncontract Issuable is Ownable\n{\n    mapping (address => bool) internal issuers;\n    \n    event IssuerAdd(address who);\n    event IssuerRemoved(address who);\n    \n    function addIssuer(address who) onlyOwner public\n    {\n        require(who != owner); // do not allow add owner to issuers list\n        require(!issuers[who]);\n        issuers[who] = true;\n        emit IssuerAdd(who);\n    }\n    \n    function removeIssuer(address who) onlyOwner public\n    {\n        require(issuers[who]);\n        issuers[who] = false;\n        emit IssuerRemoved(who);\n    }\n    \n    modifier onlyIssuer()\n    {\n        require(issuers[msg.sender]);\n        _;\n    }\n    \n    function IsIssuer(address who) public view onlyOwner returns(bool)\n    {\n        return issuers[who];\n    }\n}\n\n//Contract for check time limits of ICO\ncontract TimeLimit\n{\n    uint256 public ICOStart;// = 1521198000; //UnixTime gmt\n    uint256 public ICOEnd;// = 1521208800; //UnixTime gmt\n    uint256 public TransferStart;// = 1521212400; //UnixTime gmt\n    \n    bool internal ICOEnable;\n    bool internal TransferEnable;\n    \n    event ICOStarted();\n    event ICOEnded();\n    event TrasferEnabled();\n    \n    modifier onlyInIssueTime()\n    {\n        require(IsIssueTime());\n        //require(now > ICOStart);\n        //require(now <= TransferStart); //We need time to issue last transactions in other money\n        if (!ICOEnable && now <= ICOEnd)\n        {\n            emit ICOStarted();\n            ICOEnable = true;\n        }\n        if (ICOEnable && now > ICOEnd)\n        {\n            emit ICOEnded();\n            ICOEnable = false;\n        }\n        _;\n    }\n    \n    modifier transferEnable()\n    {\n        require(now > TransferStart);\n        if (!TransferEnable)\n        {\n            emit TrasferEnabled();\n            TransferEnable = true;\n        }\n        _;\n    }\n    \n    modifier closeCheckICO()\n    {\n        if (now > TransferStart) \n        {\n            closeICO();\n            return;\n        }\n        _;\n    }\n    \n    function IsIssueTime() public view returns(bool)\n    {\n        return (now > ICOStart && now <= TransferStart);\n    }\n    \n    function IsIcoTime() public view returns(bool)\n    {\n        return (now > ICOStart && now <= ICOEnd);\n    }\n    \n    function IsTransferEnable() public view returns(bool)\n    {\n        return (now > TransferStart);\n    }\n    \n    function closeICO() internal;\n}\n\n//Main contract\ncontract OurContract is ERC20, Issuable, TimeLimit\n{\n    event Cause(address to, uint256 val, uint8 _type, string message);\n    \n    //Public token user functions\n    function transfer(\n        address to, uint256 value\n        ) transferEnable public returns (bool)\n    {\n        return _transfer(msg.sender, to, value);\n    }\n    \n    function transferFrom(\n        address from, address to, uint256 value\n        ) transferEnable public returns (bool) \n    {\n        require(value <= allowances[from][msg.sender]);\n        _transfer(from, to, value);\n        allowances[from][msg.sender] = allowances[from][msg.sender] - value;\n        return true;\n    }\n    \n    function approve(\n        address spender, uint256 value\n        ) public onlyNotOwner returns (bool)\n    {\n        allowances[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n    \n    //Public views\n    function totalSupply() public view returns (uint256) \n    {\n        return totalSupply_;\n    }\n    \n    function balanceOf(address owner_) public view returns (uint256 balance) \n    {\n        return balances[owner_];\n    }\n    \n    function allowance(\n        address owner_, address spender\n        ) public view returns (uint256) \n    {\n        return allowances[owner_][spender];\n    }\n    \n    //Public issuers function\n    function issue(\n        address to, uint256 value, uint8 _type, string message\n        ) onlyIssuer onlyInIssueTime closeCheckICO public\n    {\n        require(to != owner);\n        require(!issuers[to]);\n        _transfer(owner, to, value);\n        emit Cause(to, value, _type, message);\n    }\n    \n    //Public owner functions\n    //Constructor\n    constructor(\n        string _name, string _symbol\n        ) public \n        ERC20(_name, _symbol)\n    {\n        totalSupply_ = 300000000000000000000000000; //With 18 zeros at end //1 000 000 000 000000000000000000;\n        ICOStart = 1537747200; //UnixTime gmt\n        ICOEnd = 1564531200; //UnixTime gmt\n        TransferStart = 1565308800; //UnixTime gmt\n        balances[msg.sender] = totalSupply_;\n    }\n    \n    function endICO() onlyOwner closeCheckICO public returns(bool)\n    {\n        return (now > ICOEnd);\n    }\n    \n    //addIssuer from Issuable\n    //removeIssuer from Issuable\n    \n    //Internal variables\n    uint256 internal totalSupply_;\n    mapping (address => uint256) internal balances;\n    mapping (address => mapping (address => uint256)) internal allowances;\n    \n    //Internal functions\n    function _transfer(\n        address from, address to, uint256 value\n        ) onlyNotOwner internal returns (bool) \n    {\n        require(to != address(0));\n        require(value <= balances[from]);\n        require(value + balances[to] > balances[to]);\n\n        balances[from] = balances[from] - value;\n        balances[to] = balances[to] + value;\n        emit Transfer(from, to, value);\n        return true;\n    }\n    \n    function closeICO() internal\n    {\n        totalSupply_ -= balances[owner];\n        balances[owner] = 0;\n        owner = 0;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"addIssuer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsIssueTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"removeIssuer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endICO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsIcoTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsTransferEnable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TransferStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"IsIssuer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"_type\",\"type\":\"uint8\"},{\"name\":\"message\",\"type\":\"string\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_type\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Cause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ICOStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ICOEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TrasferEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"who\",\"type\":\"address\"}],\"name\":\"IssuerAdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"who\",\"type\":\"address\"}],\"name\":\"IssuerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50604051610e07380380610e078339810160405280516020808301519183018051909392909201918391839161004c91600091908501906100b9565b5080516100609060019060208401906100b9565b505060028054600160a060020a031916339081179091556af8277896582678ac0000006008819055635ba82900600455635d40da00600555635d4cb7806006556000918252600960205260409091205550610154915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100fa57805160ff1916838001178555610127565b82800160010185558215610127579182015b8281111561012757825182559160200191906001019061010c565b50610133929150610137565b5090565b61015191905b80821115610133576000815560010161013d565b90565b610ca4806101636000396000f3006080604052600436106101115763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610116578063095ea7b3146101a057806318160ddd146101d857806320694db0146101ff57806323b872dd146102225780632d471f6c1461024c578063313ce5671461026157806336e917f71461028c57806347bc7093146102a15780634f248409146102c257806358e72bf3146102d757806361572ab9146102ec57806370a082311461030157806395d89b4114610322578063998e5b9114610337578063a9059cbb1461034c578063a9cddfcf14610370578063a9ebee8d14610391578063d01ab31a14610400578063dd62ed3e14610415575b600080fd5b34801561012257600080fd5b5061012b61043c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016557818101518382015260200161014d565b50505050905090810190601f1680156101925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ac57600080fd5b506101c4600160a060020a03600435166024356104ca565b604080519115158252519081900360200190f35b3480156101e457600080fd5b506101ed61054c565b60408051918252519081900360200190f35b34801561020b57600080fd5b50610220600160a060020a0360043516610553565b005b34801561022e57600080fd5b506101c4600160a060020a0360043581169060243516604435610606565b34801561025857600080fd5b506101ed6106d2565b34801561026d57600080fd5b506102766106d8565b6040805160ff9092168252519081900360200190f35b34801561029857600080fd5b506101c46106dd565b3480156102ad57600080fd5b50610220600160a060020a03600435166106f7565b3480156102ce57600080fd5b506101c461078d565b3480156102e357600080fd5b506101c46107c7565b3480156102f857600080fd5b506101c46107df565b34801561030d57600080fd5b506101ed600160a060020a03600435166107e7565b34801561032e57600080fd5b5061012b610802565b34801561034357600080fd5b506101ed61085c565b34801561035857600080fd5b506101c4600160a060020a0360043516602435610862565b34801561037c57600080fd5b506101c4600160a060020a03600435166108cf565b34801561039d57600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261022094600160a060020a0381351694602480359560ff6044351695369560849493019181908401838280828437509497506109089650505050505050565b34801561040c57600080fd5b506101ed610b16565b34801561042157600080fd5b506101ed600160a060020a0360043581169060243516610b1c565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104c25780601f10610497576101008083540402835291602001916104c2565b820191906000526020600020905b8154815290600101906020018083116104a557829003601f168201915b505050505081565b600254600090600160a060020a03163314156104e557600080fd5b336000818152600a60209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6008545b90565b600254600160a060020a0316331461056a57600080fd5b600254600160a060020a038281169116141561058557600080fd5b600160a060020a03811660009081526003602052604090205460ff16156105ab57600080fd5b600160a060020a038116600081815260036020908152604091829020805460ff19166001179055815192835290517fd232c7e500645895f8f574e83c2ef9496e8f555efe74a2dc9c1e59dea303e7979281900390910190a150565b600654600090421161061757600080fd5b600754610100900460ff161515610661576040517f19241c4cb208e97ae52b26f1f36f62459f6c57f678c31f6f80512f77bc870a6990600090a16007805461ff0019166101001790555b600160a060020a0384166000908152600a6020908152604080832033845290915290205482111561069157600080fd5b61069c848484610b47565b5050600160a060020a03929092166000908152600a60209081526040808320338452909152902080549290920390915550600190565b60055481565b601281565b6000600454421180156106f257506006544211155b905090565b600254600160a060020a0316331461070e57600080fd5b600160a060020a03811660009081526003602052604090205460ff16151561073557600080fd5b600160a060020a038116600081815260036020908152604091829020805460ff19169055815192835290517faf66545c919a3be306ee446d8f42a9558b5b022620df880517bc9593ec0f2d529281900390910190a150565b600254600090600160a060020a031633146107a757600080fd5b6006544211156107be576107b9610c33565b610550565b50600554421190565b6000600454421180156106f257505060055442111590565b600654421190565b600160a060020a031660009081526009602052604090205490565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104c25780601f10610497576101008083540402835291602001916104c2565b60065481565b600654600090421161087357600080fd5b600754610100900460ff1615156108bd576040517f19241c4cb208e97ae52b26f1f36f62459f6c57f678c31f6f80512f77bc870a6990600090a16007805461ff0019166101001790555b6108c8338484610b47565b9392505050565b600254600090600160a060020a031633146108e957600080fd5b50600160a060020a031660009081526003602052604090205460ff1690565b3360009081526003602052604090205460ff16151561092657600080fd5b61092e6106dd565b151561093957600080fd5b60075460ff1615801561094e57506005544211155b1561098a576040517ffc618519ae40d98dcc0290aca36bb7869677a04294f2fef8e079935048be9f1b90600090a16007805460ff191660011790555b60075460ff16801561099d575060055442115b156109d6576040517f62d9c267e3294582be7ffc2c372b78d98e14b84950ace43674b44642ff3ca0ad90600090a16007805460ff191690555b6006544211156109ed576109e8610c33565b610b10565b600254600160a060020a0385811691161415610a0857600080fd5b600160a060020a03841660009081526003602052604090205460ff1615610a2e57600080fd5b600254610a4590600160a060020a03168585610b47565b507fc475b23179b30e1bc296750aea34641ac495e93141fa783e73594542055e0a65848484846040518085600160a060020a0316600160a060020a031681526020018481526020018360ff1660ff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ad2578181015183820152602001610aba565b50505050905090810190601f168015610aff5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15b50505050565b60045481565b600160a060020a039182166000908152600a6020908152604080832093909416825291909152205490565b600254600090600160a060020a0316331415610b6257600080fd5b600160a060020a0383161515610b7757600080fd5b600160a060020a038416600090815260096020526040902054821115610b9c57600080fd5b600160a060020a03831660009081526009602052604090205482810111610bc257600080fd5b600160a060020a03808516600081815260096020908152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35060019392505050565b60028054600160a060020a0316600090815260096020526040812080546008805491909103905555805473ffffffffffffffffffffffffffffffffffffffff191690555600a165627a7a72305820dfe40898a4c1b4e8c1db49cf5945b052ea5afc4c8b99e42c44cad7c0933ed2d6002900000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000c466f7274464320546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044646435400000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000c466f7274464320546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044646435400000000000000000000000000000000000000000000000000000000"
}