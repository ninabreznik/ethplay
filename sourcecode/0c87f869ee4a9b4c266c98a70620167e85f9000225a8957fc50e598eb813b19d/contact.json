{
  "address": "0x065313f29dc4a4b8b5fc4915059d122065519957",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Future1Exchange",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-01\n*/\n\npragma solidity ^0.4.24;\n\ncontract Token {\n\n    mapping (address => uint256) public balanceOf;\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n}\n\ncontract Future1Exchange\n {\n    /// Address of the owner (who can withdraw collected fees) \n    address public adminaddr; \n    \n    ///************ Mapping ***********///\n    \n    mapping (address => mapping(address => uint256)) public dep_token;\n    \n    mapping (address => uint256) public dep_ETH;\n\n    ///*********** Constructor *********///\n    constructor() public\n    {\n         adminaddr = msg.sender;                                                            \n    }\n    \n    \n    function safeAdd(uint crtbal, uint depbal) public pure returns (uint) \n    {\n        uint totalbal = crtbal + depbal;\n        return totalbal;\n    }\n    \n    function safeSub(uint crtbal, uint depbal) public pure returns (uint) \n    {\n        uint totalbal = crtbal - depbal;\n        return totalbal;\n    }\n    \n    /// @notice This function allows to view the balance of token in given user\n    /// @param token Token contract\n    /// @param user  owner address\n    function balanceOf(address token,address user) public view returns(uint256)            \n    {\n        return Token(token).balanceOf(user);\n    }\n\n    \n    /// @notice This function allows to transfer ERC20 tokens.\n    /// @param  token Token contract\n    /// @param  tokens value\n    function token_transfer(address token, uint256 tokens)public payable                          \n    {\n       // Token(token).approve.value(msg.sender)(address(this),tokens);\n        if(Token(token).approve(address(this),tokens))\n        {\n            dep_token[msg.sender][token] = safeAdd(dep_token[msg.sender][token], tokens);\n            Token(token).transferFrom(msg.sender,address(this), tokens);\n        }\n    }\n    \n    \n    /// @notice  This function allows the owner to withdraw ERC20 tokens.\n    /// @param  token Token contract\n    /// @param  to Receiver address\n    /// @param  tokens value\n    function admin_token_withdraw(address token, address to, uint256 tokens)public payable      \n    {\n        if(adminaddr==msg.sender)\n        {                                                                                                        \n            if(dep_token[msg.sender][token]>=tokens) \n            {\n                dep_token[msg.sender][token] = safeSub(dep_token[msg.sender][token] , tokens) ;   \n                Token(token).transfer(to, tokens);\n            }\n        }\n    }\n    \n    ///@notice This function allows to check the token balance in contract address\n    ///@param token Token contract\n    function contract_bal(address token) public view returns(uint256)                       \n    {\n        return Token(token).balanceOf(address(this));\n    }\n    \n    ///@notice This function allows to deposit ether in contract address\n    function depositETH() payable external                                                      \n    { \n        \n    }\n    \n    \n    ///@notice This function allows admin to withdraw ether\n    ///@param  to Receiver address\n    ///@param  value ethervalue\n    function admin_withdrawETH(address  to, uint256 value) public payable returns (bool)        \n    {\n        \n        if(adminaddr==msg.sender)\n        {                                                                                           \n                 to.transfer(value);\n                 return true;\n    \n         }\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dep_token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"admin_token_withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"token_transfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"crtbal\",\"type\":\"uint256\"},{\"name\":\"depbal\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminaddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dep_ETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"contract_bal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"admin_withdrawETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"crtbal\",\"type\":\"uint256\"},{\"name\":\"depbal\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]",
  "bytecode": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d27806100606000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633baed1d6146100b45780635ed15d911461012b57806369c1f0b51461018b578063a293d1e8146101cb578063ac3d84cd14610216578063b51502e31461026d578063cde34c0a146102c4578063cfc3f1301461031b578063e6cb901314610373578063f6326fb3146103be578063f7888aec146103c8575b600080fd5b3480156100c057600080fd5b50610115600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061043f565b6040518082815260200191505060405180910390f35b610189600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610464565b005b6101c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061072a565b005b3480156101d757600080fd5b506102006004803603810190808035906020019092919080359060200190929190505050610a2b565b6040518082815260200191505060405180910390f35b34801561022257600080fd5b5061022b610a3d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027957600080fd5b506102ae600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a62565b6040518082815260200191505060405180910390f35b3480156102d057600080fd5b50610305600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a7a565b6040518082815260200191505060405180910390f35b610359600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b59565b604051808215151515815260200191505060405180910390f35b34801561037f57600080fd5b506103a86004803603810190808035906020019092919080359060200190929190505050610c07565b6040518082815260200191505060405180910390f35b6103c6610c19565b005b3480156103d457600080fd5b50610429600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c1b565b6040518082815260200191505060405180910390f35b6001602052816000526040600020602052806000526040600020600091509150505481565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107255780600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610724576105c4600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482610a2b565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156106e757600080fd5b505af11580156106fb573d6000803e3d6000fd5b505050506040513d602081101561071157600080fd5b8101908080519060200190929190505050505b5b505050565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156107cd57600080fd5b505af11580156107e1573d6000803e3d6000fd5b505050506040513d60208110156107f757600080fd5b810190808051906020019092919050505015610a2757610893600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482610c07565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156109ea57600080fd5b505af11580156109fe573d6000803e3d6000fd5b505050506040513d6020811015610a1457600080fd5b8101908080519060200190929190505050505b5050565b60008082840390508091505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610b1757600080fd5b505af1158015610b2b573d6000803e3d6000fd5b505050506040513d6020811015610b4157600080fd5b81019080805190602001909291905050509050919050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c00578273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610bf6573d6000803e3d6000fd5b5060019050610c01565b5b92915050565b60008082840190508091505092915050565b565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610cb857600080fd5b505af1158015610ccc573d6000803e3d6000fd5b505050506040513d6020811015610ce257600080fd5b81019080805190602001909291905050509050929150505600a165627a7a72305820f24f40a8396954320ac5f44a3d08a120dcf4fa0c8b62512f8006f267b0472c880029"
}