{
  "address": "0x06c741e6df49d7fda1f27f75fffd238d87619ba1",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ArtistEditionControls",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-07\n*/\n\npragma solidity 0.4.24;\n\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/lifecycle/Pausable.sol\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() public onlyOwner whenNotPaused {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() public onlyOwner whenPaused {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (_a == 0) {\n      return 0;\n    }\n\n    c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = _a / _b;\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n    return _a / _b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    c = _a + _b;\n    assert(c >= _a);\n    return c;\n  }\n}\n\n// File: contracts/v2/tools/ArtistEditionControls.sol\n\n/**\n* Minimal interface definition for KODA V2 contract calls\n*\n* https://www.knownorigin.io/\n*/\ninterface IKODAV2Controls {\n  function mint(address _to, uint256 _editionNumber) external returns (uint256);\n\n  function editionActive(uint256 _editionNumber) external view returns (bool);\n\n  function artistCommission(uint256 _editionNumber) external view returns (address _artistAccount, uint256 _artistCommission);\n\n  function updatePriceInWei(uint256 _editionNumber, uint256 _priceInWei) external;\n}\n\n/**\n* @title Artists self minting for KnownOrigin (KODA)\n*\n* Allows for the edition artists to mint there own assets and control the price of an edition\n*\n* https://www.knownorigin.io/\n*\n* BE ORIGINAL. BUY ORIGINAL.\n*/\ncontract ArtistEditionControls is Ownable, Pausable {\n  using SafeMath for uint256;\n\n  // Interface into the KODA world\n  IKODAV2Controls public kodaAddress;\n\n  event PriceChanged(\n    uint256 indexed _editionNumber,\n    address indexed _artist,\n    uint256 _priceInWei\n  );\n\n  constructor(IKODAV2Controls _kodaAddress) public {\n    kodaAddress = _kodaAddress;\n  }\n\n  /**\n   * @dev Ability to gift new NFTs to an address, from a KODA edition\n   * @dev Only callable from edition artists defined in KODA NFT contract\n   * @dev Only callable when contract is not paused\n   * @dev Reverts if edition is invalid\n   * @dev Reverts if edition is not active in KDOA NFT contract\n   */\n  function gift(address _receivingAddress, uint256 _editionNumber)\n  external\n  whenNotPaused\n  returns (uint256)\n  {\n    require(_receivingAddress != address(0), \"Unable to send to zero address\");\n\n    address artistAccount;\n    uint256 artistCommission;\n    (artistAccount, artistCommission) = kodaAddress.artistCommission(_editionNumber);\n    require(msg.sender == artistAccount || msg.sender == owner, \"Only from the edition artist account\");\n\n    bool isActive = kodaAddress.editionActive(_editionNumber);\n    require(isActive, \"Only when edition is active\");\n\n    return kodaAddress.mint(_receivingAddress, _editionNumber);\n  }\n\n  /**\n   * @dev Sets the price of the provided edition in the WEI\n   * @dev Only callable from edition artists defined in KODA NFT contract\n   * @dev Only callable when contract is not paused\n   * @dev Reverts if edition is invalid\n   * @dev Reverts if edition is not active in KDOA NFT contract\n   */\n  function updateEditionPrice(uint256 _editionNumber, uint256 _priceInWei)\n  external\n  whenNotPaused\n  returns (bool)\n  {\n    address artistAccount;\n    uint256 artistCommission;\n    (artistAccount, artistCommission) = kodaAddress.artistCommission(_editionNumber);\n    require(msg.sender == artistAccount || msg.sender == owner, \"Only from the edition artist account\");\n\n    bool isActive = kodaAddress.editionActive(_editionNumber);\n    require(isActive, \"Only when edition is active\");\n\n    kodaAddress.updatePriceInWei(_editionNumber, _priceInWei);\n\n    emit PriceChanged(_editionNumber, msg.sender, _priceInWei);\n\n    return true;\n  }\n\n  /**\n   * @dev Sets the KODA address\n   * @dev Only callable from owner\n   */\n  function setKodavV2(IKODAV2Controls _kodaAddress) onlyOwner public {\n    kodaAddress = _kodaAddress;\n  }\n}",
  "bytecode": "60806040526000805460a060020a60ff021916905534801561002057600080fd5b50604051602080610b48833981016040525160008054600160a060020a0319908116331790915560018054600160a060020a0390931692909116919091179055610ad98061006f6000396000f3006080604052600436106100a35763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a81146100a85780635c975abb146100bf578063715018a6146100e85780638456cb59146100fd5780638da5cb5b146101125780639e0fd99814610143578063bbee17a31461015e578063cbce4c971461017f578063e0758c9d146101b5578063f2fde38b146101ca575b600080fd5b3480156100b457600080fd5b506100bd6101eb565b005b3480156100cb57600080fd5b506100d4610261565b604080519115158252519081900360200190f35b3480156100f457600080fd5b506100bd610271565b34801561010957600080fd5b506100bd6102dd565b34801561011e57600080fd5b50610127610358565b60408051600160a060020a039092168252519081900360200190f35b34801561014f57600080fd5b506100d4600435602435610367565b34801561016a57600080fd5b506100bd600160a060020a0360043516610671565b34801561018b57600080fd5b506101a3600160a060020a03600435166024356106b7565b60408051918252519081900360200190f35b3480156101c157600080fd5b506101276109fe565b3480156101d657600080fd5b506100bd600160a060020a0360043516610a0d565b600054600160a060020a0316331461020257600080fd5b60005460a060020a900460ff16151561021a57600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005460a060020a900460ff1681565b600054600160a060020a0316331461028857600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031633146102f457600080fd5b60005460a060020a900460ff161561030b57600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b6000805481908190819060a060020a900460ff161561038557600080fd5b600154604080517f32fd8478000000000000000000000000000000000000000000000000000000008152600481018990528151600160a060020a03909316926332fd8478926024808401939192918290030181600087803b1580156103e957600080fd5b505af11580156103fd573d6000803e3d6000fd5b505050506040513d604081101561041357600080fd5b508051602090910151909350915033600160a060020a03841614806104425750600054600160a060020a031633145b15156104bd576040805160e560020a62461bcd028152602060048201526024808201527f4f6e6c792066726f6d207468652065646974696f6e206172746973742061636360448201527f6f756e7400000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600154604080517fbbd1e1fc000000000000000000000000000000000000000000000000000000008152600481018990529051600160a060020a039092169163bbd1e1fc916024808201926020929091908290030181600087803b15801561052457600080fd5b505af1158015610538573d6000803e3d6000fd5b505050506040513d602081101561054e57600080fd5b505190508015156105a9576040805160e560020a62461bcd02815260206004820152601b60248201527f4f6e6c79207768656e2065646974696f6e206973206163746976650000000000604482015290519081900360640190fd5b600154604080517f7eb9f04a00000000000000000000000000000000000000000000000000000000815260048101899052602481018890529051600160a060020a0390921691637eb9f04a9160448082019260009290919082900301818387803b15801561061657600080fd5b505af115801561062a573d6000803e3d6000fd5b50506040805188815290513393508992507f7b9e70728348c5a660506950e5eeb19dee00e0a53e8ce602353738185a8cd3729181900360200190a350600195945050505050565b600054600160a060020a0316331461068857600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000805481908190819060a060020a900460ff16156106d557600080fd5b600160a060020a0386161515610735576040805160e560020a62461bcd02815260206004820152601e60248201527f556e61626c6520746f2073656e6420746f207a65726f20616464726573730000604482015290519081900360640190fd5b600154604080517f32fd8478000000000000000000000000000000000000000000000000000000008152600481018890528151600160a060020a03909316926332fd8478926024808401939192918290030181600087803b15801561079957600080fd5b505af11580156107ad573d6000803e3d6000fd5b505050506040513d60408110156107c357600080fd5b508051602090910151909350915033600160a060020a03841614806107f25750600054600160a060020a031633145b151561086d576040805160e560020a62461bcd028152602060048201526024808201527f4f6e6c792066726f6d207468652065646974696f6e206172746973742061636360448201527f6f756e7400000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600154604080517fbbd1e1fc000000000000000000000000000000000000000000000000000000008152600481018890529051600160a060020a039092169163bbd1e1fc916024808201926020929091908290030181600087803b1580156108d457600080fd5b505af11580156108e8573d6000803e3d6000fd5b505050506040513d60208110156108fe57600080fd5b50519050801515610959576040805160e560020a62461bcd02815260206004820152601b60248201527f4f6e6c79207768656e2065646974696f6e206973206163746976650000000000604482015290519081900360640190fd5b600154604080517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03898116600483015260248201899052915191909216916340c10f199160448083019260209291908290030181600087803b1580156109c857600080fd5b505af11580156109dc573d6000803e3d6000fd5b505050506040513d60208110156109f257600080fd5b50519695505050505050565b600154600160a060020a031681565b600054600160a060020a03163314610a2457600080fd5b610a2d81610a30565b50565b600160a060020a0381161515610a4557600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820879b3326aa4ecd5ff97053c8df6f55b0ea7bfa3b4bb3352ab9f50b432faeff520029000000000000000000000000fbeef911dc5821886e1dda71586d90ed28174b7d",
  "constructorArguments": "000000000000000000000000fbeef911dc5821886e1dda71586d90ed28174b7d"
}