{
  "address": "0xe4651010c1c2dbdb04987f45d94e0181f51d9c7d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "FanfareAirdrop3",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-06-04\n*/\n\npragma solidity ^0.4.11;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control \n * functions, this simplifies the implementation of \"user permissions\". \n */\ncontract Ownable {\n  address public owner;\n\n  /** \n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner. \n  */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n}\n\n\ncontract Token{\n  function transfer(address to, uint value) external returns (bool);\n}\n\ncontract FanfareAirdrop3 is Ownable {\n\n    function multisend (address _tokenAddr, address[] _to, uint256[] _value) external\n    \n    returns (bool _success) {\n        assert(_to.length == _value.length);\n        assert(_to.length <= 150);\n        // loop through to addresses and send value\n        for (uint8 i = 0; i < _to.length; i++) {\n                uint256 actualValue = _value[i] * 10**18;\n                require((Token(_tokenAddr).transfer(_to[i], actualValue)) == true);\n            }\n            return true;\n        }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"multisend\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
  "bytecode": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061031a806100536000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610051578063ad8733ca146100a8575b600080fd5b34801561005d57600080fd5b50610066610133565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100b457600080fd5b50610119600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001919091929391929390803590602001908201803590602001919091929391929390505050610158565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000848490508787905014151561016e57fe5b6096878790501115151561017e57fe5b600091505b868690508260ff1610156102df57670de0b6b3a764000085858460ff1681811015156101ab57fe5b90506020020135029050600115158873ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89898660ff1681811015156101e657fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561028957600080fd5b505af115801561029d573d6000803e3d6000fd5b505050506040513d60208110156102b357600080fd5b810190808051906020019092919050505015151415156102d257600080fd5b8180600101925050610183565b600192505050959450505050505600a165627a7a723058205a6bdbb5dc868a26cf0afebd3d98736ba9fdf675b10059e3f02821e47baf15890029"
}