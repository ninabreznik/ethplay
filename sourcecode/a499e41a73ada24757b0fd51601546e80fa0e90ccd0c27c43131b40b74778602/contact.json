{
  "address": "0xfeb8c1fdc796858ad93f5d59bfd3fbaa6732c2ce",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "KabutoCash",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-31\n*/\n\npragma solidity ^0.4.24;\n\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) internal balances;\n\n  uint256 internal totalSupply_;\n\n  /**\n  * @dev Total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_value <= balances[msg.sender]);\n    require(_to != address(0));\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n}\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    returns (bool)\n  {\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n    require(_to != address(0));\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(\n    address _spender,\n    uint256 _addedValue\n  )\n    public\n    returns (bool)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(\n    address _spender,\n    uint256 _subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    uint256 oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue >= oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\ncontract MintableToken is StandardToken, Ownable {\n  event Mint(address indexed to, uint256 amount);\n  event MintFinished();\n\n  bool public mintingFinished = false;\n\n\n  modifier canMint() {\n    require(!mintingFinished);\n    _;\n  }\n\n  modifier hasMintPermission() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(\n    address _to,\n    uint256 _amount\n  )\n    hasMintPermission\n    canMint\n    public\n    returns (bool)\n  {\n    totalSupply_ = totalSupply_.add(_amount);\n    balances[_to] = balances[_to].add(_amount);\n    emit Mint(_to, _amount);\n    emit Transfer(address(0), _to, _amount);\n    return true;\n  }\n\n  /**\n   * @dev Function to stop minting new tokens.\n   * @return True if the operation was successful.\n   */\n  function finishMinting() onlyOwner canMint public returns (bool) {\n    mintingFinished = true;\n    emit MintFinished();\n    return true;\n  }\n}\n\ncontract FundsLocker {\n\n    uint public lockTimeout;\n    uint public totalTokenBalance;\n    uint public latestTokenBalance;\n    address public beneficiary;\n\n    uint public vestingPeriod;\n\n    MintableToken public token;\n\n    constructor(address _beneficiary, uint256 _lockPeriod, uint _vestingPeriod,  MintableToken _token) public {\n        require(_beneficiary!=address(0));\n\n        //TODO check parameters\n        beneficiary = _beneficiary;\n        lockTimeout = now + _lockPeriod;\n        vestingPeriod = _vestingPeriod;\n        token = _token;\n    }\n\n    function () public {\n        uint256 currentBalance = token.balanceOf(this);\n        uint256 additionalTokens = currentBalance - latestTokenBalance;\n\n        //all new tokens are under same rules as transfereed on the begining\n        totalTokenBalance = totalTokenBalance+additionalTokens;\n        uint withdrawAmount = calculateSumToWithdraw();\n        \n        token.transfer(beneficiary, withdrawAmount);\n        latestTokenBalance = token.balanceOf(this);\n\n    }\n\n    function calculateSumToWithdraw() public view returns (uint) {\n        uint256 currentBalance = token.balanceOf(this);\n\n        if(now<=lockTimeout) \n            return 0;\n\n        if(now>lockTimeout+vestingPeriod)\n            return currentBalance;\n        \n        uint256 minRequiredBalance = totalTokenBalance-totalTokenBalance*(now-lockTimeout)/vestingPeriod;\n\n        if(minRequiredBalance > currentBalance)\n            return 0;\n        else \n            return  currentBalance-minRequiredBalance;\n    }\n\n}\n\ncontract KabutoCash  is MintableToken {\n    \tstring public constant name = \"Kabuto Cash\";\n\tstring public constant symbol = \"KC\";\n\tuint256 public constant DECIMALS = 15;\n\tuint256 public constant decimals = 15;\n\taddress public constant dev = address(0x59a5ac4033db403587e8beab8996ede2f170413a);\n\taddress public constant own = address(0x7704C758db402bB7B1c2BbadA8af43B6B758B794);\n\taddress public vestingContract ;\n\t\n\tbool public initialized = false;\n\tbool public devPayed = false;\n\t\n\tfunction initialize() public{\n\t    vestingContract = address(new FundsLocker(own,1 years,9 years,MintableToken(this)));\n\t    require(initialized==false);\n\t    owner = this;\n\t    this.mint(own,7000000*10**decimals);\n\t    this.mint(vestingContract,63000000*10**decimals);\n\t}\n\t\n\tfunction () public{\n\t    require(devPayed==false);\n\t    require(msg.sender==dev);\n\t    devPayed = true;\n\t    this.mint(dev,1000 ether);\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vestingContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"own\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"devPayed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "6080604052600380546004805460a060020a61ffff0219169055600160a860020a03191633179055611578806100366000396000f30060806040526004361061013d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461027457806306fdde031461029d578063095ea7b314610327578063158ef93e1461034b57806318160ddd1461036057806323b872dd146103875780632e0f2625146103b1578063313ce567146103b157806340c10f19146103c65780635e6f6045146103ea578063661884631461041b57806370a082311461043f578063715018a6146104605780637d64bcb4146104775780638129fc1c1461048c5780638da5cb5b146104a157806391cca3db146104b657806395d89b41146104cb57806399cdee0e146104e0578063a03189b3146104f5578063a9059cbb1461050a578063d73dd6231461052e578063dd62ed3e14610552578063f2fde38b14610579575b34801561014957600080fd5b506004547501000000000000000000000000000000000000000000900460ff161561017357600080fd5b337359a5ac4033db403587e8beab8996ede2f170413a1461019357600080fd5b6004805475ff00000000000000000000000000000000000000000019167501000000000000000000000000000000000000000000178155604080517f40c10f190000000000000000000000000000000000000000000000000000000081527359a5ac4033db403587e8beab8996ede2f170413a92810192909252683635c9adc5dea0000060248301525130916340c10f199160448083019260209291908290030181600087803b15801561024657600080fd5b505af115801561025a573d6000803e3d6000fd5b505050506040513d602081101561027057600080fd5b5050005b34801561028057600080fd5b5061028961059a565b604080519115158252519081900360200190f35b3480156102a957600080fd5b506102b26105aa565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102ec5781810151838201526020016102d4565b50505050905090810190601f1680156103195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561033357600080fd5b50610289600160a060020a03600435166024356105e1565b34801561035757600080fd5b50610289610647565b34801561036c57600080fd5b50610375610657565b60408051918252519081900360200190f35b34801561039357600080fd5b50610289600160a060020a036004358116906024351660443561065d565b3480156103bd57600080fd5b506103756107d2565b3480156103d257600080fd5b50610289600160a060020a03600435166024356107d7565b3480156103f657600080fd5b506103ff6108e1565b60408051600160a060020a039092168252519081900360200190f35b34801561042757600080fd5b50610289600160a060020a03600435166024356108f0565b34801561044b57600080fd5b50610375600160a060020a03600435166109df565b34801561046c57600080fd5b506104756109fa565b005b34801561048357600080fd5b50610289610a68565b34801561049857600080fd5b50610475610aec565b3480156104ad57600080fd5b506103ff610d0c565b3480156104c257600080fd5b506103ff610d1b565b3480156104d757600080fd5b506102b2610d33565b3480156104ec57600080fd5b506103ff610d6a565b34801561050157600080fd5b50610289610d82565b34801561051657600080fd5b50610289600160a060020a0360043516602435610da4565b34801561053a57600080fd5b50610289600160a060020a0360043516602435610e83565b34801561055e57600080fd5b50610375600160a060020a0360043581169060243516610f1c565b34801561058557600080fd5b50610475600160a060020a0360043516610f47565b60035460a060020a900460ff1681565b60408051808201909152600b81527f4b616275746f2043617368000000000000000000000000000000000000000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60045460a060020a900460ff1681565b60015490565b600160a060020a03831660009081526020819052604081205482111561068257600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156106b257600080fd5b600160a060020a03831615156106c757600080fd5b600160a060020a0384166000908152602081905260409020546106f0908363ffffffff610f6a16565b600160a060020a038086166000908152602081905260408082209390935590851681522054610725908363ffffffff610f7c16565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610767908363ffffffff610f6a16565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b600f81565b600354600090600160a060020a031633146107f157600080fd5b60035460a060020a900460ff161561080857600080fd5b60015461081b908363ffffffff610f7c16565b600155600160a060020a038316600090815260208190526040902054610847908363ffffffff610f7c16565b600160a060020a03841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b600454600160a060020a031681565b336000908152600260209081526040808320600160a060020a038616845290915281205480831061094457336000908152600260209081526040808320600160a060020a0388168452909152812055610979565b610954818463ffffffff610f6a16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a03163314610a1157600080fd5b600354604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26003805473ffffffffffffffffffffffffffffffffffffffff19169055565b600354600090600160a060020a03163314610a8257600080fd5b60035460a060020a900460ff1615610a9957600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b737704c758db402bb7b1c2bbada8af43b6b758b7946301e133806310eacf8030610b1461100d565b600160a060020a03948516815260208101939093526040808401929092529092166060820152905190819003608001906000f080158015610b59573d6000803e3d6000fd5b506004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179081905560a060020a900460ff1615610b9d57600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff191630908117909155604080517f40c10f19000000000000000000000000000000000000000000000000000000008152737704c758db402bb7b1c2bbada8af43b6b758b794600482015269017b7883c06916600000602482015290516340c10f19916044808201926020929091908290030181600087803b158015610c3a57600080fd5b505af1158015610c4e573d6000803e3d6000fd5b505050506040513d6020811015610c6457600080fd5b505060048054604080517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a0390921692820192909252690d573ca1c3b1c96000006024820152905130916340c10f199160448083019260209291908290030181600087803b158015610cde57600080fd5b505af1158015610cf2573d6000803e3d6000fd5b505050506040513d6020811015610d0857600080fd5b5050565b600354600160a060020a031681565b7359a5ac4033db403587e8beab8996ede2f170413a81565b60408051808201909152600281527f4b43000000000000000000000000000000000000000000000000000000000000602082015281565b737704c758db402bb7b1c2bbada8af43b6b758b79481565b6004547501000000000000000000000000000000000000000000900460ff1681565b33600090815260208190526040812054821115610dc057600080fd5b600160a060020a0383161515610dd557600080fd5b33600090815260208190526040902054610df5908363ffffffff610f6a16565b3360009081526020819052604080822092909255600160a060020a03851681522054610e27908363ffffffff610f7c16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610eb7908363ffffffff610f7c16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a03163314610f5e57600080fd5b610f6781610f8f565b50565b600082821115610f7657fe5b50900390565b81810182811015610f8957fe5b92915050565b600160a060020a0381161515610fa457600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60405161052f8061101e833901905600608060405234801561001057600080fd5b5060405160808061052f8339810160409081528151602083015191830151606090930151909290600160a060020a038416151561004c57600080fd5b60038054600160a060020a03958616600160a060020a031991821617909155429093016000556004919091556005805491909316911617905561049b806100946000396000f3006080604052600436106100825763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166338af3eed811461027d5780633d4b2c2c146102ae5780635a6cd237146102d55780637313ee5a146102ea5780638711e4a9146102ff578063ea0d102714610314578063fc0c546a14610329575b34801561008e57600080fd5b50600554604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905160009283928392600160a060020a03909216916370a082319160248082019260209290919082900301818787803b1580156100fb57600080fd5b505af115801561010f573d6000803e3d6000fd5b505050506040513d602081101561012557600080fd5b5051600254600180549183039182019055909350915061014361033e565b600554600354604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03928316600482015260248101859052905193945091169163a9059cbb916044808201926020929091908290030181600087803b1580156101b757600080fd5b505af11580156101cb573d6000803e3d6000fd5b505050506040513d60208110156101e157600080fd5b5050600554604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a03909216916370a08231916024808201926020929091908290030181600087803b15801561024957600080fd5b505af115801561025d573d6000803e3d6000fd5b505050506040513d602081101561027357600080fd5b5051600255505050005b34801561028957600080fd5b50610292610439565b60408051600160a060020a039092168252519081900360200190f35b3480156102ba57600080fd5b506102c3610448565b60408051918252519081900360200190f35b3480156102e157600080fd5b506102c361044e565b3480156102f657600080fd5b506102c3610454565b34801561030b57600080fd5b506102c361045a565b34801561032057600080fd5b506102c361033e565b34801561033557600080fd5b50610292610460565b600554604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905160009283928392600160a060020a03909216916370a082319160248082019260209290919082900301818787803b1580156103aa57600080fd5b505af11580156103be573d6000803e3d6000fd5b505050506040513d60208110156103d457600080fd5b505160005490925042116103eb5760009250610434565b6004546000540142111561040157819250610434565b60045460005442036001540281151561041657fe5b046001540390508181111561042e5760009250610434565b80820392505b505090565b600354600160a060020a031681565b60015481565b60025481565b60045481565b60005481565b600554600160a060020a0316815600a165627a7a723058201875a4a4d349d20bfedf38d4ba10a34bb78324de9cb56cc48cc97c5c0869e0010029a165627a7a7230582091961d0f82ca5ec6d4a1d092d21ac70f6aec4f2973630bee49125640a2c8890a0029"
}