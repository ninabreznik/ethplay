{
  "address": "0x4aacacb0994e04f3c6d8311496aa2ad20e57c178",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "HiEXCoin",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-31\n*/\n\npragma solidity ^0.4.25;\n\n/**\n * Math operations with safety checks\n */\nlibrary Safe {\n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b > 0);\n    uint256 c = a / b;\n    assert(a == b * c + a % b);\n    return c;\n  }\n\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c>=a && c>=b);\n    return c;\n  }\n\n\n}\ncontract HiEXCoin{\n    uint public totalSupply = 500004322.443245*10**18;  //Total amount of distribution\n    uint8 constant public decimals = 18;\n    string constant public name = \"HiEXCoin\";\n    string constant public symbol = \"HC\";\n    \n\taddress public owner;\n\n\n    mapping (address => uint256) public balanceOf;\n\tmapping (address => uint256) public freezeOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Burn(address indexed from, uint256 value);\n    event Freeze(address indexed from, uint256 value);\n    event Unfreeze(address indexed from, uint256 value);\n\n    /* Initializes contract with initial supply tokens to the creator of the contract */\n    constructor() public{\n        balanceOf[msg.sender] = totalSupply;\n\t\towner = msg.sender;\n    }\n\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    function transfer(address _to, uint256 _value) public {\n        require(_to != 0x0);\n\t\trequire(_value > 0);\n        require(balanceOf[msg.sender] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        balanceOf[msg.sender] = Safe.safeSub(balanceOf[msg.sender], _value);\n        balanceOf[_to] = Safe.safeAdd(balanceOf[_to], _value);\n        emit Transfer(msg.sender, _to, _value);\n    }\n\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _value The amount of wei to be approved for transfer\n    /// @return Is it successfully approved\n    function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n\t\trequire(_value > 0);\n        allowance[msg.sender][_spender] = _value;\n        return true;\n    }\n       \n\n    /// @param _from The address of the sender\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != 0x0);\n        require(_value > 0);\n        require(balanceOf[_from] > _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        require(_value <= allowance[_from][msg.sender]);\n        balanceOf[_from] = Safe.safeSub(balanceOf[_from], _value);\n        balanceOf[_to] = Safe.safeAdd(balanceOf[_to], _value);\n        allowance[_from][msg.sender] = Safe.safeSub(allowance[_from][msg.sender], _value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /// @param _value The amount of token to be burned\n    /// @return Is it successfully burned\n    function burn(uint256 _value) public returns (bool) {\n        require(balanceOf[msg.sender] >= _value);\n        require(_value > 0);\n        balanceOf[msg.sender] = Safe.safeSub(balanceOf[msg.sender], _value);\n        totalSupply = Safe.safeSub(totalSupply,_value);\n        emit Burn(msg.sender, _value);\n        return true;\n    }\n    \n    /// @param _value The amount of token to be freeze\n    /// @return Is it successfully froze\n\tfunction freeze(uint256 _value) public returns (bool) {\n        require(balanceOf[msg.sender] >= _value);\n\t\trequire(_value > 0);\n        balanceOf[msg.sender] = Safe.safeSub(balanceOf[msg.sender], _value);\n        freezeOf[msg.sender] = Safe.safeAdd(freezeOf[msg.sender], _value);\n        emit Freeze(msg.sender, _value);\n        return true;\n    }\n\t\n    /// @param _value The amount of token to be unfreeze\n    /// @return Is it successfully unfroze\n\tfunction unfreeze(uint256 _value) public returns (bool) {\n        require(freezeOf[msg.sender] >= _value);\n        require(_value > 0);\n        freezeOf[msg.sender] = Safe.safeSub(freezeOf[msg.sender], _value);\n\t\tbalanceOf[msg.sender] = Safe.safeAdd(balanceOf[msg.sender], _value);\n        emit Unfreeze(msg.sender, _value);\n        return true;\n    }\n\t\n    function() payable public {\n        revert();\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"}]",
  "bytecode": "60806040526b019d9808a1db7e291fbfd00060005534801561002057600080fd5b506000805433808352600260205260409092205560018054600160a060020a031916909117905561094a806100566000396000f3006080604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d4578063095ea7b31461015e57806318160ddd1461019657806323b872dd146101bd578063313ce567146101e757806342966c68146102125780636623fc461461022a57806370a08231146102425780638da5cb5b1461026357806395d89b4114610294578063a9059cbb146102a9578063cd4217c1146102cf578063d7a78db8146102f0578063dd62ed3e14610308575b600080fd5b3480156100e057600080fd5b506100e961032f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012357818101518382015260200161010b565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016a57600080fd5b50610182600160a060020a0360043516602435610366565b604080519115158252519081900360200190f35b3480156101a257600080fd5b506101ab6103a2565b60408051918252519081900360200190f35b3480156101c957600080fd5b50610182600160a060020a03600435811690602435166044356103a8565b3480156101f357600080fd5b506101fc610542565b6040805160ff9092168252519081900360200190f35b34801561021e57600080fd5b50610182600435610547565b34801561023657600080fd5b506101826004356105e9565b34801561024e57600080fd5b506101ab600160a060020a03600435166106a3565b34801561026f57600080fd5b506102786106b5565b60408051600160a060020a039092168252519081900360200190f35b3480156102a057600080fd5b506100e96106c4565b3480156102b557600080fd5b506102cd600160a060020a03600435166024356106fb565b005b3480156102db57600080fd5b506101ab600160a060020a03600435166107ff565b3480156102fc57600080fd5b50610182600435610811565b34801561031457600080fd5b506101ab600160a060020a03600435811690602435166108cb565b60408051808201909152600881527f48694558436f696e000000000000000000000000000000000000000000000000602082015281565b600080821161037457600080fd5b50336000908152600460209081526040808320600160a060020a039590951683529390529190912055600190565b60005481565b6000600160a060020a03831615156103bf57600080fd5b600082116103cc57600080fd5b600160a060020a03841660009081526002602052604090205482106103f057600080fd5b600160a060020a038316600090815260026020526040902054828101101561041757600080fd5b600160a060020a038416600090815260046020908152604080832033845290915290205482111561044757600080fd5b600160a060020a03841660009081526002602052604090205461046a90836108e8565b600160a060020a03808616600090815260026020526040808220939093559085168152205461049990836108fa565b600160a060020a0380851660009081526002602090815260408083209490945591871681526004825282812033825290915220546104d790836108e8565b600160a060020a03808616600081815260046020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b601281565b3360009081526002602052604081205482111561056357600080fd5b6000821161057057600080fd5b3360009081526002602052604090205461058a90836108e8565b33600090815260026020526040812091909155546105a890836108e8565b60005560408051838152905133917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2506001919050565b3360009081526003602052604081205482111561060557600080fd5b6000821161061257600080fd5b3360009081526003602052604090205461062c90836108e8565b3360009081526003602090815260408083209390935560029052205461065290836108fa565b33600081815260026020908152604091829020939093558051858152905191927f2cfce4af01bcb9d6cf6c84ee1b7c491100b8695368264146a94d71e10a63083f92918290030190a2506001919050565b60026020526000908152604090205481565b600154600160a060020a031681565b60408051808201909152600281527f4843000000000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a038216151561071057600080fd5b6000811161071d57600080fd5b3360009081526002602052604090205481111561073957600080fd5b600160a060020a038216600090815260026020526040902054818101101561076057600080fd5b3360009081526002602052604090205461077a90826108e8565b3360009081526002602052604080822092909255600160a060020a038416815220546107a690826108fa565b600160a060020a0383166000818152600260209081526040918290209390935580518481529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60036020526000908152604090205481565b3360009081526002602052604081205482111561082d57600080fd5b6000821161083a57600080fd5b3360009081526002602052604090205461085490836108e8565b3360009081526002602090815260408083209390935560039052205461087a90836108fa565b33600081815260036020908152604091829020939093558051858152905191927ff97a274face0b5517365ad396b1fdba6f68bd3135ef603e44272adba3af5a1e092918290030190a2506001919050565b600460209081526000928352604080842090915290825290205481565b6000828211156108f457fe5b50900390565b600082820183811080159061090f5750828110155b151561091757fe5b93925050505600a165627a7a72305820655a02c470e6e84c1314c0c3d421c703cdb2bcab0971a61b3aeba3f8065c86720029"
}