{
  "address": "0x4485561db76614ff727f8e0a3ea95690b8b16022",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "InvoxFinanceToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-11\n*/\n\npragma solidity 0.4.24;\n\ninterface ERC20 {\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    function transfer(address _to, uint256 _value) external returns (bool);\n    function approve(address _spender, uint256 _value) external returns (bool);\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address _who) external view returns (uint256);\n    function allowance(address _owner, address _spender) external view returns (uint256);\n}\n\n/**\n * @title ERC223Basic additions to ERC20Basic\n * @dev see also: https://github.com/ethereum/EIPs/issues/223               \n *\n*/\ncontract ERC223 is ERC20 {\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value, bytes indexed _data);\n\n    function transfer(address _to, uint256 _value, bytes _data) public returns (bool success);\n    function contractFallback(address _to, uint _value, bytes _data) internal returns (bool success);\n    function isContract(address _addr) internal view returns (bool);\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address private owner_;\n    event OwnershipRenounced(address indexed previousOwner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n    * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n    * account.\n    */\n    constructor() public {\n        owner_ = msg.sender;\n    }\n\n    /**\n    * @return the address of the owner.\n    */\n    function owner() public view returns(address) {\n        return owner_;\n    }\n\n    /**\n    * @dev Throws if called by any account other than the owner.\n    */\n    modifier onlyOwner() {\n        require(msg.sender == owner_, \"Only the owner can call this function.\");\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to relinquish control of the contract.\n    * @notice Renouncing to ownership will leave the contract without an owner.\n    * It will not be possible to call the functions with the `onlyOwner`\n    * modifier anymore.\n    */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipRenounced(owner_);\n        owner_ = address(0);\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param _newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address _newOwner) public onlyOwner {\n        _transferOwnership(_newOwner);\n    }\n\n    /**\n    * @dev Transfers control of the contract to a newOwner.\n    * @param _newOwner The address to transfer ownership to.\n    */\n    function _transferOwnership(address _newOwner) internal {\n        require(_newOwner != address(0), \"Cannot transfer ownership to zero address.\");\n        emit OwnershipTransferred(owner_, _newOwner);\n        owner_ = _newOwner;\n    }\n}\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (_a == 0) {\n            return 0;\n        }\n\n        c = _a * _b;\n        assert(c / _a == _b);\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        // assert(_b > 0); // Solidity automatically throws when dividing by 0\n        // uint256 c = _a / _b;\n        // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n        return _a / _b;\n    }\n\n    /**\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        assert(_b <= _a);\n        return _a - _b;\n    }\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n        c = _a + _b;\n        assert(c >= _a);\n        return c;\n    }\n}\n\ncontract Generic223Receiver {\n    uint public sentValue;\n    address public tokenAddr;\n    address public tokenSender;\n    bool public calledFoo;\n\n    bytes public tokenData;\n    bytes4 public tokenSig;\n\n    Tkn private tkn;\n\n    bool private __isTokenFallback;\n\n    struct Tkn {\n        address addr;\n        address sender;\n        uint256 value;\n        bytes data;\n        bytes4 sig;\n    }\n\n    modifier tokenPayable {\n        assert(__isTokenFallback);\n        _;\n    }\n\n    function tokenFallback(address _sender, uint _value, bytes _data) public returns (bool success) {\n\n        tkn = Tkn(msg.sender, _sender, _value, _data, getSig(_data));\n        __isTokenFallback = true;\n        address(this).delegatecall(_data);\n        __isTokenFallback = false;\n        return true;\n    }\n\n    function foo() public tokenPayable {\n        saveTokenValues();\n        calledFoo = true;\n    }\n\n    function getSig(bytes _data) private pure returns (bytes4 sig) {\n        uint lngth = _data.length < 4 ? _data.length : 4;\n        for (uint i = 0; i < lngth; i++) {\n            sig = bytes4(uint(sig) + uint(_data[i]) * (2 ** (8 * (lngth - 1 - i))));\n        }\n    }\n\n    function saveTokenValues() private {\n        tokenAddr = tkn.addr;\n        tokenSender = tkn.sender;\n        sentValue = tkn.value;\n        tokenSig = tkn.sig;\n        tokenData = tkn.data;\n    }\n}\n\ncontract InvoxFinanceToken is ERC223, Ownable {\n\n    using SafeMath for uint256;\n\n    string private name_ = \"Invox Finance Token\";\n    string private symbol_ = \"INVOX\";\n    uint256 private decimals_ = 18;\n    uint256 public totalSupply = 464000000 * (10 ** decimals_);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    \n    mapping (address => uint256) internal balances_;\n    mapping (address => mapping (address => uint256)) private allowed_;\n\n    constructor() public {\n        balances_[msg.sender] = balances_[msg.sender].add(totalSupply);\n        emit Transfer(address(0), msg.sender, totalSupply);\n    }\n\n    function() public payable { revert(\"Cannot send ETH to this address.\"); }\n    \n    function name() public view returns(string) {\n        return name_;\n    }\n\n    function symbol() public view returns(string) {\n        return symbol_;\n    }\n\n    function decimals() public view returns(uint256) {\n        return decimals_;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return totalSupply;\n    }\n\n    function safeTransfer(address _to, uint256 _value) public {\n        require(transfer(_to, _value), \"Transfer failed.\");\n    }\n\n    function safeTransferFrom(address _from, address _to, uint256 _value) public {\n        require(transferFrom(_from, _to, _value), \"Transfer failed.\");\n    }\n\n    function safeApprove( address _spender, uint256 _currentValue, uint256 _value ) public {\n        require(allowed_[msg.sender][_spender] == _currentValue, \"Current allowance value does not match.\");\n        approve(_spender, _value);\n    }\n\n    // ERC20\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances_[_owner];\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return allowed_[_owner][_spender];\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_value <= balances_[msg.sender], \"Value exceeds balance of msg.sender.\");\n        require(_to != address(0), \"Cannot send tokens to zero address.\");\n\n        balances_[msg.sender] = balances_[msg.sender].sub(_value);\n        balances_[_to] = balances_[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed_[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_value <= balances_[_from], \"Value exceeds balance of msg.sender.\");\n        require(_value <= allowed_[_from][msg.sender], \"Value exceeds allowance of msg.sender for this owner.\");\n        require(_to != address(0), \"Cannot send tokens to zero address.\");\n\n        balances_[_from] = balances_[_from].sub(_value);\n        balances_[_to] = balances_[_to].add(_value);\n        allowed_[_from][msg.sender] = allowed_[_from][msg.sender].sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function increaseApproval(address _spender, uint256 _addedValue) public returns (bool) {\n        allowed_[msg.sender][_spender] = allowed_[msg.sender][_spender].add(_addedValue);\n        emit Approval(msg.sender, _spender, allowed_[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval(address _spender, uint256 _subtractedValue) public returns (bool) {\n        uint256 oldValue = allowed_[msg.sender][_spender];\n        if (_subtractedValue >= oldValue) {\n            allowed_[msg.sender][_spender] = 0;\n        } else {\n            allowed_[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowed_[msg.sender][_spender]);\n        return true;\n    }\n\n    // ERC223\n    function transfer(address _to, uint _value, bytes _data) public returns (bool success) {\n        require(_to != address(0), \"Cannot transfer token to zero address.\");\n        require(_value <= balanceOf(msg.sender), \"Value exceeds balance of msg.sender.\");\n        \n        transfer(_to, _value);\n\n        if (isContract(_to)) {\n            return contractFallback(_to, _value, _data);\n        }\n        return true;\n    }\n\n    function contractFallback(address _to, uint _value, bytes _data) internal returns (bool success) {\n        Generic223Receiver receiver = Generic223Receiver(_to);\n        return receiver.tokenFallback(msg.sender, _value, _data);\n    }\n\n    // Assemble the given address bytecode. If bytecode exists then the _addr is a contract.\n    function isContract(address _addr) internal view returns (bool) {\n        // retrieve the size of the code on target address, this needs assembly\n        uint length;\n        assembly { length := extcodesize(_addr) }\n        return length > 0;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_currentValue\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"safeApprove\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": ""
}