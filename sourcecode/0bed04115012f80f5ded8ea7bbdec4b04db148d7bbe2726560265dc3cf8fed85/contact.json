{
  "address": "0xf7b098298f7c69fc14610bf71d5e02c60792894c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Matchpool Token",
  "contractName": "GUPToken",
  "compilerVersion": "v0.4.9+commit.364da425",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-04-01\n*/\n\npragma solidity ^0.4.8;\n\n\ncontract SafeMath {\n\n  function assert(bool assertion) internal {\n    if (!assertion) throw;\n  }\n\n  function safeMul(uint a, uint b) internal returns (uint) {\n    uint c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function safeDiv(uint a, uint b) internal returns (uint) {\n    assert(b > 0);\n    uint c = a / b;\n    assert(a == b * c + a % b);\n    return c;\n  }\n\n}\n\n\ncontract StandardTokenProtocol {\n\n    function totalSupply() constant returns (uint256 totalSupply) {}\n    function balanceOf(address _owner) constant returns (uint256 balance) {}\n    function transfer(address _recipient, uint256 _value) returns (bool success) {}\n    function transferFrom(address _from, address _recipient, uint256 _value) returns (bool success) {}\n    function approve(address _spender, uint256 _value) returns (bool success) {}\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\n\n    event Transfer(address indexed _from, address indexed _recipient, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n}\n\n\ncontract StandardToken is StandardTokenProtocol {\n\n    modifier when_can_transfer(address _from, uint256 _value) {\n        if (balances[_from] >= _value) _;\n    }\n\n    modifier when_can_receive(address _recipient, uint256 _value) {\n        if (balances[_recipient] + _value > balances[_recipient]) _;\n    }\n\n    modifier when_is_allowed(address _from, address _delegate, uint256 _value) {\n        if (allowed[_from][_delegate] >= _value) _;\n    }\n\n    function transfer(address _recipient, uint256 _value)\n        when_can_transfer(msg.sender, _value)\n        when_can_receive(_recipient, _value)\n        returns (bool o_success)\n    {\n        balances[msg.sender] -= _value;\n        balances[_recipient] += _value;\n        Transfer(msg.sender, _recipient, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _recipient, uint256 _value)\n        when_can_transfer(_from, _value)\n        when_can_receive(_recipient, _value)\n        when_is_allowed(_from, msg.sender, _value)\n        returns (bool o_success)\n    {\n        allowed[_from][msg.sender] -= _value;\n        balances[_from] -= _value;\n        balances[_recipient] += _value;\n        Transfer(_from, _recipient, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) returns (bool o_success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 o_remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n    uint256 public totalSupply;\n\n}\n\ncontract GUPToken is StandardToken {\n\n\t//FIELDS\n\tstring public name = \"Guppy\";\n    string public symbol = \"GUP\";\n    uint public decimals = 3;\n\n\t//CONSTANTS\n\tuint public constant LOCKOUT_PERIOD = 1 years; //time after end date that illiquid GUP can be transferred\n\n\t//ASSIGNED IN INITIALIZATION\n\tuint public endMintingTime; //Timestamp after which no more tokens can be created\n\taddress public minter; //address of the account which may mint new tokens\n\n\tmapping (address => uint) public illiquidBalance; //Balance of 'Frozen funds'\n\n\t//MODIFIERS\n\t//Can only be called by contribution contract.\n\tmodifier only_minter {\n\t\tif (msg.sender != minter) throw;\n\t\t_;\n\t}\n\n\t// Can only be called if illiquid tokens may be transformed into liquid.\n\t// This happens when `LOCKOUT_PERIOD` of time passes after `endMintingTime`.\n\tmodifier when_thawable {\n\t\tif (now < endMintingTime + LOCKOUT_PERIOD) throw;\n\t\t_;\n\t}\n\n\t// Can only be called if (liquid) tokens may be transferred. Happens\n\t// immediately after `endMintingTime`.\n\tmodifier when_transferable {\n\t\tif (now < endMintingTime) throw;\n\t\t_;\n\t}\n\n\t// Can only be called if the `crowdfunder` is allowed to mint tokens. Any\n\t// time before `endMintingTime`.\n\tmodifier when_mintable {\n\t\tif (now >= endMintingTime) throw;\n\t\t_;\n\t}\n\n\t// Initialization contract assigns address of crowdfund contract and end time.\n\tfunction GUPToken(address _minter, uint _endMintingTime) {\n\t\tendMintingTime = _endMintingTime;\n\t\tminter = _minter;\n\t}\n\n\t// Create new tokens when called by the crowdfund contract.\n\t// Only callable before the end time.\n\tfunction createToken(address _recipient, uint _value)\n\t\twhen_mintable\n\t\tonly_minter\n\t\treturns (bool o_success)\n\t{\n\t\tbalances[_recipient] += _value;\n\t\ttotalSupply += _value;\n\t\treturn true;\n\t}\n\n\t// Create an illiquidBalance which cannot be traded until end of lockout period.\n\t// Can only be called by crowdfund contract before the end time.\n\tfunction createIlliquidToken(address _recipient, uint _value)\n\t\twhen_mintable\n\t\tonly_minter\n\t\treturns (bool o_success)\n\t{\n\t\tilliquidBalance[_recipient] += _value;\n\t\ttotalSupply += _value;\n\t\treturn true;\n\t}\n\n\t// Make sender's illiquid balance liquid when called after lockout period.\n\tfunction makeLiquid()\n\t\twhen_thawable\n\t{\n\t\tbalances[msg.sender] += illiquidBalance[msg.sender];\n\t\tilliquidBalance[msg.sender] = 0;\n\t}\n\n\t// Transfer amount of tokens from sender account to recipient.\n\t// Only callable after the crowd fund end date.\n\tfunction transfer(address _recipient, uint _amount)\n\t\twhen_transferable\n\t\treturns (bool o_success)\n\t{\n\t\treturn super.transfer(_recipient, _amount);\n\t}\n\n\t// Transfer amount of tokens from a specified address to a recipient.\n\t// Only callable after the crowd fund end date.\n\tfunction transferFrom(address _from, address _recipient, uint _amount)\n\t\twhen_transferable\n\t\treturns (bool o_success)\n\t{\n\t\treturn super.transferFrom(_from, _recipient, _amount);\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createIlliquidToken\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endMintingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createToken\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"illiquidBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LOCKOUT_PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"o_remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"makeLiquid\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_minter\",\"type\":\"address\"},{\"name\":\"_endMintingTime\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "6060604052604060405190810160405280600581526020017f4775707079000000000000000000000000000000000000000000000000000000815250600390805190602001906200005292919062000128565b50604060405190810160405280600381526020017f475550000000000000000000000000000000000000000000000000000000000081525060049080519060200190620000a192919062000128565b5060036005553415620000b057fe5b6040516040806200131d833981016040528080519060200190919080519060200190919050505b8060068190555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050620001d7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200016b57805160ff19168380011785556200019c565b828001600101855582156200019c579182015b828111156200019b5782518255916020019190600101906200017e565b5b509050620001ab9190620001af565b5090565b620001d491905b80821115620001d0576000816000905550600101620001b6565b5090565b90565b61113680620001e76000396000f300606060405236156100e4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100e6578063075461721461017f578063095ea7b3146101d157806318160ddd14610228578063215cb8df1461024e57806323b872dd146102a5578063284cb9161461031b578063313ce567146103415780636a10d4d61461036757806370a08231146103be57806378d3633b1461040857806395d89b4114610452578063a9059cbb146104eb578063d754f0ac14610542578063dd62ed3e14610568578063e1419546146105d1575bfe5b34156100ee57fe5b6100f66105e3565b6040518080602001828103825283818151815260200191508051906020019080838360008314610145575b80518252602083111561014557602082019150602081019050602083039250610121565b505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018757fe5b61018f610681565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101d957fe5b61020e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106a7565b604051808215151515815260200191505060405180910390f35b341561023057fe5b61023861079a565b6040518082815260200191505060405180910390f35b341561025657fe5b61028b600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506107a0565b604051808215151515815260200191505060405180910390f35b34156102ad57fe5b610301600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610878565b604051808215151515815260200191505060405180910390f35b341561032357fe5b61032b61089f565b6040518082815260200191505060405180910390f35b341561034957fe5b6103516108a5565b6040518082815260200191505060405180910390f35b341561036f57fe5b6103a4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506108ab565b604051808215151515815260200191505060405180910390f35b34156103c657fe5b6103f2600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610983565b6040518082815260200191505060405180910390f35b341561041057fe5b61043c600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109cd565b6040518082815260200191505060405180910390f35b341561045a57fe5b6104626109e5565b60405180806020018281038252838181518152602001915080519060200190808383600083146104b1575b8051825260208311156104b15760208201915060208101905060208303925061048d565b505050905090810190601f1680156104dd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156104f357fe5b610528600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610a83565b604051808215151515815260200191505060405180910390f35b341561054a57fe5b610552610aa8565b6040518082815260200191505060405180910390f35b341561057057fe5b6105bb600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ab0565b6040518082815260200191505060405180910390f35b34156105d957fe5b6105e1610b38565b005b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106795780601f1061064e57610100808354040283529160200191610679565b820191906000526020600020905b81548152906001019060200180831161065c57829003601f168201915b505050505081565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3600190505b92915050565b60025481565b6000600654421015156107b257610000565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561080e57610000565b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600260008282540192505081905550600190505b5b5b92915050565b600060065442101561088957610000565b610894848484610c22565b90505b5b9392505050565b60065481565b60055481565b6000600654421015156108bd57610000565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561091957610000565b81600060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600260008282540192505081905550600190505b5b5b92915050565b6000600060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b60086020528060005260406000206000915090505481565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7b5780601f10610a5057610100808354040283529160200191610a7b565b820191906000526020600020905b815481529060010190602001808311610a5e57829003601f168201915b505050505081565b6000600654421015610a9457610000565b610a9e8383610f22565b90505b5b92915050565b6301e1338081565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b6301e1338060065401421015610b4d57610000565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b565b6000838280600060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610f18578484600060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115610f145787338780600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610f0f5788600160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555088600060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555088600060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8b6040518082815260200191505060405180910390a3600197505b5b5b5050505b5b50505b5b50509392505050565b6000338280600060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515611101578484600060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540111156110fd5785600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555085600060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040518082815260200191505060405180910390a3600194505b5b5b50505b5b5050929150505600a165627a7a723058203dcde1c9f44afbc617c4f4a26a4a97b14f242608e5850358b7d05f9b6081a7790029000000000000000000000000e05cedd2838e4e1d99b539d8c768d6ef2a10f729000000000000000000000000000000000000000000000000000000005905dfd0",
  "constructorArguments": "000000000000000000000000e05cedd2838e4e1d99b539d8c768d6ef2a10f729000000000000000000000000000000000000000000000000000000005905DFD0"
}