{
  "address": "0x147b51d82a6038607895e11c4191431335b257e3",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "EPRX",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-02-23\n*/\n\npragma solidity ^0.4.18;\n\n/*\n    2018 Proxycard\n*/\n\n// Abstract contract for the full ERC 20 Token standard\n// https://github.com/ethereum/EIPs/issues/20\n\ninterface ERC20Token {\n\t/// @param _owner The address from which the balance will be retrieved\n\t/// @return The balance\n\tfunction balanceOf(address _owner) public view returns (uint256);\n\n\t/// @notice send `_value` token to `_to` from `msg.sender`\n\t/// @param _to The address of the recipient\n\t/// @param _value The amount of token to be transferred\n\t/// @return Whether the transfer was successful or not\n\tfunction transfer(address _to, uint256 _value) public returns (bool);\n\n\t/// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n\t/// @param _from The address of the sender\n\t/// @param _to The address of the recipient\n\t/// @param _value The amount of token to be transferred\n\t/// @return Whether the transfer was successful or not\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool);\n\n\t/// @notice `msg.sender` approves `_spender` to spend `_value` tokens\n\t/// @param _spender The address of the account able to transfer the tokens\n\t/// @param _value The amount of tokens to be approved for transfer\n\t/// @return Whether the approval was successful or not\n\tfunction approve(address _spender, uint256 _value) public returns (bool);\n\n\t/// @param _owner The address of the account owning tokens\n\t/// @param _spender The address of the account able to transfer the tokens\n\t/// @return Amount of remaining tokens allowed to spent\n\tfunction allowance(address _owner, address _spender) public view returns (uint256);\n\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\ncontract Owned {\n    /// @notice The address of the owner is the only address that can call\n    ///  a function with this modifier\n    modifier onlyOwner { require(msg.sender == owner); _; }\n\n    address public owner;\n\n    function Owned() public { owner = msg.sender;}\n\n    /// @notice Changes the owner of the contract\n    /// @param _newOwner The new owner of the contract\n    function changeOwner(address _newOwner) onlyOwner public {\n        owner = _newOwner;\n    }\n}\n\nlibrary SafeMathMod {// Partial SafeMath Library\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        require((c = a - b) < a);\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        require((c = a + b) > a);\n    }\n}\n\ncontract EPRX is Owned, ERC20Token  {\n    using SafeMathMod for uint256;\n\n    /**\n    * @constant name The name of the token\n    * @constant symbol  The symbol used to display the currency\n    * @constant decimals  The number of decimals used to display a balance\n    * @constant totalSupply The total number of tokens times 10^ of the number of decimals\n    * @constant MAX_UINT256 Magic number for unlimited allowance\n    * @storage balanceOf Holds the balances of all token holders\n    * @storage allowed Holds the allowable balance to be transferable by another address.\n    */\n\n    string constant public name = \"eProxy\";\n\n    string constant public symbol = \"ePRX\";\n\n    uint8 constant public decimals = 8;\n\n    uint256 constant public totalSupply = 50000000e8;\n\t\n\taddress public issuingTokenOwner;\n\n    mapping (address => uint256) public balanceOf;\n\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\n    mapping (address => mapping (address => uint256)) public allowed;\n\n    // Flag that determines if the token is transferable or not.\n    bool public transfersEnabled;\n\n\t////////////////\n\t// Events\n\t////////////////\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event TransferFrom(address indexed _spender, address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\t\n    event ClaimedTokens(address indexed _token, address indexed _Owner, uint256 _amount);\n    event SwappedTokens(address indexed _owner, uint256 _amountOffered, uint256 _amountReceived);\n \n \t////////////////\n\t// Constructor\n\t////////////////   \n    function EPRX() public { \n\t\tissuingTokenOwner = msg.sender;\n        balanceOf[issuingTokenOwner] = totalSupply; \n        transfersEnabled = true;\n    }\n\n\t///////////////////\n\t// ERC20 Methods\n\t///////////////////\n\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return Whether the transfer was successful or not\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\n        if (msg.sender != owner) {\n            require(transfersEnabled);\n        }\n        return doTransfer(msg.sender, _to, _amount);\n    }\n\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\n    ///  is approved by `_from`\n    /// @param _from The address holding the tokens being transferred\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return True if the transfer was successful\n    function transferFrom(address _from, address _to, uint256 _amount\n    ) public returns (bool success) {\n\n        // The owner of this contract can move tokens around at will,\n        //  this is important to recognize! Confirm that you trust the\n        //  owner of this contract\n        if (msg.sender != owner) {\n            require(transfersEnabled);\n\n            // The standard ERC20 transferFrom functionality\n            // require(allowed[_from][msg.sender] >= _amount);\n\t\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n        }\n\n        return doTransfer(_from, _to, _amount);\n    }\n\n    /// @dev This is the actual transfer function in the token contract, it can\n    ///  only be called by other functions in this contract.\n    /// @param _from The address holding the tokens being transferred\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return True if the transfer was successful\n    function doTransfer(address _from, address _to, uint _amount\n    ) internal returns(bool) {\n\t\n\t\tif(_amount == 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Do not allow transfer to 0x0 or the token contract itself\n\t\trequire((_to != 0) && (_to != address(this)));\n\n\t\t/* SafeMathMOd.sub will throw if there is not enough balance\n\t\t   and if the transfer value is 0. */\n\t\tbalanceOf[_from] = balanceOf[_from].sub(_amount);\n\t\tbalanceOf[_to] = balanceOf[_to].add(_amount);\n\n\t\t// An event to make the transfer easy to find on the blockchain\n\t\tTransfer(_from, _to, _amount);\n\n        return true;\n    }\n\n    /// @param _owner The address that's balance is being requested\n    /// @return The balance of `_owner` at the current block\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balanceOf[_owner];\n    }\n\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\n    ///  its behalf. This is a modified version of the ERC20 approve function\n    ///  to be a little bit safer\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _amount The amount of tokens to be approved for transfer\n    /// @return True if the approval was successful\n    function approve(address _spender, uint256 _amount) public returns (bool) {\n        require(transfersEnabled);\n\n        /* Ensures address \"0x0\" is not assigned allowance. */\n        require(_spender != address(0));\n\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\n\n        allowed[msg.sender][_spender] = _amount;\n        Approval(msg.sender, _spender, _amount);\n\t\t\n        return true;\n    }\n\n    /// @dev This function makes it easy to read the `allowed[]` map\n    /// @param _owner The address of the account that owns the token\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\n    ///  to spend\n    function allowance(address _owner, address _spender\n    ) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n\t////////////////\n\t// Enable tokens transfers\n\t////////////////\n\n    /// @notice Enables token holders to transfer their tokens freely if true\n    /// @param _transfersEnabled True if transfers are allowed in the clone\n    function enableTransfers(bool _transfersEnabled) onlyOwner public {\n        transfersEnabled = _transfersEnabled;\n    }\n\n\t//////////\n\t// Safety Methods\n\t//////////\n\n    /// @notice This method can be used by the owner to extract mistakenly\n    ///  sent tokens to this contract.\n    /// @param _token The address of the token contract that you want to recover\n    ///  set to 0 in case you want to extract ether.\n    function claimTokens(address _token) onlyOwner public {\n        // Transfer ether\n        if (_token == 0x0) {\n            owner.transfer(this.balance);\n            return;\n        }\n\n        ERC20Token token = ERC20Token(_token);\n        uint balance = token.balanceOf(this);\n        token.transfer(owner, balance);\n        ClaimedTokens(_token, owner, balance);\n    }\n\n    /// @notice This method can be used by users holding old proxy tokens\n    ///  to swap for new tokens at the ratio of 1 : 2.\n    function swapProxyTokens() public {\n        ERC20Token oldToken = ERC20Token(0x81BE91c7E74Ad0957B4156F782263e7B0B88cF7b);\n        uint256 oldTokenBalance = oldToken.balanceOf(msg.sender);\n\n        require(oldTokenBalance > 0);\n\n        // User must first approve address(this) as a spender by calling the below\n        // approve(<address of this contract>, oldTokenBalance);\n\t\t\n        // Convert old proxy token to new token for any user authorizing the transfer\n        if(oldToken.transferFrom(msg.sender, issuingTokenOwner, oldTokenBalance)) {\n            require(oldToken.balanceOf(msg.sender) == 0);\n\t\t\t\n            // Transfer new token to user\n\t\t\tuint256 newTokenAmount = 200 * oldTokenBalance;\n            doTransfer(issuingTokenOwner, msg.sender, newTokenAmount);\n\n            SwappedTokens(msg.sender, oldTokenBalance, newTokenAmount);\n        }\n        \n    }\n\n}",
  "bytecode": "6060604052341561000f57600080fd5b60008054600160a060020a03338116600160a060020a0319928316811784556001805490931617808355168252600260205260409091206611c37937e0800090556004805460ff19169091179055610b8a8061006c6000396000f3006060604052600436106100d75763ffffffff60e060020a60003504166306fdde0381146100dc578063095ea7b31461016657806318160ddd1461019c5780631fb59f9d146101c157806323b872dd146101d6578063313ce567146101fe5780635c6581651461022757806370a082311461024c5780638da5cb5b1461026b57806395d89b411461029a578063a6f9dae1146102ad578063a9059cbb146102cc578063adbd9753146102ee578063bef97c8714610301578063dd62ed3e14610314578063df8de3e714610339578063f41e60c514610358575b600080fd5b34156100e757600080fd5b6100ef610370565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012b578082015183820152602001610113565b50505050905090810190601f1680156101585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017157600080fd5b610188600160a060020a03600435166024356103a7565b604051901515815260200160405180910390f35b34156101a757600080fd5b6101af610475565b60405190815260200160405180910390f35b34156101cc57600080fd5b6101d4610480565b005b34156101e157600080fd5b610188600160a060020a0360043581169060243516604435610683565b341561020957600080fd5b61021161071f565b60405160ff909116815260200160405180910390f35b341561023257600080fd5b6101af600160a060020a0360043581169060243516610724565b341561025757600080fd5b6101af600160a060020a0360043516610741565b341561027657600080fd5b61027e61075c565b604051600160a060020a03909116815260200160405180910390f35b34156102a557600080fd5b6100ef61076b565b34156102b857600080fd5b6101d4600160a060020a03600435166107a2565b34156102d757600080fd5b610188600160a060020a03600435166024356107ec565b34156102f957600080fd5b61027e61081f565b341561030c57600080fd5b61018861082e565b341561031f57600080fd5b6101af600160a060020a0360043581169060243516610837565b341561034457600080fd5b6101d4600160a060020a0360043516610862565b341561036357600080fd5b6101d46004351515610a0d565b60408051908101604052600681527f6550726f78790000000000000000000000000000000000000000000000000000602082015281565b60045460009060ff1615156103bb57600080fd5b600160a060020a03831615156103d057600080fd5b8115806104005750600160a060020a03338116600090815260036020908152604080832093871683529290522054155b151561040b57600080fd5b600160a060020a03338116600081815260036020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b6611c37937e0800081565b7381be91c7e74ad0957b4156f782263e7b0b88cf7b600080826370a0823133836040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156104e557600080fd5b6102c65a03f115156104f657600080fd5b50505060405180519250506000821161050e57600080fd5b600154600160a060020a03808516916323b872dd913391168560006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561057f57600080fd5b6102c65a03f1151561059057600080fd5b505050604051805190501561067e5782600160a060020a03166370a082313360006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156105f657600080fd5b6102c65a03f1151561060757600080fd5b505050604051805115905061061b57600080fd5b5060015460c882029061063890600160a060020a03163383610a3b565b5033600160a060020a03167f616b829dfc1235ec41250d76ecd790bef347a77a56d1ada63f6c8a4d7d381c7a838360405191825260208201526040908101905180910390a25b505050565b6000805433600160a060020a0390811691161461070a5760045460ff1615156106ab57600080fd5b600160a060020a03808516600090815260036020908152604080832033909416835292905220546106e2908363ffffffff610b4016565b600160a060020a03808616600090815260036020908152604080832033909416835292905220555b610715848484610a3b565b90505b9392505050565b600881565b600360209081526000928352604080842090915290825290205481565b600160a060020a031660009081526002602052604090205490565b600054600160a060020a031681565b60408051908101604052600481527f6550525800000000000000000000000000000000000000000000000000000000602082015281565b60005433600160a060020a039081169116146107bd57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000805433600160a060020a039081169116146108145760045460ff16151561081457600080fd5b610718338484610a3b565b600154600160a060020a031681565b60045460ff1681565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b60008054819033600160a060020a0390811691161461088057600080fd5b600160a060020a03831615156108ce57600054600160a060020a039081169030163180156108fc0290604051600060405180830381858888f1935050505015156108c957600080fd5b61067e565b82915081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561092857600080fd5b6102c65a03f1151561093957600080fd5b505050604051805160008054919350600160a060020a03808616935063a9059cbb92169084906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156109a957600080fd5b6102c65a03f115156109ba57600080fd5b50505060405180515050600054600160a060020a039081169084167ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c8360405190815260200160405180910390a3505050565b60005433600160a060020a03908116911614610a2857600080fd5b6004805460ff1916911515919091179055565b6000811515610a4c57506001610718565b600160a060020a03831615801590610a76575030600160a060020a031683600160a060020a031614155b1515610a8157600080fd5b600160a060020a038416600090815260026020526040902054610aaa908363ffffffff610b4016565b600160a060020a038086166000908152600260205260408082209390935590851681522054610adf908363ffffffff610b4f16565b600160a060020a03808516600081815260026020526040908190209390935591908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b80820382811061046f57600080fd5b80820182811161046f57600080fd00a165627a7a72305820aff8ce37eee802fc1b9d975f3b15bac2bb54a9bd4e010c4993792f1080a5921b0029"
}