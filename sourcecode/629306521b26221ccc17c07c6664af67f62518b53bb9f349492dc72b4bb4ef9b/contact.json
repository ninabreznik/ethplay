{
  "address": "0x63d3c47b2e5e47bad8a021b625a2eaed7c999db3",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "AirDrop",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-11\n*/\n\npragma solidity 0.4.24;\n\n\ncontract ERC20 {\n\tfunction transfer(address _to, uint256 _value) public returns (bool success);\n\tfunction balanceOf(address _owner) public returns (uint256 balance);\n}\n\n\ncontract AirDrop {\n\n\taddress public owner;\n\n\tmodifier onlyOwner {\n\t\trequire(msg.sender == owner, 'Invoker must be msg.sender');\n\t\t_;\n\t}\n\n\tconstructor() public {\n\t\towner = msg.sender;\n\t}\n\n\t/**\n\t * @notice Transfers ownership to new owner address\n\t * @param _newOwner The address of the new owner\n\t */\n\tfunction transferOwnership(address _newOwner) public onlyOwner {\n\t\trequire(_newOwner != address(0), \"newOwner cannot be zero address\");\n\n\t\towner = _newOwner;\n\t}\n\n\t/**\n\t * @notice Generic withdraw function in the case of having leftover tokens to withdraw\n\t * @param _token The address of the ERC20 token to withdraw tokens from\n\t */\n\tfunction withdraw(address _token) public onlyOwner {\n\t\trequire(_token != address(0), \"Token address cannot be zero address\");\n\n\t\tuint256 balance = ERC20(_token).balanceOf(address(this));\n\n\t\trequire(balance > 0, \"Cannot withdraw from a balance of zero\");\n\n\t\tERC20(_token).transfer(owner, balance);\n\t}\n\n    /**\n     * @notice MultiTransfer function for airdrop\n     * @param _token ERC20 token address that will get airdrop (this contract must have sufficient tokens to execute this function)\n\t * @param _amount The amount of tokens to be transfered to each target\n     * @param _targets The target addresses that will receive the free tokens\n     */\n\tfunction airdrop(address _token, uint256 _amount, address[] memory _targets) public onlyOwner {\n\t\trequire(_targets.length > 0, 'Target addresses must not be 0');\n\t\trequire(_targets.length <= 64, 'Target array length is too big');\n\t\trequire\n        (\n\t\t\t_amount * _targets.length <= ERC20(_token).balanceOf(address(this)), \n\t\t\t'Airdrop contract does not have enough tokens to execute the airdrop'\n\t\t);\n\n\t\tfor (uint8 target = 0; target < _targets.length; target++) {\n\t\t\tERC20(_token).transfer(_targets[target], _amount);\n\t\t}\n\t}\n}",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610826806100326000396000f3006080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166351cff8d98114610066578063793f3f60146100895780638da5cb5b146100f0578063f2fde38b14610121575b600080fd5b34801561007257600080fd5b50610087600160a060020a0360043516610142565b005b34801561009557600080fd5b506040805160206004604435818101358381028086018501909652808552610087958335600160a060020a03169560248035963696956064959394920192918291850190849080828437509497506103d79650505050505050565b3480156100fc57600080fd5b506101056106fa565b60408051600160a060020a039092168252519081900360200190f35b34801561012d57600080fd5b50610087600160a060020a0360043516610709565b60008054600160a060020a031633146101a5576040805160e560020a62461bcd02815260206004820152601a60248201527f496e766f6b6572206d757374206265206d73672e73656e646572000000000000604482015290519081900360640190fd5b600160a060020a038216151561022a576040805160e560020a62461bcd028152602060048201526024808201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038416916370a082319160248083019260209291908290030181600087803b15801561028b57600080fd5b505af115801561029f573d6000803e3d6000fd5b505050506040513d60208110156102b557600080fd5b5051905060008111610337576040805160e560020a62461bcd02815260206004820152602660248201527f43616e6e6f742077697468647261772066726f6d20612062616c616e6365206f60448201527f66207a65726f0000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810185905290519185169263a9059cbb926044808401936020939083900390910190829087803b1580156103a757600080fd5b505af11580156103bb573d6000803e3d6000fd5b505050506040513d60208110156103d157600080fd5b50505050565b60008054600160a060020a0316331461043a576040805160e560020a62461bcd02815260206004820152601a60248201527f496e766f6b6572206d757374206265206d73672e73656e646572000000000000604482015290519081900360640190fd5b8151600010610493576040805160e560020a62461bcd02815260206004820152601e60248201527f54617267657420616464726573736573206d757374206e6f7420626520300000604482015290519081900360640190fd5b8151604010156104ed576040805160e560020a62461bcd02815260206004820152601e60248201527f546172676574206172726179206c656e67746820697320746f6f206269670000604482015290519081900360640190fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038616916370a082319160248083019260209291908290030181600087803b15801561054e57600080fd5b505af1158015610562573d6000803e3d6000fd5b505050506040513d602081101561057857600080fd5b5051825184021115610620576040805160e560020a62461bcd02815260206004820152604360248201527f41697264726f7020636f6e747261637420646f6573206e6f742068617665206560448201527f6e6f75676820746f6b656e7320746f206578656375746520746865206169726460648201527f726f700000000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b5060005b81518160ff1610156103d15783600160a060020a031663a9059cbb838360ff1681518110151561065057fe5b90602001906020020151856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156106c657600080fd5b505af11580156106da573d6000803e3d6000fd5b505050506040513d60208110156106f057600080fd5b5050600101610624565b600054600160a060020a031681565b600054600160a060020a0316331461076b576040805160e560020a62461bcd02815260206004820152601a60248201527f496e766f6b6572206d757374206265206d73672e73656e646572000000000000604482015290519081900360640190fd5b600160a060020a03811615156107cb576040805160e560020a62461bcd02815260206004820152601f60248201527f6e65774f776e65722063616e6e6f74206265207a65726f206164647265737300604482015290519081900360640190fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820a07b0a4d2be1b743a7a07719d6f21759be530a5e3b776a4472ba67d5d27564000029"
}