{
  "address": "0x23ab81fd565d49259675eb87209d6899bf2e814d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "NomToken",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-04-27\n*/\n\npragma solidity ^0.4.21;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n\t/**\n\t* @dev Multiplies two numbers, throws on overflow.\n\t*/\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n\t\tif (a == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tc = a * b;\n\t\tassert(c / a == b);\n\t\treturn c;\n\t}\n\n\t/**\n\t* @dev Integer division of two numbers, truncating the quotient.\n\t*/\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\t// assert(b > 0); // Solidity automatically throws when dividing by 0\n\t\t// uint256 c = a / b;\n\t\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\t\treturn a / b;\n\t}\n\n\t/**\n\t* @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n\t*/\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tassert(b <= a);\n\t\treturn a - b;\n\t}\n\n\t/**\n\t* @dev Adds two numbers, throws on overflow.\n\t*/\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n\t\tc = a + b;\n\t\tassert(c >= a);\n\t\treturn c;\n\t}\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n\tfunction totalSupply() public view returns (uint256);\n\tfunction balanceOf(address who) public view returns (uint256);\n\tfunction transfer(address to, uint256 value) public returns (bool);\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n\tusing SafeMath for uint256;\n\n\tmapping(address => uint256) balances;\n\n\tuint256 totalSupply_;\n\n\t/**\n\t* @dev total number of tokens in existence\n\t*/\n\tfunction totalSupply() public view returns (uint256) {\n\t\treturn totalSupply_;\n\t}\n\n\t/**\n\t* @dev transfer token for a specified address\n\t* @param _to The address to transfer to.\n\t* @param _value The amount to be transferred.\n\t*/\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {\n\t\trequire(_to != address(0));\n\t\trequire(_value <= balances[msg.sender]);\n\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\n\t\tbalances[_to] = balances[_to].add(_value);\n\t\temit Transfer(msg.sender, _to, _value);\n\t\treturn true;\n\t}\n\n\t/**\n\t* @dev Gets the balance of the specified address.\n\t* @param _owner The address to query the the balance of.\n\t* @return An uint256 representing the amount owned by the passed address.\n\t*/\n\tfunction balanceOf(address _owner) public view returns (uint256) {\n\t\treturn balances[_owner];\n\t}\n\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n\tfunction allowance(address owner, address spender) public view returns (uint256);\n\tfunction transferFrom(address from, address to, uint256 value) public returns (bool);\n\tfunction approve(address spender, uint256 value) public returns (bool);\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n\tmapping (address => mapping (address => uint256)) internal allowed;\n\n\n\t/**\n\t * @dev Transfer tokens from one address to another\n\t * @param _from address The address which you want to send tokens from\n\t * @param _to address The address which you want to transfer to\n\t * @param _value uint256 the amount of tokens to be transferred\n\t */\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n\t\trequire(_to != address(0));\n\t\trequire(_value <= balances[_from]);\n\t\trequire(_value <= allowed[_from][msg.sender]);\n\n\t\tbalances[_from] = balances[_from].sub(_value);\n\t\tbalances[_to] = balances[_to].add(_value);\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\t\temit Transfer(_from, _to, _value);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n\t *\n\t * Beware that changing an allowance with this method brings the risk that someone may use both the old\n\t * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n\t * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\t * @param _spender The address which will spend the funds.\n\t * @param _value The amount of tokens to be spent.\n\t */\n\tfunction approve(address _spender, uint256 _value) public returns (bool) {\n\t\tallowed[msg.sender][_spender] = _value;\n\t\temit Approval(msg.sender, _spender, _value);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Function to check the amount of tokens that an owner allowed to a spender.\n\t * @param _owner address The address which owns the funds.\n\t * @param _spender address The address which will spend the funds.\n\t * @return A uint256 specifying the amount of tokens still available for the spender.\n\t */\n\tfunction allowance(address _owner, address _spender) public view returns (uint256) {\n\t\treturn allowed[_owner][_spender];\n\t}\n\n\t/**\n\t * @dev Increase the amount of tokens that an owner allowed to a spender.\n\t *\n\t * approve should be called when allowed[_spender] == 0. To increment\n\t * allowed value is better to use this function to avoid 2 calls (and wait until\n\t * the first transaction is mined)\n\t * From MonolithDAO Token.sol\n\t * @param _spender The address which will spend the funds.\n\t * @param _addedValue The amount of tokens to increase the allowance by.\n\t */\n\tfunction increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Decrease the amount of tokens that an owner allowed to a spender.\n\t *\n\t * approve should be called when allowed[_spender] == 0. To decrement\n\t * allowed value is better to use this function to avoid 2 calls (and wait until\n\t * the first transaction is mined)\n\t * From MonolithDAO Token.sol\n\t * @param _spender The address which will spend the funds.\n\t * @param _subtractedValue The amount of tokens to decrease the allowance by.\n\t */\n\tfunction decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n\t\tuint oldValue = allowed[msg.sender][_spender];\n\t\tif (_subtractedValue > oldValue) {\n\t\t\tallowed[msg.sender][_spender] = 0;\n\t\t} else {\n\t\t\tallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n\t\t}\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\t\treturn true;\n\t}\n\n}\n\ncontract NomToken is StandardToken {\n\tevent Mint(address indexed to, uint256 amount);\n\n\taddress public owner;\n\t\n\tstring public constant name = \"NOM Token\"; \n\tstring public constant symbol = \"NOM\";\n\tuint8 public constant decimals = 18;\t\n\t\n\tuint256 public constant totalTokens = 5650000000 * (10 ** uint256(decimals));\n\t\n\tuint256 public initialIssueMinting = totalTokens.mul(60).div(100);\t//60% of tokens\n\tuint public constant initialIssueMintingDate = 1524873600;\t\t\t//28.04.2018 UTC\n\tbool public initialIssueMinted = false;\n\t\t\n\tuint256 public firstStageMinting = totalTokens.mul(10).div(100);\t//10% of tokens\n\tuint public constant firstStageMintingDate = 1532736000;\t\t\t//28.07.2018 UTC\n\tbool public firstStageMinted = false;\n\t\t\n\tuint256 public secondStageMinting = totalTokens.mul(10).div(100);\t//10% of tokens\n\tuint public constant secondStageMintingDate = 1540684800;\t\t\t//28.10.2018 UTC\n\tbool public secondStageMinted = false;\n\t\n\tuint256 public thirdStageMinting = totalTokens.mul(10).div(100);\t//10% of tokens\n\tuint public constant thirdStageMintingDate = 1548633600;\t\t\t//28.01.2019 UTC\n\tbool public thirdStageMinted = false;\n\t\n\tuint256 public fourthStageMinting = totalTokens.mul(10).div(100);\t//10% of tokens\n\tuint public constant fourthStageMintingDate = 1556409600;\t\t\t//28.04.2019 UTC\n\tbool public fourthStageMinted = false;\n\t\t\n\tfunction NomToken() public {\n\t\towner = msg.sender;\n\t}\n\t\n\t /**\n\t * @dev Function to mint tokens\n\t * @return A boolean that indicates if the operation was successful.\n\t */\n\tfunction mint() public returns (bool) {\n\t\trequire(msg.sender == owner);\n\t\t\n\t\tuint256 tokensToMint = 0;\n\t\tif (now > initialIssueMintingDate && !initialIssueMinted) {\n\t\t\t\ttokensToMint = tokensToMint.add(initialIssueMinting);\n\t\t\t\tinitialIssueMinted = true;\n\t\t}\n\t\tif (now > firstStageMintingDate && !firstStageMinted) {\n\t\t\t\ttokensToMint = tokensToMint.add(firstStageMinting);\n\t\t\t\tfirstStageMinted = true;\n\t\t}\n\t\tif (now > secondStageMintingDate && !secondStageMinted) {\n\t\t\t\ttokensToMint = tokensToMint.add(secondStageMinting);\n\t\t\t\tsecondStageMinted = true;\n\t\t}\n\t\tif (now > thirdStageMintingDate && !thirdStageMinted) {\n\t\t\t\ttokensToMint = tokensToMint.add(thirdStageMinting);\n\t\t\t\tthirdStageMinted = true;\n\t\t}\n\t\tif (now > fourthStageMintingDate && !fourthStageMinted) {\n\t\t\t\ttokensToMint = tokensToMint.add(fourthStageMinting);\n\t\t\t\tfourthStageMinted = true;\n\t\t}\n\t\trequire(tokensToMint > 0);\n\t\tuint256 newTotalSupply = totalSupply_.add(tokensToMint);\n\t\trequire(newTotalSupply <= totalTokens);\n\t\t\n\t\ttotalSupply_ = totalSupply_.add(tokensToMint);\n\t\tbalances[owner] = balances[owner].add(tokensToMint);\n\t\temit Mint(owner, tokensToMint);\n\t\temit Transfer(0x0, owner, tokensToMint);\n\t\treturn true;\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"thirdStageMintingDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstStageMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstStageMintingDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"thirdStageMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fourthStageMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialIssueMintingDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstStageMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialIssueMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondStageMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fourthStageMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialIssueMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondStageMintingDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fourthStageMintingDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"thirdStageMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondStageMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "6060604052620000466064620000316b12419209ba26d48b52000000603c64010000000062000d6c6200016c82021704565b9064010000000062000d956200019f82021704565b6004556005805460ff19169055620000806064620000316b12419209ba26d48b52000000600a64010000000062000d6c6200016c82021704565b6006556007805460ff19169055620000ba6064620000316b12419209ba26d48b52000000600a64010000000062000d6c6200016c82021704565b6008556009805460ff19169055620000f46064620000316b12419209ba26d48b52000000600a64010000000062000d6c6200016c82021704565b600a908155600b805460ff19169055620001329060649062000031906b12419209ba26d48b520000009064010000000062000d6c6200016c82021704565b600c55600d805460ff1916905534156200014b57600080fd5b60038054600160a060020a03191633600160a060020a0316179055620001b5565b60008215156200017f5750600062000199565b508181028183828115156200019057fe5b04146200019957fe5b92915050565b60008183811515620001ad57fe5b049392505050565b610dd680620001c56000396000f3006060604052600436106101745763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610179578063095ea7b3146102035780631107fa00146102395780631249c58b1461025e57806318160ddd146102715780631862caec1461028457806323b872dd14610297578063313ce567146102bf5780634804e06f146102e85780634e07a7a5146102fb5780635ed4382f1461030e578063661884631461032157806370a082311461034357806375f9e6da146103625780637e1c0c0914610375578063842c17be146103885780638da5cb5b1461039b57806390f3b693146103ca57806395d89b41146103dd578063a0aaa87f146103f0578063a9059cbb14610403578063af3996c314610425578063b727b19414610438578063c51226b31461044b578063c978ee591461045e578063ceae7f6414610471578063d73dd62314610484578063dd62ed3e146104a6578063f3bd27a4146104cb575b600080fd5b341561018457600080fd5b61018c6104de565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101c85780820151838201526020016101b0565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561020e57600080fd5b610225600160a060020a0360043516602435610515565b604051901515815260200160405180910390f35b341561024457600080fd5b61024c610582565b60405190815260200160405180910390f35b341561026957600080fd5b61022561058a565b341561027c57600080fd5b61024c61080b565b341561028f57600080fd5b61024c610811565b34156102a257600080fd5b610225600160a060020a0360043581169060243516604435610817565b34156102ca57600080fd5b6102d2610997565b60405160ff909116815260200160405180910390f35b34156102f357600080fd5b61024c61099c565b341561030657600080fd5b6102256109a4565b341561031957600080fd5b61024c6109ad565b341561032c57600080fd5b610225600160a060020a03600435166024356109b3565b341561034e57600080fd5b61024c600160a060020a0360043516610aad565b341561036d57600080fd5b61024c610ac8565b341561038057600080fd5b61024c610ad0565b341561039357600080fd5b610225610ae0565b34156103a657600080fd5b6103ae610ae9565b604051600160a060020a03909116815260200160405180910390f35b34156103d557600080fd5b610225610af8565b34156103e857600080fd5b61018c610b01565b34156103fb57600080fd5b610225610b38565b341561040e57600080fd5b610225600160a060020a0360043516602435610b41565b341561043057600080fd5b610225610c53565b341561044357600080fd5b61024c610c5c565b341561045657600080fd5b61024c610c62565b341561046957600080fd5b61024c610c6a565b341561047c57600080fd5b61024c610c72565b341561048f57600080fd5b610225600160a060020a0360043516602435610c78565b34156104b157600080fd5b61024c600160a060020a0360043581169060243516610d1c565b34156104d657600080fd5b61024c610d47565b60408051908101604052600981527f4e4f4d20546f6b656e0000000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b635c4e460081565b6003546000908190819033600160a060020a039081169116146105ac57600080fd5b60009150635ae3b980421180156105c6575060055460ff16155b156105ef576004546105df90839063ffffffff610d4d16565b6005805460ff1916600117905591505b635b5bb20042118015610605575060075460ff16155b1561062e5760065461061e90839063ffffffff610d4d16565b6007805460ff1916600117905591505b635bd4fc0042118015610644575060095460ff16155b1561066d5760085461065d90839063ffffffff610d4d16565b6009805460ff1916600117905591505b635c4e4600421180156106835750600b5460ff16155b156106ac57600a5461069c90839063ffffffff610d4d16565b600b805460ff1916600117905591505b635cc4ed00421180156106c25750600d5460ff16155b156106eb57600c546106db90839063ffffffff610d4d16565b600d805460ff1916600117905591505b600082116106f857600080fd5b60015461070b908363ffffffff610d4d16565b90506b12419209ba26d48b5200000081111561072657600080fd5b600154610739908363ffffffff610d4d16565b600155600354600160a060020a0316600090815260208190526040902054610767908363ffffffff610d4d16565b60038054600160a060020a039081166000908152602081905260409081902093909355905416907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859084905190815260200160405180910390a2600354600160a060020a031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a360019250505090565b60015490565b60065481565b6000600160a060020a038316151561082e57600080fd5b600160a060020a03841660009081526020819052604090205482111561085357600080fd5b600160a060020a038085166000908152600260209081526040808320339094168352929052205482111561088657600080fd5b600160a060020a0384166000908152602081905260409020546108af908363ffffffff610d5a16565b600160a060020a0380861660009081526020819052604080822093909355908516815220546108e4908363ffffffff610d4d16565b600160a060020a038085166000908152602081815260408083209490945587831682526002815283822033909316825291909152205461092a908363ffffffff610d5a16565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b601281565b635b5bb20081565b600b5460ff1681565b600c5481565b600160a060020a03338116600090815260026020908152604080832093861683529290529081205480831115610a1057600160a060020a033381166000908152600260209081526040808320938816835292905290812055610a47565b610a20818463ffffffff610d5a16565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600160a060020a031660009081526020819052604090205490565b635ae3b98081565b6b12419209ba26d48b5200000081565b60075460ff1681565b600354600160a060020a031681565b60055460ff1681565b60408051908101604052600381527f4e4f4d0000000000000000000000000000000000000000000000000000000000602082015281565b60095460ff1681565b6000600160a060020a0383161515610b5857600080fd5b600160a060020a033316600090815260208190526040902054821115610b7d57600080fd5b600160a060020a033316600090815260208190526040902054610ba6908363ffffffff610d5a16565b600160a060020a033381166000908152602081905260408082209390935590851681522054610bdb908363ffffffff610d4d16565b60008085600160a060020a0316600160a060020a031681526020019081526020016000208190555082600160a060020a031633600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a350600192915050565b600d5460ff1681565b60045481565b635bd4fc0081565b635cc4ed0081565b600a5481565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610cb0908363ffffffff610d4d16565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60085481565b8181018281101561057c57fe5b600082821115610d6657fe5b50900390565b6000821515610d7d5750600061057c565b50818102818382811515610d8d57fe5b041461057c57fe5b60008183811515610da257fe5b0493925050505600a165627a7a72305820ebb36a3a4c39ed2a7ec8a52d29e03452a894772c7cdeab927e23b66316330c310029"
}