{
  "address": "0x5c1fc813d9c1b5ebb93889b3d63ba24984ca44b7",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "OSM",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-08\n*/\n\n// hevm: flattened sources of src/osm.sol\npragma solidity ^0.4.24;\n\n////// lib/ds-stop/lib/ds-auth/src/auth.sol\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n/* pragma solidity ^0.4.23; */\n\ncontract DSAuthority {\n    function canCall(\n        address src, address dst, bytes4 sig\n    ) public view returns (bool);\n}\n\ncontract DSAuthEvents {\n    event LogSetAuthority (address indexed authority);\n    event LogSetOwner     (address indexed owner);\n}\n\ncontract DSAuth is DSAuthEvents {\n    DSAuthority  public  authority;\n    address      public  owner;\n\n    constructor() public {\n        owner = msg.sender;\n        emit LogSetOwner(msg.sender);\n    }\n\n    function setOwner(address owner_)\n        public\n        auth\n    {\n        owner = owner_;\n        emit LogSetOwner(owner);\n    }\n\n    function setAuthority(DSAuthority authority_)\n        public\n        auth\n    {\n        authority = authority_;\n        emit LogSetAuthority(authority);\n    }\n\n    modifier auth {\n        require(isAuthorized(msg.sender, msg.sig));\n        _;\n    }\n\n    function isAuthorized(address src, bytes4 sig) internal view returns (bool) {\n        if (src == address(this)) {\n            return true;\n        } else if (src == owner) {\n            return true;\n        } else if (authority == DSAuthority(0)) {\n            return false;\n        } else {\n            return authority.canCall(src, this, sig);\n        }\n    }\n}\n\n////// lib/ds-stop/lib/ds-note/src/note.sol\n/// note.sol -- the `note' modifier, for logging calls as events\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n/* pragma solidity ^0.4.23; */\n\ncontract DSNote {\n    event LogNote(\n        bytes4   indexed  sig,\n        address  indexed  guy,\n        bytes32  indexed  foo,\n        bytes32  indexed  bar,\n        uint              wad,\n        bytes             fax\n    ) anonymous;\n\n    modifier note {\n        bytes32 foo;\n        bytes32 bar;\n\n        assembly {\n            foo := calldataload(4)\n            bar := calldataload(36)\n        }\n\n        emit LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);\n\n        _;\n    }\n}\n\n////// lib/ds-stop/src/stop.sol\n/// stop.sol -- mixin for enable/disable functionality\n\n// Copyright (C) 2017  DappHub, LLC\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n/* pragma solidity ^0.4.23; */\n\n/* import \"ds-auth/auth.sol\"; */\n/* import \"ds-note/note.sol\"; */\n\ncontract DSStop is DSNote, DSAuth {\n\n    bool public stopped;\n\n    modifier stoppable {\n        require(!stopped);\n        _;\n    }\n    function stop() public auth note {\n        stopped = true;\n    }\n    function start() public auth note {\n        stopped = false;\n    }\n\n}\n\n////// src/osm.sol\n/// osm.sol - oracle security module\n\n// Copyright (C) 2018  DappHub, LLC\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n/* pragma solidity ^0.4.24; */\n\n/* import \"ds-auth/auth.sol\"; */\n/* import \"ds-stop/stop.sol\"; */\n// import \"ds-value/value.sol\";\n\ninterface DSValue {\n    function peek() external returns (bytes32,bool);\n    function read() external returns (bytes32);\n}\n\ncontract OSM is DSAuth, DSStop {\n    DSValue public src;\n    \n    uint16 constant ONE_HOUR = uint16(3600);\n\n    uint16 public hop = ONE_HOUR;\n    uint64 public zzz;\n\n    struct Feed {\n        uint128 val;\n        bool    has;\n    }\n\n    Feed cur;\n    Feed nxt;\n\n    event LogValue(bytes32 val);\n    \n    constructor (DSValue src_) public {\n        src = src_;\n        (bytes32 wut, bool ok) = src_.peek();\n        if (ok) {\n            cur = nxt = Feed(uint128(wut), ok);\n            zzz = prev(era());\n        }\n    }\n\n    function era() internal view returns (uint) {\n        return block.timestamp;\n    }\n\n    function prev(uint ts) internal view returns (uint64) {\n        return uint64(ts - (ts % hop));\n    }\n\n    function step(uint16 ts) external auth {\n        require(ts > 0);\n        hop = ts;\n    }\n\n    function void() external auth {\n        cur = nxt = Feed(0, false);\n        stopped = true;\n    }\n\n    function pass() public view returns (bool ok) {\n        return era() >= zzz + hop;\n    }\n\n    function poke() external stoppable {\n        require(pass());\n        (bytes32 wut, bool ok) = src.peek();\n        cur = nxt;\n        nxt = Feed(uint128(wut), ok);\n        zzz = prev(era());\n        emit LogValue(bytes32(cur.val));\n    }\n\n    function peek() external view returns (bytes32,bool) {\n        return (bytes32(cur.val), cur.has);\n    }\n\n    function peep() external view returns (bytes32,bool) {\n        return (bytes32(nxt.val), nxt.has);\n    }\n\n    function read() external view returns (bytes32) {\n        require(cur.has);\n        return (bytes32(cur.val));\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"peep\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"poke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"src\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"peek\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zzz\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pass\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"void\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ts\",\"type\":\"uint16\"}],\"name\":\"step\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"src_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"LogValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"}]",
  "bytecode": "60806040526002805460a060020a61ffff021916750e10000000000000000000000000000000000000000017905534801561003957600080fd5b50604051602080610d58833981016040819052905160018054600160a060020a03191633908117909155909160009182917fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94908390a260028054600160a060020a031916600160a060020a038516908117909155604080517f59e02dd700000000000000000000000000000000000000000000000000000000815281516359e02dd7926004808401939192918290030181600087803b1580156100fb57600080fd5b505af115801561010f573d6000803e3d6000fd5b505050506040513d604081101561012557600080fd5b508051602090910151909250905080156101fc57604080518082019091526001608060020a03808416808352831515602090930183905260048054700100000000000000000000000000000000948502608060020a60ff02196001608060020a0319928316909417841617918290556003805486840460ff161515909602959091169190931617169190911790556101d56101c7640100000000610204810204565b640100000000610208810204565b600260166101000a8154816001604060020a0302191690836001604060020a031602179055505b50505061023d565b4290565b60025460009074010000000000000000000000000000000000000000900461ffff168281151561023457fe5b06909103919050565b610b0c8061024c6000396000f3006080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166307da68f581146100f55780630e5a6c701461010c57806313af40351461013a578063181783581461015b5780632e7dc6af1461017057806357de26a4146101a157806359e02dd7146101c857806375f12b21146101dd5780637a9e5e4b146102065780638da5cb5b14610227578063a4dff0a21461023c578063a7a1ed721461026e578063ac4c25b214610283578063b0b8579b14610298578063be9a6555146102c4578063bf7e214f146102d9578063e38e2cfb146102ee575b600080fd5b34801561010157600080fd5b5061010a61030a565b005b34801561011857600080fd5b506101216103a4565b6040805192835290151560208301528051918290030190f35b34801561014657600080fd5b5061010a600160a060020a03600435166103d6565b34801561016757600080fd5b5061010a610454565b34801561017c57600080fd5b5061018561065f565b60408051600160a060020a039092168252519081900360200190f35b3480156101ad57600080fd5b506101b661066e565b60408051918252519081900360200190f35b3480156101d457600080fd5b506101216106af565b3480156101e957600080fd5b506101f26106e1565b604080519115158252519081900360200190f35b34801561021257600080fd5b5061010a600160a060020a03600435166106f1565b34801561023357600080fd5b5061018561076b565b34801561024857600080fd5b5061025161077a565b6040805167ffffffffffffffff9092168252519081900360200190f35b34801561027a57600080fd5b506101f26107a4565b34801561028f57600080fd5b5061010a6107f0565b3480156102a457600080fd5b506102ad610896565b6040805161ffff9092168252519081900360200190f35b3480156102d057600080fd5b5061010a6108a7565b3480156102e557600080fd5b5061018561093b565b3480156102fa57600080fd5b5061010a61ffff6004351661094a565b61032033600035600160e060020a0319166109af565b151561032b57600080fd5b60408051348082526020820183815236938301849052600435936024359384938693339360008035600160e060020a031916949092606082018484808284376040519201829003965090945050505050a450506001805474ff0000000000000000000000000000000000000000191660a060020a179055565b6004546fffffffffffffffffffffffffffffffff81169170010000000000000000000000000000000090910460ff1690565b6103ec33600035600160e060020a0319166109af565b15156103f757600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b600154600090819060a060020a900460ff161561047057600080fd5b6104786107a4565b151561048357600080fd5b600254604080517f59e02dd70000000000000000000000000000000000000000000000000000000081528151600160a060020a03909316926359e02dd7926004808401939192918290030181600087803b1580156104e057600080fd5b505af11580156104f4573d6000803e3d6000fd5b505050506040513d604081101561050a57600080fd5b50805160209182015160048054600380546fffffffffffffffffffffffffffffffff8084166fffffffffffffffffffffffffffffffff199283161770ff000000000000000000000000000000001990811670010000000000000000000000000000000080870460ff161515810291909117909455604080518082019091529188168083528715159290990182905291909316909617909516940293909317909255925090506105bf6105ba610ab8565b610abc565b6002805467ffffffffffffffff92909216760100000000000000000000000000000000000000000000027fffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffff909216919091179055600354604080516fffffffffffffffffffffffffffffffff9092168252517f296ba4ca62c6c21c95e828080cb8aec7481b71390585605300a8a76f9e95b5279181900360200190a15050565b600254600160a060020a031681565b600354600090700100000000000000000000000000000000900460ff16151561069657600080fd5b506003546fffffffffffffffffffffffffffffffff1690565b6003546fffffffffffffffffffffffffffffffff81169170010000000000000000000000000000000090910460ff1690565b60015460a060020a900460ff1681565b61070733600035600160e060020a0319166109af565b151561071257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b600154600160a060020a031681565b600254760100000000000000000000000000000000000000000000900467ffffffffffffffff1681565b60025460009060a060020a810461ffff1676010000000000000000000000000000000000000000000090910467ffffffffffffffff90811691909101166107e9610ab8565b1015905090565b61080633600035600160e060020a0319166109af565b151561081157600080fd5b6040805180820190915260008082526020909101526004805470ffffffffffffffffffffffffffffffffff1990811691829055600380547001000000000000000000000000000000009384900460ff161515909302929091169190911790556001805474ff0000000000000000000000000000000000000000191660a060020a179055565b60025460a060020a900461ffff1681565b6108bd33600035600160e060020a0319166109af565b15156108c857600080fd5b60408051348082526020820183815236938301849052600435936024359384938693339360008035600160e060020a031916949092606082018484808284376040519201829003965090945050505050a450506001805474ff000000000000000000000000000000000000000019169055565b600054600160a060020a031681565b61096033600035600160e060020a0319166109af565b151561096b57600080fd5b600061ffff82161161097c57600080fd5b6002805461ffff90921660a060020a0275ffff000000000000000000000000000000000000000019909216919091179055565b6000600160a060020a0383163014156109ca57506001610ab2565b600154600160a060020a03848116911614156109e857506001610ab2565b600054600160a060020a03161515610a0257506000610ab2565b60008054604080517fb7009613000000000000000000000000000000000000000000000000000000008152600160a060020a038781166004830152306024830152600160e060020a0319871660448301529151919092169263b700961392606480820193602093909283900390910190829087803b158015610a8357600080fd5b505af1158015610a97573d6000803e3d6000fd5b505050506040513d6020811015610aad57600080fd5b505190505b92915050565b4290565b60025460009060a060020a900461ffff1682811515610ad757fe5b069091039190505600a165627a7a72305820b6176d5a2f9017b8d9e669d3bb29a7caa0001f9ae4d255a6dd7a05296bfd837b0029000000000000000000000000729d19f657bd0614b4985cf1d82531c67569197b",
  "constructorArguments": "000000000000000000000000729d19f657bd0614b4985cf1d82531c67569197b"
}