{
  "address": "0xf63be66128e2c3f199e59bf870655ca2ad0b20aa",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TranslatixToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-17\n*/\n\npragma solidity ^0.4.18;\n\nlibrary SafeMath {\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        if (a == 0) {\n            return 0;\n        }\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    \n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        // uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return a / b;\n    }\n\n    /**\n    * Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract AltcoinToken {\n    function balanceOf(address _owner) constant public returns (uint256);\n    function transfer(address _to, uint256 _value) public returns (bool);\n}\n\ncontract ERC20Basic {\n    uint256 public totalSupply;\n    function balanceOf(address who) public constant returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public constant returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract TranslatixToken is ERC20 {\n    \n    using SafeMath for uint256;\n    address public owner = msg.sender;\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;    \n\n    string public constant name = \"Translatix\";\n    string public constant symbol = \"TNX\";\n    uint public constant decimals = 8;\n    \n    uint256 public totalSupply = 13000000000 * (10**decimals);      \n    uint256 public tokensPerEth = 10000000 * (10**decimals);\n    uint256 public tokensForSale = 7800000000 * (10**decimals);\n    uint256 public totalDistributed = 0;\n    uint256 public constant minContribution = 1 ether / 100; // 0.01 Ether\n    uint256 public totalTokenSold; \n    uint256 public totalWeiReceived;  \n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    \n    event Distr(address indexed to, uint256 amount);\n    event DistrFinished();\n    event ICOStarted();\n\n    event Airdrop(address indexed _owner, uint _amount, uint _balance);\n\n    event TokensPerEthUpdated(uint _tokensPerEth);\n    \n    event Burn(address indexed burner, uint256 value);\n\n    bool public distributionFinished = false;\n    bool public icoStarted = false;\n\n    modifier canDistr() {\n        require(!distributionFinished);\n        _;\n    }\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    \n    constructor () public {\n        owner = msg.sender;\n        uint256 devTokens = 1300000000 * (10**decimals);\n        distr(owner, devTokens);\n    }\n    \n\n    function transferOwnership(address newOwner) onlyOwner public {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n\n    function startICO() onlyOwner public returns (bool) {\n        icoStarted = true;\n        distributionFinished = false;\n        emit ICOStarted();\n        return true;\n    }\n\n    function finishDistribution() onlyOwner public returns (bool) {\n        distributionFinished = true;\n        emit DistrFinished();\n        return true;\n    }\n    \n    function distr(address _to, uint256 _amount) canDistr private returns (bool) {\n        totalDistributed = totalDistributed.add(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        emit Distr(_to, _amount);\n        emit Transfer(address(0), _to, _amount);\n\n        return true;\n    }\n\n    function doAirdrop(address _participant, uint _amount) internal {\n\n        require( _amount > 0 );      \n\n        require( totalDistributed < totalSupply );\n        \n        balances[_participant] = balances[_participant].add(_amount);\n        totalDistributed = totalDistributed.add(_amount);\n\n        if (totalDistributed >= totalSupply) {\n            distributionFinished = true;\n        }\n\n        // log\n        emit Airdrop(_participant, _amount, balances[_participant]);\n        emit Transfer(address(0), _participant, _amount);\n    }\n\n    function adminClaimAirdrop(address _participant, uint _amount) public onlyOwner {        \n        doAirdrop(_participant, _amount);\n    }\n\n    function adminClaimAirdropMultipleAddressMultiAmount(address[] _addresses, uint[] _amount) public onlyOwner {        \n        for (uint i = 0; i < _addresses.length; i++) doAirdrop(_addresses[i], _amount[i]);\n    }\n\n    function adminClaimAirdropMultiple(address[] _addresses, uint _amount) public onlyOwner {        \n        for (uint i = 0; i < _addresses.length; i++) doAirdrop(_addresses[i], _amount);\n    }\n\n    function updateTokensPerEth(uint _tokensPerEth) public onlyOwner {        \n        tokensPerEth = _tokensPerEth;\n        emit TokensPerEthUpdated(_tokensPerEth);\n    }\n           \n    function () external payable {\n        getTokens();\n     }\n    \n    function getTokens() payable canDistr  public {\n    \trequire(icoStarted);\n        uint256 tokens = 0;\n\n        require( msg.value >= minContribution );\n\n        require( msg.value > 0 );\n        if(msg.value >= 1 ether){\n            tokens = tokensPerEth.mul((msg.value*5)/4) / 1 ether; \n        } else {\n            tokens = tokensPerEth.mul(msg.value) / 1 ether; \n        }\n\n        address investor = msg.sender;\n        \n        if (tokens > 0) {\n            distr(investor, tokens);\n            totalWeiReceived = totalWeiReceived.add(msg.value);\n            totalTokenSold = totalTokenSold.add(tokens);        \n        }\n\n        if (totalTokenSold >= tokensForSale) {\n            distributionFinished = true;\n        }\n    }\n\n    function balanceOf(address _owner) constant public returns (uint256) {\n        return balances[_owner];\n    }\n\n    // mitigates the ERC20 short address attack\n    modifier onlyPayloadSize(uint size) {\n        assert(msg.data.length >= size + 4);\n        _;\n    }\n    \n    function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {\n\n        require(_to != address(0));\n        require(_amount <= balances[msg.sender]);\n        \n        balances[msg.sender] = balances[msg.sender].sub(_amount);\n        balances[_to] = balances[_to].add(_amount);\n\n\n        emit Transfer(msg.sender, _to, _amount);\n        return true;\n    }\n    \n    function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {\n\n        require(_to != address(0));\n        require(_amount <= balances[_from]);\n        require(_amount <= allowed[_from][msg.sender]);\n        \n        balances[_from] = balances[_from].sub(_amount);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        emit Transfer(_from, _to, _amount);\n        return true;\n    }\n    \n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        // mitigates the ERC20 spend/approval race condition\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    \n    function allowance(address _owner, address _spender) constant public returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n    \n    function getTokenBalance(address tokenAddress, address who) constant public returns (uint){\n        AltcoinToken t = AltcoinToken(tokenAddress);\n        uint bal = t.balanceOf(who);\n        return bal;\n    }\n\n    function withdraw(uint amount) onlyOwner public returns(bool) {\n        // uint amount = pendingWithdraws[msg.sender];\n        // pendingWithdraws[msg.sender] = 0;\n        // msg.sender.transfer(amount);\n        require(amount < address(this).balance);\n        owner.transfer(amount);\n        return true;\n\n    }\n    \n    function burn(uint256 _value) onlyOwner public {\n        require(_value <= balances[msg.sender]);\n        \n        address burner = msg.sender;\n        balances[burner] = balances[burner].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        totalDistributed = totalDistributed.sub(_value);\n        emit Burn(burner, _value);\n    }\n    \n    function withdrawAltcoinTokens(address _tokenContract) onlyOwner public returns (bool) {\n        AltcoinToken token = AltcoinToken(_tokenContract);\n        uint256 amount = token.balanceOf(address(this));\n        return token.transfer(owner, amount);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoStarted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensForSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawAltcoinTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"adminClaimAirdropMultipleAddressMultiAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"adminClaimAirdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"adminClaimAirdropMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startICO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWeiReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishDistribution\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokensPerEth\",\"type\":\"uint256\"}],\"name\":\"updateTokensPerEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokenSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributionFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DistrFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ICOStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"Airdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_tokensPerEth\",\"type\":\"uint256\"}],\"name\":\"TokensPerEthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "608060405260018054600160a060020a0319163317905567120a871cc002000060045566038d7ea4c68000600555670ad31dde0cce00006006556000600755600a805461ffff1916905534801561005557600080fd5b5060018054600160a060020a0319163317908190556701cdda4faccd00009061009090600160a060020a031682640100000000610097810204565b50506101a6565b600a5460009060ff16156100aa57600080fd5b6007546100c4908364010000000061119c61019382021704565b600755600160a060020a0383166000908152600260205260409020546100f7908364010000000061119c61019382021704565b600160a060020a038416600081815260026020908152604091829020939093558051858152905191927f8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a7792918290030190a2604080518381529051600160a060020a038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b818101828110156101a057fe5b92915050565b61131a80620001b66000396000f30060806040526004361061017f5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610189578063095ea7b3146102135780630b5e89f41461024b57806312aef8c31461026057806318160ddd146102875780632195845f1461029c57806323b872dd146102bd5780632e1a7d4d146102e7578063313ce567146102ff57806342966c681461031457806344d8ab261461032c5780634a63464d146103ba57806367220fd7146103de57806370a08231146104355780637fa8c1581461045657806388d12a4d1461046b5780638da5cb5b1461048057806395d89b41146104b15780639b1cbccc146104c65780639ea407be146104db578063a9059cbb146104f3578063aa6ca8081461017f578063aaffadf314610517578063b5f7f6361461052c578063c108d54214610541578063c489744b14610556578063cbdd69b51461057d578063dd62ed3e14610592578063efca2eed146105b9578063f2fde38b146105ce575b6101876105ef565b005b34801561019557600080fd5b5061019e61070c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101d85781810151838201526020016101c0565b50505050905090810190601f1680156102055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021f57600080fd5b50610237600160a060020a0360043516602435610743565b604080519115158252519081900360200190f35b34801561025757600080fd5b506102376107eb565b34801561026c57600080fd5b506102756107f9565b60408051918252519081900360200190f35b34801561029357600080fd5b506102756107ff565b3480156102a857600080fd5b50610237600160a060020a0360043516610805565b3480156102c957600080fd5b50610237600160a060020a0360043581169060243516604435610959565b3480156102f357600080fd5b50610237600435610acc565b34801561030b57600080fd5b50610275610b36565b34801561032057600080fd5b50610187600435610b3b565b34801561033857600080fd5b506040805160206004803580820135838102808601850190965280855261018795369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750949750610c1a9650505050505050565b3480156103c657600080fd5b50610187600160a060020a0360043516602435610c86565b3480156103ea57600080fd5b5060408051602060048035808201358381028086018501909652808552610187953695939460249493850192918291850190849080828437509497505093359450610ca79350505050565b34801561044157600080fd5b50610275600160a060020a0360043516610cf7565b34801561046257600080fd5b50610237610d12565b34801561047757600080fd5b50610275610d70565b34801561048c57600080fd5b50610495610d76565b60408051600160a060020a039092168252519081900360200190f35b3480156104bd57600080fd5b5061019e610d85565b3480156104d257600080fd5b50610237610dbc565b3480156104e757600080fd5b50610187600435610e12565b3480156104ff57600080fd5b50610237600160a060020a0360043516602435610e64565b34801561052357600080fd5b50610275610f43565b34801561053857600080fd5b50610275610f4e565b34801561054d57600080fd5b50610237610f54565b34801561056257600080fd5b50610275600160a060020a0360043581169060243516610f5d565b34801561058957600080fd5b5061027561100e565b34801561059e57600080fd5b50610275600160a060020a0360043581169060243516611014565b3480156105c557600080fd5b5061027561103f565b3480156105da57600080fd5b50610187600160a060020a0360043516611045565b600a54600090819060ff161561060457600080fd5b600a54610100900460ff16151561061a57600080fd5b60009150662386f26fc1000034101561063257600080fd5b6000341161063f57600080fd5b670de0b6b3a7640000341061068257670de0b6b3a764000061067160046005340260055491900463ffffffff61109716565b81151561067a57fe5b0491506106ac565b600554670de0b6b3a76400009061069f903463ffffffff61109716565b8115156106a857fe5b0491505b503360008211156106ef576106c181836110c0565b506009546106d5903463ffffffff61119c16565b6009556008546106eb908363ffffffff61119c16565b6008555b6006546008541061070857600a805460ff191660011790555b5050565b60408051808201909152600a81527f5472616e736c6174697800000000000000000000000000000000000000000000602082015281565b600081158015906107765750336000908152600360209081526040808320600160a060020a038716845290915290205415155b15610783575060006107e5565b336000818152600360209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b600a54610100900460ff1681565b60065481565b60045481565b60015460009081908190600160a060020a0316331461082357600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051859350600160a060020a038416916370a082319160248083019260209291908290030181600087803b15801561088757600080fd5b505af115801561089b573d6000803e3d6000fd5b505050506040513d60208110156108b157600080fd5b5051600154604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810184905290519293509084169163a9059cbb916044808201926020929091908290030181600087803b15801561092557600080fd5b505af1158015610939573d6000803e3d6000fd5b505050506040513d602081101561094f57600080fd5b5051949350505050565b60006060606436101561096857fe5b600160a060020a038416151561097d57600080fd5b600160a060020a0385166000908152600260205260409020548311156109a257600080fd5b600160a060020a03851660009081526003602090815260408083203384529091529020548311156109d257600080fd5b600160a060020a0385166000908152600260205260409020546109fb908463ffffffff6111a916565b600160a060020a0386166000908152600260209081526040808320939093556003815282822033835290522054610a38908463ffffffff6111a916565b600160a060020a038087166000908152600360209081526040808320338452825280832094909455918716815260029091522054610a7c908463ffffffff61119c16565b600160a060020a0380861660008181526002602090815260409182902094909455805187815290519193928916926000805160206112cf83398151915292918290030190a3506001949350505050565b600154600090600160a060020a03163314610ae657600080fd5b30318210610af357600080fd5b600154604051600160a060020a039091169083156108fc029084906000818181858888f19350505050158015610b2d573d6000803e3d6000fd5b50600192915050565b600881565b600154600090600160a060020a03163314610b5557600080fd5b33600090815260026020526040902054821115610b7157600080fd5b5033600081815260026020526040902054610b92908363ffffffff6111a916565b600160a060020a038216600090815260026020526040902055600454610bbe908363ffffffff6111a916565b600455600754610bd4908363ffffffff6111a916565b600755604080518381529051600160a060020a038316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25050565b600154600090600160a060020a03163314610c3457600080fd5b5060005b8251811015610c8157610c798382815181101515610c5257fe5b906020019060200201518383815181101515610c6a57fe5b906020019060200201516111bb565b600101610c38565b505050565b600154600160a060020a03163314610c9d57600080fd5b61070882826111bb565b600154600090600160a060020a03163314610cc157600080fd5b5060005b8251811015610c8157610cef8382815181101515610cdf57fe5b90602001906020020151836111bb565b600101610cc5565b600160a060020a031660009081526002602052604090205490565b600154600090600160a060020a03163314610d2c57600080fd5b600a805460ff1961ff0019909116610100171690556040517ffc618519ae40d98dcc0290aca36bb7869677a04294f2fef8e079935048be9f1b90600090a150600190565b60095481565b600154600160a060020a031681565b60408051808201909152600381527f544e580000000000000000000000000000000000000000000000000000000000602082015281565b600154600090600160a060020a03163314610dd657600080fd5b600a805460ff191660011790556040517f7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc90600090a150600190565b600154600160a060020a03163314610e2957600080fd5b60058190556040805182815290517ff7729fa834bbef70b6d3257c2317a562aa88b56c81b544814f93dc5963a2c0039181900360200190a150565b600060406044361015610e7357fe5b600160a060020a0384161515610e8857600080fd5b33600090815260026020526040902054831115610ea457600080fd5b33600090815260026020526040902054610ec4908463ffffffff6111a916565b3360009081526002602052604080822092909255600160a060020a03861681522054610ef6908463ffffffff61119c16565b600160a060020a0385166000818152600260209081526040918290209390935580518681529051919233926000805160206112cf8339815191529281900390910190a35060019392505050565b662386f26fc1000081565b60085481565b600a5460ff1681565b600080600084915081600160a060020a03166370a08231856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610fd957600080fd5b505af1158015610fed573d6000803e3d6000fd5b505050506040513d602081101561100357600080fd5b505195945050505050565b60055481565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b60075481565b600154600160a060020a0316331461105c57600080fd5b600160a060020a03811615611094576001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b60008215156110a8575060006107e5565b508181028183828115156110b857fe5b04146107e557fe5b600a5460009060ff16156110d357600080fd5b6007546110e6908363ffffffff61119c16565b600755600160a060020a038316600090815260026020526040902054611112908363ffffffff61119c16565b600160a060020a038416600081815260026020908152604091829020939093558051858152905191927f8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a7792918290030190a2604080518381529051600160a060020a038516916000916000805160206112cf8339815191529181900360200190a350600192915050565b818101828110156107e557fe5b6000828211156111b557fe5b50900390565b600081116111c857600080fd5b600454600754106111d857600080fd5b600160a060020a038216600090815260026020526040902054611201908263ffffffff61119c16565b600160a060020a03831660009081526002602052604090205560075461122d908263ffffffff61119c16565b60078190556004541161124857600a805460ff191660011790555b600160a060020a0382166000818152600260209081526040918290205482518581529182015281517fada993ad066837289fe186cd37227aa338d27519a8a1547472ecb9831486d272929181900390910190a2604080518281529051600160a060020a038416916000916000805160206112cf8339815191529181900360200190a350505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058204a7f4e742e64b5c23398125c5f12fa8ce1b72d207bd36ae675b6d4aef13a82260029"
}