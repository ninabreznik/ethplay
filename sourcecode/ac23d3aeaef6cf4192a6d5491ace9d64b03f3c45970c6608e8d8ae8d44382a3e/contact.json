{
  "address": "0x5210d13ce7fb5b8c9dfc0706ef5636497e805161",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "XYC",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-23\n*/\n\npragma solidity ^0.4.24;\n\ncontract ERC20 {\n  function totalSupply() public view returns (uint256);\n\n  function balanceOf(address _who) public view returns (uint256);\n\n  function allowance(address _owner, address _spender)\n    public view returns (uint256);\n\n  function transfer(address _to, uint256 _value) public returns (bool);\n\n  function approve(address _spender, uint256 _value)\n    public returns (bool);\n\n  function transferFrom(address _from, address _to, uint256 _value)\n    public returns (bool);\n\n  event Transfer(address indexed from, address indexed to,  uint256 value );\n\n  event Approval(  address indexed owner,  address indexed spender,  uint256 value );\n\n  }\n  \n  library SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    require(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a);\n    return c;\n  }\n}\n\n contract StandardToken is ERC20 {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n  uint256 totalSupply_;\n\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_value <= balances[msg.sender]);\n    require(_to != address(0));\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    returns (bool)\n  {\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n    require(_to != address(0));\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n\n  function increaseApproval(\n    address _spender,\n    uint256 _addedValue\n  )\n    public\n    returns (bool)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function decreaseApproval(\n    address _spender,\n    uint256 _subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    uint256 oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue >= oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n \n// ERC20 standard token\ncontract XYC is StandardToken {\n    address public admin; // ����Ա\n    string public name = \"XYCoin(逍遥生态币)\"; // ��������\n    string public symbol = \"XYC\"; // ���ҷ���\n    uint8 public decimals = 18; // ���Ҿ���\n    uint256 public totalSupply = 10000000000e18; // ����80�� *10^18\n    // ͬһ���˻��������ⶳ��������������\n    mapping (address => bool) public frozenAccount; //�����ڶ�����˻�\n    mapping (address => uint256) public frozenTimestamp; // �����ڶ�����˻�\n\n    bool public exchangeFlag = true; // ���Ҷһ�����\n    // ������������ļ����ɶ����eth�����ظ�ԭ�˻�\n    uint256 public minWei = 1;  //��ʹ� 1 wei  1eth = 1*10^18 wei\n    uint256 public maxWei = 20000e18; // ���һ�δ� 20000 eth\n    uint256 public maxRaiseAmount = 20000e18; // ļ������ 20000 eth\n    uint256 public raisedAmount = 0; // ��ļ�� 0 eth\n    uint256 public raiseRatio = 200000; // �һ����� 1eth = 20��token\n    // event ֪ͨ\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    // ���캯��\n    constructor() public {\n        totalSupply_ = totalSupply;\n        admin = msg.sender;\n        balances[msg.sender] = totalSupply;\n    }\n\n    // fallback ���Լ��ַת�� or ���÷Ǻ�Լ��������\n    // �����Զ��һ�eth\n    function()\n    public payable {\n        require(msg.value > 0);\n        if (exchangeFlag) {\n            if (msg.value >= minWei && msg.value <= maxWei){\n                if (raisedAmount < maxRaiseAmount) {\n                    uint256 valueNeed = msg.value;\n                    raisedAmount = raisedAmount.add(msg.value);\n                    if (raisedAmount > maxRaiseAmount) {\n                        uint256 valueLeft = raisedAmount.sub(maxRaiseAmount);\n                        valueNeed = msg.value.sub(valueLeft);\n                        msg.sender.transfer(valueLeft);\n                        raisedAmount = maxRaiseAmount;\n                    }\n                    if (raisedAmount >= maxRaiseAmount) {\n                        exchangeFlag = false;\n                    }\n                    // �Ѵ��������� *10^18\n                    uint256 _value = valueNeed.mul(raiseRatio);\n\n                    require(_value <= balances[admin]);\n                    balances[admin] = balances[admin].sub(_value);\n                    balances[msg.sender] = balances[msg.sender].add(_value);\n\n                    emit Transfer(admin, msg.sender, _value);\n\n                }\n            } else {\n                msg.sender.transfer(msg.value);\n            }\n        } else {\n            msg.sender.transfer(msg.value);\n        }\n    }\n\n    /**\n    * �޸Ĺ���Ա\n    */\n    function changeAdmin(\n        address _newAdmin\n    )\n    public\n    returns (bool)  {\n        require(msg.sender == admin);\n        require(_newAdmin != address(0));\n        balances[_newAdmin] = balances[_newAdmin].add(balances[admin]);\n        balances[admin] = 0;\n        admin = _newAdmin;\n        return true;\n    }\n    /**\n    * ����\n    */\n    function generateToken(\n        address _target,\n        uint256 _amount\n    )\n    public\n    returns (bool)  {\n        require(msg.sender == admin);\n        require(_target != address(0));\n        balances[_target] = balances[_target].add(_amount);\n        totalSupply_ = totalSupply_.add(_amount);\n        totalSupply = totalSupply_;\n        return true;\n    }\n\n    // �Ӻ�Լ����\n    // ֻ���������Ա\n    function withdraw (\n        uint256 _amount\n    )\n    public\n    returns (bool) {\n        require(msg.sender == admin);\n        msg.sender.transfer(_amount);\n        return true;\n    }\n    /**\n    * �����˻�\n    */\n    function freeze(\n        address _target,\n        bool _freeze\n    )\n    public\n    returns (bool) {\n        require(msg.sender == admin);\n        require(_target != address(0));\n        frozenAccount[_target] = _freeze;\n        return true;\n    }\n    /**\n    * ͨ��ʱ��������˻�\n    */\n    function freezeWithTimestamp(\n        address _target,\n        uint256 _timestamp\n    )\n    public\n    returns (bool) {\n        require(msg.sender == admin);\n        require(_target != address(0));\n        frozenTimestamp[_target] = _timestamp;\n        return true;\n    }\n\n    /**\n        * ���������˻�\n        */\n    function multiFreeze(\n        address[] _targets,\n        bool[] _freezes\n    )\n    public\n    returns (bool) {\n        require(msg.sender == admin);\n        require(_targets.length == _freezes.length);\n        uint256 len = _targets.length;\n        require(len > 0);\n        for (uint256 i = 0; i < len; i = i.add(1)) {\n            address _target = _targets[i];\n            require(_target != address(0));\n            bool _freeze = _freezes[i];\n            frozenAccount[_target] = _freeze;\n        }\n        return true;\n    }\n    /**\n            * ����ͨ��ʱ��������˻�\n            */\n    function multiFreezeWithTimestamp(\n        address[] _targets,\n        uint256[] _timestamps\n    )\n    public\n    returns (bool) {\n        require(msg.sender == admin);\n        require(_targets.length == _timestamps.length);\n        uint256 len = _targets.length;\n        require(len > 0);\n        for (uint256 i = 0; i < len; i = i.add(1)) {\n            address _target = _targets[i];\n            require(_target != address(0));\n            uint256 _timestamp = _timestamps[i];\n            frozenTimestamp[_target] = _timestamp;\n        }\n        return true;\n    }\n    /**\n    * ����ת��\n    */\n    function multiTransfer(\n        address[] _tos,\n        uint256[] _values\n    )\n    public\n    returns (bool) {\n        require(!frozenAccount[msg.sender]);\n        require(now > frozenTimestamp[msg.sender]);\n        require(_tos.length == _values.length);\n        uint256 len = _tos.length;\n        require(len > 0);\n        uint256 amount = 0;\n        for (uint256 i = 0; i < len; i = i.add(1)) {\n            amount = amount.add(_values[i]);\n        }\n        require(amount <= balances[msg.sender]);\n        for (uint256 j = 0; j < len; j = j.add(1)) {\n            address _to = _tos[j];\n            require(_to != address(0));\n            balances[_to] = balances[_to].add(_values[j]);\n            balances[msg.sender] = balances[msg.sender].sub(_values[j]);\n            emit Transfer(msg.sender, _to, _values[j]);\n        }\n        return true;\n    }\n    /**\n    * �ӵ�����ת����_to\n    */\n    function transfer(\n        address _to,\n        uint256 _value\n    )\n    public\n    returns (bool) {\n        require(!frozenAccount[msg.sender]);\n        require(now > frozenTimestamp[msg.sender]);\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n    /*\n    * �ӵ�������Ϊfrom������from�˻��е�tokenת����to\n    * ��������from�����ɶ���б���>=value\n    */\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    )\n    public\n    returns (bool)\n    {\n        require(!frozenAccount[_from]);\n        require(now > frozenTimestamp[msg.sender]);\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n    /**\n    * ����ת�˴�����spender�Ĵ��������ɶ��\n    */\n    function approve(\n        address _spender,\n        uint256 _value\n    ) public\n    returns (bool) {\n        // ת�˵�ʱ���У��balances���ô�require������\n        // require(_value <= balances[msg.sender]);\n\n        allowed[msg.sender][_spender] = _value;\n\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    /**\n    * ����ת�˴�����spender�Ĵ��������ɶ��\n    * ���岻���function\n    */\n    function increaseApproval(\n        address _spender,\n        uint256 _addedValue\n    )\n    public\n    returns (bool)\n    {\n        // uint256 value_ = allowed[msg.sender][_spender].add(_addedValue);\n        // require(value_ <= balances[msg.sender]);\n        // allowed[msg.sender][_spender] = value_;\n\n        // emit Approval(msg.sender, _spender, value_);\n        return true;\n    }\n    /**\n    * ����ת�˴�����spender�Ĵ��������ɶ��\n    * ���岻���function\n    */\n    function decreaseApproval(\n        address _spender,\n        uint256 _subtractedValue\n    )\n    public\n    returns (bool)\n    {\n        // uint256 oldValue = allowed[msg.sender][_spender];\n        // if (_subtractedValue > oldValue) {\n        //    allowed[msg.sender][_spender] = 0;\n        // } else {\n        //    uint256 newValue = oldValue.sub(_subtractedValue);\n        //    require(newValue <= balances[msg.sender]);\n        //   allowed[msg.sender][_spender] = newValue;\n        //}\n\n        // emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    //********************************************************************************\n    //��ѯ�˻��Ƿ��������ʱ���\n    function getFrozenTimestamp(\n        address _target\n    )\n    public view\n    returns (uint256) {\n        require(_target != address(0));\n        return frozenTimestamp[_target];\n    }\n    //��ѯ�˻��Ƿ�����\n    function getFrozenAccount(\n        address _target\n    )\n    public view\n    returns (bool) {\n        require(_target != address(0));\n        return frozenAccount[_target];\n    }\n    //��ѯ��Լ�����\n    function getBalance()\n    public view\n    returns (uint256) {\n        return address(this).balance;\n    }\n\t\n    // �޸�ļ��flag\n    function setExchangeFlag (\n        bool _flag\n    )\n    public\n    returns (bool) {\n        require(msg.sender == admin);\n        exchangeFlag = _flag;\n        return true;\n\n    }\n    // �޸ĵ���ļ������\n    function setMinWei (\n        uint256 _value\n    )\n    public\n    returns (bool) {\n        require(msg.sender == admin);\n        minWei = _value;\n        return true;\n\n    }\n    // �޸ĵ���ļ������\n    function setMaxWei (\n        uint256 _value\n    )\n    public\n    returns (bool) {\n        require(msg.sender == admin);\n        maxWei = _value;\n        return true;\n    }\n    // �޸���ļ������\n    function setMaxRaiseAmount (\n        uint256 _value\n    )\n    public\n    returns (bool) {\n        require(msg.sender == admin);\n        maxRaiseAmount = _value;\n        return true;\n    }\n\n    // �޸���ļ����\n    function setRaisedAmount (\n        uint256 _value\n    )\n    public\n    returns (bool) {\n        require(msg.sender == admin);\n        raisedAmount = _value;\n        return true;\n    }\n\n    // �޸�ļ������\n    function setRaiseRatio (\n        uint256 _value\n    )\n    public\n    returns (bool) {\n        require(msg.sender == admin);\n        raiseRatio = _value;\n        return true;\n    }\n\n    // ���ٺ�Լ\n    function kill()\n    public {\n        require(msg.sender == admin);\n        selfdestruct(admin);\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"maxWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setRaisedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMinWei\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxRaiseAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"setExchangeFlag\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeFlag\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raiseRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"getFrozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raisedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_freezes\",\"type\":\"bool[]\"}],\"name\":\"multiFreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMaxRaiseAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"freezeWithTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_timestamps\",\"type\":\"uint256[]\"}],\"name\":\"multiFreezeWithTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setRaiseRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"getFrozenTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMaxWei\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60c0604052601760808190527f5859436f696e28e9808de981a5e7949fe68081e5b8812900000000000000000060a090815262000040916004919062000119565b506040805180820190915260038082527f58594300000000000000000000000000000000000000000000000000000000006020909201918252620000879160059162000119565b506006805460ff199081166012179091556b204fce5e3e25026110000000600755600a80549091166001908117909155600b5569043c33c1937564800000600c819055600d556000600e5562030d40600f55348015620000e657600080fd5b50600754600281905560038054600160a060020a03191633908117909155600090815260208190526040902055620001be565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200015c57805160ff19168380011785556200018c565b828001600101855582156200018c579182015b828111156200018c5782518255916020019190600101906200016f565b506200019a9291506200019e565b5090565b620001bb91905b808211156200019a5760008155600101620001a5565b90565b61170680620001ce6000396000f3006080604052600436106101d75763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663068b731081146103fe57806306fdde0314610425578063095ea7b3146104af5780630b7ddd25146104e757806310f1a274146104ff57806312065fe01461051757806318160ddd1461052c578063188b5372146105415780631e89d5451461056557806323b872dd146105f35780632e1a7d4d1461061d578063313ce5671461063557806341c0e1b5146106605780635b22bbd214610677578063661884631461068c57806370a08231146106b057806376db7fd4146106d15780638f283970146106eb57806395d89b411461070c5780639a70855e14610721578063a899e61514610736578063a9059cbb1461074b578063addd70201461076f578063b414d4b614610784578063bf120ae5146107a5578063c4977807146107cb578063c59ee1dc146107ec578063c878dad914610801578063c8d90df81461088f578063cd27d1a0146108b0578063d70907b0146108c8578063d73dd6231461068c578063d950c432146108ec578063dd62ed3e1461097a578063e4b50ee8146109a1578063e6ad5bc7146109b9578063e8928f7a146109da578063f851a440146109f2575b600080803481106101e757600080fd5b600a5460ff16156103cb57600b5434101580156102065750600c543411155b1561039857600d54600e54101561039357600e5434935061022d908463ffffffff610a2316565b600e819055600d54101561029a57600d54600e546102509163ffffffff610a4016565b9150610262348363ffffffff610a4016565b604051909350339083156108fc029084906000818181858888f19350505050158015610292573d6000803e3d6000fd5b50600d54600e555b600d54600e54106102b057600a805460ff191690555b600f546102c490849063ffffffff610a5516565b600354600160a060020a03166000908152602081905260409020549091508111156102ee57600080fd5b600354600160a060020a0316600090815260208190526040902054610319908263ffffffff610a4016565b600354600160a060020a031660009081526020819052604080822092909255338152205461034d908263ffffffff610a2316565b336000818152602081815260409182902093909355600354815185815291519293600160a060020a03909116926000805160206116bb8339815191529281900390910190a35b6103c6565b60405133903480156108fc02916000818181858888f193505050501580156103c4573d6000803e3d6000fd5b505b6103f9565b60405133903480156108fc02916000818181858888f193505050501580156103f7573d6000803e3d6000fd5b505b505050005b34801561040a57600080fd5b50610413610a83565b60408051918252519081900360200190f35b34801561043157600080fd5b5061043a610a89565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561047457818101518382015260200161045c565b50505050905090810190601f1680156104a15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104bb57600080fd5b506104d3600160a060020a0360043516602435610b17565b604080519115158252519081900360200190f35b3480156104f357600080fd5b506104d3600435610b7d565b34801561050b57600080fd5b506104d3600435610ba0565b34801561052357600080fd5b50610413610bc3565b34801561053857600080fd5b50610413610bc8565b34801561054d57600080fd5b506104d3600160a060020a0360043516602435610bce565b34801561057157600080fd5b50604080516020600480358082013583810280860185019096528085526104d395369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750949750610c639650505050505050565b3480156105ff57600080fd5b506104d3600160a060020a0360043581169060243516604435610e84565b34801561062957600080fd5b506104d3600435611028565b34801561064157600080fd5b5061064a611078565b6040805160ff9092168252519081900360200190f35b34801561066c57600080fd5b50610675611081565b005b34801561068357600080fd5b506104136110a6565b34801561069857600080fd5b506104d3600160a060020a03600435166024356110ac565b3480156106bc57600080fd5b50610413600160a060020a03600435166110b4565b3480156106dd57600080fd5b506104d360043515156110cf565b3480156106f757600080fd5b506104d3600160a060020a0360043516611100565b34801561071857600080fd5b5061043a6111b5565b34801561072d57600080fd5b506104d3611210565b34801561074257600080fd5b50610413611219565b34801561075757600080fd5b506104d3600160a060020a036004351660243561121f565b34801561077b57600080fd5b50610413611324565b34801561079057600080fd5b506104d3600160a060020a036004351661132a565b3480156107b157600080fd5b506104d3600160a060020a0360043516602435151561133f565b3480156107d757600080fd5b506104d3600160a060020a036004351661139d565b3480156107f857600080fd5b506104136113d3565b34801561080d57600080fd5b50604080516020600480358082013583810280860185019096528085526104d395369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506113d99650505050505050565b34801561089b57600080fd5b50610413600160a060020a03600435166114b6565b3480156108bc57600080fd5b506104d36004356114c8565b3480156108d457600080fd5b506104d3600160a060020a03600435166024356114eb565b3480156108f857600080fd5b50604080516020600480358082013583810280860185019096528085526104d395369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375094975061153b9650505050505050565b34801561098657600080fd5b50610413600160a060020a0360043581169060243516611607565b3480156109ad57600080fd5b506104d3600435611632565b3480156109c557600080fd5b50610413600160a060020a0360043516611655565b3480156109e657600080fd5b506104d3600435611688565b3480156109fe57600080fd5b50610a076116ab565b60408051600160a060020a039092168252519081900360200190f35b600082820183811015610a3557600080fd5b8091505b5092915050565b600082821115610a4f57600080fd5b50900390565b600080831515610a685760009150610a39565b50828202828482811515610a7857fe5b0414610a3557600080fd5b600c5481565b6004805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b0f5780601f10610ae457610100808354040283529160200191610b0f565b820191906000526020600020905b815481529060010190602001808311610af257829003601f168201915b505050505081565b336000818152600160209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600354600090600160a060020a03163314610b9757600080fd5b50600e55600190565b600354600090600160a060020a03163314610bba57600080fd5b50600b55600190565b303190565b60075481565b600354600090600160a060020a03163314610be857600080fd5b600160a060020a0383161515610bfd57600080fd5b600160a060020a038316600090815260208190526040902054610c26908363ffffffff610a2316565b600160a060020a038416600090815260208190526040902055600254610c52908363ffffffff610a2316565b600281905560075550600192915050565b336000908152600860205260408120548190819081908190819060ff1615610c8a57600080fd5b336000908152600960205260409020544211610ca557600080fd5b8651885114610cb357600080fd5b8751945060008511610cc457600080fd5b60009350600092505b84831015610d1757610cfd8784815181101515610ce657fe5b60209081029091010151859063ffffffff610a2316565b9350610d1083600163ffffffff610a2316565b9250610ccd565b33600090815260208190526040902054841115610d3357600080fd5b600091505b84821015610e76578782815181101515610d4e57fe5b602090810290910101519050600160a060020a0381161515610d6f57600080fd5b610db08783815181101515610d8057fe5b6020908102909101810151600160a060020a0384166000908152918290526040909120549063ffffffff610a2316565b600160a060020a0382166000908152602081905260409020558651610e0290889084908110610ddb57fe5b6020908102909101810151336000908152918290526040909120549063ffffffff610a4016565b336000818152602081905260409020919091558751600160a060020a03831691906000805160206116bb833981519152908a9086908110610e3f57fe5b906020019060200201516040518082815260200191505060405180910390a3610e6f82600163ffffffff610a2316565b9150610d38565b506001979650505050505050565b600160a060020a03831660009081526008602052604081205460ff1615610eaa57600080fd5b336000908152600960205260409020544211610ec557600080fd5b600160a060020a0383161515610eda57600080fd5b600160a060020a038416600090815260208190526040902054821115610eff57600080fd5b600160a060020a0384166000908152600160209081526040808320338452909152902054821115610f2f57600080fd5b600160a060020a038416600090815260208190526040902054610f58908363ffffffff610a4016565b600160a060020a038086166000908152602081905260408082209390935590851681522054610f8d908363ffffffff610a2316565b600160a060020a03808516600090815260208181526040808320949094559187168152600182528281203382529091522054610fcf908363ffffffff610a4016565b600160a060020a03808616600081815260016020908152604080832033845282529182902094909455805186815290519287169391926000805160206116bb833981519152929181900390910190a35060019392505050565b600354600090600160a060020a0316331461104257600080fd5b604051339083156108fc029084906000818181858888f1935050505015801561106f573d6000803e3d6000fd5b50600192915050565b60065460ff1681565b600354600160a060020a0316331461109857600080fd5b600354600160a060020a0316ff5b600d5481565b600192915050565b600160a060020a031660009081526020819052604090205490565b600354600090600160a060020a031633146110e957600080fd5b50600a805460ff1916911515919091179055600190565b600354600090600160a060020a0316331461111a57600080fd5b600160a060020a038216151561112f57600080fd5b600354600160a060020a039081166000908152602081905260408082205492851682529020546111649163ffffffff610a2316565b600160a060020a039283166000818152602081905260408082209390935560038054909516815291822091909155825473ffffffffffffffffffffffffffffffffffffffff19161790915550600190565b6005805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b0f5780601f10610ae457610100808354040283529160200191610b0f565b600a5460ff1681565b600f5481565b3360009081526008602052604081205460ff161561123c57600080fd5b33600090815260096020526040902054421161125757600080fd5b600160a060020a038316151561126c57600080fd5b3360009081526020819052604090205482111561128857600080fd5b336000908152602081905260409020546112a8908363ffffffff610a4016565b3360009081526020819052604080822092909255600160a060020a038516815220546112da908363ffffffff610a2316565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233926000805160206116bb8339815191529281900390910190a350600192915050565b600b5481565b60086020526000908152604090205460ff1681565b600354600090600160a060020a0316331461135957600080fd5b600160a060020a038316151561136e57600080fd5b50600160a060020a0382166000908152600860205260409020805482151560ff19909116179055600192915050565b6000600160a060020a03821615156113b457600080fd5b50600160a060020a031660009081526008602052604090205460ff1690565b600e5481565b6003546000908190819081908190600160a060020a031633146113fb57600080fd5b855187511461140957600080fd5b865193506000841161141a57600080fd5b600092505b838310156114a957868381518110151561143557fe5b602090810290910101519150600160a060020a038216151561145657600080fd5b858381518110151561146457fe5b602090810291909101810151600160a060020a038416600090815260089092526040909120805460ff191682151517905590506114a2836001610a23565b925061141f565b5060019695505050505050565b60096020526000908152604090205481565b600354600090600160a060020a031633146114e257600080fd5b50600d55600190565b600354600090600160a060020a0316331461150557600080fd5b600160a060020a038316151561151a57600080fd5b50600160a060020a0391909116600090815260096020526040902055600190565b6003546000908190819081908190600160a060020a0316331461155d57600080fd5b855187511461156b57600080fd5b865193506000841161157c57600080fd5b600092505b838310156114a957868381518110151561159757fe5b602090810290910101519150600160a060020a03821615156115b857600080fd5b85838151811015156115c657fe5b6020908102909101810151600160a060020a038416600090815260099092526040909120819055905061160083600163ffffffff610a2316565b9250611581565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600354600090600160a060020a0316331461164c57600080fd5b50600f55600190565b6000600160a060020a038216151561166c57600080fd5b50600160a060020a031660009081526009602052604090205490565b600354600090600160a060020a031633146116a257600080fd5b50600c55600190565b600354600160a060020a0316815600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820f67524c08475d3877944ff214a019fa6f35990cac43c34583252f8aaf92bdada0029"
}