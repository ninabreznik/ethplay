{
  "address": "0xf970b8e36e23f7fc3fd752eea86f8be8d83375a6",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "RipioCreditNetwork Token",
  "contractName": "RCNToken",
  "compilerVersion": "v0.4.15+commit.bbb8e64f",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-10-24\n*/\n\npragma solidity ^0.4.11;\n\ncontract Crowdsale {\n    function buyTokens(address _recipient) payable;\n}\n\ncontract CapWhitelist {\n    address public owner;\n    mapping (address => uint256) public whitelist;\n\n    event Set(address _address, uint256 _amount);\n\n    function CapWhitelist() {\n        owner = msg.sender;\n        // Set in prod\n    }\n\n    function destruct() {\n        require(msg.sender == owner);\n        selfdestruct(owner);\n    }\n\n    function setWhitelisted(address _address, uint256 _amount) {\n        require(msg.sender == owner);\n        setWhitelistInternal(_address, _amount);\n    }\n\n    function setWhitelistInternal(address _address, uint256 _amount) private {\n        whitelist[_address] = _amount;\n        Set(_address, _amount);\n    }\n}\n\ncontract Token {\n    uint256 public totalSupply;\n    function balanceOf(address _owner) constant returns (uint256 balance);\n    function transfer(address _to, uint256 _value) returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n    function approve(address _spender, uint256 _value) returns (bool success);\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n\n/*  ERC 20 token */\ncontract StandardToken is Token {\n    using SafeMath for uint256;\n    function transfer(address _to, uint256 _value) returns (bool success) {\n      if (balances[msg.sender] >= _value) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value) {\n        balances[_to] = balances[_to].add(_value);\n        balances[_from] = balances[_from].sub(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender,  uint256 _value) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n\n    function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\n      allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n      Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n      return true;\n    }\n\n    function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\n      uint oldValue = allowed[msg.sender][_spender];\n      if (_subtractedValue > oldValue) {\n        allowed[msg.sender][_spender] = 0;\n      } else {\n        allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n      }\n      Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n      return true;\n    }\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n}\n\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract MintableToken is StandardToken, Ownable {\n  using SafeMath for uint256;\n  event Mint(address indexed to, uint256 amount);\n  event MintFinished();\n\n  bool public mintingFinished = false;\n\n  modifier canMint() {\n    require(!mintingFinished);\n    _;\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   */\n  function mint(address _to, uint256 _amount) onlyOwner canMint public {\n    totalSupply = totalSupply.add(_amount);\n    balances[_to] = balances[_to].add(_amount);\n    Mint(_to, _amount);\n    Transfer(0x0, _to, _amount);\n  }\n\n  /**\n   * @dev Function to stop minting new tokens.\n   */\n  function finishMinting() onlyOwner public {\n    mintingFinished = true;\n    MintFinished();\n  }\n}\ncontract RCNToken is MintableToken {\n    string public constant name = \"Ripio Credit Network Token\";\n    string public constant symbol = \"RCN\";\n    uint8 public constant decimals = 18;\n    string public version = \"1.0\";\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "606060409081526003805460a060020a60ff02191690558051908101604052600381527f312e3000000000000000000000000000000000000000000000000000000000006020820152600490805161005b92916020019061007e565b505b60038054600160a060020a03191633600160a060020a03161790555b61011e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100bf57805160ff19168380011785556100ec565b828001600101855582156100ec579182015b828111156100ec5782518255916020019190600101906100d1565b5b506100f99291506100fd565b5090565b61011b91905b808211156100f95760008155600101610103565b5090565b90565b610d988061012d6000396000f300606060405236156100ee5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b81146100f357806306fdde031461011a578063095ea7b3146101a557806318160ddd146101db57806323b872dd14610200578063313ce5671461023c57806340c10f191461026557806354fd4d5014610289578063661884631461031457806370a082311461034a5780637d64bcb41461037b5780638da5cb5b1461039057806395d89b41146103bf578063a9059cbb1461044a578063d73dd62314610480578063dd62ed3e146104b6578063f2fde38b146104ed575b600080fd5b34156100fe57600080fd5b61010661050e565b604051901515815260200160405180910390f35b341561012557600080fd5b61012d61052f565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016a5780820151818401525b602001610151565b50505050905090810190601f1680156101975780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101b057600080fd5b610106600160a060020a0360043516602435610566565b604051901515815260200160405180910390f35b34156101e657600080fd5b6101ee6105d3565b60405190815260200160405180910390f35b341561020b57600080fd5b610106600160a060020a03600435811690602435166044356105d9565b604051901515815260200160405180910390f35b341561024757600080fd5b61024f610746565b60405160ff909116815260200160405180910390f35b341561027057600080fd5b610287600160a060020a036004351660243561074b565b005b341561029457600080fd5b61012d610864565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016a5780820151818401525b602001610151565b50505050905090810190601f1680156101975780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561031f57600080fd5b610106600160a060020a0360043516602435610902565b604051901515815260200160405180910390f35b341561035557600080fd5b6101ee600160a060020a03600435166109fe565b60405190815260200160405180910390f35b341561038657600080fd5b610287610a1d565b005b341561039b57600080fd5b6103a3610a9d565b604051600160a060020a03909116815260200160405180910390f35b34156103ca57600080fd5b61012d610aac565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016a5780820151818401525b602001610151565b50505050905090810190601f1680156101975780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561045557600080fd5b610106600160a060020a0360043516602435610ae3565b604051901515815260200160405180910390f35b341561048b57600080fd5b610106600160a060020a0360043516602435610bd0565b604051901515815260200160405180910390f35b34156104c157600080fd5b6101ee600160a060020a0360043581169060243516610c75565b60405190815260200160405180910390f35b34156104f857600080fd5b610287600160a060020a0360043516610ca2565b005b60035474010000000000000000000000000000000000000000900460ff1681565b60408051908101604052601a81527f526970696f20437265646974204e6574776f726b20546f6b656e000000000000602082015281565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60005481565b600160a060020a0383166000908152600160205260408120548290108015906106295750600160a060020a0380851660009081526002602090815260408083203390941683529290522054829010155b1561073a57600160a060020a038316600090815260016020526040902054610657908363ffffffff610d3b16565b600160a060020a03808516600090815260016020526040808220939093559086168152205461068c908363ffffffff610d5516565b600160a060020a03808616600090815260016020908152604080832094909455600281528382203390931682529190915220546106cf908363ffffffff610d5516565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600161073e565b5060005b5b9392505050565b601281565b60035433600160a060020a0390811691161461076657600080fd5b60035474010000000000000000000000000000000000000000900460ff161561078e57600080fd5b6000546107a1908263ffffffff610d3b16565b6000908155600160a060020a0383168152600160205260409020546107cc908263ffffffff610d3b16565b600160a060020a0383166000818152600160205260409081902092909255907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859083905190815260200160405180910390a281600160a060020a031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405190815260200160405180910390a35b5b5b5050565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108fa5780601f106108cf576101008083540402835291602001916108fa565b820191906000526020600020905b8154815290600101906020018083116108dd57829003601f168201915b505050505081565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120548083111561095f57600160a060020a033381166000908152600260209081526040808320938816835292905290812055610996565b61096f818463ffffffff610d5516565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a3600191505b5092915050565b600160a060020a0381166000908152600160205260409020545b919050565b60035433600160a060020a03908116911614610a3857600080fd5b6003805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790557fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a15b5b565b600354600160a060020a031681565b60408051908101604052600381527f52434e0000000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a033316600090815260016020526040812054829010610bc157600160a060020a033316600090815260016020526040902054610b2c908363ffffffff610d5516565b600160a060020a033381166000908152600160205260408082209390935590851681522054610b61908363ffffffff610d3b16565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060016105cd565b5060006105cd565b5b92915050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610c08908363ffffffff610d3b16565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a35060015b92915050565b600160a060020a038083166000908152600260209081526040808320938516835292905220545b92915050565b60035433600160a060020a03908116911614610cbd57600080fd5b600160a060020a0381161515610cd257600080fd5b600354600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b600082820183811015610d4a57fe5b8091505b5092915050565b600082821115610d6157fe5b508082035b929150505600a165627a7a72305820ad4ba0910497c3181968ede46c4edf45019a3c59b10d8a0c76df8286b447b5be0029"
}