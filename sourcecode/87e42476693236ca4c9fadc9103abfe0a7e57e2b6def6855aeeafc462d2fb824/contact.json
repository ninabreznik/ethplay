{
  "address": "0x2e8c6bbe8e3aa834ef5a851b2cdfc52403d61b87",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Streamity",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-31\n*/\n\npragma solidity 0.4.24;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev Total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_value <= balances[msg.sender]);\n    require(_to != address(0));\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n}\n\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract BurnableToken is BasicToken {\n\n  event Burn(address indexed burner, uint256 value);\n\n  /**\n   * @dev Burns a specific amount of tokens.\n   * @param _value The amount of token to be burned.\n   */\n  function burn(uint256 _value) public {\n    _burn(msg.sender, _value);\n  }\n\n  function _burn(address _who, uint256 _value) internal {\n    require(_value <= balances[_who]);\n    // no need to require value <= totalSupply, since that would imply the\n    // sender's balance is greater than the totalSupply, which *should* be an assertion failure\n\n    balances[_who] = balances[_who].sub(_value);\n    totalSupply_ = totalSupply_.sub(_value);\n    emit Burn(_who, _value);\n    emit Transfer(_who, address(0), _value);\n  }\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/issues/20\n * Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BurnableToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    returns (bool)\n  {\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n    require(_to != address(0));\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(\n    address _spender,\n    uint256 _addedValue\n  )\n    public\n    returns (bool)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(\n    address _spender,\n    uint256 _subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    uint256 oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue >= oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n/**\n * @title Standard Burnable Token\n * @dev Adds burnFrom method to ERC20 implementations\n */\ncontract StandardBurnableToken is StandardToken {\n\n  /**\n   * @dev Burns a specific amount of tokens from the target address and decrements allowance\n   * @param _from address The address which you want to send tokens from\n   * @param _value uint256 The amount of token to be burned\n   */\n  function burnFrom(address _from, uint256 _value) public {\n    require(_value <= allowed[_from][msg.sender]);\n    // Should https://github.com/OpenZeppelin/zeppelin-solidity/issues/707 be accepted,\n    // this function needs to emit an event with the updated approval.\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    _burn(_from, _value);\n  }\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n/**\n * @title Pausable token\n * @dev StandardToken modified with pausable transfers.\n **/\ncontract PausableToken is StandardBurnableToken, Pausable {\n\n  function transfer(\n    address _to,\n    uint256 _value\n  )\n    public\n    whenNotPaused\n    returns (bool)\n  {\n    return super.transfer(_to, _value);\n  }\n\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    whenNotPaused\n    returns (bool)\n  {\n    return super.transferFrom(_from, _to, _value);\n  }\n\n  function approve(\n    address _spender,\n    uint256 _value\n  )\n    public\n    whenNotPaused\n    returns (bool)\n  {\n    return super.approve(_spender, _value);\n  }\n\n  function increaseApproval(\n    address _spender,\n    uint _addedValue\n  )\n    public\n    whenNotPaused\n    returns (bool success)\n  {\n    return super.increaseApproval(_spender, _addedValue);\n  }\n\n  function decreaseApproval(\n    address _spender,\n    uint _subtractedValue\n  )\n    public\n    whenNotPaused\n    returns (bool success)\n  {\n    return super.decreaseApproval(_spender, _subtractedValue);\n  }\n}\n\ncontract Streamity is PausableToken {\n    \n    string public constant name = \"Streamity\";\n    string public constant symbol = \"STM\";\n    uint8 public constant decimals = 18;\n\n    uint256 public constant INITIAL_SUPPLY = 180000000 * (10 ** uint256(decimals));\n\n\n    address public tokenOwner = 0x464398aC8B96DdAd7e22AC37147822E1c69293Cb;\n    \n    address public reserveFund = 0x84726199Ac1579684d58F4A47C4c85f2C45B5a11;\n    address public advisersPartners = 0xa2C2f149e4b3EC671a61EAc9F12eAF2489e0Fb10; \n    \n    address public teamWallet1 = 0xbBB9E0605f0BC7Af1B7238bAC2807a3A8DCb54b5; \n    \n    address public teamWallet2 = 0xd69824B62D26E7f2316812b8c59F36328196Ca13; \n    \n    \n    \n    constructor () public {\n        totalSupply_ = INITIAL_SUPPLY;\n        \n        balances[tokenOwner] = 129780000 ether;\n        balances[address(this)] = 50220000 ether;\n        \n        emit Transfer(address(0), tokenOwner, 129780000 ether);\n        emit Transfer(address(0), address(this), 50220000 ether);\n    }\n    \n    uint teamObligationPart1 = 4650000 ether;\n    uint advisersPartnersObligation = 3720000 ether;\n    \n    function ReleaseTokenForReserveFund () public onlyOwner {\n        // 25 september 2018 y.\n        require(now >= 1537833600);\n        if (transfer(advisersPartners, advisersPartnersObligation)) {\n            advisersPartnersObligation = 0;\n        }\n        \n        if (transfer(teamWallet1, teamObligationPart1)) {\n            teamObligationPart1 = 0;\n        }\n    }\n    \n    uint teamObligationPart2 = 23250000 ether;\n    uint reserveFundObligation = 18600000 ether;\n    \n    function ReleaseTokenForTeamAdvisersPartners () public onlyOwner {\n        // 12 march 2019\n        require(now >= 1552348800);\n        \n        if (transfer(reserveFund, reserveFundObligation)) {\n            reserveFundObligation = 0;\n        }\n        \n        if (transfer(teamWallet2, teamObligationPart2)) {\n            teamObligationPart2 = 0;\n        }\n    }\n    \n    function sendTokens(address _to, uint _value) public onlyOwner {\n        require(_to != address(0));\n        require(_value <= balances[tokenOwner]);\n        balances[tokenOwner] = balances[tokenOwner].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(tokenOwner, _to, _value);\n    }\n}",
  "bytecode": "60806040526003805460a060020a60ff021916905560048054600160a060020a031990811673464398ac8b96ddad7e22ac37147822e1c69293cb179091556005805482167384726199ac1579684d58f4a47c4c85f2c45b5a1117905560068054821673a2c2f149e4b3ec671a61eac9f12eaf2489e0fb1017905560078054821673bbb9e0605f0bc7af1b7238bac2807a3a8dcb54b51790556008805490911673d69824b62d26e7f2316812b8c59f36328196ca131790556a03d8ad014e6c1dc64000006009556a0313bd9aa5234b05000000600a556a133b6106881c94df400000600b556a0f62b40539b07719000000600c553480156100fe57600080fd5b5060038054600160a060020a031916331790556a94e47b8d6817153400000060015560048054600160a060020a039081166000908152602081815260408083206a6b59fbe5b2baa070800000908190553084528184206a298a7fa7b55c74c3800000905594548151958652905193169391926000805160206112ed8339815191529281900390910190a3604080516a298a7fa7b55c74c38000008152905130916000916000805160206112ed8339815191529181900360200190a3611125806101c86000396000f3006080604052600436106101695763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305ab421d811461016e57806306fdde0314610194578063095ea7b31461021e57806313ca43a01461025657806318160ddd1461028757806323b872dd146102ae5780632ff2e9dc146102d8578063302c46ba146102ed578063313ce567146103025780633f4ba83a1461032d57806342966c6814610342578063451f06011461035a5780635c975abb1461036f578063661884631461038457806370a08231146103a8578063715018a6146103c957806379cc6790146103de5780638456cb59146104025780638da5cb5b1461041757806395d89b411461042c578063a3e6761014610441578063a79ac3be14610456578063a9059cbb1461046b578063b7f92b711461048f578063c384b170146104a4578063d73dd623146104b9578063dd62ed3e146104dd578063f2fde38b14610504575b600080fd5b34801561017a57600080fd5b50610192600160a060020a0360043516602435610525565b005b3480156101a057600080fd5b506101a9610624565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e35781810151838201526020016101cb565b50505050905090810190601f1680156102105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022a57600080fd5b50610242600160a060020a036004351660243561065b565b604080519115158252519081900360200190f35b34801561026257600080fd5b5061026b610686565b60408051600160a060020a039092168252519081900360200190f35b34801561029357600080fd5b5061029c610695565b60408051918252519081900360200190f35b3480156102ba57600080fd5b50610242600160a060020a036004358116906024351660443561069b565b3480156102e457600080fd5b5061029c6106c8565b3480156102f957600080fd5b506101926106d7565b34801561030e57600080fd5b50610317610749565b6040805160ff9092168252519081900360200190f35b34801561033957600080fd5b5061019261074e565b34801561034e57600080fd5b506101926004356107c6565b34801561036657600080fd5b5061026b6107d3565b34801561037b57600080fd5b506102426107e2565b34801561039057600080fd5b50610242600160a060020a03600435166024356107f2565b3480156103b457600080fd5b5061029c600160a060020a0360043516610816565b3480156103d557600080fd5b50610192610831565b3480156103ea57600080fd5b50610192600160a060020a036004351660243561089f565b34801561040e57600080fd5b50610192610935565b34801561042357600080fd5b5061026b6109b2565b34801561043857600080fd5b506101a96109c1565b34801561044d57600080fd5b5061026b6109f8565b34801561046257600080fd5b50610192610a07565b34801561047757600080fd5b50610242600160a060020a0360043516602435610a78565b34801561049b57600080fd5b5061026b610a9c565b3480156104b057600080fd5b5061026b610aab565b3480156104c557600080fd5b50610242600160a060020a0360043516602435610aba565b3480156104e957600080fd5b5061029c600160a060020a0360043581169060243516610ade565b34801561051057600080fd5b50610192600160a060020a0360043516610b09565b600354600160a060020a0316331461053c57600080fd5b600160a060020a038216151561055157600080fd5b600454600160a060020a031660009081526020819052604090205481111561057857600080fd5b600454600160a060020a03166000908152602081905260409020546105a3908263ffffffff610b2916565b600454600160a060020a0390811660009081526020819052604080822093909355908416815220546105db908263ffffffff610b3b16565b600160a060020a0380841660008181526020818152604091829020949094556004548151868152915192949316926000805160206110da83398151915292918290030190a35050565b60408051808201909152600981527f53747265616d6974790000000000000000000000000000000000000000000000602082015281565b60035460009060a060020a900460ff161561067557600080fd5b61067f8383610b4e565b9392505050565b600754600160a060020a031681565b60015490565b60035460009060a060020a900460ff16156106b557600080fd5b6106c0848484610bb4565b949350505050565b6a94e47b8d6817153400000081565b600354600160a060020a031633146106ee57600080fd5b635c86f6804210156106ff57600080fd5b600554600c5461071891600160a060020a031690610a78565b15610723576000600c555b600854600b5461073c91600160a060020a031690610a78565b15610747576000600b555b565b601281565b600354600160a060020a0316331461076557600080fd5b60035460a060020a900460ff16151561077d57600080fd5b6003805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b6107d03382610d17565b50565b600654600160a060020a031681565b60035460a060020a900460ff1681565b60035460009060a060020a900460ff161561080c57600080fd5b61067f8383610e06565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a0316331461084857600080fd5b600354604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26003805473ffffffffffffffffffffffffffffffffffffffff19169055565b600160a060020a03821660009081526002602090815260408083203384529091529020548111156108cf57600080fd5b600160a060020a0382166000908152600260209081526040808320338452909152902054610903908263ffffffff610b2916565b600160a060020a03831660009081526002602090815260408083203384529091529020556109318282610d17565b5050565b600354600160a060020a0316331461094c57600080fd5b60035460a060020a900460ff161561096357600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600354600160a060020a031681565b60408051808201909152600381527f53544d0000000000000000000000000000000000000000000000000000000000602082015281565b600454600160a060020a031681565b600354600160a060020a03163314610a1e57600080fd5b635ba97a80421015610a2f57600080fd5b600654600a54610a4891600160a060020a031690610a78565b15610a53576000600a555b600754600954610a6c91600160a060020a031690610a78565b15610747576000600955565b60035460009060a060020a900460ff1615610a9257600080fd5b61067f8383610ef5565b600554600160a060020a031681565b600854600160a060020a031681565b60035460009060a060020a900460ff1615610ad457600080fd5b61067f8383610fc2565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a03163314610b2057600080fd5b6107d08161105b565b600082821115610b3557fe5b50900390565b81810182811015610b4857fe5b92915050565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600160a060020a038316600090815260208190526040812054821115610bd957600080fd5b600160a060020a0384166000908152600260209081526040808320338452909152902054821115610c0957600080fd5b600160a060020a0383161515610c1e57600080fd5b600160a060020a038416600090815260208190526040902054610c47908363ffffffff610b2916565b600160a060020a038086166000908152602081905260408082209390935590851681522054610c7c908363ffffffff610b3b16565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610cbe908363ffffffff610b2916565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391926000805160206110da833981519152929181900390910190a35060019392505050565b600160a060020a038216600090815260208190526040902054811115610d3c57600080fd5b600160a060020a038216600090815260208190526040902054610d65908263ffffffff610b2916565b600160a060020a038316600090815260208190526040902055600154610d91908263ffffffff610b2916565b600155604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516916000805160206110da8339815191529181900360200190a35050565b336000908152600260209081526040808320600160a060020a0386168452909152812054808310610e5a57336000908152600260209081526040808320600160a060020a0388168452909152812055610e8f565b610e6a818463ffffffff610b2916565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b33600090815260208190526040812054821115610f1157600080fd5b600160a060020a0383161515610f2657600080fd5b33600090815260208190526040902054610f46908363ffffffff610b2916565b3360009081526020819052604080822092909255600160a060020a03851681522054610f78908363ffffffff610b3b16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233926000805160206110da8339815191529281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610ff6908363ffffffff610b3b16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a038116151561107057600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582058b44c3a16ae10453bbb26defde17ac0d6823164390855da44836122bcea624c0029ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
  "constructorArguments": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
}