{
  "address": "0x651a09d8009a1bb132725025d6374dbe1f2a44f7",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "FixedSupplyToken",
  "compilerVersion": "v0.5.4+commit.9549d8ff",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-14\n*/\n\npragma solidity ^0.5.4;\n\n// ----------------------------------------------------------------------------\n// BokkyPooBah's Fixed Supply Token ðŸ‘Š + Factory v1.10\n//\n// A factory to conveniently deploy your own source code verified fixed supply\n// token contracts\n//\n// Factory deployment address: 0xA550114ee3688601006b8b9f25e64732eF774934\n//\n// https://github.com/bokkypoobah/FixedSupplyTokenFactory\n//\n// Enjoy. (c) BokkyPooBah / Bok Consulting Pty Ltd 2019. The MIT Licence.\n// ----------------------------------------------------------------------------\n\n\n// ----------------------------------------------------------------------------\n// Safe maths\n// ----------------------------------------------------------------------------\nlibrary SafeMath {\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n}\n\n\n// ----------------------------------------------------------------------------\n// Owned contract, with token recovery\n// ----------------------------------------------------------------------------\ncontract Owned {\n    address payable public owner;\n    address public newOwner;\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function init(address _owner) public {\n        require(owner == address(0));\n        owner = address(uint160(_owner));\n    }\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        emit OwnershipTransferred(owner, newOwner);\n        owner = address(uint160(newOwner));\n        newOwner = address(0);\n    }\n    function recoverTokens(address token, uint tokens) public onlyOwner {\n        if (token == address(0)) {\n            owner.transfer((tokens == 0 ? address(this).balance : tokens));\n        } else {\n            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);\n        }\n    }\n}\n\n\n// ----------------------------------------------------------------------------\n// ApproveAndCall Fallback\n// NOTE for contracts implementing this interface:\n// 1. An error must be thrown if there are errors executing `transferFrom(...)`\n// 2. The calling token contract must be checked to prevent malicious behaviour\n// ----------------------------------------------------------------------------\ncontract ApproveAndCallFallback {\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\n}\n\n\n// ----------------------------------------------------------------------------\n// ERC Token Standard #20 Interface\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n// ----------------------------------------------------------------------------\ncontract ERC20Interface {\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\n    function totalSupply() public view returns (uint);\n    function balanceOf(address tokenOwner) public view returns (uint balance);\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n}\n\n\n// ----------------------------------------------------------------------------\n// Token Interface = ERC20 + symbol + name + decimals + approveAndCall\n// ----------------------------------------------------------------------------\ncontract TokenInterface is ERC20Interface {\n    function symbol() public view returns (string memory);\n    function name() public view returns (string memory);\n    function decimals() public view returns (uint8);\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success);\n}\n\n\n// ----------------------------------------------------------------------------\n// FixedSupplyToken ðŸ‘Š = ERC20 + symbol + name + decimals + approveAndCall\n// ----------------------------------------------------------------------------\ncontract FixedSupplyToken is TokenInterface, Owned {\n    using SafeMath for uint;\n\n    string _symbol;\n    string  _name;\n    uint8 _decimals;\n    uint _totalSupply;\n\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n\n    function init(address tokenOwner, string memory symbol, string memory name, uint8 decimals, uint fixedSupply) public {\n        super.init(tokenOwner);\n        _symbol = symbol;\n        _name = name;\n        _decimals = decimals;\n        _totalSupply = fixedSupply;\n        balances[tokenOwner] = _totalSupply;\n        emit Transfer(address(0), tokenOwner, _totalSupply);\n    }\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n    function name() public view returns (string memory) {\n        return _name;\n    }\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n    function totalSupply() public view returns (uint) {\n        return _totalSupply.sub(balances[address(0)]);\n    }\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\n        return balances[tokenOwner];\n    }\n    function transfer(address to, uint tokens) public returns (bool success) {\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(msg.sender, to, tokens);\n        return true;\n    }\n    function approve(address spender, uint tokens) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n        balances[from] = balances[from].sub(tokens);\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(from, to, tokens);\n        return true;\n    }\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\n        return allowed[tokenOwner][spender];\n    }\n    // NOTE Only use this call with a trusted spender contract\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        ApproveAndCallFallback(spender).receiveApproval(msg.sender, tokens, address(this), data);\n        return true;\n    }\n    function () external payable {\n        revert();\n    }\n}\n\n\n// ----------------------------------------------------------------------------\n// BokkyPooBah's Fixed Supply Token ðŸ‘Š Factory\n//\n// Notes:\n//   * The `newContractAddress` deprecation is just advisory\n//   * A fee equal to or above `minimumFee` must be sent with the\n//   `deployTokenContract(...)` call\n//\n// Execute `deployTokenContract(...)` with the following parameters to deploy\n// your very own FixedSupplyToken contract:\n//   symbol         symbol\n//   name           name\n//   decimals       number of decimal places for the token contract\n//   totalSupply    the fixed token total supply\n//\n// For example, deploying a FixedSupplyToken contract with a `totalSupply`\n// of 1,000.000000000000000000 tokens:\n//   symbol         \"ME\"\n//   name           \"My Token\"\n//   decimals       18\n//   initialSupply  10000000000000000000000 = 1,000.000000000000000000 tokens\n//\n// The TokenDeployed() event is logged with the following parameters:\n//   owner          the account that execute this transaction\n//   token          the newly deployed FixedSupplyToken address\n//   symbol         symbol\n//   name           name\n//   decimals       number of decimal places for the token contract\n//   totalSupply    the fixed token total supply\n// ----------------------------------------------------------------------------\ncontract BokkyPooBahsFixedSupplyTokenFactory is Owned {\n    using SafeMath for uint;\n\n    address public newAddress;\n    uint public minimumFee = 0.1 ether;\n    mapping(address => bool) public isChild;\n    address[] public children;\n\n    event FactoryDeprecated(address _newAddress);\n    event MinimumFeeUpdated(uint oldFee, uint newFee);\n    event TokenDeployed(address indexed owner, address indexed token, string symbol, string name, uint8 decimals, uint totalSupply);\n\n    constructor () public {\n        super.init(msg.sender);\n    }\n    function numberOfChildren() public view returns (uint) {\n        return children.length;\n    }\n    function deprecateFactory(address _newAddress) public onlyOwner {\n        require(newAddress == address(0));\n        emit FactoryDeprecated(_newAddress);\n        newAddress = _newAddress;\n    }\n    function setMinimumFee(uint _minimumFee) public onlyOwner {\n        emit MinimumFeeUpdated(minimumFee, _minimumFee);\n        minimumFee = _minimumFee;\n    }\n    function deployTokenContract(string memory symbol, string memory name, uint8 decimals, uint totalSupply) public payable returns (FixedSupplyToken token) {\n        require(msg.value >= minimumFee);\n        require(decimals <= 27);\n        require(totalSupply > 0);\n        token = new FixedSupplyToken();\n        token.init(msg.sender, symbol, name, decimals, totalSupply);\n        isChild[address(token)] = true;\n        children.push(address(token));\n        emit TokenDeployed(owner, address(token), symbol, name, decimals, totalSupply);\n        if (msg.value > 0) {\n            owner.transfer(msg.value);\n        }\n    }\n    function () external payable {\n        revert();\n    }\n}",
  "bytecode": ""
}