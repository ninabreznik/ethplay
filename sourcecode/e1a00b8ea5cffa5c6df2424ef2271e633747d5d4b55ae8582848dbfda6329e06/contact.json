{
  "address": "0xe650a4ed8c64174201204fd4d628a98661048fc4",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "RobetTest",
  "compilerVersion": "v0.5.1+commit.c8a2cb62",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-06-06\n*/\n\npragma solidity ^0.5.1;\n\ninterface token  {\n    function transfer (address receiver, uint amount) external;\n}\n\ncontract RobetTest {\n    \n    address[] public tokenMaster;\n    \n    mapping (bytes32 => address payable) public betToAddress;\n    \n    mapping (bytes32 => address payable) public betToTokenAddress;\n    \n    mapping (bytes32 => uint256) public betToValue;\n    \n    mapping (bytes32 => bytes32) public betToWinners;\n\n    /**\n     * Constructor function\n     */\n    constructor() public {\n        tokenMaster.push(0xF3A2540ad5244899b3512cA5A09e369e8A9f7949);\n        tokenMaster.push(0xCd7d1EDeD168a03C74427915c7c4924b28015734);\n        tokenMaster.push(0xd894390fF726bD3099803E89D4607cFDC02866D2);\n    }\n\n    function sendToken(address addr, uint256 amount, token tokenReward) private returns (bool success) {\n        \n        for(uint c=0;c<tokenMaster.length;c++){\n            if (tokenMaster[c] == msg.sender) {\n                tokenReward.transfer(addr, amount);\n                return true;\n            }\n        }\n        \n        return false;\n    } \n\n    function insertBet(bytes32 bid, address payable addr, uint256 _value, address payable tokenAddress) public returns (bool success) {\n        betToAddress[bid] = addr;\n        betToValue[bid] = _value;\n        betToTokenAddress[bid] = tokenAddress;\n        return true;\n    }\n    \n    function signal(bytes32 bid, bytes32 result) public returns (bool success) {\n        betToWinners[bid] = result;\n        address payable addr = (betToAddress[bid]);\n        \n        if (betToTokenAddress[bid] != address(0x0)){\n            sendToken(addr, betToValue[bid], token(betToTokenAddress[bid]));\n        }else{\n            addr.send(betToValue[bid]);\n        }\n        \n        return true;\n    }\n    \n    function () payable  external {}\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"bid\",\"type\":\"bytes32\"},{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"insertBet\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"betToValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenMaster\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"bid\",\"type\":\"bytes32\"},{\"name\":\"result\",\"type\":\"bytes32\"}],\"name\":\"signal\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"betToTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"betToWinners\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"betToAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]",
  "bytecode": "608060405234801561001057600080fd5b50600073f3a2540ad5244899b3512ca5a09e369e8a9f794990806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600073cd7d1eded168a03c74427915c7c4924b2801573490806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600073d894390ff726bd3099803e89d4607cfdc02866d290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061081a8061018e6000396000f3fe60806040526004361061007d576000357c01000000000000000000000000000000000000000000000000000000009004806345df23201461007f5780634ae051ef1461011c578063756e22601461016b5780638819fe8d146101e6578063af48b32114610243578063c5753263146102be578063e2b0a66e1461030d575b005b34801561008b57600080fd5b50610102600480360360808110156100a257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610388565b604051808215151515815260200191505060405180910390f35b34801561012857600080fd5b506101556004803603602081101561013f57600080fd5b8101908080359060200190929190505050610452565b6040518082815260200191505060405180910390f35b34801561017757600080fd5b506101a46004803603602081101561018e57600080fd5b810190808035906020019092919050505061046a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f257600080fd5b506102296004803603604081101561020957600080fd5b8101908080359060200190929190803590602001909291905050506104a8565b604051808215151515815260200191505060405180910390f35b34801561024f57600080fd5b5061027c6004803603602081101561026657600080fd5b810190808035906020019092919050505061060f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ca57600080fd5b506102f7600480360360208110156102e157600080fd5b8101908080359060200190929190505050610642565b6040518082815260200191505060405180910390f35b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b810190808035906020019092919050505061065a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000836001600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826003600087815260200190815260200160002081905550816002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050949350505050565b60036020528060005260406000206000915090505481565b60008181548110151561047957fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600460008581526020019081526020016000208190555060006001600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff166002600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156105ba576105b48160036000878152602001908152602001600020546002600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661068d565b50610604565b8073ffffffffffffffffffffffffffffffffffffffff166108fc60036000878152602001908152602001600020549081150290604051600060405180830381858888f19350505050505b600191505092915050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090505b6000805490508110156107e1573373ffffffffffffffffffffffffffffffffffffffff166000828154811015156106c857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107d4578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156107b257600080fd5b505af11580156107c6573d6000803e3d6000fd5b5050505060019150506107e7565b8080600101915050610695565b50600090505b939250505056fea165627a7a72305820dc558a63abdfdfa2284c2672304485704aac31e360f8882d1dbbf8257e43e1f30029"
}