{
  "address": "0x6a5018ffbba251d6bd0c9aab62c2a205ae941a1b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "AirDropContract",
  "compilerVersion": "v0.4.20+commit.3155dd80",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-01\n*/\n\npragma solidity ^0.4.20;\n\n/// @title kryptono exchange AirDropContract for KNOW token\n/// @author Trong Cau Ta <trongcau[emailÂ protected]>\n/// For more information, please visit kryptono.exchange\n\n/// @title ERC20\ncontract ERC20 {\n    uint public totalSupply;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    function balanceOf(address who) view public returns (uint256);\n    function allowance(address owner, address spender) view public returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n}\n\ncontract AirDropContract {\n\n    event AirDropped(address addr, uint amount);\n    address public owner = 0x0080dc5b0d72E5C979bb6C4E04ac97E8995b27d5Af;\n\n    function drop(\n        address tokenAddress,\n        address[] recipients,\n        uint256[] amounts) public {\n        require(msg.sender == owner);\n        require(tokenAddress != 0x0);\n        require(amounts.length == recipients.length);\n\n        ERC20 token = ERC20(tokenAddress);\n\n        uint balance = token.balanceOf(msg.sender);\n        uint allowance = token.allowance(msg.sender, address(this));\n        uint available = balance > allowance ? allowance : balance;\n\n        for (uint i = 0; i < recipients.length; i++) {\n            require(available >= amounts[i]);\n            if (isQualitifiedAddress(\n                recipients[i]\n            )) {\n                available -= amounts[i];\n                require(token.transferFrom(msg.sender, recipients[i], amounts[i]));\n\n                AirDropped(recipients[i], amounts[i]);\n            }\n        }\n    }\n\n    function isQualitifiedAddress(address addr)\n        public\n        view\n        returns (bool result)\n    {\n        result = addr != 0x0 && addr != msg.sender && !isContract(addr);\n    }\n\n    function isContract(address addr) internal view returns (bool) {\n        uint size;\n        assembly { size := extcodesize(addr) }\n        return size > 0;\n    }\n\n    function () payable public {\n        revert();\n    }\n    \n    // withdraw any ERC20 token in this contract to owner\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public returns (bool success) {\n        return ERC20(tokenAddress).transfer(owner, tokens);\n    }\n}",
  "bytecode": "606060405260008054600160a060020a0319167380dc5b0d72e5c979bb6c4e04ac97e8995b27d5af179055341561003557600080fd5b61056c806100446000396000f3006060604052600436106100485763ffffffff60e060020a6000350416637da5efc8811461004d5780638da5cb5b146100ec5780639157e5561461011b578063dc39d06d1461014e575b600080fd5b341561005857600080fd5b6100ea60048035600160a060020a03169060446024803590810190830135806020808202016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284375094965061017095505050505050565b005b34156100f757600080fd5b6100ff610461565b604051600160a060020a03909116815260200160405180910390f35b341561012657600080fd5b61013a600160a060020a0360043516610470565b604051901515815260200160405180910390f35b341561015957600080fd5b61013a600160a060020a03600435166024356104b4565b60008054819081908190819033600160a060020a0390811691161461019457600080fd5b600160a060020a03881615156101a957600080fd5b86518651146101b757600080fd5b87945084600160a060020a03166370a082313360006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561021157600080fd5b6102c65a03f1151561022257600080fd5b5050506040518051945050600160a060020a03851663dd62ed3e333060006040516020015260405160e060020a63ffffffff8516028152600160a060020a03928316600482015291166024820152604401602060405180830381600087803b151561028c57600080fd5b6102c65a03f1151561029d57600080fd5b50505060405180519350508284116102b557836102b7565b825b9150600090505b8651811015610457578581815181106102d357fe5b906020019060200201518210156102e957600080fd5b6103078782815181106102f857fe5b90602001906020020151610470565b1561044f5785818151811061031857fe5b906020019060200201518203915084600160a060020a03166323b872dd3389848151811061034257fe5b9060200190602002015189858151811061035857fe5b9060200190602002015160006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b15156103ba57600080fd5b6102c65a03f115156103cb57600080fd5b5050506040518051905015156103e057600080fd5b7f7085d0e313d385d52a20a5fa4d19f0e51a0d0bb5ada71d95eadd0276f6e64b2187828151811061040d57fe5b9060200190602002015187838151811061042357fe5b90602001906020020151604051600160a060020a03909216825260208201526040908101905180910390a15b6001016102be565b5050505050505050565b600054600160a060020a031681565b6000600160a060020a0382161580159061049c575033600160a060020a031682600160a060020a031614155b80156104ae57506104ac82610538565b155b92915050565b60008054600160a060020a038085169163a9059cbb911684846040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561051757600080fd5b6102c65a03f1151561052857600080fd5b5050506040518051949350505050565b6000903b11905600a165627a7a723058206d8453acf811f5557a4fe8342fa270c0cf5d24f7b41752b8776f771c1f6520f50029"
}