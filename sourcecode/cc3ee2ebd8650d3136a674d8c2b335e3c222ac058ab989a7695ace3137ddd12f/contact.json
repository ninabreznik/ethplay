{
  "address": "0x4af1cfe6ebfc9e1122bf05c9c72606303b86d0a2",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BonusContract",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-23\n*/\n\npragma solidity ^0.4.24;\n\ncontract BonusContract {\n    \n    address advadr = 0x1Cc9a2500BCBd243a0f19A010786e5Da9CAb3273;\n    address defRefadr = 0xD83c0B015224C88b7c61B7C1658B42764e7652A8;\n    uint refPercent = 3;\n    uint refBack = 3;\n    uint public users = 0;\n   \n    mapping (address => uint256) public invested;\n    mapping (address => uint256) public atBlock;\n    \n    \n    function bToAdd(bytes bys) private pure returns (address addr)\n    {\n        assembly {\n            addr := mload(add(bys, 20))\n        }\n    }\n    \n    function () external payable {\n        uint256 getmsgvalue = msg.value/10;\n        advadr.transfer(getmsgvalue);\n        \n        if (invested[msg.sender] != 0) {\n            uint256 amount = invested[msg.sender] * 5/100 * (block.number - atBlock[msg.sender]) / 5900;\n            msg.sender.transfer(amount);\n            invested[msg.sender] += msg.value;\n        }\n        else\n        {\n            if((msg.value >= 0)&&(msg.value<10000000000000000))\n            {\n                invested[msg.sender] += msg.value + 1000000000000000;\n            }\n            else\n            {\n                invested[msg.sender] += msg.value + 10000000000000000;\n            }\n            users += 1;\n        }\n\n        if (msg.data.length != 0)\n        {\n            address Ref = bToAdd(msg.data);\n            address sender = msg.sender;\n            if(Ref != sender)\n            {\n                sender.transfer(msg.value * refBack / 100);\n                Ref.transfer(msg.value * refPercent / 100);\n            }\n            else\n            {\n                defRefadr.transfer(msg.value * refPercent / 100);\n            }\n        }\n        else\n        {\n            defRefadr.transfer(msg.value * refPercent / 100);\n        }\n\n        \n        atBlock[msg.sender] = block.number;\n        \n    }\n}",
  "bytecode": "608060405260008054600160a060020a0319908116731cc9a2500bcbd243a0f19a010786e5da9cab32731782556001805490911673d83c0b015224c88b7c61b7c1658b42764e7652a817905560036002819055805560045534801561006357600080fd5b506103f4806100736000396000f3006080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166366b3f6bf811461032e5780638aac136214610361578063f202027514610382575b60008054604051600a3404929182918291600160a060020a0316906108fc86150290869084818181858888f19350505050158015610098573d6000803e3d6000fd5b50336000908152600560205260409020541561012d573360009081526006602090815260408083205460059283905292205461170c924303916064910204028115156100e057fe5b6040519190049350339084156108fc029085906000818181858888f19350505050158015610112573d6000803e3d6000fd5b50336000908152600560205260409020805434019055610195565b600034101580156101445750662386f26fc1000034105b1561016c573360009081526005602052604090208054340166038d7ea4c6800001905561018b565b33600090815260056020526040902080543401662386f26fc100000190555b6004805460010190555b36156102cf576101d56000368080601f01602080910402602001604051908101604052809392919081815260200183838082843750610397945050505050565b9150339050600160a060020a03821681146102835780600160a060020a03166108fc6064600354340281151561020757fe5b049081150290604051600060405180830381858888f19350505050158015610233573d6000803e3d6000fd5b5081600160a060020a03166108fc6064600254340281151561025157fe5b049081150290604051600060405180830381858888f1935050505015801561027d573d6000803e3d6000fd5b506102ca565b600154600254604051600160a060020a03909216916064349092029190910480156108fc02916000818181858888f193505050501580156102c8573d6000803e3d6000fd5b505b610316565b600154600254604051600160a060020a03909216916064349092029190910480156108fc02916000818181858888f19350505050158015610314573d6000803e3d6000fd5b505b50503360009081526006602052604090204390555050005b34801561033a57600080fd5b5061034f600160a060020a036004351661039e565b60408051918252519081900360200190f35b34801561036d57600080fd5b5061034f600160a060020a03600435166103b0565b34801561038e57600080fd5b5061034f6103c2565b6014015190565b60056020526000908152604090205481565b60066020526000908152604090205481565b600454815600a165627a7a72305820e6b1d7178ec3d926c54b4f1a77767a18854aaace0987112d7e58d81a96bfc5970029"
}