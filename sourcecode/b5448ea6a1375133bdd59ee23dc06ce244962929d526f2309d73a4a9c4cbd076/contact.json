{
  "address": "0x3f18b2e57acd6f6c111936577529ac0dce7148b8",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CryptoArteSales",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-15\n*/\n\npragma solidity ^0.4.23;\n\n/**\n * @title ERC721 Non-Fungible Token Standard basic interface\n * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n */\ncontract ERC721Basic {\n  event Transfer(\n    address indexed _from,\n    address indexed _to,\n    uint256 _tokenId\n  );\n  event Approval(\n    address indexed _owner,\n    address indexed _approved,\n    uint256 _tokenId\n  );\n  event ApprovalForAll(\n    address indexed _owner,\n    address indexed _operator,\n    bool _approved\n  );\n\n  function balanceOf(address _owner) public view returns (uint256 _balance);\n  function ownerOf(uint256 _tokenId) public view returns (address _owner);\n  function exists(uint256 _tokenId) public view returns (bool _exists);\n\n  function approve(address _to, uint256 _tokenId) public;\n  function getApproved(uint256 _tokenId)\n    public view returns (address _operator);\n\n  function setApprovalForAll(address _operator, bool _approved) public;\n  function isApprovedForAll(address _owner, address _operator)\n    public view returns (bool);\n\n  function transferFrom(address _from, address _to, uint256 _tokenId) public;\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId)\n    public;\n\n  function safeTransferFrom(\n    address _from,\n    address _to,\n    uint256 _tokenId,\n    bytes _data\n  )\n    public;\n}\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n */\ncontract ERC721Enumerable is ERC721Basic {\n  function totalSupply() public view returns (uint256);\n  function tokenOfOwnerByIndex(\n    address _owner,\n    uint256 _index\n  )\n    public\n    view\n    returns (uint256 _tokenId);\n\n  function tokenByIndex(uint256 _index) public view returns (uint256);\n}\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n */\ncontract ERC721Metadata is ERC721Basic {\n  function name() public view returns (string _name);\n  function symbol() public view returns (string _symbol);\n  function tokenURI(uint256 _tokenId) public view returns (string);\n}\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, full implementation interface\n * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n */\ncontract ERC721 is ERC721Basic, ERC721Enumerable, ERC721Metadata {\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n/**\n * @title Destructible\n * @dev Base contract that can be destroyed by owner. All funds in contract will be sent to the owner.\n */\ncontract Destructible is Ownable {\n\n  constructor() public payable { }\n\n  /**\n   * @dev Transfers the current balance to the owner and terminates the contract.\n   */\n  function destroy() onlyOwner public {\n    selfdestruct(owner);\n  }\n\n  function destroyAndSend(address _recipient) onlyOwner public {\n    selfdestruct(_recipient);\n  }\n}\n\n\n/**\n * @title CryptoArteSales\n * CryptoArteSales - a sales contract for CryptoArte non-fungible tokens \n * corresponding to paintings from the www.cryptoarte.io collection\n */\ncontract CryptoArteSales is Ownable, Pausable, Destructible {\n\n    event Sent(address indexed payee, uint256 amount, uint256 balance);\n    event Received(address indexed payer, uint tokenId, uint256 amount, uint256 balance);\n\n    ERC721 public nftAddress;\n    uint256 public currentPrice;\n\n    /**\n    * @dev Contract Constructor\n    * @param _nftAddress address for Crypto Arte non-fungible token contract \n    * @param _currentPrice initial sales price\n    */\n    constructor(address _nftAddress, uint256 _currentPrice) public { \n        require(_nftAddress != address(0) && _nftAddress != address(this));\n        require(_currentPrice > 0);\n        nftAddress = ERC721(_nftAddress);\n        currentPrice = _currentPrice;\n    }\n\n    /**\n    * @dev Purchase _tokenId\n    * @param _tokenId uint256 token ID (painting number)\n    */\n    function purchaseToken(uint256 _tokenId) public payable whenNotPaused {\n        require(msg.sender != address(0) && msg.sender != address(this));\n        require(msg.value >= currentPrice);\n        require(nftAddress.exists(_tokenId));\n        address tokenSeller = nftAddress.ownerOf(_tokenId);\n        nftAddress.safeTransferFrom(tokenSeller, msg.sender, _tokenId);\n        emit Received(msg.sender, _tokenId, msg.value, address(this).balance);\n    }\n\n    /**\n    * @dev send / withdraw _amount to _payee\n    */\n    function sendTo(address _payee, uint256 _amount) public onlyOwner {\n        require(_payee != address(0) && _payee != address(this));\n        require(_amount > 0 && _amount <= address(this).balance);\n        _payee.transfer(_amount);\n        emit Sent(_payee, _amount, address(this).balance);\n    }    \n\n    /**\n    * @dev Updates _currentPrice\n    * @dev Throws if _currentPrice is zero\n    */\n    function setCurrentPrice(uint256 _currentPrice) public onlyOwner {\n        require(_currentPrice > 0);\n        currentPrice = _currentPrice;\n    }        \n\n}",
  "bytecode": "60806040526000805460a060020a60ff021916905534801561002057600080fd5b506040516040806108e683398101604052805160209091015160008054600160a060020a03191633179055600160a060020a0382161580159061006c5750600160a060020a0382163014155b151561007757600080fd5b6000811161008457600080fd5b60018054600160a060020a031916600160a060020a03939093169290921790915560025561082f806100b76000396000f3006080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166318b2007181146100c95780633f4ba83a146100e35780635bf8633a146100f85780635c975abb14610129578063715018a61461015257806383197ef0146101675780638456cb591461017c5780638da5cb5b146101915780639d1b464a146101a65780639e1a00aa146101cd578063c2db2c42146101f1578063f2fde38b146101fc578063f5074f411461021d575b600080fd5b3480156100d557600080fd5b506100e160043561023e565b005b3480156100ef57600080fd5b506100e1610267565b34801561010457600080fd5b5061010d6102dd565b60408051600160a060020a039092168252519081900360200190f35b34801561013557600080fd5b5061013e6102ec565b604080519115158252519081900360200190f35b34801561015e57600080fd5b506100e16102fc565b34801561017357600080fd5b506100e1610368565b34801561018857600080fd5b506100e161038d565b34801561019d57600080fd5b5061010d610408565b3480156101b257600080fd5b506101bb610417565b60408051918252519081900360200190f35b3480156101d957600080fd5b506100e1600160a060020a036004351660243561041d565b6100e16004356104fa565b34801561020857600080fd5b506100e1600160a060020a0360043516610740565b34801561022957600080fd5b506100e1600160a060020a0360043516610763565b600054600160a060020a0316331461025557600080fd5b6000811161026257600080fd5b600255565b600054600160a060020a0316331461027e57600080fd5b60005460a060020a900460ff16151561029657600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b600154600160a060020a031681565b60005460a060020a900460ff1681565b600054600160a060020a0316331461031357600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a0316331461037f57600080fd5b600054600160a060020a0316ff5b600054600160a060020a031633146103a457600080fd5b60005460a060020a900460ff16156103bb57600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b60025481565b600054600160a060020a0316331461043457600080fd5b600160a060020a038216158015906104555750600160a060020a0382163014155b151561046057600080fd5b600081118015610471575030318111155b151561047c57600080fd5b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501580156104b2573d6000803e3d6000fd5b5060408051828152303160208201528151600160a060020a038516927f6356739d963da01dc3533acba7203430fcc14f2175d48a8dd0973d7db49c785e928290030190a25050565b6000805460a060020a900460ff161561051257600080fd5b33158015906105215750333014155b151561052c57600080fd5b60025434101561053b57600080fd5b600154604080517f4f558e79000000000000000000000000000000000000000000000000000000008152600481018590529051600160a060020a0390921691634f558e79916024808201926020929091908290030181600087803b1580156105a257600080fd5b505af11580156105b6573d6000803e3d6000fd5b505050506040513d60208110156105cc57600080fd5b505115156105d957600080fd5b600154604080517f6352211e000000000000000000000000000000000000000000000000000000008152600481018590529051600160a060020a0390921691636352211e916024808201926020929091908290030181600087803b15801561064057600080fd5b505af1158015610654573d6000803e3d6000fd5b505050506040513d602081101561066a57600080fd5b5051600154604080517f42842e0e000000000000000000000000000000000000000000000000000000008152600160a060020a0380851660048301523360248301526044820187905291519394509116916342842e0e9160648082019260009290919082900301818387803b1580156106e257600080fd5b505af11580156106f6573d6000803e3d6000fd5b50506040805185815234602082015230318183015290513393507f02d08db2db312fc60b41a046c46a7772a6c2dcdca0c32a9d3423c6dcbde693e992509081900360600190a25050565b600054600160a060020a0316331461075757600080fd5b61076081610786565b50565b600054600160a060020a0316331461077a57600080fd5b80600160a060020a0316ff5b600160a060020a038116151561079b57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a7230582011edd08ff67117ec0cfb5321b8fec6e5cbd7b47a1a5f20fffa6798812db6354e0029000000000000000000000000bace7e22f06554339911a03b8e0ae28203da9598000000000000000000000000000000000000000000000000006a94d74f430000",
  "constructorArguments": "000000000000000000000000bace7e22f06554339911a03b8e0ae28203da9598000000000000000000000000000000000000000000000000006a94d74f430000"
}