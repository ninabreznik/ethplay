{
  "address": "0x8615ddfe9d4c9e58abff01c999731f3e9e556e80",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DAPBOXToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-12\n*/\n\npragma solidity ^0.4.25;\n\n/*\n*   DAPCAR BOX Token (DAPBOX)\n*   Created by Starlag Labs (https://starlag.com)\n*   Copyright Â© Dapcar.io 2019. All rights reserved.\n*   https://dapcar.io\n*/\n\nlibrary Math {\n    function mul(uint256 a, uint256 b) \n    internal \n    pure \n    returns (uint256) \n    {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) \n    internal \n    pure \n    returns (uint256) \n    {\n        uint256 c = a / b;\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) \n    internal \n    pure \n    returns (uint256) \n    {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) \n    internal \n    pure \n    returns (uint256) \n    {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract Utils {\n    //constructor()\n    //internal\n    //{\n    //}\n\n    modifier greaterThanZero(uint256 _value) \n    {\n        require(_value > 0);\n        _;\n    }\n\n    modifier validUint(uint256 _value) \n    {\n        require(_value >= 0);\n        _;\n    }\n\n    modifier validAddress(address _address) \n    {\n        require(_address != address(0));\n        _;\n    }\n\n    modifier notThis(address _address) \n    {\n        require(_address != address(this));\n        _;\n    }\n\n    modifier validAddressAndNotThis(address _address) \n    {\n        require(_address != address(0) && _address != address(this));\n        _;\n    }\n\n    modifier notEmpty(string _data)\n    {\n        require(bytes(_data).length > 0);\n        _;\n    }\n\n    modifier stringLength(string _data, uint256 _length)\n    {\n        require(bytes(_data).length == _length);\n        _;\n    }\n    \n    modifier validBytes32(bytes32 _bytes)\n    {\n        require(_bytes != 0);\n        _;\n    }\n\n    modifier validUint64(uint64 _value) \n    {\n        require(_value >= 0 && _value < 4294967296);\n        _;\n    }\n\n    modifier validUint8(uint8 _value) \n    {\n        require(_value >= 0 && _value < 256);\n        _;\n    }\n\n    modifier validBalanceThis(uint256 _value)\n    {\n        require(_value <= address(this).balance);\n        _;\n    }\n}\n\ncontract Authorizable is Utils {\n    using Math for uint256;\n\n    address public owner;\n    address public newOwner;\n    mapping (address => Level) authorizeds;\n    uint256 public authorizedCount;\n\n    /*  \n    *   ZERO 0 - bug for null object\n    *   OWNER 1\n    *   ADMIN 2\n    *   DAPP 3\n    */  \n    enum Level {ZERO,OWNER,ADMIN,DAPP}\n\n    event OwnerTransferred(address indexed _prevOwner, address indexed _newOwner);\n    event Authorized(address indexed _address, Level _level);\n    event UnAuthorized(address indexed _address);\n\n    constructor()\n    public\n    {\n        owner = msg.sender;\n        authorizeds[msg.sender] = Level.OWNER;\n        authorizedCount = authorizedCount.add(1);\n    }\n\n    modifier onlyOwner {\n        require(authorizeds[msg.sender] == Level.OWNER);\n        _;\n    }\n\n    modifier onlyOwnerOrThis {\n        require(authorizeds[msg.sender] == Level.OWNER || msg.sender == address(this));\n        _;\n    }\n\n    modifier notOwner(address _address) {\n        require(authorizeds[_address] != Level.OWNER);\n        _;\n    }\n\n    modifier authLevel(Level _level) {\n        require((authorizeds[msg.sender] > Level.ZERO) && (authorizeds[msg.sender] <= _level));\n        _;\n    }\n\n    modifier authLevelOnly(Level _level) {\n        require(authorizeds[msg.sender] == _level);\n        _;\n    }\n    \n    modifier notSender(address _address) {\n        require(msg.sender != _address);\n        _;\n    }\n\n    modifier isSender(address _address) {\n        require(msg.sender == _address);\n        _;\n    }\n\n    modifier checkLevel(Level _level) {\n        require((_level > Level.ZERO) && (Level.DAPP >= _level));\n        _;\n    }\n\n    function transferOwnership(address _newOwner) \n    public \n    {\n        _transferOwnership(_newOwner);\n    }\n\n    function _transferOwnership(address _newOwner) \n    onlyOwner \n    validAddress(_newOwner)\n    notThis(_newOwner)\n    internal \n    {\n        require(_newOwner != owner);\n        newOwner = _newOwner;\n    }\n\n    function acceptOwnership() \n    validAddress(newOwner)\n    isSender(newOwner)\n    public \n    {\n        OwnerTransferred(owner, newOwner);\n        if (authorizeds[owner] == Level.OWNER) {\n            delete authorizeds[owner];\n        }\n        if (authorizeds[newOwner] > Level.ZERO) {\n            authorizedCount = authorizedCount.sub(1);\n        }\n        owner = newOwner;\n        newOwner = address(0);\n        authorizeds[owner] = Level.OWNER;\n    }\n\n    function cancelOwnership() \n    onlyOwner\n    public \n    {\n        newOwner = address(0);\n    }\n\n    function authorized(address _address, Level _level) \n    public  \n    {\n        _authorized(_address, _level);\n    }\n\n    function _authorized(address _address, Level _level) \n    onlyOwner\n    validAddress(_address)\n    notOwner(_address)\n    notThis(_address)\n    checkLevel(_level)\n    internal  \n    {\n        if (authorizeds[_address] == Level.ZERO) {\n            authorizedCount = authorizedCount.add(1);\n        }\n        authorizeds[_address] = _level;\n        Authorized(_address, _level);\n    }\n\n    function unAuthorized(address _address) \n    onlyOwner\n    validAddress(_address)\n    notOwner(_address)\n    notThis(_address)\n    public  \n    {\n        if (authorizeds[_address] > Level.ZERO) {\n            authorizedCount = authorizedCount.sub(1);\n        }\n        delete authorizeds[_address];\n        UnAuthorized(_address);\n    }\n\n    function isAuthorized(address _address) \n    validAddress(_address)\n    notThis(_address)\n    public \n    constant \n    returns (Level) \n    {\n        return authorizeds[_address];\n    }\n}\n\ncontract ITokenRecipient { function receiveApproval(address _spender, uint256 _value, address _token, bytes _extraData) public; }\n\ncontract IERC20 {\n    function totalSupply() public constant returns (uint256);\n    function balanceOf(address _owner) public constant returns (uint256 balance);\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract ERC20Token is Authorizable, IERC20 {\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n    uint256 totalSupply_;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    modifier validBalance(uint256 _value)\n    {\n        require(_value <= balances[msg.sender]);\n        _;\n    }\n\n    modifier validBalanceFrom(address _from, uint256 _value)\n    {\n        require(_value <= balances[_from]);\n        _;\n    }\n\n    modifier validBalanceOverflows(address _to, uint256 _value)\n    {\n        require(balances[_to] <= balances[_to].add(_value));\n        _;\n    }\n\n    //constructor()\n    //internal\n    //{\n    //}\n\n    function totalSupply()\n    public \n    constant \n    returns (uint256) \n    {\n        return totalSupply_;\n    }\n\n    function transfer(address _to, uint256 _value)\n    public\n    returns (bool success) \n    {\n        return _transfer(_to, _value);\n    }\n\n    function _transfer(address _to, uint256 _value)\n    validAddress(_to)\n    greaterThanZero(_value)\n    validBalance(_value)\n    validBalanceOverflows(_to, _value)\n    internal\n    returns (bool success) \n    {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value)\n    public \n    returns (bool success) \n    {\n        return _transferFrom(_from, _to, _value);\n    }\n\n    function _transferFrom(address _from, address _to, uint256 _value)\n    validAddress(_to)\n    validAddress(_from)\n    greaterThanZero(_value)\n    validBalanceFrom(_from, _value)\n    validBalanceOverflows(_to, _value)\n    internal \n    returns (bool success) \n    {\n        require(_value <= allowed[_from][msg.sender]);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner)\n    validAddress(_owner)\n    public \n    constant \n    returns (uint256 balance) \n    {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) \n    public \n    returns (bool success) \n    {\n        return _approve(_spender, _value);\n    }\n\n    function _approve(address _spender, uint256 _value) \n    validAddress(_spender)\n    internal \n    returns (bool success) \n    {\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender)\n    validAddress(_owner)\n    validAddress(_spender)\n    public \n    constant \n    returns (uint256 remaining) \n    {\n        return allowed[_owner][_spender];\n    }\n\n    function increaseApproval(address _spender, uint256 _addedValue)\n    validAddress(_spender)\n    greaterThanZero(_addedValue)\n    public \n    returns (bool success) \n    {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval(address _spender, uint256 _subtractedValue) \n    validAddress(_spender)\n    greaterThanZero(_subtractedValue)\n    public\n    returns (bool success) \n    {\n        uint256 oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            delete allowed[msg.sender][_spender];\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n}\n\ncontract FrozenToken is ERC20Token, ITokenRecipient {\n    mapping (address => bool) frozeds;\n    uint256 public frozedCount;\n    bool public freezeEnabled = false;\n    bool public autoFreeze = false;\n    bool public mintFinished = false;\n\n    event Freeze(address indexed wallet);\n    event UnFreeze(address indexed wallet);\n    event PropsChanged(address indexed sender, string props, bool oldValue, bool newValue);\n    event Mint(address indexed sender, address indexed wallet, uint256 amount);\n    event ReceiveTokens(address indexed spender, address indexed token, uint256 value, bytes extraData);\n    event ApproveAndCall(address indexed spender, uint256 value, bytes extraData); \n    event Burn(address indexed sender, uint256 amount);\n    event MintFinished(address indexed spender);\n\n    modifier notFreeze\n    {\n        require(frozeds[msg.sender] == false || freezeEnabled == false);\n        _;\n    }\n\n    modifier notFreezeFrom(address _from) \n    {\n        require((_from != address(0) && frozeds[_from] == false) || freezeEnabled == false);\n        _;\n    }\n\n    modifier canMint\n    {\n        require(!mintFinished);\n        _;\n    }\n\n    //constructor()\n    //internal\n    //{\n    //}\n\n    function freeze(address _address) \n    authLevel(Level.DAPP)\n    validAddress(_address)\n    notThis(_address)\n    notOwner(_address)\n    public \n    {\n        if (!frozeds[_address]) {\n            frozeds[_address] = true;\n            frozedCount = frozedCount.add(1);\n            Freeze(_address);\n        }\n    }\n\n    function unFreeze(address _address) \n    authLevel(Level.DAPP)\n    validAddress(_address)\n    public \n    {\n        if (frozeds[_address]) {\n            delete frozeds[_address];\n            frozedCount = frozedCount.sub(1);\n            UnFreeze(_address);\n        }\n    }\n\n    function updFreezeEnabled(bool _freezeEnabled) \n    authLevel(Level.ADMIN)\n    public \n    {\n        PropsChanged(msg.sender, \"freezeEnabled\", freezeEnabled, _freezeEnabled);\n        freezeEnabled = _freezeEnabled;\n    }\n\n    function updAutoFreeze(bool _autoFreeze) \n    authLevel(Level.ADMIN)\n    public \n    {\n        PropsChanged(msg.sender, \"autoFreeze\", autoFreeze, _autoFreeze);\n        autoFreeze = _autoFreeze;\n    }\n\n    function isFreeze(address _address) \n    validAddress(_address)\n    public \n    constant \n    returns(bool) \n    {\n        return bool(frozeds[_address]);\n    }\n\n    function transfer(address _to, uint256 _value) \n    notFreeze\n    public \n    returns (bool) \n    {\n        return super.transfer(_to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) \n    notFreezeFrom(_from)\n    public \n    returns (bool) \n    {\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    function approve(address _spender, uint256 _value) \n    notFreezeFrom(_spender)\n    public \n    returns (bool) \n    {\n        return super.approve(_spender, _value);\n    }\n\n    function increaseApproval(address _spender, uint256 _addedValue)\n    notFreezeFrom(_spender)\n    public \n    returns (bool) \n    {\n        return super.increaseApproval(_spender, _addedValue);\n    }\n\n    function decreaseApproval(address _spender, uint256 _subtractedValue) \n    notFreezeFrom(_spender)\n    public \n    returns (bool) \n    {\n        return super.decreaseApproval(_spender, _subtractedValue);\n    }\n\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) \n    validAddress(_spender)\n    greaterThanZero(_value)\n    public \n    returns (bool success) \n    {\n        ITokenRecipient spender = ITokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            ApproveAndCall(_spender, _value, _extraData); \n            return true;\n        }\n    }\n\n    function receiveApproval(address _spender, uint256 _value, address _token, bytes _extraData)\n    validAddress(_spender)\n    validAddress(_token)\n    greaterThanZero(_value)\n    public \n    {\n        IERC20 token = IERC20(_token);\n        require(token.transferFrom(_spender, address(this), _value));\n        ReceiveTokens(_spender, _token, _value, _extraData);\n    }\n\n    function mintFinish() \n    onlyOwner\n    public \n    returns (bool success)\n    {\n        mintFinished = true;\n        MintFinished(msg.sender);\n        return true;\n    }\n\n    function mint(address _address, uint256 _value)\n    canMint\n    authLevel(Level.DAPP)\n    validAddress(_address)\n    greaterThanZero(_value)\n    public\n    returns (bool success) \n    {\n        balances[_address] = balances[_address].add(_value);\n        totalSupply_ = totalSupply_.add(_value);\n        Transfer(0, _address, _value);\n\n        if (freezeEnabled && autoFreeze && _address != address(this) && isAuthorized(_address) == Level.ZERO) {\n            if (!isFreeze(_address)) {\n                frozeds[_address] = true;\n                frozedCount = frozedCount.add(1);\n                Freeze(_address);\n            }\n        }\n\n        Mint(0, _address, _value);\n        return true;\n    }\n\n    function burn(uint256 _value)\n    greaterThanZero(_value)\n    validBalance(_value)\n    public\n    returns (bool) \n    {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        totalSupply_ = totalSupply_.sub(_value);\n        Transfer(msg.sender, address(0), _value);\n\n        if (isFreeze(msg.sender)) {\n            delete frozeds[msg.sender];\n            frozedCount = frozedCount.sub(1);\n            UnFreeze(msg.sender);\n        }\n\n        Burn(msg.sender, _value);\n        return true;\n    }\n}\n\ncontract DAPBOXToken is FrozenToken {\n    string public name = \"DAPCAR BOX Token\";\n    string public symbol = \"DAPBOX\";\n    uint8 public decimals = 0;\n\n    string public version = \"0.1\";\n    string public publisher = \"https://dapcar.io\";\n    string public description = \"This is an official DAPCAR BOX Token (DAPBOX)\";\n\n    bool public acceptAdminWithdraw = false;\n    bool public acceptDonate = true;\n\n    event InfoChanged(address indexed sender, string version, string publisher, string description);\n    event Withdraw(address indexed sender, address indexed wallet, uint256 amount);\n    event WithdrawTokens(address indexed sender, address indexed wallet, address indexed token, uint256 amount);\n    event Donate(address indexed sender, uint256 value);\n    event PropsChanged(address indexed sender, string props, bool oldValue, bool newValue);\n    \n    //constructor()\n    //internal\n    //{\n    //}\n\n    function setupInfo(string _version, string _publisher, string _description)\n    authLevel(Level.ADMIN)\n    notEmpty(_version)\n    notEmpty(_publisher)\n    notEmpty(_description)\n    public\n    {\n        version = _version;\n        publisher = _publisher;\n        description = _description;\n        InfoChanged(msg.sender, _version, _publisher, _description);\n    }\n\n    function withdraw() \n    public \n    returns (bool success)\n    {\n        return withdrawAmount(address(this).balance);\n    }\n\n    function withdrawAmount(uint256 _amount) \n    authLevel(Level.ADMIN) \n    greaterThanZero(address(this).balance)\n    greaterThanZero(_amount)\n    validBalanceThis(_amount)\n    public \n    returns (bool success)\n    {\n        address wallet = owner;\n        if (acceptAdminWithdraw) {\n            wallet = msg.sender;\n        }\n\n        Withdraw(msg.sender, wallet, address(this).balance);\n        wallet.transfer(address(this).balance);\n        return true;\n    }\n\n    function withdrawTokens(address _token, uint256 _amount)\n    authLevel(Level.ADMIN)\n    validAddress(_token)\n    greaterThanZero(_amount)\n    public \n    returns (bool success) \n    {\n        address wallet = owner;\n        if (acceptAdminWithdraw) {\n            wallet = msg.sender;\n        }\n\n        bool result = IERC20(_token).transfer(wallet, _amount);\n        if (result) {\n            WithdrawTokens(msg.sender, wallet, _token, _amount);\n        }\n        return result;\n    }\n\n    function balanceToken(address _token)\n    validAddress(_token)\n    public \n    constant\n    returns (uint256 amount) \n    {\n        return IERC20(_token).balanceOf(address(this));\n    }\n\n    function updAcceptAdminWithdraw(bool _accept)\n    onlyOwner\n    public\n    returns (bool success)\n    {\n        PropsChanged(msg.sender, \"acceptAdminWithdraw\", acceptAdminWithdraw, _accept);\n        acceptAdminWithdraw = _accept;\n        return true;\n    }\n    \n    function () \n    external \n    payable \n    {\n        if (acceptDonate) {\n            donate();\n        }\n\t}\n\n    function donate() \n    greaterThanZero(msg.value)\n    internal \n    {\n        Donate(msg.sender, msg.value);\n    }\n\n    function updAcceptDonate(bool _accept)\n    authLevel(Level.ADMIN)\n    public\n    returns (bool success)\n    {\n        PropsChanged(msg.sender, \"acceptDonate\", acceptDonate, _accept);\n        acceptDonate = _accept;\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"balanceToken\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAmount\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authorizedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"autoFreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_autoFreeze\",\"type\":\"bool\"}],\"name\":\"updAutoFreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"freezeEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mintFinish\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"unFreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_freezeEnabled\",\"type\":\"bool\"}],\"name\":\"updFreezeEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"frozedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publisher\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"acceptAdminWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_version\",\"type\":\"string\"},{\"name\":\"_publisher\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"setupInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_accept\",\"type\":\"bool\"}],\"name\":\"updAcceptAdminWithdraw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_accept\",\"type\":\"bool\"}],\"name\":\"updAcceptDonate\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"unAuthorized\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"acceptDonate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_level\",\"type\":\"uint8\"}],\"name\":\"authorized\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isFreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"version\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"publisher\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"}],\"name\":\"InfoChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"props\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"oldValue\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"PropsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"UnFreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ReceiveTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ApproveAndCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_level\",\"type\":\"uint8\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"UnAuthorized\",\"type\":\"event\"}]",
  "bytecode": "6009805462ffffff1916905560c0604052601060808190527f44415043415220424f5820546f6b656e0000000000000000000000000000000060a09081526200004c91600a919062000213565b506040805180820190915260068082527f444150424f58000000000000000000000000000000000000000000000000000060209092019182526200009391600b9162000213565b50600c805460ff191690556040805180820190915260038082527f302e3100000000000000000000000000000000000000000000000000000000006020909201918252620000e491600d9162000213565b506040805180820190915260118082527f68747470733a2f2f6461706361722e696f00000000000000000000000000000060209092019182526200012b91600e9162000213565b5060408051606081018252602d8082527f5468697320697320616e206f6666696369616c2044415043415220424f582054602083019081527f6f6b656e2028444150424f58290000000000000000000000000000000000000092909301919091526200019a91600f9162000213565b506010805461ffff191661010017905560008054600160a060020a0319163390811782558152600260205260409020805460ff19166001908117909155600354620001f39164010000000062002531620001fc82021704565b600355620002b8565b6000828201838110156200020c57fe5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200025657805160ff191683800117855562000286565b8280016001018555821562000286579182015b828111156200028657825182559160200191906001019062000269565b506200029492915062000298565b5090565b620002b591905b808211156200029457600081556001016200029f565b90565b612e4980620002c86000396000f30060806040526004361061022f5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630459901281146102495780630562b9f71461027c57806306b091f9146102a857806306fdde03146102cc578063095ea7b31461035657806313270bb81461037a57806318160ddd1461038f57806323b872dd146103a45780632bda04c5146103ce578063313ce567146103e35780633ccfd60b1461040e5780633e2fce371461042357806340c10f191461043d57806342966c68146104615780634e2808da1461047957806354fd4d501461048e5780635d82ddc8146104a357806366188463146104b857806370a08231146104dc5780637284e416146104fd57806375143ef21461051257806379ba509714610527578063807a599c1461053c57806383cfab421461055157806383df7d21146105725780638b5a17df1461058c5780638c72c54e146105a15780638d1fdf2f146105b65780638da5cb5b146105d75780638e818aa1146106085780638ef5ae211461061d5780638f4ffcb1146106f257806395d89b41146107625780639e060fb614610777578063a9059cbb14610791578063bdc742fc146107b5578063cae9ca51146107cf578063d4ee1d9014610838578063d73dd6231461084d578063dd62ed3e14610871578063e1ad855d14610898578063e41d0944146108b9578063eef4c016146108ce578063f2fde38b146108f5578063fe9fbb8014610916578063ff192bc81461095b575b601054610100900460ff16156102475761024761097c565b005b34801561025557600080fd5b5061026a600160a060020a03600435166109c3565b60408051918252519081900360200190f35b34801561028857600080fd5b50610294600435610a6f565b604080519115158252519081900360200190f35b3480156102b457600080fd5b50610294600160a060020a0360043516602435610ba3565b3480156102d857600080fd5b506102e1610d5d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561031b578181015183820152602001610303565b50505050905090810190601f1680156103485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561036257600080fd5b50610294600160a060020a0360043516602435610deb565b34801561038657600080fd5b5061026a610e4a565b34801561039b57600080fd5b5061026a610e50565b3480156103b057600080fd5b50610294600160a060020a0360043581169060243516604435610e57565b3480156103da57600080fd5b50610294610eb8565b3480156103ef57600080fd5b506103f8610ec6565b6040805160ff9092168252519081900360200190f35b34801561041a57600080fd5b50610294610ecf565b34801561042f57600080fd5b506102476004351515610ee0565b34801561044957600080fd5b50610294600160a060020a0360043516602435610fcb565b34801561046d57600080fd5b5061029460043561120f565b34801561048557600080fd5b50610247611350565b34801561049a57600080fd5b506102e1611399565b3480156104af57600080fd5b506102946113f4565b3480156104c457600080fd5b50610294600160a060020a03600435166024356113fd565b3480156104e857600080fd5b5061026a600160a060020a0360043516611454565b34801561050957600080fd5b506102e1611489565b34801561051e57600080fd5b506102946114e4565b34801561053357600080fd5b506102476114f3565b34801561054857600080fd5b5061029461164c565b34801561055d57600080fd5b50610247600160a060020a03600435166116ba565b34801561057e57600080fd5b5061024760043515156117c4565b34801561059857600080fd5b5061026a6118a1565b3480156105ad57600080fd5b506102e16118a7565b3480156105c257600080fd5b50610247600160a060020a0360043516611902565b3480156105e357600080fd5b506105ec611a5f565b60408051600160a060020a039092168252519081900360200190f35b34801561061457600080fd5b50610294611a6e565b34801561062957600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261024794369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750611a779650505050505050565b3480156106fe57600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261024794600160a060020a03813581169560248035966044359093169536956084949201918190840183828082843750949750611cc29650505050505050565b34801561076e57600080fd5b506102e1611e69565b34801561078357600080fd5b506102946004351515611ec4565b34801561079d57600080fd5b50610294600160a060020a0360043516602435611f6e565b3480156107c157600080fd5b506102946004351515611fac565b3480156107db57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610294948235600160a060020a031694602480359536959460649492019190819084018382808284375094975061209c9650505050505050565b34801561084457600080fd5b506105ec612289565b34801561085957600080fd5b50610294600160a060020a0360043516602435612298565b34801561087d57600080fd5b5061026a600160a060020a03600435811690602435166122ef565b3480156108a457600080fd5b50610247600160a060020a036004351661234b565b3480156108c557600080fd5b50610294612468565b3480156108da57600080fd5b50610247600160a060020a036004351660ff60243516612476565b34801561090157600080fd5b50610247600160a060020a0360043516612484565b34801561092257600080fd5b50610937600160a060020a0360043516612490565b6040518082600381111561094757fe5b60ff16815260200191505060405180910390f35b34801561096757600080fd5b50610294600160a060020a03600435166124e0565b346000811161098a57600080fd5b60408051348152905133917f0553260a2e46b0577270d8992db02d30856ca880144c72d6e9503760946aef13919081900360200190a250565b600081600160a060020a03811615156109db57600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038516916370a082319160248083019260209291908290030181600087803b158015610a3c57600080fd5b505af1158015610a50573d6000803e3d6000fd5b505050506040513d6020811015610a6657600080fd5b50519392505050565b6000806002813360009081526002602052604090205460ff166003811115610a9357fe5b118015610ac85750806003811115610aa757fe5b3360009081526002602052604090205460ff166003811115610ac557fe5b11155b1515610ad357600080fd5b303160008111610ae257600080fd5b8460008111610af057600080fd5b853031811115610aff57600080fd5b600054601054600160a060020a03909116955060ff1615610b1e573394505b60408051303181529051600160a060020a0387169133917f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9181900360200190a3604051600160a060020a03861690303180156108fc02916000818181858888f19350505050158015610b95573d6000803e3d6000fd5b506001979650505050505050565b600080806002813360009081526002602052604090205460ff166003811115610bc857fe5b118015610bfd5750806003811115610bdc57fe5b3360009081526002602052604090205460ff166003811115610bfa57fe5b11155b1515610c0857600080fd5b85600160a060020a0381161515610c1e57600080fd5b8560008111610c2c57600080fd5b600054601054600160a060020a03909116955060ff1615610c4b573394505b87600160a060020a031663a9059cbb86896040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015610cc757600080fd5b505af1158015610cdb573d6000803e3d6000fd5b505050506040513d6020811015610cf157600080fd5b505193508315610d515787600160a060020a031685600160a060020a031633600160a060020a03167fc9e8848e763791df46dee01dfdd8f0eb58cd33dd15e0773146866af844e8f09b8a6040518082815260200191505060405180910390a45b50919695505050505050565b600a805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610de35780601f10610db857610100808354040283529160200191610de3565b820191906000526020600020905b815481529060010190602001808311610dc657829003601f168201915b505050505081565b600082600160a060020a03811615801590610e1f5750600160a060020a03811660009081526007602052604090205460ff16155b80610e2d575060095460ff16155b1515610e3857600080fd5b610e428484612518565b949350505050565b60035481565b6006545b90565b600083600160a060020a03811615801590610e8b5750600160a060020a03811660009081526007602052604090205460ff16155b80610e99575060095460ff16155b1515610ea457600080fd5b610eaf858585612524565b95945050505050565b600954610100900460ff1681565b600c5460ff1681565b6000610edb3031610a6f565b905090565b600260003360009081526002602052604090205460ff166003811115610f0257fe5b118015610f375750806003811115610f1657fe5b3360009081526002602052604090205460ff166003811115610f3457fe5b11155b1515610f4257600080fd5b6009546040805160ff6101009093049290921615156020830152831515828201526060808352600a908301527f6175746f467265657a65000000000000000000000000000000000000000000006080830152513391600080516020612dde833981519152919081900360a00190a250600980549115156101000261ff0019909216919091179055565b60095460009062010000900460ff1615610fe457600080fd5b600360003360009081526002602052604090205460ff16600381111561100657fe5b11801561103b575080600381111561101a57fe5b3360009081526002602052604090205460ff16600381111561103857fe5b11155b151561104657600080fd5b83600160a060020a038116151561105c57600080fd5b836000811161106a57600080fd5b600160a060020a038616600090815260046020526040902054611093908663ffffffff61253116565b600160a060020a0387166000908152600460205260409020556006546110bf908663ffffffff61253116565b600655604080518681529051600160a060020a03881691600091600080516020612dfe8339815191529181900360200190a360095460ff16801561110a5750600954610100900460ff165b801561111f5750600160a060020a0386163014155b801561113e5750600061113187612490565b600381111561113c57fe5b145b156111c25761114c866124e0565b15156111c257600160a060020a0386166000908152600760205260409020805460ff1916600190811790915560085461118a9163ffffffff61253116565b600855604051600160a060020a038716907faf85b60d26151edd11443b704d424da6c43d0468f2235ebae3d1904dbc32304990600090a25b604080518681529051600160a060020a038816916000917fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f89181900360200190a350600195945050505050565b60008181811161121e57600080fd5b33600090815260046020526040902054839081111561123c57600080fd5b3360009081526004602052604090205461125c908563ffffffff61254016565b3360009081526004602052604090205560065461127f908563ffffffff61254016565b6006556040805185815290516000913391600080516020612dfe8339815191529181900360200190a36112b1336124e0565b1561131057336000908152600760205260409020805460ff191690556008546112e190600163ffffffff61254016565b60085560405133907f8a56897dfce8680cbcfd8a39fc9a77d55677650ea50712197f14b6fbc7e0677b90600090a25b60408051858152905133917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25060019392505050565b60013360009081526002602052604090205460ff16600381111561137057fe5b1461137a57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19169055565b600d805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610de35780601f10610db857610100808354040283529160200191610de3565b60095460ff1681565b600082600160a060020a038116158015906114315750600160a060020a03811660009081526007602052604090205460ff16155b8061143f575060095460ff16155b151561144a57600080fd5b610e428484612552565b600081600160a060020a038116151561146c57600080fd5b5050600160a060020a031660009081526004602052604090205490565b600f805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610de35780601f10610db857610100808354040283529160200191610de3565b60095462010000900460ff1681565b600154600160a060020a031680151561150b57600080fd5b600154600160a060020a031633811461152357600080fd5b60015460008054604051600160a060020a0393841693909116917f8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c991a3600160008054600160a060020a031681526002602052604090205460ff16600381111561158957fe5b14156115b05760008054600160a060020a03168152600260205260409020805460ff191690555b600154600160a060020a031660009081526002602052604081205460ff1660038111156115d957fe5b11156115f7576003546115f390600163ffffffff61254016565b6003555b6001805460008054600160a060020a0380841673ffffffffffffffffffffffffffffffffffffffff19928316178084559190931684559091168152600260205260409020805460ff1916828002179055505050565b600060013360009081526002602052604090205460ff16600381111561166e57fe5b1461167857600080fd5b6009805462ff000019166201000017905560405133907f39b5ca6d4234a87b875f701a848e24d718e9f824d12099eec3c01762383b04ee90600090a250600190565b600360003360009081526002602052604090205460ff1660038111156116dc57fe5b11801561171157508060038111156116f057fe5b3360009081526002602052604090205460ff16600381111561170e57fe5b11155b151561171c57600080fd5b81600160a060020a038116151561173257600080fd5b600160a060020a03831660009081526007602052604090205460ff16156117bf57600160a060020a0383166000908152600760205260409020805460ff1916905560085461178790600163ffffffff61254016565b600855604051600160a060020a038416907f8a56897dfce8680cbcfd8a39fc9a77d55677650ea50712197f14b6fbc7e0677b90600090a25b505050565b600260003360009081526002602052604090205460ff1660038111156117e657fe5b11801561181b57508060038111156117fa57fe5b3360009081526002602052604090205460ff16600381111561181857fe5b11155b151561182657600080fd5b6009546040805160ff90921615156020830152831515828201526060808352600d908301527f667265657a65456e61626c6564000000000000000000000000000000000000006080830152513391600080516020612dde833981519152919081900360a00190a2506009805460ff1916911515919091179055565b60085481565b600e805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610de35780601f10610db857610100808354040283529160200191610de3565b600360003360009081526002602052604090205460ff16600381111561192457fe5b118015611959575080600381111561193857fe5b3360009081526002602052604090205460ff16600381111561195657fe5b11155b151561196457600080fd5b81600160a060020a038116151561197a57600080fd5b82600160a060020a03811630141561199157600080fd5b836001600160a060020a03821660009081526002602052604090205460ff1660038111156119bb57fe5b14156119c657600080fd5b600160a060020a03851660009081526007602052604090205460ff161515611a5857600160a060020a0385166000908152600760205260409020805460ff19166001908117909155600854611a209163ffffffff61253116565b600855604051600160a060020a038616907faf85b60d26151edd11443b704d424da6c43d0468f2235ebae3d1904dbc32304990600090a25b5050505050565b600054600160a060020a031681565b60105460ff1681565b600260003360009081526002602052604090205460ff166003811115611a9957fe5b118015611ace5750806003811115611aad57fe5b3360009081526002602052604090205460ff166003811115611acb57fe5b11155b1515611ad957600080fd5b8360008151111515611aea57600080fd5b8360008151111515611afb57600080fd5b8360008151111515611b0c57600080fd5b8651611b1f90600d9060208a0190612d45565b508551611b3390600e906020890190612d45565b508451611b4790600f906020880190612d45565b5033600160a060020a03167f661ac65f03704ae18172992749e864e6664203c36752b2f6aec840dec016c51a88888860405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015611bbb578181015183820152602001611ba3565b50505050905090810190601f168015611be85780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b83811015611c1b578181015183820152602001611c03565b50505050905090810190601f168015611c485780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b83811015611c7b578181015183820152602001611c63565b50505050905090810190601f168015611ca85780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a250505050505050565b600084600160a060020a0381161515611cda57600080fd5b83600160a060020a0381161515611cf057600080fd5b8560008111611cfe57600080fd5b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038a81166004830152306024830152604482018a90529151889650918616916323b872dd916064808201926020929091908290030181600087803b158015611d7357600080fd5b505af1158015611d87573d6000803e3d6000fd5b505050506040513d6020811015611d9d57600080fd5b50511515611daa57600080fd5b85600160a060020a031688600160a060020a03167f92024e89146e4e864038c547cbb7ec2ec79b189856fa0dedc5aebd1bfb17937689886040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611e24578181015183820152602001611e0c565b50505050905090810190601f168015611e515780820380516001836020036101000a031916815260200191505b50935050505060405180910390a35050505050505050565b600b805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610de35780601f10610db857610100808354040283529160200191610de3565b600060013360009081526002602052604090205460ff166003811115611ee657fe5b14611ef057600080fd5b6010546040805160ff909216151560208301528315158282015260608083526013908301527f61636365707441646d696e5769746864726177000000000000000000000000006080830152513391600080516020612dde833981519152919081900360a00190a2506010805460ff1916911515919091179055600190565b3360009081526007602052604081205460ff161580611f90575060095460ff16155b1515611f9b57600080fd5b611fa5838361266d565b9392505050565b60006002813360009081526002602052604090205460ff166003811115611fcf57fe5b1180156120045750806003811115611fe357fe5b3360009081526002602052604090205460ff16600381111561200157fe5b11155b151561200f57600080fd5b6010546040805160ff6101009093049290921615156020830152841515828201526060808352600c908301527f616363657074446f6e61746500000000000000000000000000000000000000006080830152513391600080516020612dde833981519152919081900360a00190a2601080548415156101000261ff00199091161790556001915050919050565b60008084600160a060020a03811615156120b557600080fd5b84600081116120c357600080fd5b8692506120d08787610deb565b1561227f576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018990523060448401819052608060648501908152895160848601528951600160a060020a03891695638f4ffcb195948d94938d939192909160a490910190602085019080838360005b83811015612168578181015183820152602001612150565b50505050905090810190601f1680156121955780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156121b757600080fd5b505af11580156121cb573d6000803e3d6000fd5b5050505086600160a060020a03167f4df88a0bc463d1105f5b5e7b0a2e83433ef2058a59573056c6d85ad20f69fc2b87876040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561223f578181015183820152602001612227565b50505050905090810190601f16801561226c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a2600193505b5050509392505050565b600154600160a060020a031681565b600082600160a060020a038116158015906122cc5750600160a060020a03811660009081526007602052604090205460ff16155b806122da575060095460ff16155b15156122e557600080fd5b610e428484612679565b600082600160a060020a038116151561230757600080fd5b82600160a060020a038116151561231d57600080fd5b505050600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b60013360009081526002602052604090205460ff16600381111561236b57fe5b1461237557600080fd5b80600160a060020a038116151561238b57600080fd5b816001600160a060020a03821660009081526002602052604090205460ff1660038111156123b557fe5b14156123c057600080fd5b82600160a060020a0381163014156123d757600080fd5b600160a060020a03841660009081526002602052604081205460ff1660038111156123fe57fe5b111561241c5760035461241890600163ffffffff61254016565b6003555b600160a060020a038416600081815260026020526040808220805460ff19169055517fb392249530409099dedf8a34dfe3498cfc2f81a2f80804432221e95cda3717549190a250505050565b601054610100900460ff1681565b612480828261273a565b5050565b61248d816128c9565b50565b600081600160a060020a03811615156124a857600080fd5b82600160a060020a0381163014156124bf57600080fd5b505050600160a060020a031660009081526002602052604090205460ff1690565b600081600160a060020a03811615156124f857600080fd5b5050600160a060020a031660009081526007602052604090205460ff1690565b6000611fa5838361296c565b6000610e42848484612a25565b600082820183811015611fa557fe5b60008282111561254c57fe5b50900390565b60008083600160a060020a038116151561256b57600080fd5b836000811161257957600080fd5b336000908152600560209081526040808320600160a060020a038a1684529091529020549250828511156125d057336000908152600560209081526040808320600160a060020a038a168452909152812055612605565b6125e0838663ffffffff61254016565b336000908152600560209081526040808320600160a060020a038b1684529091529020555b336000818152600560209081526040808320600160a060020a038b168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600195945050505050565b6000611fa58383612c0d565b600082600160a060020a038116151561269157600080fd5b826000811161269f57600080fd5b336000908152600560209081526040808320600160a060020a03891684529091529020546126d3908563ffffffff61253116565b336000818152600560209081526040808320600160a060020a038b168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a3506001949350505050565b60013360009081526002602052604090205460ff16600381111561275a57fe5b1461276457600080fd5b81600160a060020a038116151561277a57600080fd5b826001600160a060020a03821660009081526002602052604090205460ff1660038111156127a457fe5b14156127af57600080fd5b83600160a060020a0381163014156127c657600080fd5b8360008160038111156127d557fe5b1180156127ee57508060038111156127e957fe5b600310155b15156127f957600080fd5b600160a060020a03861660009081526002602052604081205460ff16600381111561282057fe5b141561283e5760035461283a90600163ffffffff61253116565b6003555b600160a060020a0386166000908152600260205260409020805486919060ff1916600183600381111561286d57fe5b021790555085600160a060020a03167f074ffe655755f8e9ed8070a26dfff7bf6b7de4e823685ed4b580ada0b841ed3086604051808260038111156128ae57fe5b60ff16815260200191505060405180910390a2505050505050565b60013360009081526002602052604090205460ff1660038111156128e957fe5b146128f357600080fd5b80600160a060020a038116151561290957600080fd5b81600160a060020a03811630141561292057600080fd5b600054600160a060020a038481169116141561293b57600080fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082600160a060020a038116151561298457600080fd5b8215806129b25750336000908152600560209081526040808320600160a060020a0388168452909152902054155b15156129bd57600080fd5b336000818152600560209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600082600160a060020a0381161515612a3d57600080fd5b84600160a060020a0381161515612a5357600080fd5b8360008111612a6157600080fd5b600160a060020a03871660009081526004602052604090205487908690811115612a8a57600080fd5b600160a060020a03881660009081526004602052604090205488908890612ab7908263ffffffff61253116565b600160a060020a0383166000908152600460205260409020541115612adb57600080fd5b600160a060020a038b166000908152600560209081526040808320338452909152902054891115612b0b57600080fd5b600160a060020a038b16600090815260046020526040902054612b34908a63ffffffff61254016565b600160a060020a03808d1660009081526004602052604080822093909355908c1681522054612b69908a63ffffffff61253116565b600160a060020a03808c16600090815260046020908152604080832094909455918e168152600582528281203382529091522054612bad908a63ffffffff61254016565b600160a060020a03808d1660008181526005602090815260408083203384528252918290209490945580518d81529051928e16939192600080516020612dfe833981519152929181900390910190a35060019a9950505050505050505050565b600082600160a060020a0381161515612c2557600080fd5b8260008111612c3357600080fd5b336000908152600460205260409020548490811115612c5157600080fd5b600160a060020a03861660009081526004602052604090205486908690612c7e908263ffffffff61253116565b600160a060020a0383166000908152600460205260409020541115612ca257600080fd5b33600090815260046020526040902054612cc2908863ffffffff61254016565b3360009081526004602052604080822092909255600160a060020a038a1681522054612cf4908863ffffffff61253116565b600160a060020a0389166000818152600460209081526040918290209390935580518a8152905191923392600080516020612dfe8339815191529281900390910190a3506001979650505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612d8657805160ff1916838001178555612db3565b82800160010185558215612db3579182015b82811115612db3578251825591602001919060010190612d98565b50612dbf929150612dc3565b5090565b610e5491905b80821115612dbf5760008155600101612dc9560037719d649d851c9697b183602b8859487914b31559c27a9e1214f7575a66f45cddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582098e2c1b02d72f6f3bea191be49d7904ca48c8cd9c9dd6e3467fceb2af704bc560029"
}