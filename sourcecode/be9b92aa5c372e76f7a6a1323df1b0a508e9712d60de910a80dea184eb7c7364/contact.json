{
  "address": "0x5aeca4f96d8bf94f6b4d56b83cf3240032b21744",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DsionToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-17\n*/\n\npragma solidity ^0.4.24;\n\n// File: contracts/zeppelin/ownership/Ownable.sol\ncontract Ownable {\n  address public owner;\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n}\n\n// File: contracts/zeppelin/lifecycle/Pausable.sol\ncontract Pausable is Ownable {\n  event PausePublic(bool newState);\n  event PauseOwnerAdmin(bool newState);\n\n  bool public pausedPublic = true;\n  bool public pausedOwnerAdmin = false;\n\n  address public admin;\n\n  modifier whenNotPaused() {\n    if(pausedPublic) {\n      if(!pausedOwnerAdmin) {\n        require(msg.sender == admin || msg.sender == owner);\n      } else {\n        revert();\n      }\n    }\n    _;\n  }\n\n  function pause(bool newPausedPublic, bool newPausedOwnerAdmin) onlyOwner public {\n    require(!(newPausedPublic == false && newPausedOwnerAdmin == true));\n\n    pausedPublic = newPausedPublic;\n    pausedOwnerAdmin = newPausedOwnerAdmin;\n\n    emit PausePublic(newPausedPublic);\n    emit PauseOwnerAdmin(newPausedOwnerAdmin);\n  }\n}\n\n// File: contracts/zeppelin/math/SafeMath.sol\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n// File: contracts/zeppelin/token/ERC20Basic.sol\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n// File: contracts/zeppelin/token/BasicToken.sol\n\ncontract BasicToken is ERC20Basic  {\n  using SafeMath for uint256;\n  mapping(address => uint256) balances;\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n}\n\n// File: contracts/zeppelin/token/PausableToken.sol\ncontract PausableToken is BasicToken, Pausable {\n\n  function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transfer(_to, _value);\n  }\n}\n\n// File: contracts/DsionToken.sol\ncontract DsionToken is PausableToken {\n    string  public  constant name = \"Dsion\";\n    string  public  constant symbol = \"DSN\";\n    uint8   public  constant decimals = 8;\n    uint   public  totallockedtime;\n\n     // new feature, Lee\n    mapping(address => uint) approvedInvestorListWithDate;\n\n    constructor(uint _totallockedtime) public\n    {\n        admin = owner;\n        totalSupply = 100000000000000000;\n        balances[msg.sender] = totalSupply;\n        totallockedtime = _totallockedtime;\n        emit Transfer(address(0x0), msg.sender, totalSupply);\n    }\n\n    function setTotalLockedTime(uint _value) onlyOwner public{\n        totallockedtime = _value;\n    }\n\n    function getTime() public constant returns (uint) {\n        return now;\n    }\n\n    function isUnlocked() internal view returns (bool) {\n        return getTime() >= getLockFundsReleaseTime(msg.sender);\n    }\n\n    modifier validDestination(address to)\n    {\n        require(to != address(0x0));\n        require(to != address(this));\n        _;\n    }\n\n    modifier onlyWhenUnlocked()\n    {\n      if (msg.sender != admin) {\n        require(getTime() >= totallockedtime);\n        require(isUnlocked());\n      }\n      _;\n    }\n\n    function transfer(address _to, uint _value) onlyWhenUnlocked public validDestination(_to) returns (bool)\n    {\n      return super.transfer(_to, _value);\n    }\n\n    function getLockFundsReleaseTime(address _addr) private view returns(uint)\n    {\n        return approvedInvestorListWithDate[_addr];\n    }\n\n    function setLockFunds(address[] newInvestorList, uint releaseTime) onlyOwner public\n    {\n        require(releaseTime > getTime());\n        for (uint i = 0; i < newInvestorList.length; i++)\n        {\n            approvedInvestorListWithDate[newInvestorList[i]] = releaseTime;\n        }\n    }\n\n    function removeLockFunds(address[] investorList) onlyOwner public\n    {\n        for (uint i = 0; i < investorList.length; i++)\n        {\n            approvedInvestorListWithDate[investorList[i]] = 0;\n            delete(approvedInvestorListWithDate[investorList[i]]);\n        }\n    }\n\n    function setLockFund(address newInvestor, uint releaseTime) onlyOwner public\n    {\n        require(releaseTime > getTime());\n        approvedInvestorListWithDate[newInvestor] = releaseTime;\n    }\n\n\n    function removeLockFund(address investor) onlyOwner public\n    {\n        approvedInvestorListWithDate[investor] = 0;\n        delete(approvedInvestorListWithDate[investor]);\n    }\n\n    event Burn(address indexed _burner, uint _value);\n    function burn(uint _value) onlyOwner public returns (bool)\n    {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        emit Burn(msg.sender, _value);\n        emit Transfer(msg.sender, address(0x0), _value);\n        return true;\n    }\n\n    function burnFrom(address _account, uint256 _amount) onlyOwner public returns (bool)\n    {\n      require(_account != 0);\n      require(_amount <= balances[_account]);\n\n      totalSupply = totalSupply.sub(_amount);\n      balances[_account] = balances[_account].sub(_amount);\n      emit Transfer(_account, address(0), _amount);\n      return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newInvestorList\",\"type\":\"address[]\"},{\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"setLockFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pausedPublic\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pausedOwnerAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"investorList\",\"type\":\"address[]\"}],\"name\":\"removeLockFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setTotalLockedTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totallockedtime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"removeLockFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPausedPublic\",\"type\":\"bool\"},{\"name\":\"newPausedOwnerAdmin\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newInvestor\",\"type\":\"address\"},{\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"setLockFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_totallockedtime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"PausePublic\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"PauseOwnerAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040526002805460a860020a60ff021960a060020a60ff0219909116740100000000000000000000000000000000000000001716905534801561004357600080fd5b50604051602080610d4c83398101604081815291516002805433600160a060020a031991821681179283905560038054600160a060020a039094169390921692909217905567016345785d8a0000600081815582815260016020908152868220839055600485905591855294519294919391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350610c5c806100f06000396000f3006080604052600436106101115763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461011657806318160ddd146101a05780631a1dca07146101c757806324bb7c2614610220578063313ce5671461024957806342966c6814610274578063557ed1ba1461028c57806364779ad7146102a157806370a08231146102b657806379cc6790146102d75780637e60a4bf146102fb5780638da5cb5b1461035057806395d89b4114610381578063a9059cbb14610396578063c9cead83146103ba578063d4050d43146103d2578063d945799f146103e7578063ddeb509414610408578063f525dcf114610427578063f851a4401461044b575b600080fd5b34801561012257600080fd5b5061012b610460565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016557818101518382015260200161014d565b50505050905090810190601f1680156101925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ac57600080fd5b506101b5610497565b60408051918252519081900360200190f35b3480156101d357600080fd5b506040805160206004803580820135838102808601850190965280855261021e95369593946024949385019291829185019084908082843750949750509335945061049d9350505050565b005b34801561022c57600080fd5b5061023561051a565b604080519115158252519081900360200190f35b34801561025557600080fd5b5061025e61053b565b6040805160ff9092168252519081900360200190f35b34801561028057600080fd5b50610235600435610540565b34801561029857600080fd5b506101b5610617565b3480156102ad57600080fd5b5061023561061b565b3480156102c257600080fd5b506101b5600160a060020a036004351661063d565b3480156102e357600080fd5b50610235600160a060020a0360043516602435610658565b34801561030757600080fd5b506040805160206004803580820135838102808601850190965280855261021e953695939460249493850192918291850190849080828437509497506107469650505050505050565b34801561035c57600080fd5b506103656107f2565b60408051600160a060020a039092168252519081900360200190f35b34801561038d57600080fd5b5061012b610801565b3480156103a257600080fd5b50610235600160a060020a0360043516602435610838565b3480156103c657600080fd5b5061021e6004356108b4565b3480156103de57600080fd5b506101b56108d0565b3480156103f357600080fd5b5061021e600160a060020a03600435166108d6565b34801561041457600080fd5b5061021e60043515156024351515610907565b34801561043357600080fd5b5061021e600160a060020a0360043516602435610a18565b34801561045757600080fd5b50610365610a5e565b60408051808201909152600581527f4473696f6e000000000000000000000000000000000000000000000000000000602082015281565b60005481565b600254600090600160a060020a031633146104b757600080fd5b6104bf610617565b82116104ca57600080fd5b5060005b825181101561051557816005600085848151811015156104ea57fe5b6020908102909101810151600160a060020a03168252810191909152604001600020556001016104ce565b505050565b60025474010000000000000000000000000000000000000000900460ff1681565b600881565b600254600090600160a060020a0316331461055a57600080fd5b3360009081526001602052604090205461057a908363ffffffff610a6d16565b336000908152600160205260408120919091555461059e908363ffffffff610a6d16565b60005560408051838152905133917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a260408051838152905160009133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001919050565b4290565b6002547501000000000000000000000000000000000000000000900460ff1681565b600160a060020a031660009081526001602052604090205490565b600254600090600160a060020a0316331461067257600080fd5b600160a060020a038316151561068757600080fd5b600160a060020a0383166000908152600160205260409020548211156106ac57600080fd5b6000546106bf908363ffffffff610a6d16565b6000908155600160a060020a0384168152600160205260409020546106ea908363ffffffff610a6d16565b600160a060020a0384166000818152600160209081526040808320949094558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a350600192915050565b600254600090600160a060020a0316331461076057600080fd5b5060005b81518110156107ee57600060056000848481518110151561078157fe5b90602001906020020151600160a060020a0316600160a060020a03168152602001908152602001600020819055506005600083838151811015156107c157fe5b6020908102909101810151600160a060020a03168252810191909152604001600090812055600101610764565b5050565b600254600160a060020a031681565b60408051808201909152600381527f44534e0000000000000000000000000000000000000000000000000000000000602082015281565b600354600090600160a060020a0316331461087657600454610858610617565b101561086357600080fd5b61086b610a7f565b151561087657600080fd5b82600160a060020a038116151561088c57600080fd5b600160a060020a0381163014156108a257600080fd5b6108ac8484610a99565b949350505050565b600254600160a060020a031633146108cb57600080fd5b600455565b60045481565b600254600160a060020a031633146108ed57600080fd5b600160a060020a0316600090815260056020526040812055565b600254600160a060020a0316331461091e57600080fd5b8115801561092e57506001811515145b1561093857600080fd5b6002805482151575010000000000000000000000000000000000000000000275ff0000000000000000000000000000000000000000001985151574010000000000000000000000000000000000000000810274ff00000000000000000000000000000000000000001990941693909317161790915560408051918252517fa14d191ca4f53bfcf003c65d429362010a2d3d68bc0c50cce4bdc0fccf661fb09181900360200190a160408051821515815290517fc77636fc4a62a1fa193ef538c0b7993a1313a0d9c0a9173058cebcd3239ef7b59181900360200190a15050565b600254600160a060020a03163314610a2f57600080fd5b610a37610617565b8111610a4257600080fd5b600160a060020a03909116600090815260056020526040902055565b600354600160a060020a031681565b600082821115610a7957fe5b50900390565b6000610a8a33610b23565b610a92610617565b1015905090565b60025460009074010000000000000000000000000000000000000000900460ff1615610b12576002547501000000000000000000000000000000000000000000900460ff16151561011157600354600160a060020a0316331480610b075750600254600160a060020a031633145b1515610b1257600080fd5b610b1c8383610b3e565b9392505050565b600160a060020a031660009081526005602052604090205490565b6000600160a060020a0383161515610b5557600080fd5b33600090815260016020526040902054821115610b7157600080fd5b33600090815260016020526040902054610b91908363ffffffff610a6d16565b3360009081526001602052604080822092909255600160a060020a03851681522054610bc3908363ffffffff610c2116565b600160a060020a0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600082820183811015610b1c57fe00a165627a7a72305820d336b21653778d1940ed170f965889acd48c2fef8299454416de1ecbd20398410029000000000000000000000000000000000000000000000000000000005c10c284",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000005c10c284"
}