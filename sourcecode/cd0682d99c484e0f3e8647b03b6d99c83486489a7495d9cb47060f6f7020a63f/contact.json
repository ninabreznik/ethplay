{
  "address": "0x3675357f253ee776012f7bf398151d1d683336fb",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "GFOT",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-05\n*/\n\npragma solidity ^0.4.25;\n\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (_a == 0) {\n      return 0;\n    }\n\n    c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = _a / _b;\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n    return _a / _b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    c = _a + _b;\n    assert(c >= _a);\n    return c;\n  }\n}\n/**\n * ERC 20 token\n *\n * https://github.com/ethereum/EIPs/issues/20\n */\ncontract GFOT  {\n    using SafeMath for uint256;\n\n    string public constant name = \"WTO Fruit Organization Chain\";\n    string public constant symbol = \"GFOT\";\n\n    uint public constant decimals = 18;\n\n    // Total supply is 21 billion\n    uint256 _totalSupply = 21000000000 * 10**decimals;\n\n    mapping(address => uint256) balances; //list of balance of each address\n    mapping(address => mapping (address => uint256)) allowed;\n\n    address public owner;\n\n    modifier ownerOnly {\n      require(\n            msg.sender == owner,\n            \"Sender not authorized.\"\n        );\n        _;\n    }\n\n    function totalSupply() public view returns (uint256 supply) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    //constructor\n    constructor(address _owner) public{\n        owner = _owner;\n        balances[owner] = _totalSupply;\n        emit Transfer(address(0x0), _owner, _totalSupply);\n    }\n\n    /**\n     * ERC 20 Standard Token interface transfer function\n     */\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        //Default assumes totalSupply can't be over max (2^256 - 1).\n        //If your token leaves out totalSupply and can issue more tokens as time goes on, you need to check if it doesn't wrap.\n        //Replace the if with this one instead.\n        if (balances[msg.sender] >= _value && balances[_to].add(_value) > balances[_to]) {\n            balances[msg.sender] = balances[msg.sender].sub(_value);\n            balances[_to] = balances[_to].add(_value);\n            emit Transfer(msg.sender, _to, _value);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * ERC 20 Standard Token interface transfer function\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        //same as above. Replace this line with the following if you want to protect against wrapping uints.\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to].add(_value) > balances[_to]) {\n            balances[_to] = _value.add(balances[_to]);\n            balances[_from] = balances[_from].sub(_value);\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n            emit Transfer(_from, _to, _value);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Change owner address (where ICO ETH is being forwarded).\n     */\n    function changeOwner(address _newowner) public ownerOnly returns (bool success) {\n        owner = _newowner;\n        return true;\n    }\n\n    // only owner can kill\n    function kill() public ownerOnly {\n        selfdestruct(owner);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newowner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040526b43dacaf91c1a84ff0800000060005534801561002057600080fd5b506040516020806108ca833981016040818152915160038054600160a060020a031916600160a060020a0380841691821792839055600080549390911681526001602090815286822084905592855294519294909390927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a350610818806100b26000396000f3006080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461018057806323b872dd146101a7578063313ce567146101d157806341c0e1b5146101e657806370a08231146101fd5780638da5cb5b1461021e57806395d89b411461024f578063a6f9dae114610264578063a9059cbb14610285578063dd62ed3e146102a9575b600080fd5b3480156100ca57600080fd5b506100d36102d0565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b5061016c600160a060020a0360043516602435610307565b604080519115158252519081900360200190f35b34801561018c57600080fd5b5061019561036e565b60408051918252519081900360200190f35b3480156101b357600080fd5b5061016c600160a060020a0360043581169060243516604435610374565b3480156101dd57600080fd5b50610195610506565b3480156101f257600080fd5b506101fb61050b565b005b34801561020957600080fd5b50610195600160a060020a0360043516610592565b34801561022a57600080fd5b506102336105ad565b60408051600160a060020a039092168252519081900360200190f35b34801561025b57600080fd5b506100d36105bc565b34801561027057600080fd5b5061016c600160a060020a03600435166105f3565b34801561029157600080fd5b5061016c600160a060020a03600435166024356106a1565b3480156102b557600080fd5b50610195600160a060020a03600435811690602435166107a2565b60408051808201909152601c81527f57544f204672756974204f7267616e697a6174696f6e20436861696e00000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b60005490565b600160a060020a03831660009081526001602052604081205482118015906103bf5750600160a060020a03841660009081526002602090815260408083203384529091529020548211155b80156103f15750600160a060020a0383166000908152600160205260409020546103ef818463ffffffff6107cd16565b115b156104fb57600160a060020a03831660009081526001602052604090205461042090839063ffffffff6107cd16565b600160a060020a038085166000908152600160205260408082209390935590861681522054610455908363ffffffff6107da16565b600160a060020a0385166000908152600160209081526040808320939093556002815282822033835290522054610492908363ffffffff6107da16565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060016104ff565b5060005b9392505050565b601281565b600354600160a060020a0316331461058457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f53656e646572206e6f7420617574686f72697a65642e00000000000000000000604482015290519081900360640190fd5b600354600160a060020a0316ff5b600160a060020a031660009081526001602052604090205490565b600354600160a060020a031681565b60408051808201909152600481527f47464f5400000000000000000000000000000000000000000000000000000000602082015281565b600354600090600160a060020a0316331461066f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f53656e646572206e6f7420617574686f72697a65642e00000000000000000000604482015290519081900360640190fd5b5060038054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff199091161790556001919050565b3360009081526001602052604081205482118015906106e65750600160a060020a0383166000908152600160205260409020546106e4818463ffffffff6107cd16565b115b1561079a573360009081526001602052604090205461070b908363ffffffff6107da16565b3360009081526001602052604080822092909255600160a060020a0385168152205461073d908363ffffffff6107cd16565b600160a060020a0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3506001610368565b506000610368565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b8181018281101561036857fe5b6000828211156107e657fe5b509003905600a165627a7a723058207ab0428e197584c6963300e062848b77fab6d9aac01db4a7c7d9b99d972d9a03002900000000000000000000000074c73d07ac527f0def91a9c163e65e2362213ae6",
  "constructorArguments": "00000000000000000000000074c73d07ac527f0def91a9c163e65e2362213ae6"
}