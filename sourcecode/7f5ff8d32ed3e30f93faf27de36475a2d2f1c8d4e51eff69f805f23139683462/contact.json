{
  "address": "0x7a271d1df2c3f2fef734611c6c7ee6b9b8439204",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "EXXTOKEN",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-25\n*/\n\npragma solidity ^ 0.4.18;\n\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns(uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n    function div(uint256 a, uint256 b) internal pure returns(uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n    function add(uint256 a, uint256 b) internal pure returns(uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\ncontract ERC20 {\n    uint256 public totalSupply;\n    function balanceOf(address who) public view returns(uint256);\n    function transfer(address to, uint256 value) public returns(bool);\n    function allowance(address owner, address spender) public view returns(uint256);\n    function transferFrom(address from, address to, uint256 value) public returns(bool);\n    function approve(address spender, uint256 value) public returns(bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\ncontract StandardToken is ERC20 {\n    using SafeMath for uint256;\n        mapping(address => uint256) balances;\n    mapping(address => mapping(address => uint256)) allowed;\n    function balanceOf(address _owner) public view returns(uint256 balance) {\n        return balances[_owner];\n    }\n    function transfer(address _to, uint256 _value) public returns(bool) {\n        require(_to != address(0));\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n    function batchTransfer(address[] _tos, uint256[] _count)  public returns(bool) {\n        require(_tos.length > 0);\n        for (uint32 i = 0; i < _tos.length; i++) {\n            transfer(_tos[i], _count[i]);\n        }\n        return true;\n    }\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool) {\n        uint _allowance = allowed[_from][msg.sender];\n        require(_to != address(0));\n        require(_value <= _allowance);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = _allowance.sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n    function approve(address _spender, uint256 _value) public returns(bool) {\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    function allowance(address _owner, address _spender) public view returns(uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n}\ncontract EXXTOKEN is StandardToken {\n    string public constant name = \"EXX Token\";\n    string public constant symbol = \"ET\";\n    uint8 public constant decimals = 8;\n    constructor() public {\n        totalSupply = 1000000000000000000;\n        balances[msg.sender] = totalSupply;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"_count\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50670de0b6b3a76400006000818155338152600160205260409020556107228061003b6000396000f3006080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016a57806323b872dd14610191578063313ce567146101bb57806370a08231146101e657806388d695b21461020757806395d89b4114610295578063a9059cbb146102aa578063dd62ed3e146102ce575b600080fd5b3480156100b457600080fd5b506100bd6102f5565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a036004351660243561032c565b604080519115158252519081900360200190f35b34801561017657600080fd5b5061017f6103ce565b60408051918252519081900360200190f35b34801561019d57600080fd5b50610156600160a060020a03600435811690602435166044356103d4565b3480156101c757600080fd5b506101d0610508565b6040805160ff9092168252519081900360200190f35b3480156101f257600080fd5b5061017f600160a060020a036004351661050d565b34801561021357600080fd5b506040805160206004803580820135838102808601850190965280855261015695369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506105289650505050505050565b3480156102a157600080fd5b506100bd6105a5565b3480156102b657600080fd5b50610156600160a060020a03600435166024356105dc565b3480156102da57600080fd5b5061017f600160a060020a03600435811690602435166106a3565b60408051808201909152600981527f45585820546f6b656e0000000000000000000000000000000000000000000000602082015281565b600081158061035c5750336000908152600260209081526040808320600160a060020a0387168452909152902054155b151561036757600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60005481565b600160a060020a03808416600090815260026020908152604080832033845290915281205490918416151561040857600080fd5b8083111561041557600080fd5b600160a060020a03851660009081526001602052604090205461043e908463ffffffff6106ce16565b600160a060020a038087166000908152600160205260408082209390935590861681522054610473908463ffffffff6106e016565b600160a060020a03851660009081526001602052604090205561049c818463ffffffff6106ce16565b600160a060020a03808716600081815260026020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001949350505050565b600881565b600160a060020a031660009081526001602052604090205490565b6000806000845111151561053b57600080fd5b5060005b83518163ffffffff16101561059b57610592848263ffffffff1681518110151561056557fe5b90602001906020020151848363ffffffff1681518110151561058357fe5b906020019060200201516105dc565b5060010161053f565b5060019392505050565b60408051808201909152600281527f4554000000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a03831615156105f357600080fd5b33600090815260016020526040902054610613908363ffffffff6106ce16565b3360009081526001602052604080822092909255600160a060020a03851681522054610645908363ffffffff6106e016565b600160a060020a0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156106da57fe5b50900390565b6000828201838110156106ef57fe5b93925050505600a165627a7a72305820160aacb931d09b31cd879907043b54247df5bb9b552bc5840f3e89888ea5c7490029"
}