{
  "address": "0xf20447c4e10016d93b981ad647fd7dbf8fccf2d2",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DigiWillToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-29\n*/\n\npragma solidity ^0.4.21;\n\n\ncontract Ownable {\n    address public owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n   constructor() public {\n        owner = msg.sender;\n\t\t}\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n\t\t}\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n\t\t}\n\n}\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n\t\t}\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n\t}\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n\t}\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n\t}\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n\t}\n}\n\n\ninterface tokenRecipient {\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external;\n\t}\n\ncontract DigiWillToken is Ownable {\n    using SafeMath for uint256;\n\n    string public name = \"Digiwill\";   //The Token's name: e.g. DigixDAO Tokens\n    uint8 public decimals = 18;        //Number of decimals of the smallest unit\n    string public symbol = \"DGW\";      //An identifier: e.g. REP\n    uint public totalSupply;\n\tbool public enabledTokenTransfer = false;\n\n    mapping (address => uint256) public balances;\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\n    mapping (address => mapping (address => uint256)) public allowed;\n\t\n\tmapping (address => bool) public allowedToTransfer;\n\tmapping (address => bool) public blockedAddress;\n\n///////////\n// Constructor\n///////////\n\n    // @notice Constructor to create a DigiWillToken\n       constructor() public {\n        totalSupply = 2000000000 * 10**18;\n        // Give the creator all initial tokens\n        balances[msg.sender] = totalSupply;\n        allowedToTransfer[msg.sender] = true;\n\t\t}\n\n\n/////////////\n// ERC20 Methods\n/////////////\n\n    // @notice Send `_amount` tokens to `_to` from `msg.sender`\n    // @param _to The address of the recipient\n    // @param _amount The amount of tokens to be transferred\n    // @return Whether the transfer was successful or not\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\n        doTransfer(msg.sender, _to, _amount);\n        return true;\n\t\t}\n\n    // @notice Send `_amount` tokens to `_to` from `_from` on the condition it\n    //  is approved by `_from`\n    // @param _from The address holding the tokens being transferred\n    // @param _to The address of the recipient\n    // @param _amount The amount of tokens to be transferred\n    // @return True if the transfer was successful\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\n        // The standard ERC 20 transferFrom functionality\n        require(allowed[_from][msg.sender] >= _amount);\n        allowed[_from][msg.sender] -= _amount;\n        doTransfer(_from, _to, _amount);\n        return true;\n\t\t}\n\n    // @dev This is the actual transfer function in the token contract, it can\n    //  only be called by other functions in this contract.\n    // @param _from The address holding the tokens being transferred\n    // @param _to The address of the recipient\n    // @param _amount The amount of tokens to be transferred\n    // @return True if the transfer was successful\n    function doTransfer(address _from, address _to, uint _amount) internal {\n        // Do not allow transfer to 0x0 or the token contract itself\n\t\t\n        require((_to != 0) && (_to != address(this)));\n        require(_amount <= balances[_from]);\n\t\trequire(enabledTokenTransfer == true || allowedToTransfer[_from] == true);\n\t\t\n\t\trequire(!blockedAddress[_from] || blockedAddress[_from] == false);\n\t\trequire(!blockedAddress[_to] || blockedAddress[_to] == false);\n\n\t\tbalances[_from] = balances[_from].sub(_amount);\n\t\tbalances[_to] = balances[_to].add(_amount);\n\t\temit Transfer(_from, _to, _amount);\n\t\t}\n\n    // @return The balance of `_owner`\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n\t\t}\n\t\t\n\t // @return The lock status of targetAddress\n    function lockStatusOf(address targetAddress) public constant returns (bool state) {\n        return blockedAddress[targetAddress];\n\t\t}\n\t\t\n\t// @return The transfer allowance of targetAddress\n    function transferAllowanceOf(address targetAddress) public constant returns (bool state) {\n        return allowedToTransfer[targetAddress];\n\t\t}\n\n    // @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\n    //  its behalf. This is a modified version of the ERC20 approve function\n    //  to be a little bit safer\n    // @param _spender The address of the account able to transfer the tokens\n    // @param _amount The amount of tokens to be approved for transfer\n    // @return True if the approval was successful\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\n\n        allowed[msg.sender][_spender] = _amount;\n        emit Approval(msg.sender, _spender, _amount);\n        return true;\n\t\t}\n\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n\t\t\t}\n\t\t}\n\n    function burn(uint256 _value) public onlyOwner {\n        require(balances[msg.sender] >= _value);\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n\t\t}\n\n    /** @dev This function makes it easy to read the `allowed[]` map\n    * @param _owner The address of the account that owns the token\n    * @param _spender The address of the account able to transfer the tokens\n    * @return Amount of remaining tokens of _owner that _spender is allowed\n    *  to spend\n\t  */\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n\t\t}\n\n    // @dev This function makes it easy to get the total number of tokens\n    // @return The total number of tokens\n    function totalSupply() public constant returns (uint) {\n        return totalSupply;\n\t\t}\n\t\n\tfunction setTokenTransferLock(bool lockStatus) public onlyOwner {\n\t\tenabledTokenTransfer = lockStatus;\n\t\t}\n\t\n\tfunction setAddressTransferAllowance(address targetAddress, bool lockStatus) public onlyOwner {\n\t\tallowedToTransfer[targetAddress] = lockStatus;\n\t\t}\n\t\t\n\tfunction setAddressBlockState(address targetAddress, bool lockStatus) public onlyOwner {\n\t\trequire(targetAddress != owner);\n\t\tblockedAddress[targetAddress] = lockStatus;\n\t\t}\n\n    event Transfer(\n        address indexed _from,\n        address indexed _to,\n        uint256 _amount\n        );\n\n    event Approval(\n        address indexed _owner,\n        address indexed _spender,\n        uint256 _amount\n        );\n\n    event Burn(\n        address indexed _burner,\n        uint256 _amount\n        );\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"}],\"name\":\"lockStatusOf\",\"outputs\":[{\"name\":\"state\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"}],\"name\":\"transferAllowanceOf\",\"outputs\":[{\"name\":\"state\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"},{\"name\":\"lockStatus\",\"type\":\"bool\"}],\"name\":\"setAddressBlockState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"},{\"name\":\"lockStatus\",\"type\":\"bool\"}],\"name\":\"setAddressTransferAllowance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedToTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"enabledTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"lockStatus\",\"type\":\"bool\"}],\"name\":\"setTokenTransferLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"blockedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600860808190527f4469676977696c6c00000000000000000000000000000000000000000000000060a090815261003e91600191906100f5565b506002805460ff191660121790556040805180820190915260038082527f4447570000000000000000000000000000000000000000000000000000000000602090920191825261008e91816100f5565b506005805460ff191690553480156100a557600080fd5b5060008054600160a060020a0319163390811782556b06765c793fa10079d0000000600481905590825260066020908152604080842092909255600890529020805460ff19166001179055610190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013657805160ff1916838001178555610163565b82800160010185558215610163579182015b82811115610163578251825591602001919060010190610148565b5061016f929150610173565b5090565b61018d91905b8082111561016f5760008155600101610179565b90565b610d4a8061019f6000396000f3006080604052600436106101325763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610137578063095ea7b3146101c15780630fe09c1f146101f95780631082ec671461021a57806318160ddd1461023b57806323b872dd1461026257806327e235e31461028c5780632d816417146102ad578063313ce567146102d557806342966c68146103005780635c6581651461031857806370a082311461033f5780638da5cb5b1461036057806395d89b411461039157806397fa495e146103a6578063a9059cbb146103cc578063c51544c5146103f0578063cae9ca5114610411578063dd62ed3e1461047a578063f0da8eda146104a1578063f2fde38b146104b6578063f909174e146104d7578063fd4a772c146104f1575b600080fd5b34801561014357600080fd5b5061014c610512565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018657818101518382015260200161016e565b50505050905090810190601f1680156101b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101cd57600080fd5b506101e5600160a060020a036004351660243561059f565b604080519115158252519081900360200190f35b34801561020557600080fd5b506101e5600160a060020a0360043516610641565b34801561022657600080fd5b506101e5600160a060020a036004351661065f565b34801561024757600080fd5b5061025061067d565b60408051918252519081900360200190f35b34801561026e57600080fd5b506101e5600160a060020a0360043581169060243516604435610683565b34801561029857600080fd5b50610250600160a060020a03600435166106f2565b3480156102b957600080fd5b506102d3600160a060020a03600435166024351515610704565b005b3480156102e157600080fd5b506102ea610761565b6040805160ff9092168252519081900360200190f35b34801561030c57600080fd5b506102d360043561076a565b34801561032457600080fd5b50610250600160a060020a03600435811690602435166107e6565b34801561034b57600080fd5b50610250600160a060020a0360043516610803565b34801561036c57600080fd5b5061037561081e565b60408051600160a060020a039092168252519081900360200190f35b34801561039d57600080fd5b5061014c61082d565b3480156103b257600080fd5b506102d3600160a060020a03600435166024351515610888565b3480156103d857600080fd5b506101e5600160a060020a03600435166024356108ca565b3480156103fc57600080fd5b506101e5600160a060020a03600435166108e0565b34801561041d57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101e5948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506108f59650505050505050565b34801561048657600080fd5b50610250600160a060020a0360043581169060243516610a0e565b3480156104ad57600080fd5b506101e5610a39565b3480156104c257600080fd5b506102d3600160a060020a0360043516610a42565b3480156104e357600080fd5b506102d36004351515610ad6565b3480156104fd57600080fd5b506101e5600160a060020a0360043516610b00565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105975780601f1061056c57610100808354040283529160200191610597565b820191906000526020600020905b81548152906001019060200180831161057a57829003601f168201915b505050505081565b60008115806105cf5750336000908152600760209081526040808320600160a060020a0387168452909152902054155b15156105da57600080fd5b336000818152600760209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600160a060020a031660009081526009602052604090205460ff1690565b600160a060020a031660009081526008602052604090205460ff1690565b60045490565b600160a060020a03831660009081526007602090815260408083203384529091528120548211156106b357600080fd5b600160a060020a03841660009081526007602090815260408083203384529091529020805483900390556106e8848484610b15565b5060019392505050565b60066020526000908152604090205481565b600054600160a060020a0316331461071b57600080fd5b600054600160a060020a038381169116141561073657600080fd5b600160a060020a03919091166000908152600960205260409020805460ff1916911515919091179055565b60025460ff1681565b600054600160a060020a0316331461078157600080fd5b3360009081526006602052604090205481111561079d57600080fd5b336000908152600660205260409020546107bd908263ffffffff610cf616565b336000908152600660205260409020556004546107e0908263ffffffff610cf616565b60045550565b600760209081526000928352604080842090915290825290205481565b600160a060020a031660009081526006602052604090205490565b600054600160a060020a031681565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105975780601f1061056c57610100808354040283529160200191610597565b600054600160a060020a0316331461089f57600080fd5b600160a060020a03919091166000908152600860205260409020805460ff1916911515919091179055565b60006108d7338484610b15565b50600192915050565b60086020526000908152604090205460ff1681565b600083610902818561059f565b15610a06576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b8381101561099a578181015183820152602001610982565b50505050905090810190601f1680156109c75780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156109e957600080fd5b505af11580156109fd573d6000803e3d6000fd5b50505050600191505b509392505050565b600160a060020a03918216600090815260076020908152604080832093909416825291909152205490565b60055460ff1681565b600054600160a060020a03163314610a5957600080fd5b600160a060020a0381161515610a6e57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a03163314610aed57600080fd5b6005805460ff1916911515919091179055565b60096020526000908152604090205460ff1681565b600160a060020a03821615801590610b365750600160a060020a0382163014155b1515610b4157600080fd5b600160a060020a038316600090815260066020526040902054811115610b6657600080fd5b60055460ff16151560011480610b995750600160a060020a03831660009081526008602052604090205460ff1615156001145b1515610ba457600080fd5b600160a060020a03831660009081526009602052604090205460ff161580610be55750600160a060020a03831660009081526009602052604090205460ff16155b1515610bf057600080fd5b600160a060020a03821660009081526009602052604090205460ff161580610c315750600160a060020a03821660009081526009602052604090205460ff16155b1515610c3c57600080fd5b600160a060020a038316600090815260066020526040902054610c65908263ffffffff610cf616565b600160a060020a038085166000908152600660205260408082209390935590841681522054610c9a908263ffffffff610d0816565b600160a060020a0380841660008181526006602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610d0257fe5b50900390565b600082820183811015610d1757fe5b93925050505600a165627a7a723058203149d26872692233acb529e8b2a9ae315d258962de552cc41b2a7b5ca47d3da70029"
}