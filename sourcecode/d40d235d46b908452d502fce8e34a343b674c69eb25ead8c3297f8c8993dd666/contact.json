{
  "address": "0x6c2edc6cdae62fc22283c851faacb386bdcba1d3",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "exForward",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-29\n*/\n\npragma solidity ^0.4.20;\n\ncontract ERC20 {\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\ncontract exForward{\n    address public owner;\n    event change_owner(string newOwner, address indexed toOwner);\n    event eth_deposit(address sender, uint amount);\n    event erc_deposit(address from, address ctr, address to, uint amount);\n    constructor() public {\n        owner = msg.sender;\n    }\n    modifier isOwner{\n        require(owner == msg.sender);\n        _;\n    }\n    function trToken(address tokenContract, uint tokens) public{\n        ERC20(tokenContract).transferFrom(msg.sender, owner, tokens);\n        emit erc_deposit(msg.sender, tokenContract, owner, tokens);\n    }\n    function changeOwner(address to_owner) public isOwner returns (bool success){\n        owner = to_owner;\n        emit change_owner(\"OwnerChanged\",to_owner);\n        return true;\n    }\n    function() payable public {\n        owner.transfer(msg.value);\n        emit eth_deposit(msg.sender,msg.value);\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610339806100326000396000f3006080604052600436106100565763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b81146100cd578063a6f9dae1146100fe578063ce7be2d614610133575b60008054604051600160a060020a03909116913480156108fc02929091818181858888f19350505050158015610090573d6000803e3d6000fd5b506040805133815234602082015281517f472bccb9396df361f6a549719bf654b921fe12fbf49168a6a314cf71ac2faf58929181900390910190a1005b3480156100d957600080fd5b506100e2610159565b60408051600160a060020a039092168252519081900360200190f35b34801561010a57600080fd5b5061011f600160a060020a0360043516610168565b604080519115158252519081900360200190f35b34801561013f57600080fd5b50610157600160a060020a0360043516602435610214565b005b600054600160a060020a031681565b60008054600160a060020a0316331461018057600080fd5b60008054600160a060020a03841673ffffffffffffffffffffffffffffffffffffffff199091168117909155604080516020808252600c908201527f4f776e65724368616e67656400000000000000000000000000000000000000008183015290517fddecd21ab66c20dd006e34c671d21a2f2c1191c4aadceb800998b208ae0e6a079181900360600190a2506001919050565b60008054604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a039283166024820152604481018590529051918516926323b872dd926064808401936020939083900390910190829087803b15801561028a57600080fd5b505af115801561029e573d6000803e3d6000fd5b505050506040513d60208110156102b457600080fd5b505060005460408051338152600160a060020a0380861660208301529092168282015260608201839052517fa4a78035a9350286d6a0665d9bd4e141f41f3513d3fcdbcef369cef00bf0fb919181900360800190a150505600a165627a7a723058206c4507a9db7c66ec53db152f1138fd1eea6d8651e2e6211aa2dc8d05ec9b7a9b0029"
}