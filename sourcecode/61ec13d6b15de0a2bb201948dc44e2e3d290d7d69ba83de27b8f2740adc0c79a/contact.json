{
  "address": "0x71d6a2e473e92d63a676b363d1e0fde4675349fe",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Get1002Voken",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-01\n*/\n\npragma solidity ^0.5.7;\n\n\n// Send more than 1 ETH for 1002 Vokens, and get unused ETH refund automatically.\n//   Use the current voken price of Voken Public-Sale.\n//\n// Conditions:\n//   1. You have no Voken yet.\n//   2. You are not in the whitelist yet.\n//   3. Send more than 1 ETH (for balance verification).\n//\n// More info:\n//   https://vision.network\n//   https://voken.io\n//\n// Contact us:\n//   [email protected]\n//   [email protected]\n\n\n/**\n * @title SafeMath for uint256\n * @dev Unsigned math operations with safety checks that revert on error.\n */\nlibrary SafeMath256 {\n    /**\n     * @dev Adds two unsigned integers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n     * @dev Multiplies two unsigned integers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        if (a == 0) {\n            return 0;\n        }\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two unsigned integers truncating the quotient,\n     * reverts on division by zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0);\n        uint256 c = a / b;\n        assert(a == b * c + a % b);\n        return a / b;\n    }\n\n    /**\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\n\n\n/**\n * @title Ownable\n */\ncontract Ownable {\n    address private _owner;\n    address payable internal _receiver;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event ReceiverChanged(address indexed previousReceiver, address indexed newReceiver);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract\n     * to the sender account.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        _receiver = msg.sender;\n    }\n\n    /**\n     * @return The address of the owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == _owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) external onlyOwner {\n        require(newOwner != address(0));\n        address __previousOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(__previousOwner, newOwner);\n    }\n\n    /**\n     * @dev Change receiver.\n     */\n    function changeReceiver(address payable newReceiver) external onlyOwner {\n        require(newReceiver != address(0));\n        address __previousReceiver = _receiver;\n        _receiver = newReceiver;\n        emit ReceiverChanged(__previousReceiver, newReceiver);\n    }\n\n    /**\n     * @dev Rescue compatible ERC20 Token\n     *\n     * @param tokenAddr ERC20 The address of the ERC20 token contract\n     * @param receiver The address of the receiver\n     * @param amount uint256\n     */\n    function rescueTokens(address tokenAddr, address receiver, uint256 amount) external onlyOwner {\n        IERC20 _token = IERC20(tokenAddr);\n        require(receiver != address(0));\n        uint256 balance = _token.balanceOf(address(this));\n        require(balance >= amount);\n\n        assert(_token.transfer(receiver, amount));\n    }\n\n    /**\n     * @dev Withdraw ether\n     */\n    function withdrawEther(address payable to, uint256 amount) external onlyOwner {\n        require(to != address(0));\n        uint256 balance = address(this).balance;\n        require(balance >= amount);\n\n        to.transfer(amount);\n    }\n}\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n    bool private _paused;\n\n    event Paused(address account);\n    event Unpaused(address account);\n\n    constructor () internal {\n        _paused = false;\n    }\n\n    /**\n     * @return Returns true if the contract is paused, false otherwise.\n     */\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!_paused, \"Paused.\");\n        _;\n    }\n\n    /**\n     * @dev Called by a pauser to pause, triggers stopped state.\n     */\n    function setPaused(bool state) external onlyOwner {\n        if (_paused && !state) {\n            _paused = false;\n            emit Unpaused(msg.sender);\n        } else if (!_paused && state) {\n            _paused = true;\n            emit Paused(msg.sender);\n        }\n    }\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://eips.ethereum.org/EIPS/eip-20\n */\ninterface IERC20 {\n    function balanceOf(address owner) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n}\n\n\n/**\n * @title Voken interface\n */\ninterface IVoken {\n    function balanceOf(address owner) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function inWhitelist(address account) external view returns (bool);\n}\n\n\n/**\n * @title Voken Public-Sale interface\n */\ninterface IVokenPublicSale {\n    function status() external view returns (uint256 auditEtherPrice,\n                                             uint16 stage,\n                                             uint16 season,\n                                             uint256 vokenUsdPrice,\n                                             uint256 currentTopSalesRatio,\n                                             uint256 txs,\n                                             uint256 vokenTxs,\n                                             uint256 vokenBonusTxs,\n                                             uint256 vokenWhitelistTxs,\n                                             uint256 vokenIssued,\n                                             uint256 vokenBonus,\n                                             uint256 vokenWhitelist);\n}\n\n\n/**\n * @title Get 1002 Voken\n */\ncontract Get1002Voken is Ownable, Pausable {\n    using SafeMath256 for uint256;\n\n    IVoken public VOKEN = IVoken(0x82070415FEe803f94Ce5617Be1878503e58F0a6a);\n    IVokenPublicSale public VOKEN_PUBLIC_SALE = IVokenPublicSale(0xAC873993E43A5AF7B39aB4A5a50ce1FbDb7191D3);\n\n    uint256 private WEI_MIN = 1 ether;\n    uint256 private VOKEN_PER_TXN = 1002000000; // 1002.000000 Voken\n\n    uint256 private _txs;\n    \n    mapping (address => bool) _alreadyGot;\n\n    event Tx(uint256 etherPrice, uint256 vokdnUsdPrice, uint256 weiUsed);\n\n    /**\n     * @dev Transaction counter\n     */\n    function txs() public view returns (uint256) {\n        return _txs;\n    }\n\n    /**\n     * @dev Get 1002 Voken and ETH refund.\n     */\n    function () external payable whenNotPaused {\n        require(msg.value >= WEI_MIN);\n        require(VOKEN.balanceOf(address(this)) >= VOKEN_PER_TXN);\n        require(VOKEN.balanceOf(msg.sender) == 0);\n        require(!VOKEN.inWhitelist(msg.sender));\n        require(!_alreadyGot[msg.sender]);\n\n        uint256 __etherPrice;\n        uint256 __vokenUsdPrice;\n        (__etherPrice, , , __vokenUsdPrice, , , , , , , ,) = VOKEN_PUBLIC_SALE.status();\n\n        require(__etherPrice > 0);\n\n        uint256 __usd = VOKEN_PER_TXN.mul(__vokenUsdPrice).div(1000000);\n        uint256 __wei = __usd.mul(1 ether).div(__etherPrice);\n\n        require(msg.value >= __wei);\n\n        if (msg.value > __wei) {\n            msg.sender.transfer(msg.value.sub(__wei));\n            _receiver.transfer(__wei);\n        }\n\n        _txs = _txs.add(1);\n        _alreadyGot[msg.sender] = true;\n        emit Tx(__etherPrice, __vokenUsdPrice, __wei);\n\n        assert(VOKEN.transfer(msg.sender, VOKEN_PER_TXN));\n    }\n}",
  "bytecode": "6080604052600280547382070415fee803f94ce5617be1878503e58f0a6a6001600160a01b0319918216179091556003805473ac873993e43a5af7b39ab4a5a50ce1fbdb7191d3908316179055670de0b6b3a7640000600455633bb94e806005556000805433908316811782556001805490931617600160a01b60ff021916909155610b5f90819061009190396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b146105f957806394412d841461062a5780639b28fa7b1461063f578063cea9d26f14610654578063f2fde38b1461069757610091565b806316c38b3c1461050f5780634fb30d8b1461053d578063522f681514610564578063547e3f061461059d5780635c975abb146105d0575b600154600160a01b900460ff16156100e05760408051600160e51b62461bcd0281526020600482015260076024820152600160c91b662830bab9b2b21702604482015290519081900360640190fd5b6004543410156100ef57600080fd5b60055460025460408051600160e01b6370a0823102815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561014057600080fd5b505afa158015610154573d6000803e3d6000fd5b505050506040513d602081101561016a57600080fd5b5051101561017757600080fd5b60025460408051600160e01b6370a0823102815233600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156101c557600080fd5b505afa1580156101d9573d6000803e3d6000fd5b505050506040513d60208110156101ef57600080fd5b5051156101fb57600080fd5b60025460408051600160e01b63e2aafa2102815233600482015290516001600160a01b039092169163e2aafa2191602480820192602092909190829003018186803b15801561024957600080fd5b505afa15801561025d573d6000803e3d6000fd5b505050506040513d602081101561027357600080fd5b50511561027f57600080fd5b3360009081526007602052604090205460ff161561029c57600080fd5b600080600360009054906101000a90046001600160a01b03166001600160a01b031663200d2ed26040518163ffffffff1660e01b81526004016101806040518083038186803b1580156102ee57600080fd5b505afa158015610302573d6000803e3d6000fd5b505050506040513d61018081101561031957600080fd5b50805160609091015190925090508161033157600080fd5b600061035b620f424061034f846005546106ca90919063ffffffff16565b9063ffffffff6106f516565b9050600061037b8461034f84670de0b6b3a764000063ffffffff6106ca16565b90508034101561038a57600080fd5b8034111561040b57336108fc6103a6348463ffffffff61073616565b6040518115909202916000818181858888f193505050501580156103ce573d6000803e3d6000fd5b506001546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610409573d6000803e3d6000fd5b505b60065461041f90600163ffffffff61074816565b60065533600090815260076020908152604091829020805460ff19166001179055815186815290810185905280820183905290517fb7a71ffd5f86327da5edecf538386e4b2e90a33e9b7dab7fe37e25ce47dc08719181900360600190a160025460055460408051600160e01b63a9059cbb0281523360048201526024810192909252516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b1580156104d757600080fd5b505af11580156104eb573d6000803e3d6000fd5b505050506040513d602081101561050157600080fd5b505161050957fe5b50505050005b34801561051b57600080fd5b5061053b6004803603602081101561053257600080fd5b50351515610755565b005b34801561054957600080fd5b50610552610839565b60408051918252519081900360200190f35b34801561057057600080fd5b5061053b6004803603604081101561058757600080fd5b506001600160a01b03813516906020013561083f565b3480156105a957600080fd5b5061053b600480360360208110156105c057600080fd5b50356001600160a01b03166108b4565b3480156105dc57600080fd5b506105e5610930565b604080519115158252519081900360200190f35b34801561060557600080fd5b5061060e610940565b604080516001600160a01b039092168252519081900360200190f35b34801561063657600080fd5b5061060e61094f565b34801561064b57600080fd5b5061060e61095e565b34801561066057600080fd5b5061053b6004803603606081101561067757600080fd5b506001600160a01b0381358116916020810135909116906040013561096d565b3480156106a357600080fd5b5061053b600480360360208110156106ba57600080fd5b50356001600160a01b0316610ab9565b6000826106d9575060006106ef565b50818102818382816106e757fe5b04146106ef57fe5b92915050565b600080821161070057fe5b600082848161070b57fe5b04905082848161071757fe5b0681840201841461072457fe5b82848161072d57fe5b04949350505050565b60008282111561074257fe5b50900390565b818101828110156106ef57fe5b6000546001600160a01b0316331461076c57600080fd5b600154600160a01b900460ff168015610783575080155b156107d05760018054600160a01b60ff02191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1610836565b600154600160a01b900460ff161580156107e75750805b156108365760018054600160a01b60ff021916600160a01b1790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a15b50565b60065490565b6000546001600160a01b0316331461085657600080fd5b6001600160a01b03821661086957600080fd5b30318181101561087857600080fd5b6040516001600160a01b0384169083156108fc029084906000818181858888f193505050501580156108ae573d6000803e3d6000fd5b50505050565b6000546001600160a01b031633146108cb57600080fd5b6001600160a01b0381166108de57600080fd5b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fd36aafedb017e43b79d3cf6aa1987d3fbb9fff33e1738c71dbf6b2abaadbded090600090a35050565b600154600160a01b900460ff1690565b6000546001600160a01b031690565b6003546001600160a01b031681565b6002546001600160a01b031681565b6000546001600160a01b0316331461098457600080fd5b826001600160a01b03831661099857600080fd5b60408051600160e01b6370a0823102815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b1580156109e557600080fd5b505afa1580156109f9573d6000803e3d6000fd5b505050506040513d6020811015610a0f57600080fd5b5051905082811015610a2057600080fd5b816001600160a01b031663a9059cbb85856040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610a8057600080fd5b505af1158015610a94573d6000803e3d6000fd5b505050506040513d6020811015610aaa57600080fd5b5051610ab257fe5b5050505050565b6000546001600160a01b03163314610ad057600080fd5b6001600160a01b038116610ae357600080fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a3505056fea165627a7a72305820e02f81912a71ad264f5954210231b401e1ba4046872f56ada5e822a5539115210029"
}