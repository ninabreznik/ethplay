{
  "address": "0xa29787d45d6c3715e53fc4f89cfa6e3d8d3d6b1a",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Swidex",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-18\n*/\n\npragma solidity ^0.5.7;\n\n/**\n * @title SafeMath\n */\nlibrary SafeMath {\n\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n   function div(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n    /**\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n}\n\ncontract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\n}\n\ncontract Owned {\n    address payable public owner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address payable newOwner) public onlyOwner {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n}\n\ncontract ERC20Interface {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address tokenOwner) public view returns (uint256 balance);\n    function allowance(address tokenOwner, address spender) public view returns (uint256 remaining);\n    function transfer(address to, uint256 tokens) public returns (bool success);\n    function approve(address spender, uint256 tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint256 tokens) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);\n}\n\ncontract Swidex is ERC20Interface, Owned {\n    \n    using SafeMath for uint256;\n    \n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n    \n    string public name = \"Swidex\";\n    string public symbol = \"SWDX\";\n    uint256 public decimals = 8;\n    uint256 public _totalSupply;\n    \n    uint256 public SWDXPerEther = 2000000e8;\n    uint256 public maximumSale = 2000000000e8;\n    uint256 public totalSold = 0;\n    uint256 public minimumBuy = 1 ether;\n    uint256 public maximumBuy = 20 ether;\n\n    //mitigates the ERC20 short address attack\n    //suggested by izqui9 @ http://bit.ly/2NMMCNv\n    modifier onlyPayloadSize(uint size) {\n        assert(msg.data.length >= size + 4);\n        _;\n    }\n    \n    \n    constructor () public {\n        _totalSupply = 5000000000e8;\n        /**\n         * give the original `owner` of the contract\n         * the totalSupply\n         */\n        balances[owner] = _totalSupply;\n        emit Transfer(address(0), owner, _totalSupply);\n    }\n    //get the total totalSupply\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n    \n    function () payable external {\n        require(msg.value >= minimumBuy && msg.value <= maximumBuy && totalSold <= maximumSale);\n        uint256 totalBuy =  (SWDXPerEther.mul(msg.value)).div(1 ether);\n        totalSold = totalSold.add(totalBuy);\n        doTransfer(owner, msg.sender, totalBuy);\n    }\n    \n    /// @dev This is the actual transfer function in the token contract, it can\n    ///  only be called by other functions in this contract.\n    /// @param _from The address holding the tokens being transferred\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return True if the transfer was successful\n    function doTransfer(address _from, address _to, uint _amount) internal {\n        // Do not allow transfer to 0x0 or the token contract itself\n        require((_to != address(0)));\n        require(_amount <= balances[_from]);\n        balances[_from] = balances[_from].sub(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        emit Transfer(_from, _to, _amount);\n    }\n    \n    function balanceOf(address _owner) view public returns (uint256) {\n        return balances[_owner];\n    }\n    \n    function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {\n        doTransfer(msg.sender, _to, _amount);\n        return true;\n    }\n    /// @return The balance of `_owner`\n    function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {\n        require(allowed[_from][msg.sender] >= _amount);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n        doTransfer(_from, _to, _amount);\n        return true;\n    }\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\n    ///  its behalf. This is a modified version of the ERC20 approve function\n    ///  to be a little bit safer\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _amount The amount of tokens to be approved for transfer\n    /// @return True if the approval was successful\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _amount;\n        emit Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n\n    function approveAndCall(address _spender, uint256 _value, bytes memory _extraData) public returns (bool success) {\n        ApproveAndCallFallBack spender = ApproveAndCallFallBack(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, address(this), _extraData);\n            return true;\n        }\n    }\n    \n    function allowance(address _owner, address _spender) view public returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n    \n    function withdrawFund() onlyOwner public {\n        uint256 balance = address(this).balance;\n        owner.transfer(balance);\n    }\n    \n    function burn(uint256 _value) onlyOwner public {\n        require(_value <= balances[msg.sender]);\n        address burner = msg.sender;\n        balances[burner] = balances[burner].sub(_value);\n        _totalSupply = _totalSupply.sub(_value);\n        emit Burn(burner, _value);\n    }\n    \n    function getForeignTokenBalance(ERC20Interface _tokenContract, address who) view public returns (uint) {\n        return _tokenContract.balanceOf(who);\n    }\n    \n    function withdrawForeignTokens(ERC20Interface _tokenContract) onlyOwner public returns (bool) {\n        uint256 amount = _tokenContract.balanceOf(address(this));\n        return _tokenContract.transfer(owner, amount);\n    }\n    \n    event TransferEther(address indexed _from, address indexed _to, uint256 _value);\n    event NewPrice(address indexed _changer, uint256 _lastPrice, uint256 _newPrice);\n    event Burn(address indexed _burner, uint256 value);\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"minimumBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getForeignTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SWDXPerEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_changer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_lastPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"NewPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600660808190527f537769646578000000000000000000000000000000000000000000000000000060a090815261003e9160039190610141565b506040805180820190915260048082527f535744580000000000000000000000000000000000000000000000000000000060209092019182526100819181610141565b50600860055565b5e620f480006007556702c68af0bb1400006008556000600955670de0b6b3a7640000600a556801158e460913d00000600b553480156100c757600080fd5b50600080546001600160a01b03191633178082556706f05b59d3b2000060068190556001600160a01b039182168352600160209081526040808520839055845481519384529051931693927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36101dc565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061018257805160ff19168380011785556101af565b828001600101855582156101af579182015b828111156101af578251825591602001919060010190610194565b506101bb9291506101bf565b5090565b6101d991905b808211156101bb57600081556001016101c5565b90565b610ec980620001ec6000396000f3fe6080604052600436106101355760003560e01c80638da5cb5b116100ab578063dd62ed3e1161006f578063dd62ed3e1461054f578063e07fa3c11461058a578063e3acd16f1461059f578063e58fc54c146105b4578063f2fde38b146105e7578063fd6b40eb1461061a57610135565b80638da5cb5b146103f35780639106d7ba1461042457806395d89b4114610439578063a9059cbb1461044e578063cae9ca511461048757610135565b80632ddeac16116100fd5780632ddeac161461031a578063313ce567146103555780633eaaf86b1461036a57806342966c681461037f57806370a08231146103ab578063762e9376146103de57610135565b806305785e4c146101c457806306fdde03146101eb578063095ea7b31461027557806318160ddd146102c257806323b872dd146102d7575b600a5434101580156101495750600b543411155b8015610159575060085460095411155b61016257600080fd5b6000610191670de0b6b3a76400006101853460075461062f90919063ffffffff16565b9063ffffffff61065616565b6009549091506101a7908263ffffffff61067516565b6009556000546101c1906001600160a01b03163383610685565b50005b3480156101d057600080fd5b506101d9610777565b60408051918252519081900360200190f35b3480156101f757600080fd5b5061020061077d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561023a578181015183820152602001610222565b50505050905090810190601f1680156102675780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028157600080fd5b506102ae6004803603604081101561029857600080fd5b506001600160a01b03813516906020013561080b565b604080519115158252519081900360200190f35b3480156102ce57600080fd5b506101d96108ab565b3480156102e357600080fd5b506102ae600480360360608110156102fa57600080fd5b506001600160a01b038135811691602081013590911690604001356108b1565b34801561032657600080fd5b506101d96004803603604081101561033d57600080fd5b506001600160a01b0381358116916020013516610960565b34801561036157600080fd5b506101d96109eb565b34801561037657600080fd5b506101d96109f1565b34801561038b57600080fd5b506103a9600480360360208110156103a257600080fd5b50356109f7565b005b3480156103b757600080fd5b506101d9600480360360208110156103ce57600080fd5b50356001600160a01b0316610abc565b3480156103ea57600080fd5b506101d9610ad7565b3480156103ff57600080fd5b50610408610add565b604080516001600160a01b039092168252519081900360200190f35b34801561043057600080fd5b506101d9610aec565b34801561044557600080fd5b50610200610af2565b34801561045a57600080fd5b506102ae6004803603604081101561047157600080fd5b506001600160a01b038135169060200135610b4d565b34801561049357600080fd5b506102ae600480360360608110156104aa57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156104da57600080fd5b8201836020820111156104ec57600080fd5b8035906020019184600183028401116401000000008311171561050e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b71945050505050565b34801561055b57600080fd5b506101d96004803603604081101561057257600080fd5b506001600160a01b0381358116916020013516610c72565b34801561059657600080fd5b506103a9610c9d565b3480156105ab57600080fd5b506101d9610cf4565b3480156105c057600080fd5b506102ae600480360360208110156105d757600080fd5b50356001600160a01b0316610cfa565b3480156105f357600080fd5b506103a96004803603602081101561060a57600080fd5b50356001600160a01b0316610dfd565b34801561062657600080fd5b506101d9610e82565b81810282158061064757508183828161064457fe5b04145b61065057600080fd5b92915050565b600080821161066457600080fd5b81838161066d57fe5b049392505050565b8181018281101561065057600080fd5b6001600160a01b03821661069857600080fd5b6001600160a01b0383166000908152600160205260409020548111156106bd57600080fd5b6001600160a01b0383166000908152600160205260409020546106e6908263ffffffff610e8816565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461071b908263ffffffff61067516565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600a5481565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108035780601f106107d857610100808354040283529160200191610803565b820191906000526020600020905b8154815290600101906020018083116107e657829003601f168201915b505050505081565b600081158061083b57503360009081526002602090815260408083206001600160a01b0387168452909152902054155b61084457600080fd5b3360008181526002602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60065490565b6000606060643610156108c057fe5b6001600160a01b03851660009081526002602090815260408083203384529091529020548311156108f057600080fd5b6001600160a01b0385166000908152600260209081526040808320338452909152902054610924908463ffffffff610e8816565b6001600160a01b0386166000908152600260209081526040808320338452909152902055610953858585610685565b600191505b509392505050565b6000826001600160a01b03166370a08231836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156109b857600080fd5b505afa1580156109cc573d6000803e3d6000fd5b505050506040513d60208110156109e257600080fd5b50519392505050565b60055481565b60065481565b6000546001600160a01b03163314610a0e57600080fd5b33600090815260016020526040902054811115610a2a57600080fd5b33600081815260016020526040902054610a4a908363ffffffff610e8816565b6001600160a01b038216600090815260016020526040902055600654610a76908363ffffffff610e8816565b6006556040805183815290516001600160a01b038316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25050565b6001600160a01b031660009081526001602052604090205490565b60085481565b6000546001600160a01b031681565b60095481565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108035780601f106107d857610100808354040283529160200191610803565b600060406044361015610b5c57fe5b610b67338585610685565b5060019392505050565b600083610b7e818561080b565b1561095857604051600160e01b638f4ffcb102815233600482018181526024830187905230604484018190526080606485019081528751608486015287516001600160a01b03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b83811015610c00578181015183820152602001610be8565b50505050905090810190601f168015610c2d5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610c4f57600080fd5b505af1158015610c63573d6000803e3d6000fd5b50600198975050505050505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000546001600160a01b03163314610cb457600080fd5b600080546040513031926001600160a01b03909216916108fc841502918491818181858888f19350505050158015610cf0573d6000803e3d6000fd5b5050565b60075481565b600080546001600160a01b03163314610d1257600080fd5b60408051600160e01b6370a0823102815230600482015290516000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b158015610d5f57600080fd5b505afa158015610d73573d6000803e3d6000fd5b505050506040513d6020811015610d8957600080fd5b50516000805460408051600160e01b63a9059cbb0281526001600160a01b0392831660048201526024810185905290519394509086169263a9059cbb92604480840193602093929083900390910190829087803b158015610de957600080fd5b505af11580156109cc573d6000803e3d6000fd5b6000546001600160a01b03163314610e1457600080fd5b6001600160a01b038116610e2757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600b5481565b600082821115610e9757600080fd5b5090039056fea165627a7a72305820c45a10220423b1e257e7b7d1d15189e9a4c8f687db185a05e9a82a76d11ed9e20029"
}