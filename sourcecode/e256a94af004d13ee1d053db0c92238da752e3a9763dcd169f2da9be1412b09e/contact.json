{
  "address": "0xd31a5afcf4f2168d0e3a47685c85b2166edf69d9",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DailyRewards",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-17\n*/\n\npragma solidity ^0.4.24;\n\n// written by garry from Team Chibi Fighters\n// find us at https://chibifighters.io\n// [emailÂ protected]\n// version 1.0.0\n\n\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n    \n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n        newOwner = address(0);\n    }\n}\n\n\ninterface ERC20Interface {\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    function transfer(address to, uint tokens) external;\n    function balanceOf(address _owner) external view returns (uint256 _balance);\n}\n\ninterface ERC20InterfaceClassic {\n    function transfer(address to, uint tokens) external returns (bool success);\n}\n\ncontract DailyRewards is Owned {\n\n\tevent RewardClaimed(\n\t\taddress indexed buyer,\n\t\tuint256 day\n\t);\n\t\n\t// what day the player is on in his reward chain\n\tmapping (address => uint) private daysInRow;\n\n\t// timeout after which row is broken\n\tmapping (address => uint) private timeout;\n\t\n\t// how often the reward can be claimed, e.g. every 24h\n\tuint waitingTime = 24 hours;\n\t// window of claiming, if it expires day streak resets to day 1\n\tuint waitingTimeBuffer = 48 hours;\n\t\n\t\n\tconstructor() public {\n\t    // Explore Chibis and their universe\n\t    // Off chain battles, real Ether fights, true on chain ownership\n\t    // Leaderboards, tournaments, roleplay elements, we got it all\n\t}\n\t\n\t\n\tfunction requestReward() public returns (uint _days) {\n\t    require (msg.sender != address(0));\n\t    require (now > timeout[msg.sender]);\n\t    \n\t    // waited too long, reset\n\t    if (now > timeout[msg.sender] + waitingTimeBuffer) {\n\t        daysInRow[msg.sender] = 1;    \n\t    } else {\n\t        // no limit to being logged in, looking forward to the longest streak\n\t        daysInRow[msg.sender]++;\n\t    }\n\t    \n\t    timeout[msg.sender] = now + waitingTime;\n\t    \n\t    emit RewardClaimed(msg.sender, daysInRow[msg.sender]);\n\t    \n\t    return daysInRow[msg.sender];\n\t}\n\t\n\t\n\t/**\n\t * @dev Query stats of next reward, checks for expired time, too\n\t **/\n\tfunction nextReward() public view returns (uint _day, uint _nextClaimTime, uint _nextClaimExpire) {\n\t    uint _dayCheck;\n\t    if (now > timeout[msg.sender] + waitingTimeBuffer) _dayCheck = 1; else _dayCheck = daysInRow[msg.sender] + 1;\n\t    \n\t    return (_dayCheck, timeout[msg.sender], timeout[msg.sender] + waitingTimeBuffer);\n\t}\n\t\n\t\n\tfunction queryWaitingTime() public view returns (uint _waitingTime) {\n\t    return waitingTime;\n\t}\n\t\n\tfunction queryWaitingTimeBuffer() public view returns (uint _waitingTimeBuffer) {\n\t    return waitingTimeBuffer;\n\t}\n\t\n\n\t/**\n\t * @dev Sets the interval for daily rewards, e.g. 24h = 86400\n\t * @param newTime New interval time in seconds\n\t **/\n\tfunction setWaitingTime(uint newTime) public onlyOwner returns (uint _newWaitingTime) {\n\t    waitingTime = newTime;\n\t    return waitingTime;\n\t}\n\t\n\t\n\t/**\n\t * @dev Sets buffer for daily rewards. So user have time to claim it. e.g. 1h = 3600\n\t * @param newTime New buffer in seconds\n\t **/\n\tfunction setWaitingTimeBuffer(uint newTime) public onlyOwner returns (uint _newWaitingTimeBuffer) {\n\t    waitingTimeBuffer = newTime;\n\t    return waitingTimeBuffer;\n\t}\n\n\n    /**\n    * @dev Send Ether to owner\n    * @param _address Receiving address\n    * @param _amountWei Amount in WEI to send\n    **/\n    function weiToOwner(address _address, uint _amountWei) public onlyOwner returns (bool) {\n        require(_amountWei <= address(this).balance);\n        _address.transfer(_amountWei);\n        return true;\n    }\n\n    function ERC20ToOwner(address _to, uint256 _amount, ERC20Interface _tokenContract) public onlyOwner {\n        _tokenContract.transfer(_to, _amount);\n    }\n\n    function ERC20ClassicToOwner(address _to, uint256 _amount, ERC20InterfaceClassic _tokenContract) public onlyOwner {\n        _tokenContract.transfer(_to, _amount);\n    }\n\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amountWei\",\"type\":\"uint256\"}],\"name\":\"weiToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"ERC20ClassicToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"requestReward\",\"outputs\":[{\"name\":\"_days\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextReward\",\"outputs\":[{\"name\":\"_day\",\"type\":\"uint256\"},{\"name\":\"_nextClaimTime\",\"type\":\"uint256\"},{\"name\":\"_nextClaimExpire\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"ERC20ToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTime\",\"type\":\"uint256\"}],\"name\":\"setWaitingTimeBuffer\",\"outputs\":[{\"name\":\"_newWaitingTimeBuffer\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTime\",\"type\":\"uint256\"}],\"name\":\"setWaitingTime\",\"outputs\":[{\"name\":\"_newWaitingTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"queryWaitingTimeBuffer\",\"outputs\":[{\"name\":\"_waitingTimeBuffer\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"queryWaitingTime\",\"outputs\":[{\"name\":\"_waitingTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"day\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "6080604052620151806004556202a30060055534801561001e57600080fd5b5060008054600160a060020a031916331790556106bf806100406000396000f3006080604052600436106100ab5763ffffffff60e060020a6000350416630db5db2681146100b057806328f14573146100e85780634cecac6d146101155780636da4fe261461013c57806379ba50971461016f5780638da5cb5b14610184578063d4ee1d90146101b5578063dea21027146101ca578063e90389bd146101f5578063ebc73e651461020d578063f2fde38b14610225578063f5cb0daa14610246578063f94e08d01461025b575b600080fd5b3480156100bc57600080fd5b506100d4600160a060020a0360043516602435610270565b604080519115158252519081900360200190f35b3480156100f457600080fd5b50610113600160a060020a0360043581169060243590604435166102d6565b005b34801561012157600080fd5b5061012a610381565b60408051918252519081900360200190f35b34801561014857600080fd5b50610151610461565b60408051938452602084019290925282820152519081900360600190f35b34801561017b57600080fd5b506101136104c2565b34801561019057600080fd5b5061019961054a565b60408051600160a060020a039092168252519081900360200190f35b3480156101c157600080fd5b50610199610559565b3480156101d657600080fd5b50610113600160a060020a036004358116906024359060443516610568565b34801561020157600080fd5b5061012a6004356105ff565b34801561021957600080fd5b5061012a600435610620565b34801561023157600080fd5b50610113600160a060020a0360043516610641565b34801561025257600080fd5b5061012a610687565b34801561026757600080fd5b5061012a61068d565b60008054600160a060020a0316331461028857600080fd5b303182111561029657600080fd5b604051600160a060020a0384169083156108fc029084906000818181858888f193505050501580156102cc573d6000803e3d6000fd5b5060019392505050565b600054600160a060020a031633146102ed57600080fd5b80600160a060020a031663a9059cbb84846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561035057600080fd5b505af1158015610364573d6000803e3d6000fd5b505050506040513d602081101561037a57600080fd5b5050505050565b600033151561038f57600080fd5b3360009081526003602052604090205442116103aa57600080fd5b60055433600090815260036020526040902054014211156103dd57336000908152600260205260409020600190556103f4565b336000908152600260205260409020805460010190555b600454336000818152600360209081526040808320429095019094556002815290839020548351908152925191927f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241929081900390910190a2503360009081526002602052604090205490565b6005543360009081526003602052604081205490918291829182910142111561048c575060016104a1565b50336000908152600260205260409020546001015b33600090815260036020526040902054600554919450925082019050909192565b600154600160a060020a031633146104d957600080fd5b60015460008054604051600160a060020a0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b600154600160a060020a031681565b600054600160a060020a0316331461057f57600080fd5b80600160a060020a031663a9059cbb84846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156105e257600080fd5b505af11580156105f6573d6000803e3d6000fd5b50505050505050565b60008054600160a060020a0316331461061757600080fd5b50600581905590565b60008054600160a060020a0316331461063857600080fd5b50600481905590565b600054600160a060020a0316331461065857600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60055490565b600454905600a165627a7a7230582081abc0a122904f0a1cf24731ea26253414f4973919cab68e653d706d63a96ce30029"
}