{
  "address": "0x209c860cf96cd3968b6d0aaab1d5e13c62632bf5",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Remember43",
  "compilerVersion": "v0.5.1+commit.c8a2cb62",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-03\n*/\n\npragma solidity ^0.5.0;\n\n/** \n  * @title Remember Jeju 4.3 Tragedy \n  * @author Sooyoung Hyun\n  * @notice You can use this contract to create online memorial database based on smart contracts.\n  * @dev For more implementation details read the \"README.md\" document. \n  */\ncontract Remember43 {\n    \n    mapping(uint16 => Victim) public victims;\n    mapping(address => bool) public isContributor;\n    \n    uint16 public victimsCount;\n    address owner;\n    uint timeout = 20 minutes;\n    \n    modifier onlyOwner {\n        require(owner == msg.sender);\n        _;\n    }\n    \n    modifier onlyContributor {\n        require(isContributor[msg.sender]);\n        _;\n    }\n    \n    struct Victim {\n        uint16 idx;\n        string name;\n        string addr;\n        uint createTime;\n    }\n    \n    event contributorSet(address indexed contributor, bool state);\n    event victimAdded(uint16 idx, string name, string addr, uint createTime);\n    event victimModified(uint16 idx, string name, string addr, uint createTime);\n\n    constructor() public {\n        owner = msg.sender;\n    }\n    \n    /**\n      * @notice Set contributor's state true or false.\n      * @dev Only owner can use this function to change contributor's state. \n      * @param _addr User address for updating state.\n      * @param _state True or false for updating state.\n      */\n    function setContributor(address _addr, bool _state) onlyOwner public {\n        isContributor[_addr] = _state;\n        emit contributorSet(_addr, isContributor[_addr]);\n    }\n    \n    /**\n      * @notice Add victim to storage.\n      * @dev Only owner and contributor can use this function to add victim to storage.\n      * @param _name Name of victim.\n      * @param _addr Local address of victim.\n      */\n    function addVictim(string memory _name, string memory _addr) onlyContributor public {\n        victimsCount++;\n        Victim memory vt = Victim(victimsCount, _name, _addr, now);\n        victims[victimsCount] = vt;\n        emit victimAdded(victims[victimsCount].idx, victims[victimsCount].name, victims[victimsCount].addr, victims[victimsCount].createTime);\n    }\n    \n    /**\n      * @notice Get victim infomation.\n      * @dev Function used in frontend to get the user infomation.\n      * @param _idx Request index for providing infomation.  \n      * @return _idx User index of requests.\n      * @return vt.name User name of requests.\n      * @return vt.addr User local address of requests.\n      */\n    function getVictim(uint16 _idx) public view returns(uint16, string memory, string memory) {\n        Victim memory vt = victims[_idx]; \n        return (_idx, vt.name, vt.addr); \n    }\n    \n    /**\n      * @notice Modify victim infomation.\n      * @dev Only owner and contributor can use this function to modify victim infomation.\n      * @dev It can be modified only within the time limit.\n      * @param _idx Index of victim.\n      * @param _name Name of victim.\n      * @param _addr Local address of victim.\n      */\n    function modifyVictim(uint16 _idx, string memory _name, string memory _addr) onlyContributor public {\n        require(victims[_idx].createTime + timeout > now);\n        victims[_idx].name = _name;\n        victims[_idx].addr = _addr;\n        emit victimModified(victims[_idx].idx, victims[_idx].name, victims[_idx].addr, victims[_idx].createTime);\n        \n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isContributor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"victimsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setContributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_addr\",\"type\":\"string\"}],\"name\":\"addVictim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint16\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_addr\",\"type\":\"string\"}],\"name\":\"modifyVictim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"victims\",\"outputs\":[{\"name\":\"idx\",\"type\":\"uint16\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"addr\",\"type\":\"string\"},{\"name\":\"createTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint16\"}],\"name\":\"getVictim\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"contributorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"idx\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"createTime\",\"type\":\"uint256\"}],\"name\":\"victimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"idx\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"createTime\",\"type\":\"uint256\"}],\"name\":\"victimModified\",\"type\":\"event\"}]",
  "bytecode": "60806040526104b060035534801561001657600080fd5b50336002806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611337806100666000396000f3fe60806040526004361061007d576000357c0100000000000000000000000000000000000000000000000000000000900480631d0d35f51461008257806331adba2f146100eb5780635059d25a1461011e5780639d3de3431461017b578063c9eebd9d146102da578063cf772c7d14610447578063d1ae2f0114610581575b600080fd5b34801561008e57600080fd5b506100d1600480360360208110156100a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106b4565b604051808215151515815260200191505060405180910390f35b3480156100f757600080fd5b506101006106d4565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561012a57600080fd5b506101796004803603604081101561014157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506106e8565b005b34801561018757600080fd5b506102d86004803603604081101561019e57600080fd5b81019080803590602001906401000000008111156101bb57600080fd5b8201836020820111156101cd57600080fd5b803590602001918460018302840111640100000000831117156101ef57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561025257600080fd5b82018360208201111561026457600080fd5b8035906020019184600183028401116401000000008311171561028657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061083c565b005b3480156102e657600080fd5b50610445600480360360608110156102fd57600080fd5b81019080803561ffff1690602001909291908035906020019064010000000081111561032857600080fd5b82018360208201111561033a57600080fd5b8035906020019184600183028401116401000000008311171561035c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103bf57600080fd5b8201836020820111156103d157600080fd5b803590602001918460018302840111640100000000831117156103f357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610bbe565b005b34801561045357600080fd5b506104846004803603602081101561046a57600080fd5b81019080803561ffff169060200190929190505050610e89565b604051808561ffff1661ffff1681526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156104dc5780820151818401526020810190506104c1565b50505050905090810190601f1680156105095780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610542578082015181840152602081019050610527565b50505050905090810190601f16801561056f5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561058d57600080fd5b506105be600480360360208110156105a457600080fd5b81019080803561ffff169060200190929190505050610ff7565b604051808461ffff1661ffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156106105780820151818401526020810190506105f5565b50505050905090810190601f16801561063d5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561067657808201518184015260208101905061065b565b50505050905090810190601f1680156106a35780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b60016020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900461ffff1681565b3373ffffffffffffffffffffffffffffffffffffffff166002809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561074357600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f2143af776ed5abe616a0251dc8dbfda9af8047efb71ab448a0238cf058302835600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16604051808215151515815260200191505060405180910390a25050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561089457600080fd5b6002600081819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550506108d16111b9565b608060405190810160405280600260009054906101000a900461ffff1661ffff16815260200184815260200183815260200142815250905080600080600260009054906101000a900461ffff1661ffff1661ffff16815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160010190805190602001906109739291906111e6565b5060408201518160020190805190602001906109909291906111e6565b50606082015181600301559050507f143a7badea0ec5673064f1eb1154d0215847d214ca4915b638ad2cb064927c59600080600260009054906101000a900461ffff1661ffff1661ffff16815260200190815260200160002060000160009054906101000a900461ffff16600080600260009054906101000a900461ffff1661ffff1661ffff168152602001908152602001600020600101600080600260009054906101000a900461ffff1661ffff1661ffff168152602001908152602001600020600201600080600260009054906101000a900461ffff1661ffff1661ffff16815260200190815260200160002060030154604051808561ffff1661ffff1681526020018060200180602001848152602001838103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610b245780601f10610af957610100808354040283529160200191610b24565b820191906000526020600020905b815481529060010190602001808311610b0757829003601f168201915b5050838103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610ba75780601f10610b7c57610100808354040283529160200191610ba7565b820191906000526020600020905b815481529060010190602001808311610b8a57829003601f168201915b5050965050505050505060405180910390a1505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610c1657600080fd5b426003546000808661ffff1661ffff1681526020019081526020016000206003015401111515610c4557600080fd5b816000808561ffff1661ffff1681526020019081526020016000206001019080519060200190610c76929190611266565b50806000808561ffff1661ffff1681526020019081526020016000206002019080519060200190610ca8929190611266565b507f8da43026947ef210db207049a31447aa567b69a90a1e9e597cca925de47c9d1f6000808561ffff1661ffff16815260200190815260200160002060000160009054906101000a900461ffff166000808661ffff1661ffff1681526020019081526020016000206001016000808761ffff1661ffff1681526020019081526020016000206002016000808861ffff1661ffff16815260200190815260200160002060030154604051808561ffff1661ffff1681526020018060200180602001848152602001838103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610def5780601f10610dc457610100808354040283529160200191610def565b820191906000526020600020905b815481529060010190602001808311610dd257829003601f168201915b5050838103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610e725780601f10610e4757610100808354040283529160200191610e72565b820191906000526020600020905b815481529060010190602001808311610e5557829003601f168201915b5050965050505050505060405180910390a1505050565b60006020528060005260406000206000915090508060000160009054906101000a900461ffff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f495780601f10610f1e57610100808354040283529160200191610f49565b820191906000526020600020905b815481529060010190602001808311610f2c57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fe75780601f10610fbc57610100808354040283529160200191610fe7565b820191906000526020600020905b815481529060010190602001808311610fca57829003601f168201915b5050505050908060030154905084565b60006060806110046111b9565b6000808661ffff1661ffff168152602001908152602001600020608060405190810160405290816000820160009054906101000a900461ffff1661ffff1661ffff168152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110e35780601f106110b8576101008083540402835291602001916110e3565b820191906000526020600020905b8154815290600101906020018083116110c657829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111855780601f1061115a57610100808354040283529160200191611185565b820191906000526020600020905b81548152906001019060200180831161116857829003601f168201915b5050505050815260200160038201548152505090508481602001518260400151819150809050935093509350509193909250565b608060405190810160405280600061ffff1681526020016060815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061122757805160ff1916838001178555611255565b82800160010185558215611255579182015b82811115611254578251825591602001919060010190611239565b5b50905061126291906112e6565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106112a757805160ff19168380011785556112d5565b828001600101855582156112d5579182015b828111156112d45782518255916020019190600101906112b9565b5b5090506112e291906112e6565b5090565b61130891905b808211156113045760008160009055506001016112ec565b5090565b9056fea165627a7a72305820c016afa72eaed9c182366b10fcfe74bca50a88b7d5e678d40b8ac37eebee16630029"
}