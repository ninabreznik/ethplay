{
  "address": "0x3dC730f0eBA8E630A016084E22C0A1318F83fFA5",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "IPVToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-06-09\n*/\n\npragma solidity ^0.4.24;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint a, uint b) internal pure returns (uint) {\n    if (a == 0) {\n      return 0;\n    }\n    uint c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint a, uint b) internal pure returns (uint) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint a, uint b) internal pure returns (uint) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint a, uint b) internal pure returns (uint) {\n    uint c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract ERC20 {\n\n    function totalSupply() public constant returns (uint supply);\n    \n    function balanceOf(address _owner) public constant returns (uint balance);\n    \n    function transfer(address _to, uint _value) public returns (bool success);\n    \n    function transferFrom(address _from, address _to, uint _value) public returns (bool success);\n    \n    function approve(address _spender, uint _value) public returns (bool success);\n    \n    function allowance(address _owner, address _spender) public constant returns (uint remaining);\n\n    event Transfer(address indexed _from, address indexed _to, uint _value);\n    \n    event Approval(address indexed _owner, address indexed _spender, uint _value);\n    \n    event Burn(address indexed _from, uint _value);\n}\n\n\ncontract StandardToken is ERC20 {\n\n    using SafeMath for uint;\n\n    uint public totalSupply;\n\n    mapping (address => uint) balances;\n    \n    mapping (address => mapping (address => uint)) allowed;\n\n    function totalSupply() public constant returns (uint) {\n        return totalSupply;\n    }\n\n    function balanceOf(address _owner) public constant returns (uint balance) {\n        return balances[_owner];\n    }\n\n    function transfer(address _to, uint _value) public returns (bool success) {\n        require(balances[msg.sender] >= _value && _value > 0);\n        \n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        \n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success) {\n        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0);\n        \n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        emit Transfer(_from, _to, _value);\n        \n        return true;\n    }\n\n    function approve(address _spender, uint _value) public returns (bool success) {\n        // https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) {\n            revert();\n        }\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n\n}\n\ncontract Controlled {\n\n    address public controller;\n\n    constructor() public {\n        controller = msg.sender;\n    }\n\n    function changeController(address _newController) public only_controller {\n        controller = _newController;\n    }\n    \n    function getController() constant public returns (address) {\n        return controller;\n    }\n\n    modifier only_controller { \n        require(msg.sender == controller);\n        _; \n    }\n\n}\n\n\ncontract IPVToken is StandardToken, Controlled {\n    \n    using SafeMath for uint;\n\n    string public constant name = \"IPV Token\";\n\n    string public constant symbol = \"IPV\";\n\n    uint8 public constant decimals = 9;\n    \n    // for token circulation on platforms that integrate Theta before unlockTime\n    mapping (address => bool) internal frozenAccount;\n\n    constructor() public {\n        totalSupply = 1000*10000*10000 * 10 ** uint256(decimals); \n        balances[msg.sender] = totalSupply; \n    }\n\n    function transfer(address _to, uint _amount) can_transfer(msg.sender, _to) public returns (bool success) {\n        return super.transfer(_to, _amount);\n    }\n\n    function transferFrom(address _from, address _to, uint _amount) can_transfer(_from, _to) public returns (bool success) {\n        return super.transferFrom(_from, _to, _amount);\n    }\n\n    function mint(address _owner, uint _amount) external only_controller returns (bool) {\n        totalSupply = totalSupply.add(_amount);\n        balances[_owner] = balances[_owner].add(_amount);\n\n        emit Transfer(0, _owner, _amount);\n        return true;\n    }\n    \n    function burn(uint _amount) public returns (bool) {\n    \trequire(balances[msg.sender] >= _amount && _amount > 0);\n    \t\n    \ttotalSupply = totalSupply.sub(_amount);\n    \tbalances[msg.sender] = balances[msg.sender].sub(_amount);\n    \t\n        emit Burn(msg.sender, _amount);\n        return true;\n    }\n\n    function burnFrom(address _from, uint _amount) public returns (bool) {\n    \trequire(balances[_from] >= _amount && _amount > 0 && allowed[_from][msg.sender] >= _amount);\n    \t\n    \ttotalSupply = totalSupply.sub(_amount);\n    \tbalances[_from] = balances[_from].sub(_amount);\n    \tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n    \t\n        emit Burn(_from, _amount);\n        return true;\n    }\n    \n    function freezeAccount(address _addr, bool _isFrozen) only_controller public {\n    \tfrozenAccount[_addr] = _isFrozen;\n    }\n\n    function isFrozenAccount(address _addr) constant public returns(bool) {\n        return frozenAccount[_addr];\n    }\n\n    modifier can_transfer(address _from, address _to) {\n        require(!isFrozenAccount(_from) && !isFrozenAccount(_to));\n        _;\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isFrozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_isFrozen\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060038054600160a060020a0319163390811790915568056bc75e2d6310000060008181559182526001602052604090912055610bab806100526000396000f3006080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101b757806323b872dd146101de5780633018205f14610208578063313ce567146102395780633cebb823146102645780634028db791461028757806340c10f19146102a857806342966c68146102cc57806370a08231146102e457806379cc67901461030557806395d89b4114610329578063a9059cbb1461033e578063dd62ed3e14610362578063e724529c14610389578063f77c4791146103af575b600080fd5b34801561010157600080fd5b5061010a6103c4565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014457818101518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018b57600080fd5b506101a3600160a060020a03600435166024356103fb565b604080519115158252519081900360200190f35b3480156101c357600080fd5b506101cc61049f565b60408051918252519081900360200190f35b3480156101ea57600080fd5b506101a3600160a060020a03600435811690602435166044356104a5565b34801561021457600080fd5b5061021d6104e5565b60408051600160a060020a039092168252519081900360200190f35b34801561024557600080fd5b5061024e6104f4565b6040805160ff9092168252519081900360200190f35b34801561027057600080fd5b50610285600160a060020a03600435166104f9565b005b34801561029357600080fd5b506101a3600160a060020a036004351661053f565b3480156102b457600080fd5b506101a3600160a060020a036004351660243561055d565b3480156102d857600080fd5b506101a3600435610612565b3480156102f057600080fd5b506101cc600160a060020a03600435166106c2565b34801561031157600080fd5b506101a3600160a060020a03600435166024356106dd565b34801561033557600080fd5b5061010a61081d565b34801561034a57600080fd5b506101a3600160a060020a0360043516602435610854565b34801561036e57600080fd5b506101cc600160a060020a0360043581169060243516610892565b34801561039557600080fd5b50610285600160a060020a036004351660243515156108bd565b3480156103bb57600080fd5b5061021d6108ff565b60408051808201909152600981527f49505620546f6b656e0000000000000000000000000000000000000000000000602082015281565b6000811580159061042e5750336000908152600260209081526040808320600160a060020a038716845290915290205415155b1561043857600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60005490565b600083836104b28261053f565b1580156104c557506104c38161053f565b155b15156104d057600080fd5b6104db86868661090e565b9695505050505050565b600354600160a060020a031690565b600981565b600354600160a060020a0316331461051057600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a031660009081526004602052604090205460ff1690565b600354600090600160a060020a0316331461057757600080fd5b60005461058a908363ffffffff610a7d16565b6000908155600160a060020a0384168152600160205260409020546105b5908363ffffffff610a7d16565b600160a060020a03841660008181526001602090815260408083209490945583518681529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b3360009081526001602052604081205482118015906106315750600082115b151561063c57600080fd5b60005461064f908363ffffffff610a9316565b600090815533815260016020526040902054610671908363ffffffff610a9316565b33600081815260016020908152604091829020939093558051858152905191927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca592918290030190a2506001919050565b600160a060020a031660009081526001602052604090205490565b600160a060020a03821660009081526001602052604081205482118015906107055750600082115b80156107345750600160a060020a03831660009081526002602090815260408083203384529091529020548211155b151561073f57600080fd5b600054610752908363ffffffff610a9316565b6000908155600160a060020a03841681526001602052604090205461077d908363ffffffff610a9316565b600160a060020a03841660009081526001602090815260408083209390935560028152828220338352905220546107ba908363ffffffff610a9316565b600160a060020a0384166000818152600260209081526040808320338452825291829020939093558051858152905191927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca592918290030190a250600192915050565b60408051808201909152600381527f4950560000000000000000000000000000000000000000000000000000000000602082015281565b600033836108618261053f565b15801561087457506108728161053f565b155b151561087f57600080fd5b6108898585610aa5565b95945050505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a031633146108d457600080fd5b600160a060020a03919091166000908152600460205260409020805460ff1916911515919091179055565b600354600160a060020a031681565b600160a060020a03831660009081526001602052604081205482118015906109595750600160a060020a03841660009081526002602090815260408083203384529091529020548211155b80156109655750600082115b151561097057600080fd5b600160a060020a038416600090815260016020526040902054610999908363ffffffff610a9316565b600160a060020a0380861660009081526001602052604080822093909355908516815220546109ce908363ffffffff610a7d16565b600160a060020a038085166000908152600160209081526040808320949094559187168152600282528281203382529091522054610a12908363ffffffff610a9316565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b600082820183811015610a8c57fe5b9392505050565b600082821115610a9f57fe5b50900390565b336000908152600160205260408120548211801590610ac45750600082115b1515610acf57600080fd5b33600090815260016020526040902054610aef908363ffffffff610a9316565b3360009081526001602052604080822092909255600160a060020a03851681522054610b21908363ffffffff610a7d16565b600160a060020a0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3506001929150505600a165627a7a7230582049c88bde793d64830ed230b6d3168663a7b5fe3e184b1ab724ee58f4a24a9c1b0029"
}