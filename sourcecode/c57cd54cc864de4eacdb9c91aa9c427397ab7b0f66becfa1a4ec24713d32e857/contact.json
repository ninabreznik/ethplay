{
  "address": "0xa9ed80cb42757d8150a8f006dcb1728ecd97c98b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MGS",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-06\n*/\n\npragma solidity ^0.4.24;\n\nlibrary SafeMath {\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    function div(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n}\n\ncontract ERC20Interface {\n    function totalSupply() public view returns (uint);\n    function balanceOf(address tokenOwner) public view returns (uint balance);\n    //function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    //function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    //event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\n    event Burn(address indexed from, uint256 value);\n}\n\ncontract Owned {\n    address public owner;\n    address public newOwner;\n    address public admin;\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n    function acceptOwnership() public onlyOwner {\n        require(msg.sender == newOwner);\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n        newOwner = address(0);\n    }\n}\n\ncontract MGS is ERC20Interface, Owned {\n    using SafeMath for uint;\n\n    string public symbol;\n    string public  name;\n    uint8 public decimals;\n    uint _totalSupply;\n    uint   public  totallockedtime;\n\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n\n    constructor() public {\n        symbol = \"MGS\";\n        name = \"MGS Token\";\n        decimals = 18;\n        _totalSupply =  5000000000 * 10**uint(decimals);\n        admin = owner;\n        balances[owner] = _totalSupply;\n        totallockedtime = now;\n        emit Transfer(address(0), owner, _totalSupply);\n    }\n\n    modifier validDestination(address to){\n        require(to != address(0x0));\n        require(to != address(this));\n        _;\n    }\n\n    modifier onlyWhenUnlocked(){\n      require(getTime() >= totallockedtime);\n      _;\n    }\n\n    function setTotalLockedTime(uint _value) onlyOwner public{\n        totallockedtime = _value;\n    }\n\n    function totalSupply() public view returns (uint) {\n        return _totalSupply.sub(balances[address(0)]);\n    }\n\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\n        return balances[tokenOwner];\n    }\n\n    function transfer(address to, uint tokens) onlyWhenUnlocked public validDestination(to) returns (bool success) {\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(msg.sender, to, tokens);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n        balances[from] = balances[from].sub(tokens);\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(from, to, tokens);\n        return true;\n    }\n\n    function burn(uint256 _value) public returns (bool success) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        _totalSupply = _totalSupply.sub(_value);\n        emit Burn(msg.sender, _value);\n        emit Transfer(msg.sender, address(0x0), _value);\n        return true;\n    }\n\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n      require(_from != 0);\n      require(_value <= balances[_from]);\n      _totalSupply = _totalSupply.sub(_value);\n      balances[_from] = balances[_from].sub(_value);\n      emit Transfer(_from, address(0), _value);\n      return true;\n    }\n\n    function getTime() public constant returns (uint) {\n        return now;\n    }\n\n    function () external payable {\n        revert();\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setTotalLockedTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totallockedtime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a031916331790556040805180820190915260038082527f4d4753000000000000000000000000000000000000000000000000000000000060209092019182526100659181610143565b506040805180820190915260098082527f4d475320546f6b656e000000000000000000000000000000000000000000000060209092019182526100aa91600491610143565b506005805460ff19166012179081905564012a05f20060ff91909116600a0a0260068190556000805460028054600160a060020a031916600160a060020a039283169081179091558252600860209081526040808420859055426007558354815195865290519216937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36101de565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061018457805160ff19168380011785556101b1565b828001600101855582156101b1579182015b828111156101b1578251825591602001919060010190610196565b506101bd9291506101c1565b5090565b6101db91905b808211156101bd57600081556001016101c7565b90565b6109bf806101ed6000396000f3006080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f557806318160ddd1461017f57806323b872dd146101a6578063313ce567146101e457806342966c681461020f578063557ed1ba1461022757806370a082311461023c57806379ba50971461025d57806379cc6790146102745780638da5cb5b1461029857806395d89b41146102c9578063a9059cbb146102de578063c9cead8314610302578063d4050d431461031a578063d4ee1d901461032f578063f2fde38b14610344578063f851a44014610365575b600080fd5b34801561010157600080fd5b5061010a61037a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014457818101518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018b57600080fd5b50610194610408565b60408051918252519081900360200190f35b3480156101b257600080fd5b506101d0600160a060020a036004358116906024351660443561044b565b604080519115158252519081900360200190f35b3480156101f057600080fd5b506101f9610544565b6040805160ff9092168252519081900360200190f35b34801561021b57600080fd5b506101d060043561054d565b34801561023357600080fd5b506101946105f7565b34801561024857600080fd5b50610194600160a060020a03600435166105fb565b34801561026957600080fd5b50610272610616565b005b34801561028057600080fd5b506101d0600160a060020a03600435166024356106b5565b3480156102a457600080fd5b506102ad61077b565b60408051600160a060020a039092168252519081900360200190f35b3480156102d557600080fd5b5061010a61078a565b3480156102ea57600080fd5b506101d0600160a060020a03600435166024356107e5565b34801561030e57600080fd5b506102726004356108c8565b34801561032657600080fd5b506101946108e4565b34801561033b57600080fd5b506102ad6108ea565b34801561035057600080fd5b50610272600160a060020a03600435166108f9565b34801561037157600080fd5b506102ad61093f565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b505050505081565b600080805260086020527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c7546006546104469163ffffffff61094e16565b905090565b600160a060020a038316600090815260086020526040812054610474908363ffffffff61094e16565b600160a060020a03851660009081526008602090815260408083209390935560098152828220338352905220546104b1908363ffffffff61094e16565b600160a060020a0380861660009081526009602090815260408083203384528252808320949094559186168152600890915220546104f5908363ffffffff61096316565b600160a060020a03808516600081815260086020908152604091829020949094558051868152905191939288169260008051602061097483398151915292918290030190a35060019392505050565b60055460ff1681565b3360009081526008602052604081205461056d908363ffffffff61094e16565b33600090815260086020526040902055600654610590908363ffffffff61094e16565b60065560408051838152905133917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a260408051838152905160009133916000805160206109748339815191529181900360200190a3506001919050565b4290565b600160a060020a031660009081526008602052604090205490565b600054600160a060020a0316331461062d57600080fd5b600154600160a060020a0316331461064457600080fd5b60015460008054604051600160a060020a0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b6000600160a060020a03831615156106cc57600080fd5b600160a060020a0383166000908152600860205260409020548211156106f157600080fd5b600654610704908363ffffffff61094e16565b600655600160a060020a038316600090815260086020526040902054610730908363ffffffff61094e16565b600160a060020a038416600081815260086020908152604080832094909455835186815293519193600080516020610974833981519152929081900390910190a35060015b92915050565b600054600160a060020a031681565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104005780601f106103d557610100808354040283529160200191610400565b60006007546107f26105f7565b10156107fd57600080fd5b82600160a060020a038116151561081357600080fd5b600160a060020a03811630141561082957600080fd5b33600090815260086020526040902054610849908463ffffffff61094e16565b3360009081526008602052604080822092909255600160a060020a0386168152205461087b908463ffffffff61096316565b600160a060020a0385166000818152600860209081526040918290209390935580518681529051919233926000805160206109748339815191529281900390910190a35060019392505050565b600054600160a060020a031633146108df57600080fd5b600755565b60075481565b600154600160a060020a031681565b600054600160a060020a0316331461091057600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600254600160a060020a031681565b60008282111561095d57600080fd5b50900390565b8181018281101561077557600080fd00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582011675e8f100691dc207f336c9b69e7cbd651b381722e1bd3cc2bdf76cc42dcb00029"
}