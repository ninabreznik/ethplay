{
  "address": "0xc6c2a8f2c957806ac0580b46d84d2717291b9df1",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Core",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-18\n*/\n\npragma solidity 0.4.21;\n\ncontract Maths {\n\n    function Mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        require(a == 0 || c / a == b);\n        return c;\n    }\n\n    function Div(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n\n    function Sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        return a - b;\n    }\n\n    function Add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n\n}\n\ncontract Owned is Maths {\n\n    address public owner;\n    address public collector;\n    bool public transfer_status = true;\n    event OwnershipChanged(address indexed _invoker, address indexed _newOwner);        \n    event TransferStatusChanged(bool _newStatus);\n    uint256 public TotalSupply = 500000000000000000000000000;\n    mapping(address => uint256) UserBalances;\n    \n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n        \n    function Owned() public {\n        owner = msg.sender;\n        collector = msg.sender;\n    }\n\n    modifier _onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function ChangeOwner(address _AddressToMake) public _onlyOwner returns (bool _success) {\n\n        owner = _AddressToMake;\n        emit OwnershipChanged(msg.sender, _AddressToMake);\n\n        return true;\n\n    }\n    \n    function ChangeCollector(address _AddressToMake) public _onlyOwner returns (bool _success) {\n\n        collector = _AddressToMake;\n\n        return true;\n\n    }\n\n    function ChangeTransferStatus(bool _newStatus) public _onlyOwner returns (bool _success) {\n\n        transfer_status = _newStatus;\n        emit TransferStatusChanged(_newStatus);\n    \n        return true;\n    \n    }\n\t\n   function Mint(uint256 _amount) public _onlyOwner returns (bool _success) {\n\n        TotalSupply = Add(TotalSupply, _amount);\n        UserBalances[msg.sender] = Add(UserBalances[msg.sender], _amount);\n\t\n    \temit Transfer(address(0), msg.sender, _amount);\n\n        return true;\n\n    }\n\n    function Burn(uint256 _amount) public _onlyOwner returns (bool _success) {\n\n        require(Sub(UserBalances[msg.sender], _amount) >= 0);\n        TotalSupply = Sub(TotalSupply, _amount);\n        UserBalances[msg.sender] = Sub(UserBalances[msg.sender], _amount);\n\t\n\t    emit Transfer(msg.sender, address(0), _amount);\n\n        return true;\n\n    }\n        \n}\n\ncontract Core is Owned {\n\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    event OrderPaid(uint256 indexed _orderID, uint256 _value);\n\n    string public name = \"CoinMarketAlert\";\n    string public symbol = \"CMA\";\n    uint256 public decimals = 18;\n    mapping(uint256 => bool) public OrdersPaid;\n    mapping(address => mapping(address => uint256)) public Allowance;\n\n    function Core() public {\n\n        UserBalances[msg.sender] = TotalSupply;\n\n    }\n\n    function _transferCheck(address _sender, address _recipient, uint256 _amount) private view returns (bool success) {\n\n        require(transfer_status == true);\n        require(_amount > 0);\n        require(_recipient != address(0));\n        require(UserBalances[_sender] >= _amount);\n        require(Sub(UserBalances[_sender], _amount) >= 0);\n        require(Add(UserBalances[_recipient], _amount) > UserBalances[_recipient]);\n        \n        return true;\n\n    }\n    \n    function payOrder(uint256 _orderID, uint256 _amount) public returns (bool status) {\n        \n        require(OrdersPaid[_orderID] == false);\n        require(_transferCheck(msg.sender, collector, _amount));\n        UserBalances[msg.sender] = Sub(UserBalances[msg.sender], _amount);\n        UserBalances[collector] = Add(UserBalances[collector], _amount);\n\t\tOrdersPaid[_orderID] = true;\n        emit OrderPaid(_orderID,  _amount);\n\t\temit Transfer(msg.sender, collector, _amount);\n        \n        return true;\n        \n\n    }\n\n    function transfer(address _receiver, uint256 _amount) public returns (bool status) {\n\n        require(_transferCheck(msg.sender, _receiver, _amount));\n        UserBalances[msg.sender] = Sub(UserBalances[msg.sender], _amount);\n        UserBalances[_receiver] = Add(UserBalances[_receiver], _amount);\n        emit Transfer(msg.sender, _receiver, _amount);\n        \n        return true;\n\n    }\n\n    function transferFrom(address _owner, address _receiver, uint256 _amount) public returns (bool status) {\n\n        require(_transferCheck(_owner, _receiver, _amount));\n        require(Sub(Allowance[_owner][msg.sender], _amount) >= 0);\n        Allowance[_owner][msg.sender] = Sub(Allowance[_owner][msg.sender], _amount);\n        UserBalances[_owner] = Sub(UserBalances[_owner], _amount);\n        UserBalances[_receiver] = Add(UserBalances[_receiver], _amount);\n        emit Transfer(_owner, _receiver, _amount);\n\n        return true;\n\n    }\n\n    function multiTransfer(address[] _destinations, uint256[] _values) public returns (uint256) {\n\n\t\tfor (uint256 i = 0; i < _destinations.length; i++) {\n            require(transfer(_destinations[i], _values[i]));\n        }\n\n        return (i);\n\n    }\n\n    function approve(address _spender, uint256 _amount) public returns (bool approved) {\n\n        require(_amount >= 0);\n        Allowance[msg.sender][_spender] = _amount;\n        emit Approval(msg.sender, _spender, _amount);\n\n        return true;\n\n    }\n\n    function balanceOf(address _address) public view returns (uint256 balance) {\n\n        return UserBalances[_address];\n\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 allowed) {\n\n        return Allowance[_owner][_spender];\n\n    }\n\n    function totalSupply() public view returns (uint256 supply) {\n\n        return TotalSupply;\n\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"approved\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destinations\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"status\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_AddressToMake\",\"type\":\"address\"}],\"name\":\"ChangeCollector\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collector\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"status\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfer_status\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"OrdersPaid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_orderID\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"payOrder\",\"outputs\":[{\"name\":\"status\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"allowed\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_AddressToMake\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newStatus\",\"type\":\"bool\"}],\"name\":\"ChangeTransferStatus\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_orderID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"OrderPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_invoker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newStatus\",\"type\":\"bool\"}],\"name\":\"TransferStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "606060409081526001805460a060020a60ff021916740100000000000000000000000000000000000000001790556b019d971e4fe8401e740000006002558051908101604052600f81527f436f696e4d61726b6574416c65727400000000000000000000000000000000006020820152600490805161008292916020019061011b565b5060408051908101604052600381527f434d410000000000000000000000000000000000000000000000000000000000602082015260059080516100ca92916020019061011b565b50601260065534156100db57600080fd5b60008054600160a060020a033316600160a060020a03199182168117835560018054909216811790915560025490825260036020526040909120556101b6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015c57805160ff1916838001178555610189565b82800160010185558215610189579182015b8281111561018957825182559160200191906001019061016e565b50610195929150610199565b5090565b6101b391905b80821115610195576000815560010161019f565b90565b610e7680620001c66000396000f3006060604052600436106101275763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461012c57806307883703146101b6578063095ea7b3146101e057806318160ddd146102025780631e89d5451461022757806323b872dd146102b6578063313ce567146102de5780636dcdd00f146102f157806370a082311461031657806377b1bba6146103355780638da5cb5b14610354578063913e77ad1461038357806395d89b4114610396578063a44b47f7146103a9578063a9059cbb146103bc578063ac03f324146103de578063b90306ad146103f1578063bb3c15de14610407578063d2fbd0ed1461041d578063dd62ed3e14610436578063f28532921461045b578063f3302a4d1461047a575b600080fd5b341561013757600080fd5b61013f610492565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561017b578082015183820152602001610163565b50505050905090810190601f1680156101a85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101c157600080fd5b6101cc600435610530565b604051901515815260200160405180910390f35b34156101eb57600080fd5b6101cc600160a060020a03600435166024356105c6565b341561020d57600080fd5b61021561063e565b60405190815260200160405180910390f35b341561023257600080fd5b61021560046024813581810190830135806020818102016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284375094965061064495505050505050565b34156102c157600080fd5b6101cc600160a060020a036004358116906024351660443561069f565b34156102e957600080fd5b6102156107e5565b34156102fc57600080fd5b610215600160a060020a03600435811690602435166107eb565b341561032157600080fd5b610215600160a060020a0360043516610808565b341561034057600080fd5b6101cc600160a060020a0360043516610823565b341561035f57600080fd5b61036761086f565b604051600160a060020a03909116815260200160405180910390f35b341561038e57600080fd5b61036761087e565b34156103a157600080fd5b61013f61088d565b34156103b457600080fd5b6102156108f8565b34156103c757600080fd5b6101cc600160a060020a03600435166024356108fe565b34156103e957600080fd5b6101cc6109b7565b34156103fc57600080fd5b6101cc6004356109d8565b341561041257600080fd5b6101cc600435610a9b565b341561042857600080fd5b6101cc600435602435610ab0565b341561044157600080fd5b610215600160a060020a0360043581169060243516610beb565b341561046657600080fd5b6101cc600160a060020a0360043516610c16565b341561048557600080fd5b6101cc6004351515610c95565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105285780601f106104fd57610100808354040283529160200191610528565b820191906000526020600020905b81548152906001019060200180831161050b57829003601f168201915b505050505081565b6000805433600160a060020a0390811691161461054c57600080fd5b61055860025483610d27565b600255600160a060020a03331660009081526003602052604090205461057e9083610d27565b600160a060020a033316600081815260036020526040808220939093559091600080516020610e2b8339815191529085905190815260200160405180910390a3506001919050565b6000808210156105d557600080fd5b600160a060020a03338116600081815260086020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60025490565b6000805b83518110156106985761068584828151811061066057fe5b9060200190602002015184838151811061067657fe5b906020019060200201516108fe565b151561069057600080fd5b600101610648565b9392505050565b60006106ac848484610d39565b15156106b757600080fd5b600160a060020a038085166000908152600860209081526040808320339094168352929052908120546106ea9084610e15565b10156106f557600080fd5b600160a060020a03808516600090815260086020908152604080832033909416835292905220546107269083610e15565b600160a060020a0380861660008181526008602090815260408083203390951683529381528382209490945590815260039092529020546107679083610e15565b600160a060020a0380861660009081526003602052604080822093909355908516815220546107969083610d27565b600160a060020a0380851660008181526003602052604090819020939093559190861690600080516020610e2b8339815191529085905190815260200160405180910390a35060019392505050565b60065481565b600860209081526000928352604080842090915290825290205481565b600160a060020a031660009081526003602052604090205490565b6000805433600160a060020a0390811691161461083f57600080fd5b5060018054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116178155919050565b600054600160a060020a031681565b600154600160a060020a031681565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105285780601f106104fd57610100808354040283529160200191610528565b60025481565b600061090b338484610d39565b151561091657600080fd5b600160a060020a0333166000908152600360205260409020546109399083610e15565b600160a060020a0333811660009081526003602052604080822093909355908516815220546109689083610d27565b600160a060020a038085166000818152600360205260409081902093909355913390911690600080516020610e2b8339815191529085905190815260200160405180910390a350600192915050565b60015474010000000000000000000000000000000000000000900460ff1681565b6000805433600160a060020a039081169116146109f457600080fd5b600160a060020a033316600090815260036020526040812054610a179084610e15565b1015610a2257600080fd5b610a2e60025483610e15565b600255600160a060020a033316600090815260036020526040902054610a549083610e15565b600160a060020a0333166000818152600360205260408082209390935591600080516020610e2b8339815191529085905190815260200160405180910390a3506001919050565b60076020526000908152604090205460ff1681565b60008281526007602052604081205460ff1615610acc57600080fd5b600154610ae4903390600160a060020a031684610d39565b1515610aef57600080fd5b600160a060020a033316600090815260036020526040902054610b129083610e15565b600160a060020a033381166000908152600360205260408082209390935560015490911681522054610b449083610d27565b60018054600160a060020a031660009081526003602090815260408083209490945586825260079052829020805460ff1916909117905583907f7c32ca00142334d942c919d338fa31921d5108c316aebd0347bcda69ee8167c99084905190815260200160405180910390a2600154600160a060020a03908116903316600080516020610e2b8339815191528460405190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260086020908152604080832093909416825291909152205490565b6000805433600160a060020a03908116911614610c3257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038481169182179092559033167f0384899bd253d83b23daa4d29aaa2efe0563d1132b43101e9ad667235aeb951b60405160405180910390a3506001919050565b6000805433600160a060020a03908116911614610cb157600080fd5b6001805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000841515021790557f6e8a3438115f9c2a0de5c0cdd103bc8f8921b47ca6cd834b21b65b84d9589f9a82604051901515815260200160405180910390a1506001919050565b60008282018381101561069857600080fd5b600180546000917401000000000000000000000000000000000000000090910460ff16151514610d6857600080fd5b60008211610d7557600080fd5b600160a060020a0383161515610d8a57600080fd5b600160a060020a03841660009081526003602052604090205482901015610db057600080fd5b600160a060020a038416600090815260036020526040812054610dd39084610e15565b1015610dde57600080fd5b600160a060020a038316600090815260036020526040902054610e018184610d27565b11610e0b57600080fd5b5060019392505050565b600082821115610e2457600080fd5b509003905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820d89606d8197d7976c252de0e17527da8fd47cda3d0814cdcd9feb6f02e0de9df0029"
}