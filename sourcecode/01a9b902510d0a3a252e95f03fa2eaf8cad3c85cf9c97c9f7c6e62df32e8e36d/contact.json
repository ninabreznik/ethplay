{
  "address": "0x63259007121e26afad53ec8ba889e0f1a8f56c0d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Abacas Token",
  "contractName": "AbacasToken",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-20\n*/\n\npragma solidity ^0.4.19;\n\n// File: zeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n// File: zeppelin-solidity/contracts/lifecycle/Pausable.sol\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    Unpause();\n  }\n}\n\n// File: zeppelin-solidity/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n// File: zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n// File: zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n}\n\n// File: zeppelin-solidity/contracts/token/ERC20/ERC20.sol\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n// File: contracts/PausableToken.sol\n\ncontract PausableToken is StandardToken, Pausable {\n\n    address public allowedTransferWallet;\n\n    constructor(address _allowedTransferWallet) public {\n        allowedTransferWallet = _allowedTransferWallet;\n    }\n\n    modifier whenNotPausedOrOwnerOrAllowed() {\n        require(!paused || msg.sender == owner || msg.sender == allowedTransferWallet);\n        _;\n    }\n\n    function changeAllowTransferWallet(address _allowedTransferWallet) public onlyOwner {\n        allowedTransferWallet = _allowedTransferWallet;\n    }\n\n    /**\n    * @dev Transfer token for a specified address with pause feature for owner.\n    * @dev Only applies when the transfer is allowed by the owner.\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public whenNotPausedOrOwnerOrAllowed returns (bool) {\n        return super.transfer(_to, _value);\n    }\n\n    /**\n    * @dev Transfer tokens from one address to another with pause feature for owner.\n    * @dev Only applies when the transfer is allowed by the owner.\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint256 the amount of tokens to be transferred\n    */\n    function transferFrom(address _from, address _to, uint256 _value) public whenNotPausedOrOwnerOrAllowed returns (bool) {\n        return super.transferFrom(_from, _to, _value);\n    }\n}\n\n// File: zeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\n\ncontract DetailedERC20 is ERC20 {\n  string public name;\n  string public symbol;\n  uint8 public decimals;\n\n  function DetailedERC20(string _name, string _symbol, uint8 _decimals) public {\n    name = _name;\n    symbol = _symbol;\n    decimals = _decimals;\n  }\n}\n\n// File: contracts/AbacasToken.sol\n\ncontract AbacasToken is DetailedERC20(\"AbacasXchange [Abacas] Token\", \"ABCS\", 9), PausableToken {\n\n    constructor(address _allowedTransferWallet) PausableToken(_allowedTransferWallet) public {\n        totalSupply_ = 100e6 * (uint256(10) ** decimals);\n        balances[msg.sender] = totalSupply_;\n        emit Transfer(address(0), msg.sender, totalSupply_);\n    }\n}",
  "bytecode": "60806040526006805460a060020a60ff021916905534801561002057600080fd5b50604051602080610ebd83398101604081815291518282018352601c82527f416261636173586368616e6765205b4162616361735d20546f6b656e0000000060208084019182528451808601909552600485527f4142435300000000000000000000000000000000000000000000000000000000908501528251919384939290916009916100b091600091610169565b5081516100c4906001906020850190610169565b506002805460ff191660ff928316179081905560068054600160a060020a031990811633600160a060020a0390811691821790935560078054909216979092169690961790955516600a0a6305f5e10002600481905560008481526003602090815260408083208490558051938452519194507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93509181900390910190a350610204565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101aa57805160ff19168380011785556101d7565b828001600101855582156101d7579182015b828111156101d75782518255916020019190600101906101bc565b506101e39291506101e7565b5090565b61020191905b808211156101e357600081556001016101ed565b90565b610caa806102136000396000f3006080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610100578063095ea7b31461018a5780630c620494146101c257806318160ddd146101e557806323b872dd1461020c578063313ce567146102365780633f4ba83a146102615780634d1b93b3146102765780635c975abb146102a757806366188463146102bc57806370a08231146102e05780638456cb59146103015780638da5cb5b1461031657806395d89b411461032b578063a9059cbb14610340578063d73dd62314610364578063dd62ed3e14610388578063f2fde38b146103af575b600080fd5b34801561010c57600080fd5b506101156103d0565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014f578181015183820152602001610137565b50505050905090810190601f16801561017c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019657600080fd5b506101ae600160a060020a036004351660243561045e565b604080519115158252519081900360200190f35b3480156101ce57600080fd5b506101e3600160a060020a03600435166104c8565b005b3480156101f157600080fd5b506101fa610512565b60408051918252519081900360200190f35b34801561021857600080fd5b506101ae600160a060020a0360043581169060243516604435610518565b34801561024257600080fd5b5061024b610579565b6040805160ff9092168252519081900360200190f35b34801561026d57600080fd5b506101e3610582565b34801561028257600080fd5b5061028b6105fe565b60408051600160a060020a039092168252519081900360200190f35b3480156102b357600080fd5b506101ae61060d565b3480156102c857600080fd5b506101ae600160a060020a036004351660243561061d565b3480156102ec57600080fd5b506101fa600160a060020a0360043516610716565b34801561030d57600080fd5b506101e3610731565b34801561032257600080fd5b5061028b6107b2565b34801561033757600080fd5b506101156107c1565b34801561034c57600080fd5b506101ae600160a060020a036004351660243561081b565b34801561037057600080fd5b506101ae600160a060020a036004351660243561087a565b34801561039457600080fd5b506101fa600160a060020a036004358116906024351661091c565b3480156103bb57600080fd5b506101e3600160a060020a0360043516610947565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104565780601f1061042b57610100808354040283529160200191610456565b820191906000526020600020905b81548152906001019060200180831161043957829003601f168201915b505050505081565b600160a060020a03338116600081815260056020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60065433600160a060020a039081169116146104e357600080fd5b6007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60045490565b60065460009060a060020a900460ff161580610542575060065433600160a060020a039081169116145b8061055b575060075433600160a060020a039081169116145b151561056657600080fd5b6105718484846109e0565b949350505050565b60025460ff1681565b60065433600160a060020a0390811691161461059d57600080fd5b60065460a060020a900460ff1615156105b557600080fd5b6006805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600754600160a060020a031681565b60065460a060020a900460ff1681565b600160a060020a0333811660009081526005602090815260408083209386168352929052908120548083111561067a57600160a060020a0333811660009081526005602090815260408083209388168352929052908120556106b1565b61068a818463ffffffff610b6216565b600160a060020a033381166000908152600560209081526040808320938916835292905220555b600160a060020a0333811660008181526005602090815260408083209489168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b600160a060020a031660009081526003602052604090205490565b60065433600160a060020a0390811691161461074c57600080fd5b60065460a060020a900460ff161561076357600080fd5b6006805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600654600160a060020a031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104565780601f1061042b57610100808354040283529160200191610456565b60065460009060a060020a900460ff161580610845575060065433600160a060020a039081169116145b8061085e575060075433600160a060020a039081169116145b151561086957600080fd5b6108738383610b74565b9392505050565b600160a060020a0333811660009081526005602090815260408083209386168352929052908120546108b2908363ffffffff610c6f16565b600160a060020a0333811660008181526005602090815260408083209489168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b60065433600160a060020a0390811691161461096257600080fd5b600160a060020a038116151561097757600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000600160a060020a03831615156109f757600080fd5b600160a060020a038416600090815260036020526040902054821115610a1c57600080fd5b600160a060020a0380851660009081526005602090815260408083203390941683529290522054821115610a4f57600080fd5b600160a060020a038416600090815260036020526040902054610a78908363ffffffff610b6216565b600160a060020a038086166000908152600360205260408082209390935590851681522054610aad908363ffffffff610c6f16565b600160a060020a03808516600090815260036020908152604080832094909455878316825260058152838220339093168252919091522054610af5908363ffffffff610b6216565b600160a060020a038086166000818152600560209081526040808320338616845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b600082821115610b6e57fe5b50900390565b6000600160a060020a0383161515610b8b57600080fd5b600160a060020a033316600090815260036020526040902054821115610bb057600080fd5b600160a060020a033316600090815260036020526040902054610bd9908363ffffffff610b6216565b600160a060020a033381166000908152600360205260408082209390935590851681522054610c0e908363ffffffff610c6f16565b600160a060020a038085166000818152600360209081526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600192915050565b60008282018381101561087357fe00a165627a7a72305820da8cabf2d709d94a5cee5dd05f3e944b7f26f5ffdd729faf6dcb1c49ec68294f0029000000000000000000000000ed4a39b414d978432344afb7b8d693f44a33eb4a",
  "constructorArguments": "000000000000000000000000ed4a39b414d978432344afb7b8d693f44a33eb4a"
}