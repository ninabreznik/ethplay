{
  "address": "0xf5b51e2665a3fb9a2f8adf04f81031275a3664da",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "KittyTransferCO2",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-16\n*/\n\npragma solidity ^0.5.0;\n\ncontract KittyCoreInterface {\n    \n    // from ERC721 contract\n    // returns the address of the token owner\n    function ownerOf(uint256 _tokenId) external view returns (address owner);\n    \n    // function from KittyCore contract\n    // returns data from a specific kitty\n    function getKitty(uint256 _id)\n        external\n        view\n        returns (\n        bool isGestating,\n        bool isReady,\n        uint256 cooldownIndex,\n        uint256 nextActionAt,\n        uint256 siringWithId,\n        uint256 birthTime,\n        uint256 matronId,\n        uint256 sireId,\n        uint256 generation,\n        uint256 genes\n    );\n}\n\ncontract KittyTransferCO2 {\n    \n    // addresses related to a kitty transfer\n    address public _from;\n    address public _to;\n    \n    // address of the real CryptoKitties contract to interact with\n    KittyCoreInterface public cryptoKittiesInterface;\n    \n    // here we set on deploy the real CryptoKitties contract to call its functions\n    // Mainnet CryptoKitties contract address: 0x06012c8cf97BEaD5deAe237070F9587f8E7A266d\n    // Rinkeby CryptoKitties contract address: 0x16baF0dE678E52367adC69fD067E5eDd1D33e3bF\n    constructor() public {\n        cryptoKittiesInterface = KittyCoreInterface(0x06012c8cf97BEaD5deAe237070F9587f8E7A266d);\n    }\n    \n    function setFromAddress(address _addr) public {\n        _from = _addr;\n    }\n    \n    function setToAddress(address _addr) public {\n        _to = _addr;\n    }\n    \n    // get addresses of owners of kitty's parents\n    function getParentsAddresses(uint256 _id) public view returns (address, address) {\n        // call to ownerOf(0) reverts!\n        require(_id > 0);\n        uint256 matronId;\n        uint256 sireId;\n        \n        (,,,,,, matronId, sireId, ,) = cryptoKittiesInterface.getKitty(_id);\n        \n        address matron = cryptoKittiesInterface.ownerOf(matronId);\n        address sire = cryptoKittiesInterface.ownerOf(sireId);\n        \n        return (matron, sire);\n    }\n    \n    // get ids of kitty's parents\n    function getParentsIds(uint256 _id) public view returns (uint256, uint256) {\n        require(_id > 0);\n        uint256 matronId;\n        uint256 sireId;\n        \n        (,,,,,, matronId, sireId, ,) = cryptoKittiesInterface.getKitty(_id);\n        \n        return (matronId, sireId);\n    }\n    \n    // get CO2 emmited for kitty transfer, taking addresses of matron and sire owners\n    function getCO2EmittedFromKitty(uint256 _id) public view returns(uint256) {\n        address matronId;\n        address sireId;\n        (matronId, sireId) = getParentsAddresses(_id);\n        \n        uint256 distance = getDistance(matronId, sireId);\n        return distance;\n    }\n    \n    // get CO2 emmited for the kitty transfer\n    function getCO2EmittedFromAddresses() public view returns(uint256) {\n        uint256 distance = getDistance(_from, _to);\n        return distance/100000;\n    }\n    \n    // get distance between addresses\n    function getDistance(address account1, address account2) internal pure returns(uint256) {\n        uint256 location1 = uint256(uint40(account1));\n        uint256 location2 = uint256(uint40(account2));\n        if(location1 > location2) {\n            return location1 - location2;\n        } else {\n            return location2 - location1;\n        }\n    }\n    \n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"cryptoKittiesInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_to\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getCO2EmittedFromKitty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getParentsAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCO2EmittedFromAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getParentsIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setToAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setFromAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_from\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]",
  "bytecode": "608060405234801561001057600080fd5b507306012c8cf97bead5deae237070f9587f8e7a266d600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610965806100756000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063bb94527411610066578063bb9452741461020f578063bc47d9ef1461022d578063c740f8fd14610276578063d486478f146102ba578063f2d71785146102fe57610093565b80632e6dac3814610098578063689d14b9146100e25780638c40dd7e1461012c578063946d8ebf1461016e575b600080fd5b6100a0610348565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100ea61036e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101586004803603602081101561014257600080fd5b8101908080359060200190929190505050610394565b6040518082815260200191505060405180910390f35b61019a6004803603602081101561018457600080fd5b81019080803590602001909291905050506103c3565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b61021761068b565b6040518082815260200191505060405180910390f35b6102596004803603602081101561024357600080fd5b81019080803590602001909291905050506106f0565b604051808381526020018281526020019250505060405180910390f35b6102b86004803603602081101561028c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610852565b005b6102fc600480360360208110156102d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610896565b005b6103066108d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060006103a2846103c3565b809250819350505060006103b683836108fe565b9050809350505050919050565b600080600083116103d357600080fd5b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d866040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b15801561044a57600080fd5b505afa15801561045e573d6000803e3d6000fd5b505050506040513d61014081101561047557600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505090919293949596979850909192939495969750909192939495965090919293949550909192939450909192935090505080925081935050506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561058d57600080fd5b505afa1580156105a1573d6000803e3d6000fd5b505050506040513d60208110156105b757600080fd5b810190808051906020019092919050505090506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561063f57600080fd5b505afa158015610653573d6000803e3d6000fd5b505050506040513d602081101561066957600080fd5b8101908080519060200190929190505050905081819550955050505050915091565b6000806106db6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166108fe565b9050620186a081816106e957fe5b0491505090565b6000806000831161070057600080fd5b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d866040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b15801561077757600080fd5b505afa15801561078b573d6000803e3d6000fd5b505050506040513d6101408110156107a257600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505090919293949596979850909192939495969750909192939495965090919293949550909192939450909192935090505080925081935050508181935093505050915091565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808364ffffffffff16905060008364ffffffffff1690508082111561092b5780820392505050610933565b818103925050505b9291505056fea165627a7a72305820f77003ac92b22dbe407f3b2a11dfe8991274b764dca15ae9a36d6cb11a0f1bb40029"
}