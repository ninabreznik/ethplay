{
  "address": "0xdf49c9f599a0a9049d97cff34d0c30e468987389",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Smart Advertising Transaction Token",
  "contractName": "SaTT",
  "compilerVersion": "v0.5.6+commit.b259423e",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-19\n*/\n\npragma solidity ^0.5.6;\n\ncontract owned {\n    address payable public owner;\n\n    constructor () public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address payable newOwner) onlyOwner public {\n        owner = newOwner;\n    }\n    \n    function() external payable  {\n    }\n    \n     function withdraw() onlyOwner public {\n        owner.transfer(address(this).balance);\n    }\n}\n\n\n\n\ninterface ERC20 {\n  function transfer(address receiver, uint256 value) external returns (bool ok);\n}\n\n\ninterface ERC223Receiver {\n    function tokenFallback(address _from, uint _value, bytes32 _data) external ;\n}\n\n\n\ncontract SaTT is owned,ERC20 {\n\n    uint8 public constant decimals = 18;\n    uint256 public constant totalSupply = 20000000000000000000000000000; // 20 billions and 18 decimals\n    string public constant symbol = \"SATT\";\n    string public constant name = \"Smart Advertising Transaction Token\";\n    \n\n    \n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);\n    \n   \n    constructor () public {\n        balanceOf[msg.sender] = totalSupply;               \n    }\n    \n     function isContract(address _addr) internal view returns (bool is_contract) {\n      bytes32 hash;\n     \n      assembly {\n            //retrieve the size of the code on target address, this needs assembly\n            hash := extcodehash(_addr)\n      }\n      return (hash != 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 && hash != bytes32(0));\n     \n    }\n    \n     function transfer(address to, uint256 value) public returns (bool success) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n    \n     function transfer(address to, uint256 value,bytes memory  data) public returns (bool success) {\n         if((data[0])!= 0) { \n            _transfer(msg.sender, to, value);\n         }\n        return true;\n    }\n    \n     function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        \n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n    \n    function _transfer(address _from, address _to, uint256 _value) internal {\n       \n        // Prevent transfer to 0x0 address. Use burn() instead\n        require(_to != address(0x0));\n        // Check if the sender has enough\n        require(balanceOf[_from] >= _value);\n        // Check for overflows\n        require(balanceOf[_to] + _value > balanceOf[_to]);\n        // Subtract from the sender\n        balanceOf[_from] -= _value;\n        // Add the same to the recipient\n        balanceOf[_to] += _value;\n        \n        if(isContract(_to))\n        {\n            ERC223Receiver receiver = ERC223Receiver(_to);\n            receiver.tokenFallback(msg.sender, _value, bytes32(0));\n        }\n        \n        emit Transfer(_from, _to, _value);\n    }\n    \n     function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    \n    function transferToken (address token,address to,uint256 val) public onlyOwner {\n        ERC20 erc20 = ERC20(token);\n        erc20.transfer(to,val);\n    }\n    \n     function tokenFallback(address _from, uint _value, bytes memory  _data) pure public {\n       \n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b03191633908117825581526001602052604090206b409f9cbc7c4a04c2200000009055610a278061004e6000396000f3fe6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063c0ee0b8a11610059578063c0ee0b8a146103e5578063dd62ed3e146104ad578063f2fde38b146104e8578063f5537ede1461051b576100e8565b80638da5cb5b1461029e57806395d89b41146102cf578063a9059cbb146102e4578063be45fd621461031d576100e8565b806323b872dd116100c657806323b872dd146101e8578063313ce5671461022b5780633ccfd60b1461025657806370a082311461026b576100e8565b806306fdde03146100ea578063095ea7b31461017457806318160ddd146101c1575b005b3480156100f657600080fd5b506100ff61055e565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610139578181015183820152602001610121565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018057600080fd5b506101ad6004803603604081101561019757600080fd5b506001600160a01b03813516906020013561057a565b604080519115158252519081900360200190f35b3480156101cd57600080fd5b506101d66105e0565b60408051918252519081900360200190f35b3480156101f457600080fd5b506101ad6004803603606081101561020b57600080fd5b506001600160a01b038135811691602081013590911690604001356105f0565b34801561023757600080fd5b5061024061065f565b6040805160ff9092168252519081900360200190f35b34801561026257600080fd5b506100e8610664565b34801561027757600080fd5b506101d66004803603602081101561028e57600080fd5b50356001600160a01b03166106b9565b3480156102aa57600080fd5b506102b36106cb565b604080516001600160a01b039092168252519081900360200190f35b3480156102db57600080fd5b506100ff6106da565b3480156102f057600080fd5b506101ad6004803603604081101561030757600080fd5b506001600160a01b0381351690602001356106fd565b34801561032957600080fd5b506101ad6004803603606081101561034057600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561037057600080fd5b82018360208201111561038257600080fd5b803590602001918460018302840111640100000000831117156103a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610713945050505050565b3480156103f157600080fd5b506100e86004803603606081101561040857600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561043857600080fd5b82018360208201111561044a57600080fd5b8035906020019184600183028401116401000000008311171561046c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610749945050505050565b3480156104b957600080fd5b506101d6600480360360408110156104d057600080fd5b506001600160a01b038135811691602001351661074e565b3480156104f457600080fd5b506100e86004803603602081101561050b57600080fd5b50356001600160a01b031661076b565b34801561052757600080fd5b506100e86004803603606081101561053e57600080fd5b506001600160a01b038135811691602081013590911690604001356107a4565b6040518060600160405280602381526020016109d96023913981565b3360008181526002602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6b409f9cbc7c4a04c22000000081565b6001600160a01b038316600090815260026020908152604080832033845290915281205482111561062057600080fd5b6001600160a01b0384166000908152600260209081526040808320338452909152902080548390039055610655848484610843565b5060019392505050565b601281565b6000546001600160a01b0316331461067b57600080fd5b600080546040516001600160a01b0390911691303180156108fc02929091818181858888f193505050501580156106b6573d6000803e3d6000fd5b50565b60016020526000908152604090205481565b6000546001600160a01b031681565b604051806040016040528060048152602001600160e21b6314d055150281525081565b600061070a338484610843565b50600192915050565b60008160008151811061072257fe5b01602001516001600160f81b031960f891821c90911b161561065557610655338585610843565b505050565b600260209081526000928352604080842090915290825290205481565b6000546001600160a01b0316331461078257600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146107bb57600080fd5b60408051600160e01b63a9059cbb0281526001600160a01b038481166004830152602482018490529151859283169163a9059cbb9160448083019260209291908290030181600087803b15801561081157600080fd5b505af1158015610825573d6000803e3d6000fd5b505050506040513d602081101561083b57600080fd5b505050505050565b6001600160a01b03821661085657600080fd5b6001600160a01b03831660009081526001602052604090205481111561087b57600080fd5b6001600160a01b038216600090815260016020526040902054818101116108a157600080fd5b6001600160a01b03808416600090815260016020526040808220805485900390559184168152208054820190556108d78261099e565b1561094e5760408051600160e21b6320e5f32502815233600482015260248101839052600060448201819052915184926001600160a01b03841692638397cc94926064808301939282900301818387803b15801561093457600080fd5b505af1158015610948573d6000803e3d6000fd5b50505050505b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081148015906109d157508015155b939250505056fe536d617274204164766572746973696e67205472616e73616374696f6e20546f6b656ea165627a7a7230582018fc1b3b53dc001bba18a01b391a2fba3d4247ff87f01fbf76335446ab224b3a0029"
}