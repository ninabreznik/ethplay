{
  "address": "0x600ff15d3cf655d1521c86dddb72c511c785b594",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "GooglierToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "0",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-17\n*/\n\ncontract SafeMath {\n  //internals\n\n  function safeMul(uint a, uint b) internal returns (uint) {\n    uint c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function safeSub(uint a, uint b) internal returns (uint) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint a, uint b) internal returns (uint) {\n    uint c = a + b;\n    assert(c>=a && c>=b);\n    return c;\n  }\n\n  function assert(bool assertion) internal {\n    if (!assertion) throw;\n  }\n}\n\ncontract Token {\n    function totalSupply() constant returns (uint256 supply) {}\n    function balanceOf(address _owner) constant returns (uint256 balance) {}\n    function transfer(address _to, uint256 _value) returns (bool success) {}\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}\n    function approve(address _spender, uint256 _value) returns (bool success) {}\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\ncontract StandardToken is Token {\n    function transfer(address _to, uint256 _value) returns (bool success) {\n        if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\n        //if (balances[msg.sender] >= _value && _value > 0) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n        //same as above. Replace this line with the following if you want to protect against wrapping uints.\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\n        //if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            allowed[_from][msg.sender] -= _value;\n            Transfer(_from, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n\n    mapping(address => uint256) balances;\n\n    mapping (address => mapping (address => uint256)) allowed;\n\n    uint256 public totalSupply;\n\n}\n\ncontract GooglierToken is StandardToken, SafeMath {\n\n    string public name = \"Googlier Token\";\n    string public symbol = \"googlier\";\n    uint public decimals = 18;\n    uint public startBlock;\n    uint public endBlock;\n    address public founder = 0x0e0b9d8c9930e7cff062dd4a2b26bce95a0defee;\n    address public signer = 0x0e0b9d8c9930e7cff062dd4a2b26bce95a0defee;\n\n    uint public etherCap = 500000 * 10**18;\n    uint public transferLockup = 370285;\n    uint public founderLockup = 2252571;\n    uint public bountyAllocation = 2500000 * 10**18;\n    uint public ecosystemAllocation = 5 * 10**16;\n    uint public founderAllocation = 10 * 10**16;\n    bool public bountyAllocated = true;\n    bool public ecosystemAllocated = true;\n    bool public founderAllocated = true;\n    uint public presaleTokenSupply = 2500000 * 10**18;\n    uint public totalSupply = 2500000 * 10**18;\n    uint public presaleEtherRaised = 2500000 * 10**18;\n    bool public halted = false;\n    event Buy(address indexed sender, uint eth, uint fbt);\n    event Withdraw(address indexed sender, address to, uint eth);\n    event AllocateFounderTokens(address indexed sender);\n    event AllocateBountyAndEcosystemTokens(address indexed sender);\n\n    function FirstBloodToken(address founderInput, address signerInput, uint startBlockInput, uint endBlockInput) {\n        founder = founderInput;\n        signer = signerInput;\n        startBlock = startBlockInput;\n        endBlock = endBlockInput;\n    }\n    function price() constant returns(uint) {\n        if (block.number>=startBlock && block.number<startBlock+250) return 170; //power hour\n        if (block.number<startBlock || block.number>endBlock) return 100; //default price\n        return 100 + 4*(endBlock - block.number)/(endBlock - startBlock + 1)*67/4; //crowdsale price\n    }\n\n    // price() exposed for unit tests\n    function testPrice(uint blockNumber) constant returns(uint) {\n        if (blockNumber>=startBlock && blockNumber<startBlock+250) return 170; //power hour\n        if (blockNumber<startBlock || blockNumber>endBlock) return 100; //default price\n        return 100 + 4*(endBlock - blockNumber)/(endBlock - startBlock + 1)*67/4; //crowdsale price\n    }\n\n    // Buy entry point\n    function buy(uint8 v, bytes32 r, bytes32 s) {\n        buyRecipient(msg.sender, v, r, s);\n    }\n    function buyRecipient(address recipient, uint8 v, bytes32 r, bytes32 s) {\n        bytes32 hash = sha256(msg.sender);\n        if (ecrecover(hash,v,r,s) != signer) throw;\n        if (block.number<startBlock || block.number>endBlock || safeAdd(presaleEtherRaised,msg.value)>etherCap || halted) throw;\n        uint tokens = safeMul(msg.value, price());\n        balances[recipient] = safeAdd(balances[recipient], tokens);\n        totalSupply = safeAdd(totalSupply, tokens);\n        presaleEtherRaised = safeAdd(presaleEtherRaised, msg.value);\n    if (!founder.call.value(msg.value)()) throw; //immediately send Ether to founder address\n\n        Buy(recipient, msg.value, tokens);\n    }\n    function allocateFounderTokens() {\n        if (msg.sender!=founder) throw;\n        if (block.number <= endBlock + founderLockup) throw;\n        if (founderAllocated) throw;\n        if (!bountyAllocated || !ecosystemAllocated) throw;\n        balances[founder] = safeAdd(balances[founder], presaleTokenSupply * founderAllocation / (1 ether));\n        totalSupply = safeAdd(totalSupply, presaleTokenSupply * founderAllocation / (1 ether));\n        founderAllocated = true;\n        AllocateFounderTokens(msg.sender);\n    }\n\n\n    function allocateBountyAndEcosystemTokens() {\n        if (msg.sender!=founder) throw;\n        if (block.number <= endBlock) throw;\n        if (bountyAllocated || ecosystemAllocated) throw;\n        presaleTokenSupply = totalSupply;\n        balances[founder] = safeAdd(balances[founder], presaleTokenSupply * ecosystemAllocation / (1 ether));\n        totalSupply = safeAdd(totalSupply, presaleTokenSupply * ecosystemAllocation / (1 ether));\n        balances[founder] = safeAdd(balances[founder], bountyAllocation);\n        totalSupply = safeAdd(totalSupply, bountyAllocation);\n        bountyAllocated = true;\n        ecosystemAllocated = true;\n        AllocateBountyAndEcosystemTokens(msg.sender);\n    }\n    function halt() {\n        if (msg.sender!=founder) throw;\n        halted = true;\n    }\n\n    function unhalt() {\n        if (msg.sender!=founder) throw;\n        halted = false;\n    }\n    function changeFounder(address newFounder) {\n        if (msg.sender!=founder) throw;\n        founder = newFounder;\n    }\n    function transfer(address _to, uint256 _value) returns (bool success) {\n        if (block.number <= endBlock + transferLockup && msg.sender!=founder) throw;\n        return super.transfer(_to, _value);\n    }\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n        if (block.number <= endBlock + transferLockup && msg.sender!=founder) throw;\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    function() {\n        throw;\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"testPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleEtherRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateBountyAndEcosystemTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecosystemAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderLockup\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newFounder\",\"type\":\"address\"}],\"name\":\"changeFounder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"founderInput\",\"type\":\"address\"},{\"name\":\"signerInput\",\"type\":\"address\"},{\"name\":\"startBlockInput\",\"type\":\"uint256\"},{\"name\":\"endBlockInput\",\"type\":\"uint256\"}],\"name\":\"FirstBloodToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateFounderTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecosystemAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferLockup\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unhalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"buyRecipient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fbt\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllocateFounderTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllocateBountyAndEcosystemTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040526040805190810160405280600e81526020017f476f6f676c69657220546f6b656e00000000000000000000000000000000000081525060039080519060200190620000519291906200023e565b506040805190810160405280600881526020017f676f6f676c696572000000000000000000000000000000000000000000000000815250600490805190602001906200009f9291906200023e565b506012600555730e0b9d8c9930e7cff062dd4a2b26bce95a0defee600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550730e0b9d8c9930e7cff062dd4a2b26bce95a0defee600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506969e10de76676d0800000600a556205a66d600b5562225f1b600c556a0211654585005212800000600d5566b1a2bc2ec50000600e5567016345785d8a0000600f556001601060006101000a81548160ff0219169083151502179055506001601060016101000a81548160ff0219169083151502179055506001601060026101000a81548160ff0219169083151502179055506a02116545850052128000006011556a02116545850052128000006012556a02116545850052128000006013556000601460006101000a81548160ff0219169083151502179055503480156200023757600080fd5b50620002ed565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028157805160ff1916838001178555620002b2565b82800160010185558215620002b2579182015b82811115620002b157825182559160200191906001019062000294565b5b509050620002c19190620002c5565b5090565b620002ea91905b80821115620002e6576000816000905550600101620002cc565b5090565b90565b6120a780620002fd6000396000f3006080604052600436106101b7576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101c9578063083c632314610259578063095ea7b31461028457806318160ddd146102e95780631bc59aa614610314578063238ac9331461034357806323b872dd1461039a5780632af7ceff1461041f578063313ce5671461046057806344b499581461048b57806348cd4cb1146104b65780634a8b5389146104e15780634d853ee5146104f85780635ed7ca5b1461054f57806370a08231146105665780637228b9db146105bd578063771d9d05146105e8578063824338bd1461061757806383e811a61461064257806393c32e061461066d57806395d89b41146106b057806399d22e48146107405780639e9d3aa41461076f578063a035b1fe146107e6578063a9059cbb14610811578063b9b8af0b14610876578063bcfcb03e146108a5578063c0f496ac146108bc578063c24fe21b146108e7578063c4fc3a3b14610912578063cb3e64fd1461093d578063dd62ed3e14610954578063dda44b10146109cb578063e5fe4f3114610a37578063f6b9d05d14610a83575b3480156101c357600080fd5b50600080fd5b3480156101d557600080fd5b506101de610aae565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021e578082015181840152602081019050610203565b50505050905090810190601f16801561024b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026557600080fd5b5061026e610b4c565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b506102cf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b52565b604051808215151515815260200191505060405180910390f35b3480156102f557600080fd5b506102fe610c44565b6040518082815260200191505060405180910390f35b34801561032057600080fd5b50610329610c4a565b604051808215151515815260200191505060405180910390f35b34801561034f57600080fd5b50610358610c5d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103a657600080fd5b50610405600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c83565b604051808215151515815260200191505060405180910390f35b34801561042b57600080fd5b5061044a60048036038101908080359060200190929190505050610d07565b6040518082815260200191505060405180910390f35b34801561046c57600080fd5b50610475610d82565b6040518082815260200191505060405180910390f35b34801561049757600080fd5b506104a0610d88565b6040518082815260200191505060405180910390f35b3480156104c257600080fd5b506104cb610d8e565b6040518082815260200191505060405180910390f35b3480156104ed57600080fd5b506104f6610d94565b005b34801561050457600080fd5b5061050d6110ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055b57600080fd5b506105646110d1565b005b34801561057257600080fd5b506105a7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061114a565b6040518082815260200191505060405180910390f35b3480156105c957600080fd5b506105d2611192565b6040518082815260200191505060405180910390f35b3480156105f457600080fd5b506105fd611198565b604051808215151515815260200191505060405180910390f35b34801561062357600080fd5b5061062c6111ab565b6040518082815260200191505060405180910390f35b34801561064e57600080fd5b506106576111b1565b6040518082815260200191505060405180910390f35b34801561067957600080fd5b506106ae600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111b7565b005b3480156106bc57600080fd5b506106c5611257565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107055780820151818401526020810190506106ea565b50505050905090810190601f1680156107325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561074c57600080fd5b506107556112f5565b604051808215151515815260200191505060405180910390f35b34801561077b57600080fd5b506107e4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611308565b005b3480156107f257600080fd5b506107fb61139e565b6040518082815260200191505060405180910390f35b34801561081d57600080fd5b5061085c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611417565b604051808215151515815260200191505060405180910390f35b34801561088257600080fd5b5061088b611499565b604051808215151515815260200191505060405180910390f35b3480156108b157600080fd5b506108ba6114ac565b005b3480156108c857600080fd5b506108d16116db565b6040518082815260200191505060405180910390f35b3480156108f357600080fd5b506108fc6116e1565b6040518082815260200191505060405180910390f35b34801561091e57600080fd5b506109276116e7565b6040518082815260200191505060405180910390f35b34801561094957600080fd5b506109526116ed565b005b34801561096057600080fd5b506109b5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611766565b6040518082815260200191505060405180910390f35b3480156109d757600080fd5b50610a35600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803560001916906020019092919080356000191690602001909291905050506117ed565b005b348015610a4357600080fd5b50610a81600480360381019080803560ff16906020019092919080356000191690602001909291908035600019169060200190929190505050611b1f565b005b348015610a8f57600080fd5b50610a98611b30565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b445780601f10610b1957610100808354040283529160200191610b44565b820191906000526020600020905b815481529060010190602001808311610b2757829003601f168201915b505050505081565b60075481565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60125481565b601060009054906101000a900460ff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b54600754014311158015610ce95750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610cf357600080fd5b610cfe848484611b36565b90509392505050565b60006006548210158015610d1f575060fa6006540182105b15610d2d5760aa9050610d7d565b600654821080610d3e575060075482115b15610d4c5760649050610d7d565b60046043600160065460075403018460075403600402811515610d6b57fe5b0402811515610d7657fe5b0460640190505b919050565b60055481565b60135481565b60065481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610df057600080fd5b60075443111515610e0057600080fd5b601060009054906101000a900460ff1680610e275750601060019054906101000a900460ff165b15610e3157600080fd5b601254601181905550610ebd600080600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600e5460115402811515610eb757fe5b04611e2c565b600080600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f46601254670de0b6b3a7640000600e5460115402811515610f4057fe5b04611e2c565b601281905550610fb8600080600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600d54611e2c565b600080600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061102a601254600d54611e2c565b6012819055506001601060006101000a81548160ff0219169083151502179055506001601060016101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fad156d34337c07db4f9b140cea03fb74d167641e252f85c85ccf3b47f36c9c4960405160405180910390a2565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561112d57600080fd5b6001601460006101000a81548160ff021916908315150217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a5481565b601060019054906101000a900460ff1681565b600f5481565b600c5481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561121357600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112ed5780601f106112c2576101008083540402835291602001916112ed565b820191906000526020600020905b8154815290600101906020018083116112d057829003601f168201915b505050505081565b601060029054906101000a900460ff1681565b83600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816006819055508060078190555050505050565b600060065443101580156113b6575060fa6006540143105b156113c45760aa9050611414565b6006544310806113d5575060075443115b156113e35760649050611414565b6004604360016006546007540301436007540360040281151561140257fe5b040281151561140d57fe5b0460640190505b90565b6000600b5460075401431115801561147d5750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b1561148757600080fd5b6114918383611e56565b905092915050565b601460009054906101000a900460ff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561150857600080fd5b600c54600754014311151561151c57600080fd5b601060029054906101000a900460ff161561153657600080fd5b601060009054906101000a900460ff16158061155f5750601060019054906101000a900460ff16155b1561156957600080fd5b6115ec600080600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600f54601154028115156115e657fe5b04611e2c565b600080600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611675601254670de0b6b3a7640000600f546011540281151561166f57fe5b04611e2c565b6012819055506001601060026101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f1c8a3821e439862f28669f7fbc210e74e947ebf0e947b591cc5a02e41003026560405160405180910390a2565b600e5481565b600b5481565b60115481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561174957600080fd5b6000601460006101000a81548160ff021916908315150217905550565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080600233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506020604051808303816000865af115801561185a573d6000803e3d6000fd5b5050506040513d602081101561186f57600080fd5b81019080805190602001909291905050509150600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600183878787604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1158015611932573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614151561195e57600080fd5b60065443108061196f575060075443115b806119865750600a5461198460135434611e2c565b115b8061199d5750601460009054906101000a900460ff165b156119a757600080fd5b6119b8346119b361139e565b612039565b9050611a026000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611e2c565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a5060125482611e2c565b601281905550611a6260135434611e2c565b601381905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163460405160006040518083038185875af1925050501515611ac157600080fd5b8573ffffffffffffffffffffffffffffffffffffffff167f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed3483604051808381526020018281526020019250505060405180910390a2505050505050565b611b2b338484846117ed565b505050565b600d5481565b6000816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015611c02575081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015611c8b57506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b15611e2057816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050611e25565b600090505b9392505050565b6000808284019050611e4c848210158015611e475750838210155b61206c565b8091505092915050565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015611f2357506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b1561202e57816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050612033565b600090505b92915050565b6000808284029050612062600085148061205d575083858381151561205a57fe5b04145b61206c565b8091505092915050565b80151561207857600080fd5b505600a165627a7a72305820cf712a6c221f5d6670f9dd3b9deee7b98f827457e208313440c33e6b8252f9c20029"
}