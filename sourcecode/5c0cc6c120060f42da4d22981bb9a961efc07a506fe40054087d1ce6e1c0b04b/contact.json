{
  "address": "0x04f2e7221fdb1b52a68169b25793e51478ff0329",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Cappasity Token",
  "contractName": "Cappasity",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-11-30\n*/\n\npragma solidity ^0.4.18;\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 {\n  uint public totalSupply;\n\n  function balanceOf(address _owner) constant public returns (uint balance);\n  function transfer(address _to, uint _value) public returns (bool success);\n  function transferFrom(address _from, address _to, uint _value) public returns (bool success);\n  function approve(address _spender, uint _value) public returns (bool success);\n  function allowance(address _owner, address _spender) constant public returns (uint remaining);\n\n  event Transfer(address indexed _from, address indexed _to, uint value);\n  event Approval(address indexed _owner, address indexed _spender, uint value);\n}\n\nlibrary SafeMath {\n   function mul(uint a, uint b) internal pure returns (uint) {\n     if (a == 0) {\n        return 0;\n      }\n\n      uint c = a * b;\n      assert(c / a == b);\n      return c;\n   }\n\n   function sub(uint a, uint b) internal pure returns (uint) {\n      assert(b <= a);\n      return a - b;\n   }\n\n   function add(uint a, uint b) internal pure returns (uint) {\n      uint c = a + b;\n      assert(c >= a);\n      return c;\n   }\n\n  function div(uint a, uint b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n}\n\ncontract StandardToken is ERC20 {\n    using SafeMath for uint;\n\n    mapping (address => uint) balances;\n    mapping (address => mapping (address => uint)) allowed;\n\n    function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) public returns (bool) {\n        if (balances[msg.sender] >= _value\n            && _value > 0\n            && _to != msg.sender\n            && _to != address(0)\n          ) {\n            balances[msg.sender] = balances[msg.sender].sub(_value);\n            balances[_to] = balances[_to].add(_value);\n\n            Transfer(msg.sender, _to, _value);\n            return true;\n        }\n\n        return false;\n    }\n\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\n        if (balances[_from] >= _value\n            && allowed[_from][msg.sender] >= _value\n            && _value > 0\n            && _from != _to\n          ) {\n            balances[_to]   = balances[_to].add(_value);\n            balances[_from] = balances[_from].sub(_value);\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n            Transfer(_from, _to, _value);\n            return true;\n        }\n\n        return false;\n    }\n\n    function balanceOf(address _owner) constant public returns (uint) {\n        return balances[_owner];\n    }\n\n    function allowance(address _owner, address _spender) constant public returns (uint) {\n        return allowed[_owner][_spender];\n    }\n\n    function approve(address _spender, uint _value) public returns (bool) {\n        require(_spender != address(0));\n        // needs to be called twice -> first set to 0, then increase to another amount\n        // this is to avoid race conditions\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n        // useless operation\n        require(_spender != address(0));\n\n        // perform operation\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n        // useless operation\n        require(_spender != address(0));\n\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    modifier onlyPayloadSize(uint _size) {\n        require(msg.data.length >= _size + 4);\n        _;\n    }\n}\n\ncontract Cappasity is StandardToken {\n\n    // Constants\n    // =========\n    string public constant name = \"Cappasity\";\n    string public constant symbol = \"CAPP\";\n    uint8 public constant decimals = 2;\n    uint public constant TOKEN_LIMIT = 10 * 1e9 * 1e2; // 10 billion tokens, 2 decimals\n\n    // State variables\n    // ===============\n    address public manager;\n\n    // Block token transfers until ICO is finished.\n    bool public tokensAreFrozen = true;\n\n    // Allow/Disallow minting\n    bool public mintingIsAllowed = true;\n\n    // events for minting\n    event MintingAllowed();\n    event MintingDisabled();\n\n    // Freeze/Unfreeze assets\n    event TokensFrozen();\n    event TokensUnfrozen();\n\n    // Constructor\n    // ===========\n    function Cappasity(address _manager) public {\n        manager = _manager;\n    }\n\n    // Fallback function\n    // Do not allow to send money directly to this contract\n    function() payable public {\n        revert();\n    }\n\n    // ERC20 functions\n    // =========================\n    function transfer(address _to, uint _value) public returns (bool) {\n        require(!tokensAreFrozen);\n        return super.transfer(_to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\n        require(!tokensAreFrozen);\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    function approve(address _spender, uint _value) public returns (bool) {\n        require(!tokensAreFrozen);\n        return super.approve(_spender, _value);\n    }\n\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n        require(!tokensAreFrozen);\n        return super.increaseApproval(_spender, _addedValue);\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n        require(!tokensAreFrozen);\n        return super.decreaseApproval(_spender, _subtractedValue);\n    }\n\n    // PRIVILEGED FUNCTIONS\n    // ====================\n    modifier onlyByManager() {\n        require(msg.sender == manager);\n        _;\n    }\n\n    // Mint some tokens and assign them to an address\n    function mint(address _beneficiary, uint _value) external onlyByManager {\n        require(_value != 0);\n        require(totalSupply.add(_value) <= TOKEN_LIMIT);\n        require(mintingIsAllowed == true);\n\n        balances[_beneficiary] = balances[_beneficiary].add(_value);\n        totalSupply = totalSupply.add(_value);\n    }\n\n    // Disable minting. Can be enabled later, but TokenAllocation.sol only does that once.\n    function endMinting() external onlyByManager {\n        require(mintingIsAllowed == true);\n        mintingIsAllowed = false;\n        MintingDisabled();\n    }\n\n    // Enable minting. See TokenAllocation.sol\n    function startMinting() external onlyByManager {\n        require(mintingIsAllowed == false);\n        mintingIsAllowed = true;\n        MintingAllowed();\n    }\n\n    // Disable token transfer\n    function freeze() external onlyByManager {\n        require(tokensAreFrozen == false);\n        tokensAreFrozen = true;\n        TokensFrozen();\n    }\n\n    // Allow token transfer\n    function unfreeze() external onlyByManager {\n        require(tokensAreFrozen == true);\n        tokensAreFrozen = false;\n        TokensUnfrozen();\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingIsAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startMinting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensAreFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endMinting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintingAllowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintingDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TokensFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TokensUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526003805460a860020a60ff021960a060020a60ff02199091167401000000000000000000000000000000000000000017167501000000000000000000000000000000000000000000179055341561005a57600080fd5b604051602080610eb08339810160405280805160038054600160a060020a03909216600160a060020a03199092169190911790555050610e118061009f6000396000f3006060604052600436106101115763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663031bd4c4811461011657806306fdde031461013b578063095ea7b3146101c557806318160ddd146101fb5780631822cbc51461020e57806323b872dd14610221578063313ce5671461024957806340c10f1914610272578063481c6a751461029657806362a5af3b146102c557806366188463146102d85780636a28f000146102fa57806370a082311461030d57806395d89b411461032c5780639a65ea261461033f578063a9059cbb14610352578063ca67065f14610374578063d73dd62314610387578063dd62ed3e146103a9578063ef70aebf146103ce575b600080fd5b341561012157600080fd5b6101296103e1565b60405190815260200160405180910390f35b341561014657600080fd5b61014e6103ea565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561018a578082015183820152602001610172565b50505050905090810190601f1680156101b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101d057600080fd5b6101e7600160a060020a0360043516602435610421565b604051901515815260200160405180910390f35b341561020657600080fd5b61012961044c565b341561021957600080fd5b6101e7610452565b341561022c57600080fd5b6101e7600160a060020a0360043581169060243516604435610462565b341561025457600080fd5b61025c61048f565b60405160ff909116815260200160405180910390f35b341561027d57600080fd5b610294600160a060020a0360043516602435610494565b005b34156102a157600080fd5b6102a9610558565b604051600160a060020a03909116815260200160405180910390f35b34156102d057600080fd5b610294610567565b34156102e357600080fd5b6101e7600160a060020a03600435166024356105eb565b341561030557600080fd5b61029461060f565b341561031857600080fd5b610129600160a060020a0360043516610691565b341561033757600080fd5b61014e6106ac565b341561034a57600080fd5b6102946106e3565b341561035d57600080fd5b6101e7600160a060020a0360043516602435610768565b341561037f57600080fd5b6101e761078c565b341561039257600080fd5b6101e7600160a060020a036004351660243561079c565b34156103b457600080fd5b610129600160a060020a03600435811690602435166107c0565b34156103d957600080fd5b6102946107eb565b64e8d4a5100081565b60408051908101604052600981527f4361707061736974790000000000000000000000000000000000000000000000602082015281565b60035460009060a060020a900460ff161561043b57600080fd5b610445838361086e565b9392505050565b60005481565b60035460a860020a900460ff1681565b60035460009060a060020a900460ff161561047c57600080fd5b610487848484610929565b949350505050565b600281565b60035433600160a060020a039081169116146104af57600080fd5b8015156104bb57600080fd5b60005464e8d4a51000906104d5908363ffffffff610abe16565b11156104e057600080fd5b60035460a860020a900460ff1615156001146104fb57600080fd5b600160a060020a038216600090815260016020526040902054610524908263ffffffff610abe16565b600160a060020a03831660009081526001602052604081209190915554610551908263ffffffff610abe16565b6000555050565b600354600160a060020a031681565b60035433600160a060020a0390811691161461058257600080fd5b60035460a060020a900460ff161561059957600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790557f316264fa3559ee225a6d7af023bc64c868e8cfdc2e468d8ea546ecbbf84dfd8860405160405180910390a1565b60035460009060a060020a900460ff161561060557600080fd5b6104458383610ad8565b60035433600160a060020a0390811691161461062a57600080fd5b60035460a060020a900460ff16151560011461064557600080fd5b6003805474ff0000000000000000000000000000000000000000191690557fb16a4a524f473e6a0a4726c878402be59b3062affbf184022fa40d23433eb8ae60405160405180910390a1565b600160a060020a031660009081526001602052604090205490565b60408051908101604052600481527f4341505000000000000000000000000000000000000000000000000000000000602082015281565b60035433600160a060020a039081169116146106fe57600080fd5b60035460a860020a900460ff161561071557600080fd5b6003805475ff000000000000000000000000000000000000000000191660a860020a1790557f15d1e4eafac6ec0bf7286b80c8f28a8ea3295a35be9dd5371f2faf4da8c8a10360405160405180910390a1565b60035460009060a060020a900460ff161561078257600080fd5b6104458383610be9565b60035460a060020a900460ff1681565b60035460009060a060020a900460ff16156107b657600080fd5b6104458383610d1a565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a0390811691161461080657600080fd5b60035460a860020a900460ff16151560011461082157600080fd5b6003805475ff000000000000000000000000000000000000000000191690557faf79b4370f6af9d950564bbe6b81f7f0834c003c455db9248f4e55e6bf865eb760405160405180910390a1565b6000600160a060020a038316151561088557600080fd5b8115806108b55750600160a060020a03338116600090815260026020908152604080832093871683529290522054155b15156108c057600080fd5b600160a060020a03338116600081815260026020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b600160a060020a0383166000908152600160205260408120548290108015906109795750600160a060020a0380851660009081526002602090815260408083203390941683529290522054829010155b80156109855750600082115b80156109a3575082600160a060020a031684600160a060020a031614155b15610ab457600160a060020a0383166000908152600160205260409020546109d1908363ffffffff610abe16565b600160a060020a038085166000908152600160205260408082209390935590861681522054610a06908363ffffffff610dd316565b600160a060020a0380861660009081526001602090815260408083209490945560028152838220339093168252919091522054610a49908363ffffffff610dd316565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610445565b5060009392505050565b600082820183811015610acd57fe5b8091505b5092915050565b600080600160a060020a0384161515610af057600080fd5b50600160a060020a0333811660009081526002602090815260408083209387168352929052205480831115610b4c57600160a060020a033381166000908152600260209081526040808320938816835292905290812055610b83565b610b5c818463ffffffff610dd316565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600060406044361015610bfb57600080fd5b600160a060020a033316600090815260016020526040902054839010801590610c245750600083115b8015610c42575033600160a060020a031684600160a060020a031614155b8015610c565750600160a060020a03841615155b15610ab457600160a060020a033316600090815260016020526040902054610c84908463ffffffff610dd316565b600160a060020a033381166000908152600160205260408082209390935590861681522054610cb9908463ffffffff610abe16565b600160a060020a0380861660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a360019150610ad1565b6000600160a060020a0383161515610d3157600080fd5b600160a060020a03338116600090815260026020908152604080832093871683529290522054610d67908363ffffffff610abe16565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600082821115610ddf57fe5b509003905600a165627a7a72305820aae7252a04d75dd9b6180657454476c6b715329f50bb603876154f65c5a464a00029000000000000000000000000f67acb7b9226e482afcf7f08aac9466c50c19d9c",
  "constructorArguments": "000000000000000000000000f67acb7b9226e482afcf7f08aac9466c50c19d9c"
}