{
  "address": "0x23500b78f53f5919a9cc88c66c5da43a068bc259",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "IdentityFactory",
  "compilerVersion": "v0.5.6+commit.b259423e",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-07\n*/\n\npragma solidity ^0.5.6;\n\ninterface GeneralERC20 {\n\tfunction transfer(address to, uint256 value) external;\n\tfunction transferFrom(address from, address to, uint256 value) external;\n\tfunction approve(address spender, uint256 value) external;\n\tfunction balanceOf(address spender) external view returns (uint);\n}\n\nlibrary SafeERC20 {\n\tfunction checkSuccess()\n\t\tprivate\n\t\tpure\n\t\treturns (bool)\n\t{\n\t\tuint256 returnValue = 0;\n\n\t\tassembly {\n\t\t\t// check number of bytes returned from last function call\n\t\t\tswitch returndatasize\n\n\t\t\t// no bytes returned: assume success\n\t\t\tcase 0x0 {\n\t\t\t\treturnValue := 1\n\t\t\t}\n\n\t\t\t// 32 bytes returned: check if non-zero\n\t\t\tcase 0x20 {\n\t\t\t\t// copy 32 bytes into scratch space\n\t\t\t\treturndatacopy(0x0, 0x0, 0x20)\n\n\t\t\t\t// load those bytes into returnValue\n\t\t\t\treturnValue := mload(0x0)\n\t\t\t}\n\n\t\t\t// not sure what was returned: don't mark as success\n\t\t\tdefault { }\n\t\t}\n\n\t\treturn returnValue != 0;\n\t}\n\n\tfunction transfer(address token, address to, uint256 amount) internal {\n\t\tGeneralERC20(token).transfer(to, amount);\n\t\trequire(checkSuccess());\n\t}\n\n\tfunction transferFrom(address token, address from, address to, uint256 amount) internal {\n\t\tGeneralERC20(token).transferFrom(from, to, amount);\n\t\trequire(checkSuccess());\n\t}\n\n\tfunction approve(address token, address spender, uint256 amount) internal {\n\t\tGeneralERC20(token).approve(spender, amount);\n\t\trequire(checkSuccess());\n\t}\n}\n\n\ncontract IdentityFactory {\n\tevent LogDeployed(address addr, uint256 salt);\n\n\taddress public relayer;\n\tconstructor(address relayerAddr) public {\n\t\trelayer = relayerAddr;\n\t}\n\n\tfunction deploy(bytes memory code, uint256 salt) public {\n\t\taddress addr;\n\t\tassembly { addr := create2(0, add(code, 0x20), mload(code), salt) }\n\t\trequire(addr != address(0), \"FAILED_DEPLOYING\");\n\t\temit LogDeployed(addr, salt);\n\t}\n\n\tfunction deployAndFund(bytes memory code, uint256 salt, address tokenAddr, uint256 tokenAmount) public {\n\t\trequire(msg.sender == relayer, \"ONLY_RELAYER\");\n\t\taddress addr;\n\t\tassembly { addr := create2(0, add(code, 0x20), mload(code), salt) }\n\t\trequire(addr != address(0), \"FAILED_DEPLOYING\");\n\t\tSafeERC20.transfer(tokenAddr, addr, tokenAmount);\n\t\temit LogDeployed(addr, salt);\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"relayer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"code\",\"type\":\"bytes\"},{\"name\":\"salt\",\"type\":\"uint256\"},{\"name\":\"tokenAddr\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"deployAndFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"code\",\"type\":\"bytes\"},{\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"deploy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"relayerAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"LogDeployed\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060405160208061072a8339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610699806100916000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638406c079146100465780638a976282146100905780639c4ae2d01461017f575b600080fd5b61004e610244565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61017d600480360360808110156100a657600080fd5b81019080803590602001906401000000008111156100c357600080fd5b8201836020820111156100d557600080fd5b803590602001918460018302840111640100000000831117156100f757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610269565b005b6102426004803603604081101561019557600080fd5b81019080803590602001906401000000008111156101b257600080fd5b8201836020820111156101c457600080fd5b803590602001918460018302840111640100000000831117156101e657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050610459565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4f4e4c595f52454c41594552000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000838551602087016000f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4641494c45445f4445504c4f59494e470000000000000000000000000000000081525060200191505060405180910390fd5b6103e783828461057a565b7fecef66cbb4d4c8dd18157def75d46290ddc298395ea46f7ff64321c1a912cbad8185604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050505050565b6000818351602085016000f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4641494c45445f4445504c4f59494e470000000000000000000000000000000081525060200191505060405180910390fd5b7fecef66cbb4d4c8dd18157def75d46290ddc298395ea46f7ff64321c1a912cbad8183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561060157600080fd5b505af1158015610615573d6000803e3d6000fd5b5050505061062161062f565b61062a57600080fd5b505050565b600080600090503d6000811461064c576020811461065557610661565b60019150610661565b60206000803e60005191505b5060008114159150509056fea165627a7a72305820c00bbdf50007d6669254ca3101be253f3741ac54fcbed167cbbc21c15411afc30029000000000000000000000000942f9ce5d9a33a82f88d233aeb3292e680230348",
  "constructorArguments": "000000000000000000000000942f9ce5d9a33a82f88d233aeb3292e680230348"
}