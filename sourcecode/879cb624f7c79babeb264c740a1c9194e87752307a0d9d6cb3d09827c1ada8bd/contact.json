{
  "address": "0xa134fe76dfd877a718f3e73d818c85fd994f29de",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Gateway",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-04\n*/\n\npragma solidity ^0.4.18;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract Token {\n  /// @return total amount of tokens\n  function totalSupply() public constant returns (uint256 supply);\n\n  /// @param _owner The address from which the balance will be retrieved\n  /// @return The balance\n  function balanceOf(address _owner) public constant returns (uint256 balance);\n\n  /// @notice send `_value` token to `_to` from `msg.sender`\n  /// @param _to The address of the recipient\n  /// @param _value The amount of token to be transferred\n  /// @return Whether the transfer was successful or not\n  function transfer(address _to, uint256 _value) public returns (bool success);\n\n  /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n  /// @param _from The address of the sender\n  /// @param _to The address of the recipient\n  /// @param _value The amount of token to be transferred\n  /// @return Whether the transfer was successful or not\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n\n  /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\n  /// @param _spender The address of the account able to transfer the tokens\n  /// @param _value The amount of wei to be approved for transfer\n  /// @return Whether the approval was successful or not\n  function approve(address _spender, uint256 _value) public returns (bool success);\n\n  /// @param _owner The address of the account owning tokens\n  /// @param _spender The address of the account able to transfer the tokens\n  /// @return Amount of remaining tokens allowed to spent\n  function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n  uint public decimals;\n  string public name;\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    \n  address public owner;\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));      \n    owner = newOwner;\n  }\n\n}\ncontract Gateway is Ownable{\n    using SafeMath for uint;\n    address public feeAccount1 = 0x1eB58eb6c0b145537e921bd63701993cAE5f5f36; //the account1 that will receive fees\n    address public feeAccount2 = 0x00ff115Ec2A28b6fE9Ad9D434b290300bd91FaD4; //the account2 that will receive fees\n    \n    struct BuyInfo {\n      address buyerAddress; \n      address sellerAddress;\n      uint value;\n      address currency;\n    }\n    \n    mapping(address => mapping(uint => BuyInfo)) public payment;\n   \n    mapping(address => uint) public balances;\n    uint balanceFee;\n    uint public feePercent;\n    uint public maxFee;\n    constructor() public{\n       feePercent = 1500000; // decimals 6. 1,5% fee by default\n       maxFee = 3000000; // fee can not exceed 3%\n    }\n    \n    \n    function getBuyerAddressPayment(address _sellerAddress, uint _orderId) public constant returns(address){\n      return  payment[_sellerAddress][_orderId].buyerAddress;\n    }    \n    function getSellerAddressPayment(address _sellerAddress, uint _orderId) public constant returns(address){\n      return  payment[_sellerAddress][_orderId].sellerAddress;\n    }    \n    \n    function getValuePayment(address _sellerAddress, uint _orderId) public constant returns(uint){\n      return  payment[_sellerAddress][_orderId].value;\n    }    \n    \n    function getCurrencyPayment(address _sellerAddress, uint _orderId) public constant returns(address){\n      return  payment[_sellerAddress][_orderId].currency;\n    }\n    \n    \n    function setFeeAccount1(address _feeAccount1) onlyOwner public{\n      feeAccount1 = _feeAccount1;  \n    }\n    function setFeeAccount2(address _feeAccount2) onlyOwner public{\n      feeAccount2 = _feeAccount2;  \n    }\n    function setFeePercent(uint _feePercent) onlyOwner public{\n      require(_feePercent <= maxFee);\n      feePercent = _feePercent;  \n    }    \n    function payToken(address _tokenAddress, address _sellerAddress, uint _orderId,  uint _value) public returns (bool success){\n      require(_tokenAddress != address(0));\n      require(_sellerAddress != address(0)); \n      require(_value > 0);\n      Token token = Token(_tokenAddress);\n      require(token.allowance(msg.sender, this) >= _value);\n      token.transferFrom(msg.sender, _sellerAddress, _value);\n      payment[_sellerAddress][_orderId] = BuyInfo(msg.sender, _sellerAddress, _value, _tokenAddress);\n      success = true;\n    }\n    function payEth(address _sellerAddress, uint _orderId, uint _value) public returns  (bool success){\n      require(_sellerAddress != address(0)); \n      require(_value > 0);\n      require(balances[msg.sender] >= _value);\n      uint fee = _value.mul(feePercent).div(100000000);\n      balances[msg.sender] = balances[msg.sender].sub(_value);\n      _sellerAddress.transfer(_value.sub(fee));\n      balanceFee = balanceFee.add(fee);\n      payment[_sellerAddress][_orderId] = BuyInfo(msg.sender, _sellerAddress, _value, 0x0000000000000000000000000000000000000001);    \n      success = true;\n    }\n    function transferFee() onlyOwner public{\n      uint valfee1 = balanceFee.div(2);\n      feeAccount1.transfer(valfee1);\n      balanceFee = balanceFee.sub(valfee1);\n      feeAccount2.transfer(balanceFee);\n      balanceFee = 0;\n    }\n    function balanceOfToken(address _tokenAddress, address _Address) public constant returns (uint) {\n      Token token = Token(_tokenAddress);\n      return token.balanceOf(_Address);\n    }\n    function balanceOfEthFee() public constant returns (uint) {\n      return balanceFee;\n    }\n    function refund() public{\n      require(balances[msg.sender] > 0);\n      uint value = balances[msg.sender];\n      balances[msg.sender] = 0;\n      msg.sender.transfer(value);\n    }\n    function getBalanceEth() public constant returns(uint){\n      return balances[msg.sender];    \n    }\n    function() external payable {\n      balances[msg.sender] = balances[msg.sender].add(msg.value);    \n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"maxFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"getSellerAddressPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"getBuyerAddressPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"getValuePayment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfEthFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"payment\",\"outputs\":[{\"name\":\"buyerAddress\",\"type\":\"address\"},{\"name\":\"sellerAddress\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"currency\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeAccount2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"payEth\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"getCurrencyPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalanceEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeAccount1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transferFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feeAccount1\",\"type\":\"address\"}],\"name\":\"setFeeAccount1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feeAccount2\",\"type\":\"address\"}],\"name\":\"setFeeAccount2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_Address\",\"type\":\"address\"}],\"name\":\"balanceOfToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"name\":\"_orderId\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"payToken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]",
  "bytecode": "608060405260018054600160a060020a0319908116731eb58eb6c0b145537e921bd63701993cae5f5f36179091556002805490911672ff115ec2a28b6fe9ad9d434b290300bd91fad417905534801561005757600080fd5b5060008054600160a060020a031916331790556216e360600655622dc6c0600755610cd4806100876000396000f3006080604052600436106101275763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301f59d1681146101595780631987e50c1461018057806323146c20146101c057806327e235e3146101e45780633b8ea9e7146102055780633ed08dc914610229578063590e1ae31461023e57806367a09c23146102555780636d736fac146102ad5780637ce3489b146102c25780637fd6f15c146102da5780638a7c2be2146102ef5780638da5cb5b1461032a57806398445e6f1461033f5780639caf34c414610363578063a017994914610378578063acb2ad6f1461038d578063bc0aca61146103a2578063e7b89977146103c3578063f2fde38b146103e4578063f59e38b714610405578063f64ccca61461042c575b33600090815260046020526040902054610147903463ffffffff61045916565b33600090815260046020526040902055005b34801561016557600080fd5b5061016e610473565b60408051918252519081900360200190f35b34801561018c57600080fd5b506101a4600160a060020a0360043516602435610479565b60408051600160a060020a039092168252519081900360200190f35b3480156101cc57600080fd5b506101a4600160a060020a03600435166024356104a4565b3480156101f057600080fd5b5061016e600160a060020a03600435166104cc565b34801561021157600080fd5b5061016e600160a060020a03600435166024356104de565b34801561023557600080fd5b5061016e610509565b34801561024a57600080fd5b5061025361050f565b005b34801561026157600080fd5b50610279600160a060020a0360043516602435610570565b60408051600160a060020a039586168152938516602085015283810192909252909216606082015290519081900360800190f35b3480156102b957600080fd5b506101a46105ae565b3480156102ce57600080fd5b506102536004356105bd565b3480156102e657600080fd5b5061016e6105e8565b3480156102fb57600080fd5b50610316600160a060020a03600435166024356044356105ee565b604080519115158252519081900360200190f35b34801561033657600080fd5b506101a4610785565b34801561034b57600080fd5b506101a4600160a060020a0360043516602435610794565b34801561036f57600080fd5b5061016e6107bf565b34801561038457600080fd5b506101a46107d2565b34801561039957600080fd5b506102536107e1565b3480156103ae57600080fd5b50610253600160a060020a03600435166108a2565b3480156103cf57600080fd5b50610253600160a060020a03600435166108e8565b3480156103f057600080fd5b50610253600160a060020a036004351661092e565b34801561041157600080fd5b5061016e600160a060020a0360043581169060243516610989565b34801561043857600080fd5b50610316600160a060020a0360043581169060243516604435606435610a37565b60008282018381101561046857fe5b8091505b5092915050565b60075481565b600160a060020a03918216600090815260036020908152604080832093835292905220600101541690565b600160a060020a03918216600090815260036020908152604080832093835292905220541690565b60046020526000908152604090205481565b600160a060020a03919091166000908152600360209081526040808320938352929052206002015490565b60055490565b33600090815260046020526040812054811061052a57600080fd5b5033600081815260046020526040808220805490839055905190929183156108fc02918491818181858888f1935050505015801561056c573d6000803e3d6000fd5b5050565b600360208181526000938452604080852090915291835291208054600182015460028301549290930154600160a060020a0391821693821692911684565b600254600160a060020a031681565b600054600160a060020a031633146105d457600080fd5b6007548111156105e357600080fd5b600655565b60065481565b600080600160a060020a038516151561060657600080fd5b6000831161061357600080fd5b3360009081526004602052604090205483111561062f57600080fd5b6106586305f5e10061064c60065486610c5490919063ffffffff16565b9063ffffffff610c7f16565b3360009081526004602052604090205490915061067b908463ffffffff610c9616565b33600090815260046020526040902055600160a060020a0385166108fc6106a8858463ffffffff610c9616565b6040518115909202916000818181858888f193505050501580156106d0573d6000803e3d6000fd5b506005546106e4908263ffffffff61045916565b600555505060408051608081018252338152600160a060020a0394851660208083018281528385019586526001606085018181526000948552600380855287862099865298909352949092209251835490881673ffffffffffffffffffffffffffffffffffffffff19918216178455915183850180549189169184169190911790559351600283015592519301805493909416929091169190911790915590565b600054600160a060020a031681565b600160a060020a03918216600090815260036020818152604080842094845293905291902001541690565b3360009081526004602052604090205490565b600154600160a060020a031681565b60008054600160a060020a031633146107f957600080fd5b60055461080d90600263ffffffff610c7f16565b600154604051919250600160a060020a03169082156108fc029083906000818181858888f19350505050158015610848573d6000803e3d6000fd5b5060055461085c908263ffffffff610c9616565b6005819055600254604051600160a060020a039091169180156108fc02916000818181858888f19350505050158015610899573d6000803e3d6000fd5b50506000600555565b600054600160a060020a031633146108b957600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a031633146108ff57600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a0316331461094557600080fd5b600160a060020a038116151561095a57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008083905080600160a060020a03166370a08231846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610a0357600080fd5b505af1158015610a17573d6000803e3d6000fd5b505050506040513d6020811015610a2d57600080fd5b5051949350505050565b600080600160a060020a0386161515610a4f57600080fd5b600160a060020a0385161515610a6457600080fd5b60008311610a7157600080fd5b50604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152905186918491600160a060020a0384169163dd62ed3e9160448083019260209291908290030181600087803b158015610add57600080fd5b505af1158015610af1573d6000803e3d6000fd5b505050506040513d6020811015610b0757600080fd5b50511015610b1457600080fd5b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038781166024830152604482018690529151918316916323b872dd916064808201926020929091908290030181600087803b158015610b8657600080fd5b505af1158015610b9a573d6000803e3d6000fd5b505050506040513d6020811015610bb057600080fd5b505060408051608081018252338152600160a060020a0396871660208281018281528385019788529989166060840190815260009283526003808352858420998452989091529290209051815490881673ffffffffffffffffffffffffffffffffffffffff19918216178255975160018083018054928a16928b16929092179091559451600282015590519401805494909516939095169290921790925550919050565b600080831515610c67576000915061046c565b50828202828482811515610c7757fe5b041461046857fe5b6000808284811515610c8d57fe5b04949350505050565b600082821115610ca257fe5b509003905600a165627a7a72305820eac61177a4a370488742834e937fbd16a7b73579caf7f8ef1b27a1c5874cc7aa0029"
}