{
  "address": "0x6ecccf7ebc3497a9334f4fe957a7d5fa933c5bcc",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Token",
  "compilerVersion": "v0.4.4+commit.4633f3de",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-07-03\n*/\n\npragma solidity ^0.4.4;\n\n/**\n * @title Contract for object that have an owner\n */\ncontract Owned {\n    /**\n     * Contract owner address\n     */\n    address public owner;\n\n    /**\n     * @dev Delegate contract to another person\n     * @param _owner New owner address \n     */\n    function setOwner(address _owner) onlyOwner\n    { owner = _owner; }\n\n    /**\n     * @dev Owner check modifier\n     */\n    modifier onlyOwner { if (msg.sender != owner) throw; _; }\n}\n\n/**\n * @title Common pattern for destroyable contracts \n */\ncontract Destroyable {\n    address public hammer;\n\n    /**\n     * @dev Hammer setter\n     * @param _hammer New hammer address\n     */\n    function setHammer(address _hammer) onlyHammer\n    { hammer = _hammer; }\n\n    /**\n     * @dev Destroy contract and scrub a data\n     * @notice Only hammer can call it \n     */\n    function destroy() onlyHammer\n    { suicide(msg.sender); }\n\n    /**\n     * @dev Hammer check modifier\n     */\n    modifier onlyHammer { if (msg.sender != hammer) throw; _; }\n}\n\n/**\n * @title Generic owned destroyable contract\n */\ncontract Object is Owned, Destroyable {\n    function Object() {\n        owner  = msg.sender;\n        hammer = msg.sender;\n    }\n}\n\n// Standard token interface (ERC 20)\n// https://github.com/ethereum/EIPs/issues/20\ncontract ERC20 \n{\n// Functions:\n    /// @return total amount of tokens\n    uint256 public totalSupply;\n\n    /// @param _owner The address from which the balance will be retrieved\n    /// @return The balance\n    function balanceOf(address _owner) constant returns (uint256);\n\n    /// @notice send `_value` token to `_to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transfer(address _to, uint256 _value) returns (bool);\n\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n    /// @param _from The address of the sender\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool);\n\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _value The amount of wei to be approved for transfer\n    /// @return Whether the approval was successful or not\n    function approve(address _spender, uint256 _value) returns (bool);\n\n    /// @param _owner The address of the account owning tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address _owner, address _spender) constant returns (uint256);\n\n// Events:\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n/**\n * @title Token contract represents any asset in digital economy\n */\ncontract Token is Object, ERC20 {\n    /* Short description of token */\n    string public name;\n    string public symbol;\n\n    /* Total count of tokens exist */\n    uint public totalSupply;\n\n    /* Fixed point position */\n    uint8 public decimals;\n    \n    /* Token approvement system */\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowances;\n \n    /**\n     * @dev Get balance of plain address\n     * @param _owner is a target address\n     * @return amount of tokens on balance\n     */\n    function balanceOf(address _owner) constant returns (uint256)\n    { return balances[_owner]; }\n \n    /**\n     * @dev Take allowed tokens\n     * @param _owner The address of the account owning tokens\n     * @param _spender The address of the account able to transfer the tokens\n     * @return Amount of remaining tokens allowed to spent\n     */\n    function allowance(address _owner, address _spender) constant returns (uint256)\n    { return allowances[_owner][_spender]; }\n\n    /* Token constructor */\n    function Token(string _name, string _symbol, uint8 _decimals, uint _count) {\n        name        = _name;\n        symbol      = _symbol;\n        decimals    = _decimals;\n        totalSupply = _count;\n        balances[msg.sender] = _count;\n    }\n \n    /**\n     * @dev Transfer self tokens to given address\n     * @param _to destination address\n     * @param _value amount of token values to send\n     * @notice `_value` tokens will be sended to `_to`\n     * @return `true` when transfer done\n     */\n    function transfer(address _to, uint _value) returns (bool) {\n        if (balances[msg.sender] >= _value) {\n            balances[msg.sender] -= _value;\n            balances[_to]        += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev Transfer with approvement mechainsm\n     * @param _from source address, `_value` tokens shold be approved for `sender`\n     * @param _to destination address\n     * @param _value amount of token values to send \n     * @notice from `_from` will be sended `_value` tokens to `_to`\n     * @return `true` when transfer is done\n     */\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool) {\n        var avail = allowances[_from][msg.sender]\n                  > balances[_from] ? balances[_from]\n                                    : allowances[_from][msg.sender];\n        if (avail >= _value) {\n            allowances[_from][msg.sender] -= _value;\n            balances[_from] -= _value;\n            balances[_to]   += _value;\n            Transfer(_from, _to, _value);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev Give to target address ability for self token manipulation without sending\n     * @param _spender target address (future requester)\n     * @param _value amount of token values for approving\n     */\n    function approve(address _spender, uint256 _value) returns (bool) {\n        allowances[msg.sender][_spender] += _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Reset count of tokens approved for given address\n     * @param _spender target address (future requester)\n     */\n    function unapprove(address _spender)\n    { allowances[msg.sender][_spender] = 0; }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hammer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hammer\",\"type\":\"address\"}],\"name\":\"setHammer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"unapprove\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_count\",\"type\":\"uint256\"}],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "606060405260405161088038038061088083398101604052805160805160a05160c051928401939190910191600080546c0100000000000000000000000033810204600160a060020a031991821681179092556001805490911690911790558360036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012b57805160ff19168380011785555b5061015b9291505b808211156101b457600081556001016100b1565b5050600680547f01000000000000000000000000000000000000000000000000000000000000008085020460ff199091161790556005819055600160a060020a033316600090815260076020526040902081905550505050610698806101e86000396000f35b828001600101855582156100a9579182015b828111156100a957825182600050559160200191906001019061013d565b50508260046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101b857805160ff19168380011785555b506100c59291506100b1565b5090565b828001600101855582156101a8579182015b828111156101a85782518260005055916020019190600101906101ca56606060405236156100b95760e060020a600035046306fdde0381146100be578063095ea7b31461012357806313af40351461019f57806318160ddd146101c557806323b872dd146101d3578063313ce5671461024a578063457f4d411461025b57806370a082311461027257806383197ef0146102a55780638da5cb5b146102c857806395d89b41146102df578063a9059cbb14610344578063d31fdffd146103e1578063dd62ed3e14610407578063fbf1f78a14610440575b610002565b346100025761047660038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281529291908301828280156105575780601f1061052c57610100808354040283529160200191610557565b34610002576104e4600435602435600160a060020a03338116600081815260086020908152604080832094871680845294825280832080548701905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b34610002576104f860043560005433600160a060020a0390811691161461055f57610002565b346100025761029360055481565b34610002576104e4600435602435604435600160a060020a03808416600090815260076020908152604080832054600883528184203390951684529390915281205490918291116105a157600160a060020a03808616600090815260086020908152604080832033909416835292905220546105bb565b34610002576104fa60065460ff1681565b3461000257610510600154600160a060020a031681565b3461000257600160a060020a03600435166000908152600760205260409020545b60408051918252519081900360200190f35b34610002576104f860015433600160a060020a0390811691161461064f57610002565b3461000257610510600054600160a060020a031681565b346100025761047660048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281529291908301828280156105575780601f1061052c57610100808354040283529160200191610557565b34610002576104e4600435602435600160a060020a03331660009081526007602052604081205482901061065b57600160a060020a03338116600081815260076020908152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3506001610199565b34610002576104f860043560015433600160a060020a0390811691161461066357610002565b3461000257610293600435602435600160a060020a03808316600090815260086020908152604080832093851683529290522054610199565b34610002576104f8600435600160a060020a03338116600090815260086020908152604080832093851683529290529081205550565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156104d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b604080519115158252519081900360200190f35b005b6040805160ff9092168252519081900360200190f35b60408051600160a060020a039092168252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161053a57829003601f168201915b505050505081565b600080546c010000000000000000000000008084020473ffffffffffffffffffffffffffffffffffffffff1990911617905550565b600091505b509392505050565b600160a060020a0385166000908152600760205260409020545b905082811061059457600160a060020a03808616600081815260086020908152604080832033861684528252808320805489900390558383526007825280832080548990039055938816808352918490208054880190558351878152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a360019150610599565b33600160a060020a0316ff5b506000610199565b600180546c010000000000000000000000008084020473ffffffffffffffffffffffffffffffffffffffff199091161790555056000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000000000000c4269746c6c6520546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000342544c0000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "00490600052602060002090601f016020900481019282601f106101b857805160ff19168380011785555b506100c59291506100b1565b5090565b828001600101855582156101a8579182015b828111156101a85782518260005055916020019190600101906101ca56606060405236156100b95760e060020a600035046306fdde0381146100be578063095ea7b31461012357806313af40351461019f57806318160ddd146101c557806323b872dd146101d3578063313ce5671461024a578063457f4d411461025b57806370a082311461027257806383197ef0146102a55780638da5cb5b146102c857806395d89b41146102df578063a9059cbb14610344578063d31fdffd146103e1578063dd62ed3e14610407578063fbf1f78a14610440575b610002565b346100025761047660038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281529291908301828280156105575780601f1061052c57610100808354040283529160200191610557565b34610002576104e4600435602435600160a060020a03338116600081815260086020908152604080832094871680845294825280832080548701905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b34610002576104f860043560005433600160a060020a0390811691161461055f57610002565b346100025761029360055481565b34610002576104e4600435602435604435600160a060020a03808416600090815260076020908152604080832054600883528184203390951684529390915281205490918291116105a157600160a060020a03808616600090815260086020908152604080832033909416835292905220546105bb565b34610002576104fa60065460ff1681565b3461000257610510600154600160a060020a031681565b3461000257600160a060020a03600435166000908152600760205260409020545b60408051918252519081900360200190f35b34610002576104f860015433600160a060020a0390811691161461064f57610002565b3461000257610510600054600160a060020a031681565b346100025761047660048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281529291908301828280156105575780601f1061052c57610100808354040283529160200191610557565b34610002576104e4600435602435600160a060020a03331660009081526007602052604081205482901061065b57600160a060020a03338116600081815260076020908152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3506001610199565b34610002576104f860043560015433600160a060020a0390811691161461066357610002565b3461000257610293600435602435600160a060020a03808316600090815260086020908152604080832093851683529290522054610199565b34610002576104f8600435600160a060020a03338116600090815260086020908152604080832093851683529290529081205550565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156104d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b604080519115158252519081900360200190f35b005b6040805160ff9092168252519081900360200190f35b60408051600160a060020a039092168252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161053a57829003601f168201915b505050505081565b600080546c010000000000000000000000008084020473ffffffffffffffffffffffffffffffffffffffff1990911617905550565b600091505b509392505050565b600160a060020a0385166000908152600760205260409020545b905082811061059457600160a060020a03808616600081815260086020908152604080832033861684528252808320805489900390558383526007825280832080548990039055938816808352918490208054880190558351878152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a360019150610599565b33600160a060020a0316ff5b506000610199565b600180546c010000000000000000000000008084020473ffffffffffffffffffffffffffffffffffffffff199091161790555056000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000000000000c4269746c6c6520546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000342544c0000000000000000000000000000000000000000000000000000000000"
}