{
  "address": "0xdecf7be29f8832e9c2ddf0388c9778b8ba76af43",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BonusCloudToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-12\n*/\n\npragma solidity ^0.4.24;\n\n/**\n * @dev Library that helps prevent integer overflows and underflows,\n * inspired by https://github.com/OpenZeppelin/zeppelin-solidity\n */\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n\n        return c;\n    }\n}\n\n/**\n * @title HasOwner\n *\n * @dev Allows for exclusive access to certain functionality.\n */\ncontract HasOwner {\n    // Current owner.\n    address public owner;\n\n    // Conditionally the new owner.\n    address public newOwner;\n\n    /**\n     * @dev The constructor.\n     *\n     * @param _owner The address of the owner.\n     */\n    constructor(address _owner) internal {\n        owner = _owner;\n    }\n\n    /**\n     * @dev Access control modifier that allows only the current owner to call the function.\n     */\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n     * @dev The event is fired when the current owner is changed.\n     *\n     * @param _oldOwner The address of the previous owner.\n     * @param _newOwner The address of the new owner.\n     */\n    event OwnershipTransfer(address indexed _oldOwner, address indexed _newOwner);\n\n    /**\n     * @dev Transfering the ownership is a two-step process, as we prepare\n     * for the transfer by setting `newOwner` and requiring `newOwner` to accept\n     * the transfer. This prevents accidental lock-out if something goes wrong\n     * when passing the `newOwner` address.\n     *\n     * @param _newOwner The address of the proposed new owner.\n     */\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n\n    /**\n     * @dev The `newOwner` finishes the ownership transfer process by accepting the\n     * ownership.\n     */\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n\n        emit OwnershipTransfer(owner, newOwner);\n\n        owner = newOwner;\n    }\n}\n\n/**\n * @dev The standard ERC20 Token interface.\n */\ncontract ERC20TokenInterface {\n    uint256 public totalSupply;  /* shorthand for public function and a property */\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    function balanceOf(address _owner) public constant returns (uint256 balance);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n}\n\n/**\n * @title ERC20Token\n *\n * @dev Implements the operations declared in the `ERC20TokenInterface`.\n */\ncontract ERC20Token is ERC20TokenInterface {\n    using SafeMath for uint256;\n\n    // Token account balances.\n    mapping (address => uint256) balances;\n\n    // Delegated number of tokens to transfer.\n    mapping (address => mapping (address => uint256)) allowed;\n\n    /**\n     * @dev Checks the balance of a certain address.\n     *\n     * @param _account The address which's balance will be checked.\n     *\n     * @return Returns the balance of the `_account` address.\n     */\n    function balanceOf(address _account) public constant returns (uint256 balance) {\n        return balances[_account];\n    }\n\n    /**\n     * @dev Transfers tokens from one address to another.\n     *\n     * @param _to The target address to which the `_value` number of tokens will be sent.\n     * @param _value The number of tokens to send.\n     *\n     * @return Whether the transfer was successful or not.\n     */\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n        require(_value > 0);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n\n        emit Transfer(msg.sender, _to, _value);\n\n        return true;\n    }\n\n    /**\n     * @dev Send `_value` tokens to `_to` from `_from` if `_from` has approved the process.\n     *\n     * @param _from The address of the sender.\n     * @param _to The address of the recipient.\n     * @param _value The number of tokens to be transferred.\n     *\n     * @return Whether the transfer was successful or not.\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n        require(_value > 0);\n        require(_to != address(0));\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\n        emit Transfer(_from, _to, _value);\n\n        return true;\n    }\n\n    /**\n     * @dev Allows another contract to spend some tokens on your behalf.\n     *\n     * @param _spender The address of the account which will be approved for transfer of tokens.\n     * @param _value The number of tokens to be approved for transfer.\n     *\n     * @return Whether the approval was successful or not.\n     */\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n\n        emit Approval(msg.sender, _spender, _value);\n\n        return true;\n    }\n\n\t/**\n\t * @dev Increase the amount of tokens that an owner allowed to a spender.\n\t * approve should be called when allowed[_spender] == 0. To increment\n\t * allowed value is better to use this function to avoid 2 calls (and wait until\n\t * the first transaction is mined)\n\t * From MonolithDAO Token.sol\n\t *\n\t * @param _spender The address which will spend the funds.\n\t * @param _addedValue The amount of tokens to increase the allowance by.\n\t */\n\tfunction increaseApproval(address _spender, uint256 _addedValue) public returns (bool) {\n\t\tallowed[msg.sender][_spender] = (allowed[msg.sender][_spender].add(_addedValue));\n\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Decrease the amount of tokens that an owner allowed to a spender.\n\t * approve should be called when allowed[_spender] == 0. To decrement\n\t * allowed value is better to use this function to avoid 2 calls (and wait until\n\t * the first transaction is mined)\n\t * From MonolithDAO Token.sol\n\t *\n\t * @param _spender The address which will spend the funds.\n\t * @param _subtractedValue The amount of tokens to decrease the allowance by.\n\t */\n\tfunction decreaseApproval(address _spender, uint256 _subtractedValue) public returns (bool) {\n\t\tuint256 oldValue = allowed[msg.sender][_spender];\n\t\tif (_subtractedValue >= oldValue) {\n\t\t\tallowed[msg.sender][_spender] = 0;\n\t\t} else {\n\t\t\tallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n\t\t}\n\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\t\treturn true;\n\t}\n\n    /**\n     * @dev Shows the number of tokens approved by `_owner` that are allowed to be transferred by `_spender`.\n     *\n     * @param _owner The account which allowed the transfer.\n     * @param _spender The account which will spend the tokens.\n     *\n     * @return The number of tokens to be transferred.\n     */\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n     * Don't accept ETH\n     */\n    function () public payable {\n        revert();\n    }\n}\n\n/**\n * @title Freezable\n * @dev This trait allows to freeze the transactions in a Token\n */\ncontract Freezable is HasOwner {\n    bool public frozen = false;\n\n    /**\n     * @dev Modifier makes methods callable only when the contract is not frozen.\n     */\n    modifier requireNotFrozen() {\n        require(!frozen);\n        _;\n    }\n\n    /**\n     * @dev Allows the owner to \"freeze\" the contract.\n     */\n    function freeze() onlyOwner public {\n        frozen = true;\n    }\n\n    /**\n     * @dev Allows the owner to \"unfreeze\" the contract.\n     */\n    function unfreeze() onlyOwner public {\n        frozen = false;\n    }\n}\n\n/**\n * @title FreezableERC20Token\n *\n * @dev Extends ERC20Token and adds ability to freeze all transfers of tokens.\n */\ncontract FreezableERC20Token is ERC20Token, Freezable {\n    /**\n     * @dev Overrides the original ERC20Token implementation by adding whenNotFrozen modifier.\n     *\n     * @param _to The target address to which the `_value` number of tokens will be sent.\n     * @param _value The number of tokens to send.\n     *\n     * @return Whether the transfer was successful or not.\n     */\n    function transfer(address _to, uint _value) public requireNotFrozen returns (bool success) {\n        return super.transfer(_to, _value);\n    }\n\n    /**\n     * @dev Send `_value` tokens to `_to` from `_from` if `_from` has approved the process.\n     *\n     * @param _from The address of the sender.\n     * @param _to The address of the recipient.\n     * @param _value The number of tokens to be transferred.\n     *\n     * @return Whether the transfer was successful or not.\n     */\n    function transferFrom(address _from, address _to, uint _value) public requireNotFrozen returns (bool success) {\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    /**\n     * @dev Allows another contract to spend some tokens on your behalf.\n     *\n     * @param _spender The address of the account which will be approved for transfer of tokens.\n     * @param _value The number of tokens to be approved for transfer.\n     *\n     * @return Whether the approval was successful or not.\n     */\n    function approve(address _spender, uint _value) public requireNotFrozen returns (bool success) {\n        return super.approve(_spender, _value);\n    }\n\n    function increaseApproval(address _spender, uint256 _addedValue) public requireNotFrozen returns (bool) {\n        return super.increaseApproval(_spender, _addedValue);\n    }\n\n    function decreaseApproval(address _spender, uint256 _subtractedValue) public requireNotFrozen returns (bool) {\n        return super.decreaseApproval(_spender, _subtractedValue);\n    }\n}\n\n/**\n * @title BonusCloudTokenConfig\n *\n * @dev The static configuration for the Bonus Cloud Token.\n */\ncontract BonusCloudTokenConfig {\n    // The name of the token.\n    string constant NAME = \"BonusCloud Token\";\n\n    // The symbol of the token.\n    string constant SYMBOL = \"BxC\";\n\n    // The number of decimals for the token.\n    uint8 constant DECIMALS = 18;\n\n    // Decimal factor for multiplication purposes.\n    uint256 constant DECIMALS_FACTOR = 10 ** uint(DECIMALS);\n\n    // TotalSupply\n    uint256 constant TOTAL_SUPPLY = 7000000000 * DECIMALS_FACTOR;\n}\n\n/**\n * @title Bonus Cloud Token\n *\n * @dev A standard token implementation of the ERC20 token standard with added\n *      HasOwner trait and initialized using the configuration constants.\n */\ncontract BonusCloudToken is BonusCloudTokenConfig, HasOwner, FreezableERC20Token {\n    // The name of the token.\n    string public name;\n\n    // The symbol for the token.\n    string public symbol;\n\n    // The decimals of the token.\n    uint8 public decimals;\n\n    /**\n     * @dev The constructor.\n     *\n     */\n    constructor() public HasOwner(msg.sender) {\n        name = NAME;\n        symbol = SYMBOL;\n        decimals = DECIMALS;\n        totalSupply = TOTAL_SUPPLY;\n        balances[owner] = TOTAL_SUPPLY;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"frozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040526004805460a060020a60ff021916905534801561002057600080fd5b5060038054600160a060020a031916331790556040805180820190915260108082527f426f6e7573436c6f756420546f6b656e000000000000000000000000000000006020909201918252610077916005916100f9565b506040805180820190915260038082527f427843000000000000000000000000000000000000000000000000000000000060209092019182526100bc916006916100f9565b506007805460ff191660121790556b169e43a85eb381aa580000006000818155600354600160a060020a0316815260016020526040902055610194565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013a57805160ff1916838001178555610167565b82800160010185558215610167579182015b8281111561016757825182559160200191906001019061014c565b50610173929150610177565b5090565b61019191905b80821115610173576000815560010161017d565b90565b610bec806101a36000396000f3006080604052600436106100fb5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663054f7d9c811461010057806306fdde0314610129578063095ea7b3146101b357806318160ddd146101d757806323b872dd146101fe578063313ce5671461022857806362a5af3b14610253578063661884631461026a5780636a28f0001461028e57806370a08231146102a357806379ba5097146102c45780638da5cb5b146102d957806395d89b411461030a578063a9059cbb1461031f578063d4ee1d9014610343578063d73dd62314610358578063dd62ed3e1461037c578063f2fde38b146103a3575b600080fd5b34801561010c57600080fd5b506101156103c4565b604080519115158252519081900360200190f35b34801561013557600080fd5b5061013e6103d4565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610178578181015183820152602001610160565b50505050905090810190601f1680156101a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101bf57600080fd5b50610115600160a060020a0360043516602435610462565b3480156101e357600080fd5b506101ec61048d565b60408051918252519081900360200190f35b34801561020a57600080fd5b50610115600160a060020a0360043581169060243516604435610493565b34801561023457600080fd5b5061023d6104c0565b6040805160ff9092168252519081900360200190f35b34801561025f57600080fd5b506102686104c9565b005b34801561027657600080fd5b50610115600160a060020a0360043516602435610506565b34801561029a57600080fd5b5061026861052a565b3480156102af57600080fd5b506101ec600160a060020a0360043516610561565b3480156102d057600080fd5b5061026861057c565b3480156102e557600080fd5b506102ee610603565b60408051600160a060020a039092168252519081900360200190f35b34801561031657600080fd5b5061013e610612565b34801561032b57600080fd5b50610115600160a060020a036004351660243561066d565b34801561034f57600080fd5b506102ee610691565b34801561036457600080fd5b50610115600160a060020a03600435166024356106a0565b34801561038857600080fd5b506101ec600160a060020a03600435811690602435166106c4565b3480156103af57600080fd5b50610268600160a060020a03600435166106ef565b60045460a060020a900460ff1681565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561045a5780601f1061042f5761010080835404028352916020019161045a565b820191906000526020600020905b81548152906001019060200180831161043d57829003601f168201915b505050505081565b60045460009060a060020a900460ff161561047c57600080fd5b6104868383610735565b9392505050565b60005481565b60045460009060a060020a900460ff16156104ad57600080fd5b6104b884848461079b565b949350505050565b60075460ff1681565b600354600160a060020a031633146104e057600080fd5b6004805474ff0000000000000000000000000000000000000000191660a060020a179055565b60045460009060a060020a900460ff161561052057600080fd5b610486838361091f565b600354600160a060020a0316331461054157600080fd5b6004805474ff000000000000000000000000000000000000000019169055565b600160a060020a031660009081526001602052604090205490565b600454600160a060020a0316331461059357600080fd5b600454600354604051600160a060020a0392831692909116907f22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca90600090a36004546003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b600354600160a060020a031681565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561045a5780601f1061042f5761010080835404028352916020019161045a565b60045460009060a060020a900460ff161561068757600080fd5b6104868383610a0e565b600454600160a060020a031681565b60045460009060a060020a900460ff16156106ba57600080fd5b6104868383610afe565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a0316331461070657600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600160a060020a0383166000908152600160205260408120548211156107c057600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156107f057600080fd5b600082116107fd57600080fd5b600160a060020a038316151561081257600080fd5b600160a060020a03841660009081526001602052604090205461083b908363ffffffff610b9716565b600160a060020a038086166000908152600160205260408082209390935590851681522054610870908363ffffffff610bae16565b600160a060020a0380851660009081526001602090815260408083209490945591871681526002825282812033825290915220546108b4908363ffffffff610b9716565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b336000908152600260209081526040808320600160a060020a038616845290915281205480831061097357336000908152600260209081526040808320600160a060020a03881684529091528120556109a8565b610983818463ffffffff610b9716565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a0383161515610a2557600080fd5b33600090815260016020526040902054821115610a4157600080fd5b60008211610a4e57600080fd5b33600090815260016020526040902054610a6e908363ffffffff610b9716565b3360009081526001602052604080822092909255600160a060020a03851681522054610aa0908363ffffffff610bae16565b600160a060020a0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610b32908363ffffffff610bae16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60008083831115610ba757600080fd5b5050900390565b60008282018381101561048657600080fd00a165627a7a723058205f95755d9830d5eec6a0c54c40dbb715134680c904916c53e190ca7ab689ba0b0029"
}