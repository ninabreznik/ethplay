{
  "address": "0x9c425e6ef7451e687815323e340df1cef474709d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TRU",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-27\n*/\n\n/*\n file:   Trullion.sol\n ver:    0.0.1_deploy\n author: Trivillon\n date:   24-Nov-2018\n email:  [emailÂ protected]\n\n Licence\n -------\n (c) 2018 Everus-Trullion \n   \n Release Notes\n -------------\n * Trullion  Based in Kualalumpur, Malaysia , we're blessed with strong rule of law, and great beaches. Welcome to Trullion.\n\n * This contract is TRU, GOLD as an ERC20 token.\n\n * see https://Everus.org/ for further information\n\n*/\n\npragma solidity ^0.4.17;\n\n\ncontract TRUConfig\n{\n    // ERC20 token name\n    string  public constant name            = \"Trullion-e\";\n\n    // ERC20 trading symbol\n    string  public constant symbol          = \"Tru-e\";\n\n    // Contract owner at time of deployment.\n    address public constant OWNER = 0x262f01741f2b6e6fda97bce85a6756a89c099e43;\n\n    // Contract 2nd admin\n    address public constant ADMIN_TOO  = 0x262f01741f2b6e6fda97bce85a6756a89c099e43;\n\n    // Opening Supply\n    uint    public constant TOTAL_TOKENS    = 0 ;\n\n    // ERC20 decimal places\n    uint8   public constant decimals        = 8;\n\n\n}\n\n\nlibrary SafeMath\n{\n    // a add to b\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        assert(c >= a);\n    }\n\n    // a subtract b\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        c = a - b;\n        assert(c <= a);\n    }\n\n    // a multiplied by b\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        assert(a == 0 || c / a == b);\n    }\n\n    // a divided by b\n    function div(uint a, uint b) internal pure returns (uint c) {\n        assert(b != 0);\n        c = a / b;\n    }\n}\n\n\ncontract ReentryProtected\n{\n    // The reentry protection state mutex.\n    bool __reMutex;\n\n    // Sets and clears mutex in order to block function reentry\n    modifier preventReentry() {\n        require(!__reMutex);\n        __reMutex = true;\n        _;\n        delete __reMutex;\n    }\n\n    // Blocks function entry if mutex is set\n    modifier noReentry() {\n        require(!__reMutex);\n        _;\n    }\n}\n\n\ncontract ERC20Token\n{\n    using SafeMath for uint;\n\n/* Constants */\n\n    // none\n\n/* State variable */\n\n    /// @return The Total supply of tokens\n    uint public totalSupply;\n\n    /// @return Tokens owned by an address\n    mapping (address => uint) balances;\n\n    /// @return Tokens spendable by a thridparty\n    mapping (address => mapping (address => uint)) allowed;\n\n/* Events */\n\n    // Triggered when tokens are transferred.\n    event Transfer(\n        address indexed _from,\n        address indexed _to,\n        uint256 _amount);\n\n    // Triggered whenever approve(address _spender, uint256 _amount) is called.\n    event Approval(\n        address indexed _owner,\n        address indexed _spender,\n        uint256 _amount);\n\n/* Modifiers */\n\n    // none\n\n/* Functions */\n\n    // Using an explicit getter allows for function overloading\n    function balanceOf(address _addr)\n        public\n        view\n        returns (uint)\n    {\n        return balances[_addr];\n    }\n\n    // Quick checker on total supply\n    function currentSupply()\n        public\n        view\n        returns (uint)\n    {\n        return totalSupply;\n    }\n\n\n    // Using an explicit getter allows for function overloading\n    function allowance(address _owner, address _spender)\n        public\n        returns (uint)\n    {\n        return allowed[_owner][_spender];\n    }\n\n    // Send _value amount of tokens to address _to\n    function transfer(address _to, uint256 _amount)\n        public\n        returns (bool)\n    {\n        return xfer(msg.sender, _to, _amount);\n    }\n\n    // Send _value amount of tokens from address _from to address _to\n    function transferFrom(address _from, address _to, uint256 _amount)\n        public\n        returns (bool)\n    {\n        require(_amount <= allowed[_from][msg.sender]);\n\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n        return xfer(_from, _to, _amount);\n    }\n\n    // Process a transfer internally.\n    function xfer(address _from, address _to, uint _amount)\n        internal\n        returns (bool)\n    {\n        require(_amount <= balances[_from]);\n\n        emit Transfer(_from, _to, _amount);\n\n        // avoid wasting gas on 0 token transfers\n        if(_amount == 0) return true;\n\n        balances[_from] = balances[_from].sub(_amount);\n        balances[_to]   = balances[_to].add(_amount);\n\n        return true;\n    }\n\n    // Approves a third-party spender\n    function approve(address _spender, uint256 _amount)\n        public\n        returns (bool)\n    {\n        allowed[msg.sender][_spender] = _amount;\n        emit Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n}\n\n\n\ncontract TRUAbstract\n{\n\n    /// @dev Logged when new owner accepts ownership\n    /// @param _from the old owner address\n    /// @param _to the new owner address\n    event ChangedOwner(address indexed _from, address indexed _to);\n\n    /// @dev Logged when owner initiates a change of ownership\n    /// @param _to the new owner address\n    event ChangeOwnerTo(address indexed _to);\n\n    /// @dev Logged when new adminToo accepts the role\n    /// @param _from the old owner address\n    /// @param _to the new owner address\n    event ChangedAdminToo(address indexed _from, address indexed _to);\n\n    /// @dev Logged when owner initiates a change of ownership\n    /// @param _to the new owner address\n    event ChangeAdminToo(address indexed _to);\n\n// State Variables\n//\n    /// @dev An address permissioned to enact owner restricted functions\n    /// @return owner\n    address public owner;\n\n    /// @dev An address permissioned to take ownership of the contract\n    /// @return new owner address\n    address public newOwner;\n\n    /// @dev An address used in the withdrawal process\n    /// @return adminToo\n    address public adminToo;\n\n    /// @dev An address permissioned to become the withdrawal process address\n    /// @return new admin address\n    address public newAdminToo;\n\n//\n// Modifiers\n//\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n//\n// Function Abstracts\n//\n\n\n    /// @notice Make bulk transfer of tokens to many addresses (Automic drop)\n    /// @param _addrs An array of recipient addresses\n    /// @param _amounts An array of amounts to transfer to respective addresses\n    /// @return Boolean success value\n \n    function transferToMany(address[] _addrs, uint[] _amounts)\n        public returns (bool);\n\n    /// @notice Salvage `_amount` tokens at `_kaddr` and send them to `_to`\n    /// @param _kAddr An ERC20 contract address\n    /// @param _to and address to send tokens\n    /// @param _amount The number of tokens to transfer\n    /// @return Boolean success value\n    function transferExternalToken(address _kAddr, address _to, uint _amount)\n        public returns (bool);\n}\n\n\n/*-----------------------------------------------------------------------------\\\n\nBTCR implementation\n\n\\*----------------------------------------------------------------------------*/\n\ncontract TRU is\n    ReentryProtected,\n    ERC20Token,\n   TRUAbstract,\n   TRUConfig\n{\n    using SafeMath for uint;\n\n//\n// Constants\n//\n\n    // Token fixed point for decimal places\n    uint constant TOKEN = uint(10)**decimals;\n\n\n//\n// Functions\n//\n\n    constructor()\n        public\n    {\n\n        owner = OWNER;\n        adminToo = ADMIN_TOO;\n        totalSupply = TOTAL_TOKENS.mul(TOKEN);\n        balances[owner] = totalSupply;\n\n    }\n\n    // Default function.\n    function ()\n        public\n        payable\n    {\n        // nothing to see here, folks....\n    }\n\n\n//\n// Manage supply\n//\n\nevent DecreaseSupply(address indexed burner, uint256 value);\nevent IncreaseSupply(address indexed burner, uint256 value);\n\n    /**\n     * @dev lowers the supply by a specified amount of tokens.\n     * @param _value The amount of tokens to lower the supply by.\n     */\n\n    function decreaseSupply(uint256 _value)\n        public\n        onlyOwner {\n            require(_value > 0);\n            address burner = adminToo;\n            balances[burner] = balances[burner].sub(_value);\n            totalSupply = totalSupply.sub(_value);\n            emit DecreaseSupply(msg.sender, _value);\n    }\n\n    function increaseSupply(uint256 _value)\n        public\n        onlyOwner {\n            require(_value > 0);\n            totalSupply = totalSupply.add(_value);\n            balances[owner] = balances[owner].add(_value);\n            emit IncreaseSupply(msg.sender, _value);\n    }\n\n\n\n\n//\n// ERC20 additional functions\n//\n\n    // Allows a sender to transfer tokens to an array of recipients\n    function transferToMany(address[] _addrs, uint[] _amounts)\n        public\n        noReentry\n        returns (bool)\n    {\n        require(_addrs.length == _amounts.length);\n        uint len = _addrs.length;\n        for(uint i = 0; i < len; i++) {\n            xfer(msg.sender, _addrs[i], _amounts[i]);\n        }\n        return true;\n    }\n\n   // Overload placeholder - could apply further logic\n    function xfer(address _from, address _to, uint _amount)\n        internal\n        noReentry\n        returns (bool)\n    {\n        super.xfer(_from, _to, _amount);\n        return true;\n    }\n\n//\n// Contract management functions\n//\n\n    // Initiate a change of owner to `_owner`\n    function changeOwner(address _owner)\n        public\n        onlyOwner\n        returns (bool)\n    {\n        emit ChangeOwnerTo(_owner);\n        newOwner = _owner;\n        return true;\n    }\n\n    // Finalise change of ownership to newOwner\n    function acceptOwnership()\n        public\n        returns (bool)\n    {\n        require(msg.sender == newOwner);\n        emit ChangedOwner(owner, msg.sender);\n        owner = newOwner;\n        delete newOwner;\n        return true;\n    }\n\n    // Initiate a change of 2nd admin to _adminToo\n    function changeAdminToo(address _adminToo)\n        public\n        onlyOwner\n        returns (bool)\n    {\n        emit ChangeAdminToo(_adminToo);\n        newAdminToo = _adminToo;\n        return true;\n    }\n\n    // Finalise change of 2nd admin to newAdminToo\n    function acceptAdminToo()\n        public\n        returns (bool)\n    {\n        require(msg.sender == newAdminToo);\n        emit ChangedAdminToo(adminToo, msg.sender);\n        adminToo = newAdminToo;\n        delete newAdminToo;\n        return true;\n    }\n\n\n\n    // Owner can salvage ERC20 tokens that may have been sent to the account\n    function transferExternalToken(address _kAddr, address _to, uint _amount)\n        public\n        onlyOwner\n        preventReentry\n        returns (bool)\n    {\n        require(ERC20Token(_kAddr).transfer(_to, _amount));\n        return true;\n    }\n\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"newAdminToo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_TOKENS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminToo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_kAddr\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferExternalToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN_TOO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferToMany\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"decreaseSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_adminToo\",\"type\":\"address\"}],\"name\":\"changeAdminToo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptAdminToo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"DecreaseSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"IncreaseSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwnerTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangedAdminToo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeAdminToo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5073262f01741f2b6e6fda97bce85a6756a89c099e43600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073262f01741f2b6e6fda97bce85a6756a89c099e43600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100e3600860ff16600a0a600061015664010000000002611b4d179091906401000000009004565b60018190555060015460026000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610184565b600081830290506000831480610176575081838281151561017357fe5b04145b151561017e57fe5b92915050565b611ba780620001946000396000f300608060405260043610610148576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062bece851461014a57806306fdde03146101a1578063095ea7b3146102315780630b7abf77146102965780630c08e549146102c1578063117803e31461031857806318160ddd1461036f57806323b872dd1461039a5780632fbd24321461041f578063313ce567146104a457806339bb3290146104d557806370a082311461052c578063771282f61461058357806379ba5097146105ae5780637c33ebfd146105dd5780638da5cb5b1461069e57806395d89b41146106f557806398e52f9a14610785578063a6f9dae1146107b2578063a9059cbb1461080d578063b619513414610872578063b921e163146108cd578063c77bd8cc146108fa578063d4ee1d9014610929578063dd62ed3e14610980575b005b34801561015657600080fd5b5061015f6109f7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ad57600080fd5b506101b6610a1d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f65780820151818401526020810190506101db565b50505050905090810190601f1680156102235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023d57600080fd5b5061027c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a56565b604051808215151515815260200191505060405180910390f35b3480156102a257600080fd5b506102ab610b48565b6040518082815260200191505060405180910390f35b3480156102cd57600080fd5b506102d6610b4d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032457600080fd5b5061032d610b73565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561037b57600080fd5b50610384610b8b565b6040518082815260200191505060405180910390f35b3480156103a657600080fd5b50610405600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b91565b604051808215151515815260200191505060405180910390f35b34801561042b57600080fd5b5061048a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d41565b604051808215151515815260200191505060405180910390f35b3480156104b057600080fd5b506104b9610ed9565b604051808260ff1660ff16815260200191505060405180910390f35b3480156104e157600080fd5b506104ea610ede565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053857600080fd5b5061056d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ef6565b6040518082815260200191505060405180910390f35b34801561058f57600080fd5b50610598610f3f565b6040518082815260200191505060405180910390f35b3480156105ba57600080fd5b506105c3610f49565b604051808215151515815260200191505060405180910390f35b3480156105e957600080fd5b5061068460048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506110b2565b604051808215151515815260200191505060405180910390f35b3480156106aa57600080fd5b506106b3611146565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561070157600080fd5b5061070a61116c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561074a57808201518184015260208101905061072f565b50505050905090810190601f1680156107775780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561079157600080fd5b506107b0600480360381019080803590602001909291905050506111a5565b005b3480156107be57600080fd5b506107f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611339565b604051808215151515815260200191505060405180910390f35b34801561081957600080fd5b50610858600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611424565b604051808215151515815260200191505060405180910390f35b34801561087e57600080fd5b506108b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611439565b604051808215151515815260200191505060405180910390f35b3480156108d957600080fd5b506108f860048036038101908080359060200190929190505050611524565b005b34801561090657600080fd5b5061090f6116d4565b604051808215151515815260200191505060405180910390f35b34801561093557600080fd5b5061093e61183d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561098c57600080fd5b506109e1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611863565b6040518082815260200191505060405180910390f35b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600a81526020017f5472756c6c696f6e2d650000000000000000000000000000000000000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73262f01741f2b6e6fda97bce85a6756a89c099e4381565b60015481565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610c1e57600080fd5b610cad82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118ea90919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d38848484611903565b90509392505050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d9f57600080fd5b6000809054906101000a900460ff16151515610dba57600080fd5b60016000806101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e7757600080fd5b505af1158015610e8b573d6000803e3d6000fd5b505050506040513d6020811015610ea157600080fd5b81019080805190602001909291905050501515610ebd57600080fd5b600190506000806101000a81549060ff02191690559392505050565b600881565b73262f01741f2b6e6fda97bce85a6756a89c099e4381565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600154905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fa757600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f2748503f8f31d8071821d1d5144384ba6a465036cda17fa1629a8a2509ccee0e60405160405180910390a3600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001905090565b60008060008060009054906101000a900460ff161515156110d257600080fd5b835185511415156110e257600080fd5b84519150600090505b8181101561113a5761112c33868381518110151561110557fe5b90602001906020020151868481518110151561111d57fe5b90602001906020020151611903565b5080806001019150506110eb565b60019250505092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600581526020017f5472752d6500000000000000000000000000000000000000000000000000000081525081565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561120357600080fd5b60008211151561121257600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061128982600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118ea90919063ffffffff16565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112e1826001546118ea90919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167f035c8e8d4dbd495f11446c8523418c9b77cff01b8b6c7090c57d62014bbc3863836040518082815260200191505060405180910390a25050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561139757600080fd5b8173ffffffffffffffffffffffffffffffffffffffff167fbc48fdaddfcfb54d36a0ac4d7e52f46cdf854784b9c0978d385a35e8383262d460405160405180910390a281600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000611431338484611903565b905092915050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561149757600080fd5b8173ffffffffffffffffffffffffffffffffffffffff167fdda7358aeab74af29f6fd87456759acfadfec9f215b80cfb12f46efb82a0e22f60405160405180910390a281600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561158057600080fd5b60008111151561158f57600080fd5b6115a48160015461193790919063ffffffff16565b60018190555061161e8160026000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461193790919063ffffffff16565b60026000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f430080bcaaf4832a6fedf62b6ce7849b50c273246fdc69a13ce54e9772008f1c826040518082815260200191505060405180910390a250565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561173257600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fd03d2a9fe0624a98019e2bd32f4e394ac505174e212b2ead935a29bc83e8e9e960405160405180910390a3600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600081830390508281111515156118fd57fe5b92915050565b60008060009054906101000a900460ff1615151561192057600080fd5b61192b848484611950565b50600190509392505050565b6000818301905082811015151561194a57fe5b92915050565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156119a057600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36000821415611a175760019050611b46565b611a6982600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118ea90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611afe82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461193790919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600190505b9392505050565b600081830290506000831480611b6d5750818382811515611b6a57fe5b04145b1515611b7557fe5b929150505600a165627a7a723058203197c69f51e35e3a23d71b17c17f26746f69d11adba142365c2ed04b0086fdcc0029"
}