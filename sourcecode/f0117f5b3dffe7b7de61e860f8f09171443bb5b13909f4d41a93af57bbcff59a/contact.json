{
  "address": "0xac13cc399515688fc0c45da6e293cbbe5f297549",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "NetkillerToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-09\n*/\n\npragma solidity ^0.4.25;\n\n/******************************************/\n/*     Netkiller Standard safe token      */\n/******************************************/\n/* Author netkiller <[emailÂ protected]>   */\n/* Home http://www.netkiller.cn           */\n/* Version 2018-09-30                     */\n/******************************************/\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, reverts on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b);\n\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b > 0); // Solidity only automatically asserts when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n  * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n  * @dev Adds two numbers, reverts on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a);\n\n    return c;\n  }\n\n  /**\n  * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\n  * reverts when dividing by zero.\n  */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0);\n    return a % b;\n  }\n}\n\ncontract Ownable {\n    \n    address public owner;\n    \n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    \n    constructor() public {\n        owner = msg.sender;\n    }\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n}\n\ncontract NetkillerToken is Ownable{\n    \n    using SafeMath for uint256;\n    \n    string public name;\n    string public symbol;\n    uint public decimals;\n    uint256 public totalSupply;\n    \n    // This creates an array with all balances\n    mapping (address => uint256) internal balances;\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n    // This generates a public event on the blockchain that will notify clients\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    constructor(\n        uint256 initialSupply,\n        string tokenName,\n        string tokenSymbol,\n        uint decimalUnits\n    ) public {\n        owner = msg.sender;\n        name = tokenName;                                   // Set the name for display purposes\n        symbol = tokenSymbol; \n        decimals = decimalUnits;\n        totalSupply = initialSupply * 10 ** uint256(decimals);  // Update total supply with the decimal amount\n        balances[msg.sender] = totalSupply;                // Give the creator all initial token\n    }\n\n    function balanceOf(address _address) view public returns (uint256 balance) {\n        return balances[_address];\n    }\n    \n    /* Internal transfer, only can be called by this contract */\n    function _transfer(address _from, address _to, uint256 _value) internal {\n        require (_to != address(0));                        // Prevent transfer to 0x0 address. Use burn() instead\n        require (balances[_from] >= _value);                // Check if the sender has enough\n        require (balances[_to] + _value > balances[_to]);   // Check for overflows\n        balances[_from] = balances[_from].sub(_value);      // Subtract from the sender\n        balances[_to] = balances[_to].add(_value);          // Add the same to the recipient\n        emit Transfer(_from, _to, _value);\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);     // Check allowance\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    function allowance(address _owner, address _spender) view public returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    function airdrop(address[] _to, uint256 _value) onlyOwner public returns (bool success) {\n        \n        require(_value > 0 && balanceOf(msg.sender) >= _value.mul(_to.length));\n        \n        for (uint i=0; i<_to.length; i++) {\n            _transfer(msg.sender, _to[i], _value);\n        }\n        return true;\n    }\n    \n    function batchTransfer(address[] _to, uint256[] _value) onlyOwner public returns (bool success) {\n        require(_to.length == _value.length);\n\n        uint256 amount = 0;\n        for(uint n=0;n<_value.length;n++){\n            amount = amount.add(_value[n]);\n        }\n        \n        require(amount > 0 && balanceOf(msg.sender) >= amount);\n        \n        for (uint i=0; i<_to.length; i++) {\n            transfer(_to[i], _value[i]);\n        }\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"airdrop\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50604051610b3e380380610b3e83398101604090815281516020808401519284015160608501516000805433600160a060020a03199182168117909116179055938501805193959094910192909161006d916001918601906100ab565b5081516100819060029060208501906100ab565b506003819055600a0a92909202600481905533600090815260056020526040902055506101469050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100ec57805160ff1916838001178555610119565b82800160010185558215610119579182015b828111156101195782518255916020019190600101906100fe565b50610125929150610129565b5090565b61014391905b80821115610125576000815560010161012f565b90565b6109e9806101556000396000f3006080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100c9578063095ea7b31461015357806318160ddd1461018b57806323b872dd146101b2578063313ce567146101dc57806370a08231146101f157806388d695b2146102125780638da5cb5b146102a057806395d89b41146102d1578063a9059cbb146102e6578063c204642c1461030a578063dd62ed3e14610361578063f2fde38b14610388575b600080fd5b3480156100d557600080fd5b506100de6103ab565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610118578181015183820152602001610100565b50505050905090810190601f1680156101455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015f57600080fd5b50610177600160a060020a0360043516602435610438565b604080519115158252519081900360200190f35b34801561019757600080fd5b506101a061049e565b60408051918252519081900360200190f35b3480156101be57600080fd5b50610177600160a060020a03600435811690602435166044356104a4565b3480156101e857600080fd5b506101a0610566565b3480156101fd57600080fd5b506101a0600160a060020a036004351661056c565b34801561021e57600080fd5b506040805160206004803580820135838102808601850190965280855261017795369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506105879650505050505050565b3480156102ac57600080fd5b506102b5610677565b60408051600160a060020a039092168252519081900360200190f35b3480156102dd57600080fd5b506100de610686565b3480156102f257600080fd5b50610177600160a060020a03600435166024356106de565b34801561031657600080fd5b50604080516020600480358082013583810280860185019096528085526101779536959394602494938501929182918501908490808284375094975050933594506106f49350505050565b34801561036d57600080fd5b506101a0600160a060020a0360043581169060243516610786565b34801561039457600080fd5b506103a9600160a060020a03600435166107b1565b005b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104305780601f1061040557610100808354040283529160200191610430565b820191906000526020600020905b81548152906001019060200180831161041357829003601f168201915b505050505081565b336000818152600660209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60045481565b600160a060020a0383166000908152600560205260408120548211156104c957600080fd5b600160a060020a03841660009081526006602090815260408083203384529091529020548211156104f957600080fd5b600160a060020a038416600090815260066020908152604080832033845290915290205461052d908363ffffffff61084516565b600160a060020a038516600090815260066020908152604080832033845290915290205561055c84848461085c565b5060019392505050565b60035481565b600160a060020a031660009081526005602052604090205490565b60008054819081908190600160a060020a031633146105a557600080fd5b84518651146105b357600080fd5b60009250600091505b84518210156105fa576105ed85838151811015156105d657fe5b60209081029091010151849063ffffffff61097616565b92506001909101906105bc565b60008311801561061257508261060f3361056c565b10155b151561061d57600080fd5b5060005b855181101561066b57610662868281518110151561063b57fe5b90602001906020020151868381518110151561065357fe5b906020019060200201516106de565b50600101610621565b50600195945050505050565b600054600160a060020a031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104305780601f1061040557610100808354040283529160200191610430565b60006106eb33848461085c565b50600192915050565b600080548190600160a060020a0316331461070e57600080fd5b6000831180156107385750835161072c90849063ffffffff61098f16565b6107353361056c565b10155b151561074357600080fd5b5060005b835181101561077a5761077233858381518110151561076257fe5b906020019060200201518561085c565b600101610747565b600191505b5092915050565b600160a060020a03918216600090815260066020908152604080832093909416825291909152205490565b600054600160a060020a031633146107c857600080fd5b600160a060020a03811615156107dd57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000808383111561085557600080fd5b5050900390565b600160a060020a038216151561087157600080fd5b600160a060020a03831660009081526005602052604090205481111561089657600080fd5b600160a060020a038216600090815260056020526040902054818101116108bc57600080fd5b600160a060020a0383166000908152600560205260409020546108e5908263ffffffff61084516565b600160a060020a03808516600090815260056020526040808220939093559084168152205461091a908263ffffffff61097616565b600160a060020a0380841660008181526005602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561098857600080fd5b9392505050565b6000808315156109a2576000915061077f565b508282028284828115156109b257fe5b041461098857600080fd00a165627a7a7230582017a591805ba385850dd303bf9f72fb409c1b692d4c665efd5f62c55bc51a36600029000000000000000000000000000000000000000000000000000000174876e800000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000008504520436861696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045045432400000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000174876e800000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000008504520436861696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045045432400000000000000000000000000000000000000000000000000000000"
}