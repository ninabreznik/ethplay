{
  "address": "0xc5c02655bbd508545b4e32ec88cef3aa5e741d87",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "AngeniumToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-02\n*/\n\npragma solidity 0.4.24;\n\n/**\n * @title SafeMath\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/math/SafeMath.sol\n */\n\nlibrary SafeMath {\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n\t\tif (a == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tc = a * b;\n\t\tassert(c / a == b);\n\t\treturn c;\n\t}\n\t\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\treturn a / b;\n\t}\n\t\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tassert(b <= a);\n\t\treturn a - b;\n\t}\n\t\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n\t\tc = a + b;\n\t\tassert(c >= a);\n\t\treturn c;\n\t}\n}\n\n/**\n * @title Ownable\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol */\ncontract Ownable {\n\taddress public owner;\n\t\n\tconstructor() public {\n\t\towner = msg.sender;\n\t}\n\t\n\tmodifier onlyOwner() {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n}\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism. */\ncontract Pausable is Ownable {\n\tevent Pause();\n\tevent Unpause();\n\t\n\tbool public paused = false;\n\t\n\tmodifier whenNotPaused() {\n\t\trequire(!paused);\n\t\t_;\n\t}\n\t\n\tmodifier whenPaused() {\n\t\trequire(paused);\n\t\t_;\n\t}\n\t\n\tfunction pause() onlyOwner whenNotPaused public {\n\t\tpaused = true;\n\t\temit Pause();\n\t}\n\t\n\tfunction unpause() onlyOwner whenPaused public {\n\t\tpaused = false;\n\t\temit Unpause();\n\t}\n}\n/**\n * @title ERC20Basic\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20Basic.sol\n */\ncontract ERC20Basic {\n\tfunction totalSupply() public view returns (uint256);\n\tfunction balanceOf(address who) public view returns (uint256);\n\tfunction transfer(address to, uint256 value) public returns (bool);\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\n}\n/**\n * @title Basic token\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/BasicToken.sol\n */\ncontract BasicToken is ERC20Basic {\n\tusing SafeMath for uint256;\n\t\n\tmapping(address => uint256) balances;\n\t\n\tuint256 totalSupply_;\n\t\n\tfunction totalSupply() public view returns (uint256) {\n\t\treturn totalSupply_;\n\t}\n\t\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {\n\t\trequire(_to != address(0));\n\t\trequire(_value <= balances[msg.sender]);\n\t\t\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\n\t\tbalances[_to] = balances[_to].add(_value);\n\t\temit Transfer(msg.sender, _to, _value);\n\t\treturn true;\n\t}\n\t\n\tfunction balanceOf(address _owner) public view returns (uint256) {\n\t\treturn balances[_owner];\n\t}\n}\n/**\n * @title ERC20 interface\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol\n */\ncontract ERC20 is ERC20Basic {\n\tfunction allowance(address owner, address spender) public view returns (uint256);\n\tfunction transferFrom(address from, address to, uint256 value) public returns (bool);\n\tfunction approve(address spender, uint256 value) public returns (bool);\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Standard ERC20 token\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/StandardToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\t\n\tmapping (address => mapping (address => uint256)) internal allowed;\n\t\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n\t\trequire(_to != address(0));\n\t\trequire(_value <= balances[_from]);\n\t\trequire(_value <= allowed[_from][msg.sender]);\n\t\t\n\t\tbalances[_from] = balances[_from].sub(_value);\n\t\tbalances[_to] = balances[_to].add(_value);\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\t\temit Transfer(_from, _to, _value);\n\t\treturn true;\n\t}\n\t\n\tfunction approve(address _spender, uint256 _value) public returns (bool) {\n\t\tallowed[msg.sender][_spender] = _value;\n\t\temit Approval(msg.sender, _spender, _value);\n\t\treturn true;\n\t}\n\t\n\tfunction allowance(address _owner, address _spender) public view returns (uint256) {\n\t\treturn allowed[_owner][_spender];\n\t}\n\t\n\tfunction increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\t\treturn true;\n\t}\n\t\n\tfunction decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n\t\tuint oldValue = allowed[msg.sender][_spender];\n\t\tif (_subtractedValue > oldValue) {\n\t\t\tallowed[msg.sender][_spender] = 0;\n\t\t} else {\n\t\t\tallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n\t\t}\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\t\treturn true;\n\t}\n}\n\n/**\n * @title Pausable token\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/PausableToken.sol\n **/\ncontract PausableToken is StandardToken, Pausable {\n\t\n\tfunction transfer(\n\t\taddress _to,\n\t\tuint256 _value\n\t) public  whenNotPaused returns (bool)\n\t{\n\t\treturn super.transfer(_to, _value);\n\t}\n\t\n\tfunction transferFrom(\n\t\taddress _from,\n\t\taddress _to,\n\t\tuint256 _value\n\t) public whenNotPaused returns (bool)\n\t{\n\t\treturn super.transferFrom(_from, _to, _value);\n\t}\n\t\n\tfunction approve(\n\t\taddress _spender,\n\t\tuint256 _value\n\t) public whenNotPaused returns (bool)\n\t{\n\t\treturn super.approve(_spender, _value);\n\t}\n\t\n\tfunction increaseApproval(\n\t\taddress _spender,\n\t\tuint _addedValue\n\t) public whenNotPaused returns (bool success)\n\t{\n\t\treturn super.increaseApproval(_spender, _addedValue);\n\t}\n\t\n\tfunction decreaseApproval(\n\t\taddress _spender,\n\t\tuint _subtractedValue\n\t) public whenNotPaused returns (bool success)\n\t{\n\t\treturn super.decreaseApproval(_spender, _subtractedValue);\n\t}\n}\n\n/**\n * @title Burnable Token\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/BurnableToken.sol\n */\ncontract BurnableToken is BasicToken {\n\t\n\tevent Burn(address indexed burner, uint256 value);\n\t\n\tfunction burn(uint256 _value) public {\n\t\t_burn(msg.sender, _value);\n\t}\n\t\n\tfunction _burn(address _who, uint256 _value) internal {\n\t\trequire(_value <= balances[_who]);\n\t\t\n\t\tbalances[_who] = balances[_who].sub(_value);\n\t\ttotalSupply_ = totalSupply_.sub(_value);\n\t\temit Burn(_who, _value);\n\t\temit Transfer(_who, address(0), _value);\n\t}\n}\n/**\n * @title Mintable token\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/MintableToken.sol\n */\ncontract MintableToken is PausableToken {\n\tevent Mint(address indexed to, uint256 amount);\n\tevent MintFinished();\n\t\n\tbool public mintingFinished = false;\n\t\n\tmodifier canMint() {\n\t\trequire(!mintingFinished);\n\t\t_;\n\t}\n\t\n\tmodifier hasMintPermission() {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n\t\n\tfunction finishMinting() onlyOwner canMint public returns (bool) {\n\t\tmintingFinished = true;\n\t\temit MintFinished();\n\t\treturn true;\n\t}\n}\n\n/**\n* @title AngeniumToken\n*/\ncontract AngeniumToken is MintableToken, BurnableToken {\n\t\n\tusing SafeMath for uint256;\n\t\n\tstring  public name = \"Angenium Coin\";\n\tstring  public symbol = \"ANG\";\n\tuint256 constant public decimals = 18;\n\tuint256 constant dec = 10**decimals;\n\tuint256 public constant initialSupply = 138000000*dec; // 138,000,000 ANG\n\taddress public crowdsaleAddress;\n\t\n\tmodifier onlyICO() {\n\t\trequire(msg.sender == crowdsaleAddress);\n\t\t_;\n\t}\n\t\n\tconstructor() public {\n\t\tpause();\n\t}\n\t\n\tfunction startCirculation() internal returns(bool) {\n\t\tif (totalSupply_ <= initialSupply)\n\t\t\treturn false;\n\t\telse\n\t\t\tfinishMinting();\n\t\tunpause();\n\t}\n\t\n\tfunction setSaleAddress(address _saleaddress) public onlyOwner{\n\t\tcrowdsaleAddress = _saleaddress;\n\t}\n\t\n\tfunction mintFromICO(address _to, uint256 _amount) onlyICO canMint public returns (bool) {\n\t\trequire(balances[_to].add(_amount) != 0);\n\t\trequire(balances[_to].add(_amount) > balances[_to]);\n\t\ttotalSupply_ = totalSupply_.add(_amount);\n\t\trequire(!startCirculation());\n\t\trequire(totalSupply_ <= initialSupply);\n\t\tbalances[_to] = balances[_to].add(_amount);\n\t\temit Mint(_to, _amount);\n\t\temit Transfer(address(0), _to, _amount);\n\t\treturn true;\n\t}\n}",
  "bytecode": "6003805460a060020a61ffff021916905560c0604052600d60808190527f416e67656e69756d20436f696e0000000000000000000000000000000000000060a090815262000051916004919062000165565b506040805180820190915260038082527f414e4700000000000000000000000000000000000000000000000000000000006020909201918252620000989160059162000165565b50348015620000a657600080fd5b5060038054600160a060020a03191633179055620000cc640100000000620000d2810204565b6200020a565b600354600160a060020a03163314620000ea57600080fd5b60035474010000000000000000000000000000000000000000900460ff16156200011357600080fd5b6003805460a060020a60ff021916740100000000000000000000000000000000000000001790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001a857805160ff1916838001178555620001d8565b82800160010185558215620001d8579182015b82811115620001d8578251825591602001919060010190620001bb565b50620001e6929150620001ea565b5090565b6200020791905b80821115620001e65760008155600101620001f1565b90565b610fdf806200021a6000396000f3006080604052600436106101275763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461012c57806306fdde0314610155578063095ea7b3146101df57806318160ddd1461020357806323b872dd1461022a578063313ce5671461025457806331d2f89114610269578063378dc3dc1461029a5780633aa0396a146102af5780633f4ba83a146102d357806342966c68146102ea5780635c975abb14610302578063661884631461031757806370a082311461033b5780637d64bcb41461035c5780638456cb59146103715780638da5cb5b1461038657806395d89b411461039b578063a9059cbb146103b0578063d73dd623146103d4578063dd62ed3e146103f8578063f8fb491f1461041f575b600080fd5b34801561013857600080fd5b50610141610440565b604080519115158252519081900360200190f35b34801561016157600080fd5b5061016a610462565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a457818101518382015260200161018c565b50505050905090810190601f1680156101d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101eb57600080fd5b50610141600160a060020a03600435166024356104f0565b34801561020f57600080fd5b5061021861051b565b60408051918252519081900360200190f35b34801561023657600080fd5b50610141600160a060020a0360043581169060243516604435610522565b34801561026057600080fd5b5061021861054f565b34801561027557600080fd5b5061027e610554565b60408051600160a060020a039092168252519081900360200190f35b3480156102a657600080fd5b50610218610563565b3480156102bb57600080fd5b50610141600160a060020a0360043516602435610572565b3480156102df57600080fd5b506102e861070f565b005b3480156102f657600080fd5b506102e8600435610787565b34801561030e57600080fd5b50610141610794565b34801561032357600080fd5b50610141600160a060020a03600435166024356107a4565b34801561034757600080fd5b50610218600160a060020a03600435166107c8565b34801561036857600080fd5b506101416107e3565b34801561037d57600080fd5b506102e861088c565b34801561039257600080fd5b5061027e610909565b3480156103a757600080fd5b5061016a610918565b3480156103bc57600080fd5b50610141600160a060020a0360043516602435610973565b3480156103e057600080fd5b50610141600160a060020a0360043516602435610997565b34801561040457600080fd5b50610218600160a060020a03600435811690602435166109bb565b34801561042b57600080fd5b506102e8600160a060020a03600435166109e6565b6003547501000000000000000000000000000000000000000000900460ff1681565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104e85780601f106104bd576101008083540402835291602001916104e8565b820191906000526020600020905b8154815290600101906020018083116104cb57829003601f168201915b505050505081565b60035460009060a060020a900460ff161561050a57600080fd5b6105148383610a2c565b9392505050565b6001545b90565b60035460009060a060020a900460ff161561053c57600080fd5b610547848484610a92565b949350505050565b601281565b600654600160a060020a031681565b6a7226a2fd7a7818ca00000081565b600654600090600160a060020a0316331461058c57600080fd5b6003547501000000000000000000000000000000000000000000900460ff16156105b557600080fd5b600160a060020a0383166000908152602081905260409020546105de908363ffffffff610bf716565b15156105e957600080fd5b600160a060020a038316600090815260208190526040902054610612818463ffffffff610bf716565b1161061c57600080fd5b60015461062f908363ffffffff610bf716565b60015561063a610c0a565b1561064457600080fd5b6001546a7226a2fd7a7818ca000000101561065e57600080fd5b600160a060020a038316600090815260208190526040902054610687908363ffffffff610bf716565b600160a060020a03841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a03851691600091600080516020610f948339815191529181900360200190a350600192915050565b600354600160a060020a0316331461072657600080fd5b60035460a060020a900460ff16151561073e57600080fd5b6003805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b6107913382610c3a565b50565b60035460a060020a900460ff1681565b60035460009060a060020a900460ff16156107be57600080fd5b6105148383610d29565b600160a060020a031660009081526020819052604090205490565b600354600090600160a060020a031633146107fd57600080fd5b6003547501000000000000000000000000000000000000000000900460ff161561082657600080fd5b6003805475ff000000000000000000000000000000000000000000191675010000000000000000000000000000000000000000001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600354600160a060020a031633146108a357600080fd5b60035460a060020a900460ff16156108ba57600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600354600160a060020a031681565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104e85780601f106104bd576101008083540402835291602001916104e8565b60035460009060a060020a900460ff161561098d57600080fd5b6105148383610e19565b60035460009060a060020a900460ff16156109b157600080fd5b6105148383610ee8565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a031633146109fd57600080fd5b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6000600160a060020a0383161515610aa957600080fd5b600160a060020a038416600090815260208190526040902054821115610ace57600080fd5b600160a060020a0384166000908152600260209081526040808320338452909152902054821115610afe57600080fd5b600160a060020a038416600090815260208190526040902054610b27908363ffffffff610f8116565b600160a060020a038086166000908152602081905260408082209390935590851681522054610b5c908363ffffffff610bf716565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610b9e908363ffffffff610f8116565b600160a060020a0380861660008181526002602090815260408083203384528252918290209490945580518681529051928716939192600080516020610f94833981519152929181900390910190a35060019392505050565b81810182811015610c0457fe5b92915050565b6001546000906a7226a2fd7a7818ca00000010610c295750600061051f565b610c316107e3565b5061051f61070f565b600160a060020a038216600090815260208190526040902054811115610c5f57600080fd5b600160a060020a038216600090815260208190526040902054610c88908263ffffffff610f8116565b600160a060020a038316600090815260208190526040902055600154610cb4908263ffffffff610f8116565b600155604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a03851691600080516020610f948339815191529181900360200190a35050565b336000908152600260209081526040808320600160a060020a038616845290915281205480831115610d7e57336000908152600260209081526040808320600160a060020a0388168452909152812055610db3565b610d8e818463ffffffff610f8116565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a0383161515610e3057600080fd5b33600090815260208190526040902054821115610e4c57600080fd5b33600090815260208190526040902054610e6c908363ffffffff610f8116565b3360009081526020819052604080822092909255600160a060020a03851681522054610e9e908363ffffffff610bf716565b600160a060020a03841660008181526020818152604091829020939093558051858152905191923392600080516020610f948339815191529281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610f1c908363ffffffff610bf716565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600082821115610f8d57fe5b509003905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820de270a4f0dc1c4b0c6af937166d5ac8a9b63ea1a10dd3484553b865e3efa119c0029"
}