{
  "address": "0x83d944263b422bc51d6bba5028cdc8eb95320e7f",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "FGYCrowdsale",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-21\n*/\n\npragma solidity ^0.4.25;\n\n\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    function max64(uint64 a, uint64 b) internal pure returns (uint64) {\n        return a >= b ? a : b;\n    }\n\n    function min64(uint64 a, uint64 b) internal pure returns (uint64) {\n        return a < b ? a : b;\n    }\n\n    function max256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n\n\ncontract ERC20Basic {\n    uint256 public totalSupply;\n\n    bool public transfersEnabled;\n\n    function balanceOf(address who) public view returns (uint256);\n\n    function transfer(address to, uint256 value) public returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\ncontract ERC20 {\n    uint256 public totalSupply;\n\n    bool public transfersEnabled;\n\n    function balanceOf(address _owner) public constant returns (uint256 balance);\n\n    function transfer(address _to, uint256 _value) public returns (bool success);\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n\n    function approve(address _spender, uint256 _value) public returns (bool success);\n\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) balances;\n\n    /**\n    * Protection against short address attack\n    */\n    modifier onlyPayloadSize(uint numwords) {\n        assert(msg.data.length == numwords * 32 + 4);\n        _;\n    }\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public onlyPayloadSize(2) returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n        require(transfersEnabled);\n\n        // SafeMath.sub will throw if there is not enough balance.\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n}\n\n\ncontract StandardToken is ERC20, BasicToken {\n\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n    /**\n     * @dev Transfer tokens from one address to another\n     * @param _from address The address which you want to send tokens from\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public onlyPayloadSize(3) returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n        require(transfersEnabled);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     *\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param _spender The address which will spend the funds.\n     * @param _value The amount of tokens to be spent.\n     */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param _owner address The address which owns the funds.\n     * @param _spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address _owner, address _spender) public onlyPayloadSize(2) constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n     * approve should be called when allowed[_spender] == 0. To increment\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     */\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool success) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool success) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        }\n        else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n}\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public owner;\n\n    event OwnerChanged(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param _newOwner The address to transfer ownership to.\n     */\n    function changeOwner(address _newOwner) onlyOwner internal {\n        require(_newOwner != address(0));\n        emit OwnerChanged(owner, _newOwner);\n        owner = _newOwner;\n    }\n\n}\n\n\n/**\n * @title Mintable token\n * @dev Simple ERC20 Token example, with mintable token creation\n * @dev Issue: * https://github.com/OpenZeppelin/zeppelin-solidity/issues/120\n * Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\n */\n\ncontract MintableToken is StandardToken, Ownable {\n    string public constant name = \"Future Energy Token\";\n    string public constant symbol = \"FGY\";\n    uint8 public constant decimals = 18;\n    mapping(uint8 => uint8) public approveOwner;\n\n    event Mint(address indexed to, uint256 amount);\n    event MintFinished();\n\n    bool public mintingFinished;\n\n    modifier canMint() {\n        require(!mintingFinished);\n        _;\n    }\n\n    /**\n     * @dev Function to mint tokens\n     * @param _to The address that will receive the minted tokens.\n     * @param _amount The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address _to, uint256 _amount, address _owner) canMint internal returns (bool) {\n        balances[_to] = balances[_to].add(_amount);\n        balances[_owner] = balances[_owner].sub(_amount);\n        emit Mint(_to, _amount);\n        emit Transfer(_owner, _to, _amount);\n        return true;\n    }\n\n    /**\n     * @dev Function to stop minting new tokens.\n     * @return True if the operation was successful.\n     */\n    function finishMinting() onlyOwner canMint internal returns (bool) {\n        mintingFinished = true;\n        emit MintFinished();\n        return true;\n    }\n\n    /**\n     * Peterson's Law Protection\n     * Claim tokens\n     */\n    function claimTokens(address _token) public onlyOwner {\n        if (_token == 0x0) {\n            owner.transfer(address(this).balance);\n            return;\n        }\n        MintableToken token = MintableToken(_token);\n        uint256 balance = token.balanceOf(this);\n        token.transfer(owner, balance);\n        emit Transfer(_token, owner, balance);\n    }\n}\n\n\n/**\n * @title Crowdsale\n * @dev Crowdsale is a base contract for managing a token crowdsale.\n * Crowdsales have a start and end timestamps, where investors can make\n * token purchases. Funds collected are forwarded to a wallet\n * as they arrive.\n */\ncontract Crowdsale is Ownable {\n    using SafeMath for uint256;\n    // address where funds are collected\n    address public wallet;\n\n    // amount of raised money in wei\n    uint256 public weiRaised;\n    uint256 public tokenAllocated;\n\n    constructor(address _wallet) public {\n        require(_wallet != address(0));\n        wallet = _wallet;\n    }\n}\n\n\ncontract FGYCrowdsale is Ownable, Crowdsale, MintableToken {\n    using SafeMath for uint256;\n\n    /**\n    * Price: 1 ETH = 206 token\n    * https://www.coingecko.com/en/coins/ethereum\n    * October, 20, 2018\n    */\n    uint256 public rate  = 206;\n\n    mapping (address => uint256) public deposited;\n    mapping (address => bool) public whitelist;\n    mapping (address => bool) internal isRefferer;\n\n\n    uint256 public constant INITIAL_SUPPLY = 35 * 10**6 * (10 ** uint256(decimals));\n\n    uint256 startTimePreIco = 1539993600; // Sat, 20 Oct 2018 00:00:00 GMT\n    uint256 endTimePreIco =   1546300799; // Mon, 31 Dec 2018 23:59:59 GMT\n\n    uint256 startTimeIco = 1546300800; // Tue, 01 Jan 2019 00:00:00 GMT\n    uint256 endTimeIco   = 1554076799; // Sun, 31 Mar 2019 23:59:59 GMT\n\n    uint256 public countInvestor;\n\n    event TokenPurchase(address indexed beneficiary, uint256 value, uint256 amount);\n    event TokenLimitReached(address indexed sender, uint256 tokenRaised, uint256 purchasedToken);\n    event CurrentPeriod(uint period);\n    event ChangeTime(address indexed owner, uint256 newValue, uint256 oldValue);\n    event ChangeAddressWallet(address indexed owner, address indexed newAddress, address indexed oldAddress);\n    event ChangeRate(address indexed owner, uint256 newValue, uint256 oldValue);\n    event Burn(address indexed burner, uint256 value);\n    event Finalized();\n\n    constructor(address _owner) public\n    Crowdsale(_owner)\n    {\n        require(_owner != address(0));\n        owner = _owner;\n        //owner = msg.sender; // for test's\n        transfersEnabled = true;\n        mintingFinished = false;\n        totalSupply = INITIAL_SUPPLY;\n        bool resultMintForOwner = mintForFund(owner);\n        require(resultMintForOwner);\n    }\n\n    // fallback function can be used to buy tokens\n    function() payable public {\n        buyTokens(msg.sender);\n    }\n\n    function buyTokens(address _investor) public payable returns (uint256){\n        require(_investor != address(0));\n        uint256 weiAmount = msg.value;\n        uint256 tokens = validPurchaseTokens(weiAmount);\n        if (tokens == 0) {revert();}\n        weiRaised = weiRaised.add(weiAmount);\n        tokenAllocated = tokenAllocated.add(tokens);\n        mint(_investor, tokens, owner);\n\n        emit TokenPurchase(_investor, weiAmount, tokens);\n        if (deposited[_investor] == 0) {\n            countInvestor = countInvestor.add(1);\n        }\n        deposit(_investor);\n        wallet.transfer(weiAmount);\n        return tokens;\n    }\n\n    function getTotalAmountOfTokens(uint256 _weiAmount) internal returns (uint256) {\n        uint256 currentDate = now;\n        //currentDate = 1540425600; // (25 Oct 2018) // for test's\n        uint currentPeriod = 0;\n        currentPeriod = getPeriod(currentDate);\n        uint256 amountOfTokens = 0;\n        if(currentPeriod > 0){\n            if(currentPeriod == 1){\n                amountOfTokens += _weiAmount.mul(rate).mul(130).div(100);\n            }\n            if(currentPeriod >= 2){\n                amountOfTokens += _weiAmount.mul(rate);\n            }\n        }\n        emit CurrentPeriod(currentPeriod);\n        return amountOfTokens;\n    }\n\n    function getPeriod(uint256 _currentDate) public view returns (uint) {\n        if(_currentDate < startTimePreIco){\n            return 0;\n        }\n        if( startTimePreIco <= _currentDate && _currentDate <= endTimePreIco){\n            return 1;\n        }\n        if( startTimeIco <= _currentDate && _currentDate <= endTimeIco){\n            return 2;\n        }\n        return 0;\n    }\n\n    function deposit(address investor) internal {\n        deposited[investor] = deposited[investor].add(msg.value);\n    }\n\n    function mintForFund(address _walletOwner) internal returns (bool result) {\n        result = false;\n        require(_walletOwner != address(0));\n        balances[_walletOwner] = balances[_walletOwner].add(INITIAL_SUPPLY);\n        result = true;\n    }\n\n    function getDeposited(address _investor) external view returns (uint256){\n        return deposited[_investor];\n    }\n\n    function validPurchaseTokens(uint256 _weiAmount) public returns (uint256) {\n        uint256 addTokens = getTotalAmountOfTokens(_weiAmount);\n        if (tokenAllocated.add(addTokens) > balances[owner]) {\n            emit TokenLimitReached(msg.sender, tokenAllocated, addTokens);\n            return 0;\n        }\n        return addTokens;\n    }\n\n    /**\n     * @dev owner burn Token.\n     * @param _value amount of burnt tokens\n     */\n    function ownerBurnToken(uint _value) public onlyOwner {\n        require(_value > 0);\n        require(_value <= balances[owner]);\n        require(_value <= totalSupply);\n\n        balances[owner] = balances[owner].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        emit Burn(msg.sender, _value);\n    }\n\n    /**\n     * @dev owner change time for startTimePreIco\n     * @param _value new time value\n     */\n    function setStartTimePreIco(uint256 _value) external onlyOwner {\n        require(_value > 0);\n        uint256 _oldValue = startTimePreIco;\n        startTimePreIco = _value;\n        emit ChangeTime(msg.sender, _value, _oldValue);\n    }\n\n\n    /**\n     * @dev owner change time for endTimePreIco\n     * @param _value new time value\n     */\n    function setEndTimePreIco(uint256 _value) external onlyOwner {\n        require(_value > 0);\n        uint256 _oldValue = endTimePreIco;\n        endTimePreIco = _value;\n        emit ChangeTime(msg.sender, _value, _oldValue);\n    }\n\n    /**\n     * @dev owner change time for startTimeIco\n     * @param _value new time value\n     */\n    function setStartTimeIco(uint256 _value) external onlyOwner {\n        require(_value > 0);\n        uint256 _oldValue = startTimeIco;\n        startTimeIco = _value;\n        emit ChangeTime(msg.sender, _value, _oldValue);\n    }\n\n    /**\n     * @dev owner change time for endTimeIco\n     * @param _value new time value\n     */\n    function setEndTimeIco(uint256 _value) external onlyOwner {\n        require(_value > 0);\n        uint256 _oldValue = endTimeIco;\n        endTimeIco = _value;\n        emit ChangeTime(msg.sender, _value, _oldValue);\n    }\n\n    /**\n     * @dev owner change address of wallet for collecting ETH\n     * @param _newWallet new address of wallet\n     */\n    function setWallet(address _newWallet) external onlyOwner {\n        require(_newWallet != address(0));\n        address _oldWallet = wallet;\n        wallet = _newWallet;\n        emit ChangeAddressWallet(msg.sender, _newWallet, _oldWallet);\n    }\n\n    /**\n     * @dev owner change price of tokens\n     * @param _newRate new price\n     */\n    function setRate(uint256 _newRate) external onlyOwner {\n        require(_newRate > 0);\n        uint256 _oldRate = rate;\n        rate = _newRate;\n        emit ChangeRate(msg.sender, _newRate, _oldRate);\n    }\n\n    /**\n     * @dev owner completes contract\n     */\n    function finalize() public onlyOwner returns (bool result) {\n        result = false;\n        transfersEnabled = false;\n        finishMinting();\n        emit Finalized();\n        result = true;\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setEndTimeIco\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setEndTimePreIco\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newRate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setStartTimePreIco\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"approveOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"getDeposited\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_currentDate\",\"type\":\"uint256\"}],\"name\":\"getPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setStartTimeIco\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ownerBurnToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposited\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countInvestor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_weiAmount\",\"type\":\"uint256\"}],\"name\":\"validPurchaseTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenRaised\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"purchasedToken\",\"type\":\"uint256\"}],\"name\":\"TokenLimitReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"CurrentPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"oldValue\",\"type\":\"uint256\"}],\"name\":\"ChangeTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"ChangeAddressWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"oldValue\",\"type\":\"uint256\"}],\"name\":\"ChangeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405260ce600c55635bca7000601055635c2aad7f601155635c2aad80601255635ca1547f6013553480156200003657600080fd5b50604051602080620018d98339810160405251600081600160a060020a03811615156200006257600080fd5b60078054600160a060020a031916600160a060020a03928316179055821615156200008c57600080fd5b60068054600160a060020a031916600160a060020a0384811691909117918290556003805460ff19908116600117909155600b805490911690556a1cf389cd46047d03000000600255620000ea911664010000000062000101810204565b9050801515620000f957600080fd5b505062000191565b6000600160a060020a03821615156200011957600080fd5b600160a060020a03821660009081526004602052604090205462000157906a1cf389cd46047d03000000640100000000620013fd6200017a82021704565b600160a060020a0390921660009081526004602052604090209190915550600190565b6000828201838110156200018a57fe5b9392505050565b61173880620001a16000396000f3006080604052600436106101c15763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b81146101cd57806306fdde03146101f6578063095ea7b314610280578063107e1a29146102a457806318160ddd146102be5780631b8e61c7146102e557806323b872dd146102fd5780632c4e722e146103275780632ff2e9dc1461033c578063313ce5671461035157806334fcf4371461037c5780633b3fa917146103945780634042b66f146103ac57806345d503b2146103c1578063466bb312146103dc5780634b2c0706146103fd5780634bb278f314610415578063521eb2731461042a57806364e593c01461045b578063661884631461047357806370a082311461049757806378f7aeee146104b85780638da5cb5b146104cd57806390762a8b146104e257806395d89b41146104fa5780639b19251a1461050f578063a9059cbb14610530578063bef97c8714610554578063cb13cddb14610569578063d1e2eb5e1461058a578063d73dd6231461059f578063dd62ed3e146105c3578063deaa59df146105ea578063df8de3e71461060b578063ec8ac4d81461062c578063fc38ce1914610640575b6101ca33610658565b50005b3480156101d957600080fd5b506101e2610796565b604080519115158252519081900360200190f35b34801561020257600080fd5b5061020b61079f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561024557818101518382015260200161022d565b50505050905090810190601f1680156102725780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028c57600080fd5b506101e2600160a060020a03600435166024356107d6565b3480156102b057600080fd5b506102bc60043561083c565b005b3480156102ca57600080fd5b506102d3610898565b60408051918252519081900360200190f35b3480156102f157600080fd5b506102bc60043561089e565b34801561030957600080fd5b506101e2600160a060020a03600435811690602435166044356108fa565b34801561033357600080fd5b506102d3610a7f565b34801561034857600080fd5b506102d3610a85565b34801561035d57600080fd5b50610366610a94565b6040805160ff9092168252519081900360200190f35b34801561038857600080fd5b506102bc600435610a99565b3480156103a057600080fd5b506102bc600435610b07565b3480156103b857600080fd5b506102d3610b63565b3480156103cd57600080fd5b5061036660ff60043516610b69565b3480156103e857600080fd5b506102d3600160a060020a0360043516610b7e565b34801561040957600080fd5b506102d3600435610b9d565b34801561042157600080fd5b506101e2610bfb565b34801561043657600080fd5b5061043f610c5a565b60408051600160a060020a039092168252519081900360200190f35b34801561046757600080fd5b506102bc600435610c69565b34801561047f57600080fd5b506101e2600160a060020a0360043516602435610cc5565b3480156104a357600080fd5b506102d3600160a060020a0360043516610db5565b3480156104c457600080fd5b506102d3610dd0565b3480156104d957600080fd5b5061043f610dd6565b3480156104ee57600080fd5b506102bc600435610de5565b34801561050657600080fd5b5061020b610ed4565b34801561051b57600080fd5b506101e2600160a060020a0360043516610f0b565b34801561053c57600080fd5b506101e2600160a060020a0360043516602435610f20565b34801561056057600080fd5b506101e261100f565b34801561057557600080fd5b506102d3600160a060020a0360043516611018565b34801561059657600080fd5b506102d361102a565b3480156105ab57600080fd5b506101e2600160a060020a0360043516602435611030565b3480156105cf57600080fd5b506102d3600160a060020a03600435811690602435166110c9565b3480156105f657600080fd5b506102bc600160a060020a0360043516611104565b34801561061757600080fd5b506102bc600160a060020a0360043516611194565b6102d3600160a060020a0360043516610658565b34801561064c57600080fd5b506102d3600435611368565b60008080600160a060020a038416151561067157600080fd5b34915061067d82611368565b905080151561068b57600080fd5b60085461069e908363ffffffff6113fd16565b6008556009546106b4908263ffffffff6113fd16565b6009556006546106d09085908390600160a060020a0316611413565b5060408051838152602081018390528151600160a060020a038716927fcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f928290030190a2600160a060020a0384166000908152600d6020526040902054151561074b5760145461074790600163ffffffff6113fd16565b6014555b6107548461151c565b600754604051600160a060020a039091169083156108fc029084906000818181858888f1935050505015801561078e573d6000803e3d6000fd5b509392505050565b600b5460ff1681565b60408051808201909152601381527f46757475726520456e6572677920546f6b656e00000000000000000000000000602082015281565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600654600090600160a060020a0316331461085657600080fd5b6000821161086357600080fd5b5060138054908290556040805183815260208101839052815133926000805160206116cd833981519152928290030190a25050565b60025481565b600654600090600160a060020a031633146108b857600080fd5b600082116108c557600080fd5b5060118054908290556040805183815260208101839052815133926000805160206116cd833981519152928290030190a25050565b600060033660641461090857fe5b600160a060020a038416151561091d57600080fd5b600160a060020a03851660009081526004602052604090205483111561094257600080fd5b600160a060020a038516600090815260056020908152604080832033845290915290205483111561097257600080fd5b60035460ff16151561098357600080fd5b600160a060020a0385166000908152600460205260409020546109ac908463ffffffff61156116565b600160a060020a0380871660009081526004602052604080822093909355908616815220546109e1908463ffffffff6113fd16565b600160a060020a038086166000908152600460209081526040808320949094559188168152600582528281203382529091522054610a25908463ffffffff61156116565b600160a060020a03808716600081815260056020908152604080832033845282529182902094909455805187815290519288169391926000805160206116ed833981519152929181900390910190a3506001949350505050565b600c5481565b6a1cf389cd46047d0300000081565b601281565b600654600090600160a060020a03163314610ab357600080fd5b60008211610ac057600080fd5b50600c8054908290556040805183815260208101839052815133927fe0745596cbd0c47ee258f65d49ccda5b6812de4997b868aebccfba913a526e9a928290030190a25050565b600654600090600160a060020a03163314610b2157600080fd5b60008211610b2e57600080fd5b5060108054908290556040805183815260208101839052815133926000805160206116cd833981519152928290030190a25050565b60085481565b600a6020526000908152604090205460ff1681565b600160a060020a0381166000908152600d60205260409020545b919050565b6000601054821015610bb157506000610b98565b8160105411158015610bc557506011548211155b15610bd257506001610b98565b8160125411158015610be657506013548211155b15610bf357506002610b98565b506000919050565b600654600090600160a060020a03163314610c1557600080fd5b506003805460ff191690556000610c2a611573565b506040517f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768190600090a150600190565b600754600160a060020a031681565b600654600090600160a060020a03163314610c8357600080fd5b60008211610c9057600080fd5b5060128054908290556040805183815260208101839052815133926000805160206116cd833981519152928290030190a25050565b336000908152600560209081526040808320600160a060020a038616845290915281205480831115610d1a57336000908152600560209081526040808320600160a060020a0388168452909152812055610d4f565b610d2a818463ffffffff61156116565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526004602052604090205490565b60095481565b600654600160a060020a031681565b600654600160a060020a03163314610dfc57600080fd5b60008111610e0957600080fd5b600654600160a060020a0316600090815260046020526040902054811115610e3057600080fd5b600254811115610e3f57600080fd5b600654600160a060020a0316600090815260046020526040902054610e6a908263ffffffff61156116565b600654600160a060020a0316600090815260046020526040902055600254610e98908263ffffffff61156116565b60025560408051828152905133917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a250565b60408051808201909152600381527f4647590000000000000000000000000000000000000000000000000000000000602082015281565b600e6020526000908152604090205460ff1681565b6000600236604414610f2e57fe5b600160a060020a0384161515610f4357600080fd5b33600090815260046020526040902054831115610f5f57600080fd5b60035460ff161515610f7057600080fd5b33600090815260046020526040902054610f90908463ffffffff61156116565b3360009081526004602052604080822092909255600160a060020a03861681522054610fc2908463ffffffff6113fd16565b600160a060020a0385166000818152600460209081526040918290209390935580518681529051919233926000805160206116ed8339815191529281900390910190a35060019392505050565b60035460ff1681565b600d6020526000908152604090205481565b60145481565b336000908152600560209081526040808320600160a060020a0386168452909152812054611064908363ffffffff6113fd16565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006002366044146110d757fe5b5050600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600654600090600160a060020a0316331461111e57600080fd5b600160a060020a038216151561113357600080fd5b5060078054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff1983168117909355604051911691829133907f670c5841a438bdba1d0b33bc57b8124beea019900cd34307f3f049821f7d0fed90600090a45050565b6006546000908190600160a060020a031633146111b057600080fd5b600160a060020a038316151561120057600654604051600160a060020a0390911690303180156108fc02916000818181858888f193505050501580156111fa573d6000803e3d6000fd5b50611363565b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051849350600160a060020a038416916370a082319160248083019260209291908290030181600087803b15801561126457600080fd5b505af1158015611278573d6000803e3d6000fd5b505050506040513d602081101561128e57600080fd5b5051600654604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810184905290519293509084169163a9059cbb916044808201926020929091908290030181600087803b15801561130257600080fd5b505af1158015611316573d6000803e3d6000fd5b505050506040513d602081101561132c57600080fd5b5050600654604080518381529051600160a060020a03928316928616916000805160206116ed833981519152919081900360200190a35b505050565b600080611374836115d9565b600654600160a060020a0316600090815260046020526040902054600954919250906113a6908363ffffffff6113fd16565b11156113f3576009546040805191825260208201839052805133927f953172f7e621d89577ba9acef9de1f817dcaee100ee28a6abcbfe8cdb43add6f92908290030190a2600091506113f7565b8091505b50919050565b60008282018381101561140c57fe5b9392505050565b600b5460009060ff161561142657600080fd5b600160a060020a03841660009081526004602052604090205461144f908463ffffffff6113fd16565b600160a060020a038086166000908152600460205260408082209390935590841681522054611484908463ffffffff61156116565b600160a060020a038084166000908152600460209081526040918290209390935580518681529051918716927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a283600160a060020a031682600160a060020a03166000805160206116ed833981519152856040518082815260200191505060405180910390a35060019392505050565b600160a060020a0381166000908152600d6020526040902054611545903463ffffffff6113fd16565b600160a060020a039091166000908152600d6020526040902055565b60008282111561156d57fe5b50900390565b600654600090600160a060020a0316331461158d57600080fd5b600b5460ff161561159d57600080fd5b600b805460ff191660011790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b60004281806115e783610b9d565b915060009050600082111561165657816001141561163857611636606461162a608261161e600c548a61169190919063ffffffff16565b9063ffffffff61169116565b9063ffffffff6116b516565b015b6002821061165657600c5461165490869063ffffffff61169116565b015b6040805183815290517f2e232fc2c310d706d2c00d04309dfb865ac701a3e4aa80af7e45333f97de5dca9181900360200190a1949350505050565b60008282028315806116ad57508284828115156116aa57fe5b04145b151561140c57fe5b60008082848115156116c357fe5b049493505050505600c3882a76627eabec771bbe2a39a6e0ddfe818774c840e4e662b7fe289075bb9dddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820e2d16b2d20c7169ed027b47ddc543331af178e235ff624cdd28664df71fb0c7a0029000000000000000000000000cfcd7d69b7955548edb03c0918b8724dfcf2cf83",
  "constructorArguments": "000000000000000000000000cfcd7d69b7955548edb03c0918b8724dfcf2cf83"
}