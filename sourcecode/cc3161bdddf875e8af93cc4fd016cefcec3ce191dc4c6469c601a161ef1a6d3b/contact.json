{
  "address": "0x8c1e0e4bfeecd856bebbe7e0a6740df849bbb9a8",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Asset",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-17\n*/\n\npragma solidity 0.5.7;\n/**\n * Cycle TOKEN Contract\n * ERC-20 Token Standard Compliant\n */\n\n/**\n * @title SafeMath by OpenZeppelin\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns(uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n}\n\n/**\n * @title ERC20 Token minimal interface\n */\ncontract token {\n\n    function balanceOf(address _owner) public view returns(uint256 balance);\n    //Since some tokens doesn't return a bool on transfer, this general interface\n    //doesn't include a return on the transfer fucntion to be widely compatible\n    function transfer(address _to, uint256 _value) public;\n\n}\n\n/**\n * Token contract interface for external use\n */\ncontract ERC20TokenInterface {\n\n    function balanceOf(address _owner) public view returns(uint256 value);\n\n    function transfer(address _to, uint256 _value) public returns(bool success);\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool success);\n\n    function approve(address _spender, uint256 _value) public returns(bool success);\n\n    function allowance(address _owner, address _spender) public view returns(uint256 remaining);\n\n}\n\n/**\n * @title Token definition\n * @dev Define token paramters including ERC20 ones\n */\ncontract ERC20Token is ERC20TokenInterface { //Standard definition of a ERC20Token\n\n    using SafeMath for uint256;\n    uint256 public totalSupply;\n    mapping(address => uint256) balances; //A mapping of all balances per address\n    mapping(address => mapping(address => uint256)) allowed; //A mapping of all allowances\n\n    /**\n     * @dev Get the balance of an specified address.\n     * @param _owner The address to be query.\n     */\n    function balanceOf(address _owner) public view returns(uint256 value) {\n        return balances[_owner];\n    }\n\n    /**\n     * @dev transfer token to a specified address\n     * @param _to The address to transfer to.\n     * @param _value The amount to be transferred.\n     */\n    function transfer(address _to, uint256 _value) public returns(bool success) {\n        require(_to != address(0)); //If you dont want that people destroy token\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n     * @dev transfer token from an address to another specified address using allowance\n     * @param _from The address where token comes.\n     * @param _to The address to transfer to.\n     * @param _value The amount to be transferred.\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool success) {\n        require(_to != address(0)); //If you dont want that people destroy token\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * @dev Assign allowance to an specified address to use the owner balance\n     * @param _spender The address to be allowed to spend.\n     * @param _value The amount to be allowed.\n     */\n    function approve(address _spender, uint256 _value) public returns(bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Get the allowance of an specified address to use another address balance.\n     * @param _owner The address of the owner of the tokens.\n     * @param _spender The address of the allowed spender.\n     */\n    function allowance(address _owner, address _spender) public view returns(uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n\n\n    /**\n     * @dev Log Events\n     */\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n/**\n * @title Asset\n * @dev Initial supply creation\n */\ncontract Asset is ERC20Token {\n\n    string public name = 'Cycle';\n    uint8 public decimals = 8;\n    string public symbol = 'CYCLE';\n    string public version = '1';\n    address public owner; //owner address is public\n\n    constructor(uint initialSupply, address initialOwner) public {\n        owner = initialOwner;\n        totalSupply = initialSupply * (10 ** uint256(decimals)); //initial token creation\n        balances[owner] = totalSupply;\n        emit Transfer(address(0), owner, balances[owner]);\n    }\n\n    /**\n     * @notice Function to recover ANY token stuck on contract accidentally\n     * In case of recover of stuck tokens please contact contract owners\n     */\n    function recoverTokens(token _address, address _to) public {\n        require(msg.sender == owner);\n        require(_to != address(0));\n        uint256 remainder = _address.balanceOf(address(this)); //Check remainder tokens\n        _address.transfer(_to, remainder); //Transfer tokens to creator\n    }\n\n    function changeOwner(address newOwner) external {\n        require(msg.sender == owner);\n        require(newOwner != address(0));\n        owner = newOwner;\n    }\n\n    /**\n     *@dev Function to handle callback calls\n     */\n    function () external {\n        revert();\n    }\n\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"initialOwner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600560808190527f4379636c6500000000000000000000000000000000000000000000000000000060a090815261003e9160039190610196565b506004805460ff191660081790556040805180820190915260058082527f4359434c45000000000000000000000000000000000000000000000000000000602090920191825261008e9181610196565b506040805180820190915260018082527f310000000000000000000000000000000000000000000000000000000000000060209092019182526100d391600691610196565b503480156100e057600080fd5b50604051604080610af48339810180604052604081101561010057600080fd5b508051602091820151600780546001600160a01b0319166001600160a01b038084169190911780835560045460ff16600a0a850260008181559183168252600187526040808320919091559254909116808252828220548351908152925194959394909391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a35050610231565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101d757805160ff1916838001178555610204565b82800160010185558215610204579182015b828111156102045782518255916020019190600101906101e9565b50610210929150610214565b5090565b61022e91905b80821115610210576000815560010161021a565b90565b6108b4806102406000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806354fd4d501161008c57806395d89b411161006657806395d89b4114610281578063a6f9dae114610289578063a9059cbb146102af578063dd62ed3e146102db576100cf565b806354fd4d501461022f57806370a08231146102375780638da5cb5b1461025d576100cf565b8063056097ac146100d457806306fdde0314610104578063095ea7b31461018157806318160ddd146101c157806323b872dd146101db578063313ce56714610211575b600080fd5b610102600480360360408110156100ea57600080fd5b506001600160a01b0381358116916020013516610309565b005b61010c610421565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014657818101518382015260200161012e565b50505050905090810190601f1680156101735780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ad6004803603604081101561019757600080fd5b506001600160a01b0381351690602001356104af565b604080519115158252519081900360200190f35b6101c9610515565b60408051918252519081900360200190f35b6101ad600480360360608110156101f157600080fd5b506001600160a01b0381358116916020810135909116906040013561051b565b61021961063b565b6040805160ff9092168252519081900360200190f35b61010c610644565b6101c96004803603602081101561024d57600080fd5b50356001600160a01b031661069f565b6102656106ba565b604080516001600160a01b039092168252519081900360200190f35b61010c6106c9565b6101026004803603602081101561029f57600080fd5b50356001600160a01b0316610724565b6101ad600480360360408110156102c557600080fd5b506001600160a01b038135169060200135610770565b6101c9600480360360408110156102f157600080fd5b506001600160a01b0381358116916020013516610835565b6007546001600160a01b0316331461032057600080fd5b6001600160a01b03811661033357600080fd5b60408051600160e01b6370a0823102815230600482015290516000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b15801561038057600080fd5b505afa158015610394573d6000803e3d6000fd5b505050506040513d60208110156103aa57600080fd5b505160408051600160e01b63a9059cbb0281526001600160a01b0385811660048301526024820184905291519293509085169163a9059cbb9160448082019260009290919082900301818387803b15801561040457600080fd5b505af1158015610418573d6000803e3d6000fd5b50505050505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104a75780601f1061047c576101008083540402835291602001916104a7565b820191906000526020600020905b81548152906001019060200180831161048a57829003601f168201915b505050505081565b3360008181526002602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60005481565b60006001600160a01b03831661053057600080fd5b6001600160a01b0384166000908152600260209081526040808320338452909152902054610564908363ffffffff61086016565b6001600160a01b0385166000818152600260209081526040808320338452825280832094909455918152600190915220546105a5908363ffffffff61086016565b6001600160a01b0380861660009081526001602052604080822093909355908516815220546105da908363ffffffff61087216565b6001600160a01b0380851660008181526001602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b60045460ff1681565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104a75780601f1061047c576101008083540402835291602001916104a7565b6001600160a01b031660009081526001602052604090205490565b6007546001600160a01b031681565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104a75780601f1061047c576101008083540402835291602001916104a7565b6007546001600160a01b0316331461073b57600080fd5b6001600160a01b03811661074e57600080fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b03831661078557600080fd5b336000908152600160205260409020546107a5908363ffffffff61086016565b33600090815260016020526040808220929092556001600160a01b038516815220546107d7908363ffffffff61087216565b6001600160a01b0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561086c57fe5b50900390565b60008282018381101561088157fe5b939250505056fea165627a7a7230582070825363df25a990b5e5a4294e579b37224bd8fc7a77d3d4f5f79e7ef96aadd800290000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000014c106363e77b9d2351679c621348dc13d1e631",
  "constructorArguments": "0000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000014c106363e77b9d2351679c621348dc13d1e631"
}