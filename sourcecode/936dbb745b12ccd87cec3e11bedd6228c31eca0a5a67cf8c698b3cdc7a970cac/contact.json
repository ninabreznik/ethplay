{
  "address": "0x898f198a0138a51a357de0694948ea8e4e808507",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MintCoin",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-25\n*/\n\npragma solidity ^0.4.25;\n\n// ----------------------------------------------------------------------------\n// @Name SafeMath\n// @Desc Math operations with safety checks that throw on error\n// https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/math/SafeMath.sol\n// ----------------------------------------------------------------------------\nlibrary SafeMath {\n    \n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n// ----------------------------------------------------------------------------\n// @title ERC20Basic\n// @dev Simpler version of ERC20 interface\n// See https://github.com/ethereum/EIPs/issues/179\n// ----------------------------------------------------------------------------\ncontract ERC20Basic {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n// ----------------------------------------------------------------------------\n// @title ERC20 interface\n// @dev See https://github.com/ethereum/EIPs/issues/20\n// ----------------------------------------------------------------------------\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public view returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool); \n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n// ----------------------------------------------------------------------------\n// @title Basic token\n// @dev Basic version of StandardToken, with no allowances.\n// ----------------------------------------------------------------------------\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n\n    uint256 totalSupply_;\n\n    function totalSupply() public view returns (uint256) {\n        return totalSupply_;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n    \n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances[_owner];\n    }\n}\n// ----------------------------------------------------------------------------\n// @title Ownable\n// ----------------------------------------------------------------------------\ncontract Ownable {\n    // Development Team Leader\n    address public owner;\n\n    constructor() public {\n        owner    = msg.sender;\n    }\n\n    modifier onlyOwner() { require(msg.sender == owner); _; }\n}\n// ----------------------------------------------------------------------------\n// @title BlackList\n// @dev Base contract which allows children to implement an emergency stop mechanism.\n// ----------------------------------------------------------------------------\ncontract BlackList is Ownable {\n\n    event Lock(address indexed LockedAddress);\n    event Unlock(address indexed UnLockedAddress);\n\n    mapping( address => bool ) public blackList;\n\n    modifier CheckBlackList { require(blackList[msg.sender] != true); _; }\n\n    function SetLockAddress(address _lockAddress) external onlyOwner returns (bool) {\n        require(_lockAddress != address(0));\n        require(_lockAddress != owner);\n        require(blackList[_lockAddress] != true);\n        \n        blackList[_lockAddress] = true;\n        \n        emit Lock(_lockAddress);\n\n        return true;\n    }\n\n    function UnLockAddress(address _unlockAddress) external onlyOwner returns (bool) {\n        require(blackList[_unlockAddress] != false);\n        \n        blackList[_unlockAddress] = false;\n        \n        emit Unlock(_unlockAddress);\n\n        return true;\n    }\n}\n// ----------------------------------------------------------------------------\n// @title Pausable\n// @dev Base contract which allows children to implement an emergency stop mechanism.\n// ----------------------------------------------------------------------------\ncontract Pausable is Ownable {\n    event Pause();\n    event Unpause();\n\n    bool public paused = false;\n\n    modifier whenNotPaused() { require(!paused); _; }\n    modifier whenPaused() { require(paused); _; }\n\n    function pause() onlyOwner whenNotPaused public {\n        paused = true;\n        emit Pause();\n    }\n\n    function unpause() onlyOwner whenPaused public {\n        paused = false;\n        emit Unpause();\n    }\n}\n// ----------------------------------------------------------------------------\n// @title Standard ERC20 token\n// @dev Implementation of the basic standard token.\n// https://github.com/ethereum/EIPs/issues/20\n// ----------------------------------------------------------------------------\ncontract StandardToken is ERC20, BasicToken {\n  \n    mapping (address => mapping (address => uint256)) internal allowed;\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    \n        emit Transfer(_from, _to, _value);\n    \n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n    \n        emit Approval(msg.sender, _spender, _value);\n    \n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n\n    function increaseApproval(address _spender, uint256 _addedValue) public returns (bool) {\n        allowed[msg.sender][_spender] = (allowed[msg.sender][_spender].add(_addedValue));\n    \n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    \n        return true;\n    }\n\n    function decreaseApproval(address _spender, uint256 _subtractedValue) public returns (bool) {\n        uint256 oldValue = allowed[msg.sender][_spender];\n    \n        if (_subtractedValue > oldValue) {\n        allowed[msg.sender][_spender] = 0;\n        } else {\n        allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n    \n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n}\n// ----------------------------------------------------------------------------\n// @title MultiTransfer Token\n// @dev Only Admin\n// ----------------------------------------------------------------------------\ncontract MultiTransferToken is StandardToken, Ownable {\n\n    function MultiTransfer(address[] _to, uint256[] _amount) onlyOwner public returns (bool) {\n        require(_to.length == _amount.length);\n\n        uint256 ui;\n        uint256 amountSum = 0;\n    \n        for (ui = 0; ui < _to.length; ui++) {\n            require(_to[ui] != address(0));\n\n            amountSum = amountSum.add(_amount[ui]);\n        }\n\n        require(amountSum <= balances[msg.sender]);\n\n        for (ui = 0; ui < _to.length; ui++) {\n            balances[msg.sender] = balances[msg.sender].sub(_amount[ui]);\n            balances[_to[ui]] = balances[_to[ui]].add(_amount[ui]);\n        \n            emit Transfer(msg.sender, _to[ui], _amount[ui]);\n        }\n    \n        return true;\n    }\n}\n// ----------------------------------------------------------------------------\n// @title Burnable Token\n// @dev Token that can be irreversibly burned (destroyed).\n// ----------------------------------------------------------------------------\ncontract BurnableToken is StandardToken, Ownable {\n\n    event BurnAdminAmount(address indexed burner, uint256 value);\n\n    function burnAdminAmount(uint256 _value) onlyOwner public {\n        require(_value <= balances[msg.sender]);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        totalSupply_ = totalSupply_.sub(_value);\n    \n        emit BurnAdminAmount(msg.sender, _value);\n        emit Transfer(msg.sender, address(0), _value);\n    }\n}\n// ----------------------------------------------------------------------------\n// @title Mintable token\n// @dev Simple ERC20 Token example, with mintable token creation\n// Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\n// ----------------------------------------------------------------------------\ncontract MintableToken is StandardToken, Ownable {\n    event Mint(address indexed to, uint256 amount);\n    event MintFinished();\n\n    bool public mintingFinished = false;\n\n    modifier canMint() { require(!mintingFinished); _; }\n    modifier cannotMint() { require(mintingFinished); _; }\n\n    function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\n        totalSupply_ = totalSupply_.add(_amount);\n        balances[_to] = balances[_to].add(_amount);\n    \n        emit Mint(_to, _amount);\n        emit Transfer(address(0), _to, _amount);\n    \n        return true;\n    }\n\n    function finishMinting() onlyOwner canMint public returns (bool) {\n        mintingFinished = true;\n        emit MintFinished();\n        return true;\n    }\n}\n// ----------------------------------------------------------------------------\n// @title Pausable token\n// @dev StandardToken modified with pausable transfers.\n// ----------------------------------------------------------------------------\ncontract PausableToken is StandardToken, Pausable, BlackList {\n\n    function transfer(address _to, uint256 _value) public whenNotPaused CheckBlackList returns (bool) {\n        return super.transfer(_to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused CheckBlackList returns (bool) {\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    function approve(address _spender, uint256 _value) public whenNotPaused CheckBlackList returns (bool) {\n        return super.approve(_spender, _value);\n    }\n\n    function increaseApproval(address _spender, uint _addedValue) public whenNotPaused CheckBlackList returns (bool success) {\n        return super.increaseApproval(_spender, _addedValue);\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused CheckBlackList returns (bool success) {\n        return super.decreaseApproval(_spender, _subtractedValue);\n    }\n}\n// ----------------------------------------------------------------------------\n// @Project Mint Planet Service\n// @Creator Mint Admin\n// @Source\n// ----------------------------------------------------------------------------\ncontract MintCoin is PausableToken, MintableToken, BurnableToken, MultiTransferToken {\n    string public name = \"Mint Token\";\n    string public symbol = \"MINT\";\n    uint256 public decimals = 18;\n}",
  "bytecode": "6003805460a060020a60ff02191690556005805460ff1916905560c0604052600a60808190527f4d696e7420546f6b656e0000000000000000000000000000000000000000000060a09081526200005a9160069190620000bf565b506040805180820190915260048082527f4d494e54000000000000000000000000000000000000000000000000000000006020909201918252620000a191600791620000bf565b50601260085560038054600160a060020a0319163317905562000164565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200010257805160ff191683800117855562000132565b8280016001018555821562000132579182015b828111156200013257825182559160200191906001019062000115565b506200014092915062000144565b5090565b6200016191905b808211156200014057600081556001016200014b565b90565b6112ff80620001746000396000f3006080604052600436106101325763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461013757806306fdde03146101605780630896937e146101ea578063095ea7b31461027857806318160ddd1461029c57806323b872dd146102c3578063313ce567146102ed5780633f4ba83a1461030257806340c10f19146103195780634838d1651461033d5780635c975abb1461035e578063661884631461037357806370a082311461039757806376227f3b146103b85780637d64bcb4146103d05780638456cb59146103e55780638da5cb5b146103fa57806395d89b411461042b578063a9059cbb14610440578063c201df9714610464578063c286f3d914610485578063d73dd623146104a6578063dd62ed3e146104ca575b600080fd5b34801561014357600080fd5b5061014c6104f1565b604080519115158252519081900360200190f35b34801561016c57600080fd5b506101756104fa565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101af578181015183820152602001610197565b50505050905090810190601f1680156101dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f657600080fd5b506040805160206004803580820135838102808601850190965280855261014c95369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506105889650505050505050565b34801561028457600080fd5b5061014c600160a060020a03600435166024356107a7565b3480156102a857600080fd5b506102b16107f4565b60408051918252519081900360200190f35b3480156102cf57600080fd5b5061014c600160a060020a03600435811690602435166044356107fa565b3480156102f957600080fd5b506102b1610849565b34801561030e57600080fd5b5061031761084f565b005b34801561032557600080fd5b5061014c600160a060020a03600435166024356108c7565b34801561034957600080fd5b5061014c600160a060020a03600435166109b8565b34801561036a57600080fd5b5061014c6109cd565b34801561037f57600080fd5b5061014c600160a060020a03600435166024356109dd565b3480156103a357600080fd5b506102b1600160a060020a0360043516610a23565b3480156103c457600080fd5b50610317600435610a3e565b3480156103dc57600080fd5b5061014c610b16565b3480156103f157600080fd5b50610317610b7c565b34801561040657600080fd5b5061040f610bf9565b60408051600160a060020a039092168252519081900360200190f35b34801561043757600080fd5b50610175610c08565b34801561044c57600080fd5b5061014c600160a060020a0360043516602435610c63565b34801561047057600080fd5b5061014c600160a060020a0360043516610ca9565b34801561049157600080fd5b5061014c600160a060020a0360043516610d38565b3480156104b257600080fd5b5061014c600160a060020a0360043516602435610dfe565b3480156104d657600080fd5b506102b1600160a060020a0360043581169060243516610e44565b60055460ff1681565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105805780601f1061055557610100808354040283529160200191610580565b820191906000526020600020905b81548152906001019060200180831161056357829003601f168201915b505050505081565b60035460009081908190600160a060020a031633146105a657600080fd5b83518551146105b457600080fd5b5060009050805b84518210156106285784516000908690849081106105d557fe5b60209081029091010151600160a060020a031614156105f357600080fd5b61061b848381518110151561060457fe5b60209081029091010151829063ffffffff610e6f16565b60019092019190506105bb565b3360009081526020819052604090205481111561064457600080fd5b600091505b845182101561079c5761068a848381518110151561066357fe5b6020908102909101810151336000908152918290526040909120549063ffffffff610e7e16565b3360009081526020819052604090205583516106f6908590849081106106ac57fe5b9060200190602002015160008088868151811015156106c757fe5b6020908102909101810151600160a060020a03168252810191909152604001600020549063ffffffff610e6f16565b600080878581518110151561070757fe5b6020908102909101810151600160a060020a0316825281019190915260400160002055845185908390811061073857fe5b90602001906020020151600160a060020a031633600160a060020a03166000805160206112b4833981519152868581518110151561077257fe5b906020019060200201516040518082815260200191505060405180910390a3600190910190610649565b506001949350505050565b60035460009060a060020a900460ff16156107c157600080fd5b3360009081526004602052604090205460ff161515600114156107e357600080fd5b6107ed8383610e90565b9392505050565b60015490565b60035460009060a060020a900460ff161561081457600080fd5b3360009081526004602052604090205460ff1615156001141561083657600080fd5b610841848484610ef6565b949350505050565b60085481565b600354600160a060020a0316331461086657600080fd5b60035460a060020a900460ff16151561087e57600080fd5b6003805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600354600090600160a060020a031633146108e157600080fd5b60055460ff16156108f157600080fd5b600154610904908363ffffffff610e6f16565b600155600160a060020a038316600090815260208190526040902054610930908363ffffffff610e6f16565b600160a060020a03841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000916000805160206112b48339815191529181900360200190a350600192915050565b60046020526000908152604090205460ff1681565b60035460a060020a900460ff1681565b60035460009060a060020a900460ff16156109f757600080fd5b3360009081526004602052604090205460ff16151560011415610a1957600080fd5b6107ed838361105b565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a03163314610a5557600080fd5b33600090815260208190526040902054811115610a7157600080fd5b33600090815260208190526040902054610a91908263ffffffff610e7e16565b33600090815260208190526040902055600154610ab4908263ffffffff610e7e16565b60015560408051828152905133917fa0f3dea10c8bf26d7f1b6b0cf33166195f48616c562c681b49eaaa2423894d00919081900360200190a260408051828152905160009133916000805160206112b48339815191529181900360200190a350565b600354600090600160a060020a03163314610b3057600080fd5b60055460ff1615610b4057600080fd5b6005805460ff191660011790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600354600160a060020a03163314610b9357600080fd5b60035460a060020a900460ff1615610baa57600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600354600160a060020a031681565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105805780601f1061055557610100808354040283529160200191610580565b60035460009060a060020a900460ff1615610c7d57600080fd5b3360009081526004602052604090205460ff16151560011415610c9f57600080fd5b6107ed838361114b565b600354600090600160a060020a03163314610cc357600080fd5b600160a060020a03821660009081526004602052604090205460ff161515610cea57600080fd5b600160a060020a038216600081815260046020526040808220805460ff19169055517f0be774851955c26a1d6a32b13b020663a069006b4a3b643ff0b809d3182605729190a2506001919050565b600354600090600160a060020a03163314610d5257600080fd5b600160a060020a0382161515610d6757600080fd5b600354600160a060020a0383811691161415610d8257600080fd5b600160a060020a03821660009081526004602052604090205460ff16151560011415610dad57600080fd5b600160a060020a038216600081815260046020526040808220805460ff19166001179055517fc1b5f12cea7c200ad495a43bf2d4c7ba1a753343c06c339093937849de84d9139190a2506001919050565b60035460009060a060020a900460ff1615610e1857600080fd5b3360009081526004602052604090205460ff16151560011415610e3a57600080fd5b6107ed838361121a565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828201838110156107ed57fe5b600082821115610e8a57fe5b50900390565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6000600160a060020a0383161515610f0d57600080fd5b600160a060020a038416600090815260208190526040902054821115610f3257600080fd5b600160a060020a0384166000908152600260209081526040808320338452909152902054821115610f6257600080fd5b600160a060020a038416600090815260208190526040902054610f8b908363ffffffff610e7e16565b600160a060020a038086166000908152602081905260408082209390935590851681522054610fc0908363ffffffff610e6f16565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054611002908363ffffffff610e7e16565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391926000805160206112b4833981519152929181900390910190a35060019392505050565b336000908152600260209081526040808320600160a060020a0386168452909152812054808311156110b057336000908152600260209081526040808320600160a060020a03881684529091528120556110e5565b6110c0818463ffffffff610e7e16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a038316151561116257600080fd5b3360009081526020819052604090205482111561117e57600080fd5b3360009081526020819052604090205461119e908363ffffffff610e7e16565b3360009081526020819052604080822092909255600160a060020a038516815220546111d0908363ffffffff610e6f16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233926000805160206112b48339815191529281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a038616845290915281205461124e908363ffffffff610e6f16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a3506001929150505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058201bebe6250f0c52d9b39e1fd92afb299daa5215625339e8a7354b08120fa4b4b80029"
}