{
  "address": "0xdc1c1092b730a625063874a75b7e2bba93c9f282",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "XmedLoyaltyToken",
  "compilerVersion": "v0.5.0+commit.1d4f565a",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-22\n*/\n\n// File: contracts/Ownable.sol\n\n// solium-disable linebreak-style\npragma solidity ^0.5.0;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n    * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n    * account.\n    */\n    constructor() internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n    * @return the address of the owner.\n    */\n    function owner() public view returns(address) {\n        return _owner;\n    }\n\n    /**\n    * @dev Throws if called by any account other than the owner.\n    */\n    modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n\n    /**\n    * @return true if `msg.sender` is the owner of the contract.\n    */\n    function isOwner() public view returns(bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n    * @dev Allows the current owner to relinquish control of the contract.\n    * @notice Renouncing to ownership will leave the contract without an owner.\n    * It will not be possible to call the functions with the `onlyOwner`\n    * modifier anymore.\n    */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n    * @dev Transfers control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// File: contracts/Pausable.sol\n\n// solium-disable linebreak-style\npragma solidity ^0.5.0;\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n\n    bool public paused = false;\n\n    /**\n    * @dev Modifier to make a function callable only when the contract is not paused.\n    */\n    modifier whenNotPaused() {\n        require(!paused);\n        _;\n    }\n\n    /**\n    * @dev Modifier to make a function callable only when the contract is paused.\n    */\n    modifier whenPaused() {\n        require(paused);\n        _;\n    }\n\n    /**\n    * @dev called by the owner to pause, triggers stopped state\n    */\n    function pause() public onlyOwner whenNotPaused {\n        paused = true;\n        emit Paused(msg.sender);\n    }\n\n    /**\n    * @dev called by the owner to unpause, returns to normal state\n    */\n    function unpause() public onlyOwner whenPaused {\n        paused = false;\n        emit Unpaused(msg.sender);\n    }\n\n    event Paused(address account);\n    event Unpaused(address account);\n}\n\n// File: contracts/IERC20.sol\n\n// solium-disable linebreak-style\npragma solidity ^0.5.0;\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ninterface IERC20 {\n\n  function totalSupply() external view returns (uint256);\n\n  function balanceOf(address who) external view returns (uint256);\n\n  function allowance(address owner, address spender)\n    external view returns (uint256);\n\n  function transfer(address to, uint256 value) external returns (bool);\n\n  function approve(address spender, uint256 value)\n    external returns (bool);\n\n  function transferFrom(address from, address to, uint256 value)\n    external returns (bool);\n\n  event Transfer(\n    address indexed from,\n    address indexed to,\n    uint256 value\n  );\n\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n// File: contracts/SafeMath.sol\n\n// solium-disable linebreak-style\npragma solidity ^0.5.0;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n\n    /**\n    * @dev Multiplies two numbers, reverts on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0); // Solidity only automatically asserts when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n    * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n    * @dev Adds two numbers, reverts on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    /**\n    * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\n    * reverts when dividing by zero.\n    */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\n\n// File: contracts/ERC20.sol\n\n// solium-disable linebreak-style\npragma solidity ^0.5.0;\n\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n * Originally based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) internal _balances;\n\n    mapping (address => mapping (address => uint256)) internal _allowed;\n\n    uint256 internal _totalSupply;\n\n    /**\n    * @dev Total number of tokens in existence\n    */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param owner The address to query the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\n\n    /**\n    * @dev Function to check the amount of tokens that an owner allowed to a spender.\n    * @param owner address The address which owns the funds.\n    * @param spender address The address which will spend the funds.\n    * @return A uint256 specifying the amount of tokens still available for the spender.\n    */\n    function allowance(\n        address owner,\n        address spender\n    )\n      public\n      view\n      returns (uint256)\n    {\n        return _allowed[owner][spender];\n    }\n\n    /**\n    * @dev Transfer token for a specified address\n    * @param to The address to transfer to.\n    * @param value The amount to be transferred.\n    */\n    function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    /**\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n    * Beware that changing an allowance with this method brings the risk that someone may use both the old\n    * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n    * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n    * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    * @param spender The address which will spend the funds.\n    * @param value The amount of tokens to be spent.\n    */\n    function approve(address spender, uint256 value) public returns (bool) {\n        require(spender != address(0));\n\n        _allowed[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n    * @dev Transfer tokens from one address to another\n    * @param from address The address which you want to send tokens from\n    * @param to address The address which you want to transfer to\n    * @param value uint256 the amount of tokens to be transferred\n    */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    )\n      public\n      returns (bool)\n    {\n        require(value <= _allowed[from][msg.sender]);\n\n        _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n    * @dev Increase the amount of tokens that an owner allowed to a spender.\n    * approve should be called when allowed_[_spender] == 0. To increment\n    * allowed value is better to use this function to avoid 2 calls (and wait until\n    * the first transaction is mined)\n    * From MonolithDAO Token.sol\n    * @param spender The address which will spend the funds.\n    * @param addedValue The amount of tokens to increase the allowance by.\n    */\n    function increaseAllowance(\n        address spender,\n        uint256 addedValue\n    )\n      public\n      returns (bool)\n    {\n        require(spender != address(0));\n\n        _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].add(addedValue));\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n        return true;\n    }\n\n    /**\n    * @dev Decrease the amount of tokens that an owner allowed to a spender.\n    * approve should be called when allowed_[_spender] == 0. To decrement\n    * allowed value is better to use this function to avoid 2 calls (and wait until\n    * the first transaction is mined)\n    * From MonolithDAO Token.sol\n    * @param spender The address which will spend the funds.\n    * @param subtractedValue The amount of tokens to decrease the allowance by.\n    */\n    function decreaseAllowance(\n        address spender,\n        uint256 subtractedValue\n    )\n      public\n      returns (bool)\n    {\n        require(spender != address(0));\n\n        _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].sub(subtractedValue));\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n        return true;\n    }\n\n    /**\n    * @dev Transfer token for a specified addresses\n    * @param from The address to transfer from.\n    * @param to The address to transfer to.\n    * @param value The amount to be transferred.\n    */\n    function _transfer(address from, address to, uint256 value) internal {\n        require(value <= _balances[from]);\n        require(to != address(0));\n\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\n  \n}\n\n// File: contracts/ERC20Mintable.sol\n\n// solium-disable linebreak-style\npragma solidity ^0.5.0;\n\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract ERC20Mintable is ERC20 {\n    \n    /**\n    * @dev Internal function that mints an amount of the token and assigns it to\n    * an account. This encapsulates the modification of balances such that the\n    * proper events are emitted.\n    * @param account The account that will receive the created tokens.\n    * @param value The amount that will be created.\n    */\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n        emit Mint(account, msg.sender, value);\n    }\n\n    event Mint(address indexed to, address indexed minter, uint256 value);\n}\n\n// File: contracts/ERC20Burnable.sol\n\n// solium-disable linebreak-style\npragma solidity ^0.5.0;\n\n\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract ERC20Burnable is ERC20 {\n    /**\n    * @dev Internal function that burns an amount of the token of a given\n    * account.\n    * @param account The account whose tokens will be burnt.\n    * @param value The amount that will be burnt.\n    */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n        require(value <= _balances[account]);\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n        emit Burn(account, msg.sender, value);\n    }\n\n    event Burn(address indexed from, address indexed burner, uint256 value);\n}\n\n// File: contracts/TokenDetails.sol\n\n// solium-disable linebreak-style\npragma solidity ^0.5.0;\n\n\ncontract TokenDetails {\n\n    string internal _name;\n    string internal _symbol;\n    \n    /**\n    * @return the name of the token.\n    */\n    function name() public view returns(string memory) {\n        return _name;\n    }\n\n    /**\n    * @return the symbol of the token.\n    */\n    function symbol() public view returns(string memory) {\n        return _symbol;\n    }\n\n}\n\n// File: contracts/ERC20Details.sol\n\n// solium-disable linebreak-style\npragma solidity ^0.5.0;\n\n\ncontract ERC20Details is TokenDetails {\n\n    uint8 internal _decimals;\n\n    /**\n    * @return the number of decimals of the token.\n    */\n    function decimals() public view returns(uint8) {\n        return _decimals;\n    }\n\n}\n\n// File: contracts/XmedBaseLoyaltyToken.sol\n\n// solium-disable linebreak-style\npragma solidity ^0.5.0;\n\n\n\n\n\n\ncontract XmedBaseLoyaltyToken is Pausable, ERC20Mintable, ERC20Burnable, ERC20Details {\n\n    /**\n    * @param _tokenSymbol token symbol\n    * @param _tokenName token name\n    * @param _tokenDecimals token decimals\n    */\n    constructor(\n        string memory _tokenSymbol,\n        string memory _tokenName,\n        uint8 _tokenDecimals\n        ) public {\n        _symbol = _tokenSymbol;\n        _name = _tokenName;\n        _decimals = _tokenDecimals;\n    }\n\n    // Function that handles change of total supply.\n    // Intended to be overriden in child contracts.\n    // Call super.onTotalSupplyChange in child contract overriden method to invoke the event.\n    function onTotalSupplyChange() internal {\n        emit TotalSupplyChanged();\n    }\n\n    function award(address to, uint256 loyaltyAmount) public onlyOwner {\n        _mint(to, loyaltyAmount);\n        emit Award(to, _symbol, loyaltyAmount);\n        onTotalSupplyChange();\n    }\n\n    function redeem(address from, uint256 loyaltyAmount) public onlyOwner {\n        _burn(from, loyaltyAmount);\n        emit Redeem(from, _symbol, loyaltyAmount);\n        onTotalSupplyChange();\n    }\n\n    function burn(uint256 amount) public onlyOwner {\n        _burn(msg.sender, amount);\n        emit Burn(_symbol, amount);\n        onTotalSupplyChange();\n    }\n\n    // emitted when the award method is called\n    event Award(address to, string tokenSymbol, uint256 tokenAmount);\n    // emitted when the redeem method is called\n    event Redeem(address from, string tokenSymbol, uint256 tokenAmount);\n    // emitted when the burn method is called\n    event Burn(string tokenSymbol, uint256 tokenAmount);\n    // emitted when the total supply is changed\n    event TotalSupplyChanged();\n}\n\n// File: contracts\\XmedLoyaltyToken.sol\n\n// solium-disable linebreak-style\npragma solidity ^0.5.0;\n\n\ncontract XmedLoyaltyToken is XmedBaseLoyaltyToken {\n\n    /**\n    * @param _tokenSymbol token symbol\n    * @param _tokenName token name\n    * @param _tokenDecimals token decimals\n    */\n    constructor(\n        string memory _tokenSymbol,\n        string memory _tokenName,\n        uint8 _tokenDecimals\n        ) XmedBaseLoyaltyToken(_tokenSymbol, _tokenName, _tokenDecimals) public {\n\n        }\n\n    /**\n    *\n    * Classic transfer from except if the msg.sender is the contract owner,\n    * it skips the allowances.\n    *\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    )\n      public\n      returns (bool)\n    {\n        if (msg.sender == owner()){\n            _transfer(from, to, value);\n            return true;\n        }\n\n        require(value <= _allowed[from][msg.sender]);\n\n        _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n        _transfer(from, to, value);\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"loyaltyAmount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"loyaltyAmount\",\"type\":\"uint256\"}],\"name\":\"award\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_tokenDecimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"Award\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TotalSupplyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60806040526000805460a060020a60ff02191690553480156200002157600080fd5b506040516200136c3803806200136c833981018060405260608110156200004757600080fd5b8101908080516401000000008111156200006057600080fd5b820160208101848111156200007457600080fd5b81516401000000008111828201871017156200008f57600080fd5b50509291906020018051640100000000811115620000ac57600080fd5b82016020810184811115620000c057600080fd5b8151640100000000811182820187101715620000db57600080fd5b505060209091015160008054600160a060020a0319163317808255604051939550919350859285928592600160a060020a0391909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a382516200014c90600590602086019062000183565b5081516200016290600490602085019062000183565b506006805460ff191660ff9290921691909117905550620002289350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001c657805160ff1916838001178555620001f6565b82800160010185558215620001f6579182015b82811115620001f6578251825591602001919060010190620001d9565b506200020492915062000208565b5090565b6200022591905b808211156200020457600081556001016200020f565b90565b61113480620002386000396000f3fe60806040526004361061011c5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610121578063095ea7b3146101ab57806318160ddd146101f85780631e9a69501461021f57806323b872dd1461025a578063313ce5671461029d57806339509351146102c85780633f4ba83a1461030157806342966c68146103165780635c975abb146103405780635d8a776e1461035557806370a082311461038e578063715018a6146103c15780638456cb59146103d65780638da5cb5b146103eb5780638f32d59b1461041c57806395d89b4114610431578063a457c2d714610446578063a9059cbb1461047f578063dd62ed3e146104b8578063f2fde38b146104f3575b600080fd5b34801561012d57600080fd5b50610136610526565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610170578181015183820152602001610158565b50505050905090810190601f16801561019d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b757600080fd5b506101e4600480360360408110156101ce57600080fd5b50600160a060020a0381351690602001356105bc565b604080519115158252519081900360200190f35b34801561020457600080fd5b5061020d61063a565b60408051918252519081900360200190f35b34801561022b57600080fd5b506102586004803603604081101561024257600080fd5b50600160a060020a038135169060200135610640565b005b34801561026657600080fd5b506101e46004803603606081101561027d57600080fd5b50600160a060020a03813581169160208101359091169060400135610731565b3480156102a957600080fd5b506102b2610805565b6040805160ff9092168252519081900360200190f35b3480156102d457600080fd5b506101e4600480360360408110156102eb57600080fd5b50600160a060020a03813516906020013561080e565b34801561030d57600080fd5b506102586108be565b34801561032257600080fd5b506102586004803603602081101561033957600080fd5b503561094d565b34801561034c57600080fd5b506101e4610a2b565b34801561036157600080fd5b506102586004803603604081101561037857600080fd5b50600160a060020a038135169060200135610a4c565b34801561039a57600080fd5b5061020d600480360360208110156103b157600080fd5b5035600160a060020a0316610af6565b3480156103cd57600080fd5b50610258610b11565b3480156103e257600080fd5b50610258610b7b565b3480156103f757600080fd5b50610400610c20565b60408051600160a060020a039092168252519081900360200190f35b34801561042857600080fd5b506101e4610c2f565b34801561043d57600080fd5b50610136610c40565b34801561045257600080fd5b506101e46004803603604081101561046957600080fd5b50600160a060020a038135169060200135610ca1565b34801561048b57600080fd5b506101e4600480360360408110156104a257600080fd5b50600160a060020a038135169060200135610cec565b3480156104c457600080fd5b5061020d600480360360408110156104db57600080fd5b50600160a060020a0381358116916020013516610d02565b3480156104ff57600080fd5b506102586004803603602081101561051657600080fd5b5035600160a060020a0316610d2d565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105b25780601f10610587576101008083540402835291602001916105b2565b820191906000526020600020905b81548152906001019060200180831161059557829003601f168201915b5050505050905090565b6000600160a060020a03831615156105d357600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035490565b610648610c2f565b151561065357600080fd5b61065d8282610d49565b60408051600160a060020a038416815290810182905260606020820181815260058054600260001961010060018416150201909116049284018390527f57bf2515c2ebac9b6c25e3230b89b54188343d8b8bf56aaa0f41cc2c3dba390a938693919286926080830190859080156107155780601f106106ea57610100808354040283529160200191610715565b820191906000526020600020905b8154815290600101906020018083116106f857829003601f168201915b505094505050505060405180910390a161072d610e59565b5050565b600061073b610c20565b600160a060020a031633600160a060020a031614156107675761075f848484610e84565b5060016107fe565b600160a060020a038416600090815260026020908152604080832033845290915290205482111561079757600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020546107cb908363ffffffff610f7816565b600160a060020a03851660009081526002602090815260408083203384529091529020556107fa848484610e84565b5060015b9392505050565b60065460ff1690565b6000600160a060020a038316151561082557600080fd5b336000908152600260209081526040808320600160a060020a0387168452909152902054610859908363ffffffff610f8d16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6108c6610c2f565b15156108d157600080fd5b60005474010000000000000000000000000000000000000000900460ff1615156108fa57600080fd5b6000805474ff0000000000000000000000000000000000000000191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b610955610c2f565b151561096057600080fd5b61096a3382610d49565b604080516020810183905281815260058054600260001961010060018416150201909116049282018390527fa0237080cf48d9e1fbb9ef1f82e33b11170d047b2b540a73b457d0916d53ee9992909184918190606082019085908015610a115780601f106109e657610100808354040283529160200191610a11565b820191906000526020600020905b8154815290600101906020018083116109f457829003601f168201915b5050935050505060405180910390a1610a28610e59565b50565b60005474010000000000000000000000000000000000000000900460ff1681565b610a54610c2f565b1515610a5f57600080fd5b610a698282610f9f565b60408051600160a060020a038416815290810182905260606020820181815260058054600260001961010060018416150201909116049284018390527f7776c1cd16e1eb8ca4281c989fbc25bdf75951320027a33a65dec42d10f28572938693919286926080830190859080156107155780601f106106ea57610100808354040283529160200191610715565b600160a060020a031660009081526001602052604090205490565b610b19610c2f565b1515610b2457600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b610b83610c2f565b1515610b8e57600080fd5b60005474010000000000000000000000000000000000000000900460ff1615610bb657600080fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b600054600160a060020a031690565b600054600160a060020a0316331490565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105b25780601f10610587576101008083540402835291602001916105b2565b6000600160a060020a0383161515610cb857600080fd5b336000908152600260209081526040808320600160a060020a0387168452909152902054610859908363ffffffff610f7816565b6000610cf9338484610e84565b50600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b610d35610c2f565b1515610d4057600080fd5b610a288161108b565b600160a060020a0382161515610d5e57600080fd5b600160a060020a038216600090815260016020526040902054811115610d8357600080fd5b600354610d96908263ffffffff610f7816565b600355600160a060020a038216600090815260016020526040902054610dc2908263ffffffff610f7816565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36040805182815290513391600160a060020a038516917fbac40739b0d4ca32fa2d82fc91630465ba3eddd1598da6fca393b26fb63b94539181900360200190a35050565b6040517f4846731990f8d48cc21a759295266cd7c75ee67abe67f3c439896ffdb756c97890600090a1565b600160a060020a038316600090815260016020526040902054811115610ea957600080fd5b600160a060020a0382161515610ebe57600080fd5b600160a060020a038316600090815260016020526040902054610ee7908263ffffffff610f7816565b600160a060020a038085166000908152600160205260408082209390935590841681522054610f1c908263ffffffff610f8d16565b600160a060020a0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610f8757600080fd5b50900390565b6000828201838110156107fe57600080fd5b600160a060020a0382161515610fb457600080fd5b600354610fc7908263ffffffff610f8d16565b600355600160a060020a038216600090815260016020526040902054610ff3908263ffffffff610f8d16565b600160a060020a03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36040805182815290513391600160a060020a038516917fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f89181900360200190a35050565b600160a060020a03811615156110a057600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a72305820571bb02b8f0e6075bd1ea4b299b0ff46b3fee789594d2307f04ad14a25a8a98e0029000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000004584d454400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a584d656420546f6b656e00000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000004584d454400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a584d656420546f6b656e00000000000000000000000000000000000000000000"
}