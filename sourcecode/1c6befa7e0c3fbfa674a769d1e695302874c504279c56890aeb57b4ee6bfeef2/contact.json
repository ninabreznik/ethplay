{
  "address": "0x653430560be843c4a3d143d0110e896c2ab8ac0d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Molecular Future Token",
  "contractName": "Token",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-12-15\n*/\n\npragma solidity ^0.4.18;\n\ncontract Owned {\n\taddress public owner;\n\n\tfunction Owned() public {\n\t\towner = msg.sender;\n\t}\n\n\tmodifier onlyOwner() {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n\n\tfunction setOwner(address _owner) onlyOwner public {\n\t\towner = _owner;\n\t}\n}\n\ncontract SafeMath {\n\tfunction add(uint256 _a, uint256 _b) internal pure returns (uint256) {\n\t\tuint256 c = _a + _b;\n\t\tassert(c >= _a);\n\t\treturn c;\n\t}\n\n\tfunction sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n\t\tassert(_a >= _b);\n\t\treturn _a - _b;\n\t}\n\n\tfunction mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\n\t\tuint256 c = _a * _b;\n\t\tassert(_a == 0 || c / _a == _b);\n\t\treturn c;\n\t}\n}\n\ncontract IToken {\n\tfunction name() public pure returns (string _name) { _name; }\n\tfunction symbol() public pure returns (string _symbol) { _symbol; }\n\tfunction decimals() public pure returns (uint8 _decimals) { _decimals; }\n\tfunction totalSupply() public pure returns (uint256 _totalSupply) { _totalSupply; }\n\n\tfunction balanceOf(address _owner) public pure returns (uint256 balance) { _owner; balance; }\n\n\tfunction allowance(address _owner, address _spender) public pure returns (uint256 remaining) { _owner; _spender; remaining; }\n\n\tfunction transfer(address _to, uint256 _value) public returns (bool success);\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n\tfunction approve(address _spender, uint256 _value) public returns (bool success);\n}\n\ncontract Token is IToken, SafeMath, Owned {\n\tstring public constant standard = '0.1';\n\tstring public name = '';\n\tstring public symbol = '';\n\tuint8 public decimals = 0;\n\tuint256 public totalSupply = 0;\n\tmapping (address => uint256) public balanceOf;\n\tmapping (address => mapping (address => uint256)) public allowance;\n\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n\tfunction Token(string _name, string _symbol, uint8 _decimals, uint256 _totalSupply) public {\n\t\trequire(bytes(_name).length > 0 && bytes(_symbol).length > 0);\n\n\t\tname = _name;\n\t\tsymbol = _symbol;\n\t\tdecimals = _decimals;\n\t\ttotalSupply = _totalSupply;\n\n\t\tbalanceOf[msg.sender] = _totalSupply;\n\t}\n\n\tmodifier validAddress(address _address) {\n\t\trequire(_address != 0x0);\n\t\t_;\n\t}\n\n\tfunction transfer(address _to, uint256 _value) public validAddress(_to) returns (bool success) {\n\t\tif (balanceOf[msg.sender] >= _value && _value > 0) {\n\t\t\tbalanceOf[msg.sender] = sub(balanceOf[msg.sender], _value);\n\t\t\tbalanceOf[_to] = add(balanceOf[_to], _value);\n\t\t\tTransfer(msg.sender, _to, _value);\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction transferFrom(address _from, address _to, uint256 _value) public validAddress(_from) validAddress(_to) returns (bool success) {\n\t\tif (balanceOf[_from] >= _value && _value > 0) {\n\t\t\tallowance[_from][msg.sender] = sub(allowance[_from][msg.sender], _value);\n\t\t\tbalanceOf[_from] = sub(balanceOf[_from], _value);\n\t\t\tbalanceOf[_to] = add(balanceOf[_to], _value);\n\t\t\tTransfer(_from, _to, _value);\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction approve(address _spender, uint256 _value) public validAddress(_spender) returns (bool success) {\n\t\trequire(_value == 0 || allowance[msg.sender][_spender] == 0);\n\n\t\tallowance[msg.sender][_spender] = _value;\n\t\tApproval(msg.sender, _spender, _value);\n\t\treturn true;\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526020604051908101604052600081526001908051610026929160200190610131565b506020604051908101604052600081526002908051610049929160200190610131565b506003805460ff191690556000600455341561006457600080fd5b604051610a02380380610a02833981016040528080518201919060200180518201919060200180519190602001805160008054600160a060020a03191633600160a060020a0316178155909250905084511180156100c3575060008351115b15156100ce57600080fd5b60018480516100e1929160200190610131565b5060028380516100f5929160200190610131565b506003805460ff191660ff9390931692909217909155600481905533600160a060020a0316600090815260056020526040902055506101cc9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017257805160ff191683800117855561019f565b8280016001018555821561019f579182015b8281111561019f578251825591602001919060010190610184565b506101ab9291506101af565b5090565b6101c991905b808211156101ab57600081556001016101b5565b90565b610827806101db6000396000f3006060604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806313af40351461017e57806318160ddd1461019f57806323b872dd146101c4578063313ce567146101ec5780635a3b7e421461021557806370a08231146102285780638da5cb5b1461024757806395d89b4114610276578063a9059cbb14610289578063dd62ed3e146102ab575b600080fd5b34156100c957600080fd5b6100d16102d0565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561010d5780820151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015357600080fd5b61016a600160a060020a036004351660243561036e565b604051901515815260200160405180910390f35b341561018957600080fd5b61019d600160a060020a036004351661042d565b005b34156101aa57600080fd5b6101b2610477565b60405190815260200160405180910390f35b34156101cf57600080fd5b61016a600160a060020a036004358116906024351660443561047d565b34156101f757600080fd5b6101ff6105e8565b60405160ff909116815260200160405180910390f35b341561022057600080fd5b6100d16105f1565b341561023357600080fd5b6101b2600160a060020a0360043516610628565b341561025257600080fd5b61025a61063a565b604051600160a060020a03909116815260200160405180910390f35b341561028157600080fd5b6100d1610649565b341561029457600080fd5b61016a600160a060020a03600435166024356106b4565b34156102b657600080fd5b6101b2600160a060020a03600435811690602435166107b6565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103665780601f1061033b57610100808354040283529160200191610366565b820191906000526020600020905b81548152906001019060200180831161034957829003601f168201915b505050505081565b600082600160a060020a038116151561038657600080fd5b8215806103b65750600160a060020a03338116600090815260066020908152604080832093881683529290522054155b15156103c157600080fd5b600160a060020a03338116600081815260066020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a3600191505b5092915050565b60005433600160a060020a0390811691161461044857600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60045481565b600083600160a060020a038116151561049557600080fd5b83600160a060020a03811615156104ab57600080fd5b600160a060020a0386166000908152600560205260409020548490108015906104d45750600084115b156105da57600160a060020a038087166000908152600660209081526040808320339094168352929052205461050a90856107d3565b600160a060020a03808816600081815260066020908152604080832033909516835293815283822094909455908152600590925290205461054b90856107d3565b600160a060020a03808816600090815260056020526040808220939093559087168152205461057a90856107e5565b600160a060020a03808716600081815260056020526040908190209390935591908816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9087905190815260200160405180910390a3600192506105df565b600092505b50509392505050565b60035460ff1681565b60408051908101604052600381527f302e310000000000000000000000000000000000000000000000000000000000602082015281565b60056020526000908152604090205481565b600054600160a060020a031681565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103665780601f1061033b57610100808354040283529160200191610366565b600082600160a060020a03811615156106cc57600080fd5b600160a060020a0333166000908152600560205260409020548390108015906106f55750600083115b156107ad57600160a060020a03331660009081526005602052604090205461071d90846107d3565b600160a060020a03338116600090815260056020526040808220939093559086168152205461074c90846107e5565b600160a060020a0380861660008181526005602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a360019150610426565b60009150610426565b600660209081526000928352604080842090915290825290205481565b6000818310156107df57fe5b50900390565b6000828201838110156107f457fe5b93925050505600a165627a7a723058206bee1c1329e12ca3c64af6252f8b6fc1e085a51886cad54243e12e808425232c0029000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000024150e39800400000000000000000000000000000000000000000000000000000000000000000005546f64617900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035444590000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000024150e39800400000000000000000000000000000000000000000000000000000000000000000005546f64617900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035444590000000000000000000000000000000000000000000000000000000000"
}