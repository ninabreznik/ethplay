{
  "address": "0xc9b965df61f634b35e34043545572f468af6599d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TenToken",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-16\n*/\n\npragma solidity >0.5.0;\n// ------------------------------------------------------------------------\n// TEN Token by Tentech Group OU Limited.\n// An ERC20 standard\n//\n// author: Tentech Group Team\n// contact: Jason Nguyen [emailÂ protected]\n//--------------------------------------------------------------------------\nlibrary SafeMath {\n    /**\n     * @dev Multiplies two unsigned integers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Adds two unsigned integers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    /**\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n    \n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a>b) return a;\n        return b;\n    }\n}\ncontract ERC20RcvContract { \n    function tokenFallback(address _from, uint _value) public;\n}\n\ncontract ERC20  {\n\n    using SafeMath for uint;\n\n    /// @notice check if the address  `_addr` is a contract or not\n    /// @param _addr The address of the recipient\n    function isContract(address _addr) private view returns (bool) {\n        uint length;\n         assembly {\n             //retrieve the size of the code on target address, this needs assembly\n             length := extcodesize(_addr)\n         }\n         return (length>0);\n    }\n \n    /// @notice send `_value` token to `_to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    function transfer(address _to, uint _value) public returns (bool){\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        if(isContract(_to)) {\n            ERC20RcvContract receiver = ERC20RcvContract(_to);\n            receiver.tokenFallback(msg.sender, _value);\n        }\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint _value) public returns (bool){\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\n        if(isContract(_to)) {\n            ERC20RcvContract receiver = ERC20RcvContract(_to);\n            receiver.tokenFallback(msg.sender, _value);\n        }\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) public view returns (uint balance) {\n        return balances[_owner];\n    }\n\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _value The amount of wei to be approved for transfer\n    /// @return Whether the approval was successful or not\n    function approve(address _spender, uint _value) public returns (bool){\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /// @param _owner The address of the account owning tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address _owner, address _spender) public view returns (uint remaining) {\n      return allowed[_owner][_spender];\n    }\n\n    mapping (address => uint) balances;\n    mapping (address => mapping (address => uint)) allowed;\n    uint public totalSupply;\n\n    event Transfer(address indexed _from, address indexed _to, uint _value);\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\n}\n\ncontract TenToken is ERC20 { \n\n    string public symbol=\"GDEM\";       \n    string public name =\"TEN Token\";\n\n    uint8 public decimals=6;          \n    address public walletOwner;\n\n    constructor() public \n    {\n        totalSupply = 10**9 * (10**6);  //1 Billion token\n        balances[msg.sender] = totalSupply;               \n        walletOwner = msg.sender;\n        // [EPI20 standard] https://eips.ethereum.org/EIPS/eip-20\n        // A token contract which creates new tokens SHOULD trigger a Transfer event with the _from address set to 0x0 when tokens are created.\n        emit Transfer(0x0000000000000000000000000000000000000000, walletOwner, totalSupply);\n    }\n\n    // Receice Ether in exchange for tokens \n    function() external payable {\n        revert();\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"walletOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600460808190527f4744454d0000000000000000000000000000000000000000000000000000000060a090815261003e916003919061011f565b506040805180820190915260098082527f54454e20546f6b656e000000000000000000000000000000000000000000000060209092019182526100839160049161011f565b506005805460ff1916600617905534801561009d57600080fd5b5066038d7ea4c6800060028190553360008181526020818152604080832085905560058054610100958602610100600160a81b03199091161790819055815195865290519390046001600160a01b03169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36101ba565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061016057805160ff191683800117855561018d565b8280016001018555821561018d579182015b8281111561018d578251825591602001919060010190610172565b5061019992915061019d565b5090565b6101b791905b8082111561019957600081556001016101a3565b90565b6107cc806101c96000396000f3fe6080604052600436106100915760003560e01c8063313ce56711610059578063313ce5671461020857806370a082311461023357806395d89b4114610266578063a9059cbb1461027b578063dd62ed3e146102b457610091565b806306fdde0314610096578063095ea7b31461012057806318160ddd1461016d5780631ae879e81461019457806323b872dd146101c5575b600080fd5b3480156100a257600080fd5b506100ab6102ef565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e55781810151838201526020016100cd565b50505050905090810190601f1680156101125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012c57600080fd5b506101596004803603604081101561014357600080fd5b506001600160a01b03813516906020013561037d565b604080519115158252519081900360200190f35b34801561017957600080fd5b506101826103e3565b60408051918252519081900360200190f35b3480156101a057600080fd5b506101a96103e9565b604080516001600160a01b039092168252519081900360200190f35b3480156101d157600080fd5b50610159600480360360608110156101e857600080fd5b506001600160a01b038135811691602081013590911690604001356103fd565b34801561021457600080fd5b5061021d610592565b6040805160ff9092168252519081900360200190f35b34801561023f57600080fd5b506101826004803603602081101561025657600080fd5b50356001600160a01b031661059b565b34801561027257600080fd5b506100ab6105b6565b34801561028757600080fd5b506101596004803603604081101561029e57600080fd5b506001600160a01b038135169060200135610611565b3480156102c057600080fd5b50610182600480360360408110156102d757600080fd5b506001600160a01b0381358116916020013516610741565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103755780601f1061034a57610100808354040283529160200191610375565b820191906000526020600020905b81548152906001019060200180831161035857829003601f168201915b505050505081565b3360008181526001602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60025481565b60055461010090046001600160a01b031681565b6001600160a01b038316600090815260208190526040812054610426908363ffffffff61076c16565b6001600160a01b03808616600090815260208190526040808220939093559085168152205461045b908363ffffffff61078116565b6001600160a01b0380851660009081526020818152604080832094909455918716815260018252828120338252909152205461049d908363ffffffff61076c16565b6001600160a01b03851660009081526001602090815260408083203384529091529020556104ca8361079a565b1561053d5760408051600160e01b633b66d02b02815233600482015260248101849052905184916001600160a01b03831691633b66d02b9160448082019260009290919082900301818387803b15801561052357600080fd5b505af1158015610537573d6000803e3d6000fd5b50505050505b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35060019392505050565b60055460ff1681565b6001600160a01b031660009081526020819052604090205490565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103755780601f1061034a57610100808354040283529160200191610375565b33600090815260208190526040812054610631908363ffffffff61076c16565b33600090815260208190526040808220929092556001600160a01b03851681522054610663908363ffffffff61078116565b6001600160a01b0384166000908152602081905260409020556106858361079a565b156106f85760408051600160e01b633b66d02b02815233600482015260248101849052905184916001600160a01b03831691633b66d02b9160448082019260009290919082900301818387803b1580156106de57600080fd5b505af11580156106f2573d6000803e3d6000fd5b50505050505b6040805183815290516001600160a01b0385169133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561077b57600080fd5b50900390565b60008282018381101561079357600080fd5b9392505050565b3b15159056fea165627a7a7230582015eb3ec83aa080bf26b373db58da2535965f32abcb2a68a30b953d00a3fa8bab0029"
}