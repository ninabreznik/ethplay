{
  "address": "0xabe64ec568aeb065d0445b9d76f511a7b5ea2d7f",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SponsoredLeaderboardData",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-14\n*/\n\npragma solidity ^0.4.17;\ncontract AccessControl {\n    address public creatorAddress;\n    uint16 public totalSeraphims = 0;\n    mapping (address => bool) public seraphims;\n\n    bool public isMaintenanceMode = true;\n \n    modifier onlyCREATOR() {\n        require(msg.sender == creatorAddress);\n        _;\n    }\n\n    modifier onlySERAPHIM() {\n        require(seraphims[msg.sender] == true);\n        _;\n    }\n    \n    modifier isContractActive {\n        require(!isMaintenanceMode);\n        _;\n    }\n    \n    // Constructor\n    function AccessControl() public {\n        creatorAddress = msg.sender;\n    }\n    \n\n    function addSERAPHIM(address _newSeraphim) onlyCREATOR public {\n        if (seraphims[_newSeraphim] == false) {\n            seraphims[_newSeraphim] = true;\n            totalSeraphims += 1;\n        }\n    }\n    \n    function removeSERAPHIM(address _oldSeraphim) onlyCREATOR public {\n        if (seraphims[_oldSeraphim] == true) {\n            seraphims[_oldSeraphim] = false;\n            totalSeraphims -= 1;\n        }\n    }\n\n    function updateMaintenanceMode(bool _isMaintaining) onlyCREATOR public {\n        isMaintenanceMode = _isMaintaining;\n    }\n\n  \n} \ncontract SafeMath {\n    function safeAdd(uint x, uint y) pure internal returns(uint) {\n      uint z = x + y;\n      assert((z >= x) && (z >= y));\n      return z;\n    }\n\n    function safeSubtract(uint x, uint y) pure internal returns(uint) {\n      assert(x >= y);\n      uint z = x - y;\n      return z;\n    }\n\n    function safeMult(uint x, uint y) pure internal returns(uint) {\n      uint z = x * y;\n      assert((x == 0)||(z/x == y));\n      return z;\n    }\n    \n     \n\n    function getRandomNumber(uint16 maxRandom, uint8 min, address privateAddress) constant public returns(uint8) {\n        uint256 genNum = uint256(block.blockhash(block.number-1)) + uint256(privateAddress);\n        return uint8(genNum % (maxRandom - min + 1)+min);\n    }\n}\n\ncontract Enums {\n    enum ResultCode {\n        SUCCESS,\n        ERROR_CLASS_NOT_FOUND,\n        ERROR_LOW_BALANCE,\n        ERROR_SEND_FAIL,\n        ERROR_NOT_OWNER,\n        ERROR_NOT_ENOUGH_MONEY,\n        ERROR_INVALID_AMOUNT\n    }\n\n    enum AngelAura { \n        Blue, \n        Yellow, \n        Purple, \n        Orange, \n        Red, \n        Green \n    }\n}\n\n\ncontract ISponsoredLeaderboardData is AccessControl {\n\n  \n    uint16 public totalLeaderboards;\n    \n    //The reserved balance is the total balance outstanding on all open leaderboards. \n    //We keep track of this figure to prevent the developers from pulling out money currently pledged\n    uint public contractReservedBalance;\n    \n\n    function setMinMaxDays(uint8 _minDays, uint8 _maxDays) external ;\n        function openLeaderboard(uint8 numDays, string message) external payable ;\n        function closeLeaderboard(uint16 leaderboardId) onlySERAPHIM external;\n        \n        function setMedalsClaimed(uint16 leaderboardId) onlySERAPHIM external ;\n    function withdrawEther() onlyCREATOR external;\n  function getTeamFromLeaderboard(uint16 leaderboardId, uint8 rank) public constant returns (uint64 angelId, uint64 petId, uint64 accessoryId) ;\n    \n    function getLeaderboard(uint16 id) public constant returns (uint startTime, uint endTime, bool isLive, address sponsor, uint prize, uint8 numTeams, string message, bool medalsClaimed);\n      function newTeamOnEnd(uint16 leaderboardId, uint64 angelId, uint64 petId, uint64 accessoryId) onlySERAPHIM external;\n       function switchRankings (uint16 leaderboardId, uint8 spot,uint64 angel1ID, uint64 pet1ID, uint64 accessory1ID,uint64 angel2ID,uint64 pet2ID,uint64 accessory2ID) onlySERAPHIM external;\n       function verifyPosition(uint16 leaderboardId, uint8 spot, uint64 angelID) external constant returns (bool); \n        function angelOnLeaderboards(uint64 angelID) external constant returns (bool);\n         function petOnLeaderboards(uint64 petID) external constant returns (bool);\n         function accessoryOnLeaderboards(uint64 accessoryID) external constant returns (bool) ;\n    function safeMult(uint x, uint y) pure internal returns(uint) ;\n     function SafeDiv(uint256 a, uint256 b) internal pure returns (uint256) ;\n    function getTotalLeaderboards() public constant returns (uint16);\n      \n  \n        \n   \n        \n        \n        \n   \n      \n        \n   \n}\ncontract IAngelCardData is AccessControl, Enums {\n    uint8 public totalAngelCardSeries;\n    uint64 public totalAngels;\n\n    \n    // write\n    // angels\n    function createAngelCardSeries(uint8 _angelCardSeriesId, uint _basePrice,  uint64 _maxTotal, uint8 _baseAura, uint16 _baseBattlePower, uint64 _liveTime) onlyCREATOR external returns(uint8);\n    function updateAngelCardSeries(uint8 _angelCardSeriesId, uint64 _newPrice, uint64 _newMaxTotal) onlyCREATOR external;\n    function setAngel(uint8 _angelCardSeriesId, address _owner, uint _price, uint16 _battlePower) onlySERAPHIM external returns(uint64);\n    function addToAngelExperienceLevel(uint64 _angelId, uint _value) onlySERAPHIM external;\n    function setAngelLastBattleTime(uint64 _angelId) onlySERAPHIM external;\n    function setAngelLastVsBattleTime(uint64 _angelId) onlySERAPHIM external;\n    function setLastBattleResult(uint64 _angelId, uint16 _value) onlySERAPHIM external;\n    function addAngelIdMapping(address _owner, uint64 _angelId) private;\n    function transferAngel(address _from, address _to, uint64 _angelId) onlySERAPHIM public returns(ResultCode);\n    function ownerAngelTransfer (address _to, uint64 _angelId)  public;\n    function updateAngelLock (uint64 _angelId, bool newValue) public;\n    function removeCreator() onlyCREATOR external;\n\n    // read\n    function getAngelCardSeries(uint8 _angelCardSeriesId) constant public returns(uint8 angelCardSeriesId, uint64 currentAngelTotal, uint basePrice, uint64 maxAngelTotal, uint8 baseAura, uint baseBattlePower, uint64 lastSellTime, uint64 liveTime);\n    function getAngel(uint64 _angelId) constant public returns(uint64 angelId, uint8 angelCardSeriesId, uint16 battlePower, uint8 aura, uint16 experience, uint price, uint64 createdTime, uint64 lastBattleTime, uint64 lastVsBattleTime, uint16 lastBattleResult, address owner);\n    function getOwnerAngelCount(address _owner) constant public returns(uint);\n    function getAngelByIndex(address _owner, uint _index) constant public returns(uint64);\n    function getTotalAngelCardSeries() constant public returns (uint8);\n    function getTotalAngels() constant public returns (uint64);\n    function getAngelLockStatus(uint64 _angelId) constant public returns (bool);\n}\n\n//Note - due to not yet implemented features we could not store teams in an array. \n\ncontract SponsoredLeaderboardData is ISponsoredLeaderboardData {\n\n    /*** DATA TYPES ***/\n        address public angelCardDataContract = 0x6D2E76213615925c5fc436565B5ee788Ee0E86DC;\n    \n      struct Team {\n        uint64 angelId;\n        uint64 petId;\n        uint64 accessoryId;\n    }\n    \n      struct Leaderboard {\n        uint startTime;\n        uint endTime;\n        Team rank0;\n        Team rank1;\n        Team rank2;\n        Team rank3;\n        bool isLive;\n        address sponsor;\n        uint prize;\n        uint16 id;\n        uint8 numTeams;\n        string message;\n        bool medalsClaimed;\n        \n    }\n\n    //main storage\n    Leaderboard []  Leaderboards;\n    \n    uint16 public totalLeaderboards;\n    \n    uint16 minDays= 4;\n    uint16 maxDays = 10;\n    \n    //The reserved balance is the total balance outstanding on all open leaderboards. \n    //We keep track of this figure to prevent the developers from pulling out money currently pledged\n    uint public contractReservedBalance;\n    \n    \n    mapping (uint64 => bool) angelsOnLeaderboards;\n    mapping (uint64 => bool) petsOnLeaderboards;\n    mapping (uint64 => bool) accessoriesOnLeaderboards;\n    \n    \n    \n      // write functions\n    function setMinMaxDays(uint8 _minDays, uint8 _maxDays) external {\n        minDays = _minDays;\n        maxDays = _maxDays;\n       }\n\n  \n        function openLeaderboard(uint8 numDays, string message) external payable {\n            // This function is called by the sponsor to create the Leaderboard by sending money. \n            \n           if (msg.value < 10000000000000000) {revert();}\n         \n         if ((numDays < minDays) || (numDays > maxDays)) {revert();}\n            Leaderboard memory leaderboard;\n            leaderboard.startTime = now;\n            leaderboard.endTime = (now + (numDays * 86400));\n            leaderboard.isLive = true;\n            leaderboard.sponsor = msg.sender;\n            leaderboard.prize = msg.value;\n            leaderboard.message = message;\n            leaderboard.id = totalLeaderboards;\n            \n            leaderboard.medalsClaimed= false;\n            leaderboard.numTeams = 4;\n    \n           Leaderboards.push(leaderboard);\n           \n            Team memory team;\n            team.angelId = 1;\n            team.petId = 1;\n            team.accessoryId = 0;\n            Leaderboards[totalLeaderboards].rank1 = team;\n            Leaderboards[totalLeaderboards].rank2 = team;\n            Leaderboards[totalLeaderboards].rank3 = team;\n            Leaderboards[totalLeaderboards].rank0 = team;\n            totalLeaderboards +=1;\n            contractReservedBalance += msg.value;\n           \n            \n        }\n        \n        function closeLeaderboard(uint16 leaderboardId) onlySERAPHIM external {\n           //will be called by the SponsoredLeaderboards contract with a certain chance after the minimum battle time. \n           \n            Leaderboard memory leaderboard;\n            leaderboard = Leaderboards[leaderboardId];\n            if (now < leaderboard.endTime) {revert();}\n            if (leaderboard.isLive = false) {revert();}\n            Leaderboards[leaderboardId].isLive = false;\n             IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\n             \n             address owner1;\n             address owner2;\n             address owner3;\n             address owner4;\n             \n            (,,,,,,,,,,owner1) = angelCardData.getAngel(Leaderboards[leaderboardId].rank0.angelId);\n            (,,,,,,,,,,owner2) = angelCardData.getAngel(Leaderboards[leaderboardId].rank1.angelId);\n            (,,,,,,,,,,owner3) = angelCardData.getAngel(Leaderboards[leaderboardId].rank2.angelId);\n            (,,,,,,,,,,owner4) = angelCardData.getAngel(Leaderboards[leaderboardId].rank3.angelId);\n            uint prize = Leaderboards[leaderboardId].prize;\n            \n            owner1.transfer(SafeDiv(safeMult(prize,45), 100));\n            owner2.transfer(SafeDiv(safeMult(prize,25), 100));\n            owner3.transfer(SafeDiv(safeMult(prize,15), 100));\n            owner4.transfer(SafeDiv(safeMult(prize,5), 100));\n    \n            //Free up cards to be on other Leaderboards\n            \n        angelsOnLeaderboards[Leaderboards[leaderboardId].rank0.angelId] = false;\n        petsOnLeaderboards[Leaderboards[leaderboardId].rank0.petId] = false;\n        accessoriesOnLeaderboards[Leaderboards[leaderboardId].rank0.accessoryId] = false;\n         \n             \n        angelsOnLeaderboards[Leaderboards[leaderboardId].rank1.angelId] = false;\n        petsOnLeaderboards[Leaderboards[leaderboardId].rank1.petId] = false;\n        accessoriesOnLeaderboards[Leaderboards[leaderboardId].rank1.accessoryId] = false;\n        \n            \n        angelsOnLeaderboards[Leaderboards[leaderboardId].rank2.angelId] = false;\n        petsOnLeaderboards[Leaderboards[leaderboardId].rank2.petId] = false;\n        accessoriesOnLeaderboards[Leaderboards[leaderboardId].rank2.accessoryId] = false;\n        \n            \n        angelsOnLeaderboards[Leaderboards[leaderboardId].rank3.angelId] = false;\n        petsOnLeaderboards[Leaderboards[leaderboardId].rank3.petId] = false;\n        accessoriesOnLeaderboards[Leaderboards[leaderboardId].rank3.accessoryId] = false;\n            \n            \n            \n            contractReservedBalance= contractReservedBalance -  SafeDiv(safeMult(prize,90), 100);\n        }\n  \n        \n        function setMedalsClaimed(uint16 leaderboardId) onlySERAPHIM external {\n            Leaderboards[leaderboardId].medalsClaimed = true;\n        }\n        \nfunction withdrawEther() external onlyCREATOR {\n    //make sure we can't transfer out balance for leaderboards that aren't open. \n    creatorAddress.transfer(this.balance-contractReservedBalance);\n}\n\n    // Call to get the specified team at a certain position of a certain board. \n   function getTeamFromLeaderboard(uint16 leaderboardId, uint8 rank) public constant returns (uint64 angelId, uint64 petId, uint64 accessoryId)   {\n      \n        if ((leaderboardId <0) || (rank <0) || (rank >3) || (leaderboardId > totalLeaderboards)) {revert();}\n        if (rank == 0) {\n       angelId = Leaderboards[leaderboardId].rank0.angelId;\n       petId = Leaderboards[leaderboardId].rank0.petId;\n       accessoryId = Leaderboards[leaderboardId].rank0.accessoryId;\n       return;\n        }\n         if (rank == 1) {\n       angelId = Leaderboards[leaderboardId].rank1.angelId;\n       petId = Leaderboards[leaderboardId].rank1.petId;\n       accessoryId = Leaderboards[leaderboardId].rank1.accessoryId;\n       return;\n        }\n          if (rank == 2) {\n       angelId = Leaderboards[leaderboardId].rank2.angelId;\n       petId = Leaderboards[leaderboardId].rank2.petId;\n       accessoryId = Leaderboards[leaderboardId].rank2.accessoryId;\n       return;\n        }\n          if (rank == 3) {\n       angelId = Leaderboards[leaderboardId].rank3.angelId;\n       petId = Leaderboards[leaderboardId].rank3.petId;\n       accessoryId = Leaderboards[leaderboardId].rank3.accessoryId;\n       return;\n        }\n    \n\n   }\n    function getLeaderboard(uint16 id) public constant returns (uint startTime, uint endTime, bool isLive, address sponsor, uint prize, uint8 numTeams, string message, bool medalsClaimed) {\n            Leaderboard memory leaderboard;\n            leaderboard = Leaderboards[id];\n            startTime = leaderboard.startTime;\n            endTime = leaderboard.endTime;\n            isLive = leaderboard.isLive;\n            sponsor = leaderboard.sponsor;\n            prize = leaderboard.prize;\n            numTeams = leaderboard.numTeams;\n            message = leaderboard.message;\n            medalsClaimed = leaderboard.medalsClaimed;\n    }\n    \n     \n\n\n        function newTeamOnEnd(uint16 leaderboardId, uint64 angelId, uint64 petId, uint64 accessoryId)  onlySERAPHIM external  {\n         //to be used when a team successfully challenges the last spot and knocks the prvious team out.   \n         \n                Team memory team;\n               //remove old team from mappings\n                team = Leaderboards[leaderboardId].rank3;\n                angelsOnLeaderboards[Leaderboards[leaderboardId].rank3.angelId] = false;\n               petsOnLeaderboards[Leaderboards[leaderboardId].rank3.petId] = false;\n               accessoriesOnLeaderboards[Leaderboards[leaderboardId].rank3.accessoryId] = false;\n                \n                //Add new team to end\n              Leaderboards[leaderboardId].rank3.angelId = angelId;\n              Leaderboards[leaderboardId].rank3.petId = petId;\n              Leaderboards[leaderboardId].rank3.accessoryId = accessoryId;\n              \n              angelsOnLeaderboards[angelId] = true;\n               petsOnLeaderboards[petId] = true;\n               accessoriesOnLeaderboards[accessoryId] = true;\n           \n            \n            \n        }\n        function switchRankings (uint16 leaderboardId, uint8 spot,uint64 angel1ID, uint64 pet1ID, uint64 accessory1ID,uint64 angel2ID,uint64 pet2ID,uint64 accessory2ID ) onlySERAPHIM external {\n        //put team 1 from spot to spot+1 and put team 2 to spot. \n    \n                Team memory team;\n                team.angelId = angel1ID;\n                team.petId = pet1ID;\n                team.accessoryId = accessory1ID;\n                if (spot == 0) {Leaderboards[leaderboardId].rank1 = team;}\n                if (spot == 1) {Leaderboards[leaderboardId].rank2 = team;}\n                if (spot == 2) {Leaderboards[leaderboardId].rank3 = team;}\n                \n                team.angelId = angel2ID;\n                team.petId = pet2ID;\n                team.accessoryId = accessory2ID;\n            \n                if (spot == 0) {Leaderboards[leaderboardId].rank0 = team;}\n                if (spot == 1) {Leaderboards[leaderboardId].rank1 = team;}\n                if (spot == 2) {Leaderboards[leaderboardId].rank2 = team;}\n        \n        }\n        \n        \n        function verifyPosition(uint16 leaderboardId, uint8 spot, uint64 angelID) external constant returns (bool) {\n          \n               if (spot == 0) {\n                   if (Leaderboards[leaderboardId].rank0.angelId == angelID) {return true;}\n               }\n               if (spot == 1) {\n                   if (Leaderboards[leaderboardId].rank1.angelId == angelID) {return true;}\n               }\n               if (spot == 2) {\n                   if (Leaderboards[leaderboardId].rank2.angelId == angelID) {return true;}\n               }\n                 if (spot == 3) {\n                   if (Leaderboards[leaderboardId].rank3.angelId == angelID) {return true;}\n               }\n               \n               \n                return false;\n                \n        }\n        \n        //each angel can only be on ONE sponsored leaderboard at a time. \n        function angelOnLeaderboards(uint64 angelID) external constant returns (bool) {\n           \n            return angelsOnLeaderboards[angelID]; \n        }\n        \n        //each pet can only be on ONE sponsored leaderboard at a time. \n         function petOnLeaderboards(uint64 petID) external constant returns (bool) {\n           \n            return petsOnLeaderboards[petID]; \n        }\n        \n        //Each Accessory can only be on one sponsored leaderboard\n         function accessoryOnLeaderboards(uint64 accessoryID) external constant returns (bool) {\n           \n            return accessoriesOnLeaderboards[accessoryID]; \n        }\n        \n       \n    \n    function safeMult(uint x, uint y) pure internal returns(uint) {\n      uint z = x * y;\n      assert((x == 0)||(z/x == y));\n      return z;\n    }\n    \n     function SafeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n    /// Read access\n     }\n   \n   \n    function getTotalLeaderboards() public constant returns (uint16) {\n        return totalLeaderboards;\n    }\n      \n  \n        \n   \n        \n        \n        \n   \n      \n        \n   \n}",
  "bytecode": "606060405260008060146101000a81548161ffff021916908361ffff1602179055506001600260006101000a81548160ff021916908315150217905550736d2e76213615925c5fc436565b5ee788ee0e86dc600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600660026101000a81548161ffff021916908361ffff160217905550600a600660046101000a81548161ffff021916908361ffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506142bf8061011c6000396000f30060606040526004361061013e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630dbda70b1461014357806323a1e00e146101885780632ef0a28d146101b757806337cc77611461020857806343d6add11461023157806345e26105146102765780635007364f1461029b5780636b6cc239146103a65780637123691e146103d35780637362377b1461040c578063a946d7bb14610421578063bbc878c414610448578063c95f79ba14610479578063caa774ed146104a0578063d34a412c146104e5578063d356a28b1461058a578063db9dfb35146105c3578063dc74665e14610623578063e0036d1d14610654578063e2985596146106b2578063e927fc5c14610707578063ecd57ec11461075c578063fd7903a01461078e578063ff29c1041461081f575b600080fd5b341561014e57600080fd5b61016e600480803567ffffffffffffffff16906020019091905050610850565b604051808215151515815260200191505060405180910390f35b6101b5600480803560ff16906020019091908035906020019082018035906020019190919290505061088e565b005b34156101c257600080fd5b6101ee600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061114c565b604051808215151515815260200191505060405180910390f35b341561021357600080fd5b61021b61116c565b6040518082815260200191505060405180910390f35b341561023c57600080fd5b61025c600480803567ffffffffffffffff16906020019091905050611172565b604051808215151515815260200191505060405180910390f35b341561028157600080fd5b610299600480803515159060200190919050506111b0565b005b34156102a657600080fd5b6102c0600480803561ffff16906020019091905050611228565b60405180898152602001888152602001871515151581526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018460ff1660ff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b83811015610364578082015181840152602081019050610349565b50505050905090810190601f1680156103915780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34156103b157600080fd5b6103b96116f0565b604051808215151515815260200191505060405180910390f35b34156103de57600080fd5b61040a600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611703565b005b341561041757600080fd5b61041f611844565b005b341561042c57600080fd5b610446600480803561ffff1690602001909190505061191d565b005b341561045357600080fd5b61045b6119bc565b604051808261ffff1661ffff16815260200191505060405180910390f35b341561048457600080fd5b61049e600480803561ffff169060200190919050506119d0565b005b34156104ab57600080fd5b6104cb600480803567ffffffffffffffff16906020019091905050612c26565b604051808215151515815260200191505060405180910390f35b34156104f057600080fd5b610588600480803561ffff1690602001909190803560ff1690602001909190803567ffffffffffffffff1690602001909190803567ffffffffffffffff1690602001909190803567ffffffffffffffff1690602001909190803567ffffffffffffffff1690602001909190803567ffffffffffffffff1690602001909190803567ffffffffffffffff16906020019091905050612c64565b005b341561059557600080fd5b6105c1600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613222565b005b34156105ce57600080fd5b610621600480803561ffff1690602001909190803567ffffffffffffffff1690602001909190803567ffffffffffffffff1690602001909190803567ffffffffffffffff16906020019091905050613362565b005b341561062e57600080fd5b6106366137b3565b604051808261ffff1661ffff16815260200191505060405180910390f35b341561065f57600080fd5b610698600480803561ffff1690602001909190803560ff1690602001909190803567ffffffffffffffff169060200190919050506137c7565b604051808215151515815260200191505060405180910390f35b34156106bd57600080fd5b6106c5613988565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561071257600080fd5b61071a6139ae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561076757600080fd5b61078c600480803560ff1690602001909190803560ff169060200190919050506139d3565b005b341561079957600080fd5b6107bf600480803561ffff1690602001909190803560ff16906020019091905050613a17565b604051808467ffffffffffffffff1667ffffffffffffffff1681526020018367ffffffffffffffff1667ffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff168152602001935050505060405180910390f35b341561082a57600080fd5b610832613d9f565b604051808261ffff1661ffff16815260200191505060405180910390f35b6000600860008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b610896613e05565b61089e613ead565b662386f26fc100003410156108b257600080fd5b600660029054906101000a900461ffff1661ffff168560ff1610806108ed5750600660049054906101000a900461ffff1661ffff168560ff16115b156108f757600080fd5b42826000018181525050620151808560ff160262ffffff16420182602001818152505060018260c0019015159081151581525050338260e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050348261010001818152505083838080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050826101600181905250600660009054906101000a900461ffff1682610120019061ffff16908161ffff1681525050600082610180019015159081151581525050600482610140019060ff16908160ff168152505060058054806001018281610a099190613eed565b91600052602060002090600b02016000849091909150600082015181600001556020820151816001015560408201518160020160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505060608201518160030160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505060808201518160040160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505060a08201518160050160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505060c08201518160060160006101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010082015181600701556101208201518160080160006101000a81548161ffff021916908361ffff1602179055506101408201518160080160026101000a81548160ff021916908360ff160217905550610160820151816009019080519060200190610d68929190613f1f565b5061018082015181600a0160006101000a81548160ff0219169083151502179055505050506001816000019067ffffffffffffffff16908167ffffffffffffffff16815250506001816020019067ffffffffffffffff16908167ffffffffffffffff16815250506000816040019067ffffffffffffffff16908167ffffffffffffffff1681525050806005600660009054906101000a900461ffff1661ffff16815481101515610e1457fe5b90600052602060002090600b020160030160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050806005600660009054906101000a900461ffff1661ffff16815481101515610ed957fe5b90600052602060002090600b020160040160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050806005600660009054906101000a900461ffff1661ffff16815481101515610f9e57fe5b90600052602060002090600b020160050160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050806005600660009054906101000a900461ffff1661ffff1681548110151561106357fe5b90600052602060002090600b020160020160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050506001600660008282829054906101000a900461ffff160192506101000a81548161ffff021916908361ffff160217905550346007600082825401925050819055505050505050565b60016020528060005260406000206000915054906101000a900460ff1681565b60075481565b6000600a60008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561120b57600080fd5b80600260006101000a81548160ff02191690831515021790555050565b600080600080600080611239613f9f565b6000611243613e05565b60058a61ffff1681548110151561125657fe5b90600052602060002090600b02016101a06040519081016040529081600082015481526020016001820154815260200160028201606060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050815260200160038201606060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050815260200160048201606060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050815260200160058201606060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505081526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600782015481526020016008820160009054906101000a900461ffff1661ffff1661ffff1681526020016008820160029054906101000a900460ff1660ff1660ff168152602001600982018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116825780601f1061165757610100808354040283529160200191611682565b820191906000526020600020905b81548152906001019060200180831161166557829003601f168201915b50505050508152602001600a820160009054906101000a900460ff161515151581525050905080600001519850806020015197508060c0015196508060e001519550806101000151945080610140015193508061016001519250806101800151915050919395975091939597565b600260009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561175e57600080fd5b60011515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415611841576000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600060148282829054906101000a900461ffff160392506101000a81548161ffff021916908361ffff1602179055505b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561189f57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6007543073ffffffffffffffffffffffffffffffffffffffff1631039081150290604051600060405180830381858888f19350505050151561191b57600080fd5b565b60011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561197c57600080fd5b600160058261ffff1681548110151561199157fe5b90600052602060002090600b0201600a0160006101000a81548160ff02191690831515021790555050565b600060149054906101000a900461ffff1681565b6119d8613e05565b60008060008060008060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515611a4057600080fd5b60058861ffff16815481101515611a5357fe5b90600052602060002090600b02016101a06040519081016040529081600082015481526020016001820154815260200160028201606060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050815260200160038201606060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050815260200160048201606060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050815260200160058201606060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505081526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600782015481526020016008820160009054906101000a900461ffff1661ffff1661ffff1681526020016008820160029054906101000a900460ff1660ff1660ff168152602001600982018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e7f5780601f10611e5457610100808354040283529160200191611e7f565b820191906000526020600020905b815481529060010190602001808311611e6257829003601f168201915b50505050508152602001600a820160009054906101000a900460ff16151515158152505096508660200151421015611eb657600080fd5b60008760c0019015159081151581525015611ed057600080fd5b600060058961ffff16815481101515611ee557fe5b90600052602060002090600b020160060160006101000a81548160ff021916908315150217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1695508573ffffffffffffffffffffffffffffffffffffffff16639d06935360058a61ffff16815481101515611f6157fe5b90600052602060002090600b020160020160000160009054906101000a900467ffffffffffffffff16600060405161016001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808267ffffffffffffffff1667ffffffffffffffff16815260200191505061016060405180830381600087803b1515611ffa57600080fd5b6102c65a03f1151561200b57600080fd5b505050604051805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190509091929394959697989950909192939495969798509091929394959697509091929394959650909192939495509091929394509091929350909192509091509050809550508573ffffffffffffffffffffffffffffffffffffffff16639d06935360058a61ffff168154811015156120c557fe5b90600052602060002090600b020160030160000160009054906101000a900467ffffffffffffffff16600060405161016001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808267ffffffffffffffff1667ffffffffffffffff16815260200191505061016060405180830381600087803b151561215e57600080fd5b6102c65a03f1151561216f57600080fd5b505050604051805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190509091929394959697989950909192939495969798509091929394959697509091929394959650909192939495509091929394509091929350909192509091509050809450508573ffffffffffffffffffffffffffffffffffffffff16639d06935360058a61ffff1681548110151561222957fe5b90600052602060002090600b020160040160000160009054906101000a900467ffffffffffffffff16600060405161016001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808267ffffffffffffffff1667ffffffffffffffff16815260200191505061016060405180830381600087803b15156122c257600080fd5b6102c65a03f115156122d357600080fd5b505050604051805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190602001805190509091929394959697989950909192939495969798509091929394959697509091929394959650909192939495509091929394509091929350909192509091509050809350508573ffffffffffffffffffffffffffffffffffffffff16639d06935360058a61ffff1681548110151561238d57fe5b90600052602060002090600b020160050160000160009054906101000a900467ffffffffffffffff16600060405161016001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808267ffffffffffffffff1667ffffffffffffffff16815260200191505061016060405180830381600087803b151561242657600080fd5b6102c65a03f1151561243757600080fd5b5050506040518051906020018051906020018051906020018051906020018051906020018051906020018051906020018051906020018051906020018051906020018051905090919293949596979899509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508092505060058861ffff168154811015156124d557fe5b90600052602060002090600b02016007015490508473ffffffffffffffffffffffffffffffffffffffff166108fc61251861251184602d613db7565b6064613dea565b9081150290604051600060405180830381858888f19350505050151561253d57600080fd5b8373ffffffffffffffffffffffffffffffffffffffff166108fc61256c612565846019613db7565b6064613dea565b9081150290604051600060405180830381858888f19350505050151561259157600080fd5b8273ffffffffffffffffffffffffffffffffffffffff166108fc6125c06125b984600f613db7565b6064613dea565b9081150290604051600060405180830381858888f1935050505015156125e557600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc61261461260d846005613db7565b6064613dea565b9081150290604051600060405180830381858888f19350505050151561263957600080fd5b60006008600060058b61ffff1681548110151561265257fe5b90600052602060002090600b020160020160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060006009600060058b61ffff168154811015156126cd57fe5b90600052602060002090600b020160020160000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600a600060058b61ffff1681548110151561274857fe5b90600052602060002090600b020160020160000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060006008600060058b61ffff168154811015156127c357fe5b90600052602060002090600b020160030160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060006009600060058b61ffff1681548110151561283e57fe5b90600052602060002090600b020160030160000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600a600060058b61ffff168154811015156128b957fe5b90600052602060002090600b020160030160000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060006008600060058b61ffff1681548110151561293457fe5b90600052602060002090600b020160040160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060006009600060058b61ffff168154811015156129af57fe5b90600052602060002090600b020160040160000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600a600060058b61ffff16815481101515612a2a57fe5b90600052602060002090600b020160040160000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060006008600060058b61ffff16815481101515612aa557fe5b90600052602060002090600b020160050160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060006009600060058b61ffff16815481101515612b2057fe5b90600052602060002090600b020160050160000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600a600060058b61ffff16815481101515612b9b57fe5b90600052602060002090600b020160050160000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612c12612c0b82605a613db7565b6064613dea565b600754036007819055505050505050505050565b6000600960008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b612c6c613ead565b60011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515612ccb57600080fd5b86816000019067ffffffffffffffff16908167ffffffffffffffff168152505085816020019067ffffffffffffffff16908167ffffffffffffffff168152505084816040019067ffffffffffffffff16908167ffffffffffffffff168152505060008860ff161415612ded578060058a61ffff16815481101515612d4b57fe5b90600052602060002090600b020160030160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050505b60018860ff161415612eaf578060058a61ffff16815481101515612e0d57fe5b90600052602060002090600b020160040160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050505b60028860ff161415612f71578060058a61ffff16815481101515612ecf57fe5b90600052602060002090600b020160050160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050505b83816000019067ffffffffffffffff16908167ffffffffffffffff168152505082816020019067ffffffffffffffff16908167ffffffffffffffff168152505081816040019067ffffffffffffffff16908167ffffffffffffffff168152505060008860ff161415613093578060058a61ffff16815481101515612ff157fe5b90600052602060002090600b020160020160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050505b60018860ff161415613155578060058a61ffff168154811015156130b357fe5b90600052602060002090600b020160030160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050505b60028860ff161415613217578060058a61ffff1681548110151561317557fe5b90600052602060002090600b020160040160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050505b505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561327d57600080fd5b60001515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141561335f5760018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600060148282829054906101000a900461ffff160192506101000a81548161ffff021916908361ffff1602179055505b50565b61336a613ead565b60011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156133c957600080fd5b60058561ffff168154811015156133dc57fe5b90600052602060002090600b0201600501606060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905060006008600060058861ffff168154811015156134aa57fe5b90600052602060002090600b020160050160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060006009600060058861ffff1681548110151561352557fe5b90600052602060002090600b020160050160000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600a600060058861ffff168154811015156135a057fe5b90600052602060002090600b020160050160000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508360058661ffff1681548110151561361657fe5b90600052602060002090600b020160050160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508260058661ffff1681548110151561366457fe5b90600052602060002090600b020160050160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508160058661ffff168154811015156136b257fe5b90600052602060002090600b020160050160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600860008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600960008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600a60008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050505050565b600660009054906101000a900461ffff1681565b6000808360ff161415613835578167ffffffffffffffff1660058561ffff168154811015156137f257fe5b90600052602060002090600b020160020160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614156138345760019050613981565b5b60018360ff1614156138a2578167ffffffffffffffff1660058561ffff1681548110151561385f57fe5b90600052602060002090600b020160030160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614156138a15760019050613981565b5b60028360ff16141561390f578167ffffffffffffffff1660058561ffff168154811015156138cc57fe5b90600052602060002090600b020160040160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141561390e5760019050613981565b5b60038360ff16141561397c578167ffffffffffffffff1660058561ffff1681548110151561393957fe5b90600052602060002090600b020160050160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141561397b5760019050613981565b5b600090505b9392505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8160ff16600660026101000a81548161ffff021916908361ffff1602179055508060ff16600660046101000a81548161ffff021916908361ffff1602179055505050565b6000806000808561ffff161080613a31575060008460ff16105b80613a3f575060038460ff16115b80613a615750600660009054906101000a900461ffff1661ffff168561ffff16115b15613a6b57600080fd5b60008460ff161415613b365760058561ffff16815481101515613a8a57fe5b90600052602060002090600b020160020160000160009054906101000a900467ffffffffffffffff16925060058561ffff16815481101515613ac857fe5b90600052602060002090600b020160020160000160089054906101000a900467ffffffffffffffff16915060058561ffff16815481101515613b0657fe5b90600052602060002090600b020160020160000160109054906101000a900467ffffffffffffffff169050613d98565b60018460ff161415613c015760058561ffff16815481101515613b5557fe5b90600052602060002090600b020160030160000160009054906101000a900467ffffffffffffffff16925060058561ffff16815481101515613b9357fe5b90600052602060002090600b020160030160000160089054906101000a900467ffffffffffffffff16915060058561ffff16815481101515613bd157fe5b90600052602060002090600b020160030160000160109054906101000a900467ffffffffffffffff169050613d98565b60028460ff161415613ccc5760058561ffff16815481101515613c2057fe5b90600052602060002090600b020160040160000160009054906101000a900467ffffffffffffffff16925060058561ffff16815481101515613c5e57fe5b90600052602060002090600b020160040160000160089054906101000a900467ffffffffffffffff16915060058561ffff16815481101515613c9c57fe5b90600052602060002090600b020160040160000160109054906101000a900467ffffffffffffffff169050613d98565b60038460ff161415613d975760058561ffff16815481101515613ceb57fe5b90600052602060002090600b020160050160000160009054906101000a900467ffffffffffffffff16925060058561ffff16815481101515613d2957fe5b90600052602060002090600b020160050160000160089054906101000a900467ffffffffffffffff16915060058561ffff16815481101515613d6757fe5b90600052602060002090600b020160050160000160109054906101000a900467ffffffffffffffff169050613d98565b5b9250925092565b6000600660009054906101000a900461ffff16905090565b60008082840290506000841480613dd85750828482811515613dd557fe5b04145b1515613de057fe5b8091505092915050565b6000808284811515613df857fe5b0490508091505092915050565b6102a0604051908101604052806000815260200160008152602001613e28613fb3565b8152602001613e35613fb3565b8152602001613e42613fb3565b8152602001613e4f613fb3565b8152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600061ffff168152602001600060ff168152602001613e9e613ff3565b81526020016000151581525090565b606060405190810160405280600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff1681525090565b815481835581811511613f1a57600b0281600b028360005260206000209182019101613f199190614007565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613f6057805160ff1916838001178555613f8e565b82800160010185558215613f8e579182015b82811115613f8d578251825591602001919060010190613f72565b5b509050613f9b9190614226565b5090565b602060405190810160405280600081525090565b606060405190810160405280600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff1681525090565b602060405190810160405280600081525090565b61422391905b8082111561421f57600080820160009055600182016000905560028201600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549067ffffffffffffffff02191690556000820160106101000a81549067ffffffffffffffff0219169055505060038201600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549067ffffffffffffffff02191690556000820160106101000a81549067ffffffffffffffff0219169055505060048201600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549067ffffffffffffffff02191690556000820160106101000a81549067ffffffffffffffff0219169055505060058201600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549067ffffffffffffffff02191690556000820160106101000a81549067ffffffffffffffff021916905550506006820160006101000a81549060ff02191690556006820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560078201600090556008820160006101000a81549061ffff02191690556008820160026101000a81549060ff0219169055600982016000614202919061424b565b600a820160006101000a81549060ff021916905550600b0161400d565b5090565b90565b61424891905b8082111561424457600081600090555060010161422c565b5090565b90565b50805460018160011615610100020316600290046000825580601f106142715750614290565b601f01602090049060005260206000209081019061428f9190614226565b5b505600a165627a7a7230582052b2e29f20114b8937efddb39dc29581d8d13012d09699e1eb9a5ec30c89344d0029"
}