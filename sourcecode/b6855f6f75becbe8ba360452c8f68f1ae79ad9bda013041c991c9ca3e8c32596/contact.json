{
  "address": "0xe6cad13edeaf421b13cee97298c4b0d0902a30c2",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "AdminableProxy",
  "compilerVersion": "v0.5.2+commit.1df8f40c",
  "optimization": true,
  "runs": "2",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-08\n*/\n\n/**\n * Copyright (c) 2018-present, Leap DAO (leapdao.org)\n *\n * This source code is licensed under the Mozilla Public License, version 2,\n * found in the LICENSE file in the root directory of this source tree.\n */\n\npragma solidity 0.5.2;\n\n\n/**\n * @title Proxy\n * @dev Implements delegation of calls to other contracts, with proper\n * forwarding of return values and bubbling of failures.\n * It defines a fallback function that delegates all calls to the address\n * returned by the abstract _implementation() internal function.\n */\ncontract Proxy {\n  /**\n   * @dev Fallback function.\n   * Implemented entirely in `_fallback`.\n   */\n  function () external payable {\n    _fallback();\n  }\n\n  /**\n   * @return The Address of the implementation.\n   */\n  function _implementation() internal view returns (address);\n\n  /**\n   * @dev Delegates execution to an implementation contract.\n   * This is a low level function that doesn't return to its internal call site.\n   * It will return to the external caller whatever the implementation returns.\n   * @param implementation Address to delegate.\n   */\n  function _delegate(address implementation) internal {\n    assembly {\n      // Copy msg.data. We take full control of memory in this inline assembly\n      // block because it will not return to Solidity code. We overwrite the\n      // Solidity scratch pad at memory position 0.\n      calldatacopy(0, 0, calldatasize)\n\n      // Call the implementation.\n      // out and outsize are 0 because we don't know the size yet.\n      let result := delegatecall(gas, implementation, 0, calldatasize, 0, 0)\n\n      // Copy the returned data.\n      returndatacopy(0, 0, returndatasize)\n\n      switch result\n      // delegatecall returns 0 on error.\n      case 0 { revert(0, returndatasize) }\n      default { return(0, returndatasize) }\n    }\n  }\n\n  /**\n   * @dev Function that is run as the first thing in the fallback function.\n   * Can be redefined in derived contracts to add functionality.\n   * Redefinitions must call super._willFallback().\n   */\n  function _willFallback() internal {\n  }\n\n  /**\n   * @dev fallback implementation.\n   * Extracted to enable manual triggering.\n   */\n  function _fallback() internal {\n    _willFallback();\n    _delegate(_implementation());\n  }\n}\n\n/**\n * Utility library of inline functions on addresses\n */\nlibrary Address {\n    /**\n     * Returns whether the target address is a contract\n     * @dev This function will return false if invoked during the constructor of a contract,\n     * as the code is not actually created until after the constructor finishes.\n     * @param account address of the account to check\n     * @return whether the target address is a contract\n     */\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        // XXX Currently there is no better way to check if there is a contract in an address\n        // than to check the size of the code at that address.\n        // See https://ethereum.stackexchange.com/a/14016/36603\n        // for more details about how this works.\n        // TODO Check this again before the Serenity release, because all addresses will be\n        // contracts then.\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}\n\n/**\n * @title UpgradeabilityProxy\n * @dev This contract implements a proxy that allows to change the\n * implementation address to which it will delegate.\n * Such a change is called an implementation upgrade.\n */\ncontract UpgradeabilityProxy is Proxy {\n  /**\n   * @dev Emitted when the implementation is upgraded.\n   * @param implementation Address of the new implementation.\n   */\n  event Upgraded(address indexed implementation);\n\n  /**\n   * @dev Storage slot with the address of the current implementation.\n   * This is the keccak-256 hash of \"org.zeppelinos.proxy.implementation\", and is\n   * validated in the constructor.\n   */\n  bytes32 private constant IMPLEMENTATION_SLOT = 0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3;\n\n  /**\n   * @dev Contract constructor.\n   * @param _implementation Address of the initial implementation.\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\n   */\n  constructor(address _implementation, bytes memory _data) public payable {\n    assert(IMPLEMENTATION_SLOT == keccak256(\"org.zeppelinos.proxy.implementation\"));\n    _setImplementation(_implementation);\n    if (_data.length > 0) {\n      bool rv;\n      (rv,) = _implementation.delegatecall(_data);\n      require(rv);\n    }\n  }\n\n  /**\n   * @dev Returns the current implementation.\n   * @return Address of the current implementation\n   */\n  function _implementation() internal view returns (address impl) {\n    bytes32 slot = IMPLEMENTATION_SLOT;\n    assembly {\n      impl := sload(slot)\n    }\n  }\n\n  /**\n   * @dev Upgrades the proxy to a new implementation.\n   * @param newImplementation Address of the new implementation.\n   */\n  function _upgradeTo(address newImplementation) internal {\n    _setImplementation(newImplementation);\n    emit Upgraded(newImplementation);\n  }\n\n  /**\n   * @dev Sets the implementation address of the proxy.\n   * @param newImplementation Address of the new implementation.\n   */\n  function _setImplementation(address newImplementation) private {\n    require(Address.isContract(newImplementation), \"Cannot set a proxy implementation to a non-contract address\");\n\n    bytes32 slot = IMPLEMENTATION_SLOT;\n\n    assembly {\n      sstore(slot, newImplementation)\n    }\n  }\n}\n\n/**\n * @title AdminUpgradeabilityProxy\n * @dev This contract combines an upgradeability proxy with an authorization\n * mechanism for administrative tasks.\n * All external functions in this contract must be guarded by the\n * `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity\n * feature proposal that would enable this to be done automatically.\n */\ncontract AdminUpgradeabilityProxy is UpgradeabilityProxy {\n  /**\n   * @dev Emitted when the administration has been transferred.\n   * @param previousAdmin Address of the previous admin.\n   * @param newAdmin Address of the new admin.\n   */\n  event AdminChanged(address previousAdmin, address newAdmin);\n\n  /**\n   * @dev Storage slot with the admin of the contract.\n   * This is the keccak-256 hash of \"org.zeppelinos.proxy.admin\", and is\n   * validated in the constructor.\n   */\n  bytes32 private constant ADMIN_SLOT = 0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b;\n\n  /**\n   * @dev Modifier to check whether the `msg.sender` is the admin.\n   * If it is, it will run the function. Otherwise, it will delegate the call\n   * to the implementation.\n   */\n  modifier ifAdmin() {\n    if (msg.sender == _admin()) {\n      _;\n    } else {\n      _fallback();\n    }\n  }\n\n  /**\n   * Contract constructor.\n   * It sets the `msg.sender` as the proxy administrator.\n   * @param _implementation address of the initial implementation.\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\n   */\n  constructor(address _implementation, bytes memory _data) UpgradeabilityProxy(_implementation, _data) public payable {\n    assert(ADMIN_SLOT == keccak256(\"org.zeppelinos.proxy.admin\"));\n\n    _setAdmin(msg.sender);\n  }\n\n  /**\n   * @return The address of the proxy admin.\n   */\n  function admin() external ifAdmin returns (address) {\n    return _admin();\n  }\n\n  /**\n   * @return The address of the implementation.\n   */\n  function implementation() external ifAdmin returns (address) {\n    return _implementation();\n  }\n\n  /**\n   * @dev Changes the admin of the proxy.\n   * Only the current admin can call this function.\n   * @param newAdmin Address to transfer proxy administration to.\n   */\n  function changeAdmin(address newAdmin) external ifAdmin {\n    require(newAdmin != address(0), \"Cannot change the admin of a proxy to the zero address\");\n    emit AdminChanged(_admin(), newAdmin);\n    _setAdmin(newAdmin);\n  }\n\n  /**\n   * @dev Upgrade the backing implementation of the proxy.\n   * Only the admin can call this function.\n   * @param newImplementation Address of the new implementation.\n   */\n  function upgradeTo(address newImplementation) external ifAdmin {\n    _upgradeTo(newImplementation);\n  }\n\n  /**\n   * @dev Upgrade the backing implementation of the proxy and call a function\n   * on the new implementation.\n   * This is useful to initialize the proxied contract.\n   * @param newImplementation Address of the new implementation.\n   * @param data Data to send as msg.data in the low level call.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   */\n  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\n    _upgradeTo(newImplementation);\n    bool rv;\n    (rv,) = newImplementation.delegatecall(data);\n    require(rv);\n  }\n\n  /**\n   * @return The admin slot.\n   */\n  function _admin() internal view returns (address adm) {\n    bytes32 slot = ADMIN_SLOT;\n    assembly {\n      adm := sload(slot)\n    }\n  }\n\n  /**\n   * @dev Sets the address of the proxy admin.\n   * @param newAdmin Address of the new proxy admin.\n   */\n  function _setAdmin(address newAdmin) internal {\n    bytes32 slot = ADMIN_SLOT;\n\n    assembly {\n      sstore(slot, newAdmin)\n    }\n  }\n\n  /**\n   * @dev Only fall back when the sender is not the admin.\n   */\n  function _willFallback() internal {\n    require(msg.sender != _admin(), \"Cannot call fallback function from the proxy admin\");\n    super._willFallback();\n  }\n}\n\n/**\n * @title AdminUpgradeabilityProxy\n * @dev This contract combines an upgradeability proxy with an authorization\n * mechanism for administrative tasks.\n * All external functions in this contract must be guarded by the\n * `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity\n * feature proposal that would enable this to be done automatically.\n */\ncontract AdminableProxy is AdminUpgradeabilityProxy {\n\n  /**\n   * Contract constructor.\n   */\n  constructor(address _implementation, bytes memory _data) \n  AdminUpgradeabilityProxy(_implementation, _data) public payable {\n  }\n\n  /**\n   * @dev apply proposal.\n   */\n  function applyProposal(bytes calldata data) external ifAdmin returns (bool) {\n    bool rv;\n    (rv, ) = _implementation().delegatecall(data);\n    return rv;\n  }\n\n}",
  "bytecode": "6080604052604051610a7e380380610a7e8339810180604052604081101561002657600080fd5b81516020830180519193928301929164010000000081111561004757600080fd5b8201602081018481111561005a57600080fd5b815164010000000081118282018710171561007457600080fd5b5050929190505050818181816040518080610a2060239139604051908190036023019020600080516020610a008339815191521490506100b057fe5b6100c2826401000000006101e5810204565b60008151111561018057600082600160a060020a0316826040518082805190602001908083835b602083106101085780518252601f1990920191602091820191016100e9565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610168576040519150601f19603f3d011682016040523d82523d6000602084013e61016d565b606091505b509091505080151561017e57600080fd5b505b5050604080517f6f72672e7a657070656c696e6f732e70726f78792e61646d696e0000000000008152905190819003601a0190206000805160206109e0833981519152146101ca57fe5b6101dc33640100000000610264810204565b5050505061027e565b6101fb8164010000000061063c61027682021704565b1515610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180610a43603b913960400191505060405180910390fd5b600080516020610a0083398151915255565b6000805160206109e083398151915255565b6000903b1190565b6107538061028d6000396000f3fe6080604052600436106100585760e060020a60003504633659cfe681146100625780634f1ef286146100955780635c60da1b146101135780638f28397014610144578063a45fee5b14610177578063f851a44014610206575b61006061021b565b005b34801561006e57600080fd5b506100606004803603602081101561008557600080fd5b5035600160a060020a0316610235565b610060600480360360408110156100ab57600080fd5b600160a060020a038235169190810190604081016020820135602060020a8111156100d557600080fd5b8201836020820111156100e757600080fd5b803590602001918460018302840111602060020a8311171561010857600080fd5b50909250905061026f565b34801561011f57600080fd5b5061012861031f565b60408051600160a060020a039092168252519081900360200190f35b34801561015057600080fd5b506100606004803603602081101561016757600080fd5b5035600160a060020a031661035c565b34801561018357600080fd5b506101f26004803603602081101561019a57600080fd5b810190602081018135602060020a8111156101b457600080fd5b8201836020820111156101c657600080fd5b803590602001918460018302840111602060020a831117156101e757600080fd5b50909250905061041b565b604080519115158252519081900360200190f35b34801561021257600080fd5b506101286104c0565b6102236104eb565b61023361022e610545565b610558565b565b61023d61057c565b600160a060020a031633600160a060020a031614156102645761025f8161058f565b61026c565b61026c61021b565b50565b61027761057c565b600160a060020a031633600160a060020a03161415610312576102998361058f565b600083600160a060020a031683836040518083838082843760405192019450600093509091505080830381855af49150503d80600081146102f6576040519150601f19603f3d011682016040523d82523d6000602084013e6102fb565b606091505b509091505080151561030c57600080fd5b5061031a565b61031a61021b565b505050565b600061032961057c565b600160a060020a031633600160a060020a031614156103515761034a610545565b9050610359565b61035961021b565b90565b61036461057c565b600160a060020a031633600160a060020a0316141561026457600160a060020a03811615156103c75760405160e560020a62461bcd0281526004018080602001828103825260368152602001806106b76036913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103f061057c565b60408051600160a060020a03928316815291841660208301528051918290030190a161025f816105cf565b600061042561057c565b600160a060020a031633600160a060020a031614156104b2576000610448610545565b600160a060020a031684846040518083838082843760405192019450600093509091505080830381855af49150503d80600081146104a2576040519150601f19603f3d011682016040523d82523d6000602084013e6104a7565b606091505b5090925050506104ba565b6104ba61021b565b92915050565b60006104ca61057c565b600160a060020a031633600160a060020a031614156103515761034a61057c565b6104f361057c565b600160a060020a031633141561053d5760405160e560020a62461bcd0281526004018080602001828103825260328152602001806106456032913960400191505060405180910390fd5b610233610233565b6000805160206106978339815191525490565b3660008037600080366000845af43d6000803e808015610577573d6000f35b3d6000fd5b6000805160206106778339815191525490565b610598816105e1565b604051600160a060020a038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60008051602061067783398151915255565b6105ea8161063c565b151561062a5760405160e560020a62461bcd02815260040180806020018281038252603b8152602001806106ed603b913960400191505060405180910390fd5b60008051602061069783398151915255565b6000903b119056fe43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c343616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f206164647265737343616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a165627a7a7230582072ea70fb26decc7e4b1aa23228d6432737b64397e5c3350846835176095dc00d002910d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c36f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174696f6e43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373000000000000000000000000a1b82e4ec465748d06bd3751d409ca7d23f1d1fb000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000641794bb3c000000000000000000000000314337900b28afaa04765e59f37f348aa43a82cc0000000000000000000000000036192587fd788b75829fbf79be7f06e4f23b2100000000000000000000000000000000000000000000002a2ceb3dfab5e8000000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000a1b82e4ec465748d06bd3751d409ca7d23f1d1fb000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000641794bb3c000000000000000000000000314337900b28afaa04765e59f37f348aa43a82cc0000000000000000000000000036192587fd788b75829fbf79be7f06e4f23b2100000000000000000000000000000000000000000000002a2ceb3dfab5e8000000000000000000000000000000000000000000000000000000000000"
}