{
  "address": "0x56c945f90c9cd1aafbcac78936f569e5fd2438bf",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "HeroUp",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-10\n*/\n\npragma solidity ^0.4.24;\n\n// File: node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address private _owner;\n\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() internal {\n    _owner = msg.sender;\n    emit OwnershipTransferred(address(0), _owner);\n  }\n\n  /**\n   * @return the address of the owner.\n   */\n  function owner() public view returns(address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(isOwner());\n    _;\n  }\n\n  /**\n   * @return true if `msg.sender` is the owner of the contract.\n   */\n  function isOwner() public view returns(bool) {\n    return msg.sender == _owner;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\n// File: node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ninterface IERC20 {\n  function totalSupply() external view returns (uint256);\n\n  function balanceOf(address who) external view returns (uint256);\n\n  function allowance(address owner, address spender)\n    external view returns (uint256);\n\n  function transfer(address to, uint256 value) external returns (bool);\n\n  function approve(address spender, uint256 value)\n    external returns (bool);\n\n  function transferFrom(address from, address to, uint256 value)\n    external returns (bool);\n\n  event Transfer(\n    address indexed from,\n    address indexed to,\n    uint256 value\n  );\n\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n// File: lib/CanReclaimToken.sol\n\n/**\n * @title Contracts that should be able to recover tokens\n * @author SylTi\n * @dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\n * This will prevent any accidental loss of tokens.\n */\ncontract CanReclaimToken is Ownable {\n\n  /**\n   * @dev Reclaim all ERC20 compatible tokens\n   * @param token ERC20 The address of the token contract\n   */\n  function reclaimToken(IERC20 token) external onlyOwner {\n    if (address(token) == address(0)) {\n      owner().transfer(address(this).balance);\n      return;\n    }\n    uint256 balance = token.balanceOf(this);\n    token.transfer(owner(), balance);\n  }\n\n}\n\n// File: contracts/HeroUp.sol\n\ninterface HEROES_NEW {\n  function mint(address to, uint256 genes, uint256 level) external returns (uint);\n  function mint(uint256 tokenId, address to, uint256 genes, uint256 level) external returns (uint);\n}\n\n\ninterface HEROES_OLD {\n  function getLock(uint256 _tokenId) external view returns (uint256 lockedTo, uint16 lockId);\n  function unlock(uint256 _tokenId, uint16 _lockId) external returns (bool);\n  function lock(uint256 _tokenId, uint256 _lockedTo, uint16 _lockId) external returns (bool);\n  function transferFrom(address _from, address _to, uint256 _tokenId) external;\n  function getCharacter(uint256 _tokenId) external view returns (uint256 genes, uint256 mintedAt, uint256 godfather, uint256 mentor, uint32 wins, uint32 losses, uint32 level, uint256 lockedTo, uint16 lockId);\n  function ownerOf(uint256 _tokenId) external view returns (address);\n}\n\ncontract HeroUp is Ownable, CanReclaimToken {\n  event HeroUpgraded(uint tokenId, address owner);\n\n  HEROES_OLD public heroesOld;\n  HEROES_NEW public heroesNew;\n  constructor (HEROES_OLD _heroesOld, HEROES_NEW _heroesNew) public {\n    require(address(_heroesOld) != address(0));\n    require(address(_heroesNew) != address(0));\n    heroesOld = _heroesOld;\n    heroesNew = _heroesNew;\n  }\n\n  function() public {}\n\n  function setOld(HEROES_OLD _heroesOld) public onlyOwner {\n    require(address(_heroesOld) != address(0));\n    heroesOld = _heroesOld;\n  }\n\n  function setNew(HEROES_NEW _heroesNew) public onlyOwner {\n    require(address(_heroesNew) != address(0));\n    heroesNew = _heroesNew;\n  }\n\n  function upgrade(uint _tokenId) public {\n    require(msg.sender == heroesOld.ownerOf(_tokenId));\n    uint256 genes;\n    uint32 level;\n    uint256 lockedTo;\n    uint16 lockId;\n\n    //transfer old hero\n    (genes,,,,,,level,lockedTo,lockId) = heroesOld.getCharacter(_tokenId);\n    heroesOld.unlock(_tokenId, lockId);\n    heroesOld.lock(_tokenId, 0, 999);\n    heroesOld.transferFrom(msg.sender, address(this), _tokenId);\n//    heroesOld.unlock(_tokenId, 999);\n\n    //mint new hero\n    heroesNew.mint(_tokenId, msg.sender, genes, level);\n\n    emit HeroUpgraded(_tokenId, msg.sender);\n  }\n}",
  "bytecode": "608060405234801561001057600080fd5b50604051604080610aa2833981016040819052815160209092015160008054600160a060020a03191633178082559192600160a060020a0392909216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600160a060020a038216151561008757600080fd5b600160a060020a038116151561009c57600080fd5b60018054600160a060020a03938416600160a060020a031991821617909155600280549290931691161790556109cb806100d76000396000f3006080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166317ffc32081146100b2578063242d81f0146100d557806345977d03146100f6578063715018a61461010e5780637c2372c9146101235780638da5cb5b146101545780638f32d59b1461016957806397ac0ff814610192578063f2fde38b146101a7578063fecb6707146101c8575b3480156100af57600080fd5b50005b3480156100be57600080fd5b506100d3600160a060020a03600435166101e9565b005b3480156100e157600080fd5b506100d3600160a060020a0360043516610397565b34801561010257600080fd5b506100d36004356103ee565b34801561011a57600080fd5b506100d3610804565b34801561012f57600080fd5b5061013861086e565b60408051600160a060020a039092168252519081900360200190f35b34801561016057600080fd5b5061013861087d565b34801561017557600080fd5b5061017e61088c565b604080519115158252519081900360200190f35b34801561019e57600080fd5b5061013861089d565b3480156101b357600080fd5b506100d3600160a060020a03600435166108ac565b3480156101d457600080fd5b506100d3600160a060020a03600435166108cb565b60006101f361088c565b15156101fe57600080fd5b600160a060020a03821615156102545761021661087d565b604051600160a060020a039190911690303180156108fc02916000818181858888f1935050505015801561024e573d6000803e3d6000fd5b50610393565b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038416916370a082319160248083019260209291908290030181600087803b1580156102b557600080fd5b505af11580156102c9573d6000803e3d6000fd5b505050506040513d60208110156102df57600080fd5b50519050600160a060020a03821663a9059cbb6102fa61087d565b836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561036657600080fd5b505af115801561037a573d6000803e3d6000fd5b505050506040513d602081101561039057600080fd5b50505b5050565b61039f61088c565b15156103aa57600080fd5b600160a060020a03811615156103bf57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600154604080517f6352211e000000000000000000000000000000000000000000000000000000008152600481018490529051600092839283928392600160a060020a031691636352211e91602480830192602092919082900301818787803b15801561045a57600080fd5b505af115801561046e573d6000803e3d6000fd5b505050506040513d602081101561048457600080fd5b5051600160a060020a0316331461049a57600080fd5b600154604080517fdabb0531000000000000000000000000000000000000000000000000000000008152600481018890529051600160a060020a039092169163dabb053191602480820192610120929091908290030181600087803b15801561050257600080fd5b505af1158015610516573d6000803e3d6000fd5b505050506040513d61012081101561052d57600080fd5b50805160c082015160e083015161010090930151600154604080517fd20e30bc000000000000000000000000000000000000000000000000000000008152600481018c905261ffff8416602482015290519499509297509395509350600160a060020a039092169163d20e30bc9160448083019260209291908290030181600087803b1580156105bc57600080fd5b505af11580156105d0573d6000803e3d6000fd5b505050506040513d60208110156105e657600080fd5b5050600154604080517fb8cfbe1a000000000000000000000000000000000000000000000000000000008152600481018890526000602482018190526103e760448301529151600160a060020a039093169263b8cfbe1a92606480840193602093929083900390910190829087803b15801561066157600080fd5b505af1158015610675573d6000803e3d6000fd5b505050506040513d602081101561068b57600080fd5b5050600154604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890529051600160a060020a03909216916323b872dd9160648082019260009290919082900301818387803b1580156106ff57600080fd5b505af1158015610713573d6000803e3d6000fd5b5050600254604080517fbf2c8a94000000000000000000000000000000000000000000000000000000008152600481018a90523360248201526044810189905263ffffffff881660648201529051600160a060020a03909216935063bf2c8a9492506084808201926020929091908290030181600087803b15801561079757600080fd5b505af11580156107ab573d6000803e3d6000fd5b505050506040513d60208110156107c157600080fd5b50506040805186815233602082015281517fe12cc09b34032a761226d1846b0059d6f8ddae8e633ea1c24382684bd7931095929181900390910190a15050505050565b61080c61088c565b151561081757600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600254600160a060020a031681565b600054600160a060020a031690565b600054600160a060020a0316331490565b600154600160a060020a031681565b6108b461088c565b15156108bf57600080fd5b6108c881610922565b50565b6108d361088c565b15156108de57600080fd5b600160a060020a03811615156108f357600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a038116151561093757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058207ae8800f55be6fa56301b4b54c361b07ef0a586501cd89c17191917ecd30a12300290000000000000000000000000ba000163959726c90d41c804386d37718d5edc8000000000000000000000000d2bae9a30a40376d25353773010ffe52dba0d688",
  "constructorArguments": "0000000000000000000000000ba000163959726c90d41c804386d37718d5edc8000000000000000000000000d2bae9a30a40376d25353773010ffe52dba0d688"
}