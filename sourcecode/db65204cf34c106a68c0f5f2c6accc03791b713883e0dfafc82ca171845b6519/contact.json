{
  "address": "0x5225b8184a14a8f5f3fafdd18739ee93e1ce0fe6",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "EthicHubArbitrage",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-16\n*/\n\npragma solidity ^0.4.13;\n\ncontract EthicHubStorageInterface {\n\n    //modifier for access in sets and deletes\n    modifier onlyEthicHubContracts() {_;}\n\n    // Setters\n    function setAddress(bytes32 _key, address _value) external;\n    function setUint(bytes32 _key, uint _value) external;\n    function setString(bytes32 _key, string _value) external;\n    function setBytes(bytes32 _key, bytes _value) external;\n    function setBool(bytes32 _key, bool _value) external;\n    function setInt(bytes32 _key, int _value) external;\n    // Deleters\n    function deleteAddress(bytes32 _key) external;\n    function deleteUint(bytes32 _key) external;\n    function deleteString(bytes32 _key) external;\n    function deleteBytes(bytes32 _key) external;\n    function deleteBool(bytes32 _key) external;\n    function deleteInt(bytes32 _key) external;\n\n    // Getters\n    function getAddress(bytes32 _key) external view returns (address);\n    function getUint(bytes32 _key) external view returns (uint);\n    function getString(bytes32 _key) external view returns (string);\n    function getBytes(bytes32 _key) external view returns (bytes);\n    function getBool(bytes32 _key) external view returns (bool);\n    function getInt(bytes32 _key) external view returns (int);\n}\n\ncontract EthicHubBase {\n\n    uint8 public version;\n\n    EthicHubStorageInterface public ethicHubStorage = EthicHubStorageInterface(0);\n\n    constructor(address _storageAddress) public {\n        require(_storageAddress != address(0));\n        ethicHubStorage = EthicHubStorageInterface(_storageAddress);\n    }\n\n}\n\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\ncontract EthicHubArbitrage is EthicHubBase, Ownable {\n\n    event ArbiterAssigned (\n        address indexed _arbiter,                    // Address of the arbiter\n        address indexed _lendingContract            // Address of the lending contract\n    );\n\n    event ArbiterRevoked (\n        address indexed _arbiter,                    // Address of the arbiter\n        address indexed _lendingContract            // Address of the lending contract\n    );\n\n    constructor(address _storageAddress) EthicHubBase(_storageAddress) public {\n        // Version\n        version = 1;\n    }\n\n    function assignArbiterForLendingContract(address _arbiter, address _lendingContract) public onlyOwner {\n        require(_arbiter != address(0));\n        require(_lendingContract != address(0));\n        require(_lendingContract == ethicHubStorage.getAddress(keccak256(\"contract.address\", _lendingContract)));\n        ethicHubStorage.setAddress(keccak256(\"arbiter\", _lendingContract), _arbiter);\n        emit ArbiterAssigned(_arbiter, _lendingContract);\n    }\n\n    function revokeArbiterForLendingContract(address _arbiter, address _lendingContract) public onlyOwner {\n        require(_arbiter != address(0));\n        require(_lendingContract != address(0));\n        require(_lendingContract == ethicHubStorage.getAddress(keccak256(\"contract.address\", _lendingContract)));\n        require(arbiterForLendingContract(_lendingContract) == _arbiter);\n        ethicHubStorage.deleteAddress(keccak256(\"arbiter\", _lendingContract));\n        emit ArbiterRevoked(_arbiter, _lendingContract);\n    }\n\n    function arbiterForLendingContract(address _lendingContract) public view returns(address) {\n        return ethicHubStorage.getAddress(keccak256(\"arbiter\", _lendingContract));\n    }\n\n}",
  "bytecode": "",
  "constructorArguments": "0000000000000000000000006b79b0baed86a69f146c9256ecd268ebaa81bfca"
}