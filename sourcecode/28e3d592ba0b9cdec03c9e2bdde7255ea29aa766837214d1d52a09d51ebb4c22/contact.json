{
  "address": "0x8144e51d81c5d5cf6ed8318942315659bc035c18",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "RewardSharing",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-13\n*/\n\npragma solidity ^0.4.24;\n\n//\n//                       .#########'\n//                    .###############+\n//                  ,####################\n//                `#######################+\n//               ;##########################\n//              #############################.\n//             ###############################,\n//           +##################,    ###########`\n//          .###################     .###########\n//         ##############,          .###########+\n//         #############`            .############`\n//         ###########+                ############\n//        ###########;                  ###########\n//        ##########'                    ###########                                                                                      \n//       '##########    '#.        `,     ##########                                                                                    \n//       ##########    ####'      ####.   :#########;                                                                                   \n//      `#########'   :#####;    ######    ##########                                                                                 \n//      :#########    #######:  #######    :#########         \n//      +#########    :#######.########     #########`       \n//      #########;     ###############'     #########:       \n//      #########       #############+      '########'        \n//      #########        ############       :#########        \n//      #########         ##########        ,#########        \n//      #########         :########         ,#########        \n//      #########        ,##########        ,#########        \n//      #########       ,############       :########+        \n//      #########      .#############+      '########'        \n//      #########:    `###############'     #########,        \n//      +########+    ;#######`;#######     #########         \n//      ,#########    '######`  '######    :#########         \n//       #########;   .#####`    '#####    ##########         \n//       ##########    '###`      +###    :#########:         \n//       ;#########+     `                ##########          \n//        ##########,                    ###########          \n//         ###########;                ############\n//         +############             .############`\n//          ###########+           ,#############;\n//          `###########     ;++#################\n//           :##########,    ###################\n//            '###########.'###################\n//             +##############################\n//              '############################`\n//               .##########################\n//                 #######################:\n//                   ###################+\n//                     +##############:\n//                        :#######+`\n//\n//\n//\n// Play0x.com (The ONLY gaming platform for all ERC20 Tokens)\n// -------------------------------------------------------------------------------------------------------\n// * Multiple types of game platforms\n// * Build your own game zone - Not only playing games, but also allowing other players to join your game.\n// * Support all ERC20 tokens.\n//\n//\n//\n// 0xC Token (Contract address : 0x60d8234a662651e586173c17eb45ca9833a7aa6c)\n// -------------------------------------------------------------------------------------------------------\n// * 0xC Token is an ERC20 Token specifically for digital entertainment.\n// * No ICO and private sales,fair access.\n// * There will be hundreds of games using 0xC as a game token.\n// * Token holders can permanently get ETH's profit sharing.\n//\n\n/**\n* @title SafeMath\n* @dev Math operations with safety checks that throw on error\n*/\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n/**\n* @title ERC20 interface\n* @dev see https://github.com/ethereum/EIPs/issues/20\n*/\ncontract ERC20 {\n    function allowance(address owner, address spender) public view returns (uint256);\n    function balanceOf(address who) public view returns  (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n* @title Ownable\n* @dev The Ownable contract has an owner address, and provides basic authorization control \n* functions, this simplifies the implementation of \"user permissions\". \n*/ \ncontract Ownable {\n    address public owner;\n\n/** \n* @dev The Ownable constructor sets the original `owner` of the contract to the sender\n* account.\n*/\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    /**\n    * @dev Throws if called by any account other than the owner.\n    */\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"only for owner\");\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n}\n\n//Main contract\ncontract RewardSharing is Ownable{\n    using SafeMath for uint256;\n    bool public IsWithdrawActive = true;\n\n    //for Shareholder banlance record\n    mapping(address => uint256) EtherBook;\n    mapping(address=> mapping(address => uint256)) TokenBook;\n    address[] supportToken;\n\n    event withdrawLog(address userAddress, uint256 etherAmount, uint256 tokenAmount);\n\n    function() public payable{}\n    \n    //Get counts of supported Token\n    function GetTokenLen() public view returns(uint256)\n    {\n        return supportToken.length;\n    }\n    \n    //Get supportToken by index\n    function GetSupportToken(uint index) public view returns(address)\n    {\n        return supportToken[index];\n    }\n\n    //Add Ether for accounts\n    function ProfitDividend (address[] addressArray, uint256[] profitArray) public onlyOwner\n    {\n        for( uint256 i = 0; i < addressArray.length;i++)\n        {\n            EtherBook[addressArray[i]] = EtherBook[addressArray[i]].add(profitArray[i]);\n        }\n    }\n    \n    // Adjust Ether balance of accounts in the vault\n    function AdjustEtherBook(address[] addressArray, uint256[] profitArray) public onlyOwner\n    {\n        for( uint256 i = 0; i < addressArray.length;i++)\n        {\n            EtherBook[addressArray[i]] = profitArray[i];\n        }\n    }\n    \n    //Add token for accounts\n    function ProfitTokenDividend (address ERC20Address, address[] addressArray, uint256[] profitArray) public onlyOwner\n    {\n        if(TokenBook[ERC20Address][0x0]== 0)\n        {\n            supportToken.push(ERC20Address);\n            TokenBook[ERC20Address][0x0] = 1;\n        }\n        \n        for( uint256 i = 0; i < addressArray.length;i++)\n        {\n            TokenBook[ERC20Address][addressArray[i]] = TokenBook[ERC20Address][addressArray[i]].add(profitArray[i]);\n        }\n    }\n    \n    // Adjust token balance of accounts in the vault\n    function AdjustTokenBook(address ERC20Address,address[] addressArray, uint256[] profitArray) public onlyOwner\n    {\n        if(TokenBook[ERC20Address][0x0]== 0)\n        {\n            supportToken.push(ERC20Address);\n            TokenBook[ERC20Address][0x0] = 1;\n        }\n        \n        for( uint256 i = 0; i < addressArray.length;i++)\n        {\n            TokenBook[ERC20Address][addressArray[i]] = profitArray[i];\n        }\n    }\n    \n    //check ether balance in the vault\n    function CheckBalance(address theAddress) public view returns(uint256 EtherProfit)\n    {\n        return (EtherBook[theAddress]);\n    }\n    \n    //Check token balance in the vault\n    function CheckTokenBalance(address ERC20Address, address theAddress) public view returns(uint256 TokenProfit)\n    {\n        return TokenBook[ERC20Address][theAddress];\n    }\n    \n    //User withdraw ERC20 Token\n    function withdrawToken(address ERC20Address) public\n    {\n        uint tokenAmount = TokenBook[ERC20Address][msg.sender];\n        TokenBook[ERC20Address][msg.sender]= 0;\n    \n        ERC20(ERC20Address).transfer(msg.sender, tokenAmount);\n    }\n    \n    //User Withdraw Ether\n    function withdrawEther() public\n    {\n        uint etherAmount = EtherBook[msg.sender];\n        EtherBook[msg.sender] = 0;\n        msg.sender.transfer(etherAmount);\n    }\n    \n    //Set withdraw status.\n    function UpdateActive(bool _IsWithdrawActive) public onlyOwner\n    {\n        IsWithdrawActive = _IsWithdrawActive;\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_IsWithdrawActive\",\"type\":\"bool\"}],\"name\":\"UpdateActive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"theAddress\",\"type\":\"address\"}],\"name\":\"CheckBalance\",\"outputs\":[{\"name\":\"EtherProfit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"profitArray\",\"type\":\"uint256[]\"}],\"name\":\"AdjustEtherBook\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ERC20Address\",\"type\":\"address\"},{\"name\":\"theAddress\",\"type\":\"address\"}],\"name\":\"CheckTokenBalance\",\"outputs\":[{\"name\":\"TokenProfit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"GetSupportToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"profitArray\",\"type\":\"uint256[]\"}],\"name\":\"ProfitDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ERC20Address\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsWithdrawActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ERC20Address\",\"type\":\"address\"},{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"profitArray\",\"type\":\"uint256[]\"}],\"name\":\"ProfitTokenDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetTokenLen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ERC20Address\",\"type\":\"address\"},{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"profitArray\",\"type\":\"uint256[]\"}],\"name\":\"AdjustTokenBook\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"etherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawLog\",\"type\":\"event\"}]",
  "bytecode": "608060405260008054600160a060020a031960a060020a60ff021990911674010000000000000000000000000000000000000000171633179055610c5b806100486000396000f3006080604052600436106100cf5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631aeaaae881146100d15780632e4d59c4146100eb57806350883b2d1461011e57806367ab711c146101ac5780637362377b146101d35780637ab73d4f146101e85780637fcff5111461021c57806389476069146102aa5780638da5cb5b146102cb578063a1799cae146102e0578063bef2a36614610309578063c04de175146103a5578063f2fde38b146103ba578063f75d5572146103db575b005b3480156100dd57600080fd5b506100cf6004351515610477565b3480156100f757600080fd5b5061010c600160a060020a0360043516610507565b60408051918252519081900360200190f35b34801561012a57600080fd5b50604080516020600480358082013583810280860185019096528085526100cf95369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506105229650505050505050565b3480156101b857600080fd5b5061010c600160a060020a03600435811690602435166105da565b3480156101df57600080fd5b506100cf610605565b3480156101f457600080fd5b5061020060043561064a565b60408051600160a060020a039092168252519081900360200190f35b34801561022857600080fd5b50604080516020600480358082013583810280860185019096528085526100cf95369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506106769650505050505050565b3480156102b657600080fd5b506100cf600160a060020a036004351661076d565b3480156102d757600080fd5b50610200610828565b3480156102ec57600080fd5b506102f5610837565b604080519115158252519081900360200190f35b34801561031557600080fd5b506040805160206004602480358281013584810280870186019097528086526100cf968435600160a060020a031696369660449591949091019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506108589650505050505050565b3480156103b157600080fd5b5061010c6109f6565b3480156103c657600080fd5b506100cf600160a060020a03600435166109fc565b3480156103e757600080fd5b506040805160206004602480358281013584810280870186019097528086526100cf968435600160a060020a031696369660449591949091019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750949750610a879650505050505050565b600054600160a060020a031633146104c7576040805160e560020a62461bcd02815260206004820152600e6024820152600080516020610c10833981519152604482015290519081900360640190fd5b60008054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b600160a060020a031660009081526001602052604090205490565b60008054600160a060020a03163314610573576040805160e560020a62461bcd02815260206004820152600e6024820152600080516020610c10833981519152604482015290519081900360640190fd5b5060005b82518110156105d557818181518110151561058e57fe5b906020019060200201516001600085848151811015156105aa57fe5b6020908102909101810151600160a060020a0316825281019190915260400160002055600101610577565b505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b33600081815260016020526040808220805490839055905190929183156108fc02918491818181858888f19350505050158015610646573d6000803e3d6000fd5b5050565b600060038281548110151561065b57fe5b600091825260209091200154600160a060020a031692915050565b60008054600160a060020a031633146106c7576040805160e560020a62461bcd02815260206004820152600e6024820152600080516020610c10833981519152604482015290519081900360640190fd5b5060005b82518110156105d55761073082828151811015156106e557fe5b9060200190602002015160016000868581518110151561070157fe5b6020908102909101810151600160a060020a03168252810191909152604001600020549063ffffffff610bf916565b60016000858481518110151561074257fe5b6020908102909101810151600160a060020a03168252810191909152604001600020556001016106cb565b600160a060020a03811660008181526002602090815260408083203380855290835281842080549085905582517fa9059cbb000000000000000000000000000000000000000000000000000000008152600481019290925260248201819052915191949363a9059cbb9360448084019491939192918390030190829087803b1580156107f857600080fd5b505af115801561080c573d6000803e3d6000fd5b505050506040513d602081101561082257600080fd5b50505050565b600054600160a060020a031681565b60005474010000000000000000000000000000000000000000900460ff1681565b60008054600160a060020a031633146108a9576040805160e560020a62461bcd02815260206004820152600e6024820152600080516020610c10833981519152604482015290519081900360640190fd5b600160a060020a03841660009081526002602090815260408083208380529091529020541515610945576003805460018082019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915560009081526002602090815260408083208380529091529020555b5060005b8251811015610822576109a2828281518110151561096357fe5b906020019060200201516002600087600160a060020a0316600160a060020a031681526020019081526020016000206000868581518110151561070157fe5b600160a060020a038516600090815260026020526040812085519091908690859081106109cb57fe5b6020908102909101810151600160a060020a0316825281019190915260400160002055600101610949565b60035490565b600054600160a060020a03163314610a4c576040805160e560020a62461bcd02815260206004820152600e6024820152600080516020610c10833981519152604482015290519081900360640190fd5b600160a060020a03811615610a84576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b60008054600160a060020a03163314610ad8576040805160e560020a62461bcd02815260206004820152600e6024820152600080516020610c10833981519152604482015290519081900360640190fd5b600160a060020a03841660009081526002602090815260408083208380529091529020541515610b74576003805460018082019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915560009081526002602090815260408083208380529091529020555b5060005b8251811015610822578181815181101515610b8f57fe5b906020019060200201516002600086600160a060020a0316600160a060020a0316815260200190815260200160002060008584815181101515610bce57fe5b6020908102909101810151600160a060020a0316825281019190915260400160002055600101610b78565b600082820183811015610c0857fe5b939250505056006f6e6c7920666f72206f776e6572000000000000000000000000000000000000a165627a7a723058201aee89799222721547c5fbb68730c0d91b4fd31fa046ed4d13aacf1df570db7b0029"
}