{
  "address": "0xa00425d3e2d3e9ff74f3e112b4d3a7978d7d88c2",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "GoPower Token",
  "contractName": "GoPowerToken",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-12-08\n*/\n\npragma solidity ^0.4.18;\n\n//\n// imports from https://github.com/OpenZeppelin/zeppelin-solidity\n//\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   */\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n\n//\n//   GoPowerToken\n//\n\ncontract GoPowerToken is StandardToken, Ownable {\n\n  string public name = 'GoPower Token';\n  string public symbol = 'GPT';\n  uint public decimals = 18;\n\n\n  //\n  //   Distribution of tokens\n  //\n\n  uint constant TOKEN_TOTAL_SUPPLY_LIMIT = 700 * 1e6 * 1e18;\n  uint constant TOKEN_SALE_LIMIT =         600 * 1e6 * 1e18;\n  uint constant RESERVED_FOR_SETTLEMENTS =  50 * 1e6 * 1e18;\n  uint constant RESERVED_FOR_TEAM =         30 * 1e6 * 1e18;\n  uint constant RESERVED_FOR_BOUNTY =       20 * 1e6 * 1e18;\n\n  address constant settlementsAddress = 0x9e6290C55faba3FFA269cCbF054f8D93586aaa6D;\n  address constant teamAddress = 0xaA2E8DEbEAf429A21c59c3E697d9FC5bB86E126d;\n  address constant bountyAddress = 0xdFa360FdF23DC9A7bdF1d968f453831d3351c33D;\n\n\n  //\n  //   Token rate calculation parameters\n  //\n\n  uint constant TOKEN_RATE_INITIAL =  0.000571428571428571 ether;           // 1/1750\n  uint constant TOKEN_RATE_ICO_DAILY_INCREMENT = TOKEN_RATE_INITIAL / 200;  // 0.5%\n  uint constant BONUS_PRESALE = 50;    // 50%\n  uint constant BONUS_ICO_WEEK1 = 30;  // 30%\n  uint constant BONUS_ICO_WEEK2 = 20;  // 20%\n  uint constant BONUS_ICO_WEEK3 = 10;  // 10%\n  uint constant BONUS_ICO_WEEK4 = 5;   // 5%\n  uint constant MINIMUM_PAYABLE_AMOUNT = 0.0001 ether;\n  uint constant TOKEN_BUY_PRECISION = 0.01e18;\n\n\n  //\n  //    State transitions\n  //\n\n  uint public presaleStartedAt;\n  uint public presaleFinishedAt;\n  uint public icoStartedAt;\n  uint public icoFinishedAt;\n\n  function presaleInProgress() private view returns (bool) {\n    return ((presaleStartedAt > 0) && (presaleFinishedAt == 0));\n  }\n\n  function icoInProgress() private view returns (bool) {\n    return ((icoStartedAt > 0) && (icoFinishedAt == 0));\n  }\n\n  modifier onlyDuringSale { require(presaleInProgress() || icoInProgress()); _; }\n  modifier onlyAfterICO { require(icoFinishedAt > 0); _; }\n\n  function startPresale() onlyOwner external returns(bool) {\n    require(presaleStartedAt == 0);\n    presaleStartedAt = now;\n    return true;\n  }\n\n  function finishPresale() onlyOwner external returns(bool) {\n    require(presaleInProgress());\n    presaleFinishedAt = now;\n    return true;\n  }\n\n  function startICO() onlyOwner external returns(bool) {\n    require(presaleFinishedAt > 0);\n    require(icoStartedAt == 0);\n    icoStartedAt = now;\n    return true;\n  }\n\n  function finishICO() onlyOwner external returns(bool) {\n    require(icoInProgress());\n    _mint_internal(settlementsAddress, RESERVED_FOR_SETTLEMENTS);\n    _mint_internal(teamAddress, RESERVED_FOR_TEAM);\n    _mint_internal(bountyAddress, RESERVED_FOR_BOUNTY);\n    icoFinishedAt = now;\n    tradeRobot = address(0);   // disable trade robot\n    return true;\n  }\n\n\n  //\n  //  Trade robot permissions\n  //\n\n  address public tradeRobot;\n  modifier onlyTradeRobot { require(msg.sender == tradeRobot); _; }\n\n  function setTradeRobot(address _robot) onlyOwner external returns(bool) {\n    require(icoFinishedAt == 0); // the robot is disabled after the end of ICO\n    tradeRobot = _robot;\n    return true;\n  }\n\n\n  //\n  //   Token sale logic\n  //\n\n  function _mint_internal(address _to, uint _amount) private {\n    totalSupply = totalSupply.add(_amount);\n    balances[_to] = balances[_to].add(_amount);\n    Transfer(address(0), _to, _amount);\n  }\n\n  function mint(address _to, uint _amount) onlyDuringSale onlyTradeRobot external returns (bool) {\n    _mint_internal(_to, _amount);\n    return true;\n  }\n\n  function mintUpto(address _to, uint _newValue) onlyDuringSale onlyTradeRobot external returns (bool) {\n    var oldValue = balances[_to];\n    require(_newValue > oldValue);\n    _mint_internal(_to, _newValue.sub(oldValue));\n    return true;\n  }\n\n  function buy() onlyDuringSale public payable {\n    assert(msg.value >= MINIMUM_PAYABLE_AMOUNT);\n    var tokenRate = TOKEN_RATE_INITIAL;\n    uint amount;\n\n    if (icoInProgress()) { // main ICO\n\n      var daysFromIcoStart = now.sub(icoStartedAt).div(1 days);\n      tokenRate = tokenRate.add( TOKEN_RATE_ICO_DAILY_INCREMENT.mul(daysFromIcoStart) );\n      amount = msg.value.mul(1e18).div(tokenRate);\n\n      var weekNumber = 1 + daysFromIcoStart.div(7);\n      if (weekNumber == 1) {\n        amount = amount.add( amount.mul(BONUS_ICO_WEEK1).div(100) );\n      } else if (weekNumber == 2) {\n        amount = amount.add( amount.mul(BONUS_ICO_WEEK2).div(100) );\n      } else if (weekNumber == 3) {\n        amount = amount.add( amount.mul(BONUS_ICO_WEEK3).div(100) );\n      } else if (weekNumber == 4) {\n        amount = amount.add( amount.mul(BONUS_ICO_WEEK4).div(100) );\n      }\n    \n    } else {  // presale\n\n      amount = msg.value.mul(1e18).div(tokenRate);\n      amount = amount.add( amount.mul(BONUS_PRESALE).div(100) );\n    }\n\n    amount = amount.add(TOKEN_BUY_PRECISION/2).div(TOKEN_BUY_PRECISION).mul(TOKEN_BUY_PRECISION);\n\n    require(totalSupply.add(amount) <= TOKEN_SALE_LIMIT);\n    _mint_internal(msg.sender, amount);\n  }\n\n  function () external payable {\n    buy();\n  }\n\n  function collect() onlyOwner external {\n    msg.sender.transfer(this.balance);\n  }\n\n\n  //\n  //   Token transfer operations are locked until the end of ICO\n  //\n\n  // this one is much more gas-effective because of the 'external' visibility\n  function transferExt(address _to, uint256 _value) onlyAfterICO external returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function transfer(address _to, uint _value) onlyAfterICO public returns (bool) {\n    return super.transfer(_to, _value);\n  }\n\n  function transferFrom(address _from, address _to, uint _value) onlyAfterICO public returns (bool) {\n    return super.transferFrom(_from, _to, _value);\n  }\n\n  function approve(address _spender, uint _value) onlyAfterICO public returns (bool) {\n    return super.approve(_spender, _value);\n  }\n\n  function increaseApproval(address _spender, uint _addedValue) onlyAfterICO public returns (bool) {\n    return super.increaseApproval(_spender, _addedValue);\n  }\n\n  function decreaseApproval(address _spender, uint _subtractedValue) onlyAfterICO public returns (bool) {\n    return super.decreaseApproval(_spender, _subtractedValue);\n  }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"presaleFinishedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startPresale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleStartedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferExt\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoFinishedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startICO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tradeRobot\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishPresale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoStartedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishICO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_robot\",\"type\":\"address\"}],\"name\":\"setTradeRobot\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collect\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_newValue\",\"type\":\"uint256\"}],\"name\":\"mintUpto\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "606060405260408051908101604052600d81527f476f506f77657220546f6b656e00000000000000000000000000000000000000602082015260049080516200004d929160200190620000be565b5060408051908101604052600381527f47505400000000000000000000000000000000000000000000000000000000006020820152600590805162000097929160200190620000be565b50601260065560038054600160a060020a03191633600160a060020a031617905562000163565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200010157805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013157825182559160200191906001019062000114565b506200013f92915062000143565b5090565b6200016091905b808211156200013f57600081556001016200014a565b90565b6112d880620001736000396000f3006060604052600436106101685763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041662359e08811461017257806304c98b2b1461019757806306fdde03146101be57806307fee2a614610248578063095ea7b31461025b57806318160ddd1461027d57806323b872dd14610290578063313ce567146102b857806340c10f19146102cb5780635da6628a146102ed578063661884631461030f57806370a08231146103315780637d9a9096146103505780637fa8c1581461036357806389fa413d146103765780638da5cb5b146103a557806395d89b41146103b8578063974654c6146103cb578063a6f2ae3a14610168578063a9059cbb146103de578063ad0c3dff14610400578063c4561d6114610413578063d1987a2814610426578063d73dd62314610445578063dd62ed3e14610467578063e52253811461048c578063f2fde38b1461049f578063fc01dfbb146104be575b6101706104e0565b005b341561017d57600080fd5b6101856106f7565b60405190815260200160405180910390f35b34156101a257600080fd5b6101aa6106fd565b604051901515815260200160405180910390f35b34156101c957600080fd5b6101d1610732565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561020d5780820151838201526020016101f5565b50505050905090810190601f16801561023a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561025357600080fd5b6101856107d0565b341561026657600080fd5b6101aa600160a060020a03600435166024356107d6565b341561028857600080fd5b6101856107f9565b341561029b57600080fd5b6101aa600160a060020a03600435811690602435166044356107ff565b34156102c357600080fd5b610185610824565b34156102d657600080fd5b6101aa600160a060020a036004351660243561082a565b34156102f857600080fd5b6101aa600160a060020a036004351660243561087b565b341561031a57600080fd5b6101aa600160a060020a0360043516602435610986565b341561033c57600080fd5b610185600160a060020a03600435166109a2565b341561035b57600080fd5b6101856109bd565b341561036e57600080fd5b6101aa6109c3565b341561038157600080fd5b610389610a08565b604051600160a060020a03909116815260200160405180910390f35b34156103b057600080fd5b610389610a17565b34156103c357600080fd5b6101d1610a26565b34156103d657600080fd5b6101aa610a91565b34156103e957600080fd5b6101aa600160a060020a0360043516602435610acc565b341561040b57600080fd5b610185610ae8565b341561041e57600080fd5b6101aa610aee565b341561043157600080fd5b6101aa600160a060020a0360043516610bc1565b341561045057600080fd5b6101aa600160a060020a0360043516602435610c1e565b341561047257600080fd5b610185600160a060020a0360043581169060243516610c3a565b341561049757600080fd5b610170610c65565b34156104aa57600080fd5b610170600160a060020a0360043516610cbf565b34156104c957600080fd5b6101aa600160a060020a0360043516602435610d5a565b6000806000806104ee610de4565b806104fc57506104fc610dfc565b151561050757600080fd5b655af3107a400034101561051757fe5b660207b61503b6db9350610529610dfc565b15610652576105566201518061054a60095442610e1290919063ffffffff16565b9063ffffffff610e2416565b915061057861056b6502993afc2db684610e3b565b859063ffffffff610e6616565b93506105968461054a34670de0b6b3a764000063ffffffff610e3b16565b92506105a982600763ffffffff610e2416565b600101905080600114156105e4576105dd6105d0606461054a86601e63ffffffff610e3b16565b849063ffffffff610e6616565b925061064d565b8060021415610606576105dd6105d0606461054a86601463ffffffff610e3b16565b8060031415610628576105dd6105d0606461054a86600a63ffffffff610e3b16565b806004141561064d5761064a6105d0606461054a86600563ffffffff610e3b16565b92505b61068c565b61066e8461054a34670de0b6b3a764000063ffffffff610e3b16565b92506106896105d0606461054a86603263ffffffff610e3b16565b92505b6106b8662386f26fc100006106ac8161054a876611c37937e08000610e66565b9063ffffffff610e3b16565b92506b01f04ef12cb04cf1580000006106dc84600054610e6690919063ffffffff16565b11156106e757600080fd5b6106f13384610e75565b50505050565b60085481565b60035460009033600160a060020a0390811691161461071b57600080fd5b6007541561072857600080fd5b5042600755600190565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107c85780601f1061079d576101008083540402835291602001916107c8565b820191906000526020600020905b8154815290600101906020018083116107ab57829003601f168201915b505050505081565b60075481565b600080600a541115156107e857600080fd5b6107f28383610f09565b9392505050565b60005481565b600080600a5411151561081157600080fd5b61081c848484610f75565b949350505050565b60065481565b6000610834610de4565b806108425750610842610dfc565b151561084d57600080fd5b600b5433600160a060020a0390811691161461086857600080fd5b6108728383610e75565b50600192915050565b600080600a5411151561088d57600080fd5b600160a060020a03831615156108a257600080fd5b600160a060020a0333166000908152600160205260409020548211156108c757600080fd5b600160a060020a0333166000908152600160205260409020546108f0908363ffffffff610e1216565b600160a060020a033381166000908152600160205260408082209390935590851681522054610925908363ffffffff610e6616565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b600080600a5411151561099857600080fd5b6107f283836110f7565b600160a060020a031660009081526001602052604090205490565b600a5481565b60035460009033600160a060020a039081169116146109e157600080fd5b600854600090116109f157600080fd5b600954156109fe57600080fd5b5042600955600190565b600b54600160a060020a031681565b600354600160a060020a031681565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107c85780601f1061079d576101008083540402835291602001916107c8565b60035460009033600160a060020a03908116911614610aaf57600080fd5b610ab7610de4565b1515610ac257600080fd5b5042600855600190565b600080600a54111515610ade57600080fd5b6107f283836111f1565b60095481565b60035460009033600160a060020a03908116911614610b0c57600080fd5b610b14610dfc565b1515610b1f57600080fd5b610b48739e6290c55faba3ffa269ccbf054f8d93586aaa6d6a295be96e64066972000000610e75565b610b7173aa2e8debeaf429a21c59c3e697d9fc5bb86e126d6a18d0bf423c03d8de000000610e75565b610b9a73dfa360fdf23dc9a7bdf1d968f453831d3351c33d6a108b2a2c28029094000000610e75565b5042600a55600b805473ffffffffffffffffffffffffffffffffffffffff19169055600190565b60035460009033600160a060020a03908116911614610bdf57600080fd5b600a5415610bec57600080fd5b50600b8054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff199091161790556001919050565b600080600a54111515610c3057600080fd5b6107f28383611208565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a03908116911614610c8057600080fd5b33600160a060020a03166108fc30600160a060020a0316319081150290604051600060405180830381858888f193505050501515610cbd57600080fd5b565b60035433600160a060020a03908116911614610cda57600080fd5b600160a060020a0381161515610cef57600080fd5b600354600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600080610d65610de4565b80610d735750610d73610dfc565b1515610d7e57600080fd5b600b5433600160a060020a03908116911614610d9957600080fd5b50600160a060020a038316600090815260016020526040902054808311610dbf57600080fd5b610dd884610dd3858463ffffffff610e1216565b610e75565b600191505b5092915050565b600080600754118015610df75750600854155b905090565b600080600954118015610df7575050600a541590565b600082821115610e1e57fe5b50900390565b6000808284811515610e3257fe5b04949350505050565b600080831515610e4e5760009150610ddd565b50828202828482811515610e5e57fe5b04146107f257fe5b6000828201838110156107f257fe5b600054610e88908263ffffffff610e6616565b6000908155600160a060020a038316815260016020526040902054610eb3908263ffffffff610e6616565b600160a060020a0383166000818152600160205260408082209390935590917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a35050565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b6000600160a060020a0383161515610f8c57600080fd5b600160a060020a038416600090815260016020526040902054821115610fb157600080fd5b600160a060020a0380851660009081526002602090815260408083203390941683529290522054821115610fe457600080fd5b600160a060020a03841660009081526001602052604090205461100d908363ffffffff610e1216565b600160a060020a038086166000908152600160205260408082209390935590851681522054611042908363ffffffff610e6616565b600160a060020a0380851660009081526001602090815260408083209490945587831682526002815283822033909316825291909152205461108a908363ffffffff610e1216565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120548083111561115457600160a060020a03338116600090815260026020908152604080832093881683529290529081205561118b565b611164818463ffffffff610e1216565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b6000600160a060020a03831615156108a257600080fd5b600160a060020a033381166000908152600260209081526040808320938616835292905290812054611240908363ffffffff610e6616565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a3506001929150505600a165627a7a72305820a1a3876a89c9d4eb7a56ba9f315c28107f7235cdd415bfd0a9bdc4d26e5029a10029"
}