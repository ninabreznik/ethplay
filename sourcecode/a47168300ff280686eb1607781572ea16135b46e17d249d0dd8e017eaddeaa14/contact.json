{
  "address": "0x800741bdeab833241d399d7840af5d4a2b8a3b7b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ATNLongTermHolding",
  "compilerVersion": "v0.4.17+commit.bdeb9e52",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-12-23\n*/\n\npragma solidity ^0.4.13;\n\ncontract DSAuthority {\n    function canCall(\n        address src, address dst, bytes4 sig\n    ) public view returns (bool);\n}\n\ncontract DSAuthEvents {\n    event LogSetAuthority (address indexed authority);\n    event LogSetOwner     (address indexed owner);\n}\n\ncontract DSAuth is DSAuthEvents {\n    DSAuthority  public  authority;\n    address      public  owner;\n\n    function DSAuth() public {\n        owner = msg.sender;\n        LogSetOwner(msg.sender);\n    }\n\n    function setOwner(address owner_)\n        public\n        auth\n    {\n        owner = owner_;\n        LogSetOwner(owner);\n    }\n\n    function setAuthority(DSAuthority authority_)\n        public\n        auth\n    {\n        authority = authority_;\n        LogSetAuthority(authority);\n    }\n\n    modifier auth {\n        require(isAuthorized(msg.sender, msg.sig));\n        _;\n    }\n\n    function isAuthorized(address src, bytes4 sig) internal view returns (bool) {\n        if (src == address(this)) {\n            return true;\n        } else if (src == owner) {\n            return true;\n        } else if (authority == DSAuthority(0)) {\n            return false;\n        } else {\n            return authority.canCall(src, this, sig);\n        }\n    }\n}\n\ncontract DSNote {\n    event LogNote(\n        bytes4   indexed  sig,\n        address  indexed  guy,\n        bytes32  indexed  foo,\n        bytes32  indexed  bar,\n        uint              wad,\n        bytes             fax\n    ) anonymous;\n\n    modifier note {\n        bytes32 foo;\n        bytes32 bar;\n\n        assembly {\n            foo := calldataload(4)\n            bar := calldataload(36)\n        }\n\n        LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);\n\n        _;\n    }\n}\n\n// Token standard API\n// https://github.com/ethereum/EIPs/issues/20\n\ncontract ERC20 {\n    function totalSupply() public view returns (uint supply);\n    function balanceOf( address who ) public view returns (uint value);\n    function allowance( address owner, address spender ) public view returns (uint _allowance);\n\n    function transfer( address to, uint value) public returns (bool ok);\n    function transferFrom( address from, address to, uint value) public returns (bool ok);\n    function approve( address spender, uint value ) public returns (bool ok);\n\n    event Transfer( address indexed from, address indexed to, uint value);\n    event Approval( address indexed owner, address indexed spender, uint value);\n}\n\ncontract DSStop is DSNote, DSAuth {\n\n    bool public stopped;\n\n    modifier stoppable {\n        require(!stopped);\n        _;\n    }\n    function stop() public auth note {\n        stopped = true;\n    }\n    function start() public auth note {\n        stopped = false;\n    }\n\n}\n\n/**\n * Math operations with safety checks\n */\nlibrary SafeMath {\n  function mul(uint a, uint b) internal returns (uint) {\n    uint c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint a, uint b) internal returns (uint) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint a, uint b) internal returns (uint) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint a, uint b) internal returns (uint) {\n    uint c = a + b;\n    assert(c >= a);\n    return c;\n  }\n\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\n    return a >= b ? a : b;\n  }\n\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\n    return a < b ? a : b;\n  }\n\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\n    return a >= b ? a : b;\n  }\n\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\n    return a < b ? a : b;\n  }\n}\n\ncontract TokenTransferGuard {\n    function onTokenTransfer(address _from, address _to, uint _amount) public returns (bool);\n}\n\ncontract RewardSharedPool is DSStop {\n    using SafeMath for uint256;\n\n    uint public maxReward      = 1000000 ether;\n\n    uint public consumed   = 0;\n\n    mapping(address => bool) public consumers;\n\n    modifier onlyConsumer {\n        require(msg.sender == owner || consumers[msg.sender]);\n        _;\n    }\n\n    function RewardSharedPool()\n    {\n    }\n\n    function consume(uint amount) onlyConsumer public returns (bool)\n    {\n        require(available(amount));\n\n        consumed = consumed.add(amount);\n\n        Consume(msg.sender, amount);\n\n        return true;\n    }\n\n    function available(uint amount) constant public returns (bool)\n    {\n        return consumed.add(amount) <= maxReward;\n    }\n\n    function changeMaxReward(uint _maxReward) auth public\n    {\n        maxReward = _maxReward;\n    }\n\n    function addConsumer(address consumer) public auth\n    {\n        consumers[consumer] = true;\n\n        ConsumerAddition(consumer);\n    }\n\n    function removeConsumer(address consumer) public auth\n    {\n        consumers[consumer] = false;\n\n        ConsumerRemoval(consumer);\n    }\n\n    event Consume(address indexed _sender, uint _value);\n    event ConsumerAddition(address indexed _consumer);\n    event ConsumerRemoval(address indexed _consumer);\n}\n\ncontract ATNLongTermHolding is DSStop, TokenTransferGuard {\n    using SafeMath for uint256;\n\n    uint public constant DEPOSIT_WINDOW                 = 60 days;\n\n    // There are three kinds of options: 1. {105, 120 days}, 2. {110, 240 days}, 3. {115, 360 days}\n    uint public rate = 105;\n    uint public withdrawal_delay    = 120 days;\n\n    uint public agtAtnReceived      = 0;\n    uint public atnSent             = 0;\n\n    uint public depositStartTime    = 0;\n    uint public depositStopTime     = 0;\n\n    RewardSharedPool public pool;\n\n    struct Record {\n        uint agtAtnAmount;\n        uint timestamp;\n    }\n\n    mapping (address => Record) public records;\n\n    ERC20 public AGT;\n    ERC20 public ATN;\n\n    uint public gasRequired;\n\n    function ATNLongTermHolding(address _agt, address _atn, address _poolAddress, uint _rate, uint _delayDays)\n    {\n        AGT = ERC20(_agt);\n        ATN = ERC20(_atn);\n\n        pool = RewardSharedPool(_poolAddress);\n\n        require(_rate > 100);\n\n        rate = _rate;\n        withdrawal_delay = _delayDays * 1 days;\n    }\n\n    function start() public auth {\n        require(depositStartTime == 0);\n\n        depositStartTime = now;\n        depositStopTime  = now + DEPOSIT_WINDOW;\n\n        Started(depositStartTime);\n    }\n\n    function changeDepositStopTimeFromNow(uint _daysFromNow) public auth {\n        depositStopTime = now + _daysFromNow * 1 days;\n    }\n\n    function tokenFallback(address _from, uint256 _value, bytes _data) public\n    {\n        tokenFallback(_from, _value);\n    }\n\n    // TODO: To test the stoppable can work or not\n    function tokenFallback(address _from, uint256 _value) public stoppable\n    {\n        if (msg.sender == address(AGT) || msg.sender == address(ATN))\n        {\n            // the owner is not count in the statistics\n            // Only owner can use to deposit the ATN reward things.\n            if (_from == owner)\n            {\n                return;\n            }\n\n            require(now <= depositStopTime);\n\n            var record = records[_from];\n\n            record.agtAtnAmount += _value;\n            record.timestamp = now;\n            records[_from] = record;\n\n            agtAtnReceived += _value;\n\n            pool.consume( _value.mul(rate - 100 ).div(100) );\n\n            Deposit(depositId++, _from, _value);\n        }\n    }\n\n    function onTokenTransfer(address _from, address _to, uint _amount) public returns (bool)\n    {\n        if (_to == address(this) && _from != owner)\n        {\n            if (msg.gas < gasRequired) return false;\n            \n            if (stopped) return false;\n            if (now > depositStopTime) return false;\n\n            // each address can only deposit once.\n            if (records[_from].timestamp > 0 ) return false;\n\n            // can not over the limit of maximum reward amount\n            if ( !pool.available( _amount.mul(rate - 100 ).div(100) ) ) return false;\n        }\n\n        return true;\n    }\n\n    function withdrawATN() public stoppable {\n        require(msg.sender != owner);\n\n        Record record = records[msg.sender];\n\n        require(record.timestamp > 0);\n\n        require(now >= record.timestamp + withdrawal_delay);\n\n        withdrawFor(msg.sender);\n    }\n\n    function withdrawATN(address _addr) public stoppable {\n        require(_addr != owner);\n\n        Record record = records[_addr];\n\n        require(record.timestamp > 0);\n\n        require(now >= record.timestamp + withdrawal_delay);\n\n        withdrawFor(_addr);\n    }\n\n    function withdrawFor(address _addr) internal {\n        Record record = records[_addr];\n        \n        uint atnAmount = record.agtAtnAmount.mul(rate).div(100);\n\n        require(ATN.transfer(_addr, atnAmount));\n\n        atnSent += atnAmount;\n\n        delete records[_addr];\n\n        Withdrawal(\n                   withdrawId++,\n                   _addr,\n                   atnAmount\n                   );\n    }\n\n    function batchWithdraw(address[] _addrList) public stoppable {\n        for (uint i = 0; i < _addrList.length; i++) {\n            if (records[_addrList[i]].timestamp > 0 && now >= records[_addrList[i]].timestamp + withdrawal_delay)\n            {\n                withdrawFor(_addrList[i]);\n            }\n        }\n    }\n\n    function changeGasRequired(uint _gasRequired) public auth {\n        gasRequired = _gasRequired;\n        ChangeGasRequired(_gasRequired);\n    }\n\n    /// @notice This method can be used by the controller to extract mistakenly\n    ///  sent tokens to this contract.\n    /// @param _token The address of the token contract that you want to recover\n    ///  set to 0 in case you want to extract ether.\n    function claimTokens(address _token) public auth {\n        if (_token == 0x0) {\n            owner.transfer(this.balance);\n            return;\n        }\n        \n        ERC20 token = ERC20(_token);\n        \n        uint256 balance = token.balanceOf(this);\n        \n        token.transfer(owner, balance);\n        ClaimedTokens(_token, owner, balance);\n    }\n\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint256 _amount);\n\n    /*\n     * EVENTS\n     */\n    /// Emitted when program starts.\n    event Started(uint _time);\n\n    /// Emitted for each sucuessful deposit.\n    uint public depositId = 0;\n    event Deposit(uint _depositId, address indexed _addr, uint agtAtnAmount);\n\n    /// Emitted for each sucuessful withdrawal.\n    uint public withdrawId = 0;\n    event Withdrawal(uint _withdrawId, address indexed _addr, uint _atnAmount);\n\n    event ChangeGasRequired(uint _gasRequired);\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"DEPOSIT_WINDOW\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawATN\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"AGT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ATN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_daysFromNow\",\"type\":\"uint256\"}],\"name\":\"changeDepositStopTimeFromNow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrList\",\"type\":\"address[]\"}],\"name\":\"batchWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"records\",\"outputs\":[{\"name\":\"agtAtnAmount\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"depositStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"atnSent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"withdrawATN\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gasRequired\",\"type\":\"uint256\"}],\"name\":\"changeGasRequired\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"depositStopTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"depositId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gasRequired\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"agtAtnReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawal_delay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_agt\",\"type\":\"address\"},{\"name\":\"_atn\",\"type\":\"address\"},{\"name\":\"_poolAddress\",\"type\":\"address\"},{\"name\":\"_rate\",\"type\":\"uint256\"},{\"name\":\"_delayDays\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"Started\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_depositId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"agtAtnAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_withdrawId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_atnAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_gasRequired\",\"type\":\"uint256\"}],\"name\":\"ChangeGasRequired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"}]",
  "bytecode": "60606040526069600255629e340060035560006004556000600555600060065560006007556000600d556000600e55341561003957600080fd5b60405160a08061125b833981016040528080519190602001805191906020018051919060200180519190602001805160018054600160a060020a03191633600160a060020a031690811790915590925090507fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a2600a8054600160a060020a03808816600160a060020a031992831617909255600b805487841690831617905560088054928616929091169190911790556064821161010157600080fd5b600291909155620151800260035550505061113a806101216000396000f300606060405236156101645763ffffffff60e060020a60003504166305c0dd91811461016957806307da68f51461018e5780630e69890f146101a357806313af4035146101b657806316f0115b146101d5578063256738d1146102045780632c4e722e146102175780632dd522c61461022a57806336d43c241461023d5780633ad17019146102505780633b66d02b14610266578063431cc3dd14610288578063469e9067146102d7578063587419d51461030e5780636097bca9146103215780636457124514610334578063677ba3d31461035357806370c33b311461038f57806373c4942a146103a557806375f12b21146103b85780637a9e5e4b146103cb5780638da5cb5b146103ea5780639852099c146103fd578063b37983e214610410578063b512e8a614610423578063be9a655514610436578063bf7e214f14610449578063c0ee0b8a1461045c578063df8de3e7146104c1578063eaa26f0f146104e0575b600080fd5b341561017457600080fd5b61017c6104f3565b60405190815260200160405180910390f35b341561019957600080fd5b6101a16104fa565b005b34156101ae57600080fd5b6101a1610599565b34156101c157600080fd5b6101a1600160a060020a036004351661061b565b34156101e057600080fd5b6101e861069a565b604051600160a060020a03909116815260200160405180910390f35b341561020f57600080fd5b6101e86106a9565b341561022257600080fd5b61017c6106b8565b341561023557600080fd5b6101e86106be565b341561024857600080fd5b61017c6106cd565b341561025b57600080fd5b6101a16004356106d3565b341561027157600080fd5b6101a1600160a060020a0360043516602435610700565b341561029357600080fd5b6101a1600460248135818101908301358060208181020160405190810160405280939291908181526020018383602002808284375094965061088a95505050505050565b34156102e257600080fd5b6102f6600160a060020a036004351661096e565b60405191825260208201526040908101905180910390f35b341561031957600080fd5b61017c610987565b341561032c57600080fd5b61017c61098d565b341561033f57600080fd5b6101a1600160a060020a0360043516610993565b341561035e57600080fd5b61037b600160a060020a0360043581169060243516604435610a11565b604051901515815260200160405180910390f35b341561039a57600080fd5b6101a1600435610b56565b34156103b057600080fd5b61017c610bb2565b34156103c357600080fd5b61037b610bb8565b34156103d657600080fd5b6101a1600160a060020a0360043516610bc8565b34156103f557600080fd5b6101e8610c47565b341561040857600080fd5b61017c610c56565b341561041b57600080fd5b61017c610c5c565b341561042e57600080fd5b61017c610c62565b341561044157600080fd5b6101a1610c68565b341561045457600080fd5b6101e8610cd9565b341561046757600080fd5b6101a160048035600160a060020a03169060248035919060649060443590810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610ce895505050505050565b34156104cc57600080fd5b6101a1600160a060020a0360043516610cf2565b34156104eb57600080fd5b61017c610ea2565b624f1a0081565b61051033600035600160e060020a031916610ea8565b151561051b57600080fd5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a450506001805474ff0000000000000000000000000000000000000000191660a060020a179055565b60015460009060a060020a900460ff16156105b357600080fd5b60015433600160a060020a03908116911614156105cf57600080fd5b50600160a060020a03331660009081526009602052604081206001810154909190116105fa57600080fd5b60035460018201540142101561060f57600080fd5b61061833610fa0565b50565b61063133600035600160e060020a031916610ea8565b151561063c57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b600854600160a060020a031681565b600a54600160a060020a031681565b60025481565b600b54600160a060020a031681565b600e5481565b6106e933600035600160e060020a031916610ea8565b15156106f457600080fd5b62015180024201600755565b60015460009060a060020a900460ff161561071a57600080fd5b600a5433600160a060020a03908116911614806107455750600b5433600160a060020a039081169116145b1561088557600154600160a060020a038481169116141561076557610885565b60075442111561077457600080fd5b50600160a060020a03808316600090815260096020526040902080548301815542600182015560048054840190556008546002549192169063483f31ab906107da906064906107ce9087906063190163ffffffff6110d316565b9063ffffffff6110f716565b60006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561081957600080fd5b6102c65a03f1151561082a57600080fd5b50505060405180515050600d805460018101909155600160a060020a038416907feaa18152488ce5959073c9c79c88ca90b3d96c00de1f118cfaad664c3dab06b9908460405191825260208201526040908101905180910390a25b505050565b60015460009060a060020a900460ff16156108a457600080fd5b5060005b815181101561096a576000600960008484815181106108c357fe5b90602001906020020151600160a060020a0316600160a060020a031681526020019081526020016000206001015411801561093f57506003546009600084848151811061090c57fe5b90602001906020020151600160a060020a0316600160a060020a0316815260200190815260200160002060010154014210155b156109625761096282828151811061095357fe5b90602001906020020151610fa0565b6001016108a8565b5050565b6009602052600090815260409020805460019091015482565b60065481565b60055481565b60015460009060a060020a900460ff16156109ad57600080fd5b600154600160a060020a03838116911614156109c857600080fd5b50600160a060020a03811660009081526009602052604081206001810154909190116109f357600080fd5b600354600182015401421015610a0857600080fd5b61096a82610fa0565b600030600160a060020a031683600160a060020a0316148015610a425750600154600160a060020a03858116911614155b15610b4b57600c545a1015610a5957506000610b4f565b60015460a060020a900460ff1615610a7357506000610b4f565b600754421115610a8557506000610b4f565b600160a060020a0384166000908152600960205260408120600101541115610aaf57506000610b4f565b600854600254600160a060020a03909116906396e494e890610ae3906064906107ce9087906063190163ffffffff6110d316565b60006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610b2257600080fd5b6102c65a03f11515610b3357600080fd5b505050604051805190501515610b4b57506000610b4f565b5060015b9392505050565b610b6c33600035600160e060020a031916610ea8565b1515610b7757600080fd5b600c8190557fba80cf3b8b1f939f43a1193cafc6d8bbde816cd5009913821401c2703d248a598160405190815260200160405180910390a150565b60075481565b60015460a060020a900460ff1681565b610bde33600035600160e060020a031916610ea8565b1515610be957600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600154600160a060020a031681565b600d5481565b600c5481565b60045481565b610c7e33600035600160e060020a031916610ea8565b1515610c8957600080fd5b60065415610c9657600080fd5b426006819055624f1a0081016007557e6e0c97de781a7389d44ba8fd35d1467cabb17ed04d038d166d34ab819213f39060405190815260200160405180910390a1565b600054600160a060020a031681565b6108858383610700565b600080610d0b33600035600160e060020a031916610ea8565b1515610d1657600080fd5b600160a060020a0383161515610d6457600154600160a060020a039081169030163180156108fc0290604051600060405180830381858888f193505050501515610d5f57600080fd5b610885565b82915081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610dbe57600080fd5b6102c65a03f11515610dcf57600080fd5b5050506040518051600154909250600160a060020a03808516925063a9059cbb91168360006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610e3e57600080fd5b6102c65a03f11515610e4f57600080fd5b50505060405180515050600154600160a060020a039081169084167ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c8360405190815260200160405180910390a3505050565b60035481565b600030600160a060020a031683600160a060020a03161415610ecc57506001610f9a565b600154600160a060020a0384811691161415610eea57506001610f9a565b600054600160a060020a03161515610f0457506000610f9a565b60008054600160a060020a03169063b7009613908590309086906040516020015260405160e060020a63ffffffff8616028152600160a060020a039384166004820152919092166024820152600160e060020a03199091166044820152606401602060405180830381600087803b1515610f7d57600080fd5b6102c65a03f11515610f8e57600080fd5b50505060405180519150505b92915050565b600160a060020a03811660009081526009602052604081206002548154919291610fd6916064916107ce9163ffffffff6110d316565b600b54909150600160a060020a031663a9059cbb848360006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561103857600080fd5b6102c65a03f1151561104957600080fd5b50505060405180519050151561105e57600080fd5b6005805482019055600160a060020a038316600081815260096020526040808220828155600190810192909255600e805492830190557f37e8063b72a944a76de602f32b82fd8c2a1c6f99564c727ffaf913c7762cd420919084905191825260208201526040908101905180910390a2505050565b60008282028315806110ef57508284828115156110ec57fe5b04145b1515610b4f57fe5b600080828481151561110557fe5b049493505050505600a165627a7a72305820d3354f163b4a8b6bb65ae4992b405a554b2bd405a77f5c24ac6c290352a5e11c0029000000000000000000000000ed1eba8b87cd7e04e9389f65f7aeca750c85a010000000000000000000000000461733c17b0755ca5649b6db08b3e213fcf225460000000000000000000000008df49dcf9cc6fca7c530db05147ab8e0305c7c8200000000000000000000000000000000000000000000000000000000000000690000000000000000000000000000000000000000000000000000000000000078",
  "constructorArguments": "000000000000000000000000ed1eba8b87cd7e04e9389f65f7aeca750c85a010000000000000000000000000461733c17b0755ca5649b6db08b3e213fcf225460000000000000000000000008df49dcf9cc6fca7c530db05147ab8e0305c7c8200000000000000000000000000000000000000000000000000000000000000690000000000000000000000000000000000000000000000000000000000000078"
}