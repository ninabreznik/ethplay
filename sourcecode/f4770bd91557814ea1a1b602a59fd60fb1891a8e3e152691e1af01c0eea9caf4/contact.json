{
  "address": "0x4acbad9064c1a248ff73b1855613c16d9f5894b4",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BiLinkExchange",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-31\n*/\n\npragma solidity ^0.4.13;\n\ncontract Ownable \n\n{\n\n  address public owner;\n\n \n\n  constructor(address _owner) public \n\n  {\n\n    owner = _owner;\n\n  }\n\n \n\n  modifier onlyOwner() \n\n  {\n\n    require(msg.sender == owner);\n\n    _;\n\n  }\n\n \n\n  function transferOwnership(address newOwner) onlyOwner \n\n  {\n\n    require(newOwner != address(0));      \n\n    owner = newOwner;\n\n  }\n\n}\n\ncontract IBalance {\n\n\tfunction distributeEthProfit(address profitMaker, uint256 amount) public  ;\n\n\tfunction distributeTokenProfit (address profitMaker, address token, uint256 amount) public  ;\n\n\tfunction modifyBalance(address _account, address _token, uint256 _amount, bool _addOrSub) public;\n\n\tfunction getAvailableBalance(address _token, address _account) public constant returns (uint256);\n\n}\n\ncontract IToken {\n\n\n\n  /// @notice send `_value` token to `_to` from `msg.sender`\n\n  /// @param _to The address of the recipient\n\n  /// @param _value The amount of token to be transferred\n\n  /// @return Whether the transfer was successful or not\n\n  function transfer(address _to, uint256 _value) public returns (bool success);\n\n\n\n  /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n\n  /// @param _from The address of the sender\n\n  /// @param _to The address of the recipient\n\n  /// @param _value The amount of token to be transferred\n\n  /// @return Whether the transfer was successful or not\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n\n\n\n  function approve(address _spender, uint256 _value) public returns (bool success);\n\n\n\n}\n\nlibrary SafeMath {\n\n\n\n  /**\n\n  * @dev Multiplies two numbers, throws on overflow.\n\n  */\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n\n    if (a == 0) {\n\n      return 0;\n\n    }\n\n    uint256 c = a * b;\n\n    require(c / a == b);\n\n    return c;\n\n  }\n\n\n\n  /**\n\n  * @dev Integer division of two numbers, truncating the quotient.\n\n  */\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n\n    require(b > 0); // Solidity automatically throws when dividing by 0\n\n    uint256 c = a / b;\n\n    return c;\n\n  }\n\n\n\n  /**\n\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n\n  */\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\n    require(b <= a);\n\n    return a - b;\n\n  }\n\n\n\n  /**\n\n  * @dev Adds two numbers, throws on overflow.\n\n  */\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n\n    uint256 c = a + b;\n\n    require(c >= a);\n\n    return c;\n\n  }\n\n}\n\ncontract BiLinkExchange is Ownable {\n\n\tusing SafeMath for uint256;\n\n\n\n\taddress public contractBalance;\n\n\tuint256 public commissionRatio;//percentage\n\n\n\n\tmapping (address => mapping ( bytes32 => uint256)) public account2Order2TradeAmount;\n\n\n\n\tbool public isLegacy;//if true, not allow new trade,new deposit\n\n\n\n\tevent OnTrade(bytes32 guid, address tokenGive, address tokenGet, address maker, address taker, uint256 amountGive, uint256 amountGet, uint256 amountGetTrade, uint256 timestamp);\n\n\t\n\n\n\n\tconstructor(address _owner, uint256 _commissionRatio) public Ownable(_owner) {\n\n\t\tisLegacy= false;\n\n\t\tcommissionRatio= _commissionRatio;\n\n\t}\n\n\n\n\tfunction setThisContractAsLegacy() public onlyOwner {\n\n\t\tisLegacy= true;\n\n\t}\n\n\n\n\tfunction setBalanceContract(address _contractBalance) public onlyOwner {\n\n\t\tcontractBalance= _contractBalance;\n\n\t}\n\n\n\n\t//_arr1:tokenGive,tokenGet,maker\n\n\t//_arr2:amountGive,amountGet,amountGetTrade,expireTime\n\n\t//_arr3:rMaker,sMaker\n\n\t//parameters are from taker's perspective\n\n\tfunction trade(address[] _arr1, uint256[] _arr2, bytes32 _guid, uint8 _vMaker, bytes32[] _arr3) public {\n\n\t\trequire(isLegacy== false&& now <= _arr2[3]);\n\n\n\n\t\tuint256 _amountTokenGiveTrade= _arr2[0].mul(_arr2[2]).div(_arr2[1]);\n\n\t\trequire(_arr2[2]<= IBalance(contractBalance).getAvailableBalance(_arr1[1], _arr1[2])&&_amountTokenGiveTrade<= IBalance(contractBalance).getAvailableBalance(_arr1[0], msg.sender));\n\n\n\n\t\tbytes32 _hash = keccak256(abi.encodePacked(this, _arr1[1], _arr1[0], _arr2[1], _arr2[0], _arr2[3]));\n\n\t\trequire(ecrecover(_hash, _vMaker, _arr3[0], _arr3[1]) ==  _arr1[2]&& account2Order2TradeAmount[_arr1[2]][_hash].add(_arr2[2])<= _arr2[1]);\n\n\n\n\t\tuint256 _commission= _arr2[2].mul(commissionRatio).div(10000);\n\n\t\t\n\n\t\tIBalance(contractBalance).modifyBalance(msg.sender, _arr1[1], _arr2[2].sub(_commission), true);\n\n\t\tIBalance(contractBalance).modifyBalance(_arr1[2], _arr1[1], _arr2[2], false); \n\n\t\t\n\n\t\tIBalance(contractBalance).modifyBalance(msg.sender, _arr1[0], _amountTokenGiveTrade, false);\n\n\t\tIBalance(contractBalance).modifyBalance(_arr1[2], _arr1[0], _amountTokenGiveTrade, true);\n\n\t\taccount2Order2TradeAmount[_arr1[2]][_hash]= account2Order2TradeAmount[_arr1[2]][_hash].add(_arr2[2]);\n\n\t\t\t\t\t\t\n\n\t\tif(_arr1[1]== address(0)) {\n\n\t\t\tIBalance(contractBalance).distributeEthProfit(msg.sender, _commission);\n\n\t\t}\n\n\t\telse {\n\n\t\t\tIBalance(contractBalance).distributeTokenProfit(msg.sender, _arr1[1], _commission);\n\n\t\t}\n\n\n\n\t\temit OnTrade(_guid, _arr1[0], _arr1[1], _arr1[2], msg.sender, _arr2[0], _arr2[1], _arr2[2], now);\n\n\t}\n\n}",
  "bytecode": "608060405234801561001057600080fd5b50604051604080611989833981018060405281019080805190602001909291908051906020019092919050505081806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506000600460006101000a81548160ff0219169083151502179055508060028190555050506118d7806100b26000396000f300608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063175ca2071461009e578063313cb4dd146101a5578063898786ac146101bc5780638b7afe2e146101ff5780638da5cb5b14610256578063a2ba6ef8146102ad578063bc3dfaf114610312578063ca5e1f8d1461033d578063f2fde38b1461036c575b600080fd5b3480156100aa57600080fd5b506101a360048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192908035600019169060200190929190803560ff169060200190929190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506103af565b005b3480156101b157600080fd5b506101ba61158c565b005b3480156101c857600080fd5b506101fd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611604565b005b34801561020b57600080fd5b506102146116a3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026257600080fd5b5061026b6116c9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b957600080fd5b506102fc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356000191690602001909291905050506116ee565b6040518082815260200191505060405180910390f35b34801561031e57600080fd5b50610327611713565b6040518082815260200191505060405180910390f35b34801561034957600080fd5b50610352611719565b604051808215151515815260200191505060405180910390f35b34801561037857600080fd5b506103ad600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061172c565b005b6000806000801515600460009054906101000a900460ff1615151480156103ee57508660038151811015156103e057fe5b906020019060200201514211155b15156103f957600080fd5b61046687600181518110151561040b57fe5b9060200190602002015161045889600281518110151561042757fe5b906020019060200201518a600081518110151561044057fe5b9060200190602002015161180690919063ffffffff16565b61184490919063ffffffff16565b9250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2838a738960018151811015156104b557fe5b906020019060200201518a60028151811015156104ce57fe5b906020019060200201516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561058957600080fd5b505af115801561059d573d6000803e3d6000fd5b505050506040513d60208110156105b357600080fd5b81019080805190602001909291905050508760028151811015156105d357fe5b906020019060200201511115801561072e5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2838a7389600081518110151561063357fe5b90602001906020020151336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1580156106ef57600080fd5b505af1158015610703573d6000803e3d6000fd5b505050506040513d602081101561071957600080fd5b81019080805190602001909291905050508311155b151561073957600080fd5b3088600181518110151561074957fe5b9060200190602002015189600081518110151561076257fe5b9060200190602002015189600181518110151561077b57fe5b906020019060200201518a600081518110151561079457fe5b906020019060200201518b60038151811015156107ad57fe5b90602001906020020151604051602001808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b6020831015156108df57805182526020820191506020810190506020830392506108ba565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020915087600281518110151561091d57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff166001838787600081518110151561095057fe5b9060200190602002015188600181518110151561096957fe5b90602001906020020151604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af11580156109e4573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff16148015610ac35750866001815181101515610a1b57fe5b90602001906020020151610ac0886002815181101515610a3757fe5b90602001906020020151600360008c6002815181101515610a5457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086600019166000191681526020019081526020016000205461186e90919063ffffffff16565b11155b1515610ace57600080fd5b610b0f612710610b016002548a6002815181101515610ae957fe5b9060200190602002015161180690919063ffffffff16565b61184490919063ffffffff16565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368db6c96338a6001815181101515610b5f57fe5b90602001906020020151610b94858c6002815181101515610b7c57fe5b9060200190602002015161188f90919063ffffffff16565b60016040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001945050505050600060405180830381600087803b158015610c5957600080fd5b505af1158015610c6d573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368db6c96896002815181101515610cbe57fe5b906020019060200201518a6001815181101515610cd757fe5b906020019060200201518a6002815181101515610cf057fe5b9060200190602002015160006040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001945050505050600060405180830381600087803b158015610dbf57600080fd5b505af1158015610dd3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368db6c96338a6000815181101515610e2557fe5b906020019060200201518660006040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001945050505050600060405180830381600087803b158015610ef557600080fd5b505af1158015610f09573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368db6c96896002815181101515610f5a57fe5b906020019060200201518a6000815181101515610f7357fe5b906020019060200201518660016040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001945050505050600060405180830381600087803b15801561104357600080fd5b505af1158015611057573d6000803e3d6000fd5b505050506110f687600281518110151561106d57fe5b90602001906020020151600360008b600281518110151561108a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085600019166000191681526020019081526020016000205461186e90919063ffffffff16565b600360008a600281518110151561110957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846000191660001916815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff1688600181518110151561119157fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141561129957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb2e379a33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561127c57600080fd5b505af1158015611290573d6000803e3d6000fd5b505050506113c3565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663757060a5338a60018151811015156112e757fe5b90602001906020020151846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156113aa57600080fd5b505af11580156113be573d6000803e3d6000fd5b505050505b7fb22aa78ea09a55aa3481a2ccab361989913e9aa97cd6d9cbce9a7666279758a8868960008151811015156113f457fe5b906020019060200201518a600181518110151561140d57fe5b906020019060200201518b600281518110151561142657fe5b90602001906020020151338c600081518110151561144057fe5b906020019060200201518d600181518110151561145957fe5b906020019060200201518e600281518110151561147257fe5b9060200190602002015142604051808a600019166000191681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001838152602001828152602001995050505050505050505060405180910390a15050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115e757600080fd5b6001600460006101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561165f57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052816000526040600020602052806000526040600020600091509150505481565b60025481565b600460009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561178757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117c357600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600084141561181b576000915061183d565b828402905082848281151561182c57fe5b0414151561183957600080fd5b8091505b5092915050565b60008060008311151561185657600080fd5b828481151561186157fe5b0490508091505092915050565b600080828401905083811015151561188557600080fd5b8091505092915050565b60008282111515156118a057600080fd5b8183039050929150505600a165627a7a72305820c15637172fc9269b2f91eedca40da3867882398a6c5ceb74fe089bd0c5d9213c0029000000000000000000000000e4e3627034a97b75d899ee7525d446bf2d42ad660000000000000000000000000000000000000000000000000000000000000014",
  "constructorArguments": "000000000000000000000000e4e3627034a97b75d899ee7525d446bf2d42ad660000000000000000000000000000000000000000000000000000000000000014"
}