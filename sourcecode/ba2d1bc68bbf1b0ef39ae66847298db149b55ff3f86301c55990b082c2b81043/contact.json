{
  "address": "0x0f87a097B73444da66f67cdBd1126038b320Fc3A",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "OwnedUpgradeabilityProxy",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-29\n*/\n\n// File: contracts/Proxy/OwnedUpgradeabilityProxy.sol\n\npragma solidity >=0.4.25 <0.6.0;\n\n/**\n * @title OwnedUpgradeabilityProxy\n * @dev This contract combines an upgradeability proxy with basic authorization control functionalities\n */\ncontract OwnedUpgradeabilityProxy {\n    /**\n    * @dev Event to show ownership has been transferred\n    * @param previousOwner representing the address of the previous owner\n    * @param newOwner representing the address of the new owner\n    */\n    event ProxyOwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n    * @dev Event to show ownership transfer is pending\n    * @param currentOwner representing the address of the current owner\n    * @param pendingOwner representing the address of the pending owner\n    */\n    event NewPendingOwner(address currentOwner, address pendingOwner);\n    \n    // Storage position of the owner and pendingOwner of the contract\n    bytes32 private constant proxyOwnerPosition = 0x6004f6b6eb3de57beb988d207d67d1fd96d97f56565b653b6e80b856d7c1a35f;//keccak256(\"EURON.proxy.owner\");\n    bytes32 private constant pendingProxyOwnerPosition = 0x76a33b3ea4443d67022b6c5254816af27c5cfd5c856e0422ce98ad937f4d709d;//keccak256(\"EURON.pending.proxy.owner\");\n\n    /**\n    * @dev the constructor sets the original owner of the contract to the sender account.\n    */\n    constructor() public {\n        _setUpgradeabilityOwner(msg.sender);\n    }\n\n    /**\n    * @dev Throws if called by any account other than the owner.\n    */\n    modifier onlyProxyOwner() {\n        require(msg.sender == proxyOwner(), \"only Proxy Owner\");\n        _;\n    }\n\n    /**\n    * @dev Throws if called by any account other than the pending owner.\n    */\n    modifier onlyPendingProxyOwner() {\n        require(msg.sender == pendingProxyOwner(), \"only pending Proxy Owner\");\n        _;\n    }\n\n    /**\n    * @dev Tells the address of the owner\n    * @return the address of the owner\n    */\n    function proxyOwner() public view returns (address owner) {\n        bytes32 position = proxyOwnerPosition;\n        assembly {\n            owner := sload(position)\n        }\n    }\n\n    /**\n    * @dev Tells the address of the owner\n    * @return the address of the owner\n    */\n    function pendingProxyOwner() public view returns (address pendingOwner) {\n        bytes32 position = pendingProxyOwnerPosition;\n        assembly {\n            pendingOwner := sload(position)\n        }\n    }\n\n    /**\n    * @dev Sets the address of the owner\n    */\n    function _setUpgradeabilityOwner(address newProxyOwner) internal {\n        bytes32 position = proxyOwnerPosition;\n        assembly {\n            sstore(position, newProxyOwner)\n        }\n    }\n\n    /**\n    * @dev Sets the address of the owner\n    */\n    function _setPendingUpgradeabilityOwner(address newPendingProxyOwner) internal {\n        bytes32 position = pendingProxyOwnerPosition;\n        assembly {\n            sstore(position, newPendingProxyOwner)\n        }\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    *changes the pending owner to newOwner. But doesn't actually transfer\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferProxyOwnership(address newOwner) external onlyProxyOwner {\n        require(newOwner != address(0));\n        _setPendingUpgradeabilityOwner(newOwner);\n        emit NewPendingOwner(proxyOwner(), newOwner);\n    }\n\n    /**\n    * @dev Allows the pendingOwner to claim ownership of the proxy\n    */\n    function claimProxyOwnership() external onlyPendingProxyOwner {\n        emit ProxyOwnershipTransferred(proxyOwner(), pendingProxyOwner());\n        _setUpgradeabilityOwner(pendingProxyOwner());\n        _setPendingUpgradeabilityOwner(address(0));\n    }\n\n    /**\n    * @dev Allows the proxy owner to upgrade the current version of the proxy.\n    * @param implementation representing the address of the new implementation to be set.\n    */\n    function upgradeTo(address implementation) external onlyProxyOwner {\n        address currentImplementation;\n        bytes32 position = implementationPosition;\n        assembly {\n            currentImplementation := sload(position)\n        }\n        require(currentImplementation != implementation);\n        assembly {\n          sstore(position, implementation)\n        }\n        emit Upgraded(implementation);\n    }\n    /**\n    * @dev This event will be emitted every time the implementation gets upgraded\n    * @param implementation representing the address of the upgraded implementation\n    */\n    event Upgraded(address indexed implementation);\n\n    // Storage position of the address of the current implementation\n    bytes32 private constant implementationPosition = 0x84b64b507833ba7e4ea61b69390489bd134000b6d1333e6a1617aac294fa83f7; //keccak256(\"EURON.proxy.implementation\");\n\n    function implementation() public view returns (address impl) {\n        bytes32 position = implementationPosition;\n        assembly {\n            impl := sload(position)\n        }\n    }\n\n    /**\n    * @dev Fallback function allowing to perform a delegatecall to the given implementation.\n    * This function will return whatever the implementation call returns\n    */\n    function() external payable {\n        bytes32 position = implementationPosition;\n        \n        assembly {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, returndatasize, calldatasize)\n            let result := delegatecall(gas, sload(position), ptr, calldatasize, returndatasize, returndatasize)\n            returndatacopy(ptr, 0, returndatasize)\n\n            switch result\n            case 0 { revert(ptr, returndatasize) }\n            default { return(ptr, returndatasize) }\n        }\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"proxyOwner\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingProxyOwner\",\"outputs\":[{\"name\":\"pendingOwner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"name\":\"impl\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimProxyOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferProxyOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ProxyOwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"currentOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"NewPendingOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b506100203361002560201b60201c565b610054565b60007f6004f6b6eb3de57beb988d207d67d1fd96d97f56565b653b6e80b856d7c1a35f60001b90508181555050565b61078e806100636000396000f3fe6080604052600436106100555760003560e01c8063025313a2146100a25780630add8140146100f95780633659cfe6146101505780635c60da1b146101a15780639965b3d6146101f8578063f1739cae1461020f575b60007f84b64b507833ba7e4ea61b69390489bd134000b6d1333e6a1617aac294fa83f760001b9050604051363d82373d3d368385545af43d6000833e806000811461009e573d83f35b3d83fd5b3480156100ae57600080fd5b506100b7610260565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010557600080fd5b5061010e610291565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015c57600080fd5b5061019f6004803603602081101561017357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c2565b005b3480156101ad57600080fd5b506101b661041b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020457600080fd5b5061020d61044c565b005b34801561021b57600080fd5b5061025e6004803603602081101561023257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610578565b005b6000807f6004f6b6eb3de57beb988d207d67d1fd96d97f56565b653b6e80b856d7c1a35f60001b9050805491505090565b6000807f76a33b3ea4443d67022b6c5254816af27c5cfd5c856e0422ce98ad937f4d709d60001b9050805491505090565b6102ca610260565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6f6e6c792050726f7879204f776e65720000000000000000000000000000000081525060200191505060405180910390fd5b6000807f84b64b507833ba7e4ea61b69390489bd134000b6d1333e6a1617aac294fa83f760001b9050805491508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156103d057600080fd5b8281558273ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2505050565b6000807f84b64b507833ba7e4ea61b69390489bd134000b6d1333e6a1617aac294fa83f760001b9050805491505090565b610454610291565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6f6e6c792070656e64696e672050726f7879204f776e6572000000000000000081525060200191505060405180910390fd5b6104fc610291565b73ffffffffffffffffffffffffffffffffffffffff1661051a610260565b73ffffffffffffffffffffffffffffffffffffffff167f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd960405160405180910390a361056c610567610291565b610704565b6105766000610733565b565b610580610260565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610620576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6f6e6c792050726f7879204f776e65720000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561065a57600080fd5b61066381610733565b7fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b61068c610260565b82604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b60007f6004f6b6eb3de57beb988d207d67d1fd96d97f56565b653b6e80b856d7c1a35f60001b90508181555050565b60007f76a33b3ea4443d67022b6c5254816af27c5cfd5c856e0422ce98ad937f4d709d60001b9050818155505056fea165627a7a72305820814820379199413a638274d704fb562f6385ec6ac253f9b842b62fc49429e84c0029"
}