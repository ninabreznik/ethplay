{
  "address": "0x4fbcb7bb2cff6be6b86386c7b8e7581f5ff2c57c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Airdrop",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-15\n*/\n\npragma solidity ^0.4.19;\n\ninterface token {\n    function transferFrom(address from, address receiver, uint amount) public;\n}\n\ncontract Owned {\n    address public owner;\n\n    function Owned() public{\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address newOwner) onlyOwner public{\n        owner = newOwner;\n    }\n}\n\n\ncontract Airdrop is Owned {\n  /**\n   * @dev daAirdrop to address\n   * @param _tokenAddr address the erc20 token address\n   * @param dests address[] addresses to airdrop\n   * @param values uint256[] value(in ether) to airdrop\n   */\n  function doAirdrop(address _tokenAddr, address[] dests, uint256[] values) onlyOwner public returns (uint256) {\n    uint256 i = 0;\n    while (i < dests.length) {\n      token(_tokenAddr).transferFrom(msg.sender, dests[i], values[i] * (10 ** 18));\n      i += 1;\n    }\n    return(i);\n  }\n}",
  "bytecode": "6060604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061044a806100536000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632f1afbac1461005c5780638da5cb5b14610129578063f2fde38b1461017e575b600080fd5b341561006757600080fd5b610113600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919050506101b7565b6040518082815260200191505060405180910390f35b341561013457600080fd5b61013c61035b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018957600080fd5b6101b5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610380565b005b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561021557600080fd5b600090505b8351811015610350578473ffffffffffffffffffffffffffffffffffffffff166323b872dd33868481518110151561024e57fe5b90602001906020020151670de0b6b3a7640000878681518110151561026f57fe5b90602001906020020151026040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561033157600080fd5b6102c65a03f1151561034257600080fd5b50505060018101905061021a565b809150509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103db57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820e95fe3a63e5f8137dc6676530001b3fe4bc4feffd10a606cd7569f2f516bbf4b0029"
}