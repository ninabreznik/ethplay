{
  "address": "0x51f43d0c05eefdeb70eeaf973e0b8286e494902d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Exsender",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-28\n*/\n\npragma solidity ^0.5.8;\n\n/**\n * @title SafeMath\n */\nlibrary SafeMath {\n\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n   function div(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n    /**\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n}\n\ncontract ERC20Standard {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address tokenOwner) public view returns (uint256 balance);\n    function allowance(address tokenOwner, address spender) public view returns (uint256 remaining);\n    function transfer(address to, uint256 tokens) public returns (bool success);\n    function approve(address spender, uint256 tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint256 tokens) public returns (bool success);\n}\n\ncontract Owned {\n    address payable public owner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address payable newOwner) public onlyOwner {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n}\n\ncontract Exsender is Owned {\n    using SafeMath for uint256;\n    \n    function distributeForeignTokenWithUnifiedAmount(ERC20Standard _tokenContract, address[] calldata _addresses, uint256 _amount) external {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            _tokenContract.transferFrom(msg.sender, _addresses[i], _amount);\n        }\n    }\n    \n    function distributeForeignTokenWithSplittedAmount(ERC20Standard _tokenContract, address[] calldata _addresses, uint256[] calldata _amounts) external {\n        require(_addresses.length == _amounts.length);\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            _tokenContract.transferFrom(msg.sender, _addresses[i], _amounts[i]);\n        }\n    }\n    \n    function distributeEtherWithUnifiedAmount(address payable[] calldata _addresses) payable external {\n        uint256 amount = msg.value.div(_addresses.length);\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            _addresses[i].transfer(amount);\n        }\n    }\n    \n    function distributeEtherWithSplittedAmount(address payable[] calldata _addresses, uint256[] calldata _amounts) payable external {\n        require(_addresses.length == _amounts.length);\n        require(msg.value >= sumArray(_amounts));\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            _addresses[i].transfer(_amounts[i]);\n        }\n    }\n    \n    function liftTokensToSingleAddress(ERC20Standard[] calldata _tokenContract, address _receiver, uint256[] calldata _amounts) external {\n        for (uint256 i = 0; i < _tokenContract.length; i++) {\n            _tokenContract[i].transferFrom(msg.sender, _receiver, _amounts[i]);\n        }\n    }\n\n    function liftTokensToMultipleAddresses(ERC20Standard[] calldata _tokenContract, address[] calldata _receiver, uint256[] calldata _amounts) external {\n        for (uint256 i = 0; i < _tokenContract.length; i++) {\n            _tokenContract[i].transferFrom(msg.sender, _receiver[i], _amounts[i]);\n        }\n    }\n    \n    function getForeignTokenBalance(ERC20Standard _tokenContract, address who) view public returns (uint256) {\n        return _tokenContract.balanceOf(who);\n    }\n        \n    function transferEther(address payable _receiver, uint256 _amount) public onlyOwner {\n        require(_amount <= address(this).balance);\n        emit TransferEther(address(this), _receiver, _amount);\n        _receiver.transfer(_amount);\n    }\n    \n    function withdrawFund() onlyOwner public {\n        uint256 balance = address(this).balance;\n        owner.transfer(balance);\n    }\n    \n    function withdrawForeignTokens(ERC20Standard _tokenContract) onlyOwner public {\n        uint256 amount = _tokenContract.balanceOf(address(this));\n        _tokenContract.transfer(owner, amount);\n    }\n\n    function sumArray(uint256[] memory _array) public pure returns (uint256 sum_) {\n        sum_ = 0;\n        for (uint256 i = 0; i < _array.length; i++) {\n            sum_ += _array[i];\n        }\n    }\n    event TransferEther(address indexed _from, address indexed _to, uint256 _value);\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address[]\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"liftTokensToSingleAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_array\",\"type\":\"uint256[]\"}],\"name\":\"sumArray\",\"outputs\":[{\"name\":\"sum_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getForeignTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"distributeForeignTokenWithUnifiedAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"distributeEtherWithUnifiedAmount\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address[]\"},{\"name\":\"_receiver\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"liftTokensToMultipleAddresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"distributeEtherWithSplittedAmount\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"distributeForeignTokenWithSplittedAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": ""
}