{
  "address": "0xe12128d653b62f08fbed56bdeb65db729b6691c3",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "BreezeCoin Token",
  "contractName": "BreezeCoin",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-10\n*/\n\npragma solidity ^0.4.18;\n\n/**\n\n * This is BreezeCoin contract\n\n */\n\n \n\n/**\n\n * Defining basic ERC20 interface. Standard ERC20 interface functions.\n\n * Please check https://github.com/ethereum/EIPs/issues/179\n\n */\n\ncontract ERC20Basic {\n\n    function totalSupply() public view returns (uint256);\n\n    function balanceOf(address who) public view returns (uint256);\n\n    function transfer(address to, uint256 value) public returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n}\n\n/**\n\n * Defining ERC20 interface. This functions are standard for every token.\n\n * Please check https://github.com/ethereum/EIPs/issues/20\n\n */\n\ncontract ERC20 is ERC20Basic {\n\n    function allowance(address owner, address spender) public view returns (uint256);\n\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n\n    function approve(address spender, uint256 value) public returns (bool);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n}\n\n/**\n\n *OpenZeppelin SafeMath library to make the contract secure.\n\n */\n\nlibrary SafeMath {\n\n\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n\n        if (a == 0) {\n\n            return 0;\n\n        }\n\n        uint256 c = a * b;\n\n        assert(c / a == b);\n\n        return c;\n\n    }\n\n\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n\n        uint256 c = a / b;\n\n        return c;\n\n    }\n\n\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\n        assert(b <= a);\n\n        return a - b;\n\n    }\n\n\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n\n        uint256 c = a + b;\n\n        assert(c >= a);\n\n        return c;\n\n    }\n\n}\n\n/**\n\n * Defining BasicToken with\n\n * fucntions of check total supply of the token, token transfer and check balance\n\n * of the input address. These functions are standard for every basic token.\n\n */\n\ncontract BasicToken is ERC20Basic {\n\n    using SafeMath for uint256;\n\n\n\n    mapping(address => uint256) balances;\n\n\n\n    uint256 totalSupply_;\n\n\n\n    function totalSupply() public view returns (uint256) {\n\n        return totalSupply_;\n\n    }\n\n\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n\n        require(_to != address(0));\n\n        require(_value <= balances[msg.sender]);\n\n\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n\n        balances[_to] = balances[_to].add(_value);\n\n        emit Transfer(msg.sender, _to, _value);\n\n        return true;\n\n    }\n\n\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n\n        return balances[_owner];\n\n    }\n\n\n\n}\n\n/**\n\n * Defining StandardToken with\n\n * approval function. These functions are standard for every token.\n\n * Please check https://github.com/ethereum/EIPs/issues/20\n\n */\n\ncontract StandardToken is ERC20, BasicToken {\n\n\n\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n\n        require(_to != address(0));\n\n        require(_value <= balances[_from]);\n\n        require(_value <= allowed[_from][msg.sender]);\n\n\n\n        balances[_from] = balances[_from].sub(_value);\n\n        balances[_to] = balances[_to].add(_value);\n\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\n        emit Transfer(_from, _to, _value);\n\n        return true;\n\n    }\n\n\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n\n        allowed[msg.sender][_spender] = _value;\n\n        emit Approval(msg.sender, _spender, _value);\n\n        return true;\n\n    }\n\n\n\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n\n        return allowed[_owner][_spender];\n\n    }\n\n\n\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\n        return true;\n\n    }\n\n\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n\n        uint oldValue = allowed[msg.sender][_spender];\n\n        if (_subtractedValue > oldValue) {\n\n            allowed[msg.sender][_spender] = 0;\n\n        } else {\n\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n\n        }\n\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\n        return true;\n\n    }\n\n\n\n}\n\n\n\n/**\n\n * Defining ownershipTransfer\n\n * function. Function takes the new address and transfer the ownership.\n\n *\n\n */\n\ncontract Ownable {\n\n    address public owner;\n\n\n\n\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n\n\n\n    function Ownable() public {\n\n        owner = msg.sender;\n\n    }\n\n\n\n    modifier onlyOwner() {\n\n        require(msg.sender == owner);\n\n        _;\n\n    }\n\n\n\n    function transferOwnership(address newOwner) public onlyOwner {\n\n        require(newOwner != address(0));\n\n        emit OwnershipTransferred(owner, newOwner);\n\n        owner = newOwner;\n\n    }\n\n\n\n}\n\n/**\n\n * Creating BreezeCoin.\n\n * BreezeCoin calls the contracts StandardToken and ownable.\n\n */\n\ncontract BreezeCoin is StandardToken, Ownable {\n\n\n\n    string public constant name = \"BreezeCoin\";\n\n\n\n    string public constant symbol = \"BRZC\";\n\n\n\n    uint256 public constant decimals = 18;\n\n\n\n    bool public released = false;\n\n    event Release();\n\n    address public holder;\n\n    address private wallet1;\n    address private wallet2;\n    address private team_tips;\n    address private Reserve;\n/** \n * This modifier allows only owner of the token and holder of the token call a function.\n */\n    modifier isReleased () {\n\n        require(released || msg.sender == holder || msg.sender == owner);\n\n        _;\n\n    }\n\n\n\n    function BreezeCoin() public {\n\n        owner = 0xE601Bb5Ef5Ca433e6B467a5fc8453dcACE3974De;\n\n        wallet1 = 0x5a86671071Ad67f2DF02c821e587BCe5B8e26C38; //early investors\n\n        wallet2 = 0x25b25f5dE7C81b14DEf6db5B65107853687702EC; //manager\n\n        team_tips =  0x6FcF24c918631Bb385DeeDC6d01e8f68293E2641; //team tips\n\n        Reserve =  0x3d4Bd578291737fAED39bA3F20F32DF25111D724; //Reserve\n\n        holder = 0x2bb3a4f80bFb939716E6d85799116feB1906748B; //ico coins holder\n\n        totalSupply_ = 200000000 * (10 ** decimals); // our total supply is 200 million\n\n        balances[holder] = 30000000* (10 ** decimals); //ico wallet holds 30 million\n\n        balances[wallet1] = 10000000* (10 ** decimals);\n        balances[wallet2] = 1250000* (10 ** decimals);\n        balances[team_tips] = 8750000* (10 ** decimals);\n        balances[Reserve] = 150000000* (10 ** decimals);\n\n\n        emit Transfer(0x0, holder, 30000000* (10 ** decimals)); // creating token out of thin air to ICO holder account address.\n        emit Transfer(0x0, wallet1, 10000000* (10 ** decimals)); // creating token out of thin air to team wallet1 account address.\n        emit Transfer(0x0, team_tips, 8750000* (10 ** decimals)); // creating token out of thin air to team tips account address.\n        emit Transfer(0x0, wallet2, 1250000* (10 ** decimals)); // creating token out of thin air to wallet2 account address.\n        emit Transfer(0x0, Reserve, 150000000* (10 ** decimals)); // creating token out of thin air to reserve account address.\n\n\n\n        \n\n    }\n\n/** \n * Tokens are first not released. This function can be called only by owner. This function releases the tokens and allow token transfers.\n */\n\n    function release() onlyOwner public returns (bool) {\n\n        require(!released);\n\n        released = true;\n\n        emit Release();\n\n\n\n        return true;\n\n    }\n\n\n\n    function getOwner() public view returns (address) {\n\n        return owner;\n\n    }\n\n\n/** \n * These functions allow users to use transfer and approve functions if the token is released.\n */\n    function transfer(address _to, uint256 _value) public isReleased returns (bool) {\n\n        return super.transfer(_to, _value);\n\n    }\n\n\n\n    function transferFrom(address _from, address _to, uint256 _value) public isReleased returns (bool) {\n\n        return super.transferFrom(_from, _to, _value);\n\n    }\n\n\n\n    function approve(address _spender, uint256 _value) public isReleased returns (bool) {\n\n        return super.approve(_spender, _value);\n\n    }\n\n\n\n    function increaseApproval(address _spender, uint _addedValue) public isReleased returns (bool success) {\n\n        return super.increaseApproval(_spender, _addedValue);\n\n    }\n\n\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public isReleased returns (bool success) {\n\n        return super.decreaseApproval(_spender, _subtractedValue);\n\n    }\n\n\n\n    function transferOwnership(address newOwner) public onlyOwner {\n\n        address oldOwner = owner;\n\n        super.transferOwnership(newOwner);\n\n\n\n        if (oldOwner != holder) {\n\n            allowed[holder][oldOwner] = 0;\n\n            emit Approval(holder, oldOwner, 0);\n\n        }\n\n\n\n        if (owner != holder) {\n\n            allowed[holder][owner] = balances[holder];\n\n            emit Approval(holder, owner, balances[holder]);\n\n        }\n\n    }\n\n\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Release\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60606040526003805460a060020a60ff0219169055341561001f57600080fd5b60038054600160a060020a03338116600160a060020a031992831617821673e601bb5ef5ca433e6b467a5fc8453dcace3974de17909255600580548216735a86671071ad67f2df02c821e587bce5b8e26c381781556006805483167325b25f5de7c81b14def6db5b65107853687702ec178155600780548416736fcf24c918631bb385deedc6d01e8f68293e2641178155600880548516733d4bd578291737faed39ba3f20f32df25111d72417815560048054909516732bb3a4f80bfb939716e6d85799116feb1906748b178086556aa56fa5b99019a5c800000060015586166000908152602081905260408082206a18d0bf423c03d8de000000908190559554881682528082206a084595161401484a00000090559354871681528381206a0108b2a2c280290940000090559154861682528282206a073ce27351811f40c00000905554851681528181206a7c13bc4b2c133c560000009055925490931692600080516020610fe583398151915291905190815260200160405180910390a3600554600160a060020a03166000600080516020610fe58339815191526a084595161401484a00000060405190815260200160405180910390a3600754600160a060020a03166000600080516020610fe58339815191526a073ce27351811f40c0000060405190815260200160405180910390a3600654600160a060020a03166000600080516020610fe58339815191526a0108b2a2c280290940000060405190815260200160405180910390a3600854600160a060020a03166000600080516020610fe58339815191526a7c13bc4b2c133c5600000060405190815260200160405180910390a3610d4f806102966000396000f3006060604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101b557806323b872dd146101da578063313ce56714610202578063661884631461021557806370a082311461023757806386d1a69f14610256578063893d20e8146102695780638da5cb5b1461029857806395d89b41146102ab57806396132521146102be578063a9059cbb146102d1578063d73dd623146102f3578063dd62ed3e14610315578063e534155d1461033a578063f2fde38b1461034d575b600080fd5b341561010057600080fd5b61010861036e565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561014457808201518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018a57600080fd5b6101a1600160a060020a03600435166024356103a5565b604051901515815260200160405180910390f35b34156101c057600080fd5b6101c8610403565b60405190815260200160405180910390f35b34156101e557600080fd5b6101a1600160a060020a0360043581169060243516604435610409565b341561020d57600080fd5b6101c8610469565b341561022057600080fd5b6101a1600160a060020a036004351660243561046e565b341561024257600080fd5b6101c8600160a060020a03600435166104c5565b341561026157600080fd5b6101a16104e0565b341561027457600080fd5b61027c61056b565b604051600160a060020a03909116815260200160405180910390f35b34156102a357600080fd5b61027c61057a565b34156102b657600080fd5b610108610589565b34156102c957600080fd5b6101a16105c0565b34156102dc57600080fd5b6101a1600160a060020a03600435166024356105d0565b34156102fe57600080fd5b6101a1600160a060020a0360043516602435610627565b341561032057600080fd5b6101c8600160a060020a036004358116906024351661067e565b341561034557600080fd5b61027c6106a9565b341561035857600080fd5b61036c600160a060020a03600435166106b8565b005b60408051908101604052600a81527f427265657a65436f696e00000000000000000000000000000000000000000000602082015281565b60035460009060a060020a900460ff16806103ce575060045433600160a060020a039081169116145b806103e7575060035433600160a060020a039081169116145b15156103f257600080fd5b6103fc83836107e1565b9392505050565b60015490565b60035460009060a060020a900460ff1680610432575060045433600160a060020a039081169116145b8061044b575060035433600160a060020a039081169116145b151561045657600080fd5b61046184848461083b565b949350505050565b601281565b60035460009060a060020a900460ff1680610497575060045433600160a060020a039081169116145b806104b0575060035433600160a060020a039081169116145b15156104bb57600080fd5b6103fc83836109bb565b600160a060020a031660009081526020819052604090205490565b60035460009033600160a060020a039081169116146104fe57600080fd5b60035460a060020a900460ff161561051557600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790557fdf3164c6542982869e04c28f5083f269f2b72ca4bff9a7e792f5c0422788bbc560405160405180910390a150600190565b600354600160a060020a031690565b600354600160a060020a031681565b60408051908101604052600481527f42525a4300000000000000000000000000000000000000000000000000000000602082015281565b60035460a060020a900460ff1681565b60035460009060a060020a900460ff16806105f9575060045433600160a060020a039081169116145b80610612575060035433600160a060020a039081169116145b151561061d57600080fd5b6103fc8383610aa3565b60035460009060a060020a900460ff1680610650575060045433600160a060020a039081169116145b80610669575060035433600160a060020a039081169116145b151561067457600080fd5b6103fc8383610bb5565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600454600160a060020a031681565b60035460009033600160a060020a039081169116146106d657600080fd5b50600354600160a060020a03166106ec82610c47565b600454600160a060020a038281169116146107575760048054600160a060020a039081166000908152600260209081526040808320868516808552925280832083905593549093921691600080516020610d0483398151915291905190815260200160405180910390a35b600454600354600160a060020a039081169116146107dd5760048054600160a060020a03908116600090815260208181526040808320546002835281842060038054871686529084528285209190915554945484168084529183905291829020549390921692600080516020610d04833981519152915190815260200160405180910390a35b5050565b600160a060020a0333811660008181526002602090815260408083209487168084529490915280822085905590929190600080516020610d048339815191529085905190815260200160405180910390a350600192915050565b6000600160a060020a038316151561085257600080fd5b600160a060020a03841660009081526020819052604090205482111561087757600080fd5b600160a060020a03808516600090815260026020908152604080832033909416835292905220548211156108aa57600080fd5b600160a060020a0384166000908152602081905260409020546108d3908363ffffffff610ce216565b600160a060020a038086166000908152602081905260408082209390935590851681522054610908908363ffffffff610cf416565b600160a060020a038085166000908152602081815260408083209490945587831682526002815283822033909316825291909152205461094e908363ffffffff610ce216565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b600160a060020a03338116600090815260026020908152604080832093861683529290529081205480831115610a1857600160a060020a033381166000908152600260209081526040808320938816835292905290812055610a4f565b610a28818463ffffffff610ce216565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a033381166000818152600260209081526040808320948916808452949091529081902054600080516020610d04833981519152915190815260200160405180910390a35060019392505050565b6000600160a060020a0383161515610aba57600080fd5b600160a060020a033316600090815260208190526040902054821115610adf57600080fd5b600160a060020a033316600090815260208190526040902054610b08908363ffffffff610ce216565b600160a060020a033381166000908152602081905260408082209390935590851681522054610b3d908363ffffffff610cf416565b60008085600160a060020a0316600160a060020a031681526020019081526020016000208190555082600160a060020a031633600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a350600192915050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610bed908363ffffffff610cf416565b600160a060020a033381166000818152600260209081526040808320948916808452949091529081902084905591929091600080516020610d0483398151915291905190815260200160405180910390a350600192915050565b60035433600160a060020a03908116911614610c6257600080fd5b600160a060020a0381161515610c7757600080fd5b600354600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610cee57fe5b50900390565b6000828201838110156103fc57fe008c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820f227b2d2a538c81ae043d52c13bc98e123b87a527ef1faff333650ba37cc21e90029ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
  "constructorArguments": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
}