{
  "address": "0x7fccadee21660425fdec86029b6362845ffc052c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "HIN",
  "compilerVersion": "v0.4.16+commit.d7661dd9",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-05\n*/\n\npragma solidity ^0.4.16; interface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; } contract HIN {string public name;string public symbol;uint8 public decimals = 8;uint256 public totalSupply;mapping (address => uint256) public balanceOf;mapping (address => bool) public addressLocked;mapping (address => uint256) public balanceLocked;mapping (address => mapping (address => uint256)) public allowance; address private owner;uint256 private ownerProtectCode;event Transfer(address indexed from, address indexed to, uint256 value);event Burn(address indexed from, uint256 value); event Lock(address indexed from); event Unlock(address indexed from); event Frozen(address indexed from, uint256 value); event Unfrozen(address indexed from, uint256 value); event Raise(uint256 value); event Release(uint256 value); event UpdateOwner(address indexed oldOwner, address indexed newOwner); event Allot(address indexed from, uint256 byBalance, uint256 byFrozen);function HIN(uint256 initialSupply, string tokenName, string tokenSymbol) public { totalSupply = initialSupply * 10 ** uint256(decimals); owner = msg.sender; balanceOf[owner] = totalSupply; name = tokenName; symbol = tokenSymbol; ownerProtectCode = 10011010010;}function _transfer(address _from, address _to, uint _value) internal { require(_value > 0 && _to != 0x0 && _from != _to && !addressLocked[_from] && !addressLocked[_to] && balanceOf[_from] >= _value); address sid = this; if(_to == sid){_to = owner; } uint256 previousBalances = balanceOf[_from] + balanceOf[_to]; balanceOf[_from] -= _value; balanceOf[_to] += _value; Transfer(_from, _to, _value); assert(balanceOf[_from] + balanceOf[_to] == previousBalances);}function transfer(address _to, uint256 _value) public { _transfer(msg.sender, _to, _value);}function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) { require(_value > 0 && _value <= allowance[_from][msg.sender]); allowance[_from][msg.sender] -= _value; _transfer(_from, _to, _value); return true;}function approve(address _spender, uint256 _value) public returns (bool success) { require(_value > 0 && !addressLocked[msg.sender] && !addressLocked[_spender]); allowance[msg.sender][_spender] = _value; return true;}function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) { tokenRecipient spender = tokenRecipient(_spender); if (approve(_spender, _value)) {spender.receiveApproval(msg.sender, _value, this, _extraData);return true; }}function burn(uint256 _value) public returns (bool success) { require(_value > 0 && !addressLocked[msg.sender] && balanceOf[msg.sender] >= _value); balanceOf[msg.sender] -= _value; balanceOf[owner] += _value; Burn(msg.sender, _value); return true;}function burnFrom(address _from, uint256 _value) public returns (bool success) { require(_value > 0 && !addressLocked[msg.sender] && !addressLocked[_from] && balanceOf[_from] >= _value && _value <= allowance[_from][msg.sender]); balanceOf[_from] -= _value; allowance[_from][msg.sender] -= _value; balanceOf[owner] += _value; Burn(_from, _value); return true;} function raise(uint256 _value) public returns (bool success) { require(_value > 0 && msg.sender == owner); totalSupply += _value; balanceOf[owner] += _value; Raise(_value); return true;} function release(uint256 _value) public returns (bool success) { require(_value > 0 && msg.sender == owner && balanceOf[owner] >= _value); totalSupply -= _value; balanceOf[owner] -= _value; Release(_value); return true;} function frozen(address _from, uint256 _value) public returns (bool success) { require(_value > 0 && msg.sender == owner && balanceOf[_from] >= _value); balanceOf[_from] -= _value; balanceLocked[_from] += _value; Frozen(_from, _value); return true;} function unfrozen(address _from, uint256 _value) public returns (bool success) { require(_value > 0 && msg.sender == owner && balanceLocked[_from] >= _value); balanceOf[_from] += _value; balanceLocked[_from] -= _value; Unfrozen(_from, _value); return true;} function lock(address _from) public returns (bool success) { require(msg.sender == owner && _from != owner); addressLocked[_from] = true; Lock(_from); return true;} function unlock(address _from) public returns (bool success) { require(msg.sender == owner && _from != owner); addressLocked[_from] = false; Unlock(_from); return true;} function updateOwner(address _newOwner, uint256 _oldOPC, uint256 _newOPC) public returns (bool success) { require(msg.sender == owner && ownerProtectCode == _oldOPC && !addressLocked[_newOwner]); owner = _newOwner; ownerProtectCode = _newOPC; UpdateOwner(msg.sender, _newOwner); return true;} function allot(address _from) public returns (bool success) { require(msg.sender == owner); uint256 byBalance = balanceOf[_from]; if(byBalance > 0){balanceOf[_from] = 0;balanceOf[msg.sender] += byBalance; } uint256 byFrozen = balanceLocked[_from]; if(byFrozen > 0){balanceLocked[_from] = 0;balanceLocked[msg.sender] += byFrozen; } if(byBalance + byFrozen > 0){Allot(_from, byBalance, byFrozen);return true; }}}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"raise\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"unlock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"frozen\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"allot\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"},{\"name\":\"_oldOPC\",\"type\":\"uint256\"},{\"name\":\"_newOPC\",\"type\":\"uint256\"}],\"name\":\"updateOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfrozen\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"lock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"}],\"name\":\"Lock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"}],\"name\":\"Unlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Frozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Raise\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Release\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"UpdateOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"byBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"byFrozen\",\"type\":\"uint256\"}],\"name\":\"Allot\",\"type\":\"event\"}]",
  "bytecode": "60606040526002805460ff1916600817905534156200001d57600080fd5b6040516200154738038062001547833981016040528080519190602001805182019190602001805190910190505b60025460ff16600a0a8302600381905560088054600160a060020a03191633600160a060020a03908116919091179182905516600090815260046020526040812091909155828051620000a3929160200190620000cd565b506001818051620000b9929160200190620000cd565b50640254b3e3da6009555b50505062000177565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200011057805160ff191683800117855562000140565b8280016001018555821562000140579182015b828111156200014057825182559160200191906001019062000123565b5b506200014f92915062000153565b5090565b6200017491905b808211156200014f57600081556001016200015a565b5090565b90565b6113c080620001876000396000f300606060405236156101245763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416624f4803811461012957806306fdde0314610153578063095ea7b3146101de57806318160ddd1461021457806323b872dd146102395780632f6c493c14610275578063313ce567146102a857806336173764146102d157806337bdc99b146103075780633ba5172d1461033157806342966c68146103645780635fc3a3121461038e57806370a08231146103bf57806379cc6790146103f057806395d89b4114610426578063a0da7d2e146104b1578063a9059cbb146104e4578063a951b3ae14610508578063cae9ca5114610541578063dd62ed3e146105ba578063e5df3dd0146105f1578063f435f5a714610627575b600080fd5b341561013457600080fd5b61013f60043561065a565b604051901515815260200160405180910390f35b341561015e57600080fd5b6101666106ea565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101a35780820151818401525b60200161018a565b50505050905090810190601f1680156101d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101e957600080fd5b61013f600160a060020a0360043516602435610788565b604051901515815260200160405180910390f35b341561021f57600080fd5b610227610814565b60405190815260200160405180910390f35b341561024457600080fd5b61013f600160a060020a036004358116906024351660443561081a565b604051901515815260200160405180910390f35b341561028057600080fd5b61013f600160a060020a036004351661089f565b604051901515815260200160405180910390f35b34156102b357600080fd5b6102bb61092f565b60405160ff909116815260200160405180910390f35b34156102dc57600080fd5b61013f600160a060020a0360043516602435610938565b604051901515815260200160405180910390f35b341561031257600080fd5b61013f6004356109f5565b604051901515815260200160405180910390f35b341561033c57600080fd5b61013f600160a060020a0360043516610aae565b604051901515815260200160405180910390f35b341561036f57600080fd5b61013f600435610bc6565b604051901515815260200160405180910390f35b341561039957600080fd5b610227600160a060020a0360043516610c8f565b60405190815260200160405180910390f35b34156103ca57600080fd5b610227600160a060020a0360043516610ca1565b60405190815260200160405180910390f35b34156103fb57600080fd5b61013f600160a060020a0360043516602435610cb3565b604051901515815260200160405180910390f35b341561043157600080fd5b610166610def565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101a35780820151818401525b60200161018a565b50505050905090810190601f1680156101d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156104bc57600080fd5b61013f600160a060020a0360043516610e8d565b604051901515815260200160405180910390f35b34156104ef57600080fd5b610506600160a060020a0360043516602435610ea2565b005b341561051357600080fd5b61013f600160a060020a0360043516602435604435610eb2565b604051901515815260200160405180910390f35b341561054c57600080fd5b61013f60048035600160a060020a03169060248035919060649060443590810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610f6f95505050505050565b604051901515815260200160405180910390f35b34156105c557600080fd5b610227600160a060020a03600435811690602435166110a3565b60405190815260200160405180910390f35b34156105fc57600080fd5b61013f600160a060020a03600435166024356110c0565b604051901515815260200160405180910390f35b341561063257600080fd5b61013f600160a060020a036004351661117d565b604051901515815260200160405180910390f35b60008082118015610679575060085433600160a060020a039081169116145b151561068457600080fd5b6003805483019055600854600160a060020a0316600090815260046020526040908190208054840190557f71da0b73380c76f8d1d2c113bcf177923c87d151ccb3a815d1afc6c2958a53469083905190815260200160405180910390a15060015b919050565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107805780601f1061075557610100808354040283529160200191610780565b820191906000526020600020905b81548152906001019060200180831161076357829003601f168201915b505050505081565b600080821180156107b25750600160a060020a03331660009081526005602052604090205460ff16155b80156107d75750600160a060020a03831660009081526005602052604090205460ff16155b15156107e257600080fd5b50600160a060020a03338116600090815260076020908152604080832093861683529290522081905560015b92915050565b60035481565b600080821180156108515750600160a060020a03808516600090815260076020908152604080832033909416835292905220548211155b151561085c57600080fd5b600160a060020a0380851660009081526007602090815260408083203390941683529290522080548390039055610894848484611210565b5060015b9392505050565b60085460009033600160a060020a0390811691161480156108ce5750600854600160a060020a03838116911614155b15156108d957600080fd5b600160a060020a03821660008181526005602052604090819020805460ff191690557f0be774851955c26a1d6a32b13b020663a069006b4a3b643ff0b809d318260572905160405180910390a25060015b919050565b60025460ff1681565b60008082118015610957575060085433600160a060020a039081169116145b801561097c5750600160a060020a038316600090815260046020526040902054829010155b151561098757600080fd5b600160a060020a0383166000818152600460209081526040808320805487900390556006909152908190208054850190557f68e0d8c112165d0949ce87205b719ed7d98c7401866c34a159f7c67c6f5620e79084905190815260200160405180910390a25060015b92915050565b60008082118015610a14575060085433600160a060020a039081169116145b8015610a3b5750600854600160a060020a0316600090815260046020526040902054829010155b1515610a4657600080fd5b600380548390039055600854600160a060020a031660009081526004602052604090819020805484900390557fcf95d1fe0feb1424b6916a8d99a225f598710466d34c5a755770a1d4d49311a09083905190815260200160405180910390a15060015b919050565b6008546000908190819033600160a060020a03908116911614610ad057600080fd5b600160a060020a0384166000908152600460205260408120549250821115610b1d57600160a060020a03808516600090815260046020526040808220829055339092168152208054830190555b50600160a060020a03831660009081526006602052604081205490811115610b6a57600160a060020a03808516600090815260066020526040808220829055339092168152208054820190555b60008183011115610bbe5783600160a060020a03167f4a1e112438f12d617d971a4446770d73935b4138bfa36f7dbf3aa4692f79159a838360405191825260208201526040908101905180910390a2600192505b5b5050919050565b60008082118015610bf05750600160a060020a03331660009081526005602052604090205460ff16155b8015610c155750600160a060020a033316600090815260046020526040902054829010155b1515610c2057600080fd5b600160a060020a03338116600081815260046020526040808220805487900390556008549093168152829020805485019055907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59084905190815260200160405180910390a25060015b919050565b60066020526000908152604090205481565b60046020526000908152604090205481565b60008082118015610cdd5750600160a060020a03331660009081526005602052604090205460ff16155b8015610d025750600160a060020a03831660009081526005602052604090205460ff16155b8015610d275750600160a060020a038316600090815260046020526040902054829010155b8015610d595750600160a060020a03808416600090815260076020908152604080832033909416835292905220548211155b1515610d6457600080fd5b600160a060020a03808416600081815260046020818152604080842080548990039055600782528084203387168552825280842080548990039055600854909516835252829020805485019055907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59084905190815260200160405180910390a25060015b92915050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107805780601f1061075557610100808354040283529160200191610780565b820191906000526020600020905b81548152906001019060200180831161076357829003601f168201915b505050505081565b60056020526000908152604090205460ff1681565b610ead338383611210565b5b5050565b60085460009033600160a060020a039081169116148015610ed4575082600954145b8015610ef95750600160a060020a03841660009081526005602052604090205460ff16155b1515610f0457600080fd5b6008805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0386811691821790925560098490559033167fe2c7d1c4da37855e682bde14f17826d185497973b73fba7554daa6da467058d960405160405180910390a35060015b9392505050565b600083610f7c8185610788565b1561109a5780600160a060020a0316638f4ffcb1338630876040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156110335780820151818401525b60200161101a565b50505050905090810190601f1680156110605780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b151561108157600080fd5b6102c65a03f1151561109257600080fd5b505050600191505b5b509392505050565b600760209081526000928352604080842090915290825290205481565b600080821180156110df575060085433600160a060020a039081169116145b80156111045750600160a060020a038316600090815260066020526040902054829010155b151561110f57600080fd5b600160a060020a0383166000818152600460209081526040808320805487019055600690915290819020805485900390557f07d647ad688e085159820c1d8d030e5765cdc5274d4ee4065c6066b388a2ef599084905190815260200160405180910390a25060015b92915050565b60085460009033600160a060020a0390811691161480156111ac5750600854600160a060020a03838116911614155b15156111b757600080fd5b600160a060020a03821660008181526005602052604090819020805460ff191660011790557fc1b5f12cea7c200ad495a43bf2d4c7ba1a753343c06c339093937849de84d913905160405180910390a25060015b919050565b60008060008311801561122b5750600160a060020a03841615155b8015611249575083600160a060020a031685600160a060020a031614155b801561126e5750600160a060020a03851660009081526005602052604090205460ff16155b80156112935750600160a060020a03841660009081526005602052604090205460ff16155b80156112b85750600160a060020a038516600090815260046020526040902054839010155b15156112c357600080fd5b30915081600160a060020a031684600160a060020a031614156112ef57600854600160a060020a031693505b50600160a060020a0380841660008181526004602052604080822080549489168084528284208054898103909155938590528154880190915591909301927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3600160a060020a0380851660009081526004602052604080822054928816825290205401811461138c57fe5b5b50505050505600a165627a7a72305820864062a5330e5b54cf23b1620c86662e8557d091962141108896f617351a985d00290000000000000000000000000000000000000000000000000000000000989680000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000b54696d6542616e6b696e67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000348494e0000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "0000000000000000000000000000000000000000000000000000000000989680000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000b54696d6542616e6b696e67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000348494e0000000000000000000000000000000000000000000000000000000000"
}