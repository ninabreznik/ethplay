{
  "address": "0x18c525cce3ad9a48d82f91b874754be78e9d0f85",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BidoohToken",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-13\n*/\n\npragma solidity 0.4.23;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    /**\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n\n    uint256 totalSupply_;\n\n    /**\n    * @dev total number of tokens in existence\n    */\n    function totalSupply() public view returns (uint256) {\n        return totalSupply_;\n    }\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n\n        // SafeMath.sub will throw if there is not enough balance.\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public view returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n    /**\n     * @dev Transfer tokens from one address to another\n     * @param _from address The address which you want to send tokens from\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     *\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param _spender The address which will spend the funds.\n     * @param _value The amount of tokens to be spent.\n     */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param _owner address The address which owns the funds.\n     * @param _spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n     * approve should be called when allowed[_spender] == 0. To increment\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     */\n    function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n}\n\ncontract Owned {\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n}\n\n/**\n * @title Mintable token\n * @dev Simple ERC20 Token example, with mintable token creation\n * @dev Issue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120\n * Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\n */\ncontract MintableToken is StandardToken, Owned {\n    event Mint(address indexed to, uint256 amount);\n    event MintFinished();\n\n    bool public mintingFinished = false;\n\n    modifier canMint() {\n        require(!mintingFinished);\n        _;\n    }\n\n    /**\n    * @dev Function to mint tokens\n    * @param _to The address that will receive the minted tokens.\n    * @param _amount The amount of tokens to mint.\n    * @return A boolean that indicates if the operation was successful.\n    */\n    function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\n        totalSupply_ = totalSupply_.add(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        emit Mint(_to, _amount);\n        emit Transfer(address(0), _to, _amount);\n        return true;\n    }\n\n    /**\n    * @dev Function to stop minting new tokens.\n    * @return True if the operation was successful.\n    */\n    function finishMinting() onlyOwner canMint public returns (bool) {\n        mintingFinished = true;\n        emit MintFinished();\n        return true;\n    }\n}\n\ncontract BidoohToken is MintableToken {\n    string public constant name = \"Bidooh Token\";\n    string public constant symbol = \"DOOH\";\n    uint8 public constant decimals = 18;\n\n    /// This address is be assigned the Bidooh Team tokens\n    address public teamTokensAddress;\n\n    /// This address is be assigned the Reserve tokens\n    address public reserveTokensAddress;\n\n    /// This address is be assigned the Sale tokens\n    address public saleTokensAddress;\n\n    /// This address will have the sole ability to mint more tokens\n    address public bidoohAdminAddress;\n\n    /// a safeguard flag to prevent multiple calls of close()\n    bool public saleClosed = false;\n\n    /// Only allowed to execute before the token sale is closed\n    modifier beforeSaleClosed {\n        require(!saleClosed);\n        _;\n    }\n\n    constructor(address _teamTokensAddress, address _reserveTokensAddress,\n                address _saleTokensAddress, address _bidoohAdminAddress) public {\n        require(_teamTokensAddress != address(0));\n        require(_reserveTokensAddress != address(0));\n        require(_saleTokensAddress != address(0));\n        require(_bidoohAdminAddress != address(0));\n\n        teamTokensAddress = _teamTokensAddress;\n        reserveTokensAddress = _reserveTokensAddress;\n        saleTokensAddress = _saleTokensAddress;\n        bidoohAdminAddress = _bidoohAdminAddress;\n\n        /// Maximum tokens to be allocated on the sale\n        /// 88.2 billion DOOH\n        uint256 saleTokens = 88200000000 * 10**uint256(decimals);\n        totalSupply_ = saleTokens;\n        balances[saleTokensAddress] = saleTokens;\n\n        /// Reserve tokens - 18.9 billion DOOH\n        uint256 reserveTokens = 18900000000 * 10**uint256(decimals);\n        totalSupply_ = totalSupply_.add(reserveTokens);\n        balances[reserveTokensAddress] = reserveTokens;\n\n        /// Team tokens - 18.9 billion DOOH\n        uint256 teamTokens = 18900000000 * 10**uint256(decimals);\n        totalSupply_ = totalSupply_.add(teamTokens);\n        balances[teamTokensAddress] = teamTokens;\n    }\n\n    /// @dev Close the token sale and transfer ownership\n    function close() public onlyOwner beforeSaleClosed {\n        uint256 unsoldTokens = balances[saleTokensAddress];\n        balances[reserveTokensAddress] = balances[reserveTokensAddress].add(unsoldTokens);\n        balances[saleTokensAddress] = 0;\n        emit Transfer(saleTokensAddress, reserveTokensAddress, unsoldTokens);\n\n        owner = bidoohAdminAddress;\n        saleClosed = true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamTokensAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bidoohAdminAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleTokensAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveTokensAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_teamTokensAddress\",\"type\":\"address\"},{\"name\":\"_reserveTokensAddress\",\"type\":\"address\"},{\"name\":\"_saleTokensAddress\",\"type\":\"address\"},{\"name\":\"_bidoohAdminAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040526003805460a060020a60ff021990811690915560078054909116905534801561002c57600080fd5b50604051608080610eb1833981016040908152815160208301519183015160609093015160038054600160a060020a03191633600160a060020a0390811691909117909155919391600090819081908716151561008857600080fd5b600160a060020a038616151561009d57600080fd5b600160a060020a03851615156100b257600080fd5b600160a060020a03841615156100c757600080fd5b60048054600160a060020a0319908116600160a060020a038a811691909117909255600580548216898416179055600680548216888416179081905560078054909216878416179091556c011cfd547ca93c2e958800000060018190559116600090815260208190526040902081905592506b3d11b6acffb177b254000000915061015f83836401000000006101d28102610c581704565b6001908155600554600160a060020a03166000908152602081905260409020839055546b3d11b6acffb177b25400000091506101a89082640100000000610c586101d282021704565b600155600454600160a060020a0316600090815260208190526040902055506101e8945050505050565b6000828201838110156101e157fe5b9392505050565b610cba806101f76000396000f30060806040526004361061011c5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461012157806306fdde031461014a578063095ea7b3146101d457806318160ddd146101f857806323b872dd1461021f578063313ce5671461024957806340c10f191461027457806343d726d61461029857806366188463146102af57806370a08231146102d35780637b0de015146102f45780637d64bcb4146103255780638da5cb5b1461033a578063913fc67a1461034f57806395d89b4114610364578063a9059cbb14610379578063afa317441461039d578063b8c766b8146103b2578063c611ded7146103c7578063d73dd623146103dc578063dd62ed3e14610400575b600080fd5b34801561012d57600080fd5b50610136610427565b604080519115158252519081900360200190f35b34801561015657600080fd5b5061015f610437565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610199578181015183820152602001610181565b50505050905090810190601f1680156101c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101e057600080fd5b50610136600160a060020a036004351660243561046e565b34801561020457600080fd5b5061020d6104d8565b60408051918252519081900360200190f35b34801561022b57600080fd5b50610136600160a060020a03600435811690602435166044356104de565b34801561025557600080fd5b5061025e61064c565b6040805160ff9092168252519081900360200190f35b34801561028057600080fd5b50610136600160a060020a0360043516602435610651565b3480156102a457600080fd5b506102ad61074d565b005b3480156102bb57600080fd5b50610136600160a060020a0360043516602435610864565b3480156102df57600080fd5b5061020d600160a060020a036004351661095d565b34801561030057600080fd5b50610309610978565b60408051600160a060020a039092168252519081900360200190f35b34801561033157600080fd5b50610136610987565b34801561034657600080fd5b50610309610a0f565b34801561035b57600080fd5b50610309610a1e565b34801561037057600080fd5b5061015f610a2d565b34801561038557600080fd5b50610136600160a060020a0360043516602435610a64565b3480156103a957600080fd5b50610309610b4b565b3480156103be57600080fd5b50610136610b5a565b3480156103d357600080fd5b50610309610b6a565b3480156103e857600080fd5b50610136600160a060020a0360043516602435610b79565b34801561040c57600080fd5b5061020d600160a060020a0360043581169060243516610c1b565b60035460a060020a900460ff1681565b60408051808201909152600c81527f4269646f6f6820546f6b656e0000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260026020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60015490565b6000600160a060020a03831615156104f557600080fd5b600160a060020a03841660009081526020819052604090205482111561051a57600080fd5b600160a060020a038085166000908152600260209081526040808320339094168352929052205482111561054d57600080fd5b600160a060020a038416600090815260208190526040902054610576908363ffffffff610c4616565b600160a060020a0380861660009081526020819052604080822093909355908516815220546105ab908363ffffffff610c5816565b600160a060020a03808516600090815260208181526040808320949094558783168252600281528382203390931682529190915220546105f1908363ffffffff610c4616565b600160a060020a03808616600081815260026020908152604080832033861684528252918290209490945580518681529051928716939192600080516020610c6f833981519152929181900390910190a35060019392505050565b601281565b60035460009033600160a060020a0390811691161461066f57600080fd5b60035460a060020a900460ff161561068657600080fd5b600154610699908363ffffffff610c5816565b600155600160a060020a0383166000908152602081905260409020546106c5908363ffffffff610c5816565b600160a060020a03841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a03851691600091600080516020610c6f8339815191529181900360200190a350600192915050565b60035460009033600160a060020a0390811691161461076b57600080fd5b60075460a060020a900460ff161561078257600080fd5b50600654600160a060020a039081166000908152602081905260408082205460055490931682529020546107bc908263ffffffff610c5816565b60058054600160a060020a0390811660009081526020818152604080832095909555600680548416835285832092909255925490548451868152945191831694921692600080516020610c6f833981519152928290030190a350600780546003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03831617905574ff0000000000000000000000000000000000000000191660a060020a179055565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054808311156108c157600160a060020a0333811660009081526002602090815260408083209388168352929052908120556108f8565b6108d1818463ffffffff610c4616565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600454600160a060020a031681565b60035460009033600160a060020a039081169116146109a557600080fd5b60035460a060020a900460ff16156109bc57600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600354600160a060020a031681565b600754600160a060020a031681565b60408051808201909152600481527f444f4f4800000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a0383161515610a7b57600080fd5b600160a060020a033316600090815260208190526040902054821115610aa057600080fd5b600160a060020a033316600090815260208190526040902054610ac9908363ffffffff610c4616565b600160a060020a033381166000908152602081905260408082209390935590851681522054610afe908363ffffffff610c5816565b600160a060020a0380851660008181526020818152604091829020949094558051868152905191933390931692600080516020610c6f83398151915292918290030190a350600192915050565b600654600160a060020a031681565b60075460a060020a900460ff1681565b600554600160a060020a031681565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610bb1908363ffffffff610c5816565b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600082821115610c5257fe5b50900390565b600082820183811015610c6757fe5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058208cd458453c781aefa77fe928ce979a9101dcbd0001e13d5dc896c8fee613295c00290000000000000000000000008cf1d2a6ba4fe82279145a04e05d95bf8fb898fb0000000000000000000000009d7fe46fbcbfb05a01a680b3eeada671693abd01000000000000000000000000c9b68d72e7120310bb903e7a85fbd3f5379982470000000000000000000000000c3455a64bd34b67d9f359d6ada9b975e6659cb8",
  "constructorArguments": "0000000000000000000000008cf1d2a6ba4fe82279145a04e05d95bf8fb898fb0000000000000000000000009d7fe46fbcbfb05a01a680b3eeada671693abd01000000000000000000000000c9b68d72e7120310bb903e7a85fbd3f5379982470000000000000000000000000c3455a64bd34b67d9f359d6ada9b975e6659cb8"
}