{
  "address": "0xfc0555aca4a78be9668993b39739d1d2616c75b0",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "PFAToken",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-16\n*/\n\npragma solidity ^0.4.20;\n\ninterface ERC20Token {\n\n    function totalSupply() constant external returns (uint256 supply);\n\n    function balanceOf(address _owner) constant external returns (uint256 balance);\n\n    function transfer(address _to, uint256 _value) external returns (bool success);\n\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\n\n    function approve(address _spender, uint256 _value) external returns (bool success);\n\n    function allowance(address _owner, address _spender) constant external returns (uint256 remaining);\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\ncontract Token is ERC20Token{\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n\n    uint256 public totalSupply;\n\n    function balanceOf(address _owner) constant external returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function transfer(address _to, uint256 _value) external returns (bool success) {\n        if(msg.data.length < (2 * 32) + 4) { revert(); }\n\n        if (balances[msg.sender] >= _value && _value > 0) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success) {\n        if(msg.data.length < (3 * 32) + 4) { revert(); }\n\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            allowed[_from][msg.sender] -= _value;\n            Transfer(_from, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n    function approve(address _spender, uint256 _value) external returns (bool success) {\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\n\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant external returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    function totalSupply() constant external returns (uint256 supply){\n        return totalSupply;\n    }\n}\n\ncontract PFAToken is Token{\n    address owner = msg.sender;\n\n    address admin;\n\n    bool private paused;\n    bool private mintStage;\n    bool private icoStage;\n\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n\n    uint256 public unitsOneEthCanBuy;\n    uint256 public totalEthInWei;\n    uint256 public minimumContribution;\n    address public fundsWallet;\n    uint256 public tokenFunded;\n    uint256 public coinMinted;\n\n    //Events\n    event Mint(address indexed _to, uint256 _value);\n    event RateChanged(uint256 _rate);\n    event ContributionChanged(uint256 _min);\n    event AdminChanged(address _address);\n\n    //modifier\n    modifier onlyOwner{\n        require(msg.sender == owner || msg.sender == admin);\n        _;\n    }\n\n    modifier whenNotPause{\n        require(!paused);\n        _;\n    }\n\n    modifier isMintStage{\n        require(mintStage);\n        _;\n    }\n\n    modifier isICOStage{\n        require(icoStage);\n        _;\n    }\n\n    //consturtor\n    function PFAToken() {\n        paused = false;\n        mintStage = true;\n        icoStage = false;\n\n        balances[msg.sender] = 1000000000 * 1000000000000000000;\n        totalSupply = 1000000000 * 1000000000000000000;\n        name = \"Price Fitch Asset\";\n        decimals = 18;\n        symbol = \"PFA\";\n        unitsOneEthCanBuy = 100;\n        minimumContribution = 10 finney;\n        fundsWallet = msg.sender;\n        tokenFunded = 0;\n        coinMinted = 0;\n    }\n\n    // Mint\n    function mint(address _to, uint256 _value) external onlyOwner isMintStage{\n      balances[_to] = balances[_to] + _value;\n      coinMinted = coinMinted + _value;\n      Mint(_to, _value);\n    }\n\n    function send(address _to, uint256 _value) external onlyOwner{\n      balances[fundsWallet] = balances[fundsWallet] - _value;\n      balances[_to] = balances[_to] + _value;\n      Transfer(fundsWallet, _to, _value);\n    }\n\n    // fallback function for ICO use.\n    function() payable whenNotPause isICOStage{\n        if (msg.value >= minimumContribution){\n            totalEthInWei = totalEthInWei + msg.value;\n            uint256 amount = msg.value * unitsOneEthCanBuy;\n            if (balances[fundsWallet] < amount) {\n                return;\n            }\n\n            tokenFunded = tokenFunded + amount;\n\n            balances[fundsWallet] = balances[fundsWallet] - amount;\n            balances[msg.sender] = balances[msg.sender] + amount;\n\n            Transfer(fundsWallet, msg.sender, amount);\n        }\n\n        fundsWallet.transfer(msg.value);\n    }\n\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n\n        if(!_spender.call(bytes4(bytes32(keccak256(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) {\n            revert();\n        }\n\n        return true;\n    }\n\n    //Set Admin address\n    function setAdmin(address _address) external onlyOwner{\n      admin = _address;\n      AdminChanged(_address);\n    }\n\n    //Change Token rate\n    function changeTokenRate(uint256 _rate) external onlyOwner{\n      unitsOneEthCanBuy = _rate;\n      RateChanged(_rate);\n    }\n\n    function changeMinimumContribution(uint256 _min) external onlyOwner{\n      minimumContribution = _min;\n      ContributionChanged(_min);\n    }\n\n    //stage lock function\n    function mintStart(bool) external onlyOwner{\n        mintStage = true;\n    }\n\n    function mintEnd(bool) external onlyOwner{\n        mintStage = false;\n    }\n\n    function icoStart(bool) external onlyOwner{\n        icoStage = true;\n    }\n\n    function icoEnd(bool) external onlyOwner{\n        icoStage = false;\n    }\n\n    function pauseContract(bool) external onlyOwner{\n        paused = true;\n    }\n\n    function unpauseContract(bool) external onlyOwner{\n        paused = false;\n    }\n\n    //return stats of token\n    function getStats() external constant returns (uint256, uint256, bool, bool, bool) {\n        return (totalEthInWei, tokenFunded, paused, mintStage, icoStage);\n    }\n\n}",
  "bytecode": "608060405233600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200005257600080fd5b506000600460146101000a81548160ff0219169083151502179055506001600460156101000a81548160ff0219169083151502179055506000600460166101000a81548160ff0219169083151502179055506b033b2e3c9fd0803ce80000006000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506b033b2e3c9fd0803ce80000006002819055506040805190810160405280601181526020017f507269636520466974636820417373657400000000000000000000000000000081525060059080519060200190620001539291906200022b565b506012600760006101000a81548160ff021916908360ff1602179055506040805190810160405280600381526020017f504641000000000000000000000000000000000000000000000000000000000081525060069080519060200190620001bd9291906200022b565b506064600881905550662386f26fc10000600a8190555033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600c819055506000600d81905550620002da565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200026e57805160ff19168380011785556200029f565b828001600101855582156200029f579182015b828111156200029e57825182559160200191906001019062000281565b5b509050620002ae9190620002b2565b5090565b620002d791905b80821115620002d3576000816000905550600101620002b9565b5090565b90565b61240b80620002ea6000396000f30060806040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610477578063095ea7b3146105075780630fe47b171461056c57806318160ddd1461059b5780632194f3a2146105c657806323b872dd1461061d578063313ce567146106a257806340c10f19146106d35780634fbe30d41461072057806365f2bc2e1461074d57806368f27ab914610778578063704b6c02146107a757806370a08231146107ea57806392bf2bf114610841578063933ba4131461086e578063937e09b114610899578063955fbabe146108c457806395d89b41146108f35780639815c6b214610983578063a9059cbb146109b2578063b9b237c214610a17578063bf7c74f114610a42578063c59d484714610a71578063cae9ca5114610ac4578063d0679d3414610b6f578063dd62ed3e14610bbc578063e272b89214610c33578063ff81c55414610c62575b6000600460149054906101000a900460ff1615151561018857600080fd5b600460169054906101000a900460ff1615156101a357600080fd5b600a543410151561040a5734600954016009819055506008543402905080600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561022d57610474565b80600c5401600c8190555080600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610472573d6000803e3d6000fd5b505b50005b34801561048357600080fd5b5061048c610c8d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104cc5780820151818401526020810190506104b1565b50505050905090810190601f1680156104f95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561051357600080fd5b50610552600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d2b565b604051808215151515815260200191505060405180910390f35b34801561057857600080fd5b50610599600480360381019080803515159060200190929190505050610eb9565b005b3480156105a757600080fd5b506105b0610f8b565b6040518082815260200191505060405180910390f35b3480156105d257600080fd5b506105db610f95565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561062957600080fd5b50610688600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fbb565b604051808215151515815260200191505060405180910390f35b3480156106ae57600080fd5b506106b7611246565b604051808260ff1660ff16815260200191505060405180910390f35b3480156106df57600080fd5b5061071e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611259565b005b34801561072c57600080fd5b5061074b60048036038101908080359060200190929190505050611408565b005b34801561075957600080fd5b506107626114fd565b6040518082815260200191505060405180910390f35b34801561078457600080fd5b506107a5600480360381019080803515159060200190929190505050611503565b005b3480156107b357600080fd5b506107e8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115d5565b005b3480156107f657600080fd5b5061082b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611730565b6040518082815260200191505060405180910390f35b34801561084d57600080fd5b5061086c60048036038101908080359060200190929190505050611778565b005b34801561087a57600080fd5b5061088361186d565b6040518082815260200191505060405180910390f35b3480156108a557600080fd5b506108ae611873565b6040518082815260200191505060405180910390f35b3480156108d057600080fd5b506108f1600480360381019080803515159060200190929190505050611879565b005b3480156108ff57600080fd5b5061090861194b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561094857808201518184015260208101905061092d565b50505050905090810190601f1680156109755780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561098f57600080fd5b506109b06004803603810190808035151590602001909291905050506119e9565b005b3480156109be57600080fd5b506109fd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611abb565b604051808215151515815260200191505060405180910390f35b348015610a2357600080fd5b50610a2c611c33565b6040518082815260200191505060405180910390f35b348015610a4e57600080fd5b50610a6f600480360381019080803515159060200190929190505050611c39565b005b348015610a7d57600080fd5b50610a86611d0b565b604051808681526020018581526020018415151515815260200183151515158152602001821515151581526020019550505050505060405180910390f35b348015610ad057600080fd5b50610b55600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611d5a565b604051808215151515815260200191505060405180910390f35b348015610b7b57600080fd5b50610bba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ff7565b005b348015610bc857600080fd5b50610c1d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612280565b6040518082815260200191505060405180910390f35b348015610c3f57600080fd5b50610c60600480360381019080803515159060200190929190505050612307565b005b348015610c6e57600080fd5b50610c776123d9565b6040518082815260200191505060405180910390f35b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d235780601f10610cf857610100808354040283529160200191610d23565b820191906000526020600020905b815481529060010190602001808311610d0657829003601f168201915b505050505081565b6000808214158015610dba57506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610dc85760009050610eb3565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3600190505b92915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610f625750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515610f6d57600080fd5b6001600460156101000a81548160ff02191690831515021790555050565b6000600254905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606460003690501015610fcf57600080fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015611099575081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156110a55750600082115b1561123a57816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905061123f565b600090505b9392505050565b600760009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806113025750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561130d57600080fd5b600460159054906101000a900460ff16151561132857600080fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600d5401600d819055508173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040518082815260200191505060405180910390a25050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806114b15750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156114bc57600080fd5b806008819055507f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f10816040518082815260200191505060405180910390a150565b60085481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806115ac5750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156115b757600080fd5b6001600460166101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061167e5750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561168957600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806118215750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561182c57600080fd5b80600a819055507fccdbd65fa2a084fcb0468c4c783cae5e3d90cc61d946e2b07a6212eff4531d6b816040518082815260200191505060405180910390a150565b60095481565b600a5481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806119225750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561192d57600080fd5b6000600460146101000a81548160ff02191690831515021790555050565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119e15780601f106119b6576101008083540402835291602001916119e1565b820191906000526020600020905b8154815290600101906020018083116119c457829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611a925750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611a9d57600080fd5b6000600460156101000a81548160ff02191690831515021790555050565b6000604460003690501015611acf57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015611b1d5750600082115b15611c2857816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050611c2d565b600090505b92915050565b600c5481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611ce25750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611ced57600080fd5b6000600460166101000a81548160ff02191690831515021790555050565b6000806000806000600954600c54600460149054906101000a900460ff16600460159054906101000a900460ff16600460169054906101000a900460ff16945094509450945094509091929394565b600082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a38373ffffffffffffffffffffffffffffffffffffffff1660405180807f72656365697665417070726f76616c28616464726573732c75696e743235362c81526020017f616464726573732c627974657329000000000000000000000000000000000000815250602e01905060405180910390207c01000000000000000000000000000000000000000000000000000000009004338530866040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828051906020019080838360005b83811015611f9b578082015181840152602081019050611f80565b50505050905090810190601f168015611fc85780820380516001836020036101000a031916815260200191505b509450505050506000604051808303816000875af1925050501515611fec57600080fd5b600190509392505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806120a05750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156120ab57600080fd5b80600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806123b05750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156123bb57600080fd5b6001600460146101000a81548160ff02191690831515021790555050565b600d54815600a165627a7a72305820f42f5fd27f1028b91121125e28d39ba9b4895c85ee1b9ec5d22cf67e4c39f9830029"
}