{
  "address": "0x06df6fdbf7629c71aee3f468ba1ab702fa0abec9",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Manager",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-30\n*/\n\npragma solidity ^0.4.23;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract BBODServiceRegistry is Ownable {\n\n  //1. Manager\n  //2. CustodyStorage\n  mapping(uint => address) public registry;\n\n    constructor(address _owner) {\n        owner = _owner;\n    }\n\n  function setServiceRegistryEntry (uint key, address entry) external onlyOwner {\n    registry[key] = entry;\n  }\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\ncontract ManagerInterface {\n  function createCustody(address) external {}\n\n  function isExchangeAlive() public pure returns (bool) {}\n\n  function isDailySettlementOnGoing() public pure returns (bool) {}\n}\n\ncontract Custody {\n\n  using SafeMath for uint;\n\n  BBODServiceRegistry public bbodServiceRegistry;\n  address public owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  constructor(address _serviceRegistryAddress, address _owner) public {\n    bbodServiceRegistry = BBODServiceRegistry(_serviceRegistryAddress);\n    owner = _owner;\n  }\n\n  function() public payable {}\n\n  modifier liveExchangeOrOwner(address _recipient) {\n    var manager = ManagerInterface(bbodServiceRegistry.registry(1));\n\n    if (manager.isExchangeAlive()) {\n\n      require(msg.sender == address(manager));\n\n      if (manager.isDailySettlementOnGoing()) {\n        require(_recipient == address(manager), \"Only manager can do this when the settlement is ongoing\");\n      } else {\n        require(_recipient == owner);\n      }\n\n    } else {\n      require(msg.sender == owner, \"Only owner can do this when exchange is dead\");\n    }\n    _;\n  }\n\n  function withdraw(uint _amount, address _recipient) external liveExchangeOrOwner(_recipient) {\n    _recipient.transfer(_amount);\n  }\n\n  function transferToken(address _erc20Address, address _recipient, uint _amount)\n    external liveExchangeOrOwner(_recipient) {\n\n    ERC20 token = ERC20(_erc20Address);\n\n    token.transfer(_recipient, _amount);\n  }\n\n  function transferOwnership(address newOwner) public {\n    require(msg.sender == owner, \"Only the owner can transfer ownership\");\n    require(newOwner != address(0));\n\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n}\n\n\ncontract CustodyStorage {\n\n  BBODServiceRegistry public bbodServiceRegistry;\n\n  mapping(address => bool) public custodiesMap;\n\n  //Number of all custodies in the contract\n  uint public custodyCounter = 0;\n\n  address[] public custodiesArray;\n\n  event CustodyRemoved(address indexed custody);\n\n  constructor(address _serviceRegistryAddress) public {\n    bbodServiceRegistry = BBODServiceRegistry(_serviceRegistryAddress);\n  }\n\n  modifier onlyManager() {\n    require(msg.sender == bbodServiceRegistry.registry(1));\n    _;\n  }\n\n  function addCustody(address _custody) external onlyManager {\n    custodiesMap[_custody] = true;\n    custodiesArray.push(_custody);\n    custodyCounter++;\n  }\n\n  function removeCustody(address _custodyAddress, uint _arrayIndex) external onlyManager {\n    require(custodiesArray[_arrayIndex] == _custodyAddress);\n\n    if (_arrayIndex == custodyCounter - 1) {\n      //Removing last custody\n      custodiesMap[_custodyAddress] = false;\n      emit CustodyRemoved(_custodyAddress);\n      custodyCounter--;\n      return;\n    }\n\n    custodiesMap[_custodyAddress] = false;\n    //Overwriting deleted custody with the last custody in the array\n    custodiesArray[_arrayIndex] = custodiesArray[custodyCounter - 1];\n    custodyCounter--;\n\n    emit CustodyRemoved(_custodyAddress);\n  }\n}\ncontract Insurance is Custody {\n\n  constructor(address _serviceRegistryAddress, address _owner)\n  Custody(_serviceRegistryAddress, _owner) public {}\n\n  function useInsurance (uint _amount) external {\n    var manager = ManagerInterface(bbodServiceRegistry.registry(1));\n    //Only usable for manager during settlement\n    require(manager.isDailySettlementOnGoing() && msg.sender == address(manager));\n\n    address(manager).transfer(_amount);\n  }\n}\n\ncontract Manager is Pausable {\nusing SafeMath for uint;\n\nmapping(address => bool) public ownerAccountsMap;\nmapping(address => bool) public exchangeAccountsMap;\n\n//SETTLEMENT PREPARATION####\n\nenum SettlementPhase {\nPREPARING, ONGOING, FINISHED\n}\n\nenum Cryptocurrency {\nETH, BBD\n}\n\n//Initially ready for a settlement\nSettlementPhase public currentSettlementPhase = SettlementPhase.FINISHED;\n\nuint public startingFeeBalance = 0;\nuint public totalFeeFlows = 0;\nuint public startingInsuranceBalance = 0;\nuint public totalInsuranceFlows = 0;\n\nuint public lastSettlementStartedTimestamp = 0;\nuint public earliestNextSettlementTimestamp = 0;\n\nmapping(uint => mapping(address => bool)) public custodiesServedETH;\nmapping(uint => mapping(address => bool)) public custodiesServedBBD;\n\naddress public feeAccount;\naddress public insuranceAccount;\nERC20 public bbdToken;\nCustodyStorage public custodyStorage;\n\naddress public custodyFactory;\nuint public gweiBBDPriceInWei;\nuint public lastTimePriceSet;\nuint constant public gwei = 1000000000;\n\nuint public maxTimeIntervalHB = 1 weeks;\nuint public heartBeat = now;\n\nconstructor(address _feeAccount, address _insuranceAccount, address _bbdTokenAddress, address _custodyStorage,\naddress _serviceRegistryAddress) public {\n//Contract creator is the first owner\nownerAccountsMap[msg.sender] = true;\nfeeAccount = _feeAccount;\ninsuranceAccount = _insuranceAccount;\nbbdToken = ERC20(_bbdTokenAddress);\ncustodyStorage = CustodyStorage(_custodyStorage);\n}\n\nfunction() public payable {}\n\nfunction setCustodyFactory(address _custodyFactory) external onlyOwner {\ncustodyFactory = _custodyFactory;\n}\n\nfunction pause() public onlyExchangeOrOwner {\npaused = true;\n}\n\nfunction unpause() public onlyExchangeOrOwner {\npaused = false;\n}\n\nmodifier onlyAllowedInPhase(SettlementPhase _phase) {\nrequire(currentSettlementPhase == _phase, \"Not allowed in this phase\");\n_;\n}\n\nmodifier onlyOwner() {\nrequire(ownerAccountsMap[msg.sender] == true, \"Only an owner can perform this action\");\n_;\n}\n\nmodifier onlyExchange() {\nrequire(exchangeAccountsMap[msg.sender] == true, \"Only an exchange can perform this action\");\n_;\n}\n\nmodifier onlyExchangeOrOwner() {\nrequire(exchangeAccountsMap[msg.sender] == true ||\nownerAccountsMap[msg.sender] == true);\n_;\n}\n\nfunction isDailySettlementOnGoing() external view returns (bool) {\nreturn currentSettlementPhase != SettlementPhase.FINISHED;\n}\n\nfunction updateHeartBeat() external whenNotPaused onlyOwner {\nheartBeat = now;\n}\n\nfunction isExchangeAlive() external view returns (bool) {\nreturn now - heartBeat < maxTimeIntervalHB;\n}\n\nfunction addOwnerAccount(address _exchangeAccount) external onlyOwner {\nownerAccountsMap[_exchangeAccount] = true;\n}\n\nfunction addExchangeAccount(address _exchangeAccount) external onlyOwner whenNotPaused {\nexchangeAccountsMap[_exchangeAccount] = true;\n}\n\nfunction rmExchangeAccount(address _exchangeAccount) external onlyOwner whenNotPaused {\nexchangeAccountsMap[_exchangeAccount] = false;\n}\n\nfunction setBBDPrice(uint _priceInWei) external onlyExchangeOrOwner whenNotPaused\nonlyAllowedInPhase(SettlementPhase.FINISHED) {\nif(gweiBBDPriceInWei == 0) {\ngweiBBDPriceInWei = _priceInWei;\n} else {\n//Max 100% daily increase in price\nif(_priceInWei > gweiBBDPriceInWei) {\nrequire(_priceInWei - gweiBBDPriceInWei <= (gweiBBDPriceInWei / 2));\n//Max 50% daily decrease in price\n} else if(_priceInWei < gweiBBDPriceInWei) {\nrequire(gweiBBDPriceInWei - _priceInWei <= (gweiBBDPriceInWei / 2));\n}\ngweiBBDPriceInWei = _priceInWei;\n}\n//Price can only be set once per day\nrequire(now - lastTimePriceSet > 23 hours);\n\nlastTimePriceSet = now;\n}\n\nfunction createCustody(address _custody) external whenNotPaused onlyAllowedInPhase(SettlementPhase.FINISHED) {\nrequire(msg.sender == custodyFactory);\ncustodyStorage.addCustody(_custody);\n}\n\nfunction removeCustody(address _custodyAddress, uint _arrayIndex) external whenNotPaused onlyExchangeOrOwner\nonlyAllowedInPhase(SettlementPhase.FINISHED) {\ncustodyStorage.removeCustody(_custodyAddress, _arrayIndex);\n}\n\n/// @dev Exchange uses this function to withdraw ether from the contract\n/// @param _amount to withdraw\n/// @param _recipient to send withdrawn ether to\nfunction withdrawFromManager(uint _amount, address _recipient) external onlyExchangeOrOwner\nwhenNotPaused onlyAllowedInPhase(SettlementPhase.FINISHED) {\n_recipient.transfer(_amount);\n}\n\n/// @dev Users use this function to withdraw ether from their custody\n/// @param _amount to withdraw\n/// @param _custodyAddress to withdraw from\nfunction withdrawFromCustody(uint _amount, address _custodyAddress,address _recipient) external onlyExchangeOrOwner\nwhenNotPaused onlyAllowedInPhase(SettlementPhase.FINISHED) {\nCustody custody = Custody(_custodyAddress);\ncustody.withdraw(_amount, _recipient);\n}\n\n/// @dev Users use this function to withdraw ether from their custody\n/// @param _tokenAddress of the ERC20 to withdraw from\n/// @param _amount to withdraw\n/// @param _custodyAddress to withdraw from\nfunction withdrawTokensFromCustody(address _tokenAddress, uint _amount, address _custodyAddress, address _recipient)\nexternal whenNotPaused onlyAllowedInPhase(SettlementPhase.FINISHED) onlyExchangeOrOwner {\nCustody custody = Custody(_custodyAddress);\ncustody.transferToken(_tokenAddress, _recipient,_amount);\n}\n\n//DAILY SETTLEMENT\n\n/// @dev This function prepares the daily settlement - resets all settlement\n/// @dev scope storage variables to 0.\nfunction startSettlementPreparation() external whenNotPaused onlyExchangeOrOwner\nonlyAllowedInPhase(SettlementPhase.FINISHED) {\nrequire(now > earliestNextSettlementTimestamp, \"A settlement can happen once per day\");\nrequire(gweiBBDPriceInWei > 0, \"BBD Price cannot be 0 during settlement\");\n\nlastSettlementStartedTimestamp = now;\ntotalFeeFlows = 0;\ntotalInsuranceFlows = 0;\n\ncurrentSettlementPhase = SettlementPhase.ONGOING;\n\n\nstartingFeeBalance = feeAccount.balance +\n((bbdToken.balanceOf(feeAccount) * gweiBBDPriceInWei) / gwei);\n\nstartingInsuranceBalance = insuranceAccount.balance;\n}\n\n/// @dev This function is used to process a batch of net eth flows, two arrays\n/// @dev are pairs of custody addresses and the balance changes that should\n/// @dev be executed. Transaction will revert if exchange rules are violated.\n/// @param _custodies flow addresses\n/// @param _flows flow balance changes (can be negative or positive)\n/// @param _fee calculated and deducted from all batch flows\n/// @param _insurance to be used\nfunction settleETHBatch(address[] _custodies, int[] _flows, uint _fee, uint _insurance) external whenNotPaused onlyExchangeOrOwner\nonlyAllowedInPhase(SettlementPhase.ONGOING) {\n\nrequire(_custodies.length == _flows.length);\n\nuint preBatchBalance = address(this).balance;\n\nif(_insurance > 0) {\nInsurance(insuranceAccount).useInsurance(_insurance);\n}\n\nfor (uint flowIndex = 0; flowIndex < _flows.length; flowIndex++) {\n\n//Every custody can be served ETH once during settlement\nrequire(custodiesServedETH[lastSettlementStartedTimestamp][_custodies[flowIndex]] == false);\n\n//All addresses must be custodies\nrequire(custodyStorage.custodiesMap(_custodies[flowIndex]));\n\nif (_flows[flowIndex] > 0) {\n//10% rule\nvar outboundFlow = uint(_flows[flowIndex]);\n\n//100% rule exception threshold\nif(outboundFlow > 10 ether) {\n//100% rule\nrequire(getTotalBalanceFor(_custodies[flowIndex]) >= outboundFlow);\n}\n\n_custodies[flowIndex].transfer(uint(_flows[flowIndex]));\n\n} else if (_flows[flowIndex] < 0) {\nCustody custody = Custody(_custodies[flowIndex]);\n\ncustody.withdraw(uint(-_flows[flowIndex]), address(this));\n}\n\ncustodiesServedETH[lastSettlementStartedTimestamp][_custodies[flowIndex]] = true;\n}\n\nif(_fee > 0) {\nfeeAccount.transfer(_fee);\ntotalFeeFlows = totalFeeFlows + _fee;\n//100% rule for fee account\nrequire(totalFeeFlows <= startingFeeBalance);\n}\n\nuint postBatchBalance = address(this).balance;\n\n//Zero-sum guaranteed for ever batch\nif(address(this).balance > preBatchBalance) {\nuint leftovers = address(this).balance - preBatchBalance;\ninsuranceAccount.transfer(leftovers);\ntotalInsuranceFlows += leftovers;\n//100% rule for insurance account\nrequire(totalInsuranceFlows <= startingInsuranceBalance);\n}\n}\n\n/// @dev This function is used to process a batch of net bbd flows, two arrays\n/// @dev are pairs of custody addresses and the balance changes that should\n/// @dev be executed. Transaction will revert if exchange rules are violated.\n/// @param _custodies flow addresses\n/// @param _flows flow balance changes (can be negative or positive)\n/// @param _fee calculated and deducted from all batch flows\nfunction settleBBDBatch(address[] _custodies, int[] _flows, uint _fee) external whenNotPaused onlyExchangeOrOwner\nonlyAllowedInPhase(SettlementPhase.ONGOING) {\n//TODO optimize for gas usage\n\nrequire(_custodies.length == _flows.length);\n\nuint preBatchBalance = bbdToken.balanceOf(address(this));\n\nfor (uint flowIndex = 0; flowIndex < _flows.length; flowIndex++) {\n\n//Every custody can be served BBD once during settlement\nrequire(custodiesServedBBD[lastSettlementStartedTimestamp][_custodies[flowIndex]] == false);\n//All addresses must be custodies\nrequire(custodyStorage.custodiesMap(_custodies[flowIndex]));\n\nif (_flows[flowIndex] > 0) {\nvar flowValue = ((uint(_flows[flowIndex]) * gweiBBDPriceInWei)/gwei);\n\n//Minimal BBD transfer is 1gWeiBBD\nrequire(flowValue >= 1);\n\n//50% rule threshold\nif(flowValue > 10 ether) {\n//50% rule for bbd\nrequire((getTotalBalanceFor(_custodies[flowIndex]) / 2) >= flowValue);\n}\n\nbbdToken.transfer(_custodies[flowIndex], uint(_flows[flowIndex]));\n\n} else if (_flows[flowIndex] < 0) {\nCustody custody = Custody(_custodies[flowIndex]);\n\ncustody.transferToken(address(bbdToken),address(this), uint(-(_flows[flowIndex])));\n}\n\ncustodiesServedBBD[lastSettlementStartedTimestamp][_custodies[flowIndex]] = true;\n}\n\nif(_fee > 0) {\nbbdToken.transfer(feeAccount, _fee);\n//No need for safe math, as transfer will trow if _fee could cause overflow\ntotalFeeFlows += ((_fee * gweiBBDPriceInWei) / gwei);\nrequire (totalFeeFlows <= startingFeeBalance);\n}\n\nuint postBatchBalance = bbdToken.balanceOf(address(this));\n\n//Zero-or-less-sum guaranteed for every batch, no insurance for spots\nrequire(postBatchBalance <= preBatchBalance);\n}\n\n/// @dev This function is used to finish the settlement process\nfunction finishSettlement() external whenNotPaused onlyExchangeOrOwner\nonlyAllowedInPhase(SettlementPhase.ONGOING) {\n//TODO phase change event?\nearliestNextSettlementTimestamp = lastSettlementStartedTimestamp + 23 hours;\n\ncurrentSettlementPhase = SettlementPhase.FINISHED;\n}\n\nfunction getTotalBalanceFor(address _custody) internal view returns (uint) {\n\nvar bbdHoldingsInWei = ((bbdToken.balanceOf(_custody) * gweiBBDPriceInWei) / gwei);\n\nreturn _custody.balance + bbdHoldingsInWei;\n}\n\nfunction checkIfCustodiesServedETH(address[] _custodies) external view returns (bool) {\nfor (uint custodyIndex = 0; custodyIndex < _custodies.length; custodyIndex++) {\nif(custodiesServedETH[lastSettlementStartedTimestamp][_custodies[custodyIndex]]) {\nreturn true;\n}\n}\nreturn false;\n}\n\nfunction checkIfCustodiesServedBBD(address[] _custodies) external view returns (bool) {\nfor (uint custodyIndex = 0; custodyIndex < _custodies.length; custodyIndex++) {\nif(custodiesServedBBD[lastSettlementStartedTimestamp][_custodies[custodyIndex]]) {\nreturn true;\n}\n}\nreturn false;\n}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"exchangeAccountsMap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_exchangeAccount\",\"type\":\"address\"}],\"name\":\"addExchangeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_custodies\",\"type\":\"address[]\"},{\"name\":\"_flows\",\"type\":\"int256[]\"},{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"settleBBDBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastSettlementStartedTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startingFeeBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"custodyStorage\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateHeartBeat\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"custodyFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentSettlementPhase\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earliestNextSettlementTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gwei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_exchangeAccount\",\"type\":\"address\"}],\"name\":\"rmExchangeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_custodies\",\"type\":\"address[]\"}],\"name\":\"checkIfCustodiesServedETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_custodyAddress\",\"type\":\"address\"},{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"withdrawFromCustody\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_exchangeAccount\",\"type\":\"address\"}],\"name\":\"addOwnerAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"custodiesServedBBD\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bbdToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalFeeFlows\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_custody\",\"type\":\"address\"}],\"name\":\"createCustody\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceInWei\",\"type\":\"uint256\"}],\"name\":\"setBBDPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_custodyFactory\",\"type\":\"address\"}],\"name\":\"setCustodyFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_custodies\",\"type\":\"address[]\"},{\"name\":\"_flows\",\"type\":\"int256[]\"},{\"name\":\"_fee\",\"type\":\"uint256\"},{\"name\":\"_insurance\",\"type\":\"uint256\"}],\"name\":\"settleETHBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"custodiesServedETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_custodyAddress\",\"type\":\"address\"},{\"name\":\"_arrayIndex\",\"type\":\"uint256\"}],\"name\":\"removeCustody\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startingInsuranceBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isExchangeAlive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTimePriceSet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"withdrawFromManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishSettlement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gweiBBDPriceInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"heartBeat\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalInsuranceFlows\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTimeIntervalHB\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"insuranceAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startSettlementPreparation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerAccountsMap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_custodyAddress\",\"type\":\"address\"},{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"withdrawTokensFromCustody\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isDailySettlementOnGoing\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_custodies\",\"type\":\"address[]\"}],\"name\":\"checkIfCustodiesServedBBD\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_feeAccount\",\"type\":\"address\"},{\"name\":\"_insuranceAccount\",\"type\":\"address\"},{\"name\":\"_bbdTokenAddress\",\"type\":\"address\"},{\"name\":\"_custodyStorage\",\"type\":\"address\"},{\"name\":\"_serviceRegistryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60806040526000805460a060020a60ff02191681556003805460ff191660021790556004819055600581905560068190556007819055600881905560095562093a806013554260145534801561005457600080fd5b5060405160a0806126bf83398101604090815281516020808401518385015160609095015160008054600160a060020a03199081163390811783558252600194859052959020805460ff1916909317909255600c8054600160a060020a03948516908616179055600d8054918416918516919091179055600e805494831694841694909417909355600f80549190931691161790556125c7806100f86000396000f3006080604052600436106102165763ffffffff60e060020a60003504166301c23ef48114610218578063049c9bf21461024d57806305ed2cd31461026e57806307ad32821461029d5780631a04d5c5146102c45780631baf7122146102d95780631bd61eee1461030a5780631c4ad4651461031f5780631d8aa5ec146103345780631fa422a21461036d57806324de3c0e146103825780632db2caef1461039757806330cddc83146103b857806337305e2a146103d85780633f4ba83a14610402578063412282cd1461041757806341f2395c1461043857806343bcf52a1461045c57806347a36afd146104715780634f64808d146104865780634f734965146104a7578063529e6713146104bf5780635c975abb146104e057806363f2493f146104f55780636561f12b1461052757806365e17c9d1461054b5780636aa3141f14610560578063715018a6146105845780638454665d146105995780638456cb59146105ae5780638da5cb5b146105c3578063985bdd43146105d85780639a5a2d4e146105ed5780639cc7429914610602578063b08480d414610626578063b37531071461063b578063b56a9f2c14610650578063c6f664af14610665578063c77547f71461067a578063cc38c8a01461068f578063cd6c4bb0146106a4578063da9a0906146106b9578063e2f779f3146106da578063e480ba6a1461070b578063e7fbee2814610720578063f2fde38b14610740575b005b34801561022457600080fd5b50610239600160a060020a0360043516610761565b604080519115158252519081900360200190f35b34801561025957600080fd5b50610216600160a060020a0360043516610776565b34801561027a57600080fd5b50610216602460048035828101929082013591813591820191013560443561081d565b3480156102a957600080fd5b506102b2610e78565b60408051918252519081900360200190f35b3480156102d057600080fd5b506102b2610e7e565b3480156102e557600080fd5b506102ee610e84565b60408051600160a060020a039092168252519081900360200190f35b34801561031657600080fd5b50610216610e93565b34801561032b57600080fd5b506102ee610f1c565b34801561034057600080fd5b50610349610f2b565b6040518082600281111561035957fe5b60ff16815260200191505060405180910390f35b34801561037957600080fd5b506102b2610f34565b34801561038e57600080fd5b506102b2610f3a565b3480156103a357600080fd5b50610216600160a060020a0360043516610f42565b3480156103c457600080fd5b506102396004803560248101910135610fe6565b3480156103e457600080fd5b50610216600435600160a060020a0360243581169060443516611058565b34801561040e57600080fd5b5061021661118d565b34801561042357600080fd5b50610216600160a060020a03600435166111f0565b34801561044457600080fd5b50610239600435600160a060020a0360243516611283565b34801561046857600080fd5b506102ee6112a3565b34801561047d57600080fd5b506102b26112b2565b34801561049257600080fd5b50610216600160a060020a03600435166112b8565b3480156104b357600080fd5b506102166004356113c0565b3480156104cb57600080fd5b50610216600160a060020a03600435166114eb565b3480156104ec57600080fd5b50610239611586565b34801561050157600080fd5b506102166024600480358281019290820135918135918201910135604435606435611596565b34801561053357600080fd5b50610239600435600160a060020a0360243516611aba565b34801561055757600080fd5b506102ee611ada565b34801561056c57600080fd5b50610216600160a060020a0360043516602435611ae9565b34801561059057600080fd5b50610216611c25565b3480156105a557600080fd5b506102b2611ce6565b3480156105ba57600080fd5b50610216611cec565b3480156105cf57600080fd5b506102ee611d55565b3480156105e457600080fd5b50610239611d64565b3480156105f957600080fd5b506102b2611d70565b34801561060e57600080fd5b50610216600435600160a060020a0360243516611d76565b34801561063257600080fd5b50610216611e63565b34801561064757600080fd5b506102b2611f2f565b34801561065c57600080fd5b506102b2611f35565b34801561067157600080fd5b506102b2611f3b565b34801561068657600080fd5b506102b2611f41565b34801561069b57600080fd5b506102ee611f47565b3480156106b057600080fd5b50610216611f56565b3480156106c557600080fd5b50610239600160a060020a03600435166121d9565b3480156106e657600080fd5b50610216600160a060020a0360043581169060243590604435811690606435166121ee565b34801561071757600080fd5b50610239612336565b34801561072c57600080fd5b506102396004803560248101910135612352565b34801561074c57600080fd5b50610216600160a060020a03600435166123b8565b60026020526000908152604090205460ff1681565b3360009081526001602081905260409091205460ff161515146107e2576040805160e560020a62461bcd028152602060048201526025602482015260008051602061255c833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b60005460a060020a900460ff16156107f957600080fd5b600160a060020a03166000908152600260205260409020805460ff19166001179055565b60008054819081908190819060a060020a900460ff161561083d57600080fd5b3360009081526002602052604090205460ff1615156001148061087557503360009081526001602081905260409091205460ff161515145b151561088057600080fd5b60018060035460ff16600281111561089457fe5b146108d7576040805160e560020a62461bcd028152602060048201526019602482015260008051602061257c833981519152604482015290519081900360640190fd5b8988146108e357600080fd5b600e546040805160e060020a6370a082310281523060048201529051600160a060020a03909216916370a08231916024808201926020929091908290030181600087803b15801561093357600080fd5b505af1158015610947573d6000803e3d6000fd5b505050506040513d602081101561095d57600080fd5b50519550600094505b87851015610d11576008546000908152600b60205260408120908c8c8881811061098c57fe5b60209081029290920135600160a060020a03168352508101919091526040016000205460ff16156109bc57600080fd5b600f54600160a060020a031663a6847df28c8c888181106109d957fe5b90506020020135600160a060020a03166040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610a3457600080fd5b505af1158015610a48573d6000803e3d6000fd5b505050506040513d6020811015610a5e57600080fd5b50511515610a6b57600080fd5b6000898987818110610a7957fe5b905060200201351315610bcf57601154633b9aca00908a8a88818110610a9b57fe5b9050602002013502811515610aac57fe5b0493506001841015610abd57600080fd5b678ac7230489e80000841115610b0957836002610af48d8d89818110610adf57fe5b90506020020135600160a060020a0316612430565b811515610afd57fe5b041015610b0957600080fd5b600e54600160a060020a031663a9059cbb8c8c88818110610b2657fe5b90506020020135600160a060020a03168b8b898181101515610b4457fe5b905060200201356040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015610b9d57600080fd5b505af1158015610bb1573d6000803e3d6000fd5b505050506040513d6020811015610bc757600080fd5b50610cb49050565b6000898987818110610bdd57fe5b905060200201351215610cb4578a8a86818110610bf657fe5b600e54600160a060020a036020909202939093013581169550859263f5537ede925016308c8c8a818110610c2657fe5b905060200201356000036040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183600160a060020a0316600160a060020a031681526020018281526020019350505050600060405180830381600087803b158015610c9b57600080fd5b505af1158015610caf573d6000803e3d6000fd5b505050505b6008546000908152600b602052604081206001918d8d89818110610cd457fe5b60209081029290920135600160a060020a0316835250810191909152604001600020805460ff191691151591909117905560019490940193610966565b6000871115610de057600e54600c54604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a039283166004820152602481018b90529051919092169163a9059cbb9160448083019260209291908290030181600087803b158015610d8c57600080fd5b505af1158015610da0573d6000803e3d6000fd5b505050506040513d6020811015610db657600080fd5b5050601154633b9aca009088026005805492909104909101908190556004541015610de057600080fd5b600e546040805160e060020a6370a082310281523060048201529051600160a060020a03909216916370a08231916024808201926020929091908290030181600087803b158015610e3057600080fd5b505af1158015610e44573d6000803e3d6000fd5b505050506040513d6020811015610e5a57600080fd5b5051915085821115610e6b57600080fd5b5050505050505050505050565b60085481565b60045481565b600f54600160a060020a031681565b60005460a060020a900460ff1615610eaa57600080fd5b3360009081526001602081905260409091205460ff16151514610f16576040805160e560020a62461bcd028152602060048201526025602482015260008051602061255c833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b42601455565b601054600160a060020a031681565b60035460ff1681565b60095481565b633b9aca0081565b3360009081526001602081905260409091205460ff16151514610fae576040805160e560020a62461bcd028152602060048201526025602482015260008051602061255c833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b60005460a060020a900460ff1615610fc557600080fd5b600160a060020a03166000908152600260205260409020805460ff19169055565b6000805b8281101561104c576008546000908152600a602052604081209085858481811061101057fe5b60209081029290920135600160a060020a03168352508101919091526040016000205460ff16156110445760019150611051565b600101610fea565b600091505b5092915050565b3360009081526002602052604081205460ff1615156001148061109057503360009081526001602081905260409091205460ff161515145b151561109b57600080fd5b60005460a060020a900460ff16156110b257600080fd5b60028060035460ff1660028111156110c657fe5b14611109576040805160e560020a62461bcd028152602060048201526019602482015260008051602061257c833981519152604482015290519081900360640190fd5b83915081600160a060020a031662f714ce86856040518363ffffffff1660e060020a0281526004018083815260200182600160a060020a0316600160a060020a0316815260200192505050600060405180830381600087803b15801561116e57600080fd5b505af1158015611182573d6000803e3d6000fd5b505050505050505050565b3360009081526002602052604090205460ff161515600114806111c557503360009081526001602081905260409091205460ff161515145b15156111d057600080fd5b6000805474ff000000000000000000000000000000000000000019169055565b3360009081526001602081905260409091205460ff1615151461125c576040805160e560020a62461bcd028152602060048201526025602482015260008051602061255c833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b600b60209081526000928352604080842090915290825290205460ff1681565b600e54600160a060020a031681565b60055481565b60005460a060020a900460ff16156112cf57600080fd5b60028060035460ff1660028111156112e357fe5b14611326576040805160e560020a62461bcd028152602060048201526019602482015260008051602061257c833981519152604482015290519081900360640190fd5b601054600160a060020a0316331461133d57600080fd5b600f54604080517f95932df3000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916395932df391602480830192600092919082900301818387803b1580156113a457600080fd5b505af11580156113b8573d6000803e3d6000fd5b505050505050565b3360009081526002602052604090205460ff161515600114806113f857503360009081526001602081905260409091205460ff161515145b151561140357600080fd5b60005460a060020a900460ff161561141a57600080fd5b60028060035460ff16600281111561142e57fe5b14611471576040805160e560020a62461bcd028152602060048201526019602482015260008051602061257c833981519152604482015290519081900360640190fd5b60115415156114845760118290556114ce565b6011548211156114a8576011546002810490830311156114a357600080fd5b6114c8565b6011548210156114c857601154600281049083900311156114c857600080fd5b60118290555b6201437060125442031115156114e357600080fd5b505042601255565b3360009081526001602081905260409091205460ff16151514611557576040805160e560020a62461bcd028152602060048201526025602482015260008051602061255c833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b6010805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60005460a060020a900460ff1681565b600080600080600080600060149054906101000a900460ff161515156115bb57600080fd5b3360009081526002602052604090205460ff161515600114806115f357503360009081526001602081905260409091205460ff161515145b15156115fe57600080fd5b60018060035460ff16600281111561161257fe5b14611655576040805160e560020a62461bcd028152602060048201526019602482015260008051602061257c833981519152604482015290519081900360640190fd5b8b8a1461166157600080fd5b3031965060008811156116ed57600d54604080517f17a523c1000000000000000000000000000000000000000000000000000000008152600481018b90529051600160a060020a03909216916317a523c19160248082019260009290919082900301818387803b1580156116d457600080fd5b505af11580156116e8573d6000803e3d6000fd5b505050505b600095505b898610156119e8576008546000908152600a60205260408120908e8e8981811061171857fe5b60209081029290920135600160a060020a03168352508101919091526040016000205460ff161561174857600080fd5b600f54600160a060020a031663a6847df28e8e8981811061176557fe5b90506020020135600160a060020a03166040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156117c057600080fd5b505af11580156117d4573d6000803e3d6000fd5b505050506040513d60208110156117ea57600080fd5b505115156117f757600080fd5b60008b8b8881811061180557fe5b9050602002013513156118c0578a8a8781811061181e57fe5b905060200201359450678ac7230489e8000085111561185257846118478e8e89818110610adf57fe5b101561185257600080fd5b8c8c8781811061185e57fe5b90506020020135600160a060020a0316600160a060020a03166108fc8c8c89818110151561188857fe5b905060200201359081150290604051600060405180830381858888f193505050501580156118ba573d6000803e3d6000fd5b5061198b565b60008b8b888181106118ce57fe5b90506020020135121561198b578c8c878181106118e757fe5b90506020020135600160a060020a0316935083600160a060020a031662f714ce8c8c89818110151561191557fe5b90506020020135600003306040518363ffffffff1660e060020a0281526004018083815260200182600160a060020a0316600160a060020a0316815260200192505050600060405180830381600087803b15801561197257600080fd5b505af1158015611986573d6000803e3d6000fd5b505050505b6008546000908152600a602052604081206001918f8f8a8181106119ab57fe5b60209081029290920135600160a060020a0316835250810191909152604001600020805460ff1916911515919091179055600195909501946116f2565b6000891115611a4457600c54604051600160a060020a03909116908a156108fc02908b906000818181858888f19350505050158015611a2b573d6000803e3d6000fd5b50600580548a01908190556004541015611a4457600080fd5b308031935031871015611aab57600d5460405130318990039350600160a060020a03909116906108fc8415029084906000818181858888f19350505050158015611a92573d6000803e3d6000fd5b50600780548301908190556006541015611aab57600080fd5b50505050505050505050505050565b600a60209081526000928352604080842090915290825290205460ff1681565b600c54600160a060020a031681565b60005460a060020a900460ff1615611b0057600080fd5b3360009081526002602052604090205460ff16151560011480611b3857503360009081526001602081905260409091205460ff161515145b1515611b4357600080fd5b60028060035460ff166002811115611b5757fe5b14611b9a576040805160e560020a62461bcd028152602060048201526019602482015260008051602061257c833981519152604482015290519081900360640190fd5b600f54604080517f6aa3141f000000000000000000000000000000000000000000000000000000008152600160a060020a0386811660048301526024820186905291519190921691636aa3141f91604480830192600092919082900301818387803b158015611c0857600080fd5b505af1158015611c1c573d6000803e3d6000fd5b50505050505050565b3360009081526001602081905260409091205460ff16151514611c91576040805160e560020a62461bcd028152602060048201526025602482015260008051602061255c833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60065481565b3360009081526002602052604090205460ff16151560011480611d2457503360009081526001602081905260409091205460ff161515145b1515611d2f57600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a179055565b600054600160a060020a031681565b60135460145442031090565b60125481565b3360009081526002602052604090205460ff16151560011480611dae57503360009081526001602081905260409091205460ff161515145b1515611db957600080fd5b60005460a060020a900460ff1615611dd057600080fd5b60028060035460ff166002811115611de457fe5b14611e27576040805160e560020a62461bcd028152602060048201526019602482015260008051602061257c833981519152604482015290519081900360640190fd5b604051600160a060020a0383169084156108fc029085906000818181858888f19350505050158015611e5d573d6000803e3d6000fd5b50505050565b60005460a060020a900460ff1615611e7a57600080fd5b3360009081526002602052604090205460ff16151560011480611eb257503360009081526001602081905260409091205460ff161515145b1515611ebd57600080fd5b60018060035460ff166002811115611ed157fe5b14611f14576040805160e560020a62461bcd028152602060048201526019602482015260008051602061257c833981519152604482015290519081900360640190fd5b5060085462014370016009556003805460ff19166002179055565b60115481565b60145481565b60075481565b60135481565b600d54600160a060020a031681565b60005460a060020a900460ff1615611f6d57600080fd5b3360009081526002602052604090205460ff16151560011480611fa557503360009081526001602081905260409091205460ff161515145b1515611fb057600080fd5b60028060035460ff166002811115611fc457fe5b14612007576040805160e560020a62461bcd028152602060048201526019602482015260008051602061257c833981519152604482015290519081900360640190fd5b6009544211612085576040805160e560020a62461bcd028152602060048201526024808201527f4120736574746c656d656e742063616e2068617070656e206f6e63652070657260448201527f2064617900000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b601154600010612105576040805160e560020a62461bcd02815260206004820152602760248201527f4242442050726963652063616e6e6f74206265203020647572696e672073657460448201527f746c656d656e7400000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b426008556000600581905560078190556003805460ff19166001179055601154600e54600c546040805160e060020a6370a08231028152600160a060020a0392831660048201529051633b9aca009592909316926370a0823192602480840193602093929083900390910190829087803b15801561218257600080fd5b505af1158015612196573d6000803e3d6000fd5b505050506040513d60208110156121ac57600080fd5b5051028115156121b857fe5b600c54919004600160a060020a039182163101600455600d54163160065550565b60016020526000908152604090205460ff1681565b6000805460a060020a900460ff161561220657600080fd5b60028060035460ff16600281111561221a57fe5b1461225d576040805160e560020a62461bcd028152602060048201526019602482015260008051602061257c833981519152604482015290519081900360640190fd5b3360009081526002602052604090205460ff1615156001148061229557503360009081526001602081905260409091205460ff161515145b15156122a057600080fd5b604080517ff5537ede000000000000000000000000000000000000000000000000000000008152600160a060020a03888116600483015285811660248301526044820188905291518694509184169163f5537ede9160648082019260009290919082900301818387803b15801561231657600080fd5b505af115801561232a573d6000803e3d6000fd5b50505050505050505050565b6000600260035460ff16600281111561234b57fe5b1415905090565b6000805b8281101561104c576008546000908152600b602052604081209085858481811061237c57fe5b60209081029290920135600160a060020a03168352508101919091526040016000205460ff16156123b05760019150611051565b600101612356565b3360009081526001602081905260409091205460ff16151514612424576040805160e560020a62461bcd028152602060048201526025602482015260008051602061255c833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b61242d816124de565b50565b601154600e546040805160e060020a6370a08231028152600160a060020a03858116600483015291516000948594633b9aca009491939116916370a082319160248082019260209290919082900301818987803b15801561249057600080fd5b505af11580156124a4573d6000803e3d6000fd5b505050506040513d60208110156124ba57600080fd5b5051028115156124c657fe5b0490508083600160a060020a03163101915050919050565b600160a060020a03811615156124f357600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556004f6e6c7920616e206f776e65722063616e20706572666f726d207468697320614e6f7420616c6c6f77656420696e207468697320706861736500000000000000a165627a7a72305820fb70c2390f780feb67934790eb2035c4648036182961a1333d7c9c56f725f5e00029000000000000000000000000e2d4b960d0c639633582cddef57528461e62083d0000000000000000000000001d6c596bb5022a4338b6b8651f3acd4d836ef574000000000000000000000000b79fc5505ea4f3b920ee7e3349de064226692717000000000000000000000000e68f070e656d60a9ff0771399e08282538d546250000000000000000000000009e55ca0690ac83dcb4d675873c0e344c848dbbf2",
  "constructorArguments": "000000000000000000000000e2d4b960d0c639633582cddef57528461e62083d0000000000000000000000001d6c596bb5022a4338b6b8651f3acd4d836ef574000000000000000000000000b79fc5505ea4f3b920ee7e3349de064226692717000000000000000000000000e68f070e656d60a9ff0771399e08282538d546250000000000000000000000009e55ca0690ac83dcb4d675873c0e344c848dbbf2"
}