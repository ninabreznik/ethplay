{
  "address": "0xfc9ec868f4c8c586d1bb7586870908cca53d5f38",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "KittyItemMarket",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-01-23\n*/\n\npragma solidity ^0.4.8;\n\n/**\n * @title KittyItemToken interface \n */\ncontract KittyItemToken {\n  function transfer(address, uint256) public pure returns (bool) {}\n  function transferAndApply(address, uint256) public pure returns (bool) {}\n  function balanceOf(address) public pure returns (uint256) {}\n}\n\n/**\n * @title KittyItemMarket is a market contract for buying KittyItemTokens and \n */\ncontract KittyItemMarket {\n\n  struct Item {\n    address itemContract;\n    uint256 cost;  // in wei\n    address artist;\n    uint128 split;  // the percentage split the artist gets vs. KittyItemMarket.owner. A split of \"6666\" would mean the artist gets 66.66% of the funds\n    uint256 totalFunds;\n  }\n\n  address public owner;\n  mapping (string => Item) items;\n  bool public paused = false;\n\n  // events\n  event Buy(string itemName);\n\n  /**\n   * KittyItemMarket constructor\n   */\n  function KittyItemMarket() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public {\n    require(msg.sender == owner);\n    if (newOwner != address(0)) {\n      owner = newOwner;\n    }\n  }\n\n  /**\n   * @dev Pauses the market, not allowing any buyItem and buyItemAndApply\n   * @param _paused the paused state of the contract\n   */\n  function setPaused(bool _paused) public {\n    require(msg.sender == owner);\n    paused = _paused;\n  }\n\n  /**\n   * @dev You cannot return structs, return each attribute in Item struct\n   * @param _itemName the KittyItemToken name in items\n   */\n  function getItem(string _itemName) view public returns (address, uint256, address, uint256, uint256) {\n    return (items[_itemName].itemContract, items[_itemName].cost, items[_itemName].artist, items[_itemName].split, items[_itemName].totalFunds);\n  }\n\n  /**\n   * @dev Add a KittyItemToken contract to be sold in the market\n   * @param _itemName Name for items mapping\n   * @param _itemContract contract address of KittyItemToken we're adding\n   * @param _cost  cost of item in wei\n   * @param _artist  artist addess to send funds to\n   * @param _split  artist split. \"6666\" would be a 66.66% split.\n   */\n  function addItem(string _itemName, address _itemContract, uint256 _cost, address _artist, uint128 _split) public {\n    require(msg.sender == owner);\n    require(items[_itemName].itemContract == 0x0);  // item can't already exist\n    items[_itemName] = Item(_itemContract, _cost, _artist, _split, 0);\n  }\n\n  /**\n   * @dev Modify an item that is in the market\n   * @param _itemName Name of item to modify\n   * @param _itemContract modify KittyItemtoken contract address for item\n   * @param _cost modify cost of item\n   * @param _artist  modify artist addess to send funds to\n   * @param _split  modify artist split\n   */\n  function modifyItem(string _itemName, address _itemContract, uint256 _cost, address _artist, uint128 _split) public {\n    require(msg.sender == owner);\n    require(items[_itemName].itemContract != 0x0);  // item should already exist\n    Item storage item = items[_itemName];\n    item.itemContract = _itemContract;\n    item.cost = _cost;\n    item.artist = _artist;\n    item.split = _split;\n  }\n\n  /**\n   * @dev Buy item from the market\n   * @param _itemName Name of item to buy\n   * @param _amount amount of item to buy\n   */\n  function buyItem(string _itemName, uint256 _amount) public payable {\n    require(paused == false);\n    require(items[_itemName].itemContract != 0x0);  // item should already exist\n    Item storage item = items[_itemName];  // we're going to modify the item in storage\n    require(msg.value >= item.cost * _amount);  // make sure user sent enough eth for the number of items they want\n    item.totalFunds += msg.value;\n    KittyItemToken kit = KittyItemToken(item.itemContract);\n    kit.transfer(msg.sender, _amount);\n    // emit events\n    Buy(_itemName);\n  }\n\n  /**\n   * @dev Buy item from the market and apply to kittyId\n   * @param _itemName Name of item to buy\n   * @param _kittyId  KittyId to apply the item\n   */\n  function buyItemAndApply(string _itemName, uint256 _kittyId) public payable {\n    require(paused == false);\n    // NOTE - can only be used to buy and apply 1 item\n    require(items[_itemName].itemContract != 0x0);  // item should already exist\n    Item storage item = items[_itemName];  // we're going to modify the item in storage\n    require(msg.value >= item.cost);  // make sure user sent enough eth for 1 item\n    item.totalFunds += msg.value;\n    KittyItemToken kit = KittyItemToken(item.itemContract);\n    kit.transferAndApply(msg.sender, _kittyId);\n    // emit events\n    Buy(_itemName);\n  }\n\n  /**\n   * @dev split funds from Item sales between contract owner and artist\n   * @param _itemName Item to split funds for\n   */\n  function splitFunds(string _itemName) public {\n    require(msg.sender == owner);\n    Item storage item = items[_itemName];  // we're going to modify the item in storage\n    uint256 amountToArtist = item.totalFunds * item.split / 10000;\n    uint256 amountToOwner = item.totalFunds - amountToArtist;\n    item.artist.transfer(amountToArtist);\n    owner.transfer(amountToOwner);\n    item.totalFunds = 0;\n  }\n\n  /**\n   * @dev return all _itemName tokens help by contract to contract owner\n   * @param _itemName Item to return tokens to contract owner\n   * @return whether the transfer was successful or not\n   */\n  function returnTokensToOwner(string _itemName) public returns (bool) {\n    require(msg.sender == owner);\n    Item storage item = items[_itemName];  // we're going to modify the item in storage\n    KittyItemToken kit = KittyItemToken(item.itemContract);\n    uint256 contractBalance = kit.balanceOf(this);\n    kit.transfer(msg.sender, contractBalance);\n    return true;\n  }\n\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_itemName\",\"type\":\"string\"},{\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"buyItemAndApply\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemName\",\"type\":\"string\"},{\"name\":\"_itemContract\",\"type\":\"address\"},{\"name\":\"_cost\",\"type\":\"uint256\"},{\"name\":\"_artist\",\"type\":\"address\"},{\"name\":\"_split\",\"type\":\"uint128\"}],\"name\":\"addItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemName\",\"type\":\"string\"}],\"name\":\"splitFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemName\",\"type\":\"string\"},{\"name\":\"_itemContract\",\"type\":\"address\"},{\"name\":\"_cost\",\"type\":\"uint256\"},{\"name\":\"_artist\",\"type\":\"address\"},{\"name\":\"_split\",\"type\":\"uint128\"}],\"name\":\"modifyItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemName\",\"type\":\"string\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemName\",\"type\":\"string\"}],\"name\":\"returnTokensToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemName\",\"type\":\"string\"}],\"name\":\"getItem\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"itemName\",\"type\":\"string\"}],\"name\":\"Buy\",\"type\":\"event\"}]",
  "bytecode": "60606040526000600260006101000a81548160ff021916908315150217905550341561002a57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611975806100796000396000f3006060604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a4bb260146100b45780630b2996301461010f57806316c38b3c146101ce5780633ab3bfc1146101f35780633bd0aa47146102505780635c975abb1461030f578063891a2f311461033c5780638da5cb5b146103975780639d6eaad5146103ec578063b6010fcd14610461578063f2fde38b14610546575b600080fd5b61010d600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190505061057f565b005b341561011a57600080fd5b6101cc600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080356fffffffffffffffffffffffffffffffff1690602001909190505061087a565b005b34156101d957600080fd5b6101f160048080351515906020019091905050610b45565b005b34156101fe57600080fd5b61024e600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610bbd565b005b341561025b57600080fd5b61030d600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080356fffffffffffffffffffffffffffffffff16906020019091905050610db0565b005b341561031a57600080fd5b610322611000565b604051808215151515815260200191505060405180910390f35b610395600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091908035906020019091905050611013565b005b34156103a257600080fd5b6103aa611310565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103f757600080fd5b610447600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611335565b604051808215151515815260200191505060405180910390f35b341561046c57600080fd5b6104bc600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506115bd565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019550505050505060405180910390f35b341561055157600080fd5b61057d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611874565b005b60008060001515600260009054906101000a900460ff1615151415156105a457600080fd5b60006001856040518082805190602001908083835b6020831015156105de57805182526020820191506020810190506020830392506105b9565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561065857600080fd5b6001846040518082805190602001908083835b602083101515610690578051825260208201915060208101905060208303925061066b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209150816001015434101515156106d857600080fd5b3482600401600082825401925050819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663e9121b1233856000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156107bc57600080fd5b6102c65a03f115156107cd57600080fd5b50505060405180519050507f353b106fdecdb1f25da8bb26e494673ac78af8663fd9dcb279f04c0c6c59c371846040518080602001828103825283818151815260200191508051906020019080838360005b8381101561083a57808201518184015260208101905061081f565b50505050905090810190601f1680156108675780820380516001836020036101000a031916815260200191505b509250505060405180910390a150505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108d557600080fd5b60006001866040518082805190602001908083835b60208310151561090f57805182526020820191506020810190506020830392506108ea565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561098857600080fd5b60a0604051908101604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001826fffffffffffffffffffffffffffffffff16815260200160008152506001866040518082805190602001908083835b602083101515610a275780518252602082019150602081019050602083039250610a02565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550608082015181600401559050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ba057600080fd5b80600260006101000a81548160ff02191690831515021790555050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c1d57600080fd5b6001846040518082805190602001908083835b602083101515610c555780518252602082019150602081019050602083039250610c30565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902092506127108360030160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16846004015402811515610ccf57fe5b0491508183600401540390508260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501515610d3f57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501515610da057600080fd5b6000836004018190555050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e0d57600080fd5b60006001876040518082805190602001908083835b602083101515610e475780518252602082019150602081019050602083039250610e22565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610ec157600080fd5b6001866040518082805190602001908083835b602083101515610ef95780518252602082019150602081019050602083039250610ed4565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160010181905550828160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160030160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505050505050565b600260009054906101000a900460ff1681565b60008060001515600260009054906101000a900460ff16151514151561103857600080fd5b60006001856040518082805190602001908083835b602083101515611072578051825260208201915060208101905060208303925061104d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156110ec57600080fd5b6001846040518082805190602001908083835b60208310151561112457805182526020820191506020810190506020830392506110ff565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020915082826001015402341015151561116e57600080fd5b3482600401600082825401925050819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561125257600080fd5b6102c65a03f1151561126357600080fd5b50505060405180519050507f353b106fdecdb1f25da8bb26e494673ac78af8663fd9dcb279f04c0c6c59c371846040518080602001828103825283818151815260200191508051906020019080838360005b838110156112d05780820151818401526020810190506112b5565b50505050905090810190601f1680156112fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561139657600080fd5b6001856040518082805190602001908083835b6020831015156113ce57805182526020820191506020810190506020830392506113a9565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902092508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156114cd57600080fd5b6102c65a03f115156114de57600080fd5b5050506040518051905090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561159557600080fd5b6102c65a03f115156115a657600080fd5b505050604051805190505060019350505050919050565b60008060008060006001866040518082805190602001908083835b6020831015156115fd57805182526020820191506020810190506020830392506115d8565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001876040518082805190602001908083835b60208310151561168c5780518252602082019150602081019050602083039250611667565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101546001886040518082805190602001908083835b6020831015156116fb57805182526020820191506020810190506020830392506116d6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001896040518082805190602001908083835b60208310151561178a5780518252602082019150602081019050602083039250611765565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060030160009054906101000a90046fffffffffffffffffffffffffffffffff1660018a6040518082805190602001908083835b60208310151561181557805182526020820191506020810190506020830392506117f0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040154816fffffffffffffffffffffffffffffffff1691509450945094509450945091939590929450565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118cf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561194657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820552b8763a0e244e7a5f5db9bfe2e8bf534967bd023629f8b752b03229a290c510029"
}