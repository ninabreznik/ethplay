{
  "address": "0xa7b136ac5a7fb163f57505753b79b30e101f3d28",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Adoption",
  "compilerVersion": "v0.5.0+commit.1d4f565a",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-26\n*/\n\npragma solidity ^0.5.0;\n\ncontract Adoption {\n  address[16] public adopters;\n  uint[16] public prices;\n  address public owner;\n\n  constructor() public {\n    owner = msg.sender;\n    for (uint i=0;i<16;++i) {\n      prices[i] = 0.001 ether;  \n    }\n  }\n\n  // Adopting a pet\n  function adopt(uint petId) public payable returns (uint) {\n    require(petId >= 0 && petId <= 15);\n    require(msg.value >= prices[petId]);\n\n    prices[petId] *= 120;\n    prices[petId] /= 100;\n\n    adopters[petId] = msg.sender;\n    return petId;\n  }\n\n  // Retrieving the adopters\n  function getAdopters() public view returns (address[16] memory, uint[16] memory) {\n    return (adopters,  prices);\n  }\n  \n  modifier onlyOwner() {\n        require (msg.sender == owner);\n        _;\n      }\n  function withdraw() public onlyOwner{\n    msg.sender.transfer(address(this).balance);\n  }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAdopters\",\"outputs\":[{\"name\":\"\",\"type\":\"address[16]\"},{\"name\":\"\",\"type\":\"uint256[16]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adopters\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"petId\",\"type\":\"uint256\"}],\"name\":\"adopt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prices\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]",
  "bytecode": "608060405234801561001057600080fd5b5033602060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008090505b60108110156100885766038d7ea4c6800060108260108110151561007857fe5b0181905550806001019050610058565b506105c9806100986000396000f3fe608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633ccfd60b1461007d5780633de4eb171461009457806343ae80d3146101165780638588b2c5146101915780638da5cb5b146101d3578063bc31c1c11461022a575b600080fd5b34801561008957600080fd5b50610092610279565b005b3480156100a057600080fd5b506100a9610335565b6040518083601060200280838360005b838110156100d45780820151818401526020810190506100b9565b5050505090500182601060200280838360005b838110156101025780820151818401526020810190506100e7565b505050509050019250505060405180910390f35b34801561012257600080fd5b5061014f6004803603602081101561013957600080fd5b8101908080359060200190929190505050610405565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101bd600480360360208110156101a757600080fd5b810190808035906020019092919050505061043a565b6040518082815260200191505060405180910390f35b3480156101df57600080fd5b506101e8610515565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023657600080fd5b506102636004803603602081101561024d57600080fd5b810190808035906020019092919050505061053b565b6040518082815260200191505060405180910390f35b602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102d557600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610332573d6000803e3d6000fd5b50565b61033d610555565b610345610579565b60006010816010806020026040519081016040528092919082601080156103b7576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161036d575b50505050509150806010806020026040519081016040528092919082601080156103f6576020028201915b8154815260200190600101908083116103e2575b50505050509050915091509091565b60008160108110151561041457fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080821015801561044d5750600f8211155b151561045857600080fd5b60108260108110151561046757fe5b0154341015151561047757600080fd5b607860108360108110151561048857fe5b016000828254029250508190555060646010836010811015156104a757fe5b0160008282548115156104b657fe5b0492505081905550336000836010811015156104ce57fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550819050919050565b602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60108160108110151561054a57fe5b016000915090505481565b61020060405190810160405280601090602082028038833980820191505090505090565b6102006040519081016040528060109060208202803883398082019150509050509056fea165627a7a72305820e8370f5cd53a7744171cd051143ae47103fd3302f1de3dde88cb2e6b027404a80029"
}