{
  "address": "0xbf68b3756f82b522588511da682dfd7e3bf34dee",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "XEXToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-10\n*/\n\npragma solidity ^0.4.25;\n\nlibrary SafeMath {\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    if (_a == 0) {\n      return 0;\n    }\n    uint256 c = _a * _b;\n    require(c / _a == _b);\n    return c;\n  }\n\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    require(_b > 0);\n    uint256 c = _a / _b;\n    return c;\n  }\n\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    require(_b <= _a);\n    uint256 c = _a - _b;\n    return c;\n  }\n\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    uint256 c = _a + _b;\n    require(c >= _a);\n    return c;\n  }\n}\n\nlibrary Roles {\n  struct Role {\n    mapping (address => bool) bearer;\n  }\n\n  function add(Role storage _role, address _account) internal {\n    require(_account != address(0));\n    _role.bearer[_account] = true;\n  }\n\n  function remove(Role storage _role, address _account) internal {\n    require(_account != address(0));\n    _role.bearer[_account] = false;\n  }\n\n  function has(Role storage _role, address _account) internal view returns (bool)\n  {\n    require(_account != address(0));\n    return _role.bearer[_account];\n  }\n}\n\ninterface IERC20 {\n  function totalSupply() external view returns (uint256);\n\n  function balanceOf(address _who) external view returns (uint256);\n\n  function allowance(address _owner, address _spender) external view returns (uint256);\n\n  function transfer(address _to, uint256 _value) external returns (bool);\n\n  function approve(address _spender, uint256 _value) external returns (bool);\n\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool);\n\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract ERC20 is IERC20 {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) private balances;\n\n  mapping(address => mapping (address => uint256)) private allowed;\n\n  uint256 private totalSupply_;\n\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_value <= balances[msg.sender]);\n    require(_to != address(0));\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    require(_spender != address(0));\n    \n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n    require(_to != address(0));\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  function increaseAllowance(address _spender, uint256 _addedValue) public returns (bool) {\n    require(_spender != address(0));\n\n    allowed[msg.sender][_spender] = (allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function decreaseAllowance(address _spender, uint256 _subtractedValue) public returns (bool) {\n    require(_spender != address(0));\n\n    allowed[msg.sender][_spender] = (allowed[msg.sender][_spender].sub(_subtractedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function _mint(address _account, uint256 _amount) internal {\n    require(_account != 0);\n\n    totalSupply_ = totalSupply_.add(_amount);\n    balances[_account] = balances[_account].add(_amount);\n    emit Transfer(address(0), _account, _amount);\n  }\n\n  function _burn(address _account, uint256 _amount) internal {\n    require(_account != 0);\n    require(_amount <= balances[_account]);\n\n    totalSupply_ = totalSupply_.sub(_amount);\n    balances[_account] = balances[_account].sub(_amount);\n    emit Transfer(_account, address(0), _amount);\n  }\n}\n\ncontract PauserRole {\n  using Roles for Roles.Role;\n\n  event PauserAdded(address indexed _account);\n  event PauserRemoved(address indexed _account);\n\n  Roles.Role private pausers;\n\n  constructor() public {\n    addPauser_(msg.sender);\n  }\n\n  modifier onlyPauser() {\n    require(isPauser(msg.sender));\n    _;\n  }\n\n  function isPauser(address _account) public view returns (bool) {\n    return pausers.has(_account);\n  }\n\n  function addPauser(address _account) public onlyPauser {\n    addPauser_(_account);\n  }\n\n  function renouncePauser() public {\n    removePauser_(msg.sender);\n  }\n\n  function addPauser_(address _account) internal {\n    pausers.add(_account);\n    emit PauserAdded(_account);\n  }\n\n  function removePauser_(address _account) internal {\n    pausers.remove(_account);\n    emit PauserRemoved(_account);\n  }\n}\n\ncontract Pausable is PauserRole {\n  event Pause();\n  event Unpause();\n\n  bool private paused_ = false;\n\n  function paused() public view returns(bool) {\n    return paused_;\n  }\n\n  modifier whenNotPaused() {\n    require(!paused_);\n    _;\n  }\n\n  modifier whenPaused() {\n    require(paused_);\n    _;\n  }\n\n  function pause() public onlyPauser whenNotPaused {\n    paused_ = true;\n    emit Pause();\n  }\n\n  function unpause() public onlyPauser whenPaused {\n    paused_ = false;\n    emit Unpause();\n  }\n}\n\ncontract ERC20Pausable is ERC20, Pausable {\n  function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transfer(_to, _value);\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transferFrom(_from, _to, _value);\n  }\n\n  function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n    return super.approve(_spender, _value);\n  }\n\n  function increaseAllowance(address _spender, uint _addedValue) public whenNotPaused returns (bool success) {\n    return super.increaseAllowance(_spender, _addedValue);\n  }\n\n  function decreaseAllowance(address _spender, uint _subtractedValue) public whenNotPaused returns (bool success) {\n    return super.decreaseAllowance(_spender, _subtractedValue);\n  }\n}\n\ncontract ERC20Burnable is ERC20 {\n  function burn(uint256 value) public {\n    _burn(msg.sender, value);\n  }\n}\n\ncontract XEXToken is ERC20Pausable, ERC20Burnable {\n  string public constant name = \"CROSS exchange token\";\n  string public constant symbol = \"XEX\";\n  uint8 public constant decimals = 18;\n  uint256 public constant INITIAL_SUPPLY = 10000000000 * (10 ** uint256(decimals));\n\n  constructor() public {\n    _mint(msg.sender, INITIAL_SUPPLY);\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60806040526004805460ff1916905534801561001a57600080fd5b5061002d33640100000000610051810204565b61004c336b204fce5e3e250261100000006401000000006100a0810204565b6101ab565b610069600382640100000000610c1661015882021704565b604051600160a060020a038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b600160a060020a03821615156100b557600080fd5b6002546100cf9082640100000000610bcd61019282021704565b600255600160a060020a0382166000908152602081905260409020546101029082640100000000610bcd61019282021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a038116151561016d57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000828201838110156101a457600080fd5b9392505050565b610c7c806101ba6000396000f3006080604052600436106101065763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461010b578063095ea7b31461019557806318160ddd146101cd57806323b872dd146101f45780632ff2e9dc1461021e578063313ce56714610233578063395093511461025e5780633f4ba83a1461028257806342966c681461029957806346fbf68e146102b15780635c975abb146102d25780636ef8d66d146102e757806370a08231146102fc57806382dc1ec41461031d5780638456cb591461033e57806395d89b4114610353578063a457c2d714610368578063a9059cbb1461038c578063dd62ed3e146103b0575b600080fd5b34801561011757600080fd5b506101206103d7565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015a578181015183820152602001610142565b50505050905090810190601f1680156101875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a157600080fd5b506101b9600160a060020a036004351660243561040e565b604080519115158252519081900360200190f35b3480156101d957600080fd5b506101e2610432565b60408051918252519081900360200190f35b34801561020057600080fd5b506101b9600160a060020a0360043581169060243516604435610438565b34801561022a57600080fd5b506101e261045e565b34801561023f57600080fd5b5061024861046e565b6040805160ff9092168252519081900360200190f35b34801561026a57600080fd5b506101b9600160a060020a0360043516602435610473565b34801561028e57600080fd5b50610297610490565b005b3480156102a557600080fd5b506102976004356104ea565b3480156102bd57600080fd5b506101b9600160a060020a03600435166104f7565b3480156102de57600080fd5b506101b9610510565b3480156102f357600080fd5b50610297610519565b34801561030857600080fd5b506101e2600160a060020a0360043516610524565b34801561032957600080fd5b50610297600160a060020a036004351661053f565b34801561034a57600080fd5b5061029761055c565b34801561035f57600080fd5b506101206105b8565b34801561037457600080fd5b506101b9600160a060020a03600435166024356105ef565b34801561039857600080fd5b506101b9600160a060020a036004351660243561060c565b3480156103bc57600080fd5b506101e2600160a060020a0360043581169060243516610629565b60408051808201909152601481527f43524f53532065786368616e676520746f6b656e000000000000000000000000602082015281565b60045460009060ff161561042157600080fd5b61042b8383610654565b9392505050565b60025490565b60045460009060ff161561044b57600080fd5b6104568484846106d2565b949350505050565b6b204fce5e3e2502611000000081565b601281565b60045460009060ff161561048657600080fd5b61042b8383610847565b610499336104f7565b15156104a457600080fd5b60045460ff1615156104b557600080fd5b6004805460ff191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b6104f433826108f7565b50565b600061050a60038363ffffffff6109c516565b92915050565b60045460ff1690565b610522336109fc565b565b600160a060020a031660009081526020819052604090205490565b610548336104f7565b151561055357600080fd5b6104f481610a44565b610565336104f7565b151561057057600080fd5b60045460ff161561058057600080fd5b6004805460ff191660011790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b60408051808201909152600381527f5845580000000000000000000000000000000000000000000000000000000000602082015281565b60045460009060ff161561060257600080fd5b61042b8383610a8c565b60045460009060ff161561061f57600080fd5b61042b8383610ad7565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000600160a060020a038316151561066b57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600160a060020a0383166000908152602081905260408120548211156106f757600080fd5b600160a060020a038416600090815260016020908152604080832033845290915290205482111561072757600080fd5b600160a060020a038316151561073c57600080fd5b600160a060020a038416600090815260208190526040902054610765908363ffffffff610bb616565b600160a060020a03808616600090815260208190526040808220939093559085168152205461079a908363ffffffff610bcd16565b600160a060020a038085166000908152602081815260408083209490945591871681526001825282812033825290915220546107dc908363ffffffff610bb616565b600160a060020a03808616600081815260016020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b6000600160a060020a038316151561085e57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610892908363ffffffff610bcd16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a038216151561090c57600080fd5b600160a060020a03821660009081526020819052604090205481111561093157600080fd5b600254610944908263ffffffff610bb616565b600255600160a060020a038216600090815260208190526040902054610970908263ffffffff610bb616565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6000600160a060020a03821615156109dc57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b610a0d60038263ffffffff610bdf16565b604051600160a060020a038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b610a5560038263ffffffff610c1616565b604051600160a060020a038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b6000600160a060020a0383161515610aa357600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610892908363ffffffff610bb616565b33600090815260208190526040812054821115610af357600080fd5b600160a060020a0383161515610b0857600080fd5b33600090815260208190526040902054610b28908363ffffffff610bb616565b3360009081526020819052604080822092909255600160a060020a03851681522054610b5a908363ffffffff610bcd16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60008083831115610bc657600080fd5b5050900390565b60008282018381101561042b57600080fd5b600160a060020a0381161515610bf457600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a0381161515610c2b57600080fd5b600160a060020a0316600090815260209190915260409020805460ff191660011790555600a165627a7a7230582018f3b9a9574c3a2cebaa7fd517342849dae8b70ac2edd499a45926c3d66df0770029"
}