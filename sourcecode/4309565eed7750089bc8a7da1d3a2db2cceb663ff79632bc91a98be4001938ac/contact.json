{
  "address": "0x0568025c55c21bda4bc488f3107ebfc8b3d3ef2d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ElementiumToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-17\n*/\n\npragma solidity ^0.4.21;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public constant returns (uint);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  /**\n  * @dev Fix for the ERC20 short address attack.\n  */\n  modifier onlyPayloadSize(uint size) {\n      require(!(msg.data.length < (size * 32 + 4)));\n      _;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public onlyPayloadSize(2) returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n}\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public onlyPayloadSize(3) returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n  * @param _spender The address which will spend the funds.\n  * @param _value The amount of tokens to be spent.\n  */\n  function approve(address _spender, uint256 _value) public onlyPayloadSize(2) returns (bool) {\n    // To change the approve amount you first have to reduce the addresses`\n    //  allowance to zero by calling `approve(_spender, 0)` if it is not\n    //  already 0 to mitigate the race condition described here:\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\n\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n}\n\n\ncontract UpgradedStandardToken is StandardToken {\n  // those methods are called by the legacy contract\n  // and they must ensure msg.sender to be the contract address\n  uint public _totalSupply;\n  function transferByLegacy(address from, address to, uint value) public returns (bool);\n  function transferFromByLegacy(address sender, address from, address spender, uint value) public returns (bool);\n  function approveByLegacy(address from, address spender, uint value) public returns (bool);\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n}\n\ncontract StandardTokenWithFees is StandardToken, Ownable {\n\n  // Additional variables for use if transaction fees ever became necessary\n  uint256 public basisPointsRate = 0;\n  uint256 public maximumFee = 0;\n  uint256 constant MAX_SETTABLE_BASIS_POINTS = 20;\n  uint256 constant MAX_SETTABLE_FEE = 50;\n\n  string public name;\n  string public symbol;\n  uint8 public decimals;\n  uint public _totalSupply;\n\n  uint public constant MAX_UINT = 2**256 - 1;\n\n  function calcFee(uint _value) constant public returns (uint) {\n    uint fee = (_value.mul(basisPointsRate)).div(10000);\n    if (fee > maximumFee) {\n      fee = maximumFee;\n    }\n    return fee;\n  }\n\n  function transfer(address _to, uint _value) public returns (bool) {\n    uint fee = calcFee(_value);\n    uint sendAmount = _value.sub(fee);\n\n    super.transfer(_to, sendAmount);\n    if (fee > 0) {\n      super.transfer(owner, fee);\n    }\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    uint fee = calcFee(_value);\n    uint sendAmount = _value.sub(fee);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(sendAmount);\n    if (allowed[_from][msg.sender] < MAX_UINT) {\n      allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    }\n    emit Transfer(_from, _to, sendAmount);\n    if (fee > 0) {\n      balances[owner] = balances[owner].add(fee);\n      emit Transfer(_from, owner, fee);\n    }\n    return true;\n  }\n\n  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\n    // Ensure transparency by hardcoding limit beyond which fees can never be added\n    require(newBasisPoints < MAX_SETTABLE_BASIS_POINTS);\n    require(newMaxFee < MAX_SETTABLE_FEE);\n\n    basisPointsRate = newBasisPoints;\n    maximumFee = newMaxFee.mul(uint(10)**decimals);\n\n    emit Params(basisPointsRate, maximumFee);\n  }\n\n  // Called if contract ever adds fees\n  event Params(uint feeBasisPoints, uint maxFee);\n}\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n\ncontract BlackList is Ownable {\n\n  // Getter to allow the same blacklist to be used also by other contracts (including upgraded contract)\n  function getBlackListStatus(address _maker) external constant returns (bool) {\n    return isBlackListed[_maker];\n  }\n\n  mapping (address => bool) public isBlackListed;\n\n  function addBlackList (address _evilUser) public onlyOwner {\n    isBlackListed[_evilUser] = true;\n    emit AddedBlackList(_evilUser);\n  }\n\n  function removeBlackList (address _clearedUser) public onlyOwner {\n    isBlackListed[_clearedUser] = false;\n    emit RemovedBlackList(_clearedUser);\n  }\n\n  event AddedBlackList(address indexed _user);\n\n  event RemovedBlackList(address indexed _user);\n}\n\ncontract ElementiumToken is Pausable, StandardTokenWithFees, BlackList {\n\n  address public upgradedAddress;\n  bool public deprecated;\n\n  //  The contract can be initialized with a number of tokens\n  //  All the tokens are deposited to the owner address\n  //\n  // @param _initialSupply Initial supply of the contract\n  // @param _name Token Name\n  // @param _symbol Token symbol\n  // @param _decimals Token decimals\n  constructor(uint _initialSupply, string _name, string _symbol, uint8 _decimals) public {\n    _totalSupply = _initialSupply;\n    name = _name;\n    symbol = _symbol;\n    decimals = _decimals;\n    balances[owner] = _initialSupply;\n    deprecated = false;\n  }\n\n  // Forward ERC20 methods to upgraded contract if this one is deprecated\n  function transfer(address _to, uint _value) public whenNotPaused returns (bool) {\n    require(!isBlackListed[msg.sender]);\n    if (deprecated) {\n      return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\n    } else {\n      return super.transfer(_to, _value);\n    }\n  }\n\n  // Forward ERC20 methods to upgraded contract if this one is deprecated\n  function transferFrom(address _from, address _to, uint _value) public whenNotPaused returns (bool) {\n    require(!isBlackListed[_from]);\n    if (deprecated) {\n      return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\n    } else {\n      return super.transferFrom(_from, _to, _value);\n    }\n  }\n\n  // Forward ERC20 methods to upgraded contract if this one is deprecated\n  function balanceOf(address who) public constant returns (uint) {\n    if (deprecated) {\n      return UpgradedStandardToken(upgradedAddress).balanceOf(who);\n    } else {\n      return super.balanceOf(who);\n    }\n  }\n\n  // Allow checks of balance at time of deprecation\n  function oldBalanceOf(address who) public constant returns (uint) {\n    if (deprecated) {\n      return super.balanceOf(who);\n    }\n  }\n\n  // Forward ERC20 methods to upgraded contract if this one is deprecated\n  function approve(address _spender, uint _value) public whenNotPaused returns (bool) {\n    if (deprecated) {\n      return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\n    } else {\n      return super.approve(_spender, _value);\n    }\n  }\n\n  // Forward ERC20 methods to upgraded contract if this one is deprecated\n  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n    if (deprecated) {\n      return StandardToken(upgradedAddress).allowance(_owner, _spender);\n    } else {\n      return super.allowance(_owner, _spender);\n    }\n  }\n\n  // Deprecate current contract in favour of a new one\n  function deprecate(address _upgradedAddress) public onlyOwner {\n    require(_upgradedAddress != address(0));\n    deprecated = true;\n    upgradedAddress = _upgradedAddress;\n    emit Deprecate(_upgradedAddress);\n  }\n\n  // Total amount of token\n  function totalSupply() public constant returns (uint) {\n    if (deprecated) {\n      return StandardToken(upgradedAddress).totalSupply();\n    } else {\n      return _totalSupply;\n    }\n  }\n\n  // Issue a new amount of tokens\n  // these tokens are deposited into the owner address\n  //\n  // @param _amount Number of tokens to be issued\n  function issue(uint amount) public onlyOwner {\n    balances[owner] = balances[owner].add(amount);\n    _totalSupply = _totalSupply.add(amount);\n    emit Issue(amount);\n    emit Transfer(address(0), owner, amount);\n  }\n\n  // Redeem tokens.\n  // These tokens are withdrawn from the owner address\n  // if the balance must be enough to cover the redeem\n  // or the call will fail.\n  // @param _amount Number of tokens to be issued\n  function redeem(uint amount) public onlyOwner {\n    _totalSupply = _totalSupply.sub(amount);\n    balances[owner] = balances[owner].sub(amount);\n    emit Redeem(amount);\n    emit Transfer(owner, address(0), amount);\n  }\n\n  function destroyBlackFunds (address _blackListedUser) public onlyOwner {\n    require(isBlackListed[_blackListedUser]);\n    uint dirtyFunds = balanceOf(_blackListedUser);\n    balances[_blackListedUser] = 0;\n    _totalSupply = _totalSupply.sub(dirtyFunds);\n    emit DestroyedBlackFunds(_blackListedUser, dirtyFunds);\n  }\n\n  event DestroyedBlackFunds(address indexed _blackListedUser, uint _balance);\n\n  // Called when new token are issued\n  event Issue(uint amount);\n\n  // Called when tokens are redeemed\n  event Redeem(uint amount);\n\n  // Called when contract is deprecated\n  event Deprecate(address newAddress);\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"calcFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"oldBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040526002805460a060020a60ff0219169055600060038190556004553480156200002b57600080fd5b506040516200192638038062001926833981016040908152815160208084015192840151606085015160028054600160a060020a03191633179055600884905593850180519395909491019290916200008a91600591860190620000e8565b508151620000a0906006906020850190620000e8565b506007805460ff191660ff929092169190911790555050600254600160a060020a0316600090815260208190526040902055600a805460a060020a60ff02191690556200018d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b6200018a91905b8082111562000169576000815560010162000174565b90565b611789806200019d6000396000f30060806040526004361061018a5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461018f5780630753c30c14610219578063095ea7b31461023c5780630e136b19146102745780630ecb93c01461028957806318160ddd146102aa57806323b872dd146102d157806326976e3f146102fb578063313ce5671461032c57806335390714146103575780633eaaf86b1461036c5780633f4ba83a1461038157806359bf1abe146103965780635c975abb146103b757806370a08231146103cc57806375dc7d8c146103ed5780638456cb59146104055780638da5cb5b1461041a57806395d89b411461042f578063a9059cbb14610444578063b7a3446c14610468578063c0324c7714610489578063cc872b66146104a4578063db006a75146104bc578063dd62ed3e146104d4578063dd644f72146104fb578063e47d606014610510578063e4997dc514610531578063e5b5019a14610552578063f2fde38b14610567578063f3bdc22814610588575b600080fd5b34801561019b57600080fd5b506101a46105a9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101de5781810151838201526020016101c6565b50505050905090810190601f16801561020b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022557600080fd5b5061023a600160a060020a0360043516610637565b005b34801561024857600080fd5b50610260600160a060020a03600435166024356106e4565b604080519115158252519081900360200190f35b34801561028057600080fd5b506102606107cb565b34801561029557600080fd5b5061023a600160a060020a03600435166107db565b3480156102b657600080fd5b506102bf61083e565b60408051918252519081900360200190f35b3480156102dd57600080fd5b50610260600160a060020a03600435811690602435166044356108fa565b34801561030757600080fd5b50610310610a11565b60408051600160a060020a039092168252519081900360200190f35b34801561033857600080fd5b50610341610a20565b6040805160ff9092168252519081900360200190f35b34801561036357600080fd5b506102bf610a29565b34801561037857600080fd5b506102bf610a2f565b34801561038d57600080fd5b5061023a610a35565b3480156103a257600080fd5b50610260600160a060020a0360043516610aad565b3480156103c357600080fd5b50610260610acf565b3480156103d857600080fd5b506102bf600160a060020a0360043516610adf565b3480156103f957600080fd5b506102bf600435610b9f565b34801561041157600080fd5b5061023a610bdf565b34801561042657600080fd5b50610310610c5c565b34801561043b57600080fd5b506101a4610c6b565b34801561045057600080fd5b50610260600160a060020a0360043516602435610cc6565b34801561047457600080fd5b506102bf600160a060020a0360043516610d8e565b34801561049557600080fd5b5061023a600435602435610dac565b3480156104b057600080fd5b5061023a600435610e44565b3480156104c857600080fd5b5061023a600435610f21565b3480156104e057600080fd5b506102bf600160a060020a0360043581169060243516611000565b34801561050757600080fd5b506102bf61108f565b34801561051c57600080fd5b50610260600160a060020a0360043516611095565b34801561053d57600080fd5b5061023a600160a060020a03600435166110aa565b34801561055e57600080fd5b506102bf61110a565b34801561057357600080fd5b5061023a600160a060020a0360043516611110565b34801561059457600080fd5b5061023a600160a060020a03600435166111a5565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b505050505081565b600254600160a060020a0316331461064e57600080fd5b600160a060020a038116151561066357600080fd5b600a805460a060020a74ff0000000000000000000000000000000000000000199091161773ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03831690811790915560408051918252517fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e916020908290030190a150565b60025460009060a060020a900460ff16156106fe57600080fd5b600a5460a060020a900460ff16156107b857600a54604080517faee92d33000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038681166024830152604482018690529151919092169163aee92d339160648083019260209291908290030181600087803b15801561078557600080fd5b505af1158015610799573d6000803e3d6000fd5b505050506040513d60208110156107af57600080fd5b505190506107c5565b6107c28383611264565b90505b92915050565b600a5460a060020a900460ff1681565b600254600160a060020a031633146107f257600080fd5b600160a060020a038116600081815260096020526040808220805460ff19166001179055517f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc9190a250565b600a5460009060a060020a900460ff16156108f257600a60009054906101000a9004600160a060020a0316600160a060020a03166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108bf57600080fd5b505af11580156108d3573d6000803e3d6000fd5b505050506040513d60208110156108e957600080fd5b505190506108f7565b506008545b90565b60025460009060a060020a900460ff161561091457600080fd5b600160a060020a03841660009081526009602052604090205460ff161561093a57600080fd5b600a5460a060020a900460ff16156109fc57600a54604080517f8b477adb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03878116602483015286811660448301526064820186905291519190921691638b477adb9160848083019260209291908290030181600087803b1580156109c957600080fd5b505af11580156109dd573d6000803e3d6000fd5b505050506040513d60208110156109f357600080fd5b50519050610a0a565b610a0784848461131b565b90505b9392505050565b600a54600160a060020a031681565b60075460ff1681565b60045481565b60085481565b600254600160a060020a03163314610a4c57600080fd5b60025460a060020a900460ff161515610a6457600080fd5b6002805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600160a060020a03811660009081526009602052604090205460ff165b919050565b60025460a060020a900460ff1681565b600a5460009060a060020a900460ff1615610b8f57600a54604080517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916370a082319160248083019260209291908290030181600087803b158015610b5c57600080fd5b505af1158015610b70573d6000803e3d6000fd5b505050506040513d6020811015610b8657600080fd5b50519050610aca565b610b988261155e565b9050610aca565b600080610bc9612710610bbd6003548661157990919063ffffffff16565b9063ffffffff6115a416565b90506004548111156107c5575060045492915050565b600254600160a060020a03163314610bf657600080fd5b60025460a060020a900460ff1615610c0d57600080fd5b6002805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600254600160a060020a031681565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561062f5780601f106106045761010080835404028352916020019161062f565b60025460009060a060020a900460ff1615610ce057600080fd5b3360009081526009602052604090205460ff1615610cfd57600080fd5b600a5460a060020a900460ff1615610d8457600a54604080517f6e18980a000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a0386811660248301526044820186905291519190921691636e18980a9160648083019260209291908290030181600087803b15801561078557600080fd5b6107c283836115bb565b600a5460009060a060020a900460ff1615610aca57610b988261155e565b600254600160a060020a03163314610dc357600080fd5b60148210610dd057600080fd5b60328110610ddd57600080fd5b6003829055600754610dfc90829060ff16600a0a63ffffffff61157916565b600481905560035460408051918252602082019290925281517fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e929181900390910190a15050565b600254600160a060020a03163314610e5b57600080fd5b600254600160a060020a0316600090815260208190526040902054610e86908263ffffffff61161116565b600254600160a060020a0316600090815260208190526040902055600854610eb4908263ffffffff61161116565b6008556040805182815290517fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a9181900360200190a1600254604080518381529051600160a060020a039092169160009160008051602061173e833981519152919081900360200190a350565b600254600160a060020a03163314610f3857600080fd5b600854610f4b908263ffffffff61162016565b600855600254600160a060020a0316600090815260208190526040902054610f79908263ffffffff61162016565b600254600160a060020a03166000908152602081815260409182902092909255805183815290517f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44929181900390910190a1600254604080518381529051600092600160a060020a03169160008051602061173e833981519152919081900360200190a350565b600a5460009060a060020a900460ff161561108557600a54604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015285811660248301529151919092169163dd62ed3e9160448083019260209291908290030181600087803b15801561078557600080fd5b6107c28383611632565b60035481565b60096020526000908152604090205460ff1681565b600254600160a060020a031633146110c157600080fd5b600160a060020a038116600081815260096020526040808220805460ff19169055517fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c9190a250565b60001981565b600254600160a060020a0316331461112757600080fd5b600160a060020a038116151561113c57600080fd5b600254604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600254600090600160a060020a031633146111bf57600080fd5b600160a060020a03821660009081526009602052604090205460ff1615156111e657600080fd5b6111ef82610adf565b600160a060020a03831660009081526020819052604081205560085490915061121e908263ffffffff61162016565b600855604080518281529051600160a060020a038416917f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6919081900360200190a25050565b60006002604436101561127657600080fd5b82158015906112a75750336000908152600160209081526040808320600160a060020a038816845290915290205415155b156112b157600080fd5b336000818152600160209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3600191505b5092915050565b60008080600160a060020a038516151561133457600080fd5b600160a060020a03861660009081526020819052604090205484111561135957600080fd5b600160a060020a038616600090815260016020908152604080832033845290915290205484111561138957600080fd5b61139284610b9f565b91506113a4848363ffffffff61162016565b600160a060020a0387166000908152602081905260409020549091506113d0908563ffffffff61162016565b600160a060020a038088166000908152602081905260408082209390935590871681522054611405908263ffffffff61161116565b600160a060020a03808716600090815260208181526040808320949094559189168152600182528281203382529091522054600019111561149957600160a060020a0386166000908152600160209081526040808320338452909152902054611474908563ffffffff61162016565b600160a060020a03871660009081526001602090815260408083203384529091529020555b84600160a060020a031686600160a060020a031660008051602061173e833981519152836040518082815260200191505060405180910390a3600082111561155257600254600160a060020a0316600090815260208190526040902054611506908363ffffffff61161116565b60028054600160a060020a03908116600090815260208181526040918290209490945591548251868152925190821693918a169260008051602061173e83398151915292908290030190a35b50600195945050505050565b600160a060020a031660009081526020819052604090205490565b60008083151561158c5760009150611314565b5082820282848281151561159c57fe5b0414610a0a57fe5b60008082848115156115b257fe5b04949350505050565b60008060006115c984610b9f565b91506115db848363ffffffff61162016565b90506115e7858261165d565b5060008211156116095760025461160790600160a060020a03168361165d565b505b505092915050565b600082820183811015610a0a57fe5b60008282111561162c57fe5b50900390565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60006002604436101561166f57600080fd5b600160a060020a038416151561168457600080fd5b336000908152602081905260409020548311156116a057600080fd5b336000908152602081905260409020546116c0908463ffffffff61162016565b3360009081526020819052604080822092909255600160a060020a038616815220546116f2908463ffffffff61161116565b600160a060020a0385166000818152602081815260409182902093909355805186815290519192339260008051602061173e8339815191529281900390910190a350600193925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058209ece10c9f6f339f323ab10fcbc24dad4aeaf82204e4685b673bf26deb9ba744e002900000000000000000000000000000000000000000000000000000002540be400000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000f456c656d656e7469756d20436f696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004454c455400000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "00000000000000000000000000000000000000000000000000000002540be400000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000f456c656d656e7469756d20436f696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004454c455400000000000000000000000000000000000000000000000000000000"
}