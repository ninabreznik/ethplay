{
  "address": "0x74a84dd46b1a8b2b9fa60ec2e7313f6ae47324c0",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TestBool",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-29\n*/\n\npragma solidity ^0.4.25 ;\n\ncontract TestBool{\n    address owner;\n    constructor() public payable{\n        owner = msg.sender;\n    }\n    modifier onlyOwner(){\n        require (msg.sender==owner);\n        _;\n    }\n    // 获取合约账户余额\n    function getBalance() public constant returns(uint){\n        return address(this).balance;\n    }\n    // 合约出账\n    function sendTransfer(address _user,uint _price) public onlyOwner{\n        require(_user!=owner);\n        if(address(this).balance>=_price){\n            _user.transfer(_price);\n        }\n    }\n    // 提币\n    function getEth(uint _price) public onlyOwner{\n        if(_price>0){\n            if(address(this).balance>=_price){\n                owner.transfer(_price);\n            }\n        }else{\n           owner.transfer(address(this).balance); \n        }\n    }\n}",
  "bytecode": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e4806100536000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe01461005c5780638e3073a6146100875780639e0994a1146100b4575b600080fd5b34801561006857600080fd5b50610071610101565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100b260048036038101908080359060200190929190505050610120565b005b3480156100c057600080fd5b506100ff600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610295565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561017b57600080fd5b600081111561021257803073ffffffffffffffffffffffffffffffffffffffff163110151561020d576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561020b573d6000803e3d6000fd5b505b610292565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610290573d6000803e3d6000fd5b505b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102f057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561034c57600080fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015156103b4578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103b2573d6000803e3d6000fd5b505b50505600a165627a7a72305820863e5cf74488645844c162e6fe7cea2301c36ae70ed0869b4b32824f2a175cbf0029"
}