{
  "address": "0x970e035e2a013cf4becd67e300d65bc32a56d826",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BodhiEthereum",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-28\n*/\n\npragma solidity ^0.4.23;\n\n/**\n * @title ERC20 interface\n * @dev Implements ERC20 Token Standard: https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 {\n    uint256 public totalSupply;\n\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    function balanceOf(address _owner) public view returns (uint256 balance);\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\nlibrary SafeMath {\n    function add(uint256 x, uint256 y) internal pure returns(uint256) {\n        uint256 z = x + y;\n        assert((z >= x) && (z >= y));\n        return z;\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns(uint256) {\n        assert(x >= y);\n        uint256 z = x - y;\n        return z;\n    }\n\n    function mul(uint256 x, uint256 y) internal pure returns(uint256) {\n        uint256 z = x * y;\n        assert((x == 0) || (z / x == y));\n        return z;\n    }\n\n    function div(uint256 x, uint256 y) internal pure returns(uint256) {\n        assert(y != 0);\n        uint256 z = x / y;\n        assert(x == y * z + x % y);\n        return z;\n    }\n}\n\n\n/// @title Contract that will work with ERC223 tokens.\ncontract ERC223ReceivingContract { \n    /*\n    * @dev Standard ERC223 function that will handle incoming token transfers.\n    * @param _from Token sender address.\n    * @param _value Amount of tokens.\n    * @param _data Transaction metadata.\n    */\n    function tokenFallback(address _from, uint _value, bytes _data) external;\n}\n\n\n/**\n * @title Ownable contract\n * @dev The Ownable contract has an owner address, and provides basic authorization control functions.\n */\ncontract Ownable {\n    address public owner;\n\n    // Modifiers\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    modifier validAddress(address _address) {\n        require(_address != address(0));\n        _;\n    }\n\n    // Events\n    event OwnershipTransferred(address indexed _previousOwner, address indexed _newOwner);\n\n    /// @dev The Ownable constructor sets the original `owner` of the contract to the sender account.\n    constructor(address _owner) public validAddress(_owner) {\n        owner = _owner;\n    }\n\n    /// @dev Allows the current owner to transfer control of the contract to a newOwner.\n    /// @param _newOwner The address to transfer ownership to.\n    function transferOwnership(address _newOwner) public onlyOwner validAddress(_newOwner) {\n        emit OwnershipTransferred(owner, _newOwner);\n        owner = _newOwner;\n    }\n}\n\n\n\n\n\n\n\n\n\n\ncontract ERC223 is ERC20 {\n    function transfer(address _to, uint256 _value, bytes _data) public returns (bool success);\n    event Transfer(address indexed from, address indexed to, uint256 value, bytes data);\n}\n\n\n\n\ncontract StandardToken is ERC223 {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n\n    // Modifiers\n    modifier validAddress(address _address) {\n        require(_address != address(0));\n        _;\n    }\n\n    /*\n    * @dev ERC20 method to transfer token to a specified address.\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        bytes memory empty;\n        transfer(_to, _value, empty);\n    }\n\n    /*\n    * @dev ERC223 method to transfer token to a specified address with data.\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    * @param _data Transaction metadata.\n    */\n    function transfer(address _to, uint256 _value, bytes _data) public validAddress(_to) returns (bool success) {\n        uint codeLength;\n\n        assembly {\n            // Retrieve the size of the code on target address, this needs assembly\n            codeLength := extcodesize(_to)\n        }\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n\n        // Call token fallback function if _to is a contract. Rejects if not implemented.\n        if (codeLength > 0) {\n            ERC223ReceivingContract(_to).tokenFallback(msg.sender, _value, _data);\n        }\n\n        emit Transfer(msg.sender, _to, _value);\n        emit Transfer(msg.sender, _to, _value, _data);\n        return true;\n    }\n\n    /*\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n    * @param _spender The address which will spend the funds.\n    * @param _value The amount of tokens to be spent.\n    */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /*\n    * @dev Transfer tokens from one address to another\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint256 the amount of tokens to be transferred\n    */\n    function transferFrom(address _from, address _to, uint256 _value) public validAddress(_to) returns (bool) {\n        uint256 _allowance = allowed[_from][msg.sender];\n\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n        // require (_value <= _allowance);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = _allowance.sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /*\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    /*\n    * @dev Function to check the amount of tokens that an owner allowed to a spender.\n    * @param _owner address The address which owns the funds.\n    * @param _spender address The address which will spend the funds.\n    * @return A uint256 specifying the amount of tokens still available for the spender.\n    */\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n}\n\n\n\ncontract MintableToken is StandardToken, Ownable {\n    // Events\n    event Mint(uint256 supply, address indexed to, uint256 amount);\n\n    function tokenTotalSupply() public pure returns (uint256);\n\n    /// @dev Allows the owner to mint new tokens\n    /// @param _to Address to mint the tokens to\n    /// @param _amount Amount of tokens that will be minted\n    /// @return Boolean to signify successful minting\n    function mint(address _to, uint256 _amount) external onlyOwner returns (bool) {\n        require(totalSupply.add(_amount) <= tokenTotalSupply());\n\n        totalSupply = totalSupply.add(_amount);\n        balances[_to] = balances[_to].add(_amount);\n\n        emit Mint(totalSupply, _to, _amount);\n        emit Transfer(address(0), _to, _amount);\n\n        return true;\n    }\n}\n\n\ncontract BodhiEthereum is MintableToken {\n    // Token configurations\n    string public constant name = \"Bodhi Ethereum\";\n    string public constant symbol = \"BOE\";\n    uint256 public constant decimals = 8;\n\n    constructor() Ownable(msg.sender) public {\n    }\n\n    // 100 million BOE ever created\n    function tokenTotalSupply() public pure returns (uint256) {\n        return 100 * (10**6) * (10**decimals);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"supply\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50338080151561001f57600080fd5b5060038054600160a060020a031916600160a060020a0392909216919091179055610ad98061004f6000396000f3006080604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d4578063095ea7b31461015e57806318160ddd1461019657806323b872dd146101bd578063313ce567146101e757806340c10f19146101fc57806370a08231146102205780638da5cb5b1461024157806395d89b4114610272578063a9059cbb14610287578063be45fd62146102ab578063dd62ed3e14610314578063f2fde38b1461033b578063f7abab9e1461035e575b600080fd5b3480156100e057600080fd5b506100e9610373565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012357818101518382015260200161010b565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016a57600080fd5b50610182600160a060020a03600435166024356103aa565b604080519115158252519081900360200190f35b3480156101a257600080fd5b506101ab61044c565b60408051918252519081900360200190f35b3480156101c957600080fd5b50610182600160a060020a0360043581169060243516604435610452565b3480156101f357600080fd5b506101ab610578565b34801561020857600080fd5b50610182600160a060020a036004351660243561057d565b34801561022c57600080fd5b506101ab600160a060020a036004351661069e565b34801561024d57600080fd5b506102566106b9565b60408051600160a060020a039092168252519081900360200190f35b34801561027e57600080fd5b506100e96106c8565b34801561029357600080fd5b50610182600160a060020a03600435166024356106ff565b3480156102b757600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610182948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506107169650505050505050565b34801561032057600080fd5b506101ab600160a060020a03600435811690602435166109a8565b34801561034757600080fd5b5061035c600160a060020a03600435166109d3565b005b34801561036a57600080fd5b506101ab610a6a565b60408051808201909152600e81527f426f64686920457468657265756d000000000000000000000000000000000000602082015281565b60008115806103da5750336000908152600260209081526040808320600160a060020a0387168452909152902054155b15156103e557600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60005481565b60008083600160a060020a038116151561046b57600080fd5b600160a060020a038616600081815260026020908152604080832033845282528083205493835260019091529020549092506104ad908563ffffffff610a7516565b600160a060020a0380881660009081526001602052604080822093909355908716815220546104e2908563ffffffff610a8916565b600160a060020a03861660009081526001602052604090205561050b828563ffffffff610a7516565b600160a060020a03808816600081815260026020908152604080832033845282529182902094909455805188815290519289169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a350600195945050505050565b600881565b600354600090600160a060020a0316331461059757600080fd5b61059f610a6a565b6000546105b2908463ffffffff610a8916565b11156105bd57600080fd5b6000546105d0908363ffffffff610a8916565b6000908155600160a060020a0384168152600160205260409020546105fb908363ffffffff610a8916565b600160a060020a03841660008181526001602090815260408083209490945590548351908152908101859052825191927f4e3883c75cc9c752bb1db2e406a822e4a75067ae77ad9a0a4d179f2709b9e1f692918290030190a2604080518381529051600160a060020a038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b600160a060020a031660009081526001602052604090205490565b600354600160a060020a031681565b60408051808201909152600381527f424f450000000000000000000000000000000000000000000000000000000000602082015281565b6000606061070e848483610716565b505092915050565b60008084600160a060020a038116151561072f57600080fd5b33600090815260016020526040902054863b9250610753908663ffffffff610a7516565b3360009081526001602052604080822092909255600160a060020a03881681522054610785908663ffffffff610a8916565b600160a060020a0387166000908152600160205260408120919091558211156108a75785600160a060020a031663c0ee0b8a3387876040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610840578181015183820152602001610828565b50505050905090810190601f16801561086d5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561088e57600080fd5b505af11580156108a2573d6000803e3d6000fd5b505050505b604080518681529051600160a060020a0388169133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a385600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1687876040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610961578181015183820152602001610949565b50505050905090810190601f16801561098e5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a350600195945050505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a031633146109ea57600080fd5b80600160a060020a0381161515610a0057600080fd5b600354604051600160a060020a038085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3506003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b662386f26fc1000090565b60008082841015610a8257fe5b5050900390565b6000828201838110801590610a9e5750828110155b1515610aa657fe5b93925050505600a165627a7a7230582028e8a141cf66387e56d3fe42bf670b66e2efb75136a17d882e2028850d9a4a9a0029"
}