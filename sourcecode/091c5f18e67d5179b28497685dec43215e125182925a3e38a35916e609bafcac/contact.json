{
  "address": "0xd6343fc13204ec6ea4dcbac0f73587f3955f93e7",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "InviteToken",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-02-13\n*/\n\npragma solidity ^0.4.19;\n\n/**\n* Token for SpringRole PreMint. This token is usable on the mainnet\n* Go to https://beta.springrole.com to start!\n* At the time of writing this contract, this token can be used for reserving vanity URL.\n* More features will be added soon.\n*/\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\ncontract StandardToken is ERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) public balances;\n    mapping (address => mapping (address => uint256)) public allowed;\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) returns (bool success) {\n        require(balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]);\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n    * @dev Transfer tokens from one address to another\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint256 the amout of tokens to be transfered\n    */\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]);\n        balances[_to] = balances[_to].add(_value);\n        balances[_from] = balances[_from].sub(_value);\n        allowed[_from][msg.sender] -= allowed[_from][msg.sender].sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    /**\n    * @dev Aprove the passed address to spend the specified amount of tokens on behalf of msg.sender.\n    * This only works when the allowance is 0. Cannot be used to change allowance. \n    * https://github.com/ethereum/EIPs/issues/738#issuecomment-336277632\n    * @param _spender The address which will spend the funds.\n    * @param _value The amount of tokens to be spent.\n    */\n    function approve(address _spender, uint256 _value) returns (bool success) {\n        require(allowed[msg.sender][_spender] == 0);\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n    * @dev Function to check the amount of tokens that an owner allowed to a spender.\n    * @param _owner address The address which owns the funds.\n    * @param _spender address The address which will spend the funds.\n    * @return A uint256 specifing the amount of tokens still available for the spender.\n    */\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n\n    /**\n     * To increment allowed value is better to use this function.\n     * From MonolithDAO Token.sol\n     */\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n}\n\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/* Contract class for adding removing whitelisted contracts */\ncontract WhiteListedContracts is Ownable {\n  mapping (address => bool ) white_listed_contracts;\n\n  //modifer to check if the contract given is white listed or not\n  modifier whitelistedContractsOnly() {\n    require(white_listed_contracts[msg.sender]);\n    _;\n  }\n\n  //add a contract to whitelist\n  function addWhiteListedContracts (address _address) onlyOwner public {\n    white_listed_contracts[_address] = true;\n  }\n\n  //remove contract from whitelist\n  function removeWhiteListedContracts (address _address) onlyOwner public {\n    white_listed_contracts[_address] = false;\n  }\n}\n\n/* Contract class to mint tokens and transfer */\ncontract InviteToken is Ownable,StandardToken,WhiteListedContracts {\n  using SafeMath for uint256;\n\n  string constant public name = 'Invite Token';\n  string constant public symbol = 'INVITE';\n  uint constant public decimals = 18;\n  uint256 public totalSupply;\n  uint256 public maxSupply;\n\n  /* Contructor function to set maxSupply*/\n  function InviteToken(uint256 _maxSupply){\n    maxSupply = _maxSupply.mul(10**decimals);\n  }\n\n  /*\n  do transfer function will allow transfer from a _to to _from provided if the call\n  comes from whitelisted contracts only\n  */\n  function doTransfer(address _from, address _to, uint256 _value) whitelistedContractsOnly public returns (bool){\n    require(balances[_from] >= _value && balances[_to] + _value > balances[_to]);\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n * @dev Function to mint tokens\n * @param _amount The amount of tokens to mint.\n * @return A boolean that indicates if the operation was successful.\n */\n  function mint(uint256 _amount) onlyOwner public returns (bool) {\n    require (maxSupply >= (totalSupply.add(_amount)));\n    totalSupply = totalSupply.add(_amount);\n    balances[msg.sender] = balances[msg.sender].add(_amount);\n    Transfer(address(0), msg.sender, _amount);\n    return true;\n  }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"doTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addWhiteListedContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeWhiteListedContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_maxSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b604051602080610e058339810160405280805160018054600160a060020a03191633600160a060020a03161790559150610060905081670de0b6b3a76400006401000000006100698102610cf21704565b60065550610094565b6000828202831580610085575082848281151561008257fe5b04145b151561008d57fe5b9392505050565b610d62806100a36000396000f3006060604052600436106101115763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610116578063095ea7b3146101a057806318160ddd146101d657806323b872dd146101fb57806327e235e314610223578063313ce5671461024257806337751b35146102555780635c6581651461027d5780635e604b60146102a2578063660357f2146102c357806366188463146102e257806370a08231146103045780638da5cb5b1461032357806395d89b4114610352578063a0712d6814610365578063a9059cbb1461037b578063d5abeb011461039d578063d73dd623146103b0578063dd62ed3e146103d2578063f2fde38b146103f7575b600080fd5b341561012157600080fd5b610129610416565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016557808201518382015260200161014d565b50505050905090810190601f1680156101925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ab57600080fd5b6101c2600160a060020a036004351660243561044d565b604051901515815260200160405180910390f35b34156101e157600080fd5b6101e96104e8565b60405190815260200160405180910390f35b341561020657600080fd5b6101c2600160a060020a03600435811690602435166044356104ee565b341561022e57600080fd5b6101e9600160a060020a036004351661066f565b341561024d57600080fd5b6101e9610681565b341561026057600080fd5b6101c2600160a060020a0360043581169060243516604435610686565b341561028857600080fd5b6101e9600160a060020a03600435811690602435166107a7565b34156102ad57600080fd5b6102c1600160a060020a03600435166107c4565b005b34156102ce57600080fd5b6102c1600160a060020a0360043516610803565b34156102ed57600080fd5b6101c2600160a060020a036004351660243561083f565b341561030f57600080fd5b6101e9600160a060020a0360043516610939565b341561032e57600080fd5b610336610954565b604051600160a060020a03909116815260200160405180910390f35b341561035d57600080fd5b610129610963565b341561037057600080fd5b6101c260043561099a565b341561038657600080fd5b6101c2600160a060020a0360043516602435610a60565b34156103a857600080fd5b6101e9610b5a565b34156103bb57600080fd5b6101c2600160a060020a0360043516602435610b60565b34156103dd57600080fd5b6101e9600160a060020a0360043581169060243516610c04565b341561040257600080fd5b6102c1600160a060020a0360043516610c2f565b60408051908101604052600c81527f496e7669746520546f6b656e0000000000000000000000000000000000000000602082015281565b600160a060020a0333811660009081526003602090815260408083209386168352929052908120541561047f57600080fd5b600160a060020a03338116600081815260036020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60055481565b600160a060020a03831660009081526002602052604081205482901080159061053e5750600160a060020a0380851660009081526003602090815260408083203390941683529290522054829010155b80156105635750600160a060020a038316600090815260026020526040902054828101115b151561056e57600080fd5b600160a060020a038316600090815260026020526040902054610597908363ffffffff610cca16565b600160a060020a0380851660009081526002602052604080822093909355908616815220546105cc908363ffffffff610ce016565b600160a060020a038086166000908152600260209081526040808320949094556003815283822033909316825291909152205461060f908363ffffffff610ce016565b600160a060020a03808616600081815260036020908152604080832033861684529091529081902080549490940390935590851691600080516020610d178339815191529085905190815260200160405180910390a35060019392505050565b60026020526000908152604090205481565b601281565b600160a060020a03331660009081526004602052604081205460ff1615156106ad57600080fd5b600160a060020a0384166000908152600260205260409020548290108015906106ef5750600160a060020a038316600090815260026020526040902054828101115b15156106fa57600080fd5b600160a060020a038416600090815260026020526040902054610723908363ffffffff610ce016565b600160a060020a038086166000908152600260205260408082209390935590851681522054610758908363ffffffff610cca16565b600160a060020a0380851660008181526002602052604090819020939093559190861690600080516020610d178339815191529085905190815260200160405180910390a35060019392505050565b600360209081526000928352604080842090915290825290205481565b60015433600160a060020a039081169116146107df57600080fd5b600160a060020a03166000908152600460205260409020805460ff19166001179055565b60015433600160a060020a0390811691161461081e57600080fd5b600160a060020a03166000908152600460205260409020805460ff19169055565b600160a060020a0333811660009081526003602090815260408083209386168352929052908120548083111561089c57600160a060020a0333811660009081526003602090815260408083209388168352929052908120556108d3565b6108ac818463ffffffff610ce016565b600160a060020a033381166000908152600360209081526040808320938916835292905220555b600160a060020a0333811660008181526003602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600160a060020a031660009081526002602052604090205490565b600154600160a060020a031681565b60408051908101604052600681527f494e564954450000000000000000000000000000000000000000000000000000602082015281565b60015460009033600160a060020a039081169116146109b857600080fd5b6005546109cb908363ffffffff610cca16565b60065410156109d957600080fd5b6005546109ec908363ffffffff610cca16565b600555600160a060020a033316600090815260026020526040902054610a18908363ffffffff610cca16565b600160a060020a033316600081815260026020526040808220939093559091600080516020610d178339815191529085905190815260200160405180910390a3506001919050565b600160a060020a033316600090815260026020526040812054829010801590610aa25750600160a060020a038316600090815260026020526040902054828101115b1515610aad57600080fd5b600160a060020a033316600090815260026020526040902054610ad6908363ffffffff610ce016565b600160a060020a033381166000908152600260205260408082209390935590851681522054610b0b908363ffffffff610cca16565b600160a060020a038085166000818152600260205260409081902093909355913390911690600080516020610d178339815191529085905190815260200160405180910390a350600192915050565b60065481565b600160a060020a033381166000908152600360209081526040808320938616835292905290812054610b98908363ffffffff610cca16565b600160a060020a0333811660008181526003602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b60015433600160a060020a03908116911614610c4a57600080fd5b600160a060020a0381161515610c5f57600080fd5b600154600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082820183811015610cd957fe5b9392505050565b600082821115610cec57fe5b50900390565b6000828202831580610d0e5750828482811515610d0b57fe5b04145b1515610cd957fe00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582049e29c5eb7bdbb77d4e2e640bf120af076bdfa8f2c819cbf55270a3ff9f00bfa00290000000000000000000000000000000000000000204fce5e3e25026110000000",
  "constructorArguments": "0000000000000000000000000000000000000000204fce5e3e25026110000000"
}