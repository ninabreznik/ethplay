{
  "address": "0xf18af466f8885f9ea93d2b85c47a427cb01bad52",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "RacingPigeonCoin",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-19\n*/\n\npragma solidity ^0.4.23;\n\n/**\n * @title SafeMath\n */\nlibrary SafeMath {\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title ERC20 interface\n */\ncontract ERC20 {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address _owner) public view returns (uint256);\n  function transfer(address _to, uint256 _value) public returns (bool);\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\n  function approve(address _spender, uint256 _value) public returns (bool);\n  function allowance(address _owner, address _spender) public view returns (uint256);\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n/**\n * @title Owned\n */\ncontract Owned {\n  address public owner;\n\n  constructor() public {\n    owner = msg.sender;\n  }\n  \n  modifier onlyOwner {\n    require(msg.sender == owner);\n    _;\n  }\n}\n\n/**\n * @title ERC20 token\n */\ncontract ERC20Token is ERC20 {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n  mapping (address => mapping (address => uint256)) allowed;\n  uint256 public totalToken;\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(balances[msg.sender] >= _value);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(balances[_from] >= _value);\n    require(allowed[_from][msg.sender] >= _value);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  function totalSupply() public view returns (uint256) {\n    return totalToken;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n}\n\n/**\n * @title Racing Pigeon Coin\n */\ncontract RacingPigeonCoin is ERC20Token, Owned {\n\n  string  public constant name     = \"Racing Pigeon Coin\";\n  string  public constant symbol   = \"RPC\";\n  uint256 public constant decimals = 18;\n\n  uint256 public constant initialToken     = 500000000 * (10 ** decimals);\n\n  uint256 public constant unlockedToken = initialToken * 40 / 100; // 40%\n  uint256 public constant team1Token    = initialToken * 15 / 100; // 15%\n  uint256 public constant team2Token    = initialToken * 15 / 100; // 15%\n  uint256 public constant team3Token    = initialToken * 15 / 100; // 15%\n  uint256 public constant team4Token    = initialToken * 15 / 100; // 15%\n\n  address public constant team1Address  = 0x00602F855B9EC54D8A02aFb7d8a36d0129729242;\n  address public constant team2Address  = 0x00215cFb433105d55344b6f8c9c8d6557203b858;\n  address public constant team3Address  = 0x004a9b534313fA84Ed0295c5f255448bD68F085C;\n  address public constant team4Address  = 0x00B219Cb01c0ba8176CFbB0bDA16d2729d9E2823;\n  address public constant rescueAddress = 0x00bACAfB97DCcDb091e2b3554F6D3A2838383334;\n\n  uint256 public constant team1LockEndTime = 1558314000; // 2019-05-20 01:00:00 GMT\n  uint256 public constant team2LockEndTime = 1574211600; // 2019-11-20 01:00:00 GMT\n  uint256 public constant team3LockEndTime = 1589936400; // 2020-05-20 01:00:00 GMT\n  uint256 public constant team4LockEndTime = 1605834000; // 2020-11-20 01:00:00 GMT\n\n  uint256 public constant maxDestroyThreshold = initialToken / 2;\n  uint256 public constant maxBurnThreshold    = maxDestroyThreshold / 50;\n  \n  mapping(address => bool) lockAddresses;\n\n  uint256 public destroyedToken;\n\n  event Burn(address indexed _burner, uint256 _value);\n\n  constructor() public {\n    totalToken     = initialToken;\n\n    balances[msg.sender]   = unlockedToken;\n    balances[team1Address] = team1Token;\n    balances[team2Address] = team2Token;\n    balances[team3Address] = team3Token;\n    balances[team4Address] = team4Token;\n\n    emit Transfer(0x0, msg.sender, unlockedToken);\n    emit Transfer(0x0, team1Address, team1Token);\n    emit Transfer(0x0, team2Address, team2Token);\n    emit Transfer(0x0, team3Address, team3Token);\n    emit Transfer(0x0, team4Address, team4Token);\n\n    lockAddresses[team1Address] = true;\n    lockAddresses[team2Address] = true;\n    lockAddresses[team3Address] = true;\n    lockAddresses[team4Address] = true;\n\n    destroyedToken = 0;\n  }\n\n  modifier transferable(address _addr) {\n    require(!lockAddresses[_addr]);\n    _;\n  }\n\n  function unlock() public onlyOwner {\n    if (lockAddresses[team1Address] && now >= team1LockEndTime)\n      lockAddresses[team1Address] = false;\n    if (lockAddresses[team2Address] && now >= team2LockEndTime)\n      lockAddresses[team2Address] = false;\n    if (lockAddresses[team3Address] && now >= team3LockEndTime)\n      lockAddresses[team3Address] = false;\n    if (lockAddresses[team4Address] && now >= team4LockEndTime)\n      lockAddresses[team4Address] = false;\n  }\n\n  function transfer(address _to, uint256 _value) public transferable(msg.sender) returns (bool) {\n    return super.transfer(_to, _value);\n  }\n\n  function approve(address _spender, uint256 _value) public transferable(msg.sender) returns (bool) {\n    return super.approve(_spender, _value);\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public transferable(_from) returns (bool) {\n    return super.transferFrom(_from, _to, _value);\n  }\n\n  function burn(uint256 _value) public onlyOwner returns (bool) {\n    require(balances[msg.sender] >= _value);\n    require(maxBurnThreshold >= _value);\n    require(maxDestroyThreshold >= destroyedToken.add(_value));\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    totalToken = totalToken.sub(_value);\n    destroyedToken = destroyedToken.add(_value);\n    emit Transfer(msg.sender, 0x0, _value);\n    emit Burn(msg.sender, _value);\n    return true;\n  }\n\n  function transferAnyERC20Token(address _tokenAddress, uint256 _value) public onlyOwner returns (bool) {\n    return ERC20(_tokenAddress).transfer(rescueAddress, _value);\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team4Address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team3Address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team1LockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team1Address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"destroyedToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rescueAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team4LockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxDestroyThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockedToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team4Token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team3Token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team2LockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team2Address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team3LockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxBurnThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team2Token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team1Token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": ""
}