{
  "address": "0xd571b424bc4e29e1632b8d1e43577f09f5f3b88c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "StaffAVTScheme",
  "compilerVersion": "v0.5.0+commit.1d4f565a",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-18\n*/\n\npragma solidity ^0.5.0;\n\n\n\n// https://github.com/ethereum/EIPs/issues/20\ninterface IERC20 {\n  function totalSupply() external view returns (uint totalSupply_);\n  function balanceOf(address _owner) external view returns (uint balance_);\n  function transfer(address _to, uint _value) external returns (bool success_);\n  function transferFrom(address _from, address _to, uint _value) external returns (bool success_);\n  function approve(address _spender, uint _value) external returns (bool success_);\n  function allowance(address _owner, address _spender) external view returns (uint remaining_);\n  // Triggered when tokens are transferred\n  event Transfer(address indexed _from, address indexed _to, uint _value);\n  // Triggered whenever approve(address _spender, uint _value) is called\n  event Approval(address indexed _owner, address indexed _spender, uint _value);\n}\n\ncontract StaffAVTScheme {\n  address public owner;\n  IERC20 public avt;\n  uint public schemeStartTimestamp;\n  uint8 public numDaysBetweenPayments;\n  uint8 public numPayments;\n\n  mapping(address => uint) public AmountPerPayment;\n  mapping(address => uint) public NextPaymentDueTimestamp;\n  mapping(address => uint) public NumPaymentsLeft;\n\n  modifier onlyOwner {\n    require(owner == msg.sender, \"Sender must be owner\");\n   _;\n  }\n\n  /**\n   * @param _avt address of AVT ERC20 contract\n   * @param _schemeStartTimestamp no accounts can be added that start before this time\n   * @param _numDaysBetweenPayments number of days between each payment for accounts\n   * @param _numPayments number of payments for each account\n   */\n  constructor(IERC20 _avt, uint _schemeStartTimestamp, uint8 _numDaysBetweenPayments, uint8 _numPayments)\n    public\n  {\n    owner = msg.sender;\n    avt = _avt;\n    schemeStartTimestamp = _schemeStartTimestamp;\n    numDaysBetweenPayments = _numDaysBetweenPayments;\n    numPayments = _numPayments;\n  }\n\n  function transferOwnership(address _newOwner)\n    public\n    onlyOwner\n  {\n    owner = _newOwner;\n  }\n\n  /**\n   * NOTE: This method can only be called ONCE per address.\n   * @param _account address of the AVT claimant\n   * @param _firstPaymentTimestamp timestamp for the claimant's first payment\n   * @param _amountPerPayment amount of AVT (to 18 decimal places, aka NAT) to pay the claimant on each payment\n   */\n  function addAccount(address _account, uint _firstPaymentTimestamp, uint _amountPerPayment)\n    public\n    onlyOwner\n  {\n    require(AmountPerPayment[_account] == 0, \"Already registered\");\n    require(_firstPaymentTimestamp >= schemeStartTimestamp, \"First payment timestamp is invalid\");\n    require(_amountPerPayment != 0, \"Amount is zero\");\n    AmountPerPayment[_account] = _amountPerPayment;\n    NumPaymentsLeft[_account] = numPayments;\n    NextPaymentDueTimestamp[_account] = _firstPaymentTimestamp;\n  }\n\n  /**\n   * Clear an account from the scheme. ONLY Use this if a staff member leaves the scheme.\n   */\n  function removeAccount(address _account)\n    public\n    onlyOwner\n  {\n    AmountPerPayment[_account] = 0;\n    NumPaymentsLeft[_account] = 0;\n    NextPaymentDueTimestamp[_account] = 0;\n  }\n\n  /**\n   * Transfers AVT to the caller if they are in the scheme and have a valid claim. Reverts if not.\n   */\n  function claimAVT()\n    public\n  {\n    transferAVT(msg.sender);\n  }\n\n  /**\n   * Transfers AVT to the specified account if they are in the scheme and have a valid claim. Reverts if not.\n   * @param _account the account to send AVT to\n   */\n  function sendAVT(address _account)\n    public\n  {\n    transferAVT(_account);\n  }\n\n  function transferAVT(address _account)\n    private\n  {\n    uint paymentDueTimestamp = NextPaymentDueTimestamp[_account];\n    require(paymentDueTimestamp != 0, \"Address is not registered on the scheme\");\n\n    uint numPaymentsLeft = NumPaymentsLeft[_account];\n    require(numPaymentsLeft != 0, \"Address has claimed all their AVT\");\n\n    require(paymentDueTimestamp <= now, \"Address is not eligible for a payment yet\");\n\n    uint numWholeDaysSincePaymentDueTimestamp = (now - paymentDueTimestamp)/1 days;\n\n    uint numPaymentsToMake = 1 + numWholeDaysSincePaymentDueTimestamp/numDaysBetweenPayments;\n    if (numPaymentsToMake > numPaymentsLeft) {\n      numPaymentsToMake = numPaymentsLeft;\n    }\n    NumPaymentsLeft[_account] = numPaymentsLeft - numPaymentsToMake;\n    uint totalPayment = numPaymentsToMake * AmountPerPayment[_account];\n\n    NextPaymentDueTimestamp[_account] = paymentDueTimestamp + (1 days * numDaysBetweenPayments * numPaymentsToMake);\n\n    require(avt.balanceOf(address(this)) >= totalPayment, \"Insufficient funds!\");\n    assert(avt.transfer(_account, totalPayment));\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"numDaysBetweenPayments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimAVT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numPayments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"avt\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"AmountPerPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"NumPaymentsLeft\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"schemeStartTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"sendAVT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"NextPaymentDueTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_firstPaymentTimestamp\",\"type\":\"uint256\"},{\"name\":\"_amountPerPayment\",\"type\":\"uint256\"}],\"name\":\"addAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_avt\",\"type\":\"address\"},{\"name\":\"_schemeStartTimestamp\",\"type\":\"uint256\"},{\"name\":\"_numDaysBetweenPayments\",\"type\":\"uint8\"},{\"name\":\"_numPayments\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]",
  "bytecode": "608060405234801561001057600080fd5b506040516080806113008339810180604052608081101561003057600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260028190555081600360006101000a81548160ff021916908360ff16021790555080600360016101000a81548160ff021916908360ff160217905550505050506111d0806101306000396000f3fe6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063073ccbb6146100ca5780631cb9b228146100fb5780632279fa4c146101125780633b9aaae4146101435780634263f2da1461019a5780634ec409b6146101ff5780634fee287e146102645780638da5cb5b1461028f578063ade2fe5e146102e6578063c4740a9514610337578063e1b4ebb714610388578063ec5c5dec146103ed578063f2fde38b14610452575b600080fd5b3480156100d657600080fd5b506100df6104a3565b604051808260ff1660ff16815260200191505060405180910390f35b34801561010757600080fd5b506101106104b6565b005b34801561011e57600080fd5b506101276104c1565b604051808260ff1660ff16815260200191505060405180910390f35b34801561014f57600080fd5b506101586104d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a657600080fd5b506101e9600480360360208110156101bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104fa565b6040518082815260200191505060405180910390f35b34801561020b57600080fd5b5061024e6004803603602081101561022257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610512565b6040518082815260200191505060405180910390f35b34801561027057600080fd5b5061027961052a565b6040518082815260200191505060405180910390f35b34801561029b57600080fd5b506102a4610530565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f257600080fd5b506103356004803603602081101561030957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610555565b005b34801561034357600080fd5b506103866004803603602081101561035a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610561565b005b34801561039457600080fd5b506103d7600480360360208110156103ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106f7565b6040518082815260200191505060405180910390f35b3480156103f957600080fd5b506104506004803603606081101561041057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061070f565b005b34801561045e57600080fd5b506104a16004803603602081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a86565b005b600360009054906101000a900460ff1681565b6104bf33610b8d565b565b600360019054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b60066020528060005260406000206000915090505481565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61055e81610b8d565b50565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610625576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f53656e646572206d757374206265206f776e657200000000000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60056020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f53656e646572206d757374206265206f776e657200000000000000000000000081525060200191505060405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561088a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f416c72656164792072656769737465726564000000000000000000000000000081525060200191505060405180910390fd5b600254821015151561092a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f4669727374207061796d656e742074696d657374616d7020697320696e76616c81526020017f696400000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600081141515156109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f416d6f756e74206973207a65726f00000000000000000000000000000000000081525060200191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360019054906101000a900460ff1660ff16600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610b4a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f53656e646572206d757374206265206f776e657200000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114151515610c70576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f41646472657373206973206e6f742072656769737465726564206f6e2074686581526020017f20736368656d650000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114151515610d53576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f416464726573732068617320636c61696d656420616c6c20746865697220415681526020017f540000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b428211151515610df1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f41646472657373206973206e6f7420656c696769626c6520666f72206120706181526020017f796d656e7420796574000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600062015180834203811515610e0357fe5b0490506000600360009054906101000a900460ff1660ff1682811515610e2557fe5b04600101905082811115610e37578290505b808303600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548202905081600360009054906101000a900460ff1660ff16620151800262ffffff16028501600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610fe357600080fd5b505afa158015610ff7573d6000803e3d6000fd5b505050506040513d602081101561100d57600080fd5b810190808051906020019092919050505010151515611094576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e73756666696369656e742066756e6473210000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561115957600080fd5b505af115801561116d573d6000803e3d6000fd5b505050506040513d602081101561118357600080fd5b8101908080519060200190929190505050151561119c57fe5b50505050505056fea165627a7a72305820e19e2d2e8ae2c62e1081b738cc299873412839d4a1a5f7415c56b83f2534927c00290000000000000000000000000d88ed6e74bbfd96b831231638b66c05571e824f000000000000000000000000000000000000000000000000000000005c012640000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000018",
  "constructorArguments": "0000000000000000000000000d88ed6e74bbfd96b831231638b66c05571e824f000000000000000000000000000000000000000000000000000000005c012640000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000018"
}