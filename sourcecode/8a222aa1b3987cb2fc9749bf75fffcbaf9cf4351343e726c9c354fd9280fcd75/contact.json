{
  "address": "0x00000b233566fcc3825f94d68d4fc410f8cb2300",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "NRM",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-04-12\n*/\n\npragma solidity ^0.4.21;\n\n// ----------------------------------------------------------------------------\n// NRM token main contract\n//\n// Symbol       : NRM\n// Name         : Neuromachine\n// Total supply : 4.958.333.333,000000000000000000 (burnable)\n// Decimals     : 18\n// ----------------------------------------------------------------------------\n\n\n// ----------------------------------------------------------------------------\n// Safe math\n// ----------------------------------------------------------------------------\nlibrary SafeMath {\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    function div(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n}\n\n\n// ----------------------------------------------------------------------------\n// ERC Token Standard #20 Interface\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n// ----------------------------------------------------------------------------\ncontract ERC20Interface {\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\n\n// ----------------------------------------------------------------------------\n// Contract function to receive approval and execute function in one call\n// ----------------------------------------------------------------------------\ncontract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\n}\n\n\n// ----------------------------------------------------------------------------\n// Owned contract\n// ----------------------------------------------------------------------------\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    function Owned() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n    \n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n        newOwner = address(0);\n    }\n}\n\n\n// ----------------------------------------------------------------------------\n// NRM ERC20 Token - Neuromachine token contract\n// ----------------------------------------------------------------------------\ncontract NRM is ERC20Interface, Owned {\n    using SafeMath for uint;\n\n    bool public running = true;\n    string public symbol;\n    string public name;\n    uint8 public decimals;\n    uint _totalSupply;\n\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n    \n    address public FreezeAddress;\n    uint256 public FreezeTokens;\n    uint256 public FreezeTokensReleaseTime;\n\n    // ------------------------------------------------------------------------\n    // Contract init. Set symbol, name, decimals and initial fixed supply\n    // ------------------------------------------------------------------------\n    function NRM() public {\n        symbol = \"NRM\";\n        name = \"Neuromachine\";\n        decimals = 18;\n        _totalSupply = 4958333333 * 10**uint(decimals);\n        balances[owner] = _totalSupply;\n        emit Transfer(address(0), owner, _totalSupply);\n    // ------------------------------------------------------------------------\n    // Team and develop tokens transfer to freeze account for 365 days\n    // ------------------------------------------------------------------------\n        FreezeAddress = 0x7777777777777777777777777777777777777777;\n        FreezeTokens = _totalSupply.mul(30).div(100);\n\n        balances[owner] = balances[owner].sub(FreezeTokens);\n        balances[FreezeAddress] = balances[FreezeAddress].add(FreezeTokens);\n        emit Transfer(owner, FreezeAddress, FreezeTokens);\n        FreezeTokensReleaseTime = now + 365 days;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Team and tokens unfreeze after 365 days from contract deploy\n    // ------------------------------------------------------------------------\n\n    function unfreezeTeamTokens(address unFreezeAddress) public onlyOwner returns (bool success) {\n        require(balances[FreezeAddress] > 0);\n        require(now >= FreezeTokensReleaseTime);\n        balances[FreezeAddress] = balances[FreezeAddress].sub(FreezeTokens);\n        balances[unFreezeAddress] = balances[unFreezeAddress].add(FreezeTokens);\n        emit Transfer(FreezeAddress, unFreezeAddress, FreezeTokens);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Start-stop contract functions:\n    // transfer, approve, transferFrom, approveAndCall\n    // ------------------------------------------------------------------------\n\n    modifier isRunnning {\n        require(running);\n        _;\n    }\n\n\n    function startStop () public onlyOwner returns (bool success) {\n        if (running) { running = false; } else { running = true; }\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Total supply\n    // ------------------------------------------------------------------------\n    function totalSupply() public constant returns (uint) {\n        return _totalSupply.sub(balances[address(0)]);\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Get the token balance for account `tokenOwner`\n    // ------------------------------------------------------------------------\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n        return balances[tokenOwner];\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Transfer the balance from token owner's account to `to` account\n    // ------------------------------------------------------------------------\n    function transfer(address to, uint tokens) public isRunnning returns (bool success) {\n        require(tokens <= balances[msg.sender]);\n        require(tokens != 0);\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(msg.sender, to, tokens);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n    // from the token owner's account\n    //\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n    // recommends that there are no checks for the approval double-spend attack\n    // as this should be implemented in user interfaces \n    // ------------------------------------------------------------------------\n    function approve(address spender, uint tokens) public isRunnning returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Transfer `tokens` from the `from` account to the `to` account\n    // ------------------------------------------------------------------------\n    function transferFrom(address from, address to, uint tokens) public isRunnning returns (bool success) {\n        require(tokens <= balances[from]);\n        require(tokens <= allowed[from][msg.sender]);\n        require(tokens != 0);\n        balances[from] = balances[from].sub(tokens);\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(from, to, tokens);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Returns the amount of tokens approved by the owner that can be\n    // transferred to the spender's account\n    // ------------------------------------------------------------------------\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n        return allowed[tokenOwner][spender];\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n    // from the token owner's account. The `spender` contract function\n    // `receiveApproval(...)` is then executed\n    // ------------------------------------------------------------------------\n    function approveAndCall(address spender, uint tokens, bytes data) public isRunnning returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Owner can transfer out any accidentally sent ERC20 tokens\n    // ------------------------------------------------------------------------\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n    }\n\n    // ------------------------------------------------------------------------\n    // Tokens burn\n    // ------------------------------------------------------------------------\n\n    function burnTokens(uint256 tokens) public returns (bool success) {\n        require(tokens <= balances[msg.sender]);\n        require(tokens != 0);\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n        _totalSupply = _totalSupply.sub(tokens);\n        emit Transfer(msg.sender, address(0), tokens);\n        return true;\n    }    \n\n\n    // ------------------------------------------------------------------------\n    // Tokens multisend from owner only by owner\n    // ------------------------------------------------------------------------\n    function multisend(address[] to, uint256[] values) public onlyOwner returns (uint256) {\n        for (uint256 i = 0; i < to.length; i++) {\n            balances[owner] = balances[owner].sub(values[i]);\n            balances[to[i]] = balances[to[i]].add(values[i]);\n            emit Transfer(owner, to[i], values[i]);\n        }\n        return(i);\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"unFreezeAddress\",\"type\":\"address\"}],\"name\":\"unfreezeTeamTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startStop\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FreezeTokensReleaseTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FreezeAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multisend\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"running\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FreezeTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526001805460a060020a60ff0219167401000000000000000000000000000000000000000017905534156200003757600080fd5b60008054600160a060020a03191633600160a060020a031617905560408051908101604052600381527f4e524d0000000000000000000000000000000000000000000000000000000000602082015260029080516200009b92916020019062000304565b5060408051908101604052600c81527f4e6575726f6d616368696e65000000000000000000000000000000000000000060208201526003908051620000e592916020019062000304565b5060048054601260ff19909116179081905560ff16600a0a6401278a299502600581905560008054600160a060020a03908116825260066020526040808320849055825490911692600080516020620014e5833981519152915190815260200160405180910390a360088054600160a060020a031916737777777777777777777777777777777777777777179055600554620001ae906064906200019990601e6401000000006200109a6200028c82021704565b90640100000000620010bf620002ba82021704565b600981905560008054600160a060020a0316815260066020526040902054620001e59164010000000062001075620002dd82021704565b60008054600160a060020a03908116825260066020526040808320939093556009546008549091168252919020546200022c916401000000006200108a620002f382021704565b60088054600160a060020a03908116600090815260066020526040808220949094559154915460095492821693911691600080516020620014e5833981519152915190815260200160405180910390a36301e133804201600a55620003a9565b818102821580620002a85750818382811515620002a557fe5b04145b1515620002b457600080fd5b92915050565b6000808211620002c957600080fd5b8183811515620002d557fe5b049392505050565b600082821115620002ed57600080fd5b50900390565b81810182811015620002b457600080fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034757805160ff191683800117855562000377565b8280016001018555821562000377579182015b82811115620003775782518255916020019190600101906200035a565b506200038592915062000389565b5090565b620003a691905b8082111562000385576000815560010162000390565b90565b61112c80620003b96000396000f3006060604052600436106101195763ffffffff60e060020a60003504166301d6e35b811461011e57806306fdde0314610151578063095ea7b3146101db57806318160ddd146101fd57806323b872dd14610222578063313ce5671461024a5780636d1b229d1461027357806370a082311461028957806371098a35146102a857806379ba5097146102bb5780637ebe7626146102d05780638da5cb5b146102e357806395d89b4114610312578063990eda9914610325578063a9059cbb14610338578063aad41a411461035a578063cae9ca51146103e9578063d4ee1d901461044e578063d85bd52614610461578063dc39d06d14610474578063dd62ed3e14610496578063ee5e2988146104bb578063f2fde38b146104ce575b600080fd5b341561012957600080fd5b61013d600160a060020a03600435166104ed565b604051901515815260200160405180910390f35b341561015c57600080fd5b6101646105f9565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101a0578082015183820152602001610188565b50505050905090810190601f1680156101cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101e657600080fd5b61013d600160a060020a0360043516602435610697565b341561020857600080fd5b61021061071c565b60405190815260200160405180910390f35b341561022d57600080fd5b61013d600160a060020a036004358116906024351660443561075f565b341561025557600080fd5b61025d6108df565b60405160ff909116815260200160405180910390f35b341561027e57600080fd5b61013d6004356108e8565b341561029457600080fd5b610210600160a060020a03600435166109a6565b34156102b357600080fd5b61013d6109c1565b34156102c657600080fd5b6102ce610a3d565b005b34156102db57600080fd5b610210610acb565b34156102ee57600080fd5b6102f6610ad1565b604051600160a060020a03909116815260200160405180910390f35b341561031d57600080fd5b610164610ae0565b341561033057600080fd5b6102f6610b4b565b341561034357600080fd5b61013d600160a060020a0360043516602435610b5a565b341561036557600080fd5b610210600460248135818101908301358060208181020160405190810160405280939291908181526020018383602002808284378201915050505050509190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843750949650610c5395505050505050565b34156103f457600080fd5b61013d60048035600160a060020a03169060248035919060649060443590810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610dcd95505050505050565b341561045957600080fd5b6102f6610f48565b341561046c57600080fd5b61013d610f57565b341561047f57600080fd5b61013d600160a060020a0360043516602435610f67565b34156104a157600080fd5b610210600160a060020a0360043581169060243516610ffa565b34156104c657600080fd5b610210611025565b34156104d957600080fd5b6102ce600160a060020a036004351661102b565b6000805433600160a060020a0390811691161461050957600080fd5b600854600160a060020a03166000908152600660205260408120541161052e57600080fd5b600a5442101561053d57600080fd5b600954600854600160a060020a031660009081526006602052604090205461056a9163ffffffff61107516565b600854600160a060020a0390811660009081526006602052604080822093909355600954918516815291909120546105a79163ffffffff61108a16565b600160a060020a03808416600081815260066020526040908190209390935560085460095491939216916000805160206110e183398151915291905190815260200160405180910390a3506001919050565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561068f5780601f106106645761010080835404028352916020019161068f565b820191906000526020600020905b81548152906001019060200180831161067257829003601f168201915b505050505081565b60015460009060a060020a900460ff1615156106b257600080fd5b600160a060020a03338116600081815260076020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b600080805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f85460055461075a9163ffffffff61107516565b905090565b60015460009060a060020a900460ff16151561077a57600080fd5b600160a060020a03841660009081526006602052604090205482111561079f57600080fd5b600160a060020a03808516600090815260076020908152604080832033909416835292905220548211156107d257600080fd5b8115156107de57600080fd5b600160a060020a038416600090815260066020526040902054610807908363ffffffff61107516565b600160a060020a038086166000908152600660209081526040808320949094556007815283822033909316825291909152205461084a908363ffffffff61107516565b600160a060020a0380861660009081526007602090815260408083203385168452825280832094909455918616815260069091522054610890908363ffffffff61108a16565b600160a060020a03808516600081815260066020526040908190209390935591908616906000805160206110e18339815191529085905190815260200160405180910390a35060019392505050565b60045460ff1681565b600160a060020a03331660009081526006602052604081205482111561090d57600080fd5b81151561091957600080fd5b600160a060020a033316600090815260066020526040902054610942908363ffffffff61107516565b600160a060020a03331660009081526006602052604090205560055461096e908363ffffffff61107516565b600555600033600160a060020a03166000805160206110e18339815191528460405190815260200160405180910390a3506001919050565b600160a060020a031660009081526006602052604090205490565b6000805433600160a060020a039081169116146109dd57600080fd5b60015460a060020a900460ff1615610a12576001805474ff000000000000000000000000000000000000000019169055610a37565b6001805474ff0000000000000000000000000000000000000000191660a060020a1790555b50600190565b60015433600160a060020a03908116911614610a5857600080fd5b600154600054600160a060020a0391821691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600a5481565b600054600160a060020a031681565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561068f5780601f106106645761010080835404028352916020019161068f565b600854600160a060020a031681565b60015460009060a060020a900460ff161515610b7557600080fd5b600160a060020a033316600090815260066020526040902054821115610b9a57600080fd5b811515610ba657600080fd5b600160a060020a033316600090815260066020526040902054610bcf908363ffffffff61107516565b600160a060020a033381166000908152600660205260408082209390935590851681522054610c04908363ffffffff61108a16565b600160a060020a0380851660008181526006602052604090819020939093559133909116906000805160206110e18339815191529085905190815260200160405180910390a350600192915050565b60008054819033600160a060020a03908116911614610c7157600080fd5b5060005b8351811015610dc657610cbc838281518110610c8d57fe5b9060200190602002015160008054600160a060020a03168152600660205260409020549063ffffffff61107516565b60008054600160a060020a0316815260066020526040902055610d2e838281518110610ce457fe5b9060200190602002015160066000878581518110610cfe57fe5b90602001906020020151600160a060020a031681526020810191909152604001600020549063ffffffff61108a16565b60066000868481518110610d3e57fe5b90602001906020020151600160a060020a03168152602081019190915260400160002055838181518110610d6e57fe5b90602001906020020151600054600160a060020a0391821691166000805160206110e1833981519152858481518110610da357fe5b9060200190602002015160405190815260200160405180910390a3600101610c75565b9392505050565b60015460009060a060020a900460ff161515610de857600080fd5b600160a060020a03338116600081815260076020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a383600160a060020a0316638f4ffcb1338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ee0578082015183820152602001610ec8565b50505050905090810190601f168015610f0d5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1515610f2e57600080fd5b5af11515610f3b57600080fd5b5060019695505050505050565b600154600160a060020a031681565b60015460a060020a900460ff1681565b6000805433600160a060020a03908116911614610f8357600080fd5b600054600160a060020a038085169163a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610fdd57600080fd5b5af11515610fea57600080fd5b5050506040518051949350505050565b600160a060020a03918216600090815260076020908152604080832093909416825291909152205490565b60095481565b60005433600160a060020a0390811691161461104657600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008282111561108457600080fd5b50900390565b8181018281101561071657600080fd5b8181028215806110b457508183828115156110b157fe5b04145b151561071657600080fd5b60008082116110cd57600080fd5b81838115156110d857fe5b0493925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058208e31e2199b0bf5b9249b860432d8cf2dd7a7a9552880aa1aa6795e1693cf127d0029ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
  "constructorArguments": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
}