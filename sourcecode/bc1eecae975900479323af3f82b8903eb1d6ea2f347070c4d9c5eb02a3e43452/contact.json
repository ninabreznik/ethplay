{
  "address": "0x0c6eff25947e3b2d6e5d4f9dbf436385ac890dcb",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "COIN",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-02-27\n*/\n\npragma solidity ^0.4.23;\n\n/**\n * @title SafeMath\n */\nlibrary SafeMath {\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title ERC20 interface\n */\ncontract ERC20 {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address _owner) public view returns (uint256);\n  function transfer(address _to, uint256 _value) public returns (bool);\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\n  function approve(address _spender, uint256 _value) public returns (bool);\n  function allowance(address _owner, address _spender) public view returns (uint256);\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n/**\n * @title Owned\n */\ncontract Owned {\n  address public owner;\n\n  constructor() public {\n    owner = msg.sender;\n  }\n  \n  modifier onlyOwner {\n    require(msg.sender == owner);\n    _;\n  }\n}\n\n/**\n * @title ERC20 token\n */\ncontract ERC20Token is ERC20 {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n  mapping (address => mapping (address => uint256)) allowed;\n  uint256 public totalToken;\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(balances[msg.sender] >= _value);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(balances[_from] >= _value);\n    require(allowed[_from][msg.sender] >= _value);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  function totalSupply() public view returns (uint256) {\n    return totalToken;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n}\n\n/**\n * @title COOTEST\n */\ncontract COIN is ERC20Token, Owned {\n  \n  string  public constant name     = \"RED STAR TOKEN\";\n  string  public constant symbol   = \"RST\";\n  uint256 public constant decimals = 18;\n\n  uint256 public constant initialToken = 700000000 * (10 ** decimals);\n\n  address public constant rescueAddress = 0xc0b5adb9F2C8D04cE061Bd8d7403636f3ef763f7;\n\n  constructor() public {\n    totalToken = initialToken;\n    balances[msg.sender] = initialToken;\n    emit Transfer(0x0, msg.sender, initialToken);\n  }\n\n  function transferAnyERC20Token(address _tokenAddress, uint256 _value) public onlyOwner returns (bool) {\n    return ERC20(_tokenAddress).transfer(rescueAddress, _value);\n  }\n}",
  "bytecode": "608060405234801561001057600080fd5b5060038054600160a060020a031916339081179091556b024306c4097859c43c000000600281905560008281526020818152604080832084905580519384525191927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36107ba8061008c6000396000f3006080604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d4578063095ea7b31461015e57806318160ddd1461019657806323b872dd146101bd578063313ce567146101e75780633ea97009146101fc578063525550ea14610211578063626be5671461024257806370a08231146102575780638da5cb5b1461027857806395d89b411461028d578063a9059cbb146102a2578063dc39d06d146102c6578063dd62ed3e146102ea575b600080fd5b3480156100e057600080fd5b506100e9610311565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012357818101518382015260200161010b565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016a57600080fd5b50610182600160a060020a0360043516602435610348565b604080519115158252519081900360200190f35b3480156101a257600080fd5b506101ab6103ae565b60408051918252519081900360200190f35b3480156101c957600080fd5b50610182600160a060020a03600435811690602435166044356103b4565b3480156101f357600080fd5b506101ab610514565b34801561020857600080fd5b506101ab610519565b34801561021d57600080fd5b50610226610529565b60408051600160a060020a039092168252519081900360200190f35b34801561024e57600080fd5b506101ab610541565b34801561026357600080fd5b506101ab600160a060020a0360043516610547565b34801561028457600080fd5b50610226610562565b34801561029957600080fd5b506100e9610571565b3480156102ae57600080fd5b50610182600160a060020a03600435166024356105a8565b3480156102d257600080fd5b50610182600160a060020a0360043516602435610672565b3480156102f657600080fd5b506101ab600160a060020a036004358116906024351661073b565b60408051808201909152600e81527f524544205354415220544f4b454e000000000000000000000000000000000000602082015281565b336000818152600160209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60025490565b600160a060020a0383166000908152602081905260408120548211156103d957600080fd5b600160a060020a038416600090815260016020908152604080832033845290915290205482111561040957600080fd5b600160a060020a038416600090815260208190526040902054610432908363ffffffff61076616565b600160a060020a038086166000908152602081905260408082209390935590851681522054610467908363ffffffff61077816565b600160a060020a038085166000908152602081815260408083209490945591871681526001825282812033825290915220546104a9908363ffffffff61076616565b600160a060020a03808616600081815260016020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b601281565b6b024306c4097859c43c00000081565b73c0b5adb9f2c8d04ce061bd8d7403636f3ef763f781565b60025481565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a031681565b60408051808201909152600381527f5253540000000000000000000000000000000000000000000000000000000000602082015281565b336000908152602081905260408120548211156105c457600080fd5b336000908152602081905260409020546105e4908363ffffffff61076616565b3360009081526020819052604080822092909255600160a060020a03851681522054610616908363ffffffff61077816565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600354600090600160a060020a0316331461068c57600080fd5b604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815273c0b5adb9f2c8d04ce061bd8d7403636f3ef763f76004820152602481018490529051600160a060020a0385169163a9059cbb9160448083019260209291908290030181600087803b15801561070857600080fd5b505af115801561071c573d6000803e3d6000fd5b505050506040513d602081101561073257600080fd5b50519392505050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561077257fe5b50900390565b60008282018381101561078757fe5b93925050505600a165627a7a723058208763f80ccb8e80b629bfd866f00ecfe1a21308651d3080dd9e03879260b7c6b80029"
}