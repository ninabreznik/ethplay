{
  "address": "0xe75ad3aab14e4b0df8c5da4286608dabb21bd864",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "AcuteAngleCoin Token",
  "contractName": "AAC",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-12-29\n*/\n\npragma solidity ^0.4.18;\n\n// ----------------------------------------------------------------------------------------------\n// Acute Angle Coin by AAC Limited.\n// An ERC20 standard\n//\n// author: AcuteAngleCoin Team\n\ncontract ERC20Interface {\n    function totalSupply() public constant returns (uint256 _totalSupply);\n    function balanceOf(address _owner) public constant returns (uint256 balance);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\ncontract AAC is ERC20Interface {\n    uint256 public constant decimals = 5;\n\n    string public constant symbol = \"AAC\";\n    string public constant name = \"AcuteAngleCoin\";\n\n    uint256 public _totalSupply = 10 ** 14; // total supply is 10^14 unit, equivalent to 10^9 AAC\n\n    // Owner of this contract\n    address public owner;\n\n    // Balances AAC for each account\n    mapping(address => uint256) private balances;\n\n    // Owner of account approves the transfer of an amount to another account\n    mapping(address => mapping (address => uint256)) private allowed;\n\n    // List of approved investors\n    mapping(address => bool) private approvedInvestorList;\n\n    // deposit\n    mapping(address => uint256) private deposit;\n\n\n    // totalTokenSold\n    uint256 public totalTokenSold = 0;\n\n\n    /**\n     * @dev Fix for the ERC20 short address attack.\n     */\n    modifier onlyPayloadSize(uint size) {\n      if(msg.data.length < size + 4) {\n        revert();\n      }\n      _;\n    }\n\n\n\n    /// @dev Constructor\n    function AAC()\n        public {\n        owner = msg.sender;\n        balances[owner] = _totalSupply;\n    }\n\n    /// @dev Gets totalSupply\n    /// @return Total supply\n    function totalSupply()\n        public\n        constant\n        returns (uint256) {\n        return _totalSupply;\n    }\n\n\n\n\n\n    /// @dev Gets account's balance\n    /// @param _addr Address of the account\n    /// @return Account balance\n    function balanceOf(address _addr)\n        public\n        constant\n        returns (uint256) {\n        return balances[_addr];\n    }\n\n    /// @dev check address is approved investor\n    /// @param _addr address\n    function isApprovedInvestor(address _addr)\n        public\n        constant\n        returns (bool) {\n        return approvedInvestorList[_addr];\n    }\n\n    /// @dev get ETH deposit\n    /// @param _addr address get deposit\n    /// @return amount deposit of an buyer\n    function getDeposit(address _addr)\n        public\n        constant\n        returns(uint256){\n        return deposit[_addr];\n}\n\n\n    /// @dev Transfers the balance from msg.sender to an account\n    /// @param _to Recipient address\n    /// @param _amount Transfered amount in unit\n    /// @return Transfer status\n    function transfer(address _to, uint256 _amount)\n        public\n\n        returns (bool) {\n        // if sender's balance has enough unit and amount >= 0,\n        //      and the sum is not overflow,\n        // then do transfer\n        if ( (balances[msg.sender] >= _amount) &&\n             (_amount >= 0) &&\n             (balances[_to] + _amount > balances[_to]) ) {\n\n            balances[msg.sender] -= _amount;\n            balances[_to] += _amount;\n            Transfer(msg.sender, _to, _amount);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // Send _value amount of tokens from address _from to address _to\n    // The transferFrom method is used for a withdraw workflow, allowing contracts to send\n    // tokens on your behalf, for example to \"deposit\" to a contract address and/or to charge\n    // fees in sub-currencies; the command should fail unless the _from account has\n    // deliberately authorized the sender of the message via some mechanism; we propose\n    // these standardized APIs for approval:\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _amount\n    )\n    public\n\n    returns (bool success) {\n        if (balances[_from] >= _amount && _amount > 0 && allowed[_from][msg.sender] >= _amount) {\n            balances[_from] -= _amount;\n            allowed[_from][msg.sender] -= _amount;\n            balances[_to] += _amount;\n            Transfer(_from, _to, _amount);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // Allow _spender to withdraw from your account, multiple times, up to the _value amount.\n    // If this function is called again it overwrites the current allowance with _value.\n    function approve(address _spender, uint256 _amount)\n        public\n\n        returns (bool success) {\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _amount;\n        Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n\n    // get allowance\n    function allowance(address _owner, address _spender)\n        public\n        constant\n        returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    function () public payable{\n        revert();\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isApprovedInvestor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokenSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "6060604052655af3107a40006000556000600655341561001e57600080fd5b60018054600160a060020a03338116600160a060020a0319909216919091179182905560008054929091168152600260205260409020556106a5806100646000396000f3006060604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d4578063095ea7b31461015e57806318160ddd1461019457806323b872dd146101b9578063313ce567146101e15780633eaaf86b146101f457806370a08231146102075780638da5cb5b1461022657806395d89b41146102555780639b1fe0d414610268578063a9059cbb14610287578063b5f7f636146102a9578063dd62ed3e146102bc578063e1254fba146102e1575b600080fd5b34156100df57600080fd5b6100e7610300565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012357808201518382015260200161010b565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016957600080fd5b610180600160a060020a0360043516602435610337565b604051901515815260200160405180910390f35b341561019f57600080fd5b6101a76103de565b60405190815260200160405180910390f35b34156101c457600080fd5b610180600160a060020a03600435811690602435166044356103e4565b34156101ec57600080fd5b6101a76104da565b34156101ff57600080fd5b6101a76104df565b341561021257600080fd5b6101a7600160a060020a03600435166104e5565b341561023157600080fd5b610239610500565b604051600160a060020a03909116815260200160405180910390f35b341561026057600080fd5b6100e761050f565b341561027357600080fd5b610180600160a060020a0360043516610546565b341561029257600080fd5b610180600160a060020a0360043516602435610564565b34156102b457600080fd5b6101a761062d565b34156102c757600080fd5b6101a7600160a060020a0360043581169060243516610633565b34156102ec57600080fd5b6101a7600160a060020a036004351661065e565b60408051908101604052600e81527f4163757465416e676c65436f696e000000000000000000000000000000000000602082015281565b60008115806103695750600160a060020a03338116600090815260036020908152604080832093871683529290522054155b151561037457600080fd5b600160a060020a03338116600081815260036020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60005490565b600160a060020a03831660009081526002602052604081205482901080159061040d5750600082115b80156104405750600160a060020a0380851660009081526003602090815260408083203390941683529290522054829010155b156104cf57600160a060020a0380851660008181526002602081815260408084208054899003905560038252808420338716855282528084208054899003905594881680845291905290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060016104d3565b5060005b9392505050565b600581565b60005481565b600160a060020a031660009081526002602052604090205490565b600154600160a060020a031681565b60408051908101604052600381527f4141430000000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a031660009081526004602052604090205460ff1690565b600160a060020a03331660009081526002602052604081205482901080159061058e575060008210155b80156105b35750600160a060020a038316600090815260026020526040902054828101115b1561062557600160a060020a033381166000818152600260205260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060016103d8565b5060006103d8565b60065481565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b600160a060020a0316600090815260056020526040902054905600a165627a7a7230582060d587e418468b16eed0ec449c1b0b21e00d6a32d920a31f3e81996b1a09646c0029"
}