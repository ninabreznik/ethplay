{
  "address": "0x96da1354453b287ba88f8ec73403165e9d395630",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "XEXHolder",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-15\n*/\n\npragma solidity ^0.4.25;\n\ncontract ERC20 {\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint value) public returns (bool ok);\n}\n\ncontract XEXHolder{\n    address private holder1_;\n    address private holder2_;\n    address private holder3_;\n    bool private holder1Reset_;\n    bool private holder2Reset_;\n    bool private holder3Reset_;\n    bool private holder1Transaction_;\n    bool private holder2Transaction_;\n    bool private holder3Transaction_;\n\n    address private token_;\n    uint256 private transactionNonce_;\n    address private transactionTo_;\n    uint256 private transactionValue_;\n\n    event HolderSetted(address indexed _address1,address indexed _address2,address indexed _address3);\n    event HolderReseted(bool _vote);\n    event TransactionStarted(address indexed _address,uint _value);\n    event TransactionConfirmed(address indexed _address,bool _vote);\n    event TransactionSubmitted(address indexed _address,uint _value);\n    \n    modifier onlyHolder() {\n        require(isHolder(msg.sender));\n        _;\n    }\n    \n    constructor(address _token) public{\n        token_=_token;\n        holder1_=msg.sender;\n        holder2_=address(0);\n        holder3_=address(0);\n        holder1Reset_=false;\n        holder2Reset_=false;\n        holder3Reset_=false;\n        holder1Transaction_=false;\n        holder2Transaction_=false;\n        holder3Transaction_=false;\n    }\n    \n    function isHolder(address _address) public view returns (bool) {\n        if(_address==address(0)){\n            return false;\n        }\n        return _address==holder1_ || _address==holder2_ || _address==holder3_;\n    }\n    \n    function setHolder(address _address1,address _address2,address _address3) public onlyHolder{\n        require(_address1!=address(0) && _address2!=address(0) && _address3!=address(0));\n        require(_address1!=_address2 && _address1!=_address3 && _address2!=_address3);\n        \n        uint _vote=0;\n        if(holder1_==address(0)||holder1Reset_){\n            _vote++;\n        }\n        if(holder2_==address(0)||holder2Reset_){\n            _vote++;\n        }\n        if(holder3_==address(0)||holder3Reset_){\n            _vote++;\n        }\n        require(_vote>=2);\n        \n        holder1_=_address1;\n        holder2_=_address2;\n        holder3_=_address3;\n        holder1Reset_=false;\n        holder2Reset_=false;\n        holder3Reset_=false;\n        clearTransaction();\n        \n        emit HolderSetted(holder1_,holder2_,holder3_);\n    }\n    \n    function resetHolder(bool _vote) public onlyHolder{\n        if(msg.sender==holder1_){\n            holder1Reset_=_vote;\n        }\n        if(msg.sender==holder2_){\n            holder2Reset_=_vote;\n        }\n        if(msg.sender==holder3_){\n            holder3Reset_=_vote;\n        }\n        emit HolderReseted(_vote);\n    }\n    \n    function startTransaction(address _address, uint256 _value) public onlyHolder{\n        require(_address != address(0) && _value > 0);\n\n        transactionNonce_ = uint256(keccak256(abi.encodePacked(block.difficulty,now)));\n        transactionTo_ = _address;\n        transactionValue_ = _value;\n        emit TransactionStarted(_address,_value);\n\n        confirmTransaction(transactionNonce_, true);\n    }\n    \n    function showTransaction() public view returns(address _address, uint256 _value,uint256 _nonce){\n        return (transactionTo_,transactionValue_,transactionNonce_);\n    }\n\n    function confirmTransaction(uint256 _nonce, bool _vote) public onlyHolder{\n        require(transactionNonce_==_nonce);\n        \n        if(msg.sender==holder1_){\n            holder1Transaction_=_vote;\n        }\n        if(msg.sender==holder2_){\n            holder2Transaction_=_vote;\n        }\n        if(msg.sender==holder3_){\n            holder3Transaction_=_vote;\n        }\n        emit TransactionConfirmed(msg.sender,_vote);\n    }\n\n    function submitTransaction() public onlyHolder{\n        require(transactionTo_ != address(0) && transactionValue_ > 0);\n        require(holder1Transaction_ && holder2Transaction_ && holder3Transaction_);\n        require(!holder1Reset_ && !holder2Reset_ && !holder3Reset_);\n        \n        ERC20 _token = ERC20(token_);\n        _token.approve(this, transactionValue_);\n        _token.transferFrom(this,transactionTo_,transactionValue_);\n        \n        emit TransactionSubmitted(transactionTo_,transactionValue_);\n        \n        clearTransaction();\n    }\n    \n    function clearTransaction() internal{\n        transactionNonce_=0;\n        transactionTo_=address(0);\n        transactionValue_=0;\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b50604051602080610bae833981016040525160038054600160a060020a03909216600160a060020a031992831617905560008054821633179055600180549091169055600280547fffffffffffff0000000000000000000000000000000000000000000000000000169055610b248061008a6000396000f3006080604052600436106100825763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630c1fe4b1811461008757806311a34f38146100c457806330ec0e2b146100ea5780633caed87614610117578063c0c772361461012c578063c6a725d814610146578063d4d7b19a14610163575b600080fd5b34801561009357600080fd5b5061009c610198565b60408051600160a060020a039094168452602084019290925282820152519081900360600190f35b3480156100d057600080fd5b506100e8600160a060020a03600435166024356101b2565b005b3480156100f657600080fd5b506100e8600160a060020a03600435811690602435811690604435166102df565b34801561012357600080fd5b506100e861050c565b34801561013857600080fd5b506100e860043515156107d6565b34801561015257600080fd5b506100e8600435602435151561090f565b34801561016f57600080fd5b50610184600160a060020a0360043516610a6c565b604080519115158252519081900360200190f35b600554600654600454600160a060020a0390921691909192565b6101bb33610a6c565b15156101c657600080fd5b600160a060020a038216158015906101de5750600081115b15156101e957600080fd5b444260405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106102405780518252601f199092019160209182019101610221565b51815160209384036101000a6000190180199092169116179052604080519290940182900382206004556005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038a16908117909155600688905587835293519395507fb95ffaa81426efefa7d563c9433955e5b5ea3e4b93f1ca6c84cf14e3d0ef12ee94509083900301919050a26102db600454600161090f565b5050565b60006102ea33610a6c565b15156102f557600080fd5b600160a060020a038416158015906103155750600160a060020a03831615155b80156103295750600160a060020a03821615155b151561033457600080fd5b82600160a060020a031684600160a060020a031614158015610368575081600160a060020a031684600160a060020a031614155b8015610386575081600160a060020a031683600160a060020a031614155b151561039157600080fd5b5060008054600160a060020a031615806103c5575060025474010000000000000000000000000000000000000000900460ff165b156103ce576001015b600154600160a060020a0316158061040157506002547501000000000000000000000000000000000000000000900460ff165b1561040a576001015b600254600160a060020a0316158061043e5750600254760100000000000000000000000000000000000000000000900460ff165b15610447576001015b600281101561045557600080fd5b60008054600160a060020a0380871673ffffffffffffffffffffffffffffffffffffffff1992831617909255600180548684169083161790556002805476ffffff0000000000000000000000000000000000000000199386169216919091179190911690556104c2610acf565b60025460015460008054604051600160a060020a039485169493841693909116917f0cca0f29597821abb3bc03f4807aa522fb1884ffa6f2dd209d9a4d52ef0ca45391a450505050565b600061051733610a6c565b151561052257600080fd5b600554600160a060020a03161580159061053e57506000600654115b151561054957600080fd5b60025477010000000000000000000000000000000000000000000000900460ff16801561059457506002547801000000000000000000000000000000000000000000000000900460ff165b80156105bf5750600254790100000000000000000000000000000000000000000000000000900460ff165b15156105ca57600080fd5b60025474010000000000000000000000000000000000000000900460ff1615801561061157506002547501000000000000000000000000000000000000000000900460ff16155b801561063a5750600254760100000000000000000000000000000000000000000000900460ff16155b151561064557600080fd5b50600354600654604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152306004820152602481019290925251600160a060020a0390921691829163095ea7b39160448083019260209291908290030181600087803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b505050506040513d60208110156106e157600080fd5b5050600554600654604080517f23b872dd000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a039384166024820152604481019290925251918316916323b872dd916064808201926020929091908290030181600087803b15801561075b57600080fd5b505af115801561076f573d6000803e3d6000fd5b505050506040513d602081101561078557600080fd5b50506005546006546040805191825251600160a060020a03909216917f1f50cd00b6a6fe3928bf4a5f2f23829e9a1c9396573b828b5fa14d95aae7e7759181900360200190a26107d3610acf565b50565b6107df33610a6c565b15156107ea57600080fd5b600054600160a060020a0316331415610837576002805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000831515021790555b600154600160a060020a0316331415610886576002805475ff00000000000000000000000000000000000000000019167501000000000000000000000000000000000000000000831515021790555b600254600160a060020a03163314156108d7576002805476ff000000000000000000000000000000000000000000001916760100000000000000000000000000000000000000000000831515021790555b60408051821515815290517f31abbf5798fa0d2e0a0d45ec7eb7967c9f9252b35020890693b9c3b6299688c29181900360200190a150565b61091833610a6c565b151561092357600080fd5b600454821461093157600080fd5b600054600160a060020a0316331415610984576002805477ff0000000000000000000000000000000000000000000000191677010000000000000000000000000000000000000000000000831515021790555b600154600160a060020a03163314156109d9576002805478ff00000000000000000000000000000000000000000000000019167801000000000000000000000000000000000000000000000000831515021790555b600254600160a060020a0316331415610a30576002805479ff000000000000000000000000000000000000000000000000001916790100000000000000000000000000000000000000000000000000831515021790555b604080518215158152905133917fbe872d8d7e791af9ab2af97f70f45244f4bd9810a7d81a4a6fc4b40b16731e1c919081900360200190a25050565b6000600160a060020a0382161515610a8657506000610aca565b600054600160a060020a0383811691161480610aaf5750600154600160a060020a038381169116145b80610ac75750600254600160a060020a038381169116145b90505b919050565b600060048190556005805473ffffffffffffffffffffffffffffffffffffffff191690556006555600a165627a7a723058207eaccf888c26843c45f8ab69b4626a083accdb8e961d6f3160968dd42f58081d0029000000000000000000000000bf68b3756f82b522588511da682dfd7e3bf34dee",
  "constructorArguments": "000000000000000000000000bf68b3756f82b522588511da682dfd7e3bf34dee"
}