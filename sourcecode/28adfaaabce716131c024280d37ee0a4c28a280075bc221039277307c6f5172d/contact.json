{
  "address": "0x5347bfbec9803c6850dfd55d797e9ecf8689b688",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Token",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-24\n*/\n\npragma solidity ^0.4.24;\n\ncontract ContractReceiver {\n     \n    struct TKN {\n        address sender;\n        uint value;\n        bytes data;\n        bytes4 sig;\n    }\n    \n    function tokenFallback(address _from, uint _value, bytes _data){\n      TKN memory tkn;\n      tkn.sender = _from;\n      tkn.value = _value;\n      tkn.data = _data;\n      uint32 u = uint32(_data[3]) + (uint32(_data[2]) << 8) + (uint32(_data[1]) << 16) + (uint32(_data[0]) << 24);\n      tkn.sig = bytes4(u); \n \n    }\n}\n\ncontract SafeMath {\n    uint256 constant public MAX_UINT256 =\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\n\n    function safeAdd(uint256 x, uint256 y) constant internal returns (uint256 z) {\n        if (x > MAX_UINT256 - y) throw;\n        return x + y;\n    }\n\n    function safeSub(uint256 x, uint256 y) constant internal returns (uint256 z) {\n        if (x < y) throw;\n        return x - y;\n    }\n\n    function safeMul(uint256 x, uint256 y) constant internal returns (uint256 z) {\n        if (y == 0) return 0;\n        if (x > MAX_UINT256 / y) throw;\n        return x * y;\n    }\n}\n\ncontract Token is SafeMath{\n\n  mapping(address => uint) balances;\n  \n  string public symbol = \"\";\n  string public name = \"\";\n  uint8 public decimals = 18;\n  uint256 public totalSupply = 0;\n  address owner = 0;\n  \n  event Transfer(address indexed from, address indexed to, uint value);\n  event TransferToCon(address indexed from, address indexed to, uint value, bytes indexed data);\n  \n  function Token(string _tokenName, string _tokenSymbol, uint256 _tokenSupply) {\n\t\towner = msg.sender;   \n\t\tsymbol = _tokenSymbol;\n\t\tname = _tokenName;\n\t\ttotalSupply = _tokenSupply * 1000000000000000000;\n\t\tbalances[owner] = totalSupply;\n    }\n\n  \n  function name() constant returns (string _name) {\n      return name;\n  }\n\n  function symbol() constant returns (string _symbol) {\n      return symbol;\n  }\n\n  function decimals() constant returns (uint8 _decimals) {\n      return decimals;\n  }\n\n  function totalSupply() constant returns (uint256 _totalSupply) {\n      return totalSupply;\n  }\n  \n  function transfer(address _to, uint _value, bytes _data) returns (bool success) {\n      \n    if(isContract(_to)) {\n        return transferToContract(_to, _value, _data);\n    }\n    else {\n        return transferToAddress(_to, _value);\n    }\n}\n  \n  function transfer(address _to, uint _value) returns (bool success) {\n      \n    bytes memory empty;\n    if(isContract(_to)) {\n        return transferToContract(_to, _value, empty);\n    }\n    else {\n        return transferToAddress(_to, _value);\n    }\n}\n\n  function isContract(address _addr) private returns (bool is_contract) {\n      uint length;\n\t  \n\t  if (balanceOf(_addr) >=0 )\n\t  \n      assembly {\n            length := extcodesize(_addr)\n        }\n        if(length>0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n  function transferToAddress(address _to, uint _value) private returns (bool success) {\n    if (balanceOf(msg.sender) < _value) throw;\n    balances[msg.sender] = safeSub(balanceOf(msg.sender), _value);\n    balances[_to] = safeAdd(balanceOf(_to), _value);\n    Transfer(msg.sender, _to, _value);\n    return true;\n  }\n  \n  function transferToContract(address _to, uint _value, bytes _data) private returns (bool success) {\n    if (balanceOf(msg.sender) < _value) throw;\n    balances[msg.sender] = safeSub(balanceOf(msg.sender), _value);\n    balances[_to] = safeAdd(balanceOf(_to), _value);\n    ContractReceiver reciever = ContractReceiver(_to);\n    reciever.tokenFallback(msg.sender, _value, _data);\n    TransferToCon(msg.sender, _to, _value, _data);\n    return true;\n}\n\n  function balanceOf(address _owner) constant returns (uint balance) {\n    return balances[_owner];\n  }\n  \n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT256\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_tokenSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransferToCon\",\"type\":\"event\"}]",
  "bytecode": "60a0604081905260006080819052610019916001916100fe565b50604080516020810191829052600090819052610038916002916100fe565b506003805460ff19166012179055600060045560058054600160a060020a031916905534801561006757600080fd5b506040516108b13803806108b183398101604090815281516020808401519284015160058054600160a060020a031916331790559284018051929094019392916100b791600191908501906100fe565b5082516100cb9060029060208601906100fe565b50670de0b6b3a7640000026004819055600554600160a060020a0316600090815260208190526040902055506101999050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013f57805160ff191683800117855561016c565b8280016001018555821561016c579182015b8281111561016c578251825591602001919060010190610151565b5061017892915061017c565b5090565b61019691905b808211156101785760008155600101610182565b90565b610709806101a86000396000f30060806040526004361061008d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461009257806318160ddd1461011c578063313ce5671461014357806333a581d21461016e57806370a082311461018357806395d89b41146101a4578063a9059cbb146101b9578063be45fd62146101f1575b600080fd5b34801561009e57600080fd5b506100a761025a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e15781810151838201526020016100c9565b50505050905090810190601f16801561010e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012857600080fd5b506101316102ed565b60408051918252519081900360200190f35b34801561014f57600080fd5b506101586102f3565b6040805160ff9092168252519081900360200190f35b34801561017a57600080fd5b506101316102fc565b34801561018f57600080fd5b50610131600160a060020a0360043516610302565b3480156101b057600080fd5b506100a761031d565b3480156101c557600080fd5b506101dd600160a060020a036004351660243561037d565b604080519115158252519081900360200190f35b3480156101fd57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101dd948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506103b29650505050505050565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156102e35780601f106102b8576101008083540402835291602001916102e3565b820191906000526020600020905b8154815290600101906020018083116102c657829003601f168201915b5050505050905090565b60045490565b60035460ff1690565b60001981565b600160a060020a031660009081526020819052604090205490565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156102e35780601f106102b8576101008083540402835291602001916102e3565b6000606061038a846103e5565b156103a15761039a848483610419565b91506103ab565b61039a8484610609565b5092915050565b60006103bd846103e5565b156103d4576103cd848484610419565b90506103de565b6103cd8484610609565b9392505050565b60008060006103f384610302565b106103fc5750813b5b600081111561040e5760019150610413565b600091505b50919050565b6000808361042633610302565b101561043157600080fd5b61044361043d33610302565b856106b0565b3360009081526020819052604090205561046561045f86610302565b856106c5565b600160a060020a0386166000818152602081815260408083209490945592517fc0ee0b8a0000000000000000000000000000000000000000000000000000000081523360048201818152602483018a90526060604484019081528951606485015289518c9850959663c0ee0b8a9693958c958c956084909101928601918190849084905b838110156105015781810151838201526020016104e9565b50505050905090810190601f16801561052e5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561054f57600080fd5b505af1158015610563573d6000803e3d6000fd5b50505050826040518082805190602001908083835b602083106105975780518252601f199092019160209182019101610578565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208a83529351939550600160a060020a038b16945033937f5998a692901c98bc4a7dd88a9aee1eb36464008fd7c594a1b5a70d41e664bf1a9350918290030190a4506001949350505050565b60008161061533610302565b101561062057600080fd5b61063261062c33610302565b836106b0565b3360009081526020819052604090205561065461064e84610302565b836106c5565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b6000818310156106bf57600080fd5b50900390565b600081600019038311156106d857600080fd5b5001905600a165627a7a72305820366b9a1add54da05f9de47ae02ee32392443b4a31d6991079d987a4b25a85d4c0029000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000000000000001054696d65746f636f696e20546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045454435400000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000000000000001054696d65746f636f696e20546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045454435400000000000000000000000000000000000000000000000000000000"
}