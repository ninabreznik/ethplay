{
  "address": "0x2153026c7f9059d4eb80060ac21cc1e0a544157d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MultiTransfer",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-14\n*/\n\npragma solidity ^0.4.16;\n\n\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n\n\n\n\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n\n\n\n\n\n\ncontract MultiTransfer is Ownable {\n    ERC20 public tkcAddress;\n\n    function MultiTransfer() public {\n\n    }\n\n    function setTKC(address tkc) public onlyOwner {\n        require(tkcAddress == address(0));\n        tkcAddress = ERC20(tkc);\n    }\n\n    function transfer(address[] to, uint[] value) public onlyOwner {\n        require(to.length == value.length);\n\n        for (uint i = 0; i < to.length; i++) {\n            tkcAddress.transferFrom(owner, to[i], value[i]);\n        }\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a031916331790556103e3806100326000396000f30060806040526004361061006c5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416637044ce7581146100715780638da5cb5b14610094578063c4b40fb7146100c5578063f2fde38b146100da578063ffc3a769146100fb575b600080fd5b34801561007d57600080fd5b50610092600160a060020a0360043516610189565b005b3480156100a057600080fd5b506100a96101e5565b60408051600160a060020a039092168252519081900360200190f35b3480156100d157600080fd5b506100a96101f4565b3480156100e657600080fd5b50610092600160a060020a0360043516610203565b34801561010757600080fd5b506040805160206004803580820135838102808601850190965280855261009295369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506102979650505050505050565b600054600160a060020a031633146101a057600080fd5b600154600160a060020a0316156101b657600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a031681565b600154600160a060020a031681565b600054600160a060020a0316331461021a57600080fd5b600160a060020a038116151561022f57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008054600160a060020a031633146102af57600080fd5b81518351146102bd57600080fd5b5060005b82518110156103b2576001546000548451600160a060020a03928316926323b872dd9216908690859081106102f257fe5b90602001906020020151858581518110151561030a57fe5b6020908102909101810151604080517c010000000000000000000000000000000000000000000000000000000063ffffffff8816028152600160a060020a03958616600482015293909416602484015260448301529151606480830193928290030181600087803b15801561037e57600080fd5b505af1158015610392573d6000803e3d6000fd5b505050506040513d60208110156103a857600080fd5b50506001016102c1565b5050505600a165627a7a7230582045294fcd226b2bca1e240eef7681de720b720c91ef0307e5972b933aae5364d00029"
}