{
  "address": "0x3be9ec670bd3d71d7b4a4f1fc8afc89fddad3710",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SuperEOS",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-30\n*/\n\npragma solidity ^0.4.16;\n\ncontract SuperEOS {\n    string public name = \"SuperEOS\";      \n    string public symbol = \"SPEOS\";              \n    uint8 public decimals = 6;                \n    uint256 public totalSupply;                \n\n    bool public lockAll = false;               \n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event FrozenFunds(address target, bool frozen);\n    event OwnerUpdate(address _prevOwner, address _newOwner);\n    address public owner;\n    address internal newOwner = 0x0;\n    mapping (address => bool) public frozens;\n    mapping (address => uint256) public balanceOf;\n\n    //---------init----------\n    function SuperEOS() public {\n        totalSupply = 2000000000 * 10 ** uint256(decimals);  \n        balanceOf[msg.sender] = totalSupply;                \n        owner = msg.sender;\n    }\n    //--------control--------\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n    function transferOwnership(address tOwner) onlyOwner public {\n        require(owner!=tOwner);\n        newOwner = tOwner;\n    }\n    function acceptOwnership() public {\n        require(msg.sender==newOwner && newOwner != 0x0);\n        owner = newOwner;\n        newOwner = 0x0;\n        emit OwnerUpdate(owner, newOwner);\n    }\n\n    function freezeAccount(address target, bool freeze) onlyOwner public {\n        frozens[target] = freeze;\n        emit FrozenFunds(target, freeze);\n    }\n\n    function freezeAll(bool lock) onlyOwner public {\n        lockAll = lock;\n    }\n\n    //-------transfer-------\n    function transfer(address _to, uint256 _value) public {\n        _transfer(msg.sender, _to, _value);\n    }\n    function _transfer(address _from, address _to, uint _value) internal {\n        require(!lockAll);\n        require(_to != 0x0);\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        require(!frozens[_from]); \n\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        emit Transfer(_from, _to, _value);\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n}",
  "bytecode": "60606040526040805190810160405280600881526020017f5375706572454f530000000000000000000000000000000000000000000000008152506000908051906020019061004f9291906101ce565b506040805190810160405280600581526020017f5350454f530000000000000000000000000000000000000000000000000000008152506001908051906020019061009b9291906101ce565b506006600260006101000a81548160ff021916908360ff1602179055506000600460006101000a81548160ff0219169083151502179055506000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561012057600080fd5b600260009054906101000a900460ff1660ff16600a0a637735940002600381905550600354600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610273565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020f57805160ff191683800117855561023d565b8280016001018555821561023d579182015b8281111561023c578251825591602001919060010190610221565b5b50905061024a919061024e565b5090565b61027091905b8082111561026c576000816000905550600101610254565b5090565b90565b610ea480620002836000396000f3006060604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100ca57806318160ddd14610158578063313ce567146101815780633f686170146101b057806370a08231146101d557806376e44ed81461022257806379ba50971461024f5780638da5cb5b1461026457806395d89b41146102b9578063a9059cbb14610347578063c8dbb68614610389578063e724529c146103da578063f2fde38b1461041e575b600080fd5b34156100d557600080fd5b6100dd610457565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011d578082015181840152602081019050610102565b50505050905090810190601f16801561014a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016357600080fd5b61016b6104f5565b6040518082815260200191505060405180910390f35b341561018c57600080fd5b6101946104fb565b604051808260ff1660ff16815260200191505060405180910390f35b34156101bb57600080fd5b6101d36004808035151590602001909190505061050e565b005b34156101e057600080fd5b61020c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610587565b6040518082815260200191505060405180910390f35b341561022d57600080fd5b61023561059f565b604051808215151515815260200191505060405180910390f35b341561025a57600080fd5b6102626105b2565b005b341561026f57600080fd5b6102776107d5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102c457600080fd5b6102cc6107fb565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561030c5780820151818401526020810190506102f1565b50505050905090810190601f1680156103395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561035257600080fd5b610387600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610899565b005b341561039457600080fd5b6103c0600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506108a8565b604051808215151515815260200191505060405180910390f35b34156103e557600080fd5b61041c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803515159060200190919050506108c8565b005b341561042957600080fd5b610455600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109ee565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104ed5780601f106104c2576101008083540402835291602001916104ed565b820191906000526020600020905b8154815290600101906020018083116104d057829003601f168201915b505050505081565b60035481565b600260009054906101000a900460ff1681565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561056a57600080fd5b80600460006101000a81548160ff02191690831515021790555050565b60076020528060005260406000206000915090505481565b600460009054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561064857506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b151561065357600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108915780601f1061086657610100808354040283529160200191610891565b820191906000526020600020905b81548152906001019060200180831161087457829003601f168201915b505050505081565b6108a4338383610aeb565b5050565b60066020528060005260406000206000915054906101000a900460ff1681565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092457600080fd5b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a58282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a15050565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a4a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610aa757600080fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600460009054906101000a900460ff16151515610b0957600080fd5b60008373ffffffffffffffffffffffffffffffffffffffff1614151515610b2f57600080fd5b81600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610b7d57600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110151515610c0c57600080fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610c6557600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401905081600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a380600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401141515610e7257fe5b505050505600a165627a7a7230582057c1dec5cdc1d473ae47e11640fb1ca388667c5a4a068fecdb3d9bf31ad9196f0029"
}