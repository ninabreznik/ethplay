{
  "address": "0x1f57b46f123c6c52943f863d9f12a39ecf7837d0",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Crowdsale",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-15\n*/\n\npragma solidity 0.4.25;\n/**\n * 外部调用外部代币。\n */\n interface token {\n    function transfer(address receiver, uint amount) external;\n}\n\n/**\n * 众筹合约\n */\ncontract Crowdsale {\n    address public beneficiary = msg.sender; //受益人地址，测试时为合约创建者\n    uint public fundingGoal;  //众筹目标，单位是ether\n    uint public amountRaised; //已筹集金额数量， 单位是ether\n    uint public deadline; //截止时间\n    uint public price;  //代币价格\n    token public tokenReward;   // 要卖的token\n    bool public fundingGoalReached = false;  //达成众筹目标\n    bool public crowdsaleClosed = false; //众筹关闭\n\n\n    mapping(address => uint256) public balance; //保存众筹地址及对应的以太币数量\n\n    // 受益人将众筹金额转走的通知\n    event GoalReached(address _beneficiary, uint _amountRaised);\n\n    // 用来记录众筹资金变动的通知，_isContribution表示是否是捐赠，因为有可能是捐赠者退出或发起者转移众筹资金\n    event FundTransfer(address _backer, uint _amount, bool _isContribution);\n\n    /**\n     * 初始化构造函数\n     *\n     * @param fundingGoalInEthers 众筹以太币总量\n     * @param durationInMinutes 众筹截止,单位是分钟\n     */\n    constructor(\n        uint fundingGoalInEthers,\n        uint durationInMinutes,\n        uint TokenCostOfEachether,\n        address addressOfTokenUsedAsReward\n    )  public {\n        fundingGoal = fundingGoalInEthers * 1 ether;\n        deadline = now + durationInMinutes * 1 minutes;\n        price = TokenCostOfEachether ; //1个以太币可以买几个代币\n        tokenReward = token(addressOfTokenUsedAsReward); \n    }\n\n\n    /**\n     * 默认函数\n     *\n     * 默认函数，可以向合约直接打款\n     */\n    function () payable public {\n\n        //判断是否关闭众筹\n        require(!crowdsaleClosed);\n        uint amount = msg.value;\n\n        //捐款人的金额累加\n        balance[msg.sender] += amount;\n\n        //捐款总额累加\n        amountRaised += amount;\n\n        //转帐操作，转多少代币给捐款人\n         tokenReward.transfer(msg.sender, amount * price);\n         emit FundTransfer(msg.sender, amount, true);\n    }\n\n    /**\n     * 判断是否已经过了众筹截止限期\n     */\n    modifier afterDeadline() { if (now >= deadline) _; }\n\n    /**\n     * 检测众筹目标是否已经达到\n     */\n    function checkGoalReached() afterDeadline public {\n        if (amountRaised >= fundingGoal){\n            //达成众筹目标\n            fundingGoalReached = true;\n          emit  GoalReached(beneficiary, amountRaised);\n        }\n\n        //关闭众筹\n        crowdsaleClosed = true;\n    }\n    function backtoken(uint backnum) public{\n        uint amount = backnum * 10 ** 18;\n        tokenReward.transfer(beneficiary, amount);\n       emit FundTransfer(beneficiary, amount, true);\n    }\n    \n    function backeth() public{\n        beneficiary.transfer(amountRaised);\n        emit FundTransfer(beneficiary, amountRaised, true);\n    }\n\n    /**\n     * 收回资金\n     *\n     * 检查是否达到了目标或时间限制，如果有，并且达到了资金目标，\n     * 将全部金额发送给受益人。如果没有达到目标，每个贡献者都可以退出\n     * 他们贡献的金额\n     * 注：这里代码应该是限制了众筹时间结束且众筹目标没有达成的情况下才允许退出。如果去掉限制条件afterDeadline，应该是可以允许众筹时间还未到且众筹目标没有达成的情况下退出\n     */\n    function safeWithdrawal() afterDeadline public {\n\n        //如果没有达成众筹目标\n        if (!fundingGoalReached) {\n            //获取合约调用者已捐款余额\n            uint amount = balance[msg.sender];\n\n            if (amount > 0) {\n                //返回合约发起者所有余额\n                beneficiary.transfer(amountRaised);\n                emit  FundTransfer(beneficiary, amount, false);\n                balance[msg.sender] = 0;\n            }\n        }\n\n        //如果达成众筹目标，并且合约调用者是受益人\n        if (fundingGoalReached && beneficiary == msg.sender) {\n\n            //将所有捐款从合约中给受益人\n            beneficiary.transfer(amountRaised);\n\n          emit  FundTransfer(beneficiary, amount, false);\n        }\n    }\n}",
  "bytecode": "608060405260008054600160a060020a031916331790556005805460a060020a61ffff021916905534801561003357600080fd5b5060405160808061084e8339810160409081528151602083015191830151606090930151670de0b6b3a7640000909102600155603c909102420160035560049190915560058054600160a060020a031916600160a060020a039092169190911790556107aa806100a46000396000f3006080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301cb3b2081146101c957806329dcb0cf146101e057806338af3eed146102075780636e66f6e9146102385780637a3a0e841461024d5780637b3e5e7b14610262578063a035b1fe14610277578063a10c26d61461028c578063ccb07cef146102a1578063d424f628146102ca578063e3d670d7146102df578063fd6b7ef814610300578063fdae662b14610315575b6005546000907501000000000000000000000000000000000000000000900460ff16156100f057600080fd5b503360008181526006602052604080822080543490810190915560028054820190556005546004805484517fa9059cbb00000000000000000000000000000000000000000000000000000000815291820196909652948202602486015291519093600160a060020a039092169263a9059cbb926044808201939182900301818387803b15801561017f57600080fd5b505af1158015610193573d6000803e3d6000fd5b50506040805133815260208101859052600181830152905160008051602061075f8339815191529350908190036060019150a150005b3480156101d557600080fd5b506101de61032d565b005b3480156101ec57600080fd5b506101f56103fc565b60408051918252519081900360200190f35b34801561021357600080fd5b5061021c610402565b60408051600160a060020a039092168252519081900360200190f35b34801561024457600080fd5b5061021c610411565b34801561025957600080fd5b506101f5610420565b34801561026e57600080fd5b506101f5610426565b34801561028357600080fd5b506101f561042c565b34801561029857600080fd5b506101de610432565b3480156102ad57600080fd5b506102b66104ae565b604080519115158252519081900360200190f35b3480156102d657600080fd5b506102b66104d0565b3480156102eb57600080fd5b506101f5600160a060020a03600435166104f1565b34801561030c57600080fd5b506101de610503565b34801561032157600080fd5b506101de60043561068c565b60035442106103fa57600154600254106103c2576005805474ff000000000000000000000000000000000000000019167401000000000000000000000000000000000000000017905560005460025460408051600160a060020a039093168352602083019190915280517fec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c859281900390910190a15b6005805475ff000000000000000000000000000000000000000000191675010000000000000000000000000000000000000000001790555b565b60035481565b600054600160a060020a031681565b600554600160a060020a031681565b60015481565b60025481565b60045481565b60008054600254604051600160a060020a039092169281156108fc029290818181858888f1935050505015801561046d573d6000803e3d6000fd5b5060005460025460408051600160a060020a03909316835260208301919091526001828201525160008051602061075f8339815191529181900360600190a1565b6005547501000000000000000000000000000000000000000000900460ff1681565b60055474010000000000000000000000000000000000000000900460ff1681565b60066020526000908152604090205481565b60035460009042106106895760055474010000000000000000000000000000000000000000900460ff1615156105d6575033600090815260066020526040812054908111156105d65760008054600254604051600160a060020a039092169281156108fc029290818181858888f19350505050158015610587573d6000803e3d6000fd5b506000805460408051600160a060020a0390921682526020820184905281810192909252905160008051602061075f8339815191529181900360600190a1336000908152600660205260408120555b60055474010000000000000000000000000000000000000000900460ff16801561060a5750600054600160a060020a031633145b156106895760008054600254604051600160a060020a039092169281156108fc029290818181858888f1935050505015801561064a573d6000803e3d6000fd5b506000805460408051600160a060020a0390921682526020820184905281810192909252905160008051602061075f8339815191529181900360600190a15b50565b60055460008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a039283166004820152670de0b6b3a764000086026024820181905291519194929092169263a9059cbb926044808201939182900301818387803b15801561070757600080fd5b505af115801561071b573d6000803e3d6000fd5b505060005460408051600160a060020a039092168252602082018590526001828201525160008051602061075f8339815191529350908190036060019150a150505600e842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6a165627a7a72305820446e59b6af5f9ced4ad796e27f1f1ec40de61c7c5bd2dafed42aab7c34d3a1ee00290000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000003b9ac9ff0000000000000000000000000000000000000000000000000000000000004e20000000000000000000000000770f030fdbf63ebf1c939de8bcff8943c2c2d454",
  "constructorArguments": "0000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000003b9ac9ff0000000000000000000000000000000000000000000000000000000000004e20000000000000000000000000770f030fdbf63ebf1c939de8bcff8943c2c2d454"
}