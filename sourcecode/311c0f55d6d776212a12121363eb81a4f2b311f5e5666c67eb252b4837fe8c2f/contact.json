{
  "address": "0xcca36039cfdd0753d3aa9f1b4bf35b606c8ed971",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenSale",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-18\n*/\n\npragma solidity 0.4.25;\n\n// File: contracts/SafeMath.sol\n\n// https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/math/SafeMath.sol\n\n// @title SafeMath: overflow/underflow checks\n// @notice Math operations with safety checks that throw on error\nlibrary SafeMath {\n\n  // @notice Multiplies two numbers, throws on overflow.\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  // @notice Integer division of two numbers, truncating the quotient.\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  // @notice Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  // @notice Adds two numbers, throws on overflow.\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n\n}\n\n// File: contracts/ERC20Interface.sol\n\n// ----------------------------------------------------------------------------\n// ERC Token Standard #20 Interface\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n// ----------------------------------------------------------------------------\ninterface ERC20Interface {\n    function totalSupply() external returns (uint);\n    function balanceOf(address tokenOwner) external returns (uint balance);\n    function allowance(address tokenOwner, address spender) external returns (uint remaining);\n    function transfer(address to, uint tokens) external returns (bool success);\n    function approve(address spender, uint tokens) external returns (bool success);\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    function burn(uint _amount) external returns (bool success);\n    function burnFrom(address _from, uint _amount) external returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n    event LogBurn(address indexed _spender, uint256 _value);\n}\n\n// File: contracts/TokenSale.sol\n\n// @title MyBit Tokensale\n// @notice A tokensale extending for 365 days. (0....364)\n// @notice 100,000 MYB are releases everyday and split proportionaly to funders of that day\n// @notice Anyone can fund the current or future days with ETH\n// @dev The current day is (timestamp - startTimestamp) / 24 hours\n// @author Kyle Dewhurst, MyBit Foundation\ncontract TokenSale {\n  using SafeMath for *;\n\n  ERC20Interface mybToken;\n\n  struct Day {\n    uint totalWeiContributed;\n    mapping (address => uint) weiContributed;\n  }\n\n  // Constants\n  uint256 constant internal scalingFactor = 10**32;      // helps avoid rounding errors\n  uint256 constant public tokensPerDay = 10**23;    // 100,000 MYB\n\n  // MyBit addresses\n  address public owner;\n  address public mybitFoundation;\n  address public developmentFund;\n\n  uint256 public start;      // The timestamp when sale starts\n\n  mapping (uint16 => Day) public day;\n\n  constructor(address _mybToken, address _mybFoundation, address _developmentFund)\n  public {\n    mybToken = ERC20Interface(_mybToken);\n    developmentFund = _developmentFund;\n    mybitFoundation = _mybFoundation;\n    owner = msg.sender;\n  }\n\n  // @notice owner can start the sale by transferring in required amount of MYB\n  // @dev the start time is used to determine which day the sale is on (day 0 = first day)\n  function startSale(uint _timestamp)\n  external\n  onlyOwner\n  returns (bool){\n    require(start == 0, 'Already started');\n    require(_timestamp >= now  && _timestamp.sub(now) < 2592000, 'Start time not in range');\n    uint saleAmount = tokensPerDay.mul(365);\n    require(mybToken.transferFrom(msg.sender, address(this), saleAmount));\n    start = _timestamp;\n    emit LogSaleStarted(msg.sender, mybitFoundation, developmentFund, saleAmount, _timestamp);\n    return true;\n  }\n\n\n  // @notice contributor can contribute wei to sale on any current/future _day\n  // @dev only accepts contributions between days 0 - 364\n  function fund(uint16 _day)\n  payable\n  public\n  returns (bool) {\n      require(addContribution(msg.sender, msg.value, _day));\n      return true;\n  }\n\n  // @notice Send an index of days and your payment will be divided equally among them\n  // @dev WEI sent must divide equally into number of days.\n  function batchFund(uint16[] _day)\n  payable\n  external\n  returns (bool) {\n    require(_day.length <= 50);       // Limit to 50 days to avoid exceeding blocklimit\n    require(msg.value >= _day.length);   // need at least 1 wei per day\n    uint256 amountPerDay = msg.value.div(_day.length);\n    assert (amountPerDay.mul(_day.length) == msg.value);   // Don't allow any rounding error\n    for (uint8 i = 0; i < _day.length; i++){\n      require(addContribution(msg.sender, amountPerDay, _day[i]));\n    }\n    return true;\n  }\n\n\n  // @notice Updates claimableTokens, sends all wei to the token holder\n  function withdraw(uint16 _day)\n  external\n  returns (bool) {\n      require(dayFinished(_day), \"day has not finished funding\");\n      Day storage thisDay = day[_day];\n      uint256 amount = getTokensOwed(msg.sender, _day);\n      delete thisDay.weiContributed[msg.sender];\n      mybToken.transfer(msg.sender, amount);\n      emit LogTokensCollected(msg.sender, amount, _day);\n      return true;\n  }\n\n  // @notice Updates claimableTokens, sends all tokens to contributor from previous days\n  // @param (uint16[]) _day, list of token sale days msg.sender contributed wei towards\n  function batchWithdraw(uint16[] _day)\n  external\n  returns (bool) {\n    uint256 amount;\n    require(_day.length <= 50);     // Limit to 50 days to avoid exceeding blocklimit\n    for (uint8 i = 0; i < _day.length; i++){\n      require(dayFinished(_day[i]));\n      uint256 amountToAdd = getTokensOwed(msg.sender, _day[i]);\n      amount = amount.add(amountToAdd);\n      delete day[_day[i]].weiContributed[msg.sender];\n      emit LogTokensCollected(msg.sender, amountToAdd, _day[i]);\n    }\n    mybToken.transfer(msg.sender, amount);\n    return true;\n  }\n\n  // @notice owner can withdraw funds to the foundation wallet and ddf wallet\n  // @param (uint) _amount, The amount of wei to withdraw\n  // @dev must put in an _amount equally divisible by 2\n  function foundationWithdraw(uint _amount)\n  external\n  onlyOwner\n  returns (bool){\n    uint256 half = _amount.div(2);\n    assert (half.mul(2) == _amount);   // check for rounding error\n    mybitFoundation.transfer(half);\n    developmentFund.transfer(half);\n    emit LogFoundationWithdraw(msg.sender, _amount, dayFor(now));\n    return true;\n  }\n\n  // @notice updates ledger with the contribution from _investor\n  // @param (address) _investor: The sender of WEI to the contract\n  // @param (uint) _amount: The amount of WEI to add to _day\n  // @param (uint16) _day: The day to fund\n  function addContribution(address _investor, uint _amount, uint16 _day)\n  internal\n  returns (bool) {\n    require(_amount > 0, \"must send ether with the call\");\n    require(duringSale(_day), \"day is not during the sale\");\n    require(!dayFinished(_day), \"day has already finished\");\n    Day storage today = day[_day];\n    today.totalWeiContributed = today.totalWeiContributed.add(_amount);\n    today.weiContributed[_investor] = today.weiContributed[_investor].add(_amount);\n    emit LogTokensPurchased(_investor, _amount, _day);\n    return true;\n  }\n\n  // @notice Calculates how many tokens user is owed. (userContribution / totalContribution) * tokensPerDay\n  function getTokensOwed(address _contributor, uint16 _day)\n  public\n  view\n  returns (uint256) {\n      require(dayFinished(_day));\n      Day storage thisDay = day[_day];\n      uint256 percentage = thisDay.weiContributed[_contributor].mul(scalingFactor).div(thisDay.totalWeiContributed);\n      return percentage.mul(tokensPerDay).div(scalingFactor);\n  }\n\n  // @notice gets the total amount of mybit owed to the contributor\n  // @dev this function doesn't check for duplicate days. Output may not reflect actual amount owed if this happens.\n  function getTotalTokensOwed(address _contributor, uint16[] _days)\n  public\n  view\n  returns (uint256 amount) {\n    require(_days.length < 100);          // Limit to 100 days to avoid exceeding block gas limit\n    for (uint16 i = 0; i < _days.length; i++){\n      amount = amount.add(getTokensOwed(_contributor, _days[i]));\n    }\n    return amount;\n  }\n\n  // @notice returns the amount of wei contributed by _contributor on _day\n  function getWeiContributed(uint16 _day, address _contributor)\n  public\n  view\n  returns (uint256) {\n    return day[_day].weiContributed[_contributor];\n  }\n\n  // @notice returns amount of wei contributed on _day\n  // @dev if _day is outside of tokensale range it will return 0\n  function getTotalWeiContributed(uint16 _day)\n  public\n  view\n  returns (uint256) {\n    return day[_day].totalWeiContributed;\n  }\n\n  // @notice return the day associated with this timestamp\n  function dayFor(uint _timestamp)\n  public\n  view\n  returns (uint16) {\n      require(_timestamp >= start);\n      return uint16(_timestamp.sub(start).div(86400));\n  }\n\n  // @notice returns true if _day is finished\n  function dayFinished(uint16 _day)\n  public\n  view\n  returns (bool) {\n    if (now <= start) { return false; }   // hasn't yet reached first day, so cannot be finished\n    return dayFor(now) > _day;\n  }\n\n  // @notice reverts if the current day isn't less than 365\n  function duringSale(uint16 _day)\n  public\n  view\n  returns (bool){\n    return start > 0 && _day <= uint16(364);\n  }\n\n\n  // @notice return the current day\n  function currentDay()\n  public\n  view\n  returns (uint16) {\n    return dayFor(now);\n  }\n\n  // @notice Fallback function: Purchases contributor stake in the tokens for the current day\n  // @dev rejects contributions by means of the fallback function until timestamp > start\n  function ()\n  external\n  payable {\n      require(addContribution(msg.sender, msg.value, currentDay()));\n  }\n\n  // @notice only owner address can call\n  modifier onlyOwner {\n    require(msg.sender == owner);\n    _;\n  }\n\n  event LogSaleStarted(address _owner, address _mybFoundation, address _developmentFund, uint _totalMYB, uint _startTime);\n  event LogFoundationWithdraw(address _mybFoundation, uint _amount, uint16 _day);\n  event LogTokensPurchased(address indexed _contributor, uint _amount, uint16 indexed _day);\n  event LogTokensCollected(address indexed _contributor, uint _amount, uint16 indexed _day);\n\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"startSale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint16\"}],\"name\":\"getTotalWeiContributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint16[]\"}],\"name\":\"batchWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint16[]\"}],\"name\":\"batchFund\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"},{\"name\":\"_days\",\"type\":\"uint16[]\"}],\"name\":\"getTotalTokensOwed\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"},{\"name\":\"_day\",\"type\":\"uint16\"}],\"name\":\"getTokensOwed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint16\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint16\"}],\"name\":\"duringSale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mybitFoundation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"developmentFund\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint16\"}],\"name\":\"dayFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"day\",\"outputs\":[{\"name\":\"totalWeiContributed\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint16\"}],\"name\":\"fund\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"foundationWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint16\"},{\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getWeiContributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"dayFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_mybToken\",\"type\":\"address\"},{\"name\":\"_mybFoundation\",\"type\":\"address\"},{\"name\":\"_developmentFund\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_mybFoundation\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_developmentFund\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_totalMYB\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"LogSaleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_mybFoundation\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_day\",\"type\":\"uint16\"}],\"name\":\"LogFoundationWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_day\",\"type\":\"uint16\"}],\"name\":\"LogTokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_day\",\"type\":\"uint16\"}],\"name\":\"LogTokensCollected\",\"type\":\"event\"}]",
  "bytecode": "",
  "constructorArguments": "0000000000000000000000005d60d8d7ef6d37e16ebabc324de3be57f135e0bc000000000000000000000000d9d2b28e09921a38ad7ab1b4138357408bda8ebd000000000000000000000000fd1e4b568bb3bcf706b0bac5960d4b91bacff96f"
}