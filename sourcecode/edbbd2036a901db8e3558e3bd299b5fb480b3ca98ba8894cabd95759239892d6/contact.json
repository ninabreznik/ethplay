{
  "address": "0x1040613788e99c1606bd133db0ed7f7dbdf0cc80",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SmartyEther",
  "compilerVersion": "v0.4.11+commit.68ef5810",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-10-19\n*/\n\npragma solidity ^ 0.4 .9;\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal constant returns(uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal constant returns(uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal constant returns(uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal constant returns(uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\ncontract SmartyEther {\n    using SafeMath\n    for uint256;\n    mapping(address => mapping(address => uint256)) allowed;\n    mapping(address => uint256) balances;\n    uint256 public totalSupply;\n    uint256 public decimals;\n    address public owner;\n    bytes32 public symbol;\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed _owner, address indexed spender, uint256 value);\n\n    function SmartyEther() {\n        totalSupply = 1000000000;\n        symbol = 'STH';\n        owner = 0x11606e7d782775b7dd5500c0828f7b3b8fc44984;\n        balances[owner] = totalSupply;\n        decimals = 0;\n    }\n\n    function balanceOf(address _owner) constant returns(uint256 balance) {\n        return balances[_owner];\n    }\n\n    function allowance(address _owner, address _spender) constant returns(uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    function transfer(address _to, uint256 _value) returns(bool) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) returns(bool) {\n        var _allowance = allowed[_from][msg.sender];\n        balances[_to] = balances[_to].add(_value);\n        balances[_from] = balances[_from].sub(_value);\n        allowed[_from][msg.sender] = _allowance.sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) returns(bool) {\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function() {\n        revert();\n    }\n}",
  "bytecode": "6060604052341561000c57fe5b5b633b9aca0060028190557f535448000000000000000000000000000000000000000000000000000000000060055560048054600160a060020a0319167311606e7d782775b7dd5500c0828f7b3b8fc449841790819055600160a060020a03166000908152600160205260408120919091556003555b5b610579806100926000396000f300606060405236156100965763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100ac57806318160ddd146100df57806323b872dd14610101578063313ce5671461013a57806370a082311461015c5780638da5cb5b1461018a57806395d89b41146101b6578063a9059cbb146101d8578063dd62ed3e1461020b575b341561009e57fe5b6100aa5b60006000fd5b565b005b34156100b457fe5b6100cb600160a060020a036004351660243561023f565b604080519115158252519081900360200190f35b34156100e757fe5b6100ef6102e0565b60408051918252519081900360200190f35b341561010957fe5b6100cb600160a060020a03600435811690602435166044356102e6565b604080519115158252519081900360200190f35b341561014257fe5b6100ef6103f7565b60408051918252519081900360200190f35b341561016457fe5b6100ef600160a060020a03600435166103fd565b60408051918252519081900360200190f35b341561019257fe5b61019a61041c565b60408051600160a060020a039092168252519081900360200190f35b34156101be57fe5b6100ef61042b565b60408051918252519081900360200190f35b34156101e057fe5b6100cb600160a060020a0360043516602435610431565b604080519115158252519081900360200190f35b341561021357fe5b6100ef600160a060020a03600435811690602435166104f1565b60408051918252519081900360200190f35b600081158061026f5750600160a060020a0333811660009081526020818152604080832093871683529290522054155b151561027b5760006000fd5b600160a060020a0333811660008181526020818152604080832094881680845294825291829020869055815186815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060015b92915050565b60025481565b600160a060020a0380841660009081526020818152604080832033851684528252808320549386168352600190915281205490919061032b908463ffffffff61051c16565b600160a060020a038086166000908152600160205260408082209390935590871681522054610360908463ffffffff61053616565b600160a060020a038616600090815260016020526040902055610389818463ffffffff61053616565b600160a060020a03808716600081815260208181526040808320338616845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3600191505b509392505050565b60035481565b600160a060020a0381166000908152600160205260409020545b919050565b600454600160a060020a031681565b60055481565b600160a060020a03331660009081526001602052604081205461045a908363ffffffff61053616565b600160a060020a03338116600090815260016020526040808220939093559085168152205461048f908363ffffffff61051c16565b600160a060020a038085166000818152600160209081526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060015b92915050565b600160a060020a03808316600090815260208181526040808320938516835292905220545b92915050565b60008282018381101561052b57fe5b8091505b5092915050565b60008282111561054257fe5b508082035b929150505600a165627a7a72305820c74a405b67cb19603cfa4aa0ccbe568cc1bec75375d539422f89d0a8a9971aeb0029"
}