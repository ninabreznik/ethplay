{
  "address": "0x28a7a4115df6a31b7a19de9ec20268357484b532",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ForwarderTarget",
  "compilerVersion": "v0.4.11+commit.68ef5810",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-06-06\n*/\n\n/**\n *Submitted for verification at Etherscan.io on 2018-12-11\n*/\n\npragma solidity ^0.4.11;\n/**\n * Contract that exposes the needed erc20 token functions\n */\n\ncontract ERC20Interface {\n  // Send _value amount of tokens to address _to\n  function transfer(address _to, uint256 _value) public returns (bool success);\n  // Get the account balance of another account with address _owner\n  function balanceOf(address _owner) public constant returns (uint256 balance);\n}\n/**\n * Contract that will forward any incoming Ether to the creator of the contract\n */\ncontract Forwarder {\n  // Address to which any funds sent to this contract will be forwarded\n  address public parentAddress;\n  event ForwarderDeposited(address from, uint value, bytes data);\n\n  /**\n   * Create the contract, and sets the destination address to that of the creator\n   */\n  function Forwarder(address pool) public {\n    parentAddress = 0x7cdB2Ce858ACe1d9eE41E1C5b12D581075055B2B;\n  }\n \n  /**\n   * Modifier that will execute internal code block only if the sender is the parent address\n   */\n  modifier onlyParent {\n    if (msg.sender != parentAddress) {\n      revert();\n    }\n    _;\n  }\n\n  /**\n   * Default function; Gets called when Ether is deposited, and forwards it to the parent address\n   */\n  function() public payable {\n    // throws on failure\n    parentAddress.transfer(msg.value);\n    // Fire off the deposited event if we can forward it\n    ForwarderDeposited(msg.sender, msg.value, msg.data);\n  }\n\n  /**\n   * Execute a token transfer of the full balance from the forwarder token to the parent address\n   * @param tokenContractAddress the address of the erc20 token contract\n   */\n  function flushTokens(address tokenContractAddress) public {\n    ERC20Interface instance = ERC20Interface(tokenContractAddress);\n    var forwarderAddress = address(this);\n    var forwarderBalance = instance.balanceOf(forwarderAddress);\n    if (forwarderBalance == 0) {\n      return;\n    }\n    if (!instance.transfer(parentAddress, forwarderBalance)) {\n      revert();\n    }\n  }\n\n  /**\n   * It is possible that funds were sent to this address before the contract was deployed.\n   * We can flush those funds to the parent address.\n   */\n  function flush() public {\n    // throws on failure\n    parentAddress.transfer(this.balance);\n  }\n}\n\n// This is a test target for a Forwarder.\n// It contains a public function with a side-effect.\ncontract ForwarderTarget {\n  uint public data;\n\n  function ForwarderTarget() public {\n  }\n\n  function createForwarder(address pool) public returns (address) {\n    return new Forwarder(pool);\n  }\n\n  function() public payable {\n    // accept unspendable balance\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"createForwarder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]",
  "bytecode": "6060604052341561000c57fe5b5b5b5b61069b8061001e6000396000f3006060604052361561004a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806373d4a13a146100535780639193ba0b14610079575b6100515b5b565b005b341561005b57fe5b6100636100ef565b6040518082815260200191505060405180910390f35b341561008157fe5b6100ad600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100f5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60005481565b600081610100610151565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080151561014957fe5b90505b919050565b60405161050e806101628339019056006060604052341561000c57fe5b60405160208061050e833981016040528080519060200190919050505b737cdb2ce858ace1d9ee41e1c5b12d581075055b2b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505b61047e806100906000396000f30060606040523615610054576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062821de31461014d5780633ef133671461019f5780636b9f96ea146101d5575b61014b5b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156100ba57fe5b7f69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b3334600036604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200180602001828103825284848281815260200192508082843782019150509550505050505060405180910390a15b565b005b341561015557fe5b61015d6101e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101a757fe5b6101d3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061020d565b005b34156101dd57fe5b6101e56103d6565b005b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600060008392503091508273ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156102b957fe5b6102c65a03f115156102c757fe5b50505060405180519050905060008114156102e1576103d0565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156103ab57fe5b6102c65a03f115156103b957fe5b5050506040518051905015156103cf5760006000fd5b5b50505050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050151561044f57fe5b5b5600a165627a7a72305820c5986c87a14ded03de8126292f24b638fad13ed7562af79322f8aa7ae94306de0029a165627a7a723058204536f3c4758979751a5c044de9205270517f02373232d954aa9405e9ca0bc2190029"
}