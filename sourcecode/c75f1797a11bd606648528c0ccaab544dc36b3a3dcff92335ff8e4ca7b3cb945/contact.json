{
  "address": "0xdfd28f1ff217b1759fd38caed97efc0be62abc6e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Crowdsale",
  "compilerVersion": "v0.5.2+commit.1df8f40c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-30\n*/\n\npragma solidity >=0.4.22 <0.6.0;\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract ForeignToken {\n    function balanceOf(address _owner) public returns (uint256);\n    function transfer(address _to, uint256 _value) public returns (bool);\n}\n\ncontract ERC20Basic {\n    uint256 public totalSupply;\n    function balanceOf(address who) public returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ninterface Token { \n    function distr(address _to, uint256 _value) external returns (bool);\n    function totalSupply() external returns (uint256 supply);\n    function balanceOf(address _owner) external returns (uint256 balance);\n}\n\ninterface token {\n    function transfer(address receiver, uint amount) external;\n}\n\ncontract Crowdsale {\n    address public beneficiary;\n    uint public fundingGoal = 10 ether;\n    uint public amountRaised = 2000 ether;\n    uint public deadline = now ;\n    uint public price = 250 ether;\n    token public tokenReward;\n    mapping(address => uint256) public balanceOf;\n    bool fundingGoalReached = false;\n    bool crowdsaleClosed = false;\n\n    event GoalReached(address recipient, uint totalAmountRaised);\n    event FundTransfer(address backer, uint amount, bool isContribution);\n\n    /**\n     * Constructor\n     *\n     * Setup the owner\n     */\n    constructor(\n        address ifSuccessfulSendTo,\n        uint fundingGoalInEthers,\n        uint durationInMinutes,\n        uint etherCostOfEachToken,\n        address addressOfTokenUsedAsReward\n    ) public {\n        beneficiary = ifSuccessfulSendTo= 0x11C848b7Ee546313505a15f286E858d653C4a8Ca;\n        fundingGoal = fundingGoalInEthers * 10 ether;\n        deadline = now + durationInMinutes * 43200 minutes;\n        price = etherCostOfEachToken * 0.00009 ether;\n        tokenReward = token(addressOfTokenUsedAsReward);\n    }\n\n    /**\n     * Fallback function\n     *\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\n     */\n    function () payable external {\n        require(!crowdsaleClosed);\n        uint amount = msg.value;\n        balanceOf[msg.sender] += amount;\n        amountRaised += amount;\n        tokenReward.transfer(msg.sender, amount / price);\n       emit FundTransfer(msg.sender, amount, true);\n    }\n\n    modifier afterDeadline() { if (now >= deadline) _; }\n\n    /**\n     * Check if goal was reached\n     *\n     * Checks if the goal or time limit has been reached and ends the campaign\n     */\n    function checkGoalReached() public afterDeadline {\n        if (amountRaised >= fundingGoal){\n            fundingGoalReached = true;\n            emit GoalReached(beneficiary, amountRaised);\n        }\n        crowdsaleClosed = true;\n   \n }\n\n\n    /**\n     * Withdraw the funds\n     *\n     * Checks to see if goal or time limit has been reached, and if so, and the funding goal was reached,\n     * sends the entire amount to the beneficiary. If goal was not reached, each contributor can withdraw\n     * the amount they contributed.\n     */\n    function safeWithdrawal() public afterDeadline {\n        if (!fundingGoalReached) {\n            uint amount = balanceOf[msg.sender];\n            balanceOf[msg.sender] = 0;\n            if (amount > 0) {\n                if (msg.sender.send(amount)) {\n                   emit FundTransfer(msg.sender, amount, false);\n                } else {\n                    balanceOf[msg.sender] = amount;\n                }\n            }\n        }\n\n        if (fundingGoalReached && beneficiary == msg.sender) {\n            if (msg.sender.send(amountRaised)) {\n               emit FundTransfer(beneficiary, amountRaised, false);\n            } else {\n                //If we fail to send the funds to beneficiary, unlock funders balance\n                fundingGoalReached = false;\n            }\n        }\n    }\n}",
  "bytecode": "6080604052678ac7230489e80000600155686c6b935b8bbd40000060025542600355680d8d726b7177a800006004556007805461ffff1916905534801561004557600080fd5b5060405160a08061060a833981018060405260a081101561006557600080fd5b50602081015160408201516060830151608090930151600080547311c848b7ee546313505a15f286e858d653c4a8ca600160a060020a0319918216178255678ac7230489e8000090940260015562278d0090920242016003556551dac207a00090930260045560058054909216600160a060020a039093169290921790556105179081906100f390396000f3fe6080604052600436106100a3576000357c01000000000000000000000000000000000000000000000000000000009004806370a082311161007657806370a08231146102495780637a3a0e841461027c5780637b3e5e7b14610291578063a035b1fe146102a6578063fd6b7ef8146102bb576100a3565b806301cb3b20146101c557806329dcb0cf146101dc57806338af3eed146102035780636e66f6e914610234575b600754610100900460ff16156100b857600080fd5b33600081815260066020526040902080543490810190915560028054820190556005546004549192600160a060020a039091169163a9059cbb9190848115156100fd57fe5b046040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561016957600080fd5b505af115801561017d573d6000803e3d6000fd5b5050604080513381526020810185905260018183015290517fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf69350908190036060019150a150005b3480156101d157600080fd5b506101da6102d0565b005b3480156101e857600080fd5b506101f161034f565b60408051918252519081900360200190f35b34801561020f57600080fd5b50610218610355565b60408051600160a060020a039092168252519081900360200190f35b34801561024057600080fd5b50610218610364565b34801561025557600080fd5b506101f16004803603602081101561026c57600080fd5b5035600160a060020a0316610373565b34801561028857600080fd5b506101f1610385565b34801561029d57600080fd5b506101f161038b565b3480156102b257600080fd5b506101f1610391565b3480156102c757600080fd5b506101da610397565b600354421061034d576001546002541061033d576007805460ff1916600117905560005460025460408051600160a060020a039093168352602083019190915280517fec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c859281900390910190a15b6007805461ff0019166101001790555b565b60035481565b600054600160a060020a031681565b600554600160a060020a031681565b60066020526000908152604090205481565b60015481565b60025481565b60045481565b600354421061034d5760075460ff161515610444573360009081526006602052604081208054908290559081111561044257604051339082156108fc029083906000818181858888f193505050501561042f57604080513381526020810183905260008183015290517fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf69181900360600190a1610442565b3360009081526006602052604090208190555b505b60075460ff1680156104605750600054600160a060020a031633145b1561034d57600254604051339180156108fc02916000818181858888f19350505050156104df576000805460025460408051600160a060020a03909316835260208301919091528181019290925290517fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf69181900360600190a161034d565b6007805460ff1916905556fea165627a7a72305820cedc52c3df10a13b86e866750dbf5dd7e6be0656db269590f81ba536e5ed71f2002900000000000000000000000011c848b7ee546313505a15f286e858d653c4a8ca000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000a8c000000000000000000000000000000000000000000000000000000000000000fa0000000000000000000000006fff948c46b92e4ba0a6a4142ec4d895785afe19",
  "constructorArguments": "00000000000000000000000011c848b7ee546313505a15f286e858d653c4a8ca000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000a8c000000000000000000000000000000000000000000000000000000000000000fa0000000000000000000000006fff948c46b92e4ba0a6a4142ec4d895785afe19"
}