{
  "address": "0x6a15488ef88d399cd1ac1823ef3e61e2ff215f87",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenSender",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-05\n*/\n\npragma solidity ^0.4.24;\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public constant returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public constant returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract TokenSender {\n\n    event TransferFail(uint256 index, address receiver, uint256 amount);\n\n    function bulkTransfer(address[] receivers, uint256[] amounts, address token) external {\n        address sender = msg.sender;\n        uint256 length = receivers.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (!ERC20(token).transferFrom(sender, receivers[i], amounts[i])) {\n                emit TransferFail(i, receivers[i], amounts[i]);\n                return;\n            }\n        }\n    }\n\n    function bulkTransferEther(address[] receivers, uint256[] amounts) external payable {\n        uint256 length = receivers.length;\n        uint256 totalSend = 0;\n        for (uint256 i = 0; i < length; i++){\n            if (!receivers[i].send(amounts[i])) {\n                emit TransferFail(i, receivers[i], amounts[i]);\n                return;\n            }\n            totalSend += amounts[i];\n        }\n        uint256 balances = msg.value - totalSend;\n        if (balances > 0) {\n            msg.sender.transfer(balances);\n        }\n        require(this.balance == 0);\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b5061056e806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806389ef829214610051578063b27d31de146100c4575b600080fd5b34801561005d57600080fd5b506100c2600480360381019080803590602001908201803590602001919091929391929390803590602001908201803590602001919091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061010a565b005b610108600480360381019080803590602001908201803590602001919091929391929390803590602001908201803590602001919091929391929390505050610349565b005b6000806000339250878790509150600090505b8181101561033e578373ffffffffffffffffffffffffffffffffffffffff166323b872dd848a8a85818110151561015057fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16898986818110151561017b57fe5b905060200201356040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561023a57600080fd5b505af115801561024e573d6000803e3d6000fd5b505050506040513d602081101561026457600080fd5b81019080805190602001909291905050501515610331577f8dea9da24aaf860268e78f1cf8c3f27081bd5f1a1843f3d6be6ee08806db4b0f8189898481811015156102ab57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1688888581811015156102d657fe5b90506020020135604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a161033f565b808060010191505061011d565b5b5050505050505050565b60008060008087879050935060009250600091505b838210156104bb57878783818110151561037457fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc87878581811015156103b857fe5b905060200201359081150290604051600060405180830381858888f193505050501515610495577f8dea9da24aaf860268e78f1cf8c3f27081bd5f1a1843f3d6be6ee08806db4b0f82898985818110151561040f57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16888886818110151561043a57fe5b90506020020135604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1610538565b85858381811015156104a357fe5b9050602002013583019250818060010192505061035e565b82340390506000811115610511573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561050f573d6000803e3d6000fd5b505b60003073ffffffffffffffffffffffffffffffffffffffff163114151561053757600080fd5b5b50505050505050505600a165627a7a723058205189806fe34531db20de3d49ee0ce88d7717b85e103b0403ae1b0c6348e91d1c0029"
}