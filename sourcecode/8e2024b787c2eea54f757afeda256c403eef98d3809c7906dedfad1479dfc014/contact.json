{
  "address": "0x10dc623fcb8a3c151875f03d442103cbf6469be6",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DeBiToken",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-04-13\n*/\n\npragma solidity ^0.4.21;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title owned\n * @dev The owned contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract owned {\n    address public owner;\n\n    function owned() public {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) onlyOwner public {\n        owner = newOwner;\n    }\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken.\n */\ncontract BasicToken {\n    using SafeMath for uint256;\n    \n    uint256       _supply;\n    mapping (address => uint256)    _balances;\n    \n    event Transfer( address indexed from, address indexed to, uint256 value);\n\n    function BasicToken() public {    }\n    \n    function totalSupply() public view returns (uint256) {\n        return _supply;\n    }\n    function balanceOf(address _owner) public view returns (uint256) {\n        return _balances[_owner];\n    }\n    \n    /**\n     * @dev transfer token for a specified address\n     * @param _to The address to transfer to.\n     * @param _value The amount to be transferred.\n     */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_balances[msg.sender] >= _value);\n        \n        _balances[msg.sender] =_balances[msg.sender].sub(_value);\n        _balances[_to] =_balances[_to].add(_value);\n        \n        emit Transfer(msg.sender, _to, _value);\n        \n        return true;\n    }\n  \n}\n\ncontract DeBiToken is BasicToken,owned {\n    string  constant public symbol = \"DB\";\n    string  constant public name = \"Digital Block\";\n    uint256 constant public decimals =6; \n    uint256 public lockedCounts = 8*(10**8)*(10**6);\n    uint256 public eachUnlockCounts = 2*(10**8)*(10**6);\n    //crowdSale end time, May/10/2018\n    uint256 public startTime = 1525881600;\n\n    struct LockStruct {\n        uint256 unlockTime;\n        bool locked;\n    }\n\n    LockStruct[] public unlockTimeMap;\n\n    function DeBiToken() public {\n        _supply =50*(10**8)*(10**6);\n        _balances[0x01] = lockedCounts;\n         _balances[msg.sender] =_supply.sub(lockedCounts);\n\n        // November/10/2018\n        unlockTimeMap.push(LockStruct({unlockTime:1541779200, locked: true})); \n        // May/10/2019\n        unlockTimeMap.push(LockStruct({unlockTime:1557417600, locked: true})); \n        // November/10/2019\n        unlockTimeMap.push(LockStruct({unlockTime:1573315200, locked: true})); \n        // May/10/2020\n        unlockTimeMap.push(LockStruct({unlockTime:1589040000, locked: true})); \n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require (now >= startTime);\n\n        return super.transfer(_to, _value);\n    }\n\n    function distribute(address _to, uint256 _value) onlyOwner public returns (bool) {\n\n        return super.transfer(_to, _value);\n    }\n\n    /**\n     * @dev unlock , only can be called by owner.\n     */\n    function unlock(uint256 _index) onlyOwner public {\n        require(_index>=0 && _index<unlockTimeMap.length);\n        require(now >= unlockTimeMap[_index].unlockTime && unlockTimeMap[_index].locked);\n        require(_balances[0x01] >= eachUnlockCounts);\n\n        _balances[0x01] =_balances[0x01].sub(eachUnlockCounts);\n        _balances[owner] =_balances[owner].add(eachUnlockCounts);\n\n        lockedCounts =lockedCounts.sub(eachUnlockCounts);\n        unlockTimeMap[_index].locked = false;\n\n        emit Transfer(0x01, owner, eachUnlockCounts);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockedCounts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eachUnlockCounts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unlockTimeMap\",\"outputs\":[{\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"name\":\"locked\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"distribute\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60606040526602d79883d2000060035565b5e620f48000600455635af31b00600555341561002c57600080fd5b60028054600160a060020a03191633600160a060020a03161790556611c37937e0800060008181556003546001918290526020919091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f81905561009e919064010000000061023781026106691704565b600160a060020a03331660009081526001602081905260409091209190915560068054909181016100cf8382610249565b9160005260206000209060020201600060408051908101604052635be5af008152600160208201529190508151815560208201516001918201805460ff1916911515919091179055600680549093509150810161012c8382610249565b9160005260206000209060020201600060408051908101604052635cd44e808152600160208201529190508151815560208201516001918201805460ff191691151591909117905560068054909350915081016101898382610249565b9160005260206000209060020201600060408051908101604052635dc6e2808152600160208201529190508151815560208201516001918201805460ff191691151591909117905560068054909350915081016101e68382610249565b9160005260206000209060020201600060408051908101604052635eb6d380815260016020820152919050815181556020820151600191909101805460ff1916911515919091179055506102a79050565b60008282111561024357fe5b50900390565b81548183558181151161027557600202816002028360005260206000209182019101610275919061027a565b505050565b6102a491905b808211156102a0576000815560018101805460ff19169055600201610280565b5090565b90565b61079b806102b66000396000f3006060604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d457806318160ddd1461015e578063313ce56714610183578063395acdeb146101965780636198e339146101a957806363482cf0146101c157806370a08231146101d457806371501b23146101f357806378e97925146102235780638da5cb5b1461023657806395d89b4114610265578063a9059cbb14610278578063f2fde38b146102ae578063fb932108146102cd575b600080fd5b34156100df57600080fd5b6100e76102ef565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012357808201518382015260200161010b565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016957600080fd5b610171610326565b60405190815260200160405180910390f35b341561018e57600080fd5b61017161032c565b34156101a157600080fd5b610171610331565b34156101b457600080fd5b6101bf600435610337565b005b34156101cc57600080fd5b610171610542565b34156101df57600080fd5b610171600160a060020a0360043516610548565b34156101fe57600080fd5b610209600435610563565b604051918252151560208201526040908101905180910390f35b341561022e57600080fd5b610171610592565b341561024157600080fd5b610249610598565b604051600160a060020a03909116815260200160405180910390f35b341561027057600080fd5b6100e76105a7565b341561028357600080fd5b61029a600160a060020a03600435166024356105de565b604051901515815260200160405180910390f35b34156102b957600080fd5b6101bf600160a060020a0360043516610601565b34156102d857600080fd5b61029a600160a060020a036004351660243561064b565b60408051908101604052600d81527f4469676974616c20426c6f636b00000000000000000000000000000000000000602082015281565b60005490565b600681565b60035481565b60025433600160a060020a0390811691161461035257600080fd5b60008110158015610364575060065481105b151561036f57600080fd5b600680548290811061037d57fe5b90600052602060002090600202016000015442101580156103bf575060068054829081106103a757fe5b600091825260209091206001600290920201015460ff165b15156103ca57600080fd5b600454600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54101561040457600080fd5b600454600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f546104429163ffffffff61066916565b60016020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f55600454600254600160a060020a0316600090815260409020546104919163ffffffff61067b16565b600254600160a060020a03166000908152600160205260409020556004546003546104c19163ffffffff61066916565b6003556006805460009190839081106104d657fe5b600091825260209091206002918202016001908101805460ff19169315159390931790925554600454600160a060020a0390911691907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060405190815260200160405180910390a350565b60045481565b600160a060020a031660009081526001602052604090205490565b600680548290811061057157fe5b60009182526020909120600290910201805460019091015490915060ff1682565b60055481565b600254600160a060020a031681565b60408051908101604052600281527f4442000000000000000000000000000000000000000000000000000000000000602082015281565b6005546000904210156105f057600080fd5b6105fa838361068a565b9392505050565b60025433600160a060020a0390811691161461061c57600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60025460009033600160a060020a039081169116146105f057600080fd5b60008282111561067557fe5b50900390565b6000828201838110156105fa57fe5b600160a060020a033316600090815260016020526040812054829010156106b057600080fd5b600160a060020a0333166000908152600160205260409020546106d9908363ffffffff61066916565b600160a060020a03338116600090815260016020526040808220939093559085168152205461070e908363ffffffff61067b16565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001929150505600a165627a7a7230582001181cd95d327d40486b77a58fce81b1172ed6bb12d236e4740df270c323ca530029"
}