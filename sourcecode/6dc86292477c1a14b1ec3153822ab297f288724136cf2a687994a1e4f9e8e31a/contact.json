{
  "address": "0x97661d9fa4e639dbabbe1f30b114e9babad73bc3",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "IMCPool",
  "compilerVersion": "v0.5.2+commit.1df8f40c",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-17\n*/\n\npragma solidity ^0.5.2;\n\n// ----------------------------------------------------------------------------\n// Owned contract\n// ----------------------------------------------------------------------------\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n        newOwner = address(0);\n    }\n}\n\n// ----------------------------------------------------------------------------\n// 奖池记录合约\n// ----------------------------------------------------------------------------\ncontract IMCPool is Owned{\n\n    // 奖池记录添加日志\n    event PoolRecordAdd(bytes32 _chainId, bytes32 _hash, uint _depth, string _data, string _fileFormat, uint _stripLen);\n\n    // Token奖池统计记录\n    struct RecordInfo {\n        bytes32 chainId; // 上链ID\n        bytes32 hash; // hash值\n        uint depth; // 层级\n        string data; // 竞价数据\n        string fileFormat; // 上链存证的文件格式\n        uint stripLen; // 上链存证的文件分区\n    }\n\n    // 执行者地址\n    address public executorAddress;\n    \n    // 奖此记录\n    mapping(bytes32 => RecordInfo) public poolRecord;\n    \n    constructor() public{\n        // 初始化合约执行者\n        executorAddress = msg.sender;\n    }\n    \n    /**\n     * 修改executorAddress，只有owner能够修改\n     * @param _addr address 地址\n     */\n    function modifyExecutorAddr(address _addr) public onlyOwner {\n        executorAddress = _addr;\n    }\n    \n     \n    /**\n     * 奖池记录添加\n     * @param _chainId bytes32 上链ID\n     * @param _hash bytes32 hash值\n     * @param _depth uint 上链阶段:1 加密上链，2结果上链\n     * @param _data string 竞价数据\n     * @param _fileFormat string 上链存证的文件格式\n     * @param _stripLen uint 上链存证的文件分区\n     * @return success 添加成功\n     */\n    function poolRecordAdd(bytes32 _chainId, bytes32 _hash, uint _depth, string memory _data, string memory _fileFormat, uint _stripLen) public returns (bool) {\n        // 调用者需和Owner设置的执行者地址一致\n        require(msg.sender == executorAddress);\n        // 防止重复记录\n        require(poolRecord[_chainId].chainId != _chainId);\n\n        // 记录解锁信息\n        poolRecord[_chainId] = RecordInfo(_chainId, _hash, _depth, _data, _fileFormat, _stripLen);\n\n        // 解锁日志记录\n        emit PoolRecordAdd(_chainId, _hash, _depth, _data, _fileFormat, _stripLen);\n        \n        return true;\n        \n    }\n\n}",
  "bytecode": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cc6806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100a5576000357c010000000000000000000000000000000000000000000000000000000090048063a8e9a53911610078578063a8e9a53914610271578063c7956b5c146102bb578063d4ee1d901461044d578063f2fde38b14610497576100a5565b806333e7fb97146100aa57806379ba5097146100ee57806382ff6512146100f85780638da5cb5b14610227575b600080fd5b6100ec600480360360208110156100c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104db565b005b6100f661057a565b005b6101246004803603602081101561010e57600080fd5b8101908080359060200190929190505050610719565b604051808781526020018681526020018581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610180578082015181840152602081019050610165565b50505050905090810190601f1680156101ad5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156101e65780820151818401526020810190506101cb565b50505050905090810190601f1680156102135780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b61022f610885565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102796108aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610433600480360360c08110156102d157600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561030c57600080fd5b82018360208201111561031e57600080fd5b8035906020019184600183028401116401000000008311171561034057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103a357600080fd5b8201836020820111156103b557600080fd5b803590602001918460018302840111640100000000831117156103d757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506108d0565b604051808215151515815260200191505060405180910390f35b610455610b30565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104d9600480360360208110156104ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b56565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561053657600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105d657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6003602052806000526040600020600091509050806000015490806001015490806002015490806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107d75780601f106107ac576101008083540402835291602001916107d7565b820191906000526020600020905b8154815290600101906020018083116107ba57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108755780601f1061084a57610100808354040283529160200191610875565b820191906000526020600020905b81548152906001019060200180831161085857829003601f168201915b5050505050908060050154905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092e57600080fd5b8660036000898152602001908152602001600020600001541415151561095357600080fd5b60c060405190810160405280888152602001878152602001868152602001858152602001848152602001838152506003600089815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030190805190602001906109ce929190610bf5565b5060808201518160040190805190602001906109eb929190610bf5565b5060a082015181600501559050507f59e331596c2f4ad4e68dde10fb2b9f32ef6b786f476b632b99edbd6d004d2ea1878787878787604051808781526020018681526020018581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610a7c578082015181840152602081019050610a61565b50505050905090810190601f168015610aa95780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610ae2578082015181840152602081019050610ac7565b50505050905090810190601f168015610b0f5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a1600190509695505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bb157600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c3657805160ff1916838001178555610c64565b82800160010185558215610c64579182015b82811115610c63578251825591602001919060010190610c48565b5b509050610c719190610c75565b5090565b610c9791905b80821115610c93576000816000905550600101610c7b565b5090565b9056fea165627a7a72305820f0c837593fa506d0b21be3e30cc5c516fcdb11f01ac23477654414a7887f14600029"
}