{
  "address": "0xed01e8865689602a840fa4855f0d7886268f250b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Uselesslightbulb",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-15\n*/\n\npragma solidity ^0.4.24;\n\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\ncontract Uselesslightbulb is Ownable {\n\n  //using SafeMath for uint;\n\n  uint weiPrice = 1000000000000000;\n  uint count = 0;\n\n  function toggle() public payable {\n    require(msg.value >= weiPrice);\n    count++;//count.add(1);\n  }\n\n  function getCount() external view returns (uint) {\n    return count;\n  }\n\n  function withdraw() onlyOwner public {\n    owner.transfer(address(this).balance);\n  }\n\n}",
  "bytecode": "608060405266038d7ea4c68000600155600060028190558054600160a060020a031916331790556102dd806100356000396000f3006080604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633ccfd60b811461007c57806340a3d24614610093578063715018a61461009b5780638da5cb5b146100b0578063a87d942c146100e1578063f2fde38b14610108575b600080fd5b34801561008857600080fd5b50610091610129565b005b61009161017e565b3480156100a757600080fd5b50610091610198565b3480156100bc57600080fd5b506100c5610204565b60408051600160a060020a039092168252519081900360200190f35b3480156100ed57600080fd5b506100f6610213565b60408051918252519081900360200190f35b34801561011457600080fd5b50610091600160a060020a0360043516610219565b600054600160a060020a0316331461014057600080fd5b60008054604051600160a060020a0390911691303180156108fc02929091818181858888f1935050505015801561017b573d6000803e3d6000fd5b50565b60015434101561018d57600080fd5b600280546001019055565b600054600160a060020a031633146101af57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b60025490565b600054600160a060020a0316331461023057600080fd5b61017b81600160a060020a038116151561024957600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058204be4a7ffab2a8fece438baf724f27b61ee94a66d93d18e7cf5e046cc851a84300029"
}