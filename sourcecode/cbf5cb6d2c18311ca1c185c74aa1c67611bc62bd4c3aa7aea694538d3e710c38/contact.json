{
  "address": "0xd2dcba99f8936e576c533c04d25edbc9f762818e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MyUserToken",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-13\n*/\n\npragma solidity ^0.4.16;\n\ncontract Utils {\n    function Utils() public {    }\n    modifier greaterThanZero(uint256 _amount) { require(_amount > 0);    _;   }\n    modifier validAddress(address _address) { require(_address != 0x0);  _;   }\n    modifier notThis(address _address) { require(_address != address(this));  _; }\n    function safeAdd(uint256 _x, uint256 _y) internal pure returns (uint256) { uint256 z = _x + _y;  assert(z >= _x);  return z;  }\n    function safeSub(uint256 _x, uint256 _y) internal pure returns (uint256) { assert(_x >= _y);  return _x - _y;   }\n    function safeMul(uint256 _x, uint256 _y) internal pure returns (uint256) { uint256 z = _x * _y; assert(_x == 0 || z / _x == _y); return z; }\n}\n\ncontract owned {\n    address public owner;\n\n    function owned() public {  owner = msg.sender;  }\n    modifier onlyOwner {  require (msg.sender == owner);    _;   }\n    function transferOwnership(address newOwner) onlyOwner public{  owner = newOwner;  }\n}\n\ncontract MyUserToken is owned, Utils {\n    string public name; \n    string public symbol; \n    uint8 public decimals = 18;\n    uint256 public totalSupply; \n\n    mapping (address => uint256) public balanceOf;\n\n    event Transfer(address indexed from, address indexed to, uint256 value); \n    \n    function MyUserToken(uint256 initialSupply, string tokenName, string tokenSymbol) public {\n\n        totalSupply = initialSupply * 10 ** uint256(decimals);  \n        balanceOf[msg.sender] = totalSupply; \n\n        name = tokenName;\n        symbol = tokenSymbol;\n    }\n\n    function _transfer(address _from, address _to, uint256 _value) internal {\n\n      require(_to != 0x0); \n      require(balanceOf[_from] >= _value); \n      require(balanceOf[_to] + _value > balanceOf[_to]); \n      \n      uint256 previousBalances = safeAdd(balanceOf[_from], balanceOf[_to]); \n      balanceOf[_from] = safeSub(balanceOf[_from], _value); \n      balanceOf[_to] = safeAdd(balanceOf[_to], _value); \n      emit Transfer(_from, _to, _value);\n      assert(balanceOf[_from] + balanceOf[_to] == previousBalances); \n    }\n\n    function transfer(address _to, uint256 _value) public {   _transfer(msg.sender, _to, _value);   }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60606040526003805460ff19166012179055341561001c57600080fd5b6040516106bf3803806106bf833981016040528080519190602001805182019190602001805160008054600160a060020a033316600160a060020a03199091168117825560035460ff16600a0a870260048190559082526005602052604090912055909101905060018280516100969291602001906100b3565b5060028180516100aa9291602001906100b3565b5050505061014e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100f457805160ff1916838001178555610121565b82800160010185558215610121579182015b82811115610121578251825591602001919060010190610106565b5061012d929150610131565b5090565b61014b91905b8082111561012d5760008155600101610137565b90565b6105628061015d6000396000f30060606040526004361061008d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461009257806318160ddd1461011c578063313ce5671461014157806370a082311461016a5780638da5cb5b1461018957806395d89b41146101b8578063a9059cbb146101cb578063f2fde38b146101ef575b600080fd5b341561009d57600080fd5b6100a561020e565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100e15780820151838201526020016100c9565b50505050905090810190601f16801561010e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561012757600080fd5b61012f6102ac565b60405190815260200160405180910390f35b341561014c57600080fd5b6101546102b2565b60405160ff909116815260200160405180910390f35b341561017557600080fd5b61012f600160a060020a03600435166102bb565b341561019457600080fd5b61019c6102cd565b604051600160a060020a03909116815260200160405180910390f35b34156101c357600080fd5b6100a56102dc565b34156101d657600080fd5b6101ed600160a060020a0360043516602435610347565b005b34156101fa57600080fd5b6101ed600160a060020a0360043516610356565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102a45780601f10610279576101008083540402835291602001916102a4565b820191906000526020600020905b81548152906001019060200180831161028757829003601f168201915b505050505081565b60045481565b60035460ff1681565b60056020526000908152604090205481565b600054600160a060020a031681565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102a45780601f10610279576101008083540402835291602001916102a4565b6103523383836103a0565b5050565b60005433600160a060020a0390811691161461037157600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000600160a060020a03831615156103b757600080fd5b600160a060020a038416600090815260056020526040902054829010156103dd57600080fd5b600160a060020a0383166000908152600560205260409020548281011161040357600080fd5b600160a060020a03808516600090815260056020526040808220549286168252902054610430919061050e565b600160a060020a0385166000908152600560205260409020549091506104569083610524565b600160a060020a038086166000908152600560205260408082209390935590851681522054610485908361050e565b600160a060020a03808516600081815260056020526040908190209390935591908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3600160a060020a0380841660009081526005602052604080822054928716825290205401811461050857fe5b50505050565b60008282018381101561051d57fe5b9392505050565b60008183101561053057fe5b509003905600a165627a7a72305820ef52f1fb842a19c293e472e64fafa97cac12ee6b2df258fbd24c7ac03a54fab5002900000000000000000000000000000000000000000000000000000001a13b8600000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000015636f6d6d6f6e7765616c20636861696e206c6f76650000000000000000000000000000000000000000000000000000000000000000000000000000000000000a434d434c2d746f6b656e00000000000000000000000000000000000000000000",
  "constructorArguments": "00000000000000000000000000000000000000000000000000000001a13b8600000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000015636f6d6d6f6e7765616c20636861696e206c6f76650000000000000000000000000000000000000000000000000000000000000000000000000000000000000a434d434c2d746f6b656e00000000000000000000000000000000000000000000"
}