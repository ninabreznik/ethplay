{
  "address": "0x2c8c5069fc481f97f7bafbd5da154c2411a996ce",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Skipday",
  "compilerVersion": "v0.4.17+commit.bdeb9e52",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-25\n*/\n\npragma solidity ^0.4.17;\n\nlibrary SafeMath {\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract Owned {\n    address public owner;\n    address public proposedOwner;\n    event OwnershipTransferInitiated(address indexed _proposedOwner);\n    event OwnershipTransferCompleted(address indexed _newOwner);\n\n\n    function Owned() public {\n        owner = msg.sender;\n    }\n    modifier onlyOwner() {\n        require(isOwner(msg.sender));\n        _;\n    }\n\n    function isOwner(address _address) internal view returns (bool) {\n        return (_address == owner);\n    }\n\n    function initiateOwnershipTransfer(address _proposedOwner) public onlyOwner returns (bool) {\n        proposedOwner = _proposedOwner;\n        OwnershipTransferInitiated(_proposedOwner);\n        return true;\n    }\n\n    function completeOwnershipTransfer() public returns (bool) {\n        require(msg.sender == proposedOwner);\n        owner = proposedOwner;\n        proposedOwner = address(0);\n        OwnershipTransferCompleted(owner);\n        return true;\n    }\n}\n\ncontract SkipdayConfig {\n    string  public constant TOKEN_SYMBOL   = \"SKIPDAY\";\n    string  public constant TOKEN_NAME     = \"Skipday\";\n    uint8   public constant TOKEN_DECIMALS = 18;\n    uint256 public constant DECIMALSFACTOR = 10**uint256(TOKEN_DECIMALS);\n    uint256 public constant TOKENS_MAX     = 314159265 * DECIMALSFACTOR;\n}\n\ncontract ERC20Interface {\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    function name() public view returns (string);\n    function symbol() public view returns (string);\n    function decimals() public view returns (uint8);\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address _owner) public view returns (uint256 balance);\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n}\n\ncontract ERC20Token is ERC20Interface, Owned {\n    using SafeMath for uint256;\n    string  private tokenName;\n    string  private tokenSymbol;\n    uint8   private tokenDecimals;\n    uint256 internal tokenTotalSupply;\n    mapping(address => uint256) balances;\n    mapping(address => mapping (address => uint256)) allowed;\n\n\n    function ERC20Token(string _symbol, string _name, uint8 _decimals, uint256 _totalSupply) public Owned(){\n        tokenSymbol      = _symbol;\n        tokenName        = _name;\n        tokenDecimals    = _decimals;\n        tokenTotalSupply = _totalSupply;\n        balances[owner]  = _totalSupply;\n        Transfer(0x0, owner, _totalSupply);\n    }\n\n\n    function name() public view returns (string) {\n        return tokenName;\n    }\n\n\n    function symbol() public view returns (string) {\n        return tokenSymbol;\n    }\n\n\n    function decimals() public view returns (uint8) {\n        return tokenDecimals;\n    }\n\n\n    function totalSupply() public view returns (uint256) {\n        return tokenTotalSupply;\n    }\n\n\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances[_owner];\n    }\n\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        balances[_from] = balances[_from].sub(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n}\n\ncontract OpsManaged is Owned {\n    address public opsAddress;\n    address public adminAddress;\n    event AdminAddressChanged(address indexed _newAddress);\n    event OpsAddressChanged(address indexed _newAddress);\n\n\n    function OpsManaged() public Owned(){\n    }\n\n    modifier onlyAdmin() {\n        require(isAdmin(msg.sender));\n        _;\n    }\n\n    modifier onlyAdminOrOps() {\n        require(isAdmin(msg.sender) || isOps(msg.sender));\n        _;\n    }\n\n    modifier onlyOwnerOrAdmin() {\n        require(isOwner(msg.sender) || isAdmin(msg.sender));\n        _;\n    }\n\n    modifier onlyOps() {\n        require(isOps(msg.sender));\n        _;\n    }\n\n    function isAdmin(address _address) internal view returns (bool) {\n        return (adminAddress != address(0) && _address == adminAddress);\n    }\n\n    function isOps(address _address) internal view returns (bool) {\n        return (opsAddress != address(0) && _address == opsAddress);\n    }\n\n    function isOwnerOrOps(address _address) internal view returns (bool) {\n        return (isOwner(_address) || isOps(_address));\n    }\n\n    function setAdminAddress(address _adminAddress) external onlyOwnerOrAdmin returns (bool) {\n        require(_adminAddress != owner);\n        require(_adminAddress != address(this));\n        require(!isOps(_adminAddress));\n        adminAddress = _adminAddress;\n        AdminAddressChanged(_adminAddress);\n        return true;\n    }\n\n    function setOpsAddress(address _opsAddress) external onlyOwnerOrAdmin returns (bool) {\n        require(_opsAddress != owner);\n        require(_opsAddress != address(this));\n        require(!isAdmin(_opsAddress));\n        opsAddress = _opsAddress;\n        OpsAddressChanged(_opsAddress);\n        return true;\n    }\n}\n\n\n\ncontract Skipday is ERC20Token, OpsManaged, SkipdayConfig {\n    bool public finalized;\n    event Burnt(address indexed _from, uint256 _amount);\n    event Finalized();\n\n    function Skipday() public ERC20Token(TOKEN_SYMBOL, TOKEN_NAME, TOKEN_DECIMALS, TOKENS_MAX) OpsManaged(){\n        finalized = false;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        checkTransferAllowed(msg.sender, _to);\n        return super.transfer(_to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        checkTransferAllowed(msg.sender, _to);\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    function checkTransferAllowed(address _sender, address _to) private view {\n        if (finalized) {\n            return;\n        }\n        require(isOwnerOrOps(_sender) || _to == owner);\n    }\n\n    function burn(uint256 _value) public returns (bool success) {\n        require(_value <= balances[msg.sender]);\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        tokenTotalSupply = tokenTotalSupply.sub(_value);\n        Burnt(msg.sender, _value);\n        return true;\n    }\n\n    function finalize() external onlyAdmin returns (bool success) {\n        require(!finalized);\n        finalized = true;\n        Finalized();\n        return true;\n    }\n}",
  "bytecode": "6060604052341561000f57600080fd5b604080519081016040908152600782527f534b49504441590000000000000000000000000000000000000000000000000060208301528051908101604052600781527f536b697064617900000000000000000000000000000000000000000000000000602082015260008054600160a060020a03191633600160a060020a031617905560126b0103ddcfe187695505e4000060038480516100b492916020019061014f565b5060028380516100c892916020019061014f565b506004805460ff191660ff8416179055600581905560008054600160a060020a03908116825260066020526040808320849055825490911691907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a350506009805460a060020a60ff0219169055506101ea9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061019057805160ff19168380011785556101bd565b828001600101855582156101bd579182015b828111156101bd5782518255916020019190600101906101a2565b506101c99291506101cd565b5090565b6101e791905b808211156101c957600081556001016101d3565b90565b610e4a806101f96000396000f300606060405236156101465763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461014b578063095ea7b3146101d557806318160ddd1461020b578063188214001461023057806323b872dd146102435780632a9053181461026b5780632c1e816d1461027e578063313ce5671461029d57806342966c68146102c65780634bb278f3146102dc5780635b7f415c146102ef578063707789c51461030257806370a08231146103215780638bc04eb7146103405780638da5cb5b146103535780638ea643761461038257806395d89b4114610395578063a67e91a8146103a8578063a9059cbb146103bb578063b3f05b97146103dd578063c0b6f561146103f0578063d153b60c1461040f578063dd62ed3e14610422578063e71a781114610447578063fc6f94681461045a575b600080fd5b341561015657600080fd5b61015e61046d565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561019a578082015183820152602001610182565b50505050905090810190601f1680156101c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101e057600080fd5b6101f7600160a060020a0360043516602435610515565b604051901515815260200160405180910390f35b341561021657600080fd5b61021e610581565b60405190815260200160405180910390f35b341561023b57600080fd5b61015e610587565b341561024e57600080fd5b6101f7600160a060020a03600435811690602435166044356105be565b341561027657600080fd5b61015e6105dd565b341561028957600080fd5b6101f7600160a060020a0360043516610614565b34156102a857600080fd5b6102b06106e7565b60405160ff909116815260200160405180910390f35b34156102d157600080fd5b6101f76004356106f0565b34156102e757600080fd5b6101f76107b2565b34156102fa57600080fd5b6102b0610835565b341561030d57600080fd5b6101f7600160a060020a036004351661083a565b341561032c57600080fd5b61021e600160a060020a036004351661090d565b341561034b57600080fd5b61021e610928565b341561035e57600080fd5b610366610934565b604051600160a060020a03909116815260200160405180910390f35b341561038d57600080fd5b610366610943565b34156103a057600080fd5b61015e610952565b34156103b357600080fd5b61021e6109c5565b34156103c657600080fd5b6101f7600160a060020a03600435166024356109d5565b34156103e857600080fd5b6101f76109f2565b34156103fb57600080fd5b6101f7600160a060020a0360043516610a02565b341561041a57600080fd5b610366610a77565b341561042d57600080fd5b61021e600160a060020a0360043581169060243516610a86565b341561045257600080fd5b6101f7610ab1565b341561046557600080fd5b610366610b38565b610475610e0c565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b5050505050905090565b600160a060020a03338116600081815260076020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60055490565b60408051908101604052600781527f536b697064617900000000000000000000000000000000000000000000000000602082015281565b60006105ca3384610b47565b6105d5848484610b8e565b949350505050565b60408051908101604052600781527f534b495044415900000000000000000000000000000000000000000000000000602082015281565b600061061f33610ca1565b8061062e575061062e33610cb5565b151561063957600080fd5b600054600160a060020a038381169116141561065457600080fd5b30600160a060020a031682600160a060020a03161415151561067557600080fd5b61067e82610ce5565b1561068857600080fd5b6009805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384169081179091557f17bb0532ac84902a52bb6799529153f5ea501fc54fbcf3ea00dbd42bceb6b0f460405160405180910390a2506001919050565b60045460ff1690565b600160a060020a03331660009081526006602052604081205482111561071557600080fd5b600160a060020a03331660009081526006602052604090205461073e908363ffffffff610d1216565b600160a060020a03331660009081526006602052604090205560055461076a908363ffffffff610d1216565b600555600160a060020a0333167f919f7e2092ffcc9d09f599be18d8152860b0c054df788a33bc549cdd9d0f15b18360405190815260200160405180910390a2506001919050565b60006107bd33610cb5565b15156107c857600080fd5b60095460a060020a900460ff16156107df57600080fd5b6009805474ff0000000000000000000000000000000000000000191660a060020a1790557f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a150600190565b601281565b600061084533610ca1565b80610854575061085433610cb5565b151561085f57600080fd5b600054600160a060020a038381169116141561087a57600080fd5b30600160a060020a031682600160a060020a03161415151561089b57600080fd5b6108a482610cb5565b156108ae57600080fd5b6008805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384169081179091557fac46a4511b8366ae3b7cf3cf342e31556274975598dcae03c866f8f0f55d51c460405160405180910390a2506001919050565b600160a060020a031660009081526006602052604090205490565b670de0b6b3a764000081565b600054600160a060020a031681565b600854600160a060020a031681565b61095a610e0c565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561050b5780601f106104e05761010080835404028352916020019161050b565b6b0103ddcfe187695505e4000081565b60006109e13384610b47565b6109eb8383610d24565b9392505050565b60095460a060020a900460ff1681565b6000610a0d33610ca1565b1515610a1857600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384169081179091557f20f5afdf40bf7b43c89031a5d4369a30b159e512d164aa46124bcb706b4a1caf60405160405180910390a2506001919050565b600154600160a060020a031681565b600160a060020a03918216600090815260076020908152604080832093909416825291909152205490565b60015460009033600160a060020a03908116911614610acf57600080fd5b6001805460008054600160a060020a0380841673ffffffffffffffffffffffffffffffffffffffff1992831617928390559216909255167f624adc4c72536289dd9d5439ccdeccd8923cb9af95fb626b21935447c77b840760405160405180910390a250600190565b600954600160a060020a031681565b60095460a060020a900460ff1615610b5e57610b8a565b610b6782610de3565b80610b7f5750600054600160a060020a038281169116145b1515610b8a57600080fd5b5050565b600160a060020a038316600090815260066020526040812054610bb7908363ffffffff610d1216565b600160a060020a0380861660009081526006602090815260408083209490945560078152838220339093168252919091522054610bfa908363ffffffff610d1216565b600160a060020a0380861660009081526007602090815260408083203385168452825280832094909455918616815260069091522054610c40908363ffffffff610dfd16565b600160a060020a03808516600081815260066020526040908190209390935591908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b600054600160a060020a0390811691161490565b600954600090600160a060020a031615801590610cdf5750600954600160a060020a038381169116145b92915050565b600854600090600160a060020a031615801590610cdf575050600854600160a060020a0390811691161490565b600082821115610d1e57fe5b50900390565b600160a060020a033316600090815260066020526040812054610d4d908363ffffffff610d1216565b600160a060020a033381166000908152600660205260408082209390935590851681522054610d82908363ffffffff610dfd16565b600160a060020a0380851660008181526006602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b6000610dee82610ca1565b80610cdf5750610cdf82610ce5565b6000828201838110156109eb57fe5b602060405190810160405260008152905600a165627a7a723058200db761002a72d8e834ef28da42837ff8781eea4a051ec154dad95d37434b93550029"
}