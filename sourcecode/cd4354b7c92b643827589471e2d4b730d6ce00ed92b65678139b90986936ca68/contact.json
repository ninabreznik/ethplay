{
  "address": "0xdfa08673b5047d7fddee3dead25a9aad9cd0473b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ETHInvest",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-14\n*/\n\npragma solidity ^0.4.25;\n\ncontract ETHInvest {\n    uint constant FIVE = 20; // separate 5 %\n\n    address public marketing1;\n    address public marketing2;\n\n    mapping(address => uint[]) public balances;\n    mapping(address => uint[]) public paid;\n    mapping(address => uint) public depositedAt;\n    mapping(address => uint) public timestamps;\n    \n    constructor() public {\n        marketing1 = 0xE5e128fBb8E28Bd24f8454d1149FE55B03F9B07c; // wallet for marketing1;\n        marketing2 = 0xbf8F0a61B3B03F2F85A2d1238b038DE1D6985B6d; // wallet for marketing2;\n    }\n\n    function() external payable {\n        uint len = balances[msg.sender].length;\n        uint profit = 0;\n        for (uint i = 0; i < len; i++) {\n            uint investment = balances[msg.sender][i];\n            if (investment != 0 && investment * 2 > paid[msg.sender][i]) { // 200 %\n                uint p = investment / 100 * (block.number - timestamps[msg.sender]) / 5900;\n                paid[msg.sender][i] += p;\n                profit += p;\n            } else {\n                delete balances[msg.sender][i];\n                delete paid[msg.sender][i];\n            }\n        }\n        if (profit > 0) {\n            msg.sender.transfer(profit);\n        }\n\n        if (msg.value > 0) {\n            uint marketingCommission = msg.value / FIVE;\n            marketing1.transfer(marketingCommission);\n            marketing2.transfer(marketingCommission);\n\n            address referrer = bytesToAddress(msg.data);\n            address investor = msg.sender;\n            if (referrer != address(0) && referrer != msg.sender) {\n                uint referralCommission = msg.value / FIVE;\n                referrer.transfer(referralCommission);\n                investor.transfer(referralCommission);\n            }\n\n            if (block.number - depositedAt[msg.sender] >= 5900 || len == 0) {\n                balances[msg.sender].push(msg.value);\n                paid[msg.sender].push(0);\n                depositedAt[msg.sender] = block.number;\n            } else {\n                balances[msg.sender][len - 1] += msg.value;\n            }\n        }\n\n        if (profit == 0 && msg.value == 0) {\n            delete balances[msg.sender];\n            delete paid[msg.sender];\n            delete timestamps[msg.sender];\n        } else {\n            timestamps[msg.sender] = block.number;\n        }\n    }\n\n    function bytesToAddress(bytes bs) internal pure returns (address addr) {\n        assembly {\n            addr := mload(add(bs, 0x14))\n        }\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketing1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"paid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketing2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"timestamps\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a031990811673e5e128fbb8e28bd24f8454d1149fe55b03f9b07c179091556001805490911673bf8f0a61b3b03f2f85a2d1238b038de1d6985b6d179055610652806100686000396000f3006080604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663208e5acc811461046e578063427ac82c146104a15780638c726618146104d2578063985f2fe1146104f6578063cbf1304d1461050b578063e9c98e681461052f575b3360009081526002602052604081205490808080808080805b888710156101b8573360009081526002602052604090208054889081106100b357fe5b90600052602060002001549550856000141580156100f857503360009081526003602052604090208054889081106100e757fe5b906000526020600020015486600202115b1561015f573360009081526005602052604090205461170c904303606488040281151561012157fe5b336000908152600360205260409020805492909104965086918990811061014457fe5b600091825260209091200180549091019055968401966101ad565b33600090815260026020526040902080548890811061017a57fe5b6000918252602080832090910182905533825260039052604090208054889081106101a157fe5b60009182526020822001555b600190960195610090565b60008811156101f057604051339089156108fc02908a906000818181858888f193505050501580156101ee573d6000803e3d6000fd5b505b60003411156103fa5760008054604051601434049650600160a060020a03909116916108fc871502918791818181858888f19350505050158015610238573d6000803e3d6000fd5b50600154604051600160a060020a039091169085156108fc029086906000818181858888f19350505050158015610273573d6000803e3d6000fd5b506102ae6000368080601f01602080910402602001604051908101604052809392919081815260200183838082843750610550945050505050565b9250339150600160a060020a038316158015906102d45750600160a060020a0383163314155b1561034e57506040516014340490600160a060020a0384169082156108fc029083906000818181858888f19350505050158015610315573d6000803e3d6000fd5b50604051600160a060020a0383169082156108fc029083906000818181858888f1935050505015801561034c573d6000803e3d6000fd5b505b3360009081526004602052604090205461170c4391909103101580610371575088155b156103c55733600081815260026020908152604080832080546001818101835591855283852034910155848452600383528184208054918201815584528284200183905592825260049052204390556103fa565b33600090815260026020526040902080543491906000198c019081106103e757fe5b6000918252602090912001805490910190555b87158015610406575034155b1561045057336000908152600260205260408120610423916105e4565b33600090815260036020526040812061043b916105e4565b33600090815260056020526040812055610463565b3360009081526005602052604090204390555b505050505050505050005b34801561047a57600080fd5b5061048f600160a060020a0360043516610557565b60408051918252519081900360200190f35b3480156104ad57600080fd5b506104b6610569565b60408051600160a060020a039092168252519081900360200190f35b3480156104de57600080fd5b5061048f600160a060020a0360043516602435610578565b34801561050257600080fd5b506104b66105a8565b34801561051757600080fd5b5061048f600160a060020a03600435166024356105b7565b34801561053b57600080fd5b5061048f600160a060020a03600435166105d2565b6014015190565b60046020526000908152604090205481565b600054600160a060020a031681565b60036020528160005260406000208181548110151561059357fe5b90600052602060002001600091509150505481565b600154600160a060020a031681565b60026020528160005260406000208181548110151561059357fe5b60056020526000908152604090205481565b50805460008255906000526020600020908101906106029190610605565b50565b61062391905b8082111561061f576000815560010161060b565b5090565b905600a165627a7a72305820b82e825f874f6c8c2f7908ecddd15dc0d9baeffe5fdee1249a193a1337c7f50b0029"
}