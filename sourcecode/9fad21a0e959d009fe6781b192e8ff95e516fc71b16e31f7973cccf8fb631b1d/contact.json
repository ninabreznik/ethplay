{
  "address": "0x03a9458d77dd705829fa758c64dbe770385295cc",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "PolicyRegistry",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-04\n*/\n\npragma solidity ^0.4.24;\n\n/**\n *  @title PolicyRegistry\n *  @author Enrique Piqueras - <[emailÂ protected]>\n *  @dev A contract to maintain a policy for each subcourt.\n */\ncontract PolicyRegistry {\n    /* Events */\n\n    /** @dev Emitted when a policy is updated.\n     *  @param _subcourtID The ID of the policy's subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    event PolicyUpdate(uint indexed _subcourtID, string _policy);\n\n    /* Storage */\n\n    address public governor;\n    mapping(uint => string) public policies;\n\n    /* Modifiers */\n\n    /** @dev Requires that the sender is the governor. */\n    modifier onlyByGovernor() {require(governor == msg.sender, \"Can only be called by the governor.\"); _;}\n\n    /* Constructor */\n\n    /** @dev Constructs the `PolicyRegistry` contract.\n     *  @param _governor The governor's address.\n     */\n    constructor(address _governor) public {governor = _governor;}\n\n    /* External */\n\n    /** @dev Changes the `governor` storage variable.\n     *  @param _governor The new value for the `governor` storage variable.\n     */\n    function changeGovernor(address _governor) external onlyByGovernor {governor = _governor;}\n\n    /** @dev Sets the policy for the specified subcourt.\n     *  @param _subcourtID The ID of the specified subcourt.\n     *  @param _policy The URI of the policy JSON.\n     */\n    function setPolicy(uint _subcourtID, string _policy) external onlyByGovernor {\n        emit PolicyUpdate(_subcourtID, policies[_subcourtID]);\n        policies[_subcourtID] = _policy;\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b506040516020806105c1833981016040525160008054600160a060020a03909216600160a060020a031990921691909117905561056f806100526000396000f3006080604052600436106100615763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630c340a248114610066578063d3e89483146100a4578063e4c0aaf414610131578063f00adf5e14610161575b600080fd5b34801561007257600080fd5b5061007b610185565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100b057600080fd5b506100bc6004356101a1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f65781810151838201526020016100de565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013d57600080fd5b5061015f73ffffffffffffffffffffffffffffffffffffffff6004351661023b565b005b34801561016d57600080fd5b5061015f600480359060248035908101910135610323565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60016020818152600092835260409283902080548451600294821615610100026000190190911693909304601f81018390048302840183019094528383529192908301828280156102335780601f1061020857610100808354040283529160200191610233565b820191906000526020600020905b81548152906001019060200180831161021657829003601f168201915b505050505081565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102e757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e60448201527f6f722e0000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103cf57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f43616e206f6e6c792062652063616c6c65642062792074686520676f7665726e60448201527f6f722e0000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600083815260016020818152604092839020835182815281546002948116156101000260001901169390930491830182905286937f6363e8b93c0bbb112f6247819a99f3c99f4a3e0f8e119a64e5ceb6edb9b3cc7b93919282918201908490801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b50509250505060405180910390a260008381526001602052604090206104a29083836104a8565b50505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106104e95782800160ff19823516178555610516565b82800160010185558215610516579182015b828111156105165782358255916020019190600101906104fb565b50610522929150610526565b5090565b61054091905b80821115610522576000815560010161052c565b905600a165627a7a7230582014386371a28c89824df5d56eda78cdf0128f006b762355fbb0804bb7ab6f4bd9002900000000000000000000000098a3a786f2caa319dc234d28fcd6e362a9750709",
  "constructorArguments": "00000000000000000000000098a3a786f2caa319dc234d28fcd6e362a9750709"
}