{
  "address": "0xb8cbfe7be38295eb1e1b30ef2864b2ca03e9486e",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "asdfgh",
  "compilerVersion": "v0.4.13+commit.fb4cb1a",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-03\n*/\n\npragma solidity ^0.4.13;\n\ncontract ForeignToken {\n    function balanceOf(address _owner) constant returns (uint256);\n    function transfer(address _to, uint256 _value) returns (bool);\n}\n\n\ncontract asdfgh {\n    event Hodl(address indexed hodler, uint indexed amount);\n    event Party(address indexed hodler, uint indexed amount);\n    mapping (address => uint) public hodlers;\n    uint constant partyTime = 1546509999; // 01/03/2019 @ 10:06am (UTC)\n    function() payable {\n        hodlers[msg.sender] += msg.value;\n        Hodl(msg.sender, msg.value);\n    \n        if (msg.value == 0) {\n        \n        require (block.timestamp > partyTime && hodlers[msg.sender] > 0);\n        uint value = hodlers[msg.sender];\n        hodlers[msg.sender] = 0;\n        msg.sender.transfer(value);\n        Party(msg.sender, value);    \n            \n        } \n        \n        if (msg.value == 0.001 ether) {\n        require (block.timestamp > partyTime);\n        ForeignToken token = ForeignToken(0xA15C7Ebe1f07CaF6bFF097D8a589fb8AC49Ae5B3);\n        \n        uint256 amount = token.balanceOf(address(this));\n        token.transfer(msg.sender, amount);\n            \n        } \n        \n    }\n        \n}",
  "bytecode": "6060604052341561000f57600080fd5b5b6102ca8061001f6000396000f300606060405236156100255763ffffffff60e060020a6000350416634a3f17e7811461025b575b6102595b600160a060020a0333166000818152602081905260408082208054349081019091559192839283929091907f115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091905160405180910390a334151561013a57635c2ddeaf421180156100af5750600160a060020a033316600090815260208190526040812054115b15156100ba57600080fd5b600160a060020a033316600081815260208190526040808220805492905590945084156108fc0290859051600060405180830381858888f19350505050151561010257600080fd5b8233600160a060020a03167f0dc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e760405160405180910390a35b3466038d7ea4c68000141561025357635c2ddeaf421161015957600080fd5b73a15c7ebe1f07caf6bff097d8a589fb8ac49ae5b39150816370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156101be57600080fd5b6102c65a03f115156101cf57600080fd5b5050506040518051915050600160a060020a03821663a9059cbb338360006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561023757600080fd5b6102c65a03f1151561024857600080fd5b505050604051805150505b5b505050565b005b341561026657600080fd5b61027a600160a060020a036004351661028c565b60405190815260200160405180910390f35b600060208190529081526040902054815600a165627a7a72305820f5a9db06c76275e00259784407d272d5f8a86c424b7a14a2e9d432bac92894ec0029"
}