{
  "address": "0x28dee01d53fed0edf5f6e310bf8ef9311513ae40",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "XBPToken",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-22\n*/\n\npragma solidity 0.4.19;\n\ncontract BaseContract {\n    modifier greaterThanZero(uint256 _amount) {\n        require(_amount > 0);\n\n        _;\n    }\n\n    modifier isZero(uint256 _amount) {\n        require(_amount == 0);\n\n        _;\n    }\n\n    modifier nonZero(uint256 _amount) {\n        require(_amount != 0);\n\n        _;\n    }\n\n    modifier notThis(address _address) {\n        require(_address != address(this));\n\n        _;\n    }\n\n    modifier onlyIf(bool condition) {\n        require(condition);\n\n        _;\n    }\n\n    modifier validIndex(uint256 arrayLength, uint256 index) {\n        requireValidIndex(arrayLength, index);\n\n        _;\n    }\n\n    modifier validAddress(address _address) {\n        require(_address != 0x0);\n\n        _;\n    }\n\n    modifier validString(string value) {\n        require(bytes(value).length > 0);\n\n        _;\n    }\n\n    // mitigate short address attack\n    // http://vessenes.com/the-erc20-short-address-attack-explained/\n    modifier validParamData(uint256 numParams) {\n        uint256 expectedDataLength = (numParams * 32) + 4;\n        assert(msg.data.length >= expectedDataLength);\n\n        _;\n    }\n\n    function requireValidIndex(uint256 arrayLength, uint256 index)\n        internal\n        pure\n    {\n        require(index >= 0 && index < arrayLength);\n    }\n}\n\ncontract Owned is BaseContract {\n    address public owner;\n    address public newOwner;\n\n    event OwnerUpdate(address indexed _prevOwner, address indexed _newOwner);\n\n    function Owned()\n        internal\n    {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n\n        _;\n    }\n\n    /// @dev allows transferring the contract ownership\n    /// the new owner still needs to accept the transfer\n    /// can only be called by the contract owner\n    /// @param _newOwner    new contract owner\n    function transferOwnership(address _newOwner)\n        public\n        validParamData(1)\n        onlyOwner\n        onlyIf(_newOwner != owner)\n    {\n        newOwner = _newOwner;\n    }\n\n    /// @dev used by a new owner to accept an ownership transfer\n    function acceptOwnership()\n        public\n        onlyIf(msg.sender == newOwner)\n    {\n        OwnerUpdate(owner, newOwner);\n        owner = newOwner;\n        newOwner = 0x0;\n    }\n}\n\n\ncontract IToken { \n    function totalSupply()\n        public view\n        returns (uint256);\n\n    function balanceOf(address _owner)\n        public view\n        returns (uint256);\n\n    function transfer(address _to, uint256 _value)\n        public\n        returns (bool);\n\n    function transferFrom(address _from, address _to, uint256 _value)\n        public\n        returns (bool);\n\n    function approve(address _spender, uint256 _value)\n        public\n        returns (bool);\n\n    function allowance(address _owner, address _spender)\n        public view\n        returns (uint256);\n}\n\n\n\n\n\n\n\n\ncontract TokenRetriever is Owned {\n    function TokenRetriever()\n        internal\n    {\n    }\n\n    /// @dev Failsafe mechanism - Allows owner to retrieve tokens from the contract\n    /// @param _token The address of ERC20 compatible token\n    function retrieveTokens(IToken _token)\n        public\n        onlyOwner\n    {\n        uint256 tokenBalance = _token.balanceOf(this);\n        if (tokenBalance > 0) {\n            _token.transfer(owner, tokenBalance);\n        }\n    }\n}\n\n\n\n\n\n\n/// @title Math operations with safety checks\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint256 c = a * b;\n        require(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        require(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        require(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n\n    function min256(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        return a < b ? a : b;\n    }\n}\n\n\n// solhint-disable no-simple-event-func-name\n\n// ERC20 Standard Token implementation\ncontract ERC20Token is BaseContract {\n    using SafeMath for uint256;\n\n    string public name = \"\";\n    string public symbol = \"\";\n    uint8 public decimals = 0;\n    uint256 public totalSupply = 0;\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    /// @dev constructor\n    /// @param _name        token name\n    /// @param _symbol      token symbol\n    /// @param _decimals    decimal points, for display purposes\n    function ERC20Token(string _name, string _symbol, uint8 _decimals)\n        internal\n        validString(_name)\n        validString(_symbol)\n    {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n    }\n\n    /// @dev send coins\n    /// throws on any error rather then return a false flag to minimize user errors\n    /// @param _to      target address\n    /// @param _value   transfer amount\n    /// @return true if the transfer was successful, false if it wasn't\n    function transfer(address _to, uint256 _value)\n        public\n        validParamData(2)\n        validAddress(_to)\n        notThis(_to)\n        returns (bool success)\n    {\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\n        balanceOf[_to] = balanceOf[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /// @dev an account/contract attempts to get the coins\n    /// throws on any error rather then return a false flag to minimize user errors\n    /// @param _from    source address\n    /// @param _to      target address\n    /// @param _value   transfer amount\n    /// @return true if the transfer was successful, false if it wasn't\n    function transferFrom(address _from, address _to, uint256 _value)\n        public\n        validParamData(3)\n        validAddress(_from)\n        validAddress(_to)\n        notThis(_to)\n        returns (bool success)\n    {\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\n        balanceOf[_from] = balanceOf[_from].sub(_value);\n        balanceOf[_to] = balanceOf[_to].add(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /// @dev allow another account/contract to spend some tokens on your behalf\n    /// throws on any error rather then return a false flag to minimize user errors\n    /// also, to minimize the risk of the approve/transferFrom attack vector\n    /// (see https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/)\n    /// approve has to be called twice in 2 separate transactions\n    /// once to change the allowance to 0 and secondly to change it to the new allowance value\n    /// @param _spender approved address\n    /// @param _value   allowance amount\n    /// @return true if the approval was successful, false if it wasn't\n    function approve(address _spender, uint256 _value)\n        public\n        validParamData(2)\n        validAddress(_spender)\n        onlyIf(_value == 0 || allowance[msg.sender][_spender] == 0)\n        returns (bool success)\n    {\n        uint256 currentAllowance = allowance[msg.sender][_spender];\n\n        return changeApprovalCore(_spender, currentAllowance, _value);\n    }\n\n    /// @dev Allow another account/contract to spend some tokens on your behalf\n    /// Note: This method is protected against the approve/transferFrom attack vector\n    /// (see https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/)\n    /// because the previous value and new value must both be specified.\n    function changeApproval(address _spender, uint256 _previousValue, uint256 _value)\n        public\n        validParamData(3)\n        validAddress(_spender)\n        returns (bool success)\n    {\n        return changeApprovalCore(_spender, _previousValue, _value);\n    }\n\n    function changeApprovalCore(address _spender, uint256 _previousValue, uint256 _value)\n        private\n        onlyIf(allowance[msg.sender][_spender] == _previousValue)\n        returns (bool success)\n    {\n        allowance[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n\n        return true;\n    }\n}\n\n\n\n\n\n\ncontract XBPToken is BaseContract, Owned, TokenRetriever, ERC20Token {\n    using SafeMath for uint256;\n\n    bool public issuanceEnabled = true;\n\n    event Issuance(uint256 _amount);\n\n    function XBPToken()\n        public\n        ERC20Token(\"BlitzPredict\", \"XBP\", 18)\n    {\n    }\n\n    /// @dev disables/enables token issuance\n    /// can only be called by the contract owner\n    function disableIssuance()\n        public\n        onlyOwner\n        onlyIf(issuanceEnabled)\n    {\n        issuanceEnabled = false;\n    }\n\n    /// @dev increases the token supply and sends the new tokens to an account\n    /// can only be called by the contract owner\n    /// @param _to         account to receive the new amount\n    /// @param _amount     amount to increase the supply by\n    function issue(address _to, uint256 _amount)\n        public\n        onlyOwner\n        validParamData(2)\n        validAddress(_to)\n        onlyIf(issuanceEnabled)\n        notThis(_to)\n    {\n        totalSupply = totalSupply.add(_amount);\n        balanceOf[_to] = balanceOf[_to].add(_amount);\n\n        Issuance(_amount);\n        Transfer(this, _to, _amount);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_previousValue\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"changeApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issuanceEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"retrieveTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableIssuance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Issuance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}]",
  "bytecode": "606060405260206040519081016040526000815260029080516200002892916020019062000169565b5060206040519081016040526000815260039080516200004d92916020019062000169565b506004805460ff19908116909155600060055560088054909116600117905534156200007857600080fd5b604080519081016040908152600c82527f426c69747a50726564696374000000000000000000000000000000000000000060208301528051908101604052600381527f5842500000000000000000000000000000000000000000000000000000000000602082015260008054600160a060020a03191633600160a060020a031617815560129083908151116200010d57600080fd5b8260008151116200011d57600080fd5b60028580516200013292916020019062000169565b5060038480516200014892916020019062000169565b50506004805460ff191660ff9390931692909217909155506200020e915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001ac57805160ff1916838001178555620001dc565b82800160010185558215620001dc579182015b82811115620001dc578251825591602001919060010190620001bf565b50620001ea929150620001ee565b5090565b6200020b91905b80821115620001ea5760008155600101620001f5565b90565b610d18806200021e6000396000f3006060604052600436106100e25763ffffffff60e060020a60003504166306fdde0381146100e7578063095ea7b31461017157806318160ddd146101a757806323b872dd146101cc578063313ce567146101f457806370a082311461021d57806379ba50971461023c578063867904b4146102515780638da5cb5b146102735780639281cd65146102a257806395d89b41146102c7578063a8590135146102da578063a9059cbb146102ed578063ac4ddd9f1461030f578063d4ee1d901461032e578063dd62ed3e14610341578063f2fde38b14610366578063f76bd7d114610385575b600080fd5b34156100f257600080fd5b6100fa610398565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561013657808201518382015260200161011e565b50505050905090810190601f1680156101635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017c57600080fd5b610193600160a060020a0360043516602435610436565b604051901515815260200160405180910390f35b34156101b257600080fd5b6101ba6104d9565b60405190815260200160405180910390f35b34156101d757600080fd5b610193600160a060020a03600435811690602435166044356104df565b34156101ff57600080fd5b610207610657565b60405160ff909116815260200160405180910390f35b341561022857600080fd5b6101ba600160a060020a0360043516610660565b341561024757600080fd5b61024f610672565b005b341561025c57600080fd5b61024f600160a060020a0360043516602435610702565b341561027e57600080fd5b610286610856565b604051600160a060020a03909116815260200160405180910390f35b34156102ad57600080fd5b610193600160a060020a0360043516602435604435610865565b34156102d257600080fd5b6100fa6108a2565b34156102e557600080fd5b61019361090d565b34156102f857600080fd5b610193600160a060020a0360043516602435610916565b341561031a57600080fd5b61024f600160a060020a0360043516610a22565b341561033957600080fd5b610286610b40565b341561034c57600080fd5b6101ba600160a060020a0360043581169060243516610b4f565b341561037157600080fd5b61024f600160a060020a0360043516610b6c565b341561039057600080fd5b61024f610be5565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561042e5780601f106104035761010080835404028352916020019161042e565b820191906000526020600020905b81548152906001019060200180831161041157829003601f168201915b505050505081565b60008060026044368190101561044857fe5b85600160a060020a038116151561045e57600080fd5b85158061048e5750600160a060020a033381166000908152600760209081526040808320938b1683529290522054155b80151561049a57600080fd5b600160a060020a033381166000908152600760209081526040808320938c168352929052205494506104cd888689610c1f565b98975050505050505050565b60055481565b60006003606436819010156104f057fe5b85600160a060020a038116151561050657600080fd5b85600160a060020a038116151561051c57600080fd5b8630600160a060020a031681600160a060020a03161415151561053e57600080fd5b600160a060020a03808a1660009081526007602090815260408083203390941683529290522054610575908863ffffffff610cbe16565b600160a060020a03808b1660008181526007602090815260408083203390951683529381528382209490945590815260069092529020546105bc908863ffffffff610cbe16565b600160a060020a03808b1660009081526006602052604080822093909355908a16815220546105f1908863ffffffff610cd316565b600160a060020a03808a16600081815260066020526040908190209390935591908b16907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908a905190815260200160405180910390a350600198975050505050505050565b60045460ff1681565b60066020526000908152604090205481565b60015433600160a060020a039081169116148061068e57600080fd5b600154600054600160a060020a0391821691167f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a60405160405180910390a350600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b60005433600160a060020a0390811691161461071d57600080fd5b60026044368190101561072c57fe5b83600160a060020a038116151561074257600080fd5b60085460ff1680151561075457600080fd5b8530600160a060020a031681600160a060020a03161415151561077657600080fd5b600554610789908763ffffffff610cd316565b600555600160a060020a0387166000908152600660205260409020546107b5908763ffffffff610cd316565b600160a060020a03881660009081526006602052604090819020919091557f9386c90217c323f58030f9dadcbc938f807a940f4ff41cd4cead9562f5da7dc39087905190815260200160405180910390a186600160a060020a031630600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8860405190815260200160405180910390a350505050505050565b600054600160a060020a031681565b600060036064368190101561087657fe5b85600160a060020a038116151561088c57600080fd5b610897878787610c1f565b979650505050505050565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561042e5780601f106104035761010080835404028352916020019161042e565b60085460ff1681565b600060026044368190101561092757fe5b84600160a060020a038116151561093d57600080fd5b8530600160a060020a031681600160a060020a03161415151561095f57600080fd5b600160a060020a033316600090815260066020526040902054610988908763ffffffff610cbe16565b600160a060020a0333811660009081526006602052604080822093909355908916815220546109bd908763ffffffff610cd316565b600160a060020a0380891660008181526006602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9089905190815260200160405180910390a35060019695505050505050565b6000805433600160a060020a03908116911614610a3e57600080fd5b81600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610a9557600080fd5b6102c65a03f11515610aa657600080fd5b50505060405180519150506000811115610b3c5760008054600160a060020a038085169263a9059cbb929091169084906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610b2057600080fd5b6102c65a03f11515610b3157600080fd5b505050604051805150505b5050565b600154600160a060020a031681565b600760209081526000928352604080842090915290825290205481565b600160243681901015610b7b57fe5b60005433600160a060020a03908116911614610b9657600080fd5b600054600160a060020a038481169116141580610bb257600080fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03939093169290921790915550565b60005433600160a060020a03908116911614610c0057600080fd5b60085460ff16801515610c1257600080fd5b506008805460ff19169055565b600160a060020a033381166000908152600760209081526040808320938716835292905290812054831480610c5357600080fd5b600160a060020a033381166000818152600760209081526040808320948a1680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a3506001949350505050565b600082821115610ccd57600080fd5b50900390565b600082820183811015610ce557600080fd5b93925050505600a165627a7a72305820b4ebb5018ed11f59fd2f0fe0d98b1503559e1dd71d07ea2a7fd3c7d216019ffb0029"
}