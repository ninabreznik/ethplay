{
  "address": "0xd6107c04f9045c6b0d54615e09d7adfdb4c1c3d8",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "FAMELINK",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-31\n*/\n\npragma solidity 0.4.18;\n/**\n * 一个简单的代币合约。\n */\n contract FAMELINK{\n\n     string public name; //代币名称\n     string public symbol; //代币符号比如'$'\n     uint8 public decimals = 18;  //代币单位，展示的小数点后面多少个0,和以太币一样后面是是18个0\n     uint256 public totalSupply; //代币总量\n     /* This creates an array with all balances */\n     mapping (address => uint256) public balanceOf;\n\n     event Transfer(address indexed from, address indexed to, uint256 value);  //转帐通知事件\n\n\n     /* 初始化合约，并且把初始的所有代币都给这合约的创建者\n      * @param _owned 合约的管理者\n      * @param tokenName 代币名称\n      * @param tokenSymbol 代币符号\n      */\n     function FAMELINK(uint256 initialSupply,address _owned, string tokenName, string tokenSymbol) public{\n          totalSupply = initialSupply * 10 ** uint256(decimals);  // 用小数位来初始化总量\n         //合约的管理者获得的代币总量\n         balanceOf[_owned] = totalSupply;\n         name = tokenName;\n         symbol = tokenSymbol;\n\n     }\n     \n\n     /**\n      * 转帐，具体可以根据自己的需求来实现\n      * @param  _to address 接受代币的地址\n      * @param  _value uint256 接受代币的数量\n      */\n     function transfer(address _to, uint256 _value) public{\n       //从发送者减掉发送额\n       balanceOf[msg.sender] -= _value;\n\n       //给接收者加上相同的量\n       balanceOf[_to] += _value;\n\n       //通知任何监听该交易的客户端\n       Transfer(msg.sender, _to, _value);\n     }\n\n\n  }",
  "bytecode": "60606040526002805460ff19166012179055341561001c57600080fd5b6040516104e33803806104e383398101604052808051919060200180519190602001805182019190602001805160025460ff16600a0a86026003819055600160a060020a038616600090815260046020526040812091909155920191905082805161008b9291602001906100a9565b50600181805161009f9291602001906100a9565b5050505050610144565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100ea57805160ff1916838001178555610117565b82800160010185558215610117579182015b828111156101175782518255916020019190600101906100fc565b50610123929150610127565b5090565b61014191905b80821115610123576000815560010161012d565b90565b610390806101536000396000f3006060604052600436106100775763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461007c57806318160ddd14610106578063313ce5671461012b57806370a082311461015457806395d89b4114610180578063a9059cbb14610193575b600080fd5b341561008757600080fd5b61008f6101c4565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100cb5780820151838201526020016100b3565b50505050905090810190601f1680156100f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561011157600080fd5b610119610262565b60405190815260200160405180910390f35b341561013657600080fd5b61013e610268565b60405160ff909116815260200160405180910390f35b341561015f57600080fd5b61011973ffffffffffffffffffffffffffffffffffffffff60043516610271565b341561018b57600080fd5b61008f610283565b341561019e57600080fd5b6101c273ffffffffffffffffffffffffffffffffffffffff600435166024356102ee565b005b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561025a5780601f1061022f5761010080835404028352916020019161025a565b820191906000526020600020905b81548152906001019060200180831161023d57829003601f168201915b505050505081565b60035481565b60025460ff1681565b60046020526000908152604090205481565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561025a5780601f1061022f5761010080835404028352916020019161025a565b73ffffffffffffffffffffffffffffffffffffffff3381166000818152600460205260408082208054869003905592851680825290839020805485019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a350505600a165627a7a72305820e27d31fa8eba705113105660e746412a2afccd1b8247f22ec8edaa73220dc19d002900000000000000000000000000000000000000000000000000000001c4fecc0000000000000000000000000091f49b23f1e2babed9f4ee9b8beae66e0b66b863000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000846414d454c494e4b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000446414d4500000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "00000000000000000000000000000000000000000000000000000001c4fecc0000000000000000000000000091f49b23f1e2babed9f4ee9b8beae66e0b66b863000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000846414d454c494e4b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000446414d4500000000000000000000000000000000000000000000000000000000"
}