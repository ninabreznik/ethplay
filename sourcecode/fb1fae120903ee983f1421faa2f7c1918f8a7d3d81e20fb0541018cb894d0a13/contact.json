{
  "address": "0x29c9e65e9e976bbd18721f942e90c2089a931221",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "IWAY",
  "compilerVersion": "v0.5.2+commit.1df8f40c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-25\n*/\n\npragma solidity ^0.5.2;\n\ninterface IERC20 {\n  function totalSupply() external view returns (uint256);\n\n  function balanceOf(address who) external view returns (uint256);\n\n  function allowance(address owner, address spender)\n    external view returns (uint256);\n\n  function transfer(address to, uint256 value) external returns (bool);\n\n  function approve(address spender, uint256 value)\n    external returns (bool);\n\n  function transferFrom(address from, address to, uint256 value)\n    external returns (bool);\n\n  event Transfer(\n    address indexed from,\n    address indexed to,\n    uint256 value\n  );\n\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, reverts on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b);\n\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b > 0); // Solidity only automatically asserts when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n  * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n  * @dev Adds two numbers, reverts on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a);\n\n    return c;\n  }\n\n  /**\n  * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\n  * reverts when dividing by zero.\n  */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0);\n    return a % b;\n  }\n}\n\ncontract Owned {\n    address public owner;\n    address public newOwner;\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        owner = newOwner;\n    }\n}\n\ncontract IWAY is IERC20, Owned {\n    using SafeMath for uint256;\n    \n    // Constructor - Sets the token Owner\n    constructor() public {\n        owner = 0x95cc7e685De21Fd004778A241EcC3DEEE93321f7;\n        _balances[0x95cc7e685De21Fd004778A241EcC3DEEE93321f7] = supply;\n        emit Transfer(address(0), owner, supply);\n    }\n    \n    // Token Setup\n    string public constant name = \"InfluWay\";\n    string public constant symbol = \"IWAY\";\n    uint256 public constant decimals = 8;\n    uint256 public supply = 1500000000 * 10 ** decimals;\n    \n    // Balances for each account\n    mapping(address => uint256) _balances;\n \n    // Owner of account approves the transfer of an amount to another account\n    mapping(address => mapping (address => uint256)) public _allowed;\n \n    // Get the total supply of tokens\n    function totalSupply() public view returns (uint) {\n        return supply;\n    }\n \n    // Get the token balance for account `tokenOwner`\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\n        return _balances[tokenOwner];\n    }\n \n    // Get the allowance of funds beteen a token holder and a spender\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\n        return _allowed[tokenOwner][spender];\n    }\n \n    // Transfer the balance from owner's account to another account\n    function transfer(address to, uint value) public returns (bool success) {\n        require(_balances[msg.sender] >= value);\n        require(to != address(this));\n        _balances[msg.sender] = _balances[msg.sender].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n    \n    // Sets how much a sender is allowed to use of an owners funds\n    function approve(address spender, uint value) public returns (bool success) {\n        _allowed[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n    \n    // Transfer from function, pulls from allowance\n    function transferFrom(address from, address to, uint value) public returns (bool success) {\n        require(to != address(this));\n        require(value <= balanceOf(from));\n        require(value <= allowance(from, to));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        _allowed[from][to] = _allowed[from][to].sub(value);\n        emit Transfer(from, to, value);\n        return true;\n    }\n    \n    // No acidental ETH transfers to the contract.\n    function () external payable {\n        revert();\n    }\n    \n    // Mint\n    function mint(address to, uint256 value) public onlyOwner {\n        _balances[to] = _balances[to].add(value);\n        supply = supply.add(value);\n        emit Transfer(address(0), to, value);\n    }\n    \n    // Burn\n    function burn(address from, uint256 value) public onlyOwner {\n        require(_balances[from] <= value);\n        _balances[from] = _balances[from].sub(value);\n        supply = supply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "6080604052670214e8348c4f000060025534801561001c57600080fd5b5060008054600160a060020a0319167395cc7e685de21fd004778a241ecc3deee93321f7908117808355600254918352600360209081527fbdacdb19f8fc932017fa5c4b12caec14758c96ccfecf9d113e04655d4d31be778390556040805193845251600160a060020a039290921693927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3610a6a806100c76000396000f3fe60806040526004361061011b576000357c01000000000000000000000000000000000000000000000000000000009004806379ba5097116100b2578063a9059cbb11610081578063a9059cbb1461038d578063ba0fb861146103c6578063d4ee1d9014610401578063dd62ed3e14610416578063f2fde38b146104515761011b565b806379ba5097146102f95780638da5cb5b1461030e57806395d89b411461033f5780639dc29fac146103545761011b565b806323b872dd116100ee57806323b872dd14610233578063313ce5671461027657806340c10f191461028b57806370a08231146102c65761011b565b8063047fc9aa1461012057806306fdde0314610147578063095ea7b3146101d157806318160ddd1461021e575b600080fd5b34801561012c57600080fd5b50610135610484565b60408051918252519081900360200190f35b34801561015357600080fd5b5061015c61048a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019657818101518382015260200161017e565b50505050905090810190601f1680156101c35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101dd57600080fd5b5061020a600480360360408110156101f457600080fd5b50600160a060020a0381351690602001356104c1565b604080519115158252519081900360200190f35b34801561022a57600080fd5b50610135610527565b34801561023f57600080fd5b5061020a6004803603606081101561025657600080fd5b50600160a060020a0381358116916020810135909116906040013561052d565b34801561028257600080fd5b5061013561066c565b34801561029757600080fd5b506102c4600480360360408110156102ae57600080fd5b50600160a060020a038135169060200135610671565b005b3480156102d257600080fd5b50610135600480360360208110156102e957600080fd5b5035600160a060020a0316610713565b34801561030557600080fd5b506102c461072e565b34801561031a57600080fd5b50610323610776565b60408051600160a060020a039092168252519081900360200190f35b34801561034b57600080fd5b5061015c610785565b34801561036057600080fd5b506102c46004803603604081101561037757600080fd5b50600160a060020a0381351690602001356107bc565b34801561039957600080fd5b5061020a600480360360408110156103b057600080fd5b50600160a060020a038135169060200135610883565b3480156103d257600080fd5b50610135600480360360408110156103e957600080fd5b50600160a060020a0381358116916020013516610953565b34801561040d57600080fd5b50610323610970565b34801561042257600080fd5b506101356004803603604081101561043957600080fd5b50600160a060020a038135811691602001351661097f565b34801561045d57600080fd5b506102c46004803603602081101561047457600080fd5b5035600160a060020a03166109aa565b60025481565b60408051808201909152600881527f496e666c75576179000000000000000000000000000000000000000000000000602082015281565b336000818152600460209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60025490565b6000600160a060020a03831630141561054557600080fd5b61054e84610713565b82111561055a57600080fd5b610564848461097f565b82111561057057600080fd5b600160a060020a038416600090815260036020526040902054610599908363ffffffff6109f016565b600160a060020a0380861660009081526003602052604080822093909355908516815220546105ce908363ffffffff610a0516565b600160a060020a0380851660008181526003602090815260408083209590955592881681526004835283812091815291522054610611908363ffffffff6109f016565b600160a060020a03808616600081815260046020908152604080832094891680845294825291829020949094558051868152905192939192600080516020610a1f833981519152929181900390910190a35060019392505050565b600881565b600054600160a060020a0316331461068857600080fd5b600160a060020a0382166000908152600360205260409020546106b1908263ffffffff610a0516565b600160a060020a0383166000908152600360205260409020556002546106dd908263ffffffff610a0516565b600255604080518281529051600160a060020a03841691600091600080516020610a1f8339815191529181900360200190a35050565b600160a060020a031660009081526003602052604090205490565b600154600160a060020a0316331461074557600080fd5b6001546000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b600054600160a060020a031681565b60408051808201909152600481527f4957415900000000000000000000000000000000000000000000000000000000602082015281565b600054600160a060020a031633146107d357600080fd5b600160a060020a0382166000908152600360205260409020548110156107f857600080fd5b600160a060020a038216600090815260036020526040902054610821908263ffffffff6109f016565b600160a060020a03831660009081526003602052604090205560025461084d908263ffffffff6109f016565b600255604080518281529051600091600160a060020a03851691600080516020610a1f8339815191529181900360200190a35050565b3360009081526003602052604081205482111561089f57600080fd5b600160a060020a0383163014156108b557600080fd5b336000908152600360205260409020546108d5908363ffffffff6109f016565b3360009081526003602052604080822092909255600160a060020a03851681522054610907908363ffffffff610a0516565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191923392600080516020610a1f8339815191529281900390910190a350600192915050565b600460209081526000928352604080842090915290825290205481565b600154600160a060020a031681565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205490565b600054600160a060020a031633146109c157600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000828211156109ff57600080fd5b50900390565b600082820183811015610a1757600080fd5b939250505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582093a58580630c6a86ad50da38ddd24d6d38bffd85787461d75ea7c682127843350029"
}