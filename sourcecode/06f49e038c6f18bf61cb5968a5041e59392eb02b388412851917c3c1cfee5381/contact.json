{
  "address": "0x9b8c184439245b7bb24a5b2ec51ec81c39589e8a",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "KIMEX Token",
  "contractName": "KIMEX",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-29\n*/\n\npragma solidity ^0.4.21;\n\n\ncontract Owner {\n    address public owner;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function Owner(address _owner) public {\n        owner = _owner;\n    }\n\n    function changeOwner(address _newOwnerAddr) public onlyOwner {\n        require(_newOwnerAddr != address(0));\n        owner = _newOwnerAddr;\n    }\n}\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    /**\n    * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n\ncontract KIMEX is Owner {\n    using SafeMath for uint256;\n\n    string public constant name = \"KIMEX\";\n    string public constant symbol = \"KMX\";\n    uint public constant decimals = 18;\n    uint256 constant public totalSupply = 250000000 * 10 ** 18; // 375 mil tokens will be supplied\n  \n    mapping(address => uint256) internal balances;\n    mapping(address => mapping (address => uint256)) internal allowed;\n\n    address public adminAddress;\n    address public walletAddress;\n    address public founderAddress;\n    address public teamAddress;\n\n    mapping(address => bool) public whiteList;\n    mapping(address => uint256) public totalInvestedAmountOf;\n\n    uint constant lockPeriod1 = 1 years; // 1nd locked period for tokens allocation of founder and team\n   \n    uint constant NOT_SALE = 0; // Not in sales\n    uint constant IN_SALE = 1;  // In sales\n    uint constant END_SALE = 2; // End sales\n\n    uint256 public constant salesAllocation = 150000000 * 10 ** 18; // 150 mil tokens allocated for sales\n    uint256 public constant reservedAllocation = 22500000 * 10 ** 18; // 22.5 mil tokens allocated for reserved, bounty campaigns, ICO partners, and bonus fund\n    uint256 public constant founderAllocation = 50000000 * 10 ** 18; // 50 mil tokens allocated for founders\n    uint256 public constant teamAllocation = 22500000 * 10 ** 18; // 22.5 mil tokens allocated for team\n    uint256 public constant minInvestedCap = 5000 * 10 ** 18; // 5000 ether for softcap \n    uint256 public constant minInvestedAmount = 0.1 * 10 ** 18; // 0.1 ether for mininum ether contribution per transaction\n    \n    uint saleState;\n    uint256 totalInvestedAmount;\n    uint public icoStartTime;\n    uint public icoEndTime;\n    bool public inActive;\n    bool public isSelling;\n    bool public isTransferable;\n    uint public founderAllocatedTime = 1;\n    uint public teamAllocatedTime = 1;\n    uint256 public icoStandardPrice;\n \n    uint256 public totalRemainingTokensForSales; // Total tokens remaining for sales\n    uint256 public totalReservedTokenAllocation; // Total tokens allocated for reserved and bonuses\n    uint256 public totalLoadedRefund; // Total ether will be loaded to contract for refund\n    uint256 public totalRefundedAmount; // Total ether refunded to investors\n\n    event Approval(address indexed owner, address indexed spender, uint256 value); // ERC20 standard event\n    event Transfer(address indexed from, address indexed to, uint256 value); // ERC20 standard event\n\n    event ModifyWhiteList(address investorAddress, bool isWhiteListed);  // Add or remove investor's address to or from white list\n    event StartICO(uint state); // Start ICO sales\n    event EndICO(uint state); // End ICO sales\n    \n    event SetICOPrice(uint256 price); // Set ICO standard price\n    \n    \n    event IssueTokens(address investorAddress, uint256 amount, uint256 tokenAmount, uint state); // Issue tokens to investor\n    event AllocateTokensForFounder(address founderAddress, uint256 founderAllocatedTime, uint256 tokenAmount); // Allocate tokens to founders' address\n    event AllocateTokensForTeam(address teamAddress, uint256 teamAllocatedTime, uint256 tokenAmount); // Allocate tokens to team's address\n    event AllocateReservedTokens(address reservedAddress, uint256 tokenAmount); // Allocate reserved tokens\n    event AllocateSalesTokens(address salesAllocation, uint256 tokenAmount); // Allocate sales tokens\n    \n\n    modifier isActive() {\n        require(inActive == false);\n        _;\n    }\n\n    modifier isInSale() {\n        require(isSelling == true);\n        _;\n    }\n\n    modifier transferable() {\n        require(isTransferable == true);\n        _;\n    }\n\n    modifier onlyOwnerOrAdminOrPortal() {\n        require(msg.sender == owner || msg.sender == adminAddress);\n        _;\n    }\n\n    modifier onlyOwnerOrAdmin() {\n        require(msg.sender == owner || msg.sender == adminAddress);\n        _;\n    }\n\n    function KIMEX(address _walletAddr, address _adminAddr) public Owner(msg.sender) {\n        require(_walletAddr != address(0));\n        require(_adminAddr != address(0));\n\t\t\n        walletAddress = _walletAddr;\n        adminAddress = _adminAddr;\n        inActive = true;\n        totalInvestedAmount = 0;\n        totalRemainingTokensForSales = salesAllocation;\n        totalReservedTokenAllocation = reservedAllocation;\n    }\n\n    // Fallback function for token purchasing  \n    function () external payable isActive isInSale {\n        uint state = getCurrentState();\n        require(state < END_SALE);\n        require(msg.value >= minInvestedAmount);\n       \n        if (state <= IN_SALE) {\n            return issueTokensForICO(state);\n        }\n        revert();\n    }\n\n    // Load ether amount to contract for refunding or revoking\n    function loadFund() external payable {\n        require(msg.value > 0);\n\t\t\n        totalLoadedRefund = totalLoadedRefund.add(msg.value);\n    }\n\n    // ERC20 standard function\n    function transfer(address _to, uint256 _value) external transferable returns (bool) {\n        require(_to != address(0));\n        require(_value > 0);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    // ERC20 standard function\n    function transferFrom(address _from, address _to, uint256 _value) external transferable returns (bool) {\n        require(_to != address(0));\n        require(_from != address(0));\n        require(_value > 0);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    // ERC20 standard function\n    function approve(address _spender, uint256 _value) external transferable returns (bool) {\n        require(_spender != address(0));\n        require(_value > 0);\n\t\t\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    // Modify white list\n    function modifyWhiteList(address[] _investorAddrs, bool _isWhiteListed) external isActive onlyOwnerOrAdminOrPortal returns(bool) {\n        for (uint256 i = 0; i < _investorAddrs.length; i++) {\n            whiteList[_investorAddrs[i]] = _isWhiteListed;\n            emit ModifyWhiteList(_investorAddrs[i], _isWhiteListed);\n        }\n        return true;\n    }\n\n    // Start ICO\n    function startICO() external isActive onlyOwnerOrAdmin returns (bool) {\n        require(icoStandardPrice > 0);\n        saleState = IN_SALE;\n        icoStartTime = now;\n        isSelling = true;\n        emit StartICO(saleState);\n        return true;\n    }\n\n    // End ICO\n    function endICO() external isActive onlyOwnerOrAdmin returns (bool) {\n        require(icoEndTime == 0);\n\t\t\n        saleState = END_SALE;\n        isSelling = false;\n        icoEndTime = now;\n        emit EndICO(saleState);\n        return true;\n    }\n    \n    // Set ICO price including ICO standard price\n    function setICOPrice(uint256 _tokenPerEther) external onlyOwnerOrAdmin returns(bool) {\n        require(_tokenPerEther > 0);\n    \t\t\n        icoStandardPrice = _tokenPerEther;\n        emit SetICOPrice(icoStandardPrice);\n        return true;\n    }\n    // Activate token sale function\n    function activate() external onlyOwner {\n        inActive = false;\n    }\n\n    // Deacivate token sale function\n    function deActivate() external onlyOwner {\n        inActive = true;\n    }\n\n    // Enable transfer feature of tokens\n    function enableTokenTransfer() external isActive onlyOwner {\n        isTransferable = true;\n    }\n\n    // Modify wallet\n    function changeWallet(address _newAddress) external onlyOwner {\n        require(_newAddress != address(0));\n        require(walletAddress != _newAddress);\n        walletAddress = _newAddress;\n    }\n\n    // Modify admin\n    function changeAdminAddress(address _newAddress) external onlyOwner {\n        require(_newAddress != address(0));\n        require(adminAddress != _newAddress);\n        adminAddress = _newAddress;\n    }\n  \n    // Modify founder address to receive founder tokens allocation\n    function changeFounderAddress(address _newAddress) external onlyOwnerOrAdmin {\n        require(_newAddress != address(0));\n        require(founderAddress != _newAddress);\n        founderAddress = _newAddress;\n    }\n\n    // Modify team address to receive team tokens allocation\n    function changeTeamAddress(address _newAddress) external onlyOwnerOrAdmin {\n        require(_newAddress != address(0));\n        require(teamAddress != _newAddress);\n        teamAddress = _newAddress;\n    }\n\n    // Allocate tokens for founder vested gradually for 1 year\n    function allocateTokensForFounder() external isActive onlyOwnerOrAdmin {\n        require(saleState == END_SALE);\n        require(founderAddress != address(0));\n        uint256 amount;\n        if (founderAllocatedTime == 1) {\n            amount = founderAllocation;\n            balances[founderAddress] = balances[founderAddress].add(amount);\n            emit AllocateTokensForFounder(founderAddress, founderAllocatedTime, amount);\n            founderAllocatedTime = 2;\n            return;\n        }\n        revert();\n    }\n\n    // Allocate tokens for team vested gradually for 1 year\n    function allocateTokensForTeam() external isActive onlyOwnerOrAdmin {\n        require(saleState == END_SALE);\n        require(teamAddress != address(0));\n        uint256 amount;\n        if (teamAllocatedTime == 1) {\n            amount = teamAllocation * 40/100;\n            balances[teamAddress] = balances[teamAddress].add(amount);\n            emit AllocateTokensForTeam(teamAddress, teamAllocatedTime, amount);\n            teamAllocatedTime = 2;\n            return;\n        }\n        if (teamAllocatedTime == 2) {\n            require(now >= icoEndTime + lockPeriod1);\n            amount = teamAllocation * 60/100;\n            balances[teamAddress] = balances[teamAddress].add(amount);\n            emit AllocateTokensForTeam(teamAddress, teamAllocatedTime, amount);\n            teamAllocatedTime = 3;\n            return;\n        }\n        revert();\n    }\n\n    // Allocate reserved tokens\n    function allocateReservedTokens(address _addr, uint _amount) external isActive onlyOwnerOrAdmin {\n        require(_amount > 0);\n        require(_addr != address(0));\n\t\t\n        balances[_addr] = balances[_addr].add(_amount);\n        totalReservedTokenAllocation = totalReservedTokenAllocation.sub(_amount);\n        emit AllocateReservedTokens(_addr, _amount);\n    }\n    \n    // Allocate sales tokens\n    function allocateSalesTokens(address _addr, uint _amount) external isActive onlyOwnerOrAdmin {\n        require(_amount > 0);\n        require(_addr != address(0));\n\t\t\n        balances[_addr] = balances[_addr].add(_amount);\n        totalRemainingTokensForSales = totalRemainingTokensForSales.sub(_amount);\n        emit AllocateSalesTokens(_addr, _amount);\n    }\n\n    // ERC20 standard function\n    function allowance(address _owner, address _spender) external constant returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n\n    // ERC20 standard function\n    function balanceOf(address _owner) external constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    // Get current sales state\n    function getCurrentState() public view returns(uint256) {\n        return saleState;\n    }\n\n    // Get softcap reaching status\n    function isSoftCapReached() public view returns (bool) {\n        return totalInvestedAmount >= minInvestedCap;\n    }\n    \n     // Issue tokens to normal investors through ICO rounds\n    function issueTokensForICO(uint _state) private {\n        uint256 price = icoStandardPrice;\n        issueTokens(price, _state);\n    }\n\n    // Issue tokens to investors and transfer ether to wallet\n    function issueTokens(uint256 _price, uint _state) private {\n        require(walletAddress != address(0));\n\t\t\n        uint tokenAmount = msg.value.mul(_price).mul(10**18).div(1 ether);\n        balances[msg.sender] = balances[msg.sender].add(tokenAmount);\n        totalInvestedAmountOf[msg.sender] = totalInvestedAmountOf[msg.sender].add(msg.value);\n        totalRemainingTokensForSales = totalRemainingTokensForSales.sub(tokenAmount);\n        totalInvestedAmount = totalInvestedAmount.add(msg.value);\n        walletAddress.transfer(msg.value);\n        emit IssueTokens(msg.sender, msg.value, tokenAmount, _state);\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[],\"name\":\"loadFund\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reservedAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"activate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"changeAdminAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isTransferable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"changeFounderAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalReservedTokenAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenPerEther\",\"type\":\"uint256\"}],\"name\":\"setICOPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allocateSalesTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"salesAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableTokenTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"changeTeamAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalLoadedRefund\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endICO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allocateReservedTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateTokensForTeam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoStandardPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minInvestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"walletAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalInvestedAmountOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startICO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isSoftCapReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"changeWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwnerAddr\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRemainingTokensForSales\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investorAddrs\",\"type\":\"address[]\"},{\"name\":\"_isWhiteListed\",\"type\":\"bool\"}],\"name\":\"modifyWhiteList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isSelling\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRefundedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateTokensForFounder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocatedTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minInvestedCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamAllocatedTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"inActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deActivate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_walletAddr\",\"type\":\"address\"},{\"name\":\"_adminAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isWhiteListed\",\"type\":\"bool\"}],\"name\":\"ModifyWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"state\",\"type\":\"uint256\"}],\"name\":\"StartICO\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"state\",\"type\":\"uint256\"}],\"name\":\"EndICO\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"SetICOPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"uint256\"}],\"name\":\"IssueTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"founderAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"founderAllocatedTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"AllocateTokensForFounder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"teamAllocatedTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"AllocateTokensForTeam\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"reservedAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"AllocateReservedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"salesAllocation\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"AllocateSalesTokens\",\"type\":\"event\"}]",
  "bytecode": "60606040526001600e556001600f55341561001957600080fd5b6040516040806200385c8339810160405280805190602001909190805190602001909190505033806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156100bd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156100f957600080fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600d60006101000a81548160ff0219169083151502179055506000600a819055506a7c13bc4b2c133c560000006011819055506a129c8f71ad02e2a6800000601281905550505061368880620001d46000396000f30060606040526004361061027d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063011468441461031257806306fdde031461031c57806309522d7f146103aa578063095ea7b3146103d35780630f15f4c01461042d5780631021688f1461044257806318160ddd1461047b5780631c75f085146104a45780632121dc75146104f95780632272df6714610526578063230b1eb51461055f57806323b872dd1461058857806325b5160c146106015780632c8c892b1461063c578063313ce5671461067e5780633281c4e1146106a7578063372c12b1146106d0578063378aa701146107215780633a7644621461074a5780633aee69bb1461075f57806345abc0631461079857806346bb2833146107c15780634f248409146108165780635185b72414610843578063614939b2146108855780636175adee1461089a57806363db30e8146108c35780636816521a146108ec5780636ad5b3ea1461091557806370a082311461096a5780637904586e146109b75780637e1055b614610a045780637fa8c15814610a2d57806380d32f8514610a5a578063824338bd14610a875780638da5cb5b14610ab057806395d89b4114610b0557806398b9a2dc14610b93578063a6f9dae114610bcc578063a7c3d71b14610c05578063a9059cbb14610c2e578063aaff2a8314610c88578063cadb116614610cb1578063cbf2183714610d02578063cd1e035514610d2f578063d128fc2014610d58578063d8ee796f14610d6d578063dccbfa2a14610d96578063dd62ed3e14610dbf578063f461db0e14610e2b578063f97a02fa14610e54578063fc6f946814610e81578063ff895a6214610ed6575b6000801515600d60009054906101000a900460ff1615151415156102a057600080fd5b60011515600d60019054906101000a900460ff1615151415156102c257600080fd5b6102ca610eeb565b90506002811015156102db57600080fd5b67016345785d8a000034101515156102f257600080fd5b60018111151561030a5761030581610ef5565b61030f565b600080fd5b50005b61031a610f0a565b005b341561032757600080fd5b61032f610f36565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036f578082015181840152602081019050610354565b50505050905090810190601f16801561039c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103b557600080fd5b6103bd610f6f565b6040518082815260200191505060405180910390f35b34156103de57600080fd5b610413600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610f7e565b604051808215151515815260200191505060405180910390f35b341561043857600080fd5b6104406110dd565b005b341561044d57600080fd5b610479600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611155565b005b341561048657600080fd5b61048e61128d565b6040518082815260200191505060405180910390f35b34156104af57600080fd5b6104b761129c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561050457600080fd5b61050c6112c2565b604051808215151515815260200191505060405180910390f35b341561053157600080fd5b61055d600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506112d5565b005b341561056a57600080fd5b610572611465565b6040518082815260200191505060405180910390f35b341561059357600080fd5b6105e7600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061146b565b604051808215151515815260200191505060405180910390f35b341561060c57600080fd5b61062260048080359060200190919050506117bf565b604051808215151515815260200191505060405180910390f35b341561064757600080fd5b61067c600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506118cc565b005b341561068957600080fd5b610691611b0b565b6040518082815260200191505060405180910390f35b34156106b257600080fd5b6106ba611b10565b6040518082815260200191505060405180910390f35b34156106db57600080fd5b610707600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b1f565b604051808215151515815260200191505060405180910390f35b341561072c57600080fd5b610734610eeb565b6040518082815260200191505060405180910390f35b341561075557600080fd5b61075d611b3f565b005b341561076a57600080fd5b610796600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611bd9565b005b34156107a357600080fd5b6107ab611d69565b6040518082815260200191505060405180910390f35b34156107cc57600080fd5b6107d4611d6f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561082157600080fd5b610829611d95565b604051808215151515815260200191505060405180910390f35b341561084e57600080fd5b610883600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611ee6565b005b341561089057600080fd5b610898612125565b005b34156108a557600080fd5b6108ad6125d3565b6040518082815260200191505060405180910390f35b34156108ce57600080fd5b6108d66125d9565b6040518082815260200191505060405180910390f35b34156108f757600080fd5b6108ff6125e5565b6040518082815260200191505060405180910390f35b341561092057600080fd5b6109286125f4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561097557600080fd5b6109a1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061261a565b6040518082815260200191505060405180910390f35b34156109c257600080fd5b6109ee600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612663565b6040518082815260200191505060405180910390f35b3415610a0f57600080fd5b610a1761267b565b6040518082815260200191505060405180910390f35b3415610a3857600080fd5b610a40612681565b604051808215151515815260200191505060405180910390f35b3415610a6557600080fd5b610a6d6127d2565b604051808215151515815260200191505060405180910390f35b3415610a9257600080fd5b610a9a6127e9565b6040518082815260200191505060405180910390f35b3415610abb57600080fd5b610ac36127f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610b1057600080fd5b610b1861281d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b58578082015181840152602081019050610b3d565b50505050905090810190601f168015610b855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415610b9e57600080fd5b610bca600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612856565b005b3415610bd757600080fd5b610c03600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061298e565b005b3415610c1057600080fd5b610c18612a68565b6040518082815260200191505060405180910390f35b3415610c3957600080fd5b610c6e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612a6e565b604051808215151515815260200191505060405180910390f35b3415610c9357600080fd5b610c9b612c76565b6040518082815260200191505060405180910390f35b3415610cbc57600080fd5b610ce8600480803590602001908201803590602001919091929080351515906020019091905050612c7c565b604051808215151515815260200191505060405180910390f35b3415610d0d57600080fd5b610d15612e97565b604051808215151515815260200191505060405180910390f35b3415610d3a57600080fd5b610d42612eaa565b6040518082815260200191505060405180910390f35b3415610d6357600080fd5b610d6b612eb0565b005b3415610d7857600080fd5b610d80613193565b6040518082815260200191505060405180910390f35b3415610da157600080fd5b610da9613199565b6040518082815260200191505060405180910390f35b3415610dca57600080fd5b610e15600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506131a7565b6040518082815260200191505060405180910390f35b3415610e3657600080fd5b610e3e61322e565b6040518082815260200191505060405180910390f35b3415610e5f57600080fd5b610e67613234565b604051808215151515815260200191505060405180910390f35b3415610e8c57600080fd5b610e94613247565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610ee157600080fd5b610ee961326d565b005b6000600954905090565b60006010549050610f0681836132e5565b5050565b600034111515610f1957600080fd5b610f2e346013546135cf90919063ffffffff16565b601381905550565b6040805190810160405280600581526020017f4b494d455800000000000000000000000000000000000000000000000000000081525081565b6a129c8f71ad02e2a680000081565b600060011515600d60029054906101000a900460ff161515141515610fa257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610fde57600080fd5b600082111515610fed57600080fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561113857600080fd5b6000600d60006101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111b057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111ec57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561124957600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6acecb8f27f4200f3a00000081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d60029054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061137d5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561138857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156113c457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561142157600080fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60125481565b600060011515600d60029054906101000a900460ff16151514151561148f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156114cb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561150757600080fd5b60008211151561151657600080fd5b61156882600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135ed90919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115fd82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135cf90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506116cf82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135ed90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806118695750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561187457600080fd5b60008211151561188357600080fd5b816010819055507f1c1b18768492f25670993e4eaf1a7d17a8abe51d71b27bc5c1255e40d2d506a86010546040518082815260200191505060405180910390a160019050919050565b60001515600d60009054906101000a900460ff1615151415156118ee57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806119965750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156119a157600080fd5b6000811115156119b057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156119ec57600080fd5b611a3e81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135cf90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a96816011546135ed90919063ffffffff16565b6011819055507f5a0785f58719bca05bb9d76730d322e101b6c7c8bcc6da140a409947b003bbe78282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b601281565b6a7c13bc4b2c133c5600000081565b60076020528060005260406000206000915054906101000a900460ff1681565b60001515600d60009054906101000a900460ff161515141515611b6157600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611bbc57600080fd5b6001600d60026101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611c815750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611c8c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611cc857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611d2557600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60135481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000801515600d60009054906101000a900460ff161515141515611db857600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611e605750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611e6b57600080fd5b6000600c54141515611e7c57600080fd5b60026009819055506000600d60016101000a81548160ff02191690831515021790555042600c819055507fe4aa5e3f9012723c200a69efdcca855ae09af7d70992cc420cce249fee0e09996009546040518082815260200191505060405180910390a16001905090565b60001515600d60009054906101000a900460ff161515141515611f0857600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611fb05750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611fbb57600080fd5b600081111515611fca57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561200657600080fd5b61205881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135cf90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506120b0816012546135ed90919063ffffffff16565b6012819055507f47a75aa311e7576c9a07da850c14f42ffe2864978d7f025084839a75bdcbdac68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b6000801515600d60009054906101000a900460ff16151514151561214857600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806121f05750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156121fb57600080fd5b600260095414151561220c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561226a57600080fd5b6001600f54141561240f57606460286a129c8f71ad02e2a68000000281151561228f57fe5b0490506123068160016000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135cf90919063ffffffff16565b60016000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fab07e736c87d6dc8c0a3e05a92d1cfb93c6458b35d2e365490f8b7cc9776ec04600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600f5483604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a16002600f819055506125d0565b6002600f5414156125cb576301e13380600c5401421015151561243157600080fd5b6064603c6a129c8f71ad02e2a68000000281151561244b57fe5b0490506124c28160016000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135cf90919063ffffffff16565b60016000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fab07e736c87d6dc8c0a3e05a92d1cfb93c6458b35d2e365490f8b7cc9776ec04600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600f5483604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a16003600f819055506125d0565b600080fd5b50565b60105481565b67016345785d8a000081565b6a129c8f71ad02e2a680000081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60086020528060005260406000206000915090505481565b600c5481565b6000801515600d60009054906101000a900460ff1615151415156126a457600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061274c5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561275757600080fd5b600060105411151561276857600080fd5b600160098190555042600b819055506001600d60016101000a81548160ff0219169083151502179055507f87fcd7085eaabc2418e6a12ac5497cf18368bf4ad51215e24fd4782fa0c0ba576009546040518082815260200191505060405180910390a16001905090565b600069010f0cf064dd59200000600a541015905090565b6a295be96e6406697200000081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600381526020017f4b4d58000000000000000000000000000000000000000000000000000000000081525081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156128b157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156128ed57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561294a57600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156129e957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612a2557600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b5481565b600060011515600d60029054906101000a900460ff161515141515612a9257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612ace57600080fd5b600082111515612add57600080fd5b612b2f82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135ed90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612bc482600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135cf90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60115481565b60008060001515600d60009054906101000a900460ff161515141515612ca157600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480612d495750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515612d5457600080fd5b600090505b84849050811015612e8b5782600760008787858181101515612d7757fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507ffbd9b2cc58ba714cd80b8b0a1c8a6d313a1e20563cf72561feeee6d0d96769bd8585838181101515612e1457fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1684604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a18080600101915050612d59565b60019150509392505050565b600d60019054906101000a900460ff1681565b60145481565b6000801515600d60009054906101000a900460ff161515141515612ed357600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480612f7b5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515612f8657600080fd5b6002600954141515612f9757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515612ff557600080fd5b6001600e54141561318b576a295be96e6406697200000090506130828160016000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135cf90919063ffffffff16565b60016000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fa12320dea361e697cd0fb17d62af7c61880334f66c5b27d144602185281c0603600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e5483604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a16002600e81905550613190565b600080fd5b50565b600e5481565b69010f0cf064dd5920000081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600f5481565b600d60009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156132c857600080fd5b6001600d60006101000a81548160ff021916908315150217905550565b60008073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561334457600080fd5b61338b670de0b6b3a764000061337d670de0b6b3a764000061336f873461360690919063ffffffff16565b61360690919063ffffffff16565b61364190919063ffffffff16565b90506133df81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135cf90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061347434600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135cf90919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506134cc816011546135ed90919063ffffffff16565b6011819055506134e734600a546135cf90919063ffffffff16565b600a81905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050151561354f57600080fd5b7f540c6de47939116ec4410c0212b0ac3a69886bf8f558dc04fb1360f6ebfea89b33348385604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a1505050565b60008082840190508381101515156135e357fe5b8091505092915050565b60008282111515156135fb57fe5b818303905092915050565b600080600084141561361b576000915061363a565b828402905082848281151561362c57fe5b0414151561363657fe5b8091505b5092915050565b600080828481151561364f57fe5b04905080915050929150505600a165627a7a7230582070115fbe0f1fb59e260709461faa8f57ad1758a768e080e956aaee65ab52a72200290000000000000000000000007f17751fc1381f337ec67f3e6b02776ad079d31400000000000000000000000044922948f3bb63ae25a73043128feec8f514e33f",
  "constructorArguments": "0000000000000000000000007f17751fc1381f337ec67f3e6b02776ad079d31400000000000000000000000044922948f3bb63ae25a73043128feec8f514e33f"
}