{
  "address": "0xe79d496f4580799b4F734d62074D84c61Eb532C8",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "OffChainManagerImpl",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-03\n*/\n\npragma solidity ^0.4.1;\n\n// File: contracts/OwnerValidator.sol\n\ncontract TokenContract {\n    function totalSupply() constant returns (uint256 supply);\n    function decimals() constant returns(uint8 units);\n    function balanceOf(address _owner) constant returns (uint256 balance);\n    function transfer(address _to, address _msgSender, uint256 _value) returns (bool success);\n    function transferFrom(address _from, address _to, address _msgSender, uint256 _value) returns (bool success);\n    function transferFromSender(address _to, uint256 _value) returns (bool success);\n    function approve(address _spender, address _msgSender, uint256 _value) returns (bool success);\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n}\ncontract OwnerValidator {\n    function validate(address addr) constant returns (bool);\n}\n\ncontract Owned {\n    function ownerValidate(address addr) constant returns (bool);\n    bool public isWorking;\n\n    function Owned() {\n        isWorking = true;\n    }\n\n    modifier onlyOwner {\n        if (!ownerValidate(msg.sender)) throw;\n        _;\n    }\n\n    modifier onlyWorking {\n        if (!isWorking) throw;\n        _;\n    }\n\n    modifier onlyNotWorking {\n        if (isWorking) throw;\n        _;\n    }\n\n    function setWorking(bool _isWorking) onlyOwner {\n        isWorking = _isWorking;\n    }\n}\n\ncontract OwnerValidatorImpl is OwnerValidator, Owned {\n\n    address[] public owners;\n\n\n    TokenContract public tokenContract;\n\n    function OwnerValidatorImpl() {\n        owners.push(msg.sender);\n    }\n\n\n    function indexOfOwners(address _address) private constant returns (uint pos) {\n        pos = 0;\n        for (uint i = 0; i < owners.length; i++) {\n            if (owners[i] == _address) {\n                pos = i + 1;\n                break;\n            }\n        }\n        return pos;                \n    }\n\n    function validate(address addr) constant returns (bool) {\n        return (indexOfOwners(addr) != 0);\n    }\n        \n    function getOwners() constant returns (address[]) {\n        return owners;\n    } \n\n    function addOwner(address addr) onlyWorking {\n        if (validate(msg.sender)) {\n            if (!validate(addr)) {\n                owners.push(addr);\n            }\n        }\n    }\n\n    function removeOwner(address addr) onlyWorking {\n        if (validate(msg.sender)) {\n            uint pos = indexOfOwners(addr);\n            if (pos > 0) {\n                owners[pos - 1] = 0x0;\n            }\n        }\n    }\n\n    function setTokenContract(address _tokenContract) onlyWorking {\n        if (validate(msg.sender)) {\n            tokenContract = TokenContract(_tokenContract);\n        }\n    }\n\n    function ownerValidate(address addr) constant returns (bool) {\n        return validate(addr);\n    }\n\n    function transferFromSender(address _to, uint256 _value) returns (bool success) {\n        if (!validate(msg.sender)) throw;\n        return tokenContract.transferFromSender(_to, _value);\n    }\n\n    function sendFromOwn(address _to, uint256 _value) returns (bool success) {\n        if (!validate(msg.sender)) throw;\n        if (!_to.send(_value)) throw;\n        return true;\n    }\n}\n\n// File: contracts/OffChainManager.sol\n\ncontract OffChainManager {\n    function isToOffChainAddress(address addr) constant returns (bool);\n    function getOffChainRootAddress() constant returns (address);\n}\n\ncontract OffChainManagerImpl is OffChainManager, Owned {\n    address public rootAddress;\n    address[] public offChainAddreses;\n\n    mapping (address => uint256) refOffChainAddresses; \n\n    OwnerValidator public ownerValidator;\n\n    TokenContract public tokenContract;\n\n    function OffChainManagerImpl(\n        address _rootAddress,\n        address _ownerValidator\n    ) {\n        rootAddress = _rootAddress;\n        ownerValidator = OwnerValidator(_ownerValidator);\n    }\n\n    function setRootAddress(address _address) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            rootAddress = _address;\n        }\n    }\n\n    function setOwnerValidatorAddress(address _ownerValidator) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            ownerValidator = OwnerValidator(_ownerValidator);\n        }\n    }\n\n    function setTokenContract(address _tokenContract) {\n        if (ownerValidator.validate(msg.sender)) {\n            tokenContract = TokenContract(_tokenContract);\n        }\n    }\n\n    function offChainAddresesValidCount() constant returns (uint) {\n        uint cnt = 0;\n        for (uint i = 0; i < offChainAddreses.length; i++) {\n            if (offChainAddreses[i] != 0) {\n                cnt++;\n            }\n        }\n        return cnt;\n    }\n\n    function addOffChainAddress(address _address) private {\n        if (!isToOffChainAddress(_address)) {\n            offChainAddreses.push(_address);\n            refOffChainAddresses[_address] = offChainAddreses.length;\n        }\n    }\n\n    function removeOffChainAddress(address _address) private {\n        uint pos = refOffChainAddresses[_address];\n        if (pos > 0) {\n            offChainAddreses[pos - 1] = 0;\n            refOffChainAddresses[_address] = 0x0;\n        }\n    }\n\n    function addOffChainAddresses(address[] _addresses) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            for (uint i = 0; i < _addresses.length; i++) {\n                addOffChainAddress(_addresses[i]);\n            }\n        }\n    }\n\n    function removeOffChainAddresses(address[] _addresses) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            for (uint i = 0; i < _addresses.length; i++) {\n                removeOffChainAddress(_addresses[i]);\n            }\n        }\n    }\n\n    function ownerValidate(address addr) constant returns (bool) {\n        return ownerValidator.validate(addr);\n    }\n\n    function transferFromSender(address _to, uint256 _value) returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw;\n        return tokenContract.transferFromSender(_to, _value);\n    }\n\n    function sendFromOwn(address _to, uint256 _value) returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw; \n        if (!_to.send(_value)) throw;\n        return true;\n    }\n\n    function isToOffChainAddress(address addr) constant returns (bool) {\n        return refOffChainAddresses[addr] > 0;\n    }\n\n    function getOffChainRootAddress() constant returns (address) {\n        return rootAddress;\n    }\n\n    function getOffChainAddresses() constant returns (address[]) {\n        return offChainAddreses;\n    } \n\n    function isToOffChainAddresses(address[] _addresses) constant returns (bool) {\n        for (uint i = 0; i < _addresses.length; i++) {\n            if (!isToOffChainAddress(_addresses[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\n// File: contracts/TokenContract.sol\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\n// assert(b > 0);\n    uint256 c = a / b;\n// assert(a == b * c + a % b);\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract TokenContractImpl is TokenContract, Owned {\n    using SafeMath for uint256;\n    string public standard = \"Token 0.1\";\n    uint256 _totalSupply;\n    uint8 _decimals;\n    address public _mainAddress;\n\n    mapping (address => uint256) public balances;\n    mapping (address => mapping (address => uint256)) public allowed;\n\n    OwnerValidator public ownerValidator;\n    OffChainManager public offChainManager;\n\n    bool public isRedenominated;\n    uint256 public redenomiValue;\n    mapping (address => uint256) public redenominatedBalances;\n    mapping (address => mapping (address => uint256)) public redenominatedAllowed;\n\n    function TokenContractImpl(\n        uint256 initialSupply,\n        uint8 decimals,\n        address _ownerValidator,\n        address _offChainManager\n    ){\n        balances[msg.sender] = initialSupply;\n        _totalSupply = initialSupply;\n        _decimals = decimals;\n        ownerValidator = OwnerValidator(_ownerValidator);\n        offChainManager = OffChainManager(_offChainManager);\n    }\n\n    function totalSupply() constant returns (uint256 totalSupply) {\n        if (isRedenominated) {\n            return redenominatedValue(_totalSupply);\n        }\n        return _totalSupply;\n    }\n\n    function decimals() constant returns (uint8 decimals) {\n        return _decimals;\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        if (isRedenominated) {\n            if (redenominatedBalances[_owner] > 0) {\n                return redenominatedBalances[_owner];\n            }\n            return redenominatedValue(balances[_owner]);\n        }\n        return balances[_owner];\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {\n        if (isRedenominated) {\n            if (redenominatedAllowed[_owner][_spender] > 0) {\n                return redenominatedAllowed[_owner][_spender];\n            }\n            return redenominatedValue(allowed[_owner][_spender]);\n        }\n        return allowed[_owner][_spender];\n    }\n\n    function redenominatedValue(uint256 _value) private returns (uint256) {\n        return _value.mul(redenomiValue);\n    }\n\n    function ownerValidate(address addr) constant returns (bool) {\n        return ownerValidator.validate(addr);\n    }\n\n\n    function redenominate(uint256 _redenomiValue) {\n        if (isRedenominated) throw;\n        if (ownerValidator.validate(msg.sender)) {\n            redenomiValue = _redenomiValue;\n            Redenominate(msg.sender, isRedenominated, redenomiValue);\n        }\n    }   \n\n\n    function applyRedenomination() onlyNotWorking {\n        if (isRedenominated) throw;\n        if (redenomiValue == 0) throw;\n        if (ownerValidator.validate(msg.sender)) {\n            isRedenominated = true;\n            ApplyRedenomination(msg.sender, isRedenominated, redenomiValue);\n        }\n    }   \n\n    function setOwnerValidatorAddress(address _ownerValidator) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            ownerValidator = OwnerValidator(_ownerValidator);\n        }\n    }\n\n    function setOffChainManagerAddress(address _offChainManager) onlyWorking {\n        if (ownerValidator.validate(msg.sender)) {\n            offChainManager = OffChainManager(_offChainManager);\n        }\n    }\n\n    function transfer(address _to, address _msgSender, uint256 _value) onlyWorking returns (bool success) {\n        if (msg.sender != _mainAddress) throw; \n        return transferProcess(_msgSender, _to, _value);\n    }\n\n    function transferProcess(address _from, address _to, uint256 _value) private returns (bool success) {\n        if (balanceOf(_from) < _value) throw;\n        subtractBalance(_from, _value);\n        if (offChainManager.isToOffChainAddress(_to)) {\n            addBalance(offChainManager.getOffChainRootAddress(), _value);\n            ToOffChainTransfer(_from, _to, _to, _value);\n        } else {\n            addBalance(_to, _value);\n        }\n        return true;        \n    }\n\n    function addBalance(address _address, uint256 _value) private {\n        if (isRedenominated) {\n            if (redenominatedBalances[_address] == 0) {\n                if (balances[_address] > 0) {\n                    redenominatedBalances[_address] = redenominatedValue(balances[_address]);\n                    balances[_address] = 0;\n                }\n            }\n            redenominatedBalances[_address] = redenominatedBalances[_address].add(_value);\n        } else {\n            balances[_address] = balances[_address].add(_value);\n        }\n    }\n\n    function subtractBalance(address _address, uint256 _value) private {\n        if (isRedenominated) {\n            if (redenominatedBalances[_address] == 0) {\n                if (balances[_address] > 0) {\n                    redenominatedBalances[_address] = redenominatedValue(balances[_address]);\n                    balances[_address] = 0;\n                }\n            }\n            redenominatedBalances[_address] = redenominatedBalances[_address].sub(_value);\n        } else {\n            balances[_address] = balances[_address].sub(_value);\n        }\n    }\n\n    function transferFrom(address _from, address _to, address _msgSender, uint256 _value) onlyWorking returns (bool success) {\n        if (msg.sender != _mainAddress) throw; \n        if (balanceOf(_from) < _value) throw;\n        if (balanceOf(_to).add(_value) < balanceOf(_to)) throw;\n        if (_value > allowance(_from, _msgSender)) throw;\n        subtractBalance(_from, _value);\n        if (offChainManager.isToOffChainAddress(_to)) {\n            addBalance(offChainManager.getOffChainRootAddress(), _value);\n            ToOffChainTransfer(_msgSender, _to, _to, _value);\n        } else {\n            addBalance(_to, _value);\n        }\n        subtractAllowed(_from, _msgSender, _value);\n        return true;\n    }\n\n\n    function transferFromSender(address _to, uint256 _value) onlyWorking returns (bool success) {\n        if (!transferProcess(msg.sender, _to, _value)) throw;\n        TransferFromSender(msg.sender, _to, _value);\n        return true;\n    }\n\n\n    function transferFromOwn(address _to, uint256 _value) onlyWorking returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw;\n        if (!transferProcess(this, _to, _value)) throw;\n        TransferFromSender(this, _to, _value);    \n        return true;\n    }\n\n    function sendFromOwn(address _to, uint256 _value) returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw; \n        if (!_to.send(_value)) throw;\n        return true;\n    }\n\n    function approve(address _spender, address _msgSender, uint256 _value) onlyWorking returns (bool success) {\n        if (msg.sender != _mainAddress) throw; \n        setAllowed(_msgSender, _spender, _value);\n        return true;\n    }\n\n    function subtractAllowed(address _from, address _spender, uint256 _value) private {\n        if (isRedenominated) {\n            if (redenominatedAllowed[_from][_spender] == 0) {\n                if (allowed[_from][_spender] > 0) {\n                    redenominatedAllowed[_from][_spender] = redenominatedValue(allowed[_from][_spender]);\n                    allowed[_from][_spender] = 0;\n                }\n            }\n            redenominatedAllowed[_from][_spender] = redenominatedAllowed[_from][_spender].sub(_value);\n        } else {\n            allowed[_from][_spender] = allowed[_from][_spender].sub(_value);\n        }\n    }\n\n    function setAllowed(address _owner, address _spender, uint256 _value) private {\n        if (isRedenominated) {\n            redenominatedAllowed[_owner][_spender] = _value;\n        } else {\n            allowed[_owner][_spender] = _value;\n        }\n    }\n\n    function setMainAddress(address _address) onlyOwner {\n        _mainAddress = _address;\n    }\n\n    event TransferFromSender(address indexed _from, address indexed _to, uint256 _value);\n    event ToOffChainTransfer(address indexed _from, address indexed _toKey, address _to, uint256 _value);\n    event Redenominate(address _owner, bool _isRedenominated, uint256 _redenomiVakye);\n    event ApplyRedenomination(address _owner, bool _isRedenominated, uint256 _redenomiVakye);\n}\n\n// File: contracts/MainContract.sol\n\ncontract MainContract {\n    string public standard = \"Token 0.1\";\n    string public name;\n    string public symbol;\n\n    OwnerValidator public ownerValidator;\n    TokenContract public tokenContract;\n\n    function MainContract(\n        string _tokenName,\n        address _ownerValidator,\n        address _tokenContract,\n        string _symbol\n    ) {\n        ownerValidator = OwnerValidator(_ownerValidator);\n        tokenContract = TokenContract(_tokenContract);\n        name = _tokenName;\n        symbol = _symbol;\n    }\n\n    function totalSupply() constant returns(uint256 totalSupply) {\n        return tokenContract.totalSupply();\n    }\n\n    function decimals() constant returns(uint8 decimals) {\n        return tokenContract.decimals();\n    }\n\n    function setOwnerValidateAddress(address _ownerValidator) {\n        if (ownerValidator.validate(msg.sender)) {\n            ownerValidator = OwnerValidator(_ownerValidator);\n        }\n    }\n\n    function setTokenContract(address _tokenContract) {\n        if (ownerValidator.validate(msg.sender)) {\n            tokenContract = TokenContract(_tokenContract);\n        }\n    }\n\n    function transferFromSender(address _to, uint256 _value) returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw;\n        return tokenContract.transferFromSender(_to, _value);\n    }\n\n    function sendFromOwn(address _to, uint256 _value) returns (bool success) {\n        if (!ownerValidator.validate(msg.sender)) throw; \n        if (!_to.send(_value)) throw;\n        return true;\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return uint256(tokenContract.balanceOf(_owner));\n    }\n\n    function transfer(address _to, uint256 _value) returns (bool success) {\n        if (tokenContract.transfer(_to, msg.sender, _value)) {\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else {\n            throw;\n        }\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n        if (tokenContract.transferFrom(_from, _to, msg.sender, _value)) {\n            Transfer(_from, _to, _value);\n            return true;\n        } else {\n            throw;\n        }\n    }\n\n    function approve(address _spender, uint256 _value) returns (bool success) {\n        if (tokenContract.approve(_spender,msg.sender,_value)) {\n            Approval(msg.sender,_spender,_value);\n            return true;\n        } else {\n            throw;\n        }\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n        return tokenContract.allowance(_owner,_spender);\n    }\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"isWorking\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setRootAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isToOffChainAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOffChainAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"offChainAddreses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOffChainRootAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ownerValidator\",\"type\":\"address\"}],\"name\":\"setOwnerValidatorAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_isWorking\",\"type\":\"bool\"}],\"name\":\"setWorking\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"addOffChainAddresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendFromOwn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rootAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ownerValidate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFromSender\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"setTokenContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"removeOffChainAddresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerValidator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"offChainAddresesValidCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"isToOffChainAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_rootAddress\",\"type\":\"address\"},{\"name\":\"_ownerValidator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]",
  "bytecode": "608060405234801561001057600080fd5b50604051604080610dcc83398101604052805160209091015160008054600160ff199091161761010060a860020a031916610100600160a060020a039485160217815560038054600160a060020a03191693909216929092179055610d5190819061007b90396000f3006080604052600436106101065763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663099aea0a811461010b5780631451952b146101345780633a8468f7146101575780633f67a94e146101785780634cf1c8ef146101dd57806355a373d6146102115780635d6af2af146102265780635ddf29981461023b5780636fb3ba9e1461025c57806371868032146102765780637e621667146102cb578063aaa2b8c8146102ef578063b43545bb14610304578063bae804a714610325578063bbcd5bbe14610349578063c0be3e9a1461036a578063d2d5a55c146103bf578063dac9882a146103d4578063fceb9852146103fb575b600080fd5b34801561011757600080fd5b50610120610450565b604080519115158252519081900360200190f35b34801561014057600080fd5b50610155600160a060020a0360043516610459565b005b34801561016357600080fd5b50610120600160a060020a036004351661051c565b34801561018457600080fd5b5061018d610538565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101c95781810151838201526020016101b1565b505050509050019250505060405180910390f35b3480156101e957600080fd5b506101f560043561059a565b60408051600160a060020a039092168252519081900360200190f35b34801561021d57600080fd5b506101f56105c2565b34801561023257600080fd5b506101f56105d1565b34801561024757600080fd5b50610155600160a060020a03600435166105e5565b34801561026857600080fd5b5061015560043515156106a4565b34801561028257600080fd5b5060408051602060048035808201358381028086018501909652808552610155953695939460249493850192918291850190849080828437509497506106cb9650505050505050565b3480156102d757600080fd5b50610120600160a060020a0360043516602435610797565b3480156102fb57600080fd5b506101f5610856565b34801561031057600080fd5b50610120600160a060020a036004351661086a565b34801561033157600080fd5b50610120600160a060020a03600435166024356108f1565b34801561035557600080fd5b50610155600160a060020a0360043516610a1d565b34801561037657600080fd5b506040805160206004803580820135838102808601850190965280855261015595369593946024949385019291829185019084908082843750949750610acb9650505050505050565b3480156103cb57600080fd5b506101f5610b93565b3480156103e057600080fd5b506103e9610ba2565b60408051918252519081900360200190f35b34801561040757600080fd5b506040805160206004803580820135838102808601850190965280855261012095369593946024949385019291829185019084908082843750949750610bee9650505050505050565b60005460ff1681565b60005460ff16151561046a57600080fd5b6003546040805160e060020a63207c64fb0281523360048201529051600160a060020a039092169163207c64fb916024808201926020929091908290030181600087803b1580156104ba57600080fd5b505af11580156104ce573d6000803e3d6000fd5b505050506040513d60208110156104e457600080fd5b505115610519576000805474ffffffffffffffffffffffffffffffffffffffff001916610100600160a060020a038416021790555b50565b600160a060020a03166000908152600260205260408120541190565b6060600180548060200260200160405190810160405280929190818152602001828054801561059057602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610572575b5050505050905090565b60018054829081106105a857fe5b600091825260209091200154600160a060020a0316905081565b600454600160a060020a031681565b6000546101009004600160a060020a031690565b60005460ff1615156105f657600080fd5b6003546040805160e060020a63207c64fb0281523360048201529051600160a060020a039092169163207c64fb916024808201926020929091908290030181600087803b15801561064657600080fd5b505af115801561065a573d6000803e3d6000fd5b505050506040513d602081101561067057600080fd5b5051156105195760038054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff1990911617905550565b6106ad3361086a565b15156106b857600080fd5b6000805460ff1916911515919091179055565b6000805460ff1615156106dd57600080fd5b6003546040805160e060020a63207c64fb0281523360048201529051600160a060020a039092169163207c64fb916024808201926020929091908290030181600087803b15801561072d57600080fd5b505af1158015610741573d6000803e3d6000fd5b505050506040513d602081101561075757600080fd5b505115610793575060005b81518110156107935761078b828281518110151561077c57fe5b90602001906020020151610c32565b600101610762565b5050565b6003546040805160e060020a63207c64fb0281523360048201529051600092600160a060020a03169163207c64fb91602480830192602092919082900301818787803b1580156107e657600080fd5b505af11580156107fa573d6000803e3d6000fd5b505050506040513d602081101561081057600080fd5b5051151561081d57600080fd5b604051600160a060020a0384169083156108fc029084906000818181858888f19350505050151561084d57600080fd5b50600192915050565b6000546101009004600160a060020a031681565b6003546040805160e060020a63207c64fb028152600160a060020a0384811660048301529151600093929092169163207c64fb9160248082019260209290919082900301818787803b1580156108bf57600080fd5b505af11580156108d3573d6000803e3d6000fd5b505050506040513d60208110156108e957600080fd5b505192915050565b6003546040805160e060020a63207c64fb0281523360048201529051600092600160a060020a03169163207c64fb91602480830192602092919082900301818787803b15801561094057600080fd5b505af1158015610954573d6000803e3d6000fd5b505050506040513d602081101561096a57600080fd5b5051151561097757600080fd5b60048054604080517fbae804a7000000000000000000000000000000000000000000000000000000008152600160a060020a0387811694820194909452602481018690529051929091169163bae804a7916044808201926020929091908290030181600087803b1580156109ea57600080fd5b505af11580156109fe573d6000803e3d6000fd5b505050506040513d6020811015610a1457600080fd5b50519392505050565b6003546040805160e060020a63207c64fb0281523360048201529051600160a060020a039092169163207c64fb916024808201926020929091908290030181600087803b158015610a6d57600080fd5b505af1158015610a81573d6000803e3d6000fd5b505050506040513d6020811015610a9757600080fd5b5051156105195760048054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff1990911617905550565b6000805460ff161515610add57600080fd5b6003546040805160e060020a63207c64fb0281523360048201529051600160a060020a039092169163207c64fb916024808201926020929091908290030181600087803b158015610b2d57600080fd5b505af1158015610b41573d6000803e3d6000fd5b505050506040513d6020811015610b5757600080fd5b505115610793575060005b815181101561079357610b8b8282815181101515610b7c57fe5b90602001906020020151610ca9565b600101610b62565b600354600160a060020a031681565b600080805b600154811015610be8576001805482908110610bbf57fe5b600091825260209091200154600160a060020a031615610be0576001909101905b600101610ba7565b50919050565b6000805b825181101561084d57610c1b8382815181101515610c0c57fe5b9060200190602002015161051c565b1515610c2a5760009150610be8565b600101610bf2565b610c3b8161051c565b1515610519576001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039390931692831790555460009182526002602052604090912055565b600160a060020a038116600090815260026020526040812054908111156107935760006001808303815481101515610cdd57fe5b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0394851617905593909116815260029092525060408120555600a165627a7a72305820f2d2f1fb86a0d0e6b5f253db4c35e05d55dafcaa4d426c2779b526b52c41ea46002900000000000000000000000095c53fc4cb59c00770698c387da3e264a5d2c2c000000000000000000000000085baa592a2324ddf774c0620db1f95e30bca3654",
  "constructorArguments": "00000000000000000000000095c53fc4cb59c00770698c387da3e264a5d2c2c000000000000000000000000085baa592a2324ddf774c0620db1f95e30bca3654"
}