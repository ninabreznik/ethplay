{
  "address": "0x7b52427cec68182c74d0b5f9dec57ddd8f727de9",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BuilderTokenEmission",
  "compilerVersion": "v0.4.4+commit.4633f3de",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-05-10\n*/\n\npragma solidity ^0.4.4;\n\n/**\n * @title Contract for object that have an owner\n */\ncontract Owned {\n    /**\n     * Contract owner address\n     */\n    address public owner;\n\n    /**\n     * @dev Delegate contract to another person\n     * @param _owner New owner address \n     */\n    function setOwner(address _owner) onlyOwner\n    { owner = _owner; }\n\n    /**\n     * @dev Owner check modifier\n     */\n    modifier onlyOwner { if (msg.sender != owner) throw; _; }\n}\n\n/**\n * @title Common pattern for destroyable contracts \n */\ncontract Destroyable {\n    address public hammer;\n\n    /**\n     * @dev Hammer setter\n     * @param _hammer New hammer address\n     */\n    function setHammer(address _hammer) onlyHammer\n    { hammer = _hammer; }\n\n    /**\n     * @dev Destroy contract and scrub a data\n     * @notice Only hammer can call it \n     */\n    function destroy() onlyHammer\n    { suicide(msg.sender); }\n\n    /**\n     * @dev Hammer check modifier\n     */\n    modifier onlyHammer { if (msg.sender != hammer) throw; _; }\n}\n\n/**\n * @title Generic owned destroyable contract\n */\ncontract Object is Owned, Destroyable {\n    function Object() {\n        owner  = msg.sender;\n        hammer = msg.sender;\n    }\n}\n\n// Standard token interface (ERC 20)\n// https://github.com/ethereum/EIPs/issues/20\ncontract ERC20 \n{\n// Functions:\n    /// @return total amount of tokens\n    uint256 public totalSupply;\n\n    /// @param _owner The address from which the balance will be retrieved\n    /// @return The balance\n    function balanceOf(address _owner) constant returns (uint256);\n\n    /// @notice send `_value` token to `_to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transfer(address _to, uint256 _value) returns (bool);\n\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n    /// @param _from The address of the sender\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool);\n\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _value The amount of wei to be approved for transfer\n    /// @return Whether the approval was successful or not\n    function approve(address _spender, uint256 _value) returns (bool);\n\n    /// @param _owner The address of the account owning tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address _owner, address _spender) constant returns (uint256);\n\n// Events:\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n/**\n * @title Token contract represents any asset in digital economy\n */\ncontract Token is Object, ERC20 {\n    /* Short description of token */\n    string public name;\n    string public symbol;\n\n    /* Total count of tokens exist */\n    uint public totalSupply;\n\n    /* Fixed point position */\n    uint8 public decimals;\n    \n    /* Token approvement system */\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowances;\n \n    /**\n     * @dev Get balance of plain address\n     * @param _owner is a target address\n     * @return amount of tokens on balance\n     */\n    function balanceOf(address _owner) constant returns (uint256)\n    { return balances[_owner]; }\n \n    /**\n     * @dev Take allowed tokens\n     * @param _owner The address of the account owning tokens\n     * @param _spender The address of the account able to transfer the tokens\n     * @return Amount of remaining tokens allowed to spent\n     */\n    function allowance(address _owner, address _spender) constant returns (uint256)\n    { return allowances[_owner][_spender]; }\n\n    /* Token constructor */\n    function Token(string _name, string _symbol, uint8 _decimals, uint _count) {\n        name        = _name;\n        symbol      = _symbol;\n        decimals    = _decimals;\n        totalSupply = _count;\n        balances[msg.sender] = _count;\n    }\n \n    /**\n     * @dev Transfer self tokens to given address\n     * @param _to destination address\n     * @param _value amount of token values to send\n     * @notice `_value` tokens will be sended to `_to`\n     * @return `true` when transfer done\n     */\n    function transfer(address _to, uint _value) returns (bool) {\n        if (balances[msg.sender] >= _value) {\n            balances[msg.sender] -= _value;\n            balances[_to]        += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev Transfer with approvement mechainsm\n     * @param _from source address, `_value` tokens shold be approved for `sender`\n     * @param _to destination address\n     * @param _value amount of token values to send \n     * @notice from `_from` will be sended `_value` tokens to `_to`\n     * @return `true` when transfer is done\n     */\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool) {\n        var avail = allowances[_from][msg.sender]\n                  > balances[_from] ? balances[_from]\n                                    : allowances[_from][msg.sender];\n        if (avail >= _value) {\n            allowances[_from][msg.sender] -= _value;\n            balances[_from] -= _value;\n            balances[_to]   += _value;\n            Transfer(_from, _to, _value);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev Give to target address ability for self token manipulation without sending\n     * @param _spender target address (future requester)\n     * @param _value amount of token values for approving\n     */\n    function approve(address _spender, uint256 _value) returns (bool) {\n        allowances[msg.sender][_spender] += _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Reset count of tokens approved for given address\n     * @param _spender target address (future requester)\n     */\n    function unapprove(address _spender)\n    { allowances[msg.sender][_spender] = 0; }\n}\n\ncontract TokenEmission is Token {\n    function TokenEmission(string _name, string _symbol, uint8 _decimals,\n                           uint _start_count)\n             Token(_name, _symbol, _decimals, _start_count)\n    {}\n\n    /**\n     * @dev Token emission\n     * @param _value amount of token values to emit\n     * @notice owner balance will be increased by `_value`\n     */\n    function emission(uint _value) onlyOwner {\n        // Overflow check\n        if (_value + totalSupply < totalSupply) throw;\n\n        totalSupply     += _value;\n        balances[owner] += _value;\n    }\n \n    /**\n     * @dev Burn the token values from sender balance and from total\n     * @param _value amount of token values for burn \n     * @notice sender balance will be decreased by `_value`\n     */\n    function burn(uint _value) {\n        if (balances[msg.sender] >= _value) {\n            balances[msg.sender] -= _value;\n            totalSupply      -= _value;\n        }\n    }\n}\n\nlibrary CreatorTokenEmission {\n    function create(string _name, string _symbol, uint8 _decimals, uint256 _start_count) returns (TokenEmission)\n    { return new TokenEmission(_name, _symbol, _decimals, _start_count); }\n\n    function version() constant returns (string)\n    { return \"v0.6.0 (1b4435b8)\"; }\n\n    function abi() constant returns (string)\n    { return '[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hammer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"emission\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hammer\",\"type\":\"address\"}],\"name\":\"setHammer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"unapprove\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_start_count\",\"type\":\"uint256\"}],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]'; }\n}\n\n/**\n * @title Builder based contract\n */\ncontract Builder is Object {\n    /**\n     * @dev this event emitted for every builded contract\n     */\n    event Builded(address indexed client, address indexed instance);\n \n    /* Addresses builded contracts at sender */\n    mapping(address => address[]) public getContractsOf;\n \n    /**\n     * @dev Get last address\n     * @return last address contract\n     */\n    function getLastContract() constant returns (address) {\n        var sender_contracts = getContractsOf[msg.sender];\n        return sender_contracts[sender_contracts.length - 1];\n    }\n\n    /* Building beneficiary */\n    address public beneficiary;\n\n    /**\n     * @dev Set beneficiary\n     * @param _beneficiary is address of beneficiary\n     */\n    function setBeneficiary(address _beneficiary) onlyOwner\n    { beneficiary = _beneficiary; }\n\n    /* Building cost  */\n    uint public buildingCostWei;\n\n    /**\n     * @dev Set building cost\n     * @param _buildingCostWei is cost\n     */\n    function setCost(uint _buildingCostWei) onlyOwner\n    { buildingCostWei = _buildingCostWei; }\n\n    /* Security check report */\n    string public securityCheckURI;\n\n    /**\n     * @dev Set security check report URI\n     * @param _uri is an URI to report\n     */\n    function setSecurityCheck(string _uri) onlyOwner\n    { securityCheckURI = _uri; }\n}\n\n//\n// AIRA Builder for TokenEmission contract\n//\ncontract BuilderTokenEmission is Builder {\n    /**\n     * @dev Run script creation contract\n     * @param _name is name token\n     * @param _symbol is symbol token\n     * @param _decimals is fixed point position\n     * @param _start_count is count of tokens exist\n     * @param _client is a contract destination address (zero for sender)\n     * @return address new contract\n     */\n    function create(string _name, string _symbol, uint8 _decimals, uint256 _start_count, address _client) payable returns (address) {\n        if (buildingCostWei > 0 && beneficiary != 0) {\n            // Too low value\n            if (msg.value < buildingCostWei) throw;\n            // Beneficiary send\n            if (!beneficiary.send(buildingCostWei)) throw;\n            // Refund\n            if (msg.value > buildingCostWei) {\n                if (!msg.sender.send(msg.value - buildingCostWei)) throw;\n            }\n        } else {\n            // Refund all\n            if (msg.value > 0) {\n                if (!msg.sender.send(msg.value)) throw;\n            }\n        }\n\n        if (_client == 0)\n            _client = msg.sender;\n \n        var inst = CreatorTokenEmission.create(_name, _symbol, _decimals, _start_count);\n        getContractsOf[_client].push(inst);\n        Builded(_client, inst);\n        inst.transfer(_client, _start_count);\n        inst.setOwner(_client);\n        inst.setHammer(_client);\n        return inst;\n    }\n}",
  "bytecode": "6060604052600080546c0100000000000000000000000033810204600160a060020a0319918216811790925560018054909116909117905561097d806100456000396000f3606060405236156100ae5760e060020a600035046303ca71d681146100b357806313af40351461011d5780631c31f7101461014357806338af3eed1461016957806344a0d68a14610180578063457f4d41146101a65780636e942f82146101bd57806383197ef0146101cb5780638da5cb5b146101ee578063b604ad7214610205578063c53833fe146102cd578063d31fdffd1461031a578063f70532fe14610340578063fdc37c8514610383575b610002565b34610002576103e86004808035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284375094965050505050505060005433600160a060020a0390811691161461048657610002565b34610002576103e860043560005433600160a060020a0390811691161461052257610002565b34610002576103e860043560005433600160a060020a0390811691161461054157610002565b34610002576103ea600354600160a060020a031681565b34610002576103e860043560005433600160a060020a0390811691161461056057610002565b34610002576103ea600154600160a060020a031681565b346100025761040660045481565b34610002576103e860015433600160a060020a0390811691161461056557610002565b34610002576103ea600054600160a060020a031681565b6103ea6004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750506040805160208835808b0135601f81018390048302840183019094528383529799986044989297509190910194509092508291508401838280828437509496505093359350506064359150506084356000600060006004600050541180156102b95750600354600160a060020a031615155b15610571576004543410156105a957610002565b34610002576103ea600160a060020a03331660009081526002602052604081208054819060001981019081101561000257600091825260209091200154600160a060020a031691505b5090565b34610002576103e860043560015433600160a060020a0390811691161461092b57610002565b34610002576103ea60043560243560026020526000828152604090208054829081101561000257600091825260209091200154600160a060020a03169150829050565b346100025761041860058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281529291908301828280156109755780601f1061094a57610100808354040283529160200191610975565b005b60408051600160a060020a039092168252519081900360200190f35b60408051918252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156104785780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b8060056000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106104ed57805160ff19168380011785555b5061051d9291505b8082111561031657600081556001016104d9565b828001600101855582156104d1579182015b828111156104d15782518260005055916020019190600101906104ff565b505050565b60008054606060020a80840204600160a060020a031990911617905550565b60038054606060020a80840204600160a060020a031990911617905550565b600455565b33600160a060020a0316ff5b600034111561061c57604051600160a060020a033316903480156108fc02916000818181858888f19350505050151561061c57610002565b600354600454604051600160a060020a039092169181156108fc0291906000818181858888f1935050505015156105df57610002565b60045434111561061c57600454604051600160a060020a03331691340380156108fc02916000818181858888f19350505050151561061c57610002565b600160a060020a0383161515610630573392505b73d9666f92c2e3eeb466e8e690f9f09faf80e7112663831e80f2888888886000604051602001526040518560e060020a0281526004018080602001806020018560ff1681526020018481526020018381038352878181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156106d65780820380516001836020036101000a031916815260200191505b508381038252868181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f16801561072f5780820380516001836020036101000a031916815260200191505b50965050505050505060206040518083038186803b156100025760325a03f4156100025750506040805151600160a060020a03861660009081526002602052919091208054600181018083559294509092509082818380158290116107a5576000838152602090206107a59181019083016104d9565b50505060009283525060208220018054600160a060020a031916606060020a84810204179055604051600160a060020a0380841692908616917f39a897fc2f5613d2a2b9ec75f5b36723b03492a752d0951ba46507590ec526509190a380600160a060020a031663a9059cbb84866000604051602001526040518360e060020a0281526004018083600160a060020a0316815260200182815260200192505050602060405180830381600087803b156100025760325a03f115610002575050604080517f13af4035000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152915191841692506313af403591602480830192600092919082900301818387803b156100025760325a03f1156100025750505080600160a060020a031663d31fdffd846040518260e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b156100025760325a03f11561000257509198975050505050505050565b60018054606060020a80840204600160a060020a031990911617905550565b820191906000526020600020905b81548152906001019060200180831161095857829003601f168201915b50505050508156",
  "constructorArguments": "00490600052602060002090601f016020900481019282601f106104ed57805160ff19168380011785555b5061051d9291505b8082111561031657600081556001016104d9565b828001600101855582156104d1579182015b828111156104d15782518260005055916020019190600101906104ff565b505050565b60008054606060020a80840204600160a060020a031990911617905550565b60038054606060020a80840204600160a060020a031990911617905550565b600455565b33600160a060020a0316ff5b600034111561061c57604051600160a060020a033316903480156108fc02916000818181858888f19350505050151561061c57610002565b600354600454604051600160a060020a039092169181156108fc0291906000818181858888f1935050505015156105df57610002565b60045434111561061c57600454604051600160a060020a03331691340380156108fc02916000818181858888f19350505050151561061c57610002565b600160a060020a0383161515610630573392505b73d9666f92c2e3eeb466e8e690f9f09faf80e7112663831e80f2888888886000604051602001526040518560e060020a0281526004018080602001806020018560ff1681526020018481526020018381038352878181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156106d65780820380516001836020036101000a031916815260200191505b508381038252868181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f16801561072f5780820380516001836020036101000a031916815260200191505b50965050505050505060206040518083038186803b156100025760325a03f4156100025750506040805151600160a060020a03861660009081526002602052919091208054600181018083559294509092509082818380158290116107a5576000838152602090206107a59181019083016104d9565b50505060009283525060208220018054600160a060020a031916606060020a84810204179055604051600160a060020a0380841692908616917f39a897fc2f5613d2a2b9ec75f5b36723b03492a752d0951ba46507590ec526509190a380600160a060020a031663a9059cbb84866000604051602001526040518360e060020a0281526004018083600160a060020a0316815260200182815260200192505050602060405180830381600087803b156100025760325a03f115610002575050604080517f13af4035000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152915191841692506313af403591602480830192600092919082900301818387803b156100025760325a03f1156100025750505080600160a060020a031663d31fdffd846040518260e060020a0281526004018082600160a060020a03168152602001915050600060405180830381600087803b156100025760325a03f11561000257509198975050505050505050565b60018054606060020a80840204600160a060020a031990911617905550565b820191906000526020600020905b81548152906001019060200180831161095857829003601f168201915b50505050508156"
}