{
  "address": "0xc1eab49cf9d2e23e43bcf23b36b2be14fc2f8838",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Mokens",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "999",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-05\n*/\n\npragma solidity 0.4.24;\npragma experimental \"v0.5.0\";\n/******************************************************************************\\\n*..................................Mokens......................................*\n*.....................General purpose cryptocollectibles.......................*\n*..............................................................................*\n/******************************************************************************/\n\n/******************************************************************************\\\n* Author: Nick Mudge, [emailÂ protected]\n* Copyright (c) 2018\n* Mokens\n*\n* The Mokens contract is a proxy contract that delegates all functionality\n* to delegate contracts. This design enables new functionality and improvements\n* to be added to the Mokens contract over time.\n*\n* Changes to the Mokens contract are transparent and visible. To make changes\n* easier to monitor the ContractUpdated event is emitted any time a function is\n* added, removed or updated. The ContractUpdated event exists in the\n* MokenUpdates delegate contract\n*\n* The source code for all delegate contracts used by the Mokens contract can be\n* found online and inspected.\n*\n* The Mokens contract is reflective or self inspecting. It contains functions\n* for inspecting what delegate contracts it has and what functions they have.\n* Specifically, the QueryMokenDelegates delegate contract contains functions for\n* querying delegate contracts and functions.\n*\n*    Here are some of the other delegate contracts:\n*\n*  - MokenERC721: Implements the ERC721 standard for mokens.\n*  - MokenERC721Batch: Implements batch transfers and approvals.\n*  - MokenERC998ERC721TopDown: Implements ERC998 composable functionality.\n*  - MokenERC998ERC20TopDown: Implements ERC998 composable functionality.\n*  - MokenERC998ERC721BottomUp: Implements ERC998 composable functionality.\n*  - MokenMinting: Implements moken minting functionality.\n*  - MokenEras: Implements moken era functionality.\n*  - QueryMokenData: Implements functions to query info about mokens.\n/******************************************************************************/\n//////////////////////////////////////\n//////////////////////////////////////\ncontract Storage0 {\n    // funcId => delegate contract\n    mapping(bytes4 => address) internal delegates;\n}\n\ncontract Mokens is Storage0 {\n    constructor(address mokenUpdates) public {\n        //0x584fc325 == \"initializeMokensContract()\"\n        bytes memory calldata = abi.encodeWithSelector(0x584fc325,mokenUpdates);\n        assembly {\n            let callSuccess := delegatecall(gas, mokenUpdates, add(calldata, 0x20), mload(calldata), 0, 0)\n            let size := returndatasize\n            returndatacopy(calldata, 0, size)\n            if eq(callSuccess,0) {revert(calldata, size)}\n        }\n    }\n    function() external payable {\n        address delegate = delegates[msg.sig];\n        require(delegate != address(0), \"Mokens function does not exist.\");\n        assembly {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0, calldatasize)\n            let result := delegatecall(gas, delegate, ptr, calldatasize, 0, 0)\n            let size := returndatasize\n            returndatacopy(ptr, 0, size)\n            switch result\n            case 0 {revert(ptr, size)}\n            default {return (ptr, size)}\n        }\n    }\n}",
  "abi": "[{\"inputs\":[{\"name\":\"mokenUpdates\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]",
  "bytecode": "608060405234801561001057600080fd5b506040516020806101b48339810160408181529151600160a060020a038116602480840191909152835180840390910181526044909201909252602081018051600160e060020a03167f584fc325000000000000000000000000000000000000000000000000000000001781528151600091829190855af43d806000843e811515610099578083fd5b50505050610108806100ac6000396000f30060806040908152600080357fffffffff000000000000000000000000000000000000000000000000000000001681526020819052205473ffffffffffffffffffffffffffffffffffffffff1680151560b857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4d6f6b656e732066756e6374696f6e20646f6573206e6f742065786973742e00604482015290519081900360640190fd5b60405136600082376000803683855af43d806000843e81801560d8578184f35b8184fd00a165627a7a7230582053d9619b5bf34e13f75a13ab628dc003344d6959f108751fbcf8b40db093ccb200290000000000000000000000005c339a8421d1106eee2382c0bce0c086c01a8ac0",
  "constructorArguments": "0000000000000000000000005c339a8421d1106eee2382c0bce0c086c01a8ac0"
}