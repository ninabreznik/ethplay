{
  "address": "0xfd45e61e085b3e7a1990a47828d757755b206eee",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CoinParkToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-28\n*/\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public constant returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public constant returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public constant returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n\n    uint256 _allowance = allowed[_from][msg.sender];\n\n    // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n    // require (_value <= _allowance);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = _allowance.sub(_value);\n    Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   */\n  function increaseApproval (address _spender, uint _addedValue)\n    returns (bool success) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function decreaseApproval (address _spender, uint _subtractedValue)\n    returns (bool success) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n\ncontract CoinParkToken is StandardToken, Ownable{\n    \n    string public version = \"v2.0\";\n    string public name = \"CoinPark Token (www.coinpark.com)\";\n    string public symbol = \"CP\";\n    string public website = \"https://www.coinpark.com\";\n    uint8 public  decimals = 18;\n\n    mapping(address=>uint256)  lockedBalance;\n    mapping(address=>uint)     timeRelease; \n    \n    uint256 internal constant INITIAL_SUPPLY = 100 * (10**8) * (10**18);\n    \n    //address public developer;\n    //uint256 internal crowdsaleAvaible;\n\n\n    event Burn(address indexed burner, uint256 value);\n    event Lock(address indexed locker, uint256 value, uint releaseTime);\n    event UnLock(address indexed unlocker, uint256 value);\n    \n\n    // constructor\n    function CoinParkToken() { \n        address onwer = msg.sender;\n        balances[onwer] = INITIAL_SUPPLY;\n        totalSupply = INITIAL_SUPPLY;\n    }\n\n    //balance of locked\n    function lockedOf(address _owner) public constant returns (uint256 balance) {\n        return lockedBalance[_owner];\n    }\n\n    //release time of locked\n    function unlockTimeOf(address _owner) public constant returns (uint timelimit) {\n        return timeRelease[_owner];\n    }\n\n\n    // transfer to and lock it\n    function transferAndLock(address _to, uint256 _value, uint _releaseTime) public returns (bool success) {\n        require(_to != 0x0);\n        require(_value <= balances[msg.sender]);\n        require(_value > 0);\n        require(_releaseTime > now && _releaseTime <= now + 60*60*24*365*5);\n\n        // SafeMath.sub will throw if there is not enough balance.\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n       \n        //if preLock can release \n        uint preRelease = timeRelease[_to];\n        if (preRelease <= now && preRelease != 0x0) {\n            balances[_to] = balances[_to].add(lockedBalance[_to]);\n            lockedBalance[_to] = 0;\n        }\n\n        lockedBalance[_to] = lockedBalance[_to].add(_value);\n        timeRelease[_to] =  _releaseTime >= timeRelease[_to] ? _releaseTime : timeRelease[_to]; \n        Transfer(msg.sender, _to, _value);\n        Lock(_to, _value, _releaseTime);\n        return true;\n    }\n\n\n   /**\n   * @notice Transfers tokens held by lock.\n   */\n   function unlock() public constant returns (bool success){\n        uint256 amount = lockedBalance[msg.sender];\n        require(amount > 0);\n        require(now >= timeRelease[msg.sender]);\n\n        balances[msg.sender] = balances[msg.sender].add(amount);\n        lockedBalance[msg.sender] = 0;\n        timeRelease[msg.sender] = 0;\n\n        Transfer(0x0, msg.sender, amount);\n        UnLock(msg.sender, amount);\n\n        return true;\n\n    }\n\n\n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param _value The amount of token to be burned.\n     */\n    function burn(uint256 _value) public returns (bool success) {\n        require(_value > 0);\n        require(_value <= balances[msg.sender]);\n    \n        address burner = msg.sender;\n        balances[burner] = balances[burner].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        Burn(burner, _value);\n        return true;\n    }\n\n    \n\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"unlockTimeOf\",\"outputs\":[{\"name\":\"timelimit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_releaseTime\",\"type\":\"uint256\"}],\"name\":\"transferAndLock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"lockedOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"website\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"locker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Lock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"unlocker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UnLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600460808190527f76322e300000000000000000000000000000000000000000000000000000000060a09081526200003e91908162000193565b506040805160608101825260218082527f436f696e5061726b20546f6b656e20287777772e636f696e7061726b2e636f6d602083019081527f29000000000000000000000000000000000000000000000000000000000000009290930191909152620000ad9160059162000193565b506040805180820190915260028082527f43500000000000000000000000000000000000000000000000000000000000006020909201918252620000f49160069162000193565b506040805180820190915260188082527f68747470733a2f2f7777772e636f696e7061726b2e636f6d000000000000000060209092019182526200013b9160079162000193565b506008805460ff191660121790553480156200015657600080fd5b5060038054600160a060020a0319163390811790915560009081526001602052604081206b204fce5e3e2502611000000090819055905562000238565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001d657805160ff191683800117855562000206565b8280016001018555821562000206579182015b8281111562000206578251825591602001919060010190620001e9565b506200021492915062000218565b5090565b6200023591905b808211156200021457600081556001016200021f565b90565b610eef80620002486000396000f3006080604052600436106101115763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610116578063095ea7b3146101a057806318160ddd146101d857806323b872dd146101ff578063313ce5671461022957806342966c6814610254578063469a69471461026c57806354fd4d501461028d57806366188463146102a257806370a08231146102c657806384d5d944146102e75780638da5cb5b1461030e57806395d89b411461033f578063a5f1e28214610354578063a69df4b514610375578063a9059cbb1461038a578063beb0a416146103ae578063d73dd623146103c3578063dd62ed3e146103e7578063f2fde38b1461040e575b600080fd5b34801561012257600080fd5b5061012b610431565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016557818101518382015260200161014d565b50505050905090810190601f1680156101925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ac57600080fd5b506101c4600160a060020a03600435166024356104bf565b604080519115158252519081900360200190f35b3480156101e457600080fd5b506101ed610525565b60408051918252519081900360200190f35b34801561020b57600080fd5b506101c4600160a060020a036004358116906024351660443561052b565b34801561023557600080fd5b5061023e61063b565b6040805160ff9092168252519081900360200190f35b34801561026057600080fd5b506101c4600435610644565b34801561027857600080fd5b506101ed600160a060020a0360043516610708565b34801561029957600080fd5b5061012b610723565b3480156102ae57600080fd5b506101c4600160a060020a036004351660243561077e565b3480156102d257600080fd5b506101ed600160a060020a036004351661086e565b3480156102f357600080fd5b506101c4600160a060020a0360043516602435604435610889565b34801561031a57600080fd5b50610323610aaa565b60408051600160a060020a039092168252519081900360200190f35b34801561034b57600080fd5b5061012b610ab9565b34801561036057600080fd5b506101ed600160a060020a0360043516610b14565b34801561038157600080fd5b506101c4610b2f565b34801561039657600080fd5b506101c4600160a060020a0360043516602435610c12565b3480156103ba57600080fd5b5061012b610cc7565b3480156103cf57600080fd5b506101c4600160a060020a0360043516602435610d22565b3480156103f357600080fd5b506101ed600160a060020a0360043581169060243516610dbb565b34801561041a57600080fd5b5061042f600160a060020a0360043516610de6565b005b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b505050505081565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60005481565b600080600160a060020a038416151561054357600080fd5b50600160a060020a03841660008181526002602090815260408083203384528252808320549383526001909152902054610583908463ffffffff610e7b16565b600160a060020a0380871660009081526001602052604080822093909355908616815220546105b8908463ffffffff610e8d16565b600160a060020a0385166000908152600160205260409020556105e1818463ffffffff610e7b16565b600160a060020a0380871660008181526002602090815260408083203384528252918290209490945580518781529051928816939192600080516020610ea4833981519152929181900390910190a3506001949350505050565b60085460ff1681565b60008080831161065357600080fd5b3360009081526001602052604090205483111561066f57600080fd5b5033600081815260016020526040902054610690908463ffffffff610e7b16565b600160a060020a038216600090815260016020526040812091909155546106bd908463ffffffff610e7b16565b600055604080518481529051600160a060020a038316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a250600192915050565b600160a060020a03166000908152600a602052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104b75780601f1061048c576101008083540402835291602001916104b7565b336000908152600260209081526040808320600160a060020a0386168452909152812054808311156107d357336000908152600260209081526040808320600160a060020a0388168452909152812055610808565b6107e3818463ffffffff610e7b16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526001602052604090205490565b600080600160a060020a03851615156108a157600080fd5b336000908152600160205260409020548411156108bd57600080fd5b600084116108ca57600080fd5b42831180156108df5750426309660180018311155b15156108ea57600080fd5b3360009081526001602052604090205461090a908563ffffffff610e7b16565b33600090815260016020908152604080832093909355600160a060020a0388168252600a90522054905042811180159061094357508015155b156109a457600160a060020a03851660009081526009602090815260408083205460019092529091205461097c9163ffffffff610e8d16565b600160a060020a03861660009081526001602090815260408083209390935560099052908120555b600160a060020a0385166000908152600960205260409020546109cd908563ffffffff610e8d16565b600160a060020a038616600090815260096020908152604080832093909355600a90522054831015610a1757600160a060020a0385166000908152600a6020526040902054610a19565b825b600160a060020a0386166000818152600a6020908152604091829020939093558051878152905191923392600080516020610ea48339815191529281900390910190a360408051858152602081018590528151600160a060020a038816927f49eaf4942f1237055eb4cfa5f31c9dfe50d5b4ade01e021f7de8be2fbbde557b928290030190a2506001949350505050565b600354600160a060020a031681565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104b75780601f1061048c576101008083540402835291602001916104b7565b600160a060020a031660009081526009602052604090205490565b33600090815260096020526040812054818111610b4b57600080fd5b336000908152600a6020526040902054421015610b6757600080fd5b33600090815260016020526040902054610b87908263ffffffff610e8d16565b3360008181526001602090815260408083209490945560098152838220829055600a81528382208290558351858152935192939192600080516020610ea48339815191529281900390910190a360408051828152905133917fb371d42b3715509a27f3109f6ac1ef6b7d7e7f8e9232b738ed17338be6cf9580919081900360200190a2600191505090565b6000600160a060020a0383161515610c2957600080fd5b33600090815260016020526040902054610c49908363ffffffff610e7b16565b3360009081526001602052604080822092909255600160a060020a03851681522054610c7b908363ffffffff610e8d16565b600160a060020a038416600081815260016020908152604091829020939093558051858152905191923392600080516020610ea48339815191529281900390910190a350600192915050565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104b75780601f1061048c576101008083540402835291602001916104b7565b336000908152600260209081526040808320600160a060020a0386168452909152812054610d56908363ffffffff610e8d16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a03163314610dfd57600080fd5b600160a060020a0381161515610e1257600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610e8757fe5b50900390565b600082820183811015610e9c57fe5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058201935463c5a99d8ad657ad33ee72bd3eb817170fa33a89b40aef03f8962911b920029"
}