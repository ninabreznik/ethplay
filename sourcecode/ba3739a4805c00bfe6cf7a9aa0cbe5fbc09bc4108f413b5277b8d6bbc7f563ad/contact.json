{
  "address": "0x53d4e5bf62a91ec53ea15991e2389310eeb855b2",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "GOEXToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-11\n*/\n\npragma solidity ^0.4.24;\n\n\n\nlibrary SafeMath {\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a / b;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n\n}\n\n\n\ncontract ERC20Basic {\n\n  function totalSupply() public view returns (uint256);\n\n  function balanceOf(address who) public view returns (uint256);\n\n  function transfer(address to, uint256 value) public returns (bool);\n\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n}\n\n\n\ncontract ERC20 is ERC20Basic {\n\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n\n}\n\n\n\ncontract Ownable {\n\n  address public owner;\n\n  event OwnershipRenounced(address indexed previousOwner);\n\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  modifier validAddress {\n    assert(0x0 != msg.sender);\n    _;\n  }\n\n  function transferOwnership(address _newOwner) public onlyOwner validAddress {\n    _transferOwnership(_newOwner);\n  }\n\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n\n}\n\n\n\ncontract BasicToken is ERC20Basic, Ownable {\n\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n    require(_value > 0);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n  event Burn(address indexed burner, uint256 value);\n\n  function burn(uint256 _value) public {\n    _burn(msg.sender, _value);\n  }\n\n  function _burn(address _who, uint256 _value) internal {\n    require(_value <= balances[_who]);\n\n    balances[_who] = balances[_who].sub(_value);\n    totalSupply_ = totalSupply_.sub(_value);\n\n    emit Burn(_who, _value);\n    emit Transfer(_who, address(0), _value);\n  }\n\n}\n\n\n\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public validAddress\n    returns (bool)\n  {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n    require(_value > 0);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  function approve(address _spender, uint256 _value) public validAddress returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  function increaseApproval(\n    address _spender,\n    uint256 _addedValue\n  )\n    public validAddress\n    returns (bool)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function transferTokens(address _from, address _to, uint256 _value) public validAddress onlyOwner returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value > 0);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  function decreaseApproval(\n    address _spender,\n    uint256 _subtractedValue\n  )\n    public validAddress\n    returns (bool)\n  {\n    uint256 oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n\n\ncontract GOEXToken is StandardToken {\n\n  string public constant name = \"GOEX Token\";\n  string public constant symbol = \"GOEX\";\n  uint8 public constant decimals = 18;\n\n  uint256 public constant INITIAL_SUPPLY = 500000000 * (10 ** uint256(decimals));\n\n  constructor() public {\n    totalSupply_ = INITIAL_SUPPLY;\n    balances[msg.sender] = INITIAL_SUPPLY;\n    emit Transfer(address(0), msg.sender, INITIAL_SUPPLY);\n  }\n\n}",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a0319163390811782556b019d971e4fe8401e7400000060028190558183526001602090815260408085208390558051928352519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3610c118061008b6000396000f3006080604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100ea578063095ea7b31461017457806318160ddd146101ac57806323b872dd146101d35780632ff2e9dc146101fd578063313ce5671461021257806342966c681461023d578063661884631461025757806370a082311461027b5780638da5cb5b1461029c57806395d89b41146102cd578063a64b6e5f146102e2578063a9059cbb1461030c578063d73dd62314610330578063dd62ed3e14610354578063f2fde38b1461037b575b600080fd5b3480156100f657600080fd5b506100ff61039c565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610139578181015183820152602001610121565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018057600080fd5b50610198600160a060020a03600435166024356103d3565b604080519115158252519081900360200190f35b3480156101b857600080fd5b506101c1610445565b60408051918252519081900360200190f35b3480156101df57600080fd5b50610198600160a060020a036004358116906024351660443561044b565b34801561020957600080fd5b506101c16105c8565b34801561021e57600080fd5b506102276105d8565b6040805160ff9092168252519081900360200190f35b34801561024957600080fd5b506102556004356105dd565b005b34801561026357600080fd5b50610198600160a060020a03600435166024356105ea565b34801561028757600080fd5b506101c1600160a060020a03600435166106e7565b3480156102a857600080fd5b506102b1610702565b60408051600160a060020a039092168252519081900360200190f35b3480156102d957600080fd5b506100ff610711565b3480156102ee57600080fd5b50610198600160a060020a0360043581169060243516604435610748565b34801561031857600080fd5b50610198600160a060020a036004351660243561085e565b34801561033c57600080fd5b50610198600160a060020a036004351660243561093c565b34801561036057600080fd5b506101c1600160a060020a03600435811690602435166109e0565b34801561038757600080fd5b50610255600160a060020a0360043516610a0b565b60408051808201909152600a81527f474f455820546f6b656e00000000000000000000000000000000000000000000602082015281565b60003315156103de57fe5b336000818152600360209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600033151561045657fe5b600160a060020a038316151561046b57600080fd5b600160a060020a03841660009081526001602052604090205482111561049057600080fd5b600160a060020a03841660009081526003602090815260408083203384529091529020548211156104c057600080fd5b600082116104cd57600080fd5b600160a060020a0384166000908152600160205260409020546104f6908363ffffffff610a3416565b600160a060020a03808616600090815260016020526040808220939093559085168152205461052b908363ffffffff610a4616565b600160a060020a03808516600090815260016020908152604080832094909455918716815260038252828120338252909152205461056f908363ffffffff610a3416565b600160a060020a0380861660008181526003602090815260408083203384528252918290209490945580518681529051928716939192600080516020610bc6833981519152929181900390910190a35060019392505050565b6b019d971e4fe8401e7400000081565b601281565b6105e73382610a59565b50565b6000803315156105f657fe5b50336000908152600360209081526040808320600160a060020a03871684529091529020548083111561064c57336000908152600360209081526040808320600160a060020a0388168452909152812055610681565b61065c818463ffffffff610a3416565b336000908152600360209081526040808320600160a060020a03891684529091529020555b336000818152600360209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526001602052604090205490565b600054600160a060020a031681565b60408051808201909152600481527f474f455800000000000000000000000000000000000000000000000000000000602082015281565b600033151561075357fe5b600054600160a060020a0316331461076a57600080fd5b600160a060020a038316151561077f57600080fd5b600160a060020a0384166000908152600160205260409020548211156107a457600080fd5b600082116107b157600080fd5b600160a060020a0384166000908152600160205260409020546107da908363ffffffff610a3416565b600160a060020a03808616600090815260016020526040808220939093559085168152205461080f908363ffffffff610a4616565b600160a060020a038085166000818152600160209081526040918290209490945580518681529051919392881692600080516020610bc683398151915292918290030190a35060019392505050565b6000600160a060020a038316151561087557600080fd5b3360009081526001602052604090205482111561089157600080fd5b6000821161089e57600080fd5b336000908152600160205260409020546108be908363ffffffff610a3416565b3360009081526001602052604080822092909255600160a060020a038516815220546108f0908363ffffffff610a4616565b600160a060020a038416600081815260016020908152604091829020939093558051858152905191923392600080516020610bc68339815191529281900390910190a350600192915050565b600033151561094757fe5b336000908152600360209081526040808320600160a060020a038716845290915290205461097b908363ffffffff610a4616565b336000818152600360209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b600054600160a060020a03163314610a2257600080fd5b331515610a2b57fe5b6105e781610b48565b600082821115610a4057fe5b50900390565b81810182811015610a5357fe5b92915050565b600160a060020a038216600090815260016020526040902054811115610a7e57600080fd5b600160a060020a038216600090815260016020526040902054610aa7908263ffffffff610a3416565b600160a060020a038316600090815260016020526040902055600254610ad3908263ffffffff610a3416565b600255604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a03851691600080516020610bc68339815191529181900360200190a35050565b600160a060020a0381161515610b5d57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820e30872bca04606693e4ed28bce47ca98b170b676dfe04a67892ee47e85be08cb0029"
}