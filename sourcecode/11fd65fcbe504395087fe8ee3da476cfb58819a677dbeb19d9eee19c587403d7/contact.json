{
  "address": "0x69d2779533a4d2c780639713558b2cc98c46a9b7",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "VNT",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-14\n*/\n\npragma solidity ^0.4.8;\n\n/**\n * @title VNT Token - The Next Generation Value Transfering Network.\n * @author Wang Yunxiao - <[emailÂ protected]>\n */\n\ncontract SafeMath {\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b > 0);\n        uint256 c = a / b;\n        assert(a == b * c + a % b);\n        return c;\n    }\n\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a && c >= b);\n        return c;\n    }\n}\n\ncontract VNT is SafeMath {\n    string constant tokenName = 'VNTChain';\n    string constant tokenSymbol = 'VNT';\n    uint8 constant decimalUnits = 8;\n\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n\n    uint256 public totalSupply = 100 * (10**8) * (10**8); // 100 yi\n\n    address public owner;\n    \n    mapping(address => bool) restrictedAddresses;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /* This generates a public event on the blockchain that will notify clients */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    modifier onlyOwner {\n        assert(owner == msg.sender);\n        _;\n    }\n\n    /* Initializes contract with initial supply tokens to the creator of the contract */\n    function VNT() public {\n        balanceOf[msg.sender] = totalSupply;                // Give the creator all tokens\n        name = tokenName;                                   // Set the name for display purposes\n        symbol = tokenSymbol;                               // Set the symbol for display purposes\n        decimals = decimalUnits;                            // Amount of decimals for display purposes\n        owner = msg.sender;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(_value > 0);\n        require(balanceOf[msg.sender] >= _value);              // Check if the sender has enough\n        require(balanceOf[_to] + _value >= balanceOf[_to]);    // Check for overflows\n        require(!restrictedAddresses[msg.sender]);\n        require(!restrictedAddresses[_to]);\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);   // Subtract from the sender\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);                 // Add the same to the recipient\n        Transfer(msg.sender, _to, _value);                  // Notify anyone listening that this transfer took place\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowance[msg.sender][_spender] = _value;            // Set allowance\n        Approval(msg.sender, _spender, _value);              // Raise Approval event\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] >= _value);                  // Check if the sender has enough\n        require(balanceOf[_to] + _value >= balanceOf[_to]);   // Check for overflows\n        require(_value <= allowance[_from][msg.sender]);      // Check allowance\n        require(!restrictedAddresses[_from]);\n        require(!restrictedAddresses[msg.sender]);\n        require(!restrictedAddresses[_to]);\n        balanceOf[_from] = SafeMath.safeSub(balanceOf[_from], _value);    // Subtract from the sender\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);        // Add the same to the recipient\n        allowance[_from][msg.sender] = SafeMath.safeSub(allowance[_from][msg.sender], _value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function totalSupply() constant public returns (uint256 Supply) {\n        return totalSupply;\n    }\n\n    function balanceOf(address _owner) constant public returns (uint256 balance) {\n        return balanceOf[_owner];\n    }\n\n    function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {\n      return allowance[_owner][_spender];\n    }\n\n    function() public payable {\n        revert();\n    }\n\n    /* Owner can add new restricted address or removes one */\n    function editRestrictedAddress(address _newRestrictedAddress) public onlyOwner {\n        restrictedAddresses[_newRestrictedAddress] = !restrictedAddresses[_newRestrictedAddress];\n    }\n\n    function isRestrictedAddress(address _querryAddress) constant public returns (bool answer) {\n        return restrictedAddresses[_querryAddress];\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"_querryAddress\",\"type\":\"address\"}],\"name\":\"isRestrictedAddress\",\"outputs\":[{\"name\":\"answer\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"Supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newRestrictedAddress\",\"type\":\"address\"}],\"name\":\"editRestrictedAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "6060604052670de0b6b3a7640000600355341561001b57600080fd5b600354600160a060020a03331660009081526006602052604090819020919091558051908101604052600881527f564e54436861696e000000000000000000000000000000000000000000000000602082015260009080516100819291602001906100f9565b5060408051908101604052600381527f564e540000000000000000000000000000000000000000000000000000000000602082015260019080516100c99291602001906100f9565b506002805460ff1916600817905560048054600160a060020a033316600160a060020a0319909116179055610194565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013a57805160ff1916838001178555610167565b82800160010185558215610167579182015b8281111561016757825182559160200191906001019061014c565b50610173929150610177565b5090565b61019191905b80821115610173576000815560010161017d565b90565b6108c3806101a36000396000f3006060604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166303c175ff81146100be57806306fdde03146100f1578063095ea7b31461017b57806318160ddd1461019d57806323b872dd146101c2578063313ce567146101ea5780634ec883d11461021357806370a08231146102345780638da5cb5b1461025357806395d89b4114610282578063a9059cbb14610295578063dd62ed3e146102b7575b600080fd5b34156100c957600080fd5b6100dd600160a060020a03600435166102dc565b604051901515815260200160405180910390f35b34156100fc57600080fd5b6101046102fa565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610140578082015183820152602001610128565b50505050905090810190601f16801561016d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018657600080fd5b6100dd600160a060020a0360043516602435610398565b34156101a857600080fd5b6101b0610404565b60405190815260200160405180910390f35b34156101cd57600080fd5b6100dd600160a060020a036004358116906024351660443561040a565b34156101f557600080fd5b6101fd6105fd565b60405160ff909116815260200160405180910390f35b341561021e57600080fd5b610232600160a060020a0360043516610606565b005b341561023f57600080fd5b6101b0600160a060020a0360043516610647565b341561025e57600080fd5b610266610662565b604051600160a060020a03909116815260200160405180910390f35b341561028d57600080fd5b610104610671565b34156102a057600080fd5b6100dd600160a060020a03600435166024356106dc565b34156102c257600080fd5b6101b0600160a060020a0360043581169060243516610836565b600160a060020a031660009081526005602052604090205460ff1690565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103905780601f1061036557610100808354040283529160200191610390565b820191906000526020600020905b81548152906001019060200180831161037357829003601f168201915b505050505081565b600160a060020a03338116600081815260076020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60035490565b600160a060020a0383166000908152600660205260408120548290101561043057600080fd5b600160a060020a038316600090815260066020526040902054828101101561045757600080fd5b600160a060020a038085166000908152600760209081526040808320339094168352929052205482111561048a57600080fd5b600160a060020a03841660009081526005602052604090205460ff16156104b057600080fd5b600160a060020a03331660009081526005602052604090205460ff16156104d657600080fd5b600160a060020a03831660009081526005602052604090205460ff16156104fc57600080fd5b600160a060020a03841660009081526006602052604090205461051f9083610861565b600160a060020a03808616600090815260066020526040808220939093559085168152205461054e9083610873565b600160a060020a038085166000908152600660209081526040808320949094558783168252600781528382203390931682529190915220546105909083610861565b600160a060020a03808616600081815260076020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b60025460ff1681565b60045433600160a060020a0390811691161461061e57fe5b600160a060020a03166000908152600560205260409020805460ff19811660ff90911615179055565b600160a060020a031660009081526006602052604090205490565b600454600160a060020a031681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103905780601f1061036557610100808354040283529160200191610390565b60008082116106ea57600080fd5b600160a060020a0333166000908152600660205260409020548290101561071057600080fd5b600160a060020a038316600090815260066020526040902054828101101561073757600080fd5b600160a060020a03331660009081526005602052604090205460ff161561075d57600080fd5b600160a060020a03831660009081526005602052604090205460ff161561078357600080fd5b600160a060020a0333166000908152600660205260409020546107a69083610861565b600160a060020a0333811660009081526006602052604080822093909355908516815220546107d59083610873565b600160a060020a0380851660008181526006602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260076020908152604080832093909416825291909152205490565b60008282111561086d57fe5b50900390565b60008282018381108015906108885750828110155b151561089057fe5b93925050505600a165627a7a723058203a08a95f508ada77fcc0be2ca871e028876eab742376b32d12eab761fa49497b0029"
}