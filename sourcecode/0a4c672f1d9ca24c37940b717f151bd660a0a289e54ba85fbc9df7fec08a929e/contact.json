{
  "address": "0x54923b4f2e4433294c70559cc94d1812793f0451",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Future1Exchange",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-10\n*/\n\npragma solidity ^0.4.24;\n\ncontract Token {\n\n    mapping (address => uint256) public balanceOf;\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n}\n\ncontract Future1Exchange\n {\n    address public archon; \n    \n    mapping (address => mapping(address => uint256)) public _token;\n    \n    constructor() public\n    {\n         archon = msg.sender;                                                            \n    }\n    \n    \n    function safeAdd(uint crtbal, uint depbal) public pure returns (uint) \n    {\n        uint totalbal = crtbal + depbal;\n        return totalbal;\n    }\n    \n    function safeSub(uint crtbal, uint depbal) public pure returns (uint) \n    {\n        uint totalbal = crtbal - depbal;\n        return totalbal;\n    }\n    \n    /// @notice View balance\n    /// @param token Token contract\n    /// @param user  owner address\n    function balanceOf(address token,address user) public view returns(uint256)            \n    {\n        return Token(token).balanceOf(user);\n    }\n\n    \n    /// @notice Token transfer\n    /// @param  token Token contract\n    /// @param  tokens value\n    function tokenTransfer(address token, uint256 tokens)public payable                          \n    {\n\n        _token[msg.sender][token] = safeAdd(_token[msg.sender][token], tokens);\n        Token(token).transferFrom(msg.sender,address(this), tokens);\n\n    }\n    \n    /// @notice Token withdraw\n    /// @param  token Token contract\n    /// @param  to Receiver address\n    /// @param  tokens value\n    function tokenWithdraw(address token, address to, uint256 tokens)public payable      \n    {\n        if(archon==msg.sender)\n        {                                                                                                        \n            if(Token(token).balanceOf(address(this))>=tokens) \n            {\n                _token[msg.sender][token] = safeSub(_token[msg.sender][token] , tokens) ;   \n                Token(token).transfer(to, tokens);\n            }\n        }\n    }\n    \n    ///@notice Token balance\n    ///@param token Token contract\n    function contract_bal(address token) public view returns(uint256)                       \n    {\n        return Token(token).balanceOf(address(this));\n    }\n    \n    ///@notice Deposit ETH\n    function depositETH() payable external                                                      \n    { \n        \n    }\n    \n    ///@notice Withdraw ETH\n    ///@param  to Receiver address\n    ///@param  value ethervalue\n    function withdrawETH(address  to, uint256 value) public payable returns (bool)        \n    {\n        \n        if(archon==msg.sender)\n        {                                                                                           \n                 to.transfer(value);\n                 return true;\n    \n         }\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"tokenTransfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"tokenWithdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"crtbal\",\"type\":\"uint256\"},{\"name\":\"depbal\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"archon\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"contract_bal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"crtbal\",\"type\":\"uint256\"},{\"name\":\"depbal\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]",
  "bytecode": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c22806100606000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634782f779146100a95780634d694a341461010157806368cdafe61461017857806397d870c8146101b8578063a293d1e814610218578063a6940a9c14610263578063cde34c0a146102ba578063e6cb901314610311578063f6326fb31461035c578063f7888aec14610366575b600080fd5b6100e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103dd565b604051808215151515815260200191505060405180910390f35b34801561010d57600080fd5b50610162600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061048b565b6040518082815260200191505060405180910390f35b6101b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104b0565b005b610216600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106cd565b005b34801561022457600080fd5b5061024d60048036038101908080359060200190929190803590602001909291905050506109ec565b6040518082815260200191505060405180910390f35b34801561026f57600080fd5b506102786109fe565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102c657600080fd5b506102fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a23565b6040518082815260200191505060405180910390f35b34801561031d57600080fd5b506103466004803603810190808035906020019092919080359060200190929190505050610b02565b6040518082815260200191505060405180910390f35b610364610b14565b005b34801561037257600080fd5b506103c7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b16565b6040518082815260200191505060405180910390f35b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610484578273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561047a573d6000803e3d6000fd5b5060019050610485565b5b92915050565b6001602052816000526040600020602052806000526040600020600091509150505481565b610536600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482610b02565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561068d57600080fd5b505af11580156106a1573d6000803e3d6000fd5b505050506040513d60208110156106b757600080fd5b8101908080519060200190929190505050505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109e757808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050506040513d60208110156107e857600080fd5b81019080805190602001909291905050501015156109e657610886600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826109ec565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156109a957600080fd5b505af11580156109bd573d6000803e3d6000fd5b505050506040513d60208110156109d357600080fd5b8101908080519060200190929190505050505b5b505050565b60008082840390508091505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610ac057600080fd5b505af1158015610ad4573d6000803e3d6000fd5b505050506040513d6020811015610aea57600080fd5b81019080805190602001909291905050509050919050565b60008082840190508091505092915050565b565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610bb357600080fd5b505af1158015610bc7573d6000803e3d6000fd5b505050506040513d6020811015610bdd57600080fd5b81019080805190602001909291905050509050929150505600a165627a7a72305820a36ea5ee1f13dab11466a75b1bef0fb8a16eacc90ee9fe06d6f73abf7120e8620029"
}