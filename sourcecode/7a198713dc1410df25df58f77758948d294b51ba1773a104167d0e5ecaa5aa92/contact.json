{
  "address": "0x6fd749dc814754106bf097a2d1a7f089a8ff6cda",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "PlayerBook",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-05\n*/\n\npragma solidity ^0.4.24;\n\n// File: contracts\\utils\\NameFilter.sol\n\nlibrary NameFilter {\n\n    /**\n     * @dev filters name strings\n     * -converts uppercase to lower case.\n     * -makes sure it does not start/end with a space\n     * -makes sure it does not contain multiple spaces in a row\n     * -cannot be only numbers\n     * -cannot start with 0x\n     * -restricts characters to A-Z, a-z, 0-9, and space.\n     * @return reprocessed string in bytes32 format\n     */\n    function nameFilter(string _input)\n        internal\n        pure\n        returns(bytes32)\n    {\n        bytes memory _temp = bytes(_input);\n        uint256 _length = _temp.length;\n\n        //sorry limited to 32 characters\n        require (_length <= 32 && _length > 0, \"string must be between 1 and 32 characters\");\n        // make sure it doesnt start with or end with space\n        require(_temp[0] != 0x20 && _temp[_length-1] != 0x20, \"string cannot start or end with space\");\n        // make sure first two characters are not 0x\n        if (_temp[0] == 0x30)\n        {\n            require(_temp[1] != 0x78, \"string cannot start with 0x\");\n            require(_temp[1] != 0x58, \"string cannot start with 0X\");\n        }\n\n        // create a bool to track if we have a non number character\n        bool _hasNonNumber;\n\n        // convert & check\n        for (uint256 i = 0; i < _length; i++)\n        {\n            // if its uppercase A-Z\n            if (_temp[i] > 0x40 && _temp[i] < 0x5b)\n            {\n                // convert to lower case a-z\n                _temp[i] = byte(uint(_temp[i]) + 32);\n\n                // we have a non number\n                if (_hasNonNumber == false)\n                    _hasNonNumber = true;\n            } else {\n                require\n                (\n                    // require character is a space\n                    _temp[i] == 0x20 ||\n                    // OR lowercase a-z\n                    (_temp[i] > 0x60 && _temp[i] < 0x7b) ||\n                    // or 0-9\n                    (_temp[i] > 0x2f && _temp[i] < 0x3a),\n                    \"string contains invalid characters\"\n                );\n                // make sure theres not 2x spaces in a row\n                if (_temp[i] == 0x20)\n                    require( _temp[i+1] != 0x20, \"string cannot contain consecutive spaces\");\n\n                // see if we have a character other than a number\n                if (_hasNonNumber == false && (_temp[i] < 0x30 || _temp[i] > 0x39))\n                    _hasNonNumber = true;\n            }\n        }\n\n        require(_hasNonNumber == true, \"string cannot be only numbers\");\n\n        bytes32 _ret;\n        assembly {\n            _ret := mload(add(_temp, 32))\n        }\n        return (_ret);\n    }\n}\n\n// File: contracts\\utils\\Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n// File: contracts\\PlayerBook.sol\n\ninterface PlayerBookReceiverInterface {\n    function receivePlayerInfo(address _addr, string _name) external;\n}\n\ncontract PlayerBook is Ownable {\n    using NameFilter for string;\n    \n    string constant public name = \"PlayerBook\";\n    string constant public symbol = \"PlayerBook\";    \n\n    uint256 public registrationFee_ = 10 finney;            // price to register a name\n    mapping (bytes32 => address) public nameToAddr;\n    mapping (address => string[]) public addrToNames;\n    \n    PlayerBookReceiverInterface public currentGame; \n    \n    address public CFO;\n    address public COO; \n    \n    modifier onlyCOO() {\n        require(msg.sender == COO);\n        _; \n    }\n    \n    constructor(address _CFO, address _COO) public {\n        CFO = _CFO;\n        COO = _COO; \n    }\n    \n    function setCFO(address _CFO) onlyOwner public {\n        CFO = _CFO; \n    }  \n  \n    function setCOO(address _COO) onlyOwner public {\n        COO = _COO; \n    }  \n\n    modifier isHuman() {\n        address _addr = msg.sender;\n        uint256 _codeLength;\n\n        assembly {_codeLength := extcodesize(_addr)}\n        require(_codeLength == 0, \"sorry humans only\");\n        _;\n    }\n    \n\n    function checkIfNameValid(string _nameStr) public view returns(bool) {\n      bytes32 _name = _nameStr.nameFilter();\n      if (nameToAddr[_name] == address(0))\n        return (true);\n      else\n        return (false);\n    }\n\n    function getPlayerAddr(string _nameStr) public view returns(address) {\n      bytes32 _name = _nameStr.nameFilter();\n      return nameToAddr[_name];\n    }\n\n    function getPlayerName() public view returns(string) {\n      address _addr = msg.sender;\n      string[] memory names = addrToNames[_addr];\n      if(names.length > 0) {\n        return names[names.length-1];\n      } else {\n        return \"\"; \n      }\n    }\n\n    function registerName(string _nameString) public isHuman payable {\n      // make sure name fees paid\n      require (msg.value >= registrationFee_, \"umm.....  you have to pay the name fee\");\n\n      // filter name + condition checks\n      bytes32 _name = NameFilter.nameFilter(_nameString);\n      require(nameToAddr[_name] == address(0), \"name must not be taken by others\");\n      address _addr = msg.sender;\n      nameToAddr[_name] = _addr;\n      addrToNames[_addr].push(_nameString);\n      // update current game user info \n      currentGame.receivePlayerInfo(_addr, _nameString); \n    }\n\n    function registerNameByCOO(string _nameString, address _addr) public onlyCOO {\n      bytes32 _name = NameFilter.nameFilter(_nameString);\n      require(nameToAddr[_name] == address(0), \"name must not be taken by others\");\n      nameToAddr[_name] = _addr;\n      addrToNames[_addr].push(_nameString);\n      // update current game user info \n      currentGame.receivePlayerInfo(_addr, _nameString);       \n    }\n    \n    \n    function setCurrentGame(address _addr) public onlyCOO {\n        currentGame = PlayerBookReceiverInterface(_addr); \n    }\n\n    function withdrawBalance() public onlyCOO {\n      uint _amount = address(this).balance;\n      CFO.transfer(_amount);\n    }\n}",
  "bytecode": "",
  "constructorArguments": "00000000000000000000000002c20a31da44fc46ef8e0514b88762c873c260f100000000000000000000000060e08885aaa460249a187cd44d69067abbcec320"
}