{
  "address": "0x10d085268751e5bc6cc0433c1875e408c8f6e007",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenVesting",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-16\n*/\n\npragma solidity ^0.4.24;\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  function safeTransfer(ERC20Basic token, address to, uint256 value) internal {\n    assert(token.transfer(to, value));\n  }\n\n  function safeTransferFrom(ERC20 token, address from, address to, uint256 value) internal {\n    assert(token.transferFrom(from, to, value));\n  }\n\n  function safeApprove(ERC20 token, address spender, uint256 value) internal {\n    assert(token.approve(spender, value));\n  }\n}\n\n\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  /**\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title TokenVesting\n * @dev TokenVesting is a token holder contract that will allow a\n * beneficiary to extract the tokens after a given release time\n */\ncontract TokenVesting is Ownable {\n    using SafeERC20 for ERC20Basic;\n    using SafeMath for uint256;\n\n    // ERC20 basic token contract being held\n    ERC20Basic public token;\n\n    struct VestingObj {\n        uint256 token;\n        uint256 releaseTime;\n    }\n\n    mapping (address  => VestingObj[]) public vestingObj;\n\n    uint256 public totalTokenVested;\n\n    event AddVesting ( address indexed _beneficiary, uint256 token, uint256 _vestingTime);\n    event Release ( address indexed _beneficiary, uint256 token, uint256 _releaseTime);\n\n    modifier checkZeroAddress(address _add) {\n        require(_add != address(0));\n        _;\n    }\n\n    constructor(ERC20Basic _token)\n        public\n        checkZeroAddress(_token)\n    {\n        token = _token;\n    }\n\n    function addVesting( address[] _beneficiary, uint256[] _token, uint256[] _vestingTime) \n        external \n        onlyOwner\n    {\n        require((_beneficiary.length == _token.length) && (_beneficiary.length == _vestingTime.length));\n        \n        for (uint i = 0; i < _beneficiary.length; i++) {\n            require(_vestingTime[i] > now);\n            require(checkZeroValue(_token[i]));\n            require(uint256(getBalance()) >= totalTokenVested.add(_token[i]));\n            vestingObj[_beneficiary[i]].push(VestingObj({\n                token : _token[i],\n                releaseTime : _vestingTime[i]\n            }));\n            totalTokenVested = totalTokenVested.add(_token[i]);\n            emit AddVesting(_beneficiary[i], _token[i], _vestingTime[i]);\n        }\n    }\n\n    /**\n   * @notice Transfers tokens held by timelock to beneficiary.\n   */\n    function claim() external {\n        uint256 transferTokenCount = 0;\n        for (uint i = 0; i < vestingObj[msg.sender].length; i++) {\n            if (now >= vestingObj[msg.sender][i].releaseTime) {\n                transferTokenCount = transferTokenCount.add(vestingObj[msg.sender][i].token);\n                delete vestingObj[msg.sender][i];\n            }\n        }\n        require(transferTokenCount > 0);\n        token.safeTransfer(msg.sender, transferTokenCount);\n        emit Release(msg.sender, transferTokenCount, now);\n    }\n\n    function getBalance() public view returns (uint256) {\n        return token.balanceOf(address(this));\n    }\n    \n    function checkZeroValue(uint256 value) internal pure returns(bool){\n        return value > 0;\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b50604051602080610802833981016040525160008054600160a060020a0319163317905580600160a060020a038116151561004a57600080fd5b5060018054600160a060020a031916600160a060020a03929092169190911790556107888061007a6000396000f30060806040526004361061008d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166312065fe081146100925780634e71d92d146100b95780636c9e89b6146100d05780637d6040401461010857806387c4aaea146101455780638da5cb5b1461015a578063f2fde38b1461018b578063fc0c546a146101ac575b600080fd5b34801561009e57600080fd5b506100a76101c1565b60408051918252519081900360200190f35b3480156100c557600080fd5b506100ce610257565b005b3480156100dc57600080fd5b506100ce602460048035828101929082013591813580830192908201359160443591820191013561038a565b34801561011457600080fd5b5061012c600160a060020a0360043516602435610598565b6040805192835260208301919091528051918290030190f35b34801561015157600080fd5b506100a76105d3565b34801561016657600080fd5b5061016f6105d9565b60408051600160a060020a039092168252519081900360200190f35b34801561019757600080fd5b506100ce600160a060020a03600435166105e8565b3480156101b857600080fd5b5061016f61067c565b600154604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600092600160a060020a0316916370a0823191602480830192602092919082900301818787803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b505050506040513d602081101561025057600080fd5b5051905090565b6000805b336000908152600260205260409020548110156103235733600090815260026020526040902080548290811061028d57fe5b9060005260206000209060020201600101544210151561031b5733600090815260026020526040902080546102e59190839081106102c757fe5b6000918252602090912060029091020154839063ffffffff61068b16565b3360009081526002602052604090208054919350908290811061030457fe5b600091825260208220600290910201818155600101555b60010161025b565b6000821161033057600080fd5b60015461034d90600160a060020a0316338463ffffffff6106a116565b60408051838152426020820152815133927f2c57dec1db0095a6b800c2698d5bbceef2c180c6ac43429769a719658983f677928290030190a25050565b60008054600160a060020a031633146103a257600080fd5b85841480156103b057508582145b15156103bb57600080fd5b5060005b8581101561058f57428383838181106103d457fe5b905060200201351115156103e757600080fd5b6104028585838181106103f657fe5b90506020020135610756565b151561040d57600080fd5b61043485858381811061041c57fe5b9050602002013560035461068b90919063ffffffff16565b61043c6101c1565b101561044757600080fd5b6002600088888481811061045757fe5b90506020020135600160a060020a0316600160a060020a0316600160a060020a03168152602001908152602001600020604080519081016040528087878581811015156104a057fe5b90506020020135815260200185858581811015156104ba57fe5b6020908102929092013590925283546001818101865560009586529482902084516002909202019081559201519190920155506104fc85858381811061041c57fe5b60035586868281811061050b57fe5b90506020020135600160a060020a0316600160a060020a03167fc6c8ef2a4f1a473f8774c45ca63e2fd2ba1ba5889364b0998a68678f633a363b868684818110151561055357fe5b90506020020135858585818110151561056857fe5b604080519485526020918202939093013590840152508051918290030190a26001016103bf565b50505050505050565b6002602052816000526040600020818154811015156105b357fe5b600091825260209091206002909102018054600190910154909250905082565b60035481565b600054600160a060020a031681565b600054600160a060020a031633146105ff57600080fd5b600160a060020a038116151561061457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600154600160a060020a031681565b60008282018381101561069a57fe5b9392505050565b82600160a060020a031663a9059cbb83836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561071d57600080fd5b505af1158015610731573d6000803e3d6000fd5b505050506040513d602081101561074757600080fd5b5051151561075157fe5b505050565b600010905600a165627a7a723058202b8c5bc529a75227820fdbb242bd52f7518f5e454238dd75c2c852395afb44420029000000000000000000000000df1d6405df92d981a2fb3ce68f6a03bac6c0e41f",
  "constructorArguments": "000000000000000000000000df1d6405df92d981a2fb3ce68f6a03bac6c0e41f"
}