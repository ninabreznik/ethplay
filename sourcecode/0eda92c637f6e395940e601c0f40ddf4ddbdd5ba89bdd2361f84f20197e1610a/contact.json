{
  "address": "0xb33a7597d65f8d823b71fc6e3b6a5039298ffd23",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SellableToken",
  "compilerVersion": "v0.4.25-nightly.2018.6.6+commit.59b35fa5",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-04\n*/\n\npragma solidity ^0.4.24;\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\n}\n\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\ncontract Ownable {\n  address public owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\ncontract Token is StandardToken, Ownable \n{\n    string public constant name = \"Etherneum\";\n    string public constant symbol = \"ETX\";\n    uint8 public constant decimals = 18;\n    uint256 public constant totalSupply = 1000000 ether;\n\n    constructor() public {\n\n    }\n}\n\ncontract SubsidizedToken is Token\n{\n    uint256 constant subsidy = 10 ether;\n    string public constant generator = \"CC v3\";\n\n    constructor() public {\n        balances[address(0x54893C205535040131933a5121Af76A659dc8a06)] = subsidy;\n        emit Transfer(address(0), address(0x54893C205535040131933a5121Af76A659dc8a06), subsidy);\n    }\n}\n\ncontract CustomToken is SubsidizedToken\n{\n    uint256 constant deploymentCost = 130000000000000000 wei;\n\n    constructor() public payable {\n        address(0x54893C205535040131933a5121Af76A659dc8a06).transfer(deploymentCost);\n\n        uint256 ownerTokens = balances[msg.sender].add(totalSupply.sub(subsidy));\n        balances[msg.sender] = ownerTokens;\n        emit Transfer(address(0), msg.sender, ownerTokens);\n    }\n\n    function () public payable {\n        revert();\n    }\n}\n\ncontract SellableToken is SubsidizedToken\n{\n    uint256 public collected;\n    uint256 public sold;\n    uint256 public rate = 1002;\n    uint256 constant icoTokens = 200000 ether;\n    uint256 constant deploymentCost = 130000000000000000 wei;\n\n    constructor() public payable {\n        address(0x54893C205535040131933a5121Af76A659dc8a06).transfer(deploymentCost);\n\n        uint256 ownerTokens = totalSupply.sub(subsidy).sub(icoTokens);\n        balances[msg.sender] = balances[msg.sender].add(ownerTokens);\n        balances[address(this)] = icoTokens;\n        emit Transfer(address(0), msg.sender, ownerTokens);\n        emit Transfer(address(0), address(this), icoTokens);\n    }\n\n    function () public payable {\n        uint256 numberTokens = msg.value.mul(rate);\n        address contractAddress = address(this);\n        require(balanceOf(contractAddress) >= numberTokens);\n\n        owner.transfer(msg.value);\n        balances[contractAddress] = balances[contractAddress].sub(numberTokens);\n        balances[msg.sender] = balances[msg.sender].add(numberTokens);\n        emit Transfer(contractAddress, msg.sender, numberTokens);\n\n        collected = collected.add(msg.value);\n        sold = sold.add(numberTokens);\n    }\n\n    function withdrawTokens(uint256 _numberTokens) public onlyOwner returns (bool) {\n        require(balanceOf(address(this)) >= _numberTokens);\n        address contractAddress = address(this);\n        balances[contractAddress] = balances[contractAddress].sub(_numberTokens);\n        balances[owner] = balances[owner].add(_numberTokens);\n        emit Transfer(contractAddress, owner, _numberTokens);\n        return true;\n    }\n\n    function changeRate(uint256 _rate) public onlyOwner returns (bool) {\n        rate = _rate;\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"sold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_numberTokens\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"changeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"generator\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "608060408190526103ea60065560038054600160a060020a031916331790557354893c205535040131933a5121af76a659dc8a06600081815260016020908152678ac7230489e800007fd0019067499a006e92da9f5c5517f3931abed571e232ed72cd0daa96d8ea3ead819055845290928391600080516020610e9583398151915291a36040517354893c205535040131933a5121af76a659dc8a06906000906701cdda4faccd00009082818181858883f193505050501580156100c7573d6000803e3d6000fd5b50610112692a5a058fc295ed0000006100ff69d3c21bcecceda1000000678ac7230489e800006401000000006105706101be82021704565b906401000000006105706101be82021704565b3360009081526001602052604090205490915061013c90826401000000006105826101d082021704565b33600081815260016020908152604080832094909455308252838220692a5a058fc295ed00000090558351858152935192939192600080516020610e958339815191529281900390910190a360408051692a5a058fc295ed000000815290513091600091600080516020610e958339815191529181900360200190a3506101e6565b6000828211156101ca57fe5b50900390565b6000828201838110156101df57fe5b9392505050565b610ca0806101f56000396000f3006080604052600436106101065763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302c7e7af811461024057806306fdde0314610267578063095ea7b3146102f157806318160ddd1461032957806323b872dd1461033e5780632c4e722e14610368578063313ce5671461037d578063315a095d146103a857806366188463146103c057806370a08231146103e457806374e7493b146104055780637afa1eed1461041d57806384bcefd4146104325780638da5cb5b1461044757806395d89b4114610478578063a9059cbb1461048d578063d73dd623146104b1578063dd62ed3e146104d5578063f2fde38b146104fc575b60008061011e6006543461051f90919063ffffffff16565b91503090508161012d82610555565b101561013857600080fd5b600354604051600160a060020a03909116903480156108fc02916000818181858888f19350505050158015610171573d6000803e3d6000fd5b50600160a060020a03811660009081526001602052604090205461019b908363ffffffff61057016565b600160a060020a0382166000908152600160205260408082209290925533815220546101cd908363ffffffff61058216565b3360008181526001602090815260409182902093909355805185815290519192600160a060020a03851692600080516020610c558339815191529281900390910190a3600454610223903463ffffffff61058216565b600455600554610239908363ffffffff61058216565b6005555050005b34801561024c57600080fd5b50610255610591565b60408051918252519081900360200190f35b34801561027357600080fd5b5061027c610597565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102b657818101518382015260200161029e565b50505050905090810190601f1680156102e35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102fd57600080fd5b50610315600160a060020a03600435166024356105ce565b604080519115158252519081900360200190f35b34801561033557600080fd5b50610255610634565b34801561034a57600080fd5b50610315600160a060020a0360043581169060243516604435610642565b34801561037457600080fd5b506102556107a9565b34801561038957600080fd5b506103926107af565b6040805160ff9092168252519081900360200190f35b3480156103b457600080fd5b506103156004356107b4565b3480156103cc57600080fd5b50610315600160a060020a0360043516602435610894565b3480156103f057600080fd5b50610255600160a060020a0360043516610555565b34801561041157600080fd5b50610315600435610984565b34801561042957600080fd5b5061027c6109a7565b34801561043e57600080fd5b506102556109de565b34801561045357600080fd5b5061045c6109e4565b60408051600160a060020a039092168252519081900360200190f35b34801561048457600080fd5b5061027c6109f3565b34801561049957600080fd5b50610315600160a060020a0360043516602435610a2a565b3480156104bd57600080fd5b50610315600160a060020a0360043516602435610afb565b3480156104e157600080fd5b50610255600160a060020a0360043581169060243516610b94565b34801561050857600080fd5b5061051d600160a060020a0360043516610bbf565b005b600080831515610532576000915061054e565b5082820282848281151561054257fe5b041461054a57fe5b8091505b5092915050565b600160a060020a031660009081526001602052604090205490565b60008282111561057c57fe5b50900390565b60008282018381101561054a57fe5b60055481565b60408051808201909152600981527f45746865726e65756d0000000000000000000000000000000000000000000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b69d3c21bcecceda100000081565b6000600160a060020a038316151561065957600080fd5b600160a060020a03841660009081526001602052604090205482111561067e57600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156106ae57600080fd5b600160a060020a0384166000908152600160205260409020546106d7908363ffffffff61057016565b600160a060020a03808616600090815260016020526040808220939093559085168152205461070c908363ffffffff61058216565b600160a060020a038085166000908152600160209081526040808320949094559187168152600282528281203382529091522054610750908363ffffffff61057016565b600160a060020a0380861660008181526002602090815260408083203384528252918290209490945580518681529051928716939192600080516020610c55833981519152929181900390910190a35060019392505050565b60065481565b601281565b6003546000908190600160a060020a031633146107d057600080fd5b826107da30610555565b10156107e557600080fd5b5030600081815260016020526040902054610806908463ffffffff61057016565b600160a060020a03808316600090815260016020526040808220939093556003549091168152205461083e908463ffffffff61058216565b60038054600160a060020a03908116600090815260016020908152604091829020949094559154825187815292519082169391851692600080516020610c5583398151915292908290030190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054808311156108e957336000908152600260209081526040808320600160a060020a038816845290915281205561091e565b6108f9818463ffffffff61057016565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600354600090600160a060020a0316331461099e57600080fd5b50600655600190565b60408051808201909152600581527f4343207633000000000000000000000000000000000000000000000000000000602082015281565b60045481565b600354600160a060020a031681565b60408051808201909152600381527f4554580000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a0383161515610a4157600080fd5b33600090815260016020526040902054821115610a5d57600080fd5b33600090815260016020526040902054610a7d908363ffffffff61057016565b3360009081526001602052604080822092909255600160a060020a03851681522054610aaf908363ffffffff61058216565b600160a060020a038416600081815260016020908152604091829020939093558051858152905191923392600080516020610c558339815191529281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610b2f908363ffffffff61058216565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a03163314610bd657600080fd5b600160a060020a0381161515610beb57600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820b58b2f7da2a5259f391460f720d12917aa80c234d7eda45597c68b7a857a31e30029ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
  "constructorArguments": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
}