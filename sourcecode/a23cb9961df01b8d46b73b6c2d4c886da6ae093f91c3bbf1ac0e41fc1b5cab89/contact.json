{
  "address": "0x88d50b466be55222019d71f9e8fae17f5f45fca1",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Cryptaur Token",
  "contractName": "CryptaurToken",
  "compilerVersion": "v0.4.17-nightly.2017.8.28+commit.d15cde2a",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-01-18\n*/\n\n/*\nThis file is part of the Cryptaur Contract.\n\nThe CryptaurToken Contract is free software: you can redistribute it and/or\nmodify it under the terms of the GNU lesser General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version. See the GNU lesser General Public License\nfor more details.\n\nYou should have received a copy of the GNU lesser General Public License\nalong with the CryptaurToken Contract. If not, see <http://www.gnu.org/licenses/>.\n\n@author Ilya Svirin <[emailÂ protected]>\nDonation address 0x3Ad38D1060d1c350aF29685B2b8Ec3eDE527452B\n*/\n\n\npragma solidity ^0.4.11;\n\ncontract owned {\n\n    address public owner;\n    address public candidate;\n\n    function owned() payable public {\n        owner = msg.sender;\n    }\n    \n    modifier onlyOwner {\n        require(owner == msg.sender);\n        _;\n    }\n\n    function changeOwner(address _owner) onlyOwner public {\n        candidate = _owner;\n    }\n    \n    function confirmOwner() public {\n        require(candidate == msg.sender);\n        owner = candidate;\n        delete candidate;\n    }\n}\n\ncontract CryptaurToken is owned {\n\n    address                      public cryptaurBackend;\n    bool                         public crowdsaleFinished;\n    uint                         public totalSupply;\n    mapping (address => uint256) public balanceOf;\n\n    string  public standard    = 'Token 0.1';\n    string  public name        = 'Cryptaur';\n    string  public symbol      = \"CPT\";\n    uint8   public decimals    = 8;\n\n    mapping (address => mapping (address => uint)) public allowed;\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n    event Mint(address indexed minter, uint tokens, uint8 originalCoinType, bytes32 originalTxHash);\n\n    // Fix for the ERC20 short address attack\n    modifier onlyPayloadSize(uint size) {\n        require(msg.data.length >= size + 4);\n        _;\n    }\n\n    function CryptaurToken(address _cryptaurBackend) public payable owned() {\n        cryptaurBackend = _cryptaurBackend;\n    }\n\n    function changeBackend(address _cryptaurBackend) public onlyOwner {\n        cryptaurBackend = _cryptaurBackend;\n    }\n    \n    function mintTokens(address _minter, uint _tokens, uint8 _originalCoinType, bytes32 _originalTxHash) public {\n        require(msg.sender == cryptaurBackend);\n        require(!crowdsaleFinished);\n        balanceOf[_minter] += _tokens;\n        totalSupply += _tokens;\n        Transfer(this, _minter, _tokens);\n        Mint(_minter, _tokens, _originalCoinType, _originalTxHash);\n    }\n    \n    function finishCrowdsale() onlyOwner public {\n        crowdsaleFinished = true;\n    }\n\n    function transfer(address _to, uint256 _value)\n        public onlyPayloadSize(2 * 32) {\n        require(balanceOf[msg.sender] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        balanceOf[msg.sender] -= _value;\n        balanceOf[_to] += _value;\n        Transfer(msg.sender, _to, _value);\n    }\n    \n    function transferFrom(address _from, address _to, uint _value)\n        public onlyPayloadSize(3 * 32) {\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]); // overflow\n        require(allowed[_from][msg.sender] >= _value);\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        allowed[_from][msg.sender] -= _value;\n        Transfer(_from, _to, _value);\n    }\n\n    function approve(address _spender, uint _value) public {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n    }\n\n    function allowance(address _owner, address _spender) public constant\n        returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minter\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"},{\"name\":\"_originalCoinType\",\"type\":\"uint8\"},{\"name\":\"_originalTxHash\",\"type\":\"bytes32\"}],\"name\":\"mintTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cryptaurBackend\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cryptaurBackend\",\"type\":\"address\"}],\"name\":\"changeBackend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_cryptaurBackend\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"originalCoinType\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"originalTxHash\",\"type\":\"bytes32\"}],\"name\":\"Mint\",\"type\":\"event\"}]",
  "bytecode": "606060405260408051908101604052600981527f546f6b656e20302e3100000000000000000000000000000000000000000000006020820152600590805161004b92916020019061012f565b5060408051908101604052600881527f43727970746175720000000000000000000000000000000000000000000000006020820152600690805161009392916020019061012f565b5060408051908101604052600381527f4350540000000000000000000000000000000000000000000000000000000000602082015260079080516100db92916020019061012f565b506008805460ff191681179055604051602080610c9c8339810160405280805160008054600160a060020a03338116600160a060020a03199283161790925560028054929093169116179055506101ca9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017057805160ff191683800117855561019d565b8280016001018555821561019d579182015b8281111561019d578251825591602001919060010190610182565b506101a99291506101ad565b5090565b6101c791905b808211156101a957600081556001016101b3565b90565b610ac3806101d96000396000f3006060604052361561010f5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610114578063095ea7b31461019e57806318160ddd146101c257806323b872dd146101e757806324b35ef21461020f578063313ce5671461023a5780633ae69708146102635780635a3b7e42146102925780635c658165146102a55780636c8381f8146102ca57806370a08231146102dd5780638da5cb5b146102fc57806395d89b411461030f578063a6f9dae114610322578063a9059cbb14610341578063b80cdcf614610363578063bd9b6d8614610376578063dd62ed3e14610389578063eaecfca7146103ae578063ece84fd5146103cd575b600080fd5b341561011f57600080fd5b6101276103f4565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016357808201518382015260200161014b565b50505050905090810190601f1680156101905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a957600080fd5b6101c0600160a060020a0360043516602435610492565b005b34156101cd57600080fd5b6101d56104f6565b60405190815260200160405180910390f35b34156101f257600080fd5b6101c0600160a060020a03600435811690602435166044356104fc565b341561021a57600080fd5b6101c0600160a060020a036004351660243560ff60443516606435610617565b341561024557600080fd5b61024d610714565b60405160ff909116815260200160405180910390f35b341561026e57600080fd5b61027661071d565b604051600160a060020a03909116815260200160405180910390f35b341561029d57600080fd5b61012761072c565b34156102b057600080fd5b6101d5600160a060020a0360043581169060243516610797565b34156102d557600080fd5b6102766107b4565b34156102e857600080fd5b6101d5600160a060020a03600435166107c3565b341561030757600080fd5b6102766107d5565b341561031a57600080fd5b6101276107e4565b341561032d57600080fd5b6101c0600160a060020a036004351661084f565b341561034c57600080fd5b6101c0600160a060020a0360043516602435610899565b341561036e57600080fd5b6101c0610960565b341561038157600080fd5b6101c06109b2565b341561039457600080fd5b6101d5600160a060020a0360043581169060243516610a01565b34156103b957600080fd5b6101c0600160a060020a0360043516610a2c565b34156103d857600080fd5b6103e0610a76565b604051901515815260200160405180910390f35b60068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561048a5780601f1061045f5761010080835404028352916020019161048a565b820191906000526020600020905b81548152906001019060200180831161046d57829003601f168201915b505050505081565b600160a060020a03338116600081815260096020908152604080832094871680845294909152908190208490557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259084905190815260200160405180910390a35050565b60035481565b6060606436101561050c57600080fd5b600160a060020a0384166000908152600460205260409020548290101561053257600080fd5b600160a060020a038316600090815260046020526040902054828101101561055957600080fd5b600160a060020a03808516600090815260096020908152604080832033909416835292905220548290101561058d57600080fd5b600160a060020a03808516600081815260046020908152604080832080548890039055878516808452818420805489019055848452600983528184203390961684529490915290819020805486900390557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350505050565b60025433600160a060020a0390811691161461063257600080fd5b60025474010000000000000000000000000000000000000000900460ff161561065a57600080fd5b600160a060020a0380851660008181526004602052604090819020805487019055600380548701905590913016907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a383600160a060020a03167f85b8cd618ec36a62e5dcb5f19cff9f436efdd6bbe41442302a6a11788f1ff84284848460405192835260ff90911660208301526040808301919091526060909101905180910390a250505050565b60085460ff1681565b600254600160a060020a031681565b60058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561048a5780601f1061045f5761010080835404028352916020019161048a565b600960209081526000928352604080842090915290825290205481565b600154600160a060020a031681565b60046020526000908152604090205481565b600054600160a060020a031681565b60078054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561048a5780601f1061045f5761010080835404028352916020019161048a565b60005433600160a060020a0390811691161461086a57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b604060443610156108a957600080fd5b600160a060020a033316600090815260046020526040902054829010156108cf57600080fd5b600160a060020a03831660009081526004602052604090205482810110156108f657600080fd5b600160a060020a033381166000818152600460205260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3505050565b60005433600160a060020a0390811691161461097b57600080fd5b6002805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055565b60015433600160a060020a039081169116146109cd57600080fd5b600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b60005433600160a060020a03908116911614610a4757600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60025474010000000000000000000000000000000000000000900460ff16815600a165627a7a723058206ee4f4df1e83c5b7cd3e1e0476d04c340816883313ccd260b1f37150e14140980029000000000000000000000000da291d62879a8a206ee6fbf198bc433aeef9a6a7",
  "constructorArguments": "000000000000000000000000da291d62879a8a206ee6fbf198bc433aeef9a6a7"
}