{
  "address": "0x7172433857c83a68f6dc98ede4391c49785fed0b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "LGRToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-09-26\n*/\n\n// GYM Ledger Token Contract - Project website: www.gymledger.com\n\n// Token distribution:\n\n//    Private Investors = 10%\n//    GYM Ledger Token Sale = 20%\n//    Ecosystem Development = 30%\n//    Long Term Fund (Future Growth, Partnerships, EtC) = 25%\n//    Advisors and Development = 15%\n\n// GYM Reward, LLC\n\npragma solidity ^0.4.25;\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract Ownable {\n  address public owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  constructor() public {\n    owner = msg.sender;\n  }\n  modifier onlyOwner() {\n    require(msg.sender == owner, \"Only owner can call this function\");\n    _;\n  }\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0), \"Valid address is required\");\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0), \"Valid address is required\");\n    require(_value <= balances[msg.sender], \"Not enougth balance\");\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n}\n\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0), \"Valid address is required\");\n    require(_value <= balances[_from], \"Not enough balance\");\n    require(_value <= allowed[_from][msg.sender], \"Amount exeeds allowance\");\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\ncontract LGRToken is Ownable, StandardToken {\n  string public constant name = \"GYM Ledger Token\";\n  string public constant symbol = \"LGR\";\n  uint8 public constant decimals = 18;\n  uint256 public constant MAX_SUPPLY = 100000000 * (10 ** uint256(decimals));\n  bool public paused;\n  address public minter;\n\n  event Minted(address indexed to, uint256 amount);\n  event Paused(bool paused);\n\n  modifier notPaused() {\n    require(paused == false, \"Token is paused\");\n    _;\n  }\n\n  modifier canMint() {\n    require((msg.sender == owner || msg.sender == minter), \"You are not authorized\");\n    _;\n  }\n\n  constructor() public {        \n    paused = false;              \n  }\n\n  function pause(bool _paused) public onlyOwner {\n    paused = _paused;\n    emit Paused(paused);\n  }\n\n  function setMinter(address _minter) public onlyOwner {\n    minter = _minter;\n  }\n\n  function mintTo(address _to, uint256 _amount) public canMint {\n    require((totalSupply + _amount) <= MAX_SUPPLY, \"Invalid amount\");\n    balances[_to] = balances[_to].add(_amount);\n    totalSupply = totalSupply.add(_amount);\n    emit Minted(_to, _amount);\n  }\n\n  function transfer(address _to, uint256 _value) public notPaused returns (bool) {\n    return super.transfer(_to, _value);\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public notPaused returns (bool) {\n    return super.transferFrom(_from, _to, _value);\n  }\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    return super.approve(_spender, _value);\n  }\n\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool success) {\n    return super.increaseApproval(_spender, _addedValue);\n  }\n\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool success) {\n    return super.decreaseApproval(_spender, _subtractedValue);\n  }\n\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a031916331790556004805460ff191690556110738061003c6000396000f3006080604052600436106101065763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302329a29811461010b57806306fdde031461012757806307546172146101b1578063095ea7b3146101e257806318160ddd1461021a57806323b872dd14610241578063313ce5671461026b57806332cb6b0c14610296578063449a52f8146102ab5780635c975abb146102cf57806366188463146102e457806370a08231146103085780638da5cb5b1461032957806395d89b411461033e578063a9059cbb14610353578063d73dd62314610377578063dd62ed3e1461039b578063f2fde38b146103c2578063fca3b5aa146103e3575b600080fd5b34801561011757600080fd5b506101256004351515610404565b005b34801561013357600080fd5b5061013c6104d8565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017657818101518382015260200161015e565b50505050905090810190601f1680156101a35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101bd57600080fd5b506101c661050f565b60408051600160a060020a039092168252519081900360200190f35b3480156101ee57600080fd5b50610206600160a060020a0360043516602435610523565b604080519115158252519081900360200190f35b34801561022657600080fd5b5061022f610536565b60408051918252519081900360200190f35b34801561024d57600080fd5b50610206600160a060020a036004358116906024351660443561053c565b34801561027757600080fd5b506102806105ad565b6040805160ff9092168252519081900360200190f35b3480156102a257600080fd5b5061022f6105b2565b3480156102b757600080fd5b50610125600160a060020a03600435166024356105c1565b3480156102db57600080fd5b50610206610742565b3480156102f057600080fd5b50610206600160a060020a036004351660243561074b565b34801561031457600080fd5b5061022f600160a060020a0360043516610757565b34801561033557600080fd5b506101c6610772565b34801561034a57600080fd5b5061013c610781565b34801561035f57600080fd5b50610206600160a060020a03600435166024356107b8565b34801561038357600080fd5b50610206600160a060020a0360043516602435610820565b3480156103a757600080fd5b5061022f600160a060020a036004358116906024351661082c565b3480156103ce57600080fd5b50610125600160a060020a0360043516610857565b3480156103ef57600080fd5b50610125600160a060020a03600435166109a7565b600054600160a060020a0316331461048c576040805160e560020a62461bcd02815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60448201527f6e00000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6004805460ff191682151517908190556040805160ff90921615158252517f0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2916020908290030190a150565b60408051808201909152601081527f47594d204c656467657220546f6b656e00000000000000000000000000000000602082015281565b6004546101009004600160a060020a031681565b600061052f8383610a64565b9392505050565b60015481565b60045460009060ff161561059a576040805160e560020a62461bcd02815260206004820152600f60248201527f546f6b656e206973207061757365640000000000000000000000000000000000604482015290519081900360640190fd5b6105a5848484610aca565b949350505050565b601281565b6a52b7d2dcc80cd2e400000081565b600054600160a060020a03163314806105e957506004546101009004600160a060020a031633145b151561063f576040805160e560020a62461bcd02815260206004820152601660248201527f596f7520617265206e6f7420617574686f72697a656400000000000000000000604482015290519081900360640190fd5b6001546a52b7d2dcc80cd2e400000090820111156106a7576040805160e560020a62461bcd02815260206004820152600e60248201527f496e76616c696420616d6f756e74000000000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a0382166000908152600260205260409020546106d0908263ffffffff610d2416565b600160a060020a0383166000908152600260205260409020556001546106fc908263ffffffff610d2416565b600155604080518281529051600160a060020a038416917f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe919081900360200190a25050565b60045460ff1681565b600061052f8383610d33565b600160a060020a031660009081526002602052604090205490565b600054600160a060020a031681565b60408051808201909152600381527f4c47520000000000000000000000000000000000000000000000000000000000602082015281565b60045460009060ff1615610816576040805160e560020a62461bcd02815260206004820152600f60248201527f546f6b656e206973207061757365640000000000000000000000000000000000604482015290519081900360640190fd5b61052f8383610e23565b600061052f8383610f9c565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b600054600160a060020a031633146108df576040805160e560020a62461bcd02815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60448201527f6e00000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a038116151561093f576040805160e560020a62461bcd02815260206004820152601960248201527f56616c6964206164647265737320697320726571756972656400000000000000604482015290519081900360640190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a03163314610a2f576040805160e560020a62461bcd02815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60448201527f6e00000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60048054600160a060020a039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b336000818152600360209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6000600160a060020a0383161515610b2c576040805160e560020a62461bcd02815260206004820152601960248201527f56616c6964206164647265737320697320726571756972656400000000000000604482015290519081900360640190fd5b600160a060020a038416600090815260026020526040902054821115610b9c576040805160e560020a62461bcd02815260206004820152601260248201527f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000604482015290519081900360640190fd5b600160a060020a0384166000908152600360209081526040808320338452909152902054821115610c17576040805160e560020a62461bcd02815260206004820152601760248201527f416d6f756e742065786565647320616c6c6f77616e6365000000000000000000604482015290519081900360640190fd5b600160a060020a038416600090815260026020526040902054610c40908363ffffffff61103516565b600160a060020a038086166000908152600260205260408082209390935590851681522054610c75908363ffffffff610d2416565b600160a060020a038085166000908152600260209081526040808320949094559187168152600382528281203382529091522054610cb9908363ffffffff61103516565b600160a060020a03808616600081815260036020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60008282018381101561052f57fe5b336000908152600360209081526040808320600160a060020a038616845290915281205480831115610d8857336000908152600360209081526040808320600160a060020a0388168452909152812055610dbd565b610d98818463ffffffff61103516565b336000908152600360209081526040808320600160a060020a03891684529091529020555b336000818152600360209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a0383161515610e85576040805160e560020a62461bcd02815260206004820152601960248201527f56616c6964206164647265737320697320726571756972656400000000000000604482015290519081900360640190fd5b33600090815260026020526040902054821115610eec576040805160e560020a62461bcd02815260206004820152601360248201527f4e6f7420656e6f756774682062616c616e636500000000000000000000000000604482015290519081900360640190fd5b33600090815260026020526040902054610f0c908363ffffffff61103516565b3360009081526002602052604080822092909255600160a060020a03851681522054610f3e908363ffffffff610d2416565b600160a060020a0384166000818152600260209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600360209081526040808320600160a060020a0386168452909152812054610fd0908363ffffffff610d2416565b336000818152600360209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60008282111561104157fe5b509003905600a165627a7a7230582007a2fc757c2bf87ef89ba4751f8475b9e477208249a43599d91078f7eaff9f4d0029"
}