{
  "address": "0xb62132e35a6c13ee1ee0f84dc5d40bad8d815206",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Nexo Token",
  "contractName": "NexoToken",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-04-20\n*/\n\npragma solidity 0.4.23;\n\n//\n// This source file is part of the current-contracts open source project\n// Copyright 2018 Zerion LLC\n// Licensed under Apache License v2.0\n//\n\n\n// @title Abstract ERC20 token interface\ncontract AbstractToken {\n\tfunction balanceOf(address owner) public view returns (uint256 balance);\n\tfunction transfer(address to, uint256 value) public returns (bool success);\n\tfunction transferFrom(address from, address to, uint256 value) public returns (bool success);\n\tfunction approve(address spender, uint256 value) public returns (bool success);\n\tfunction allowance(address owner, address spender) public view returns (uint256 remaining);\n\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract Owned {\n\n\taddress public owner = msg.sender;\n\taddress public potentialOwner;\n\n\tmodifier onlyOwner {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n\n\tmodifier onlyPotentialOwner {\n\t\trequire(msg.sender == potentialOwner);\n\t\t_;\n\t}\n\n\tevent NewOwner(address old, address current);\n\tevent NewPotentialOwner(address old, address potential);\n\n\tfunction setOwner(address _new)\n\t\tpublic\n\t\tonlyOwner\n\t{\n\t\temit NewPotentialOwner(owner, _new);\n\t\tpotentialOwner = _new;\n\t}\n\n\tfunction confirmOwnership()\n\t\tpublic\n\t\tonlyPotentialOwner\n\t{\n\t\temit NewOwner(owner, potentialOwner);\n\t\towner = potentialOwner;\n\t\tpotentialOwner = address(0);\n\t}\n}\n\n// @title SafeMath contract - Math operations with safety checks.\n// @author OpenZeppelin: https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/math/SafeMath.sol\ncontract SafeMath {\n\t/**\n\t* @dev Multiplies two numbers, throws on overflow.\n\t*/\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tif (a == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tuint256 c = a * b;\n\t\tassert(c / a == b);\n\t\treturn c;\n\t}\n\n\t/**\n\t* @dev Integer division of two numbers, truncating the quotient.\n\t*/\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\treturn a / b;\n\t}\n\n\t/**\n\t* @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n\t*/\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tassert(b <= a);\n\t\treturn a - b;\n\t}\n\n\t/**\n\t* @dev Adds two numbers, throws on overflow.\n\t*/\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tuint256 c = a + b;\n\t\tassert(c >= a);\n\t\treturn c;\n\t}\n\n\t/**\n\t* @dev Raises `a` to the `b`th power, throws on overflow.\n\t*/\n\tfunction pow(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tuint256 c = a ** b;\n\t\tassert(c >= a);\n\t\treturn c;\n\t}\n}\n\n/// Implements ERC 20 Token standard: https://github.com/ethereum/EIPs/issues/20\ncontract StandardToken is AbstractToken, Owned, SafeMath {\n\n\t/*\n\t *  Data structures\n\t */\n\tmapping (address => uint256) internal balances;\n\tmapping (address => mapping (address => uint256)) internal allowed;\n\tuint256 public totalSupply;\n\n\t/*\n\t *  Read and write storage functions\n\t */\n\t/// @dev Transfers sender's tokens to a given address. Returns success.\n\t/// @param _to Address of token receiver.\n\t/// @param _value Number of tokens to transfer.\n\tfunction transfer(address _to, uint256 _value) public returns (bool success) {\n\t\treturn _transfer(msg.sender, _to, _value);\n\t}\n\n\t/// @dev Allows allowed third party to transfer tokens from one address to another. Returns success.\n\t/// @param _from Address from where tokens are withdrawn.\n\t/// @param _to Address to where tokens are sent.\n\t/// @param _value Number of tokens to transfer.\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n\t\trequire(allowed[_from][msg.sender] >= _value);\n\t\tallowed[_from][msg.sender] -= _value;\n\n\t\treturn _transfer(_from, _to, _value);\n\t}\n\n\t/// @dev Returns number of tokens owned by given address.\n\t/// @param _owner Address of token owner.\n\tfunction balanceOf(address _owner) public view returns (uint256 balance) {\n\t\treturn balances[_owner];\n\t}\n\n\t/// @dev Sets approved amount of tokens for spender. Returns success.\n\t/// @param _spender Address of allowed account.\n\t/// @param _value Number of approved tokens.\n\tfunction approve(address _spender, uint256 _value) public returns (bool success) {\n\t\tallowed[msg.sender][_spender] = _value;\n\t\temit Approval(msg.sender, _spender, _value);\n\t\treturn true;\n\t}\n\n\t/*\n\t * Read storage functions\n\t */\n\t/// @dev Returns number of allowed tokens for given address.\n\t/// @param _owner Address of token owner.\n\t/// @param _spender Address of token spender.\n\tfunction allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n\t\treturn allowed[_owner][_spender];\n\t}\n\n\t/**\n\t* @dev Private transfer, can only be called by this contract.\n\t* @param _from The address of the sender.\n\t* @param _to The address of the recipient.\n\t* @param _value The amount to send.\n\t* @return success True if the transfer was successful, or throws.\n\t*/\n\tfunction _transfer(address _from, address _to, uint256 _value) private returns (bool success) {\n\t\trequire(_to != address(0));\n\t\trequire(balances[_from] >= _value);\n\t\tbalances[_from] -= _value;\n\t\tbalances[_to] = add(balances[_to], _value);\n\t\temit Transfer(_from, _to, _value);\n\t\treturn true;\n\t}\n}\n\n/// @title Token contract - Implements Standard ERC20 with additional features.\n/// @author Zerion - <[email protected]>\ncontract Token is StandardToken {\n\n\t// Time of the contract creation\n\tuint256 public creationTime;\n\n\tfunction Token() public {\n\t\t/* solium-disable-next-line security/no-block-members */\n\t\tcreationTime = now;\n\t}\n\n\t/// @dev Owner can transfer out any accidentally sent ERC20 tokens\n\tfunction transferERC20Token(AbstractToken _token, address _to, uint256 _value)\n\t\tpublic\n\t\tonlyOwner\n\t\treturns (bool success)\n\t{\n\t\trequire(_token.balanceOf(address(this)) >= _value);\n\t\tuint256 receiverBalance = _token.balanceOf(_to);\n\t\trequire(_token.transfer(_to, _value));\n\n\t\tuint256 receiverNewBalance = _token.balanceOf(_to);\n\t\tassert(receiverNewBalance == add(receiverBalance, _value));\n\n\t\treturn true;\n\t}\n\n\t/// @dev Increases approved amount of tokens for spender. Returns success.\n\tfunction increaseApproval(address _spender, uint256 _value) public returns (bool success) {\n\t\tallowed[msg.sender][_spender] = add(allowed[msg.sender][_spender], _value);\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\t\treturn true;\n\t}\n\n\t/// @dev Decreases approved amount of tokens for spender. Returns success.\n\tfunction decreaseApproval(address _spender, uint256 _value) public returns (bool success) {\n\t\tuint256 oldValue = allowed[msg.sender][_spender];\n\t\tif (_value > oldValue) {\n\t\t\tallowed[msg.sender][_spender] = 0;\n\t\t} else {\n\t\t\tallowed[msg.sender][_spender] = sub(oldValue, _value);\n\t\t}\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\t\treturn true;\n\t}\n}\n\n// @title Token contract - Implements Standard ERC20 Token for NEXO project.\n/// @author Zerion - <[email protected]>\ncontract NexoToken is Token {\n\n\t/// TOKEN META DATA\n\tstring constant public name = 'Nexo';\n\tstring constant public symbol = 'NEXO';\n\tuint8  constant public decimals = 18;\n\n\n\t/// ALOCATIONS\n\t// To calculate vesting periods we assume that 1 month is always equal to 30 days \n\n\n\t/*** Initial Investors' tokens ***/\n\n\t// 525,000,000 (52.50%) tokens are distributed among initial investors\n\t// These tokens will be distributed without vesting\n\n\taddress public investorsAllocation = address(0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF);\n\tuint256 public investorsTotal = 525000000e18;\n\n\n\t/*** Overdraft Reserves ***/\n\n\t// 250,000,000 (25%) tokens will be eventually available for overdraft\n\t// These tokens will be distributed monthly with a 6 month cliff within a year\n\t// 41,666,666 tokens will be unlocked every month after the cliff\n\t// 4 tokens will be unlocked without vesting to ensure that total amount sums up to 250,000,000.\n\n\taddress public overdraftAllocation = address(0x1111111111111111111111111111111111111111);\n\tuint256 public overdraftTotal = 250000000e18;\n\tuint256 public overdraftPeriodAmount = 41666666e18;\n\tuint256 public overdraftUnvested = 4e18;\n\tuint256 public overdraftCliff = 5 * 30 days;\n\tuint256 public overdraftPeriodLength = 30 days;\n\tuint8   public overdraftPeriodsNumber = 6;\n\n\n\t/*** Tokens reserved for Founders and Team ***/\n\n\t// 112,500,000 (11.25%) tokens will be eventually available for the team\n\t// These tokens will be distributed every 3 month without a cliff within 4 years\n\t// 7,031,250 tokens will be unlocked every 3 month\n\n\taddress public teamAllocation  = address(0x2222222222222222222222222222222222222222);\n\tuint256 public teamTotal = 112500000e18;\n\tuint256 public teamPeriodAmount = 7031250e18;\n\tuint256 public teamUnvested = 0;\n\tuint256 public teamCliff = 0;\n\tuint256 public teamPeriodLength = 3 * 30 days;\n\tuint8   public teamPeriodsNumber = 16;\n\n\n\n\t/*** Tokens reserved for Community Building and Airdrop Campaigns ***/\n\n\t// 60,000,000 (6%) tokens will be eventually available for the community\n\t// 10,000,002 tokens will be available instantly without vesting\n\t// 49,999,998 tokens will be distributed every 3 month without a cliff within 18 months\n\t// 8,333,333 tokens will be unlocked every 3 month\n\n\n\taddress public communityAllocation  = address(0x3333333333333333333333333333333333333333);\n\tuint256 public communityTotal = 60000000e18;\n\tuint256 public communityPeriodAmount = 8333333e18;\n\tuint256 public communityUnvested = 10000002e18;\n\tuint256 public communityCliff = 0;\n\tuint256 public communityPeriodLength = 3 * 30 days;\n\tuint8   public communityPeriodsNumber = 6;\n\n\n\n\t/*** Tokens reserved for Advisors, Legal and PR ***/\n\n\t// 52,500,000 (5.25%) tokens will be eventually available for advisers\n\t// 25,000,008 tokens will be available instantly without vesting\n\t// 27 499 992 tokens will be distributed monthly without a cliff within 12 months\n\t// 2,291,666 tokens will be unlocked every month\n\n\taddress public advisersAllocation  = address(0x4444444444444444444444444444444444444444);\n\tuint256 public advisersTotal = 52500000e18;\n\tuint256 public advisersPeriodAmount = 2291666e18;\n\tuint256 public advisersUnvested = 25000008e18;\n\tuint256 public advisersCliff = 0;\n\tuint256 public advisersPeriodLength = 30 days;\n\tuint8   public advisersPeriodsNumber = 12;\n\n\n\t/// CONSTRUCTOR\n\n\tfunction NexoToken() public {\n\t\t//  Overall, 1,000,000,000 tokens exist\n\t\ttotalSupply = 1000000000e18;\n\n\t\tbalances[investorsAllocation] = investorsTotal;\n\t\tbalances[overdraftAllocation] = overdraftTotal;\n\t\tbalances[teamAllocation] = teamTotal;\n\t\tbalances[communityAllocation] = communityTotal;\n\t\tbalances[advisersAllocation] = advisersTotal;\n\n\t\t// Unlock some tokens without vesting\n\t\tallowed[investorsAllocation][msg.sender] = investorsTotal;\n\t\tallowed[overdraftAllocation][msg.sender] = overdraftUnvested;\n\t\tallowed[communityAllocation][msg.sender] = communityUnvested;\n\t\tallowed[advisersAllocation][msg.sender] = advisersUnvested;\n\t}\n\n\t/// DISTRIBUTION\n\n\tfunction distributeInvestorsTokens(address _to, uint256 _amountWithDecimals)\n\t\tpublic\n\t\tonlyOwner\n\t{\n\t\trequire(transferFrom(investorsAllocation, _to, _amountWithDecimals));\n\t}\n\n\t/// VESTING\n\n\tfunction withdrawOverdraftTokens(address _to, uint256 _amountWithDecimals)\n\t\tpublic\n\t\tonlyOwner\n\t{\n\t\tallowed[overdraftAllocation][msg.sender] = allowance(overdraftAllocation, msg.sender);\n\t\trequire(transferFrom(overdraftAllocation, _to, _amountWithDecimals));\n\t}\n\n\tfunction withdrawTeamTokens(address _to, uint256 _amountWithDecimals)\n\t\tpublic\n\t\tonlyOwner \n\t{\n\t\tallowed[teamAllocation][msg.sender] = allowance(teamAllocation, msg.sender);\n\t\trequire(transferFrom(teamAllocation, _to, _amountWithDecimals));\n\t}\n\n\tfunction withdrawCommunityTokens(address _to, uint256 _amountWithDecimals)\n\t\tpublic\n\t\tonlyOwner \n\t{\n\t\tallowed[communityAllocation][msg.sender] = allowance(communityAllocation, msg.sender);\n\t\trequire(transferFrom(communityAllocation, _to, _amountWithDecimals));\n\t}\n\n\tfunction withdrawAdvisersTokens(address _to, uint256 _amountWithDecimals)\n\t\tpublic\n\t\tonlyOwner \n\t{\n\t\tallowed[advisersAllocation][msg.sender] = allowance(advisersAllocation, msg.sender);\n\t\trequire(transferFrom(advisersAllocation, _to, _amountWithDecimals));\n\t}\n\n\t/// @dev Overrides StandardToken.sol function\n\tfunction allowance(address _owner, address _spender)\n\t\tpublic\n\t\tview\n\t\treturns (uint256 remaining)\n\t{   \n\t\tif (_spender != owner) {\n\t\t\treturn allowed[_owner][_spender];\n\t\t}\n\n\t\tuint256 unlockedTokens;\n\t\tuint256 spentTokens;\n\n\t\tif (_owner == overdraftAllocation) {\n\t\t\tunlockedTokens = _calculateUnlockedTokens(\n\t\t\t\toverdraftCliff,\n\t\t\t\toverdraftPeriodLength,\n\t\t\t\toverdraftPeriodAmount,\n\t\t\t\toverdraftPeriodsNumber,\n\t\t\t\toverdraftUnvested\n\t\t\t);\n\t\t\tspentTokens = sub(overdraftTotal, balanceOf(overdraftAllocation));\n\t\t} else if (_owner == teamAllocation) {\n\t\t\tunlockedTokens = _calculateUnlockedTokens(\n\t\t\t\tteamCliff,\n\t\t\t\tteamPeriodLength,\n\t\t\t\tteamPeriodAmount,\n\t\t\t\tteamPeriodsNumber,\n\t\t\t\tteamUnvested\n\t\t\t);\n\t\t\tspentTokens = sub(teamTotal, balanceOf(teamAllocation));\n\t\t} else if (_owner == communityAllocation) {\n\t\t\tunlockedTokens = _calculateUnlockedTokens(\n\t\t\t\tcommunityCliff,\n\t\t\t\tcommunityPeriodLength,\n\t\t\t\tcommunityPeriodAmount,\n\t\t\t\tcommunityPeriodsNumber,\n\t\t\t\tcommunityUnvested\n\t\t\t);\n\t\t\tspentTokens = sub(communityTotal, balanceOf(communityAllocation));\n\t\t} else if (_owner == advisersAllocation) {\n\t\t\tunlockedTokens = _calculateUnlockedTokens(\n\t\t\t\tadvisersCliff,\n\t\t\t\tadvisersPeriodLength,\n\t\t\t\tadvisersPeriodAmount,\n\t\t\t\tadvisersPeriodsNumber,\n\t\t\t\tadvisersUnvested\n\t\t\t);\n\t\t\tspentTokens = sub(advisersTotal, balanceOf(advisersAllocation));\n\t\t} else {\n\t\t\treturn allowed[_owner][_spender];\n\t\t}\n\n\t\treturn sub(unlockedTokens, spentTokens);\n\t}\n\n\t/// @dev Overrides Owned.sol function\n\tfunction confirmOwnership()\n\t\tpublic\n\t\tonlyPotentialOwner\n\t{   \n\t\t// Forbid the old owner to distribute investors' tokens\n\t\tallowed[investorsAllocation][owner] = 0;\n\n\t\t// Allow the new owner to distribute investors' tokens\n\t\tallowed[investorsAllocation][msg.sender] = balanceOf(investorsAllocation);\n\n\t\t// Forbid the old owner to withdraw any tokens from the reserves\n\t\tallowed[overdraftAllocation][owner] = 0;\n\t\tallowed[teamAllocation][owner] = 0;\n\t\tallowed[communityAllocation][owner] = 0;\n\t\tallowed[advisersAllocation][owner] = 0;\n\n\t\tsuper.confirmOwnership();\n\t}\n\n\tfunction _calculateUnlockedTokens(\n\t\tuint256 _cliff,\n\t\tuint256 _periodLength,\n\t\tuint256 _periodAmount,\n\t\tuint8 _periodsNumber,\n\t\tuint256 _unvestedAmount\n\t)\n\t\tprivate\n\t\tview\n\t\treturns (uint256) \n\t{\n\t\t/* solium-disable-next-line security/no-block-members */\n\t\tif (now < add(creationTime, _cliff)) {\n\t\t\treturn _unvestedAmount;\n\t\t}\n\t\t/* solium-disable-next-line security/no-block-members */\n\t\tuint256 periods = div(sub(now, add(creationTime, _cliff)), _periodLength);\n\t\tperiods = periods > _periodsNumber ? _periodsNumber : periods;\n\t\treturn add(_unvestedAmount, mul(periods, _periodAmount));\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"overdraftAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisersPeriodLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investorsTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisersCliff\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamCliff\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investorsAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisersPeriodsNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amountWithDecimals\",\"type\":\"uint256\"}],\"name\":\"withdrawAdvisersTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amountWithDecimals\",\"type\":\"uint256\"}],\"name\":\"withdrawTeamTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"overdraftCliff\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"communityUnvested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"overdraftPeriodLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisersPeriodAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisersTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amountWithDecimals\",\"type\":\"uint256\"}],\"name\":\"distributeInvestorsTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"communityPeriodLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamUnvested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisersAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamPeriodAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"potentialOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisersUnvested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"overdraftPeriodAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"communityPeriodAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amountWithDecimals\",\"type\":\"uint256\"}],\"name\":\"withdrawOverdraftTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"communityCliff\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"overdraftUnvested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamPeriodsNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"overdraftPeriodsNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"overdraftTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamPeriodLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"communityAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"communityPeriodsNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"communityTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amountWithDecimals\",\"type\":\"uint256\"}],\"name\":\"withdrawCommunityTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"old\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"current\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"old\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"potential\",\"type\":\"address\"}],\"name\":\"NewPotentialOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": ""
}