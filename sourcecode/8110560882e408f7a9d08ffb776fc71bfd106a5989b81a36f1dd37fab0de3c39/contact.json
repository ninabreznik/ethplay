{
  "address": "0xc73bab28c99fb541febce254af4214453caf9cf0",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Gac1",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-15\n*/\n\npragma solidity >=0.4.23 <0.6.0;\n\n/**\n * @title SafeMath\n * @dev Unsigned math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n    /**\n     * @dev Multiplies two unsigned integers, reverts on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b);\n\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Adds two unsigned integers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n\n        return c;\n    }\n\n    /**\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Calculates the average of two numbers. Since these are integers,\n     * averages of an even and odd number cannot be represented, and will be\n     * rounded down.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n}\n\n/*** @title ERC20 interface */\ncontract ERC20 {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address _owner) public view returns (uint256);\n    function transfer(address _to, uint256 _value) public returns (bool);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\n    function approve(address _spender, uint256 _value) public returns (bool);\n    function allowance(address _owner, address _spender) public view returns (uint256);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n/*** @title ERC223 interface */\ncontract ERC223ReceivingContract {\n    function tokenFallback(address _from, uint _value, bytes memory _data) public;\n}\n\ncontract ERC223 {\n    function balanceOf(address who) public view returns (uint);\n    function transfer(address to, uint value) public returns (bool);\n    function transfer(address to, uint value, bytes memory data) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint value); //ERC 20 style\n    //event Transfer(address indexed from, address indexed to, uint value, bytes data);\n}\n\n/*** @title ERC223 token */\ncontract ERC223Token is ERC223 {\n    using SafeMath for uint;\n\n    mapping(address => uint256) balances;\n\n    function transfer(address _to, uint _value) public returns (bool) {\n        uint codeLength;\n        bytes memory empty;\n\n        assembly {\n            // Retrieve the size of the code on target address, this needs assembly .\n            codeLength := extcodesize(_to)\n        }\n\n        require(_value > 0);\n        require(balances[msg.sender] >= _value);\n        require(balances[_to] + _value > 0);\n        require(msg.sender != _to);\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n\n        if (codeLength > 0) {\n            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n            receiver.tokenFallback(msg.sender, _value, empty);\n            return false;\n        }\n\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transfer(address _to, uint _value, bytes memory _data) public returns (bool) {\n        // Standard function transfer similar to ERC20 transfer with no _data .\n        // Added due to backwards compatibility reasons .\n        uint codeLength;\n        assembly {\n            // Retrieve the size of the code on target address, this needs assembly .\n            codeLength := extcodesize(_to)\n        }\n\n        require(_value > 0);\n        require(balances[msg.sender] >= _value);\n        require(balances[_to] + _value > 0);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n\n        if (codeLength > 0) {\n            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n            receiver.tokenFallback(msg.sender, _value, _data);\n            return false;\n        }\n\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances[_owner];\n    }\n}\n\n//////////////////////////////////////////////////////////////////////////\n//////////////////////// [Grand Antique 1 Coin] MAIN ////////////////////////\n//////////////////////////////////////////////////////////////////////////\n/*** @title Owned */\ncontract Owned {\n    address public owner;\n\n    constructor() internal {\n        owner = msg.sender;\n        owner = 0xC6e938614a7940974Af873807127af6F8730c6Fc;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n}\n\n/*** @title GrandAntique1 Token */\ncontract Gac1 is ERC223Token, Owned {\n    string public constant name = \"Grand Antique 1 Coin\";\n    string public constant symbol = \"GAC1\";\n    uint8 public constant decimals = 18;\n\n    uint256 public tokenRemained = 250 * (10 ** 3) * (10 ** uint(decimals)); // 250K GrandAntique1, decimals set to 18\n    uint256 public totalSupply = 250 * (10 ** 3) * (10 ** uint(decimals));\n\n    bool private _pause = false;\n\n    mapping(address => bool) lockAddresses;\n\n    // constructor\n    constructor () public {\n        //allocate to ______\n        balances[0x9F7FAF3aaB518dc8CB11fd8042A0F371bbFFAf8A] = 250 * (10 ** 3) * (10 ** uint(decimals));\n    }\n\n    // change the contract owner\n    function changeOwner(address _new) public onlyOwner {\n    \trequire(_new != address(0));\n        owner = _new;\n    }\n\n    // pause all the transfer on the contract\n    function pauseContract() public onlyOwner {\n        _pause = true;\n    }\n\n    function resumeContract() public onlyOwner {\n        _pause = false;\n    }\n\n    function is_contract_paused() public view returns (bool) {\n        return _pause;\n    }\n\n    // lock one's wallet\n    function lock(address _addr) public onlyOwner {\n        lockAddresses[_addr] = true;\n    }\n\n    function unlock(address _addr) public onlyOwner {\n        lockAddresses[_addr] = false;\n    }\n\n    function am_I_locked(address _addr) public view returns (bool) {\n        return lockAddresses[_addr];\n    }\n\n    // contract can receive eth\n    function() external payable {}\n\n    // extract ether sent to the contract\n    function getETH(uint256 _amount) public onlyOwner {\n        msg.sender.transfer(_amount);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    ///////////////// ERC223 Standard functions /////////////////////////\n    /////////////////////////////////////////////////////////////////////\n    modifier transferable(address _addr) {\n        require(!_pause);\n        require(!lockAddresses[_addr]);\n        _;\n    }\n\n    function transfer(address _to, uint _value, bytes memory _data) public transferable(msg.sender) returns (bool) {\n        return super.transfer(_to, _value, _data);\n    }\n\n    function transfer(address _to, uint _value) public transferable(msg.sender) returns (bool) {\n        return super.transfer(_to, _value);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    ///////////////////  Rescue functions  //////////////////////////////\n    /////////////////////////////////////////////////////////////////////\n    function transferAnyERC20Token(address _tokenAddress, uint256 _value) public onlyOwner returns (bool) {\n        return ERC20(_tokenAddress).transfer(owner, _value);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenRemained\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"am_I_locked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resumeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"is_contract_paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040526934f086f3b33b6840000060028190556003556004805460ff1916905534801561002d57600080fd5b50600180546001600160a01b031990811633171673c6e938614a7940974af873807127af6f8730c6fc179055739f7faf3aab518dc8cb11fd8042a0f371bbffaf8a60009081526020526934f086f3b33b684000007f146df9f58448e2e5060ea9b90b2dd7bd43549af2fd3ca86792cd147a03aa06a355610c90806100b26000396000f3fe6080604052600436106101095760003560e01c80639851a5f211610095578063be45fd6211610064578063be45fd621461039a578063c4bc5da514610462578063dc39d06d14610477578063f435f5a7146104b0578063f73770e7146104e357610109565b80639851a5f2146102d2578063a6f9dae1146102e7578063a9059cbb1461031a578063b8901a411461036757610109565b8063313ce567116100dc578063313ce56714610219578063439766ce1461024457806370a08231146102595780638da5cb5b1461028c57806395d89b41146102bd57610109565b806306fdde031461010b57806318160ddd146101955780632835b45c146101bc5780632f6c493c146101e6575b005b34801561011757600080fd5b506101206104f8565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015a578181015183820152602001610142565b50505050905090810190601f1680156101875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a157600080fd5b506101aa610531565b60408051918252519081900360200190f35b3480156101c857600080fd5b50610109600480360360208110156101df57600080fd5b5035610537565b3480156101f257600080fd5b506101096004803603602081101561020957600080fd5b50356001600160a01b031661057f565b34801561022557600080fd5b5061022e6105b7565b6040805160ff9092168252519081900360200190f35b34801561025057600080fd5b506101096105bc565b34801561026557600080fd5b506101aa6004803603602081101561027c57600080fd5b50356001600160a01b03166105e2565b34801561029857600080fd5b506102a16105fd565b604080516001600160a01b039092168252519081900360200190f35b3480156102c957600080fd5b5061012061060c565b3480156102de57600080fd5b506101aa61062f565b3480156102f357600080fd5b506101096004803603602081101561030a57600080fd5b50356001600160a01b0316610635565b34801561032657600080fd5b506103536004803603604081101561033d57600080fd5b506001600160a01b038135169060200135610681565b604080519115158252519081900360200190f35b34801561037357600080fd5b506103536004803603602081101561038a57600080fd5b50356001600160a01b03166106ce565b3480156103a657600080fd5b50610353600480360360608110156103bd57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156103ed57600080fd5b8201836020820111156103ff57600080fd5b8035906020019184600183028401116401000000008311171561042157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106ec945050505050565b34801561046e57600080fd5b5061010961073b565b34801561048357600080fd5b506103536004803603604081101561049a57600080fd5b506001600160a01b03813516906020013561075e565b3480156104bc57600080fd5b50610109600480360360208110156104d357600080fd5b50356001600160a01b0316610806565b3480156104ef57600080fd5b50610353610841565b6040518060400160405280601481526020017f4772616e6420416e7469717565203120436f696e00000000000000000000000081525081565b60035481565b6001546001600160a01b0316331461054e57600080fd5b604051339082156108fc029083906000818181858888f1935050505015801561057b573d6000803e3d6000fd5b5050565b6001546001600160a01b0316331461059657600080fd5b6001600160a01b03166000908152600560205260409020805460ff19169055565b601281565b6001546001600160a01b031633146105d357600080fd5b6004805460ff19166001179055565b6001600160a01b031660009081526020819052604090205490565b6001546001600160a01b031681565b604051806040016040528060048152602001600160e01b63474143310281525081565b60025481565b6001546001600160a01b0316331461064c57600080fd5b6001600160a01b03811661065f57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600454600090339060ff161561069657600080fd5b6001600160a01b03811660009081526005602052604090205460ff16156106bc57600080fd5b6106c6848461084a565b949350505050565b6001600160a01b031660009081526005602052604090205460ff1690565b600454600090339060ff161561070157600080fd5b6001600160a01b03811660009081526005602052604090205460ff161561072757600080fd5b610732858585610a4f565b95945050505050565b6001546001600160a01b0316331461075257600080fd5b6004805460ff19169055565b6001546000906001600160a01b0316331461077857600080fd5b60015460408051600160e01b63a9059cbb0281526001600160a01b0392831660048201526024810185905290519185169163a9059cbb916044808201926020929091908290030181600087803b1580156107d157600080fd5b505af11580156107e5573d6000803e3d6000fd5b505050506040513d60208110156107fb57600080fd5b505190505b92915050565b6001546001600160a01b0316331461081d57600080fd5b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b60045460ff1690565b6000823b60608361085a57600080fd5b3360009081526020819052604090205484111561087657600080fd5b6001600160a01b038516600090815260208190526040902054840161089a57600080fd5b336001600160a01b03861614156108b057600080fd5b336000908152602081905260409020546108d0908563ffffffff610c3d16565b33600090815260208190526040808220929092556001600160a01b03871681522054610902908563ffffffff610c5216565b6001600160a01b0386166000908152602081905260409020558115610a0457604051600160e11b63607705c502815233600482018181526024830187905260606044840190815284516064850152845189946001600160a01b0386169463c0ee0b8a9490938b93899360840190602085019080838360005b8381101561099257818101518382015260200161097a565b50505050905090810190601f1680156109bf5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156109e057600080fd5b505af11580156109f4573d6000803e3d6000fd5b5050505060009350505050610800565b6040805185815290516001600160a01b0387169133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b6000833b83610a5d57600080fd5b33600090815260208190526040902054841115610a7957600080fd5b6001600160a01b0385166000908152602081905260409020548401610a9d57600080fd5b33600090815260208190526040902054610abd908563ffffffff610c3d16565b33600090815260208190526040808220929092556001600160a01b03871681522054610aef908563ffffffff610c5216565b6001600160a01b0386166000908152602081905260409020558015610bf057604051600160e11b63607705c502815233600482018181526024830187905260606044840190815286516064850152865189946001600160a01b0386169463c0ee0b8a9490938b938b9360840190602085019080838360005b83811015610b7f578181015183820152602001610b67565b50505050905090810190601f168015610bac5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610bcd57600080fd5b505af1158015610be1573d6000803e3d6000fd5b50505050600092505050610c36565b6040805185815290516001600160a01b0387169133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a360019150505b9392505050565b600082821115610c4c57600080fd5b50900390565b600082820183811015610c3657600080fdfea165627a7a723058200f688fd29f67390b1e5c7b947ce79c39a09e1bc9c2ac792f5019691c01ee93fa0029"
}