{
  "address": "0x1570158e0ad7c5b95c69abe0ce4536f522a1cde6",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "personCall",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-06-10\n*/\n\npragma solidity ^0.4.24;\n\n\nlibrary SafeMath {\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    function div(uint a, uint b) internal pure returns (uint c) { \n        require(b > 0);\n        c = a / b;\n    }\n}\n  \ncontract owned {\n\n    address public manager;\n\n    constructor() public{\n        manager = msg.sender;\n    }\n \n    modifier onlymanager{\n        require(msg.sender == manager);\n        _;\n    }\n\n    function transferownership(address _new_manager) public onlymanager {\n        manager = _new_manager;\n    }\n}\n\ninterface master{\n     function owner_slave(uint _index) external view returns(address);\n     function owner_slave_amount()external view returns(uint);\n}\n \n\n\ninterface controller{\n    function controlMintoken(uint8 _index, address target, uint mintedAmount) external;\n    function controlBurntoken(uint8 _index, address target, uint burnedAmount) external;\n    function controlSearchBoxCount(uint8 _boxIndex, address target)external view returns (uint);\n    function controlSearchCount(uint8 _boxIndex, uint8 _materialIndex, address target)external view returns (uint);\n    function controlPetCount(uint8 _boxIndex, uint8 _materialIndex, address target)external view returns (uint);\n}\n\ncontract personCall is owned{ \n    \n    address public master_address;\n    address public BoxFactory_address =0x8842511f9eaaa75904017ff8ca26ba03ee2ddfa0;\n    address public MaterialFactory_address =0x65844f2e98495b6c8780f689c5d13bb7f4975d65;\n    address public PetFactory_address;\n    \n    address[] public dungeons; \n\n    function checkSlave() public view returns(bool){ \n        uint length = master(master_address).owner_slave_amount();\n        for(uint i=1;i<=length;i++){\n             address slave = master(master_address).owner_slave(i);\n             if(msg.sender == slave){\n                 return true;\n             }\n        }\n        return false;\n    }\n    \n    function checkDungeons() public view returns(bool){ \n        for(uint i=0;i<dungeons.length;i++){\n             if(msg.sender == dungeons[i]){\n                 return true;\n             }\n        }\n        return false;\n    }\n    \n    \n    \n    function callTreasureMin(uint8 index,address target, uint mintedAmount) public {    \n         require(checkSlave() || checkDungeons());\n         controller mintokener = controller(BoxFactory_address);\n   \n         mintokener.controlMintoken(index, target, mintedAmount);\n    }\n\n \n    function callTreasureBurn(uint8 index, uint burnedAmount) public{       \n        controller burnTokenr = controller(BoxFactory_address);\n        burnTokenr.controlBurntoken(index, msg.sender, burnedAmount);\n    }\n    \n    \n    function showBoxAmount(uint8 _boxIndex) public view returns (uint){         \n        controller showBoxer = controller(BoxFactory_address);\n        return showBoxer.controlSearchBoxCount(_boxIndex,msg.sender);\n    }\n    \n    function showMaterialAmount(uint8 _boxIndex, uint8 _materialIndex) public view returns (uint){   \n        controller showMaterialer = controller(MaterialFactory_address);\n        return showMaterialer.controlSearchCount(_boxIndex,_materialIndex,msg.sender);\n    }\n    \n    function showPetAmount(uint8 _boxIndex, uint8 _materialIndex) public view returns (uint){   \n        controller showPeter = controller(PetFactory_address);\n        return showPeter.controlPetCount(_boxIndex,_materialIndex,msg.sender);\n    }\n    \n    \n    \n    function push_dungeons(address _dungeons_address) public onlymanager{               \n        dungeons.push(_dungeons_address);\n    }\n    \n    function change_dungeons_address(uint index,address _dungeons_address) public onlymanager{    \n        dungeons[index] = _dungeons_address;\n    }\n    \n    function set_master_address(address _master_address) public onlymanager{        \n        master_address = _master_address;\n    }\n    \n    function set_BoxFactory_address(address _BoxFactory_address) public onlymanager{        \n        BoxFactory_address = _BoxFactory_address;\n    }\n    \n    function set_MatFactory_address(address _MaterialFactory_address) public onlymanager{        \n        MaterialFactory_address = _MaterialFactory_address;\n    }\n    \n    function set_PetFactory_address(address _PetFactory_address) public onlymanager{        \n        PetFactory_address = _PetFactory_address;\n    }\n    \n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"_boxIndex\",\"type\":\"uint8\"}],\"name\":\"showBoxAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"_dungeons_address\",\"type\":\"address\"}],\"name\":\"change_dungeons_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PetFactory_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_BoxFactory_address\",\"type\":\"address\"}],\"name\":\"set_BoxFactory_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_MaterialFactory_address\",\"type\":\"address\"}],\"name\":\"set_MatFactory_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkDungeons\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dungeons_address\",\"type\":\"address\"}],\"name\":\"push_dungeons\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dungeons\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaterialFactory_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"master_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\"},{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"callTreasureMin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BoxFactory_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_PetFactory_address\",\"type\":\"address\"}],\"name\":\"set_PetFactory_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkSlave\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_boxIndex\",\"type\":\"uint8\"},{\"name\":\"_materialIndex\",\"type\":\"uint8\"}],\"name\":\"showMaterialAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_master_address\",\"type\":\"address\"}],\"name\":\"set_master_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new_manager\",\"type\":\"address\"}],\"name\":\"transferownership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_boxIndex\",\"type\":\"uint8\"},{\"name\":\"_materialIndex\",\"type\":\"uint8\"}],\"name\":\"showPetAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\"},{\"name\":\"burnedAmount\",\"type\":\"uint256\"}],\"name\":\"callTreasureBurn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
  "bytecode": "608060405260028054600160a060020a0319908116738842511f9eaaa75904017ff8ca26ba03ee2ddfa0179091556003805482167365844f2e98495b6c8780f689c5d13bb7f4975d651790556000805490911633179055610b41806100656000396000f3006080604052600436106101115763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663040575558114610116578063297a252f14610143578063481c6a751461016957806350232e7d1461019a5780635d3d4c44146101af57806366ff2240146101d05780638259f904146101f1578063941fc8bc1461021a578063956e958a1461023b578063a65ae62914610253578063a9cd003914610268578063bf88d3461461027d578063c406bb1e146102a7578063d51f3997146102bc578063da7c186b146102dd578063dd97b1cd146102f2578063e28e9d5214610313578063e8b5b79614610334578063ee1ee5b414610355578063f1a4c4ee14610376575b600080fd5b34801561012257600080fd5b5061013160ff60043516610394565b60408051918252519081900360200190f35b34801561014f57600080fd5b50610167600435600160a060020a0360243516610438565b005b34801561017557600080fd5b5061017e610491565b60408051600160a060020a039092168252519081900360200190f35b3480156101a657600080fd5b5061017e6104a0565b3480156101bb57600080fd5b50610167600160a060020a03600435166104af565b3480156101dc57600080fd5b50610167600160a060020a03600435166104f5565b3480156101fd57600080fd5b5061020661053b565b604080519115158252519081900360200190f35b34801561022657600080fd5b50610167600160a060020a036004351661058d565b34801561024757600080fd5b5061017e600435610603565b34801561025f57600080fd5b5061017e61062b565b34801561027457600080fd5b5061017e61063a565b34801561028957600080fd5b5061016760ff60043516600160a060020a0360243516604435610649565b3480156102b357600080fd5b5061017e610705565b3480156102c857600080fd5b50610167600160a060020a0360043516610714565b3480156102e957600080fd5b5061020661075a565b3480156102fe57600080fd5b5061013160ff600435811690602435166108cb565b34801561031f57600080fd5b50610167600160a060020a0360043516610978565b34801561034057600080fd5b50610167600160a060020a03600435166109be565b34801561036157600080fd5b5061013160ff60043581169060243516610a04565b34801561038257600080fd5b5061016760ff60043516602435610a82565b600254604080517f4e7c031600000000000000000000000000000000000000000000000000000000815260ff841660048201523360248201529051600092600160a060020a0316918291634e7c03169160448082019260209290919082900301818887803b15801561040557600080fd5b505af1158015610419573d6000803e3d6000fd5b505050506040513d602081101561042f57600080fd5b50519392505050565b600054600160a060020a0316331461044f57600080fd5b8060058381548110151561045f57fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505050565b600054600160a060020a031681565b600454600160a060020a031681565b600054600160a060020a031633146104c657600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a0316331461050c57600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000805b60055481101561058457600580548290811061055757fe5b600091825260209091200154600160a060020a031633141561057c5760019150610589565b60010161053f565b600091505b5090565b600054600160a060020a031633146105a457600080fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600580548290811061061157fe5b600091825260209091200154600160a060020a0316905081565b600354600160a060020a031681565b600154600160a060020a031681565b600061065361075a565b80610661575061066161053b565b151561066c57600080fd5b50600254604080517fe454668800000000000000000000000000000000000000000000000000000000815260ff86166004820152600160a060020a0385811660248301526044820185905291519190921691829163e45466889160648082019260009290919082900301818387803b1580156106e757600080fd5b505af11580156106fb573d6000803e3d6000fd5b5050505050505050565b600254600160a060020a031681565b600054600160a060020a0316331461072b57600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600080600080600160009054906101000a9004600160a060020a0316600160a060020a031663d43b9c866040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b505050506040513d60208110156107f657600080fd5b50519250600191505b8282116108c057600154604080517fcf2da6b8000000000000000000000000000000000000000000000000000000008152600481018590529051600160a060020a039092169163cf2da6b8916024808201926020929091908290030181600087803b15801561086d57600080fd5b505af1158015610881573d6000803e3d6000fd5b505050506040513d602081101561089757600080fd5b5051905033600160a060020a03821614156108b557600193506108c5565b6001909101906107ff565b600093505b50505090565b600354604080517faa607fa000000000000000000000000000000000000000000000000000000000815260ff8086166004830152841660248201523360448201529051600092600160a060020a031691829163aa607fa09160648082019260209290919082900301818887803b15801561094457600080fd5b505af1158015610958573d6000803e3d6000fd5b505050506040513d602081101561096e57600080fd5b5051949350505050565b600054600160a060020a0316331461098f57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a031633146109d557600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60048054604080517f0642f8a900000000000000000000000000000000000000000000000000000000815260ff80871694820194909452928416602484015233604484015251600092600160a060020a03909216918291630642f8a99160648082019260209290919082900301818887803b15801561094457600080fd5b600254604080517f38e8836500000000000000000000000000000000000000000000000000000000815260ff85166004820152336024820152604481018490529051600160a060020a039092169182916338e8836591606480830192600092919082900301818387803b158015610af857600080fd5b505af1158015610b0c573d6000803e3d6000fd5b505050505050505600a165627a7a7230582088bbbd489507b1bb87eca57f2ef15a7ec5d9450c6c40705bc25db36e0d45836e0029"
}