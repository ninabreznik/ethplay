{
  "address": "0x310828368f4787c09c46e0b8973ca4a79b666b63",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TOKEN",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-13\n*/\n\npragma solidity ^0.4.24;\n\ncontract Owned\n{\n  address internal owner;\n  address private manager;\n  address internal sink;\n\n  constructor() public\n  {\n    owner = msg.sender;\n    manager = msg.sender;\n    sink = msg.sender;\n  }\n\n  modifier onlyOwner\n  {\n    require(msg.sender == owner, \"Contract owner is required\");\n    _;\n  }\n\n  modifier onlyManager\n  {\n    require(msg.sender == manager, \"Contract manager is required\");\n    _;\n  }\n\n  modifier onlyManagerNUser(address user)\n  {\n    require(msg.sender == manager || msg.sender == user, \"Contract manager or wallet owner is required\");\n    _;\n  }\n\n  function transferOwnership(address newOwner, address newManager, address newSink) onlyOwner public\n  {\n    owner = newOwner;\n    manager = newManager;\n    sink = newSink;\n  }\n}\n\n/*\ninterface tokenRecipient\n{\n  function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external;\n}\n*/\n\ncontract SupplyInfo\n{\n  string public name;\n  string public symbol;\n  uint8 constant public decimals = 18;\n  uint256 constant internal denominator = 10 ** uint256(decimals);\n  uint256 public totalSupply;\n\n  constructor(\n      uint256 initialSupply,\n      string tokenName,\n      string tokenSymbol\n  )\n    public\n  {\n    totalSupply = initialSupply * denominator;\n    name = tokenName;\n    symbol = tokenSymbol;\n  }\n}\n\ncontract Transferable\n{\n  mapping (address => uint256) public balanceOf;\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  function _transferTokens(address _from, address _to, uint _value) internal\n  {\n    require(balanceOf[_from] >= _value, \"Not enough funds\");\n    require(balanceOf[_to] + _value >= balanceOf[_to], \"BufferOverflow on receiver side\");\n\n    // uint previousBalances = balanceOf[_from] + balanceOf[_to];\n\n    balanceOf[_from] -= _value;\n    balanceOf[_to] += _value;\n    emit Transfer(_from, _to, _value);\n\n    // assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n  }\n\n  function transfer(address _to, uint256 _value) public returns (bool success)\n  {\n    _transferTokens(msg.sender, _to, _value);\n    return true;\n  }\n\n\n}\n\n\ncontract ERC20 is SupplyInfo, Transferable\n{\n  constructor(\n      uint256 initialSupply,\n      string tokenName,\n      string tokenSymbol\n  ) SupplyInfo(initialSupply, tokenName, tokenSymbol)\n    public\n  {\n    balanceOf[this] = totalSupply;\n  }\n}\n\ncontract Manageable is Transferable, Owned {\n  event Deposit(\n      address indexed _from,\n      // bytes32 indexed _id,\n      uint _value,\n      string comment\n  );\n\n  event Withdraw(\n      address indexed _to,\n      uint _value,\n      string comment\n  );\n\n  // function deposit(bytes32 _id) public payable {\n  function deposit(string comment) public payable {\n    emit Deposit(msg.sender, msg.value, comment);\n  }\n\n  function withdraw(uint256 amount, string comment) onlyOwner public {\n    _transferEther(sink, amount);\n    emit Withdraw(sink, amount, comment);\n  }\n\n  function _transferEther(address _to, uint _value) internal {\n    address contractAddress = this;\n    require(contractAddress.balance >= _value);\n    _to.transfer(_value);\n  }\n}\n\ncontract Tradeable is ERC20, Manageable {\n\n\n  event Buy(address indexed who, uint256 amount, uint256 buyPrice, string comment);\n  event Sell(address indexed who, uint256 amount, uint256 sellPrice, string comment);\n\n  function _convertEtherToToken(uint256 etherAmount, uint256 buyPrice) pure internal returns (uint256) {\n    require(buyPrice > 0, \"Buy price cant be zero\");\n\n    // BufferOverflow just in case\n    require(etherAmount * denominator > etherAmount, \"BufferOverflow\");\n    uint256 tokenAmount = etherAmount * denominator / buyPrice;\n\n    return tokenAmount;\n  }\n\n  function _convertTokenToEther(uint256 tokenAmount, uint256 sellPrice) pure internal returns (uint256) {\n    require(sellPrice > 0, \"Sell price cant be zero\");\n\n    // BufferOverflow just in case\n    require(tokenAmount * sellPrice > tokenAmount, \"BufferOverflow\");\n    uint256 etherAmount = tokenAmount * sellPrice / denominator;\n    return etherAmount;\n  }\n\n  function _buy(uint256 etherAmount, uint256 buyPrice, string comment) internal {\n    require(etherAmount > 0, \"Ether amount cant be zero\");\n    uint256 tokenAmount = _convertEtherToToken(etherAmount, buyPrice);\n\n    // At this point transaction is accepted, just send tokens in return\n    _transferTokens(this, msg.sender, tokenAmount);\n    _transferEther(sink, etherAmount);\n    emit Buy(msg.sender, tokenAmount, buyPrice, comment);\n  }\n\n  function _sell(uint256 tokenAmount, uint256 sellPrice, string comment) internal {\n    uint256 etherAmount = _convertTokenToEther(tokenAmount, sellPrice);\n    require(etherAmount > 0, \"Ether amount after convert become zero - reverting\"); // makes no sense otherwise\n\n    _transferTokens(msg.sender, this, tokenAmount);\n    _transferEther(msg.sender, tokenAmount);\n    emit Sell(msg.sender, tokenAmount,sellPrice, comment);\n  }\n}\n\ncontract FrezeeableAccounts is Transferable, Owned {\n  mapping (address => bool) internal frozenAccount;\n  /* This generates a public event  on the blockchain that will notify clients */\n  event FrozenFunds(address indexed target, bool indexed frozen);\n\n  modifier notFrozen(address target)\n  {\n    require(!frozenAccount[target], \"Account is frozen\");\n    _;\n  }\n\n  function freezeAccount(address target, bool freeze) onlyManager public {\n    frozenAccount[target] = freeze;\n    emit FrozenFunds(target, freeze);\n  }\n\n  function iamFrozen() view public returns(bool isFrozen)\n  {\n    return frozenAccount[msg.sender];\n  }\n\n  function transfer(address _to, uint256 _value) public notFrozen(msg.sender) notFrozen(_to) returns (bool success)\n  {\n    return super.transfer(_to, _value);\n  }\n}\n\ncontract Destructable is Owned {\n  event Destruct(string indexed comment);\n\n  function destruct(string comment) onlyOwner public {\n    selfdestruct(owner);\n    emit Destruct(comment);\n  }\n}\n\ncontract CoeficientTransform is SupplyInfo\n{\n  function applyChange(uint256 currentCoeficient, uint256 value) pure internal returns(uint256)\n  {\n    return currentCoeficient * value / denominator;\n  }\n\n  function deduceChange(uint256 currentCoeficient, uint256 value) pure internal returns(uint256)\n  {\n    require(value > 0, \"Cant deduce zero change\");\n    uint256 opposite = denominator * denominator / value;\n    return applyChange(currentCoeficient, opposite);\n  }\n}\n\ncontract DayCounter\n{\n  uint private DayZero;\n  uint internal constant SecondsInDay = 60 * 60 * 24;\n\n  constructor(uint ZeroDayTimestamp) public\n  {\n    DayZero = ZeroDayTimestamp;\n  }\n\n  function daysSince(uint a, uint b) pure internal returns(uint)\n  {\n    return (b - a) / SecondsInDay;\n  }\n\n  function DaysPast() view public returns(uint)\n  {\n    return daysSince(DayZero, now);\n  }\n}\n\ncontract InvestmentTransform is CoeficientTransform, DayCounter\n{\n  uint constant private percentsPerYear = 1095;\n\n  function currentRoiInPersents() view public returns(uint)\n  {\n    uint currentPercents = percentsPerYear * DaysPast() / 365;\n    return 100 + currentPercents;\n  }\n\n  function investmentRate(uint256 currentCoeficient) view internal returns(uint256)\n  {\n    uint256 dailyMultiply = denominator * currentRoiInPersents() / 100;\n    return applyChange(currentCoeficient, dailyMultiply);\n  }\n}\n\ncontract LinkedToFiatTransform is CoeficientTransform, Owned\n{\n  uint256 public fiatDriftAncor;\n  uint256 public etherToFiatRate;\n\n  event FiatLink(uint256 ancorDrift, uint exchangeRate);\n\n  function setFiatLinkedCoef(uint256 newAncor, uint256 newRate) public onlyManager {\n    require(newAncor > 0 && newRate > 0, \"Coeficients cant be zero\");\n    fiatDriftAncor = newAncor;\n    etherToFiatRate = newRate;\n    emit FiatLink(newAncor, newRate);\n  }\n\n  function fiatDrift(uint256 currentCoeficient) view internal returns(uint256)\n  {\n    return applyChange(currentCoeficient, fiatDriftAncor);\n  }\n\n  function FiatToEther(uint256 amount) view internal returns(uint256)\n  {\n    return deduceChange(amount, etherToFiatRate);\n  }\n\n  function EtherToFiat(uint256 amount) view internal returns(uint256)\n  {\n    return applyChange(amount, etherToFiatRate);\n  }\n}\n\ncontract StartStopSell is CoeficientTransform, Owned\n{\n  bool internal buyAvailable = false;\n  bool internal sellAvailable = false;\n\n  function updateBuySellFlags(bool allowBuy, bool allowSell) public onlyManager\n  {\n    buyAvailable = allowBuy;\n    sellAvailable = allowSell;\n  }\n\n  modifier canBuy()\n  {\n    require(buyAvailable, \"Buy currently disabled\");\n    _;\n  }\n\n  modifier canSell()\n  {\n    require(sellAvailable, \"Sell currently disabled\");\n    _;\n  }\n}\n\ncontract LISCTrade is FrezeeableAccounts, Tradeable, LinkedToFiatTransform, InvestmentTransform, StartStopSell\n{\n  uint256 internal baseFiatPrice;\n  uint256 public minBuyAmount;\n\n  constructor(uint256 basePrice) public\n  {\n    baseFiatPrice = basePrice;\n  }\n\n  function setMinTrade(uint256 _minBuyAmount) onlyManager public\n  {\n    minBuyAmount = _minBuyAmount;\n  }\n\n  function priceInUSD() view public returns(uint256)\n  {\n    uint256 price = baseFiatPrice;\n    price = fiatDrift(price);\n    price = investmentRate(price);\n    require(price > 0, \"USD price cant be zero\");\n    return price;\n  }\n\n  function priceInETH() view public returns(uint256)\n  {\n    return FiatToEther(priceInUSD());\n  }\n\n  function tokensPerETH() view public returns(uint256)\n  {\n    uint256 EthPerToken = priceInETH();\n    return deduceChange(denominator, EthPerToken);\n  }\n\n  function buy(string comment) payable public canBuy notFrozen(msg.sender)\n  {\n    uint256 USDAmount = EtherToFiat(msg.value);\n    require(USDAmount > minBuyAmount, \"You cant buy lesser than min USD amount\");\n    _buy(msg.value, priceInETH(), comment);\n  }\n\n  function sell(uint256 tokenAmount, string comment) public canSell notFrozen(msg.sender)\n  {\n    _sell(tokenAmount, priceInETH(), comment);\n  }\n}\n\n\ncontract MintNBurn is ERC20\n{\n  event Mint(address indexed target, uint256 mintedAmount, string comment);\n  event Burn(address indexed target, uint256 mintedAmount, string comment);\n\n\n  function mintToken(address target, uint256 mintedAmount, string comment) internal\n  {\n    balanceOf[this] += mintedAmount;\n    totalSupply += mintedAmount;\n\n    _transferTokens(this, target, mintedAmount);\n    emit Mint(target, mintedAmount, comment);\n  }\n\n  function burnToken(address target, uint256 amount, string comment) internal\n  {\n    _transferTokens(msg.sender, this, amount);\n    balanceOf[this] -= amount;\n    totalSupply -= amount;\n    emit Burn(target, amount, comment);\n  }\n}\n\ncontract Upgradeable is MintNBurn, Owned\n{\n  address private prevVersion;\n  address private newVersion = 0x0;\n  mapping (address => bool) public upgraded;\n\n  constructor(address upgradeFrom) internal {\n    prevVersion = upgradeFrom;\n  }\n\n  function setUpgradeTo(address upgradeTo) public onlyOwner {\n    newVersion = upgradeTo;\n  }\n\n  function upgradeAvalable() view public returns(bool) {\n    return newVersion != 0x0;\n  }\n\n  function upgradeMe() public {\n    upgradeUser(msg.sender);\n  }\n\n  function upgradeUser(address target) public onlyManagerNUser(target)\n  {\n    require(upgradeAvalable(), \"New version not yet available\");\n    Upgradeable newContract = Upgradeable(newVersion);\n    require(!newContract.upgraded(target), \"Your account already been upgraded\");\n    newContract.importUser(target);\n    burnToken(target, balanceOf[target], \"Upgrading to new version\");\n  }\n\n  function importMe() public {\n    importUser(msg.sender);\n  }\n\n  function importUser(address target) onlyManager public\n  {\n    if (target == prevVersion) {\n      target = this;\n    }\n\n    require(!upgraded[target], \"Account already been upgraded\");\n    upgraded[target] = true;\n    Transferable oldContract = Transferable(prevVersion);\n    uint256 amount = oldContract.balanceOf(target);\n\n    mintToken(target, amount, \"Upgrade from previous version\");\n  }\n}\n\ncontract TOKEN is ERC20, Owned, Destructable, LISCTrade, Upgradeable  {\n\n  event Init(uint256 basePrice, uint dayZero);\n\n  constructor(\n      string tokenName,\n      string tokenSymbol,\n      address _prevVersion\n  ) ERC20(0, tokenName, tokenSymbol) DayCounter(1542585600) LISCTrade(15 * denominator) Upgradeable(_prevVersion) public\n  {\n    emit Init(15, 1542585600);\n  }\n\n  function balance() view public returns(uint256)\n  {\n    return balanceOf[msg.sender];\n  }\n\n  event Broadcast(string message);\n\n  function broadcast(string _message) public onlyManager\n  {\n    emit Broadcast(_message);\n  }\n\n  event Mint(address indexed target, uint256 mintedAmount, string comment);\n\n  function mint(address target, uint256 mintedAmount, string comment) onlyOwner public {\n    mintedAmount *= denominator;\n    mintToken(target, mintedAmount, comment);\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"broadcast\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"upgradeUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"iamFrozen\",\"outputs\":[{\"name\":\"isFrozen\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"allowBuy\",\"type\":\"bool\"},{\"name\":\"allowSell\",\"type\":\"bool\"}],\"name\":\"updateBuySellFlags\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceInETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"importUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentRoiInPersents\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minBuyAmount\",\"type\":\"uint256\"}],\"name\":\"setMinTrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"importMe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAncor\",\"type\":\"uint256\"},{\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setFiatLinkedCoef\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"},{\"name\":\"newManager\",\"type\":\"address\"},{\"name\":\"newSink\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"upgradeTo\",\"type\":\"address\"}],\"name\":\"setUpgradeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"upgradeMe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradeAvalable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherToFiatRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"destruct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"},{\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceInUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fiatDriftAncor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DaysPast\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"upgraded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minBuyAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"_prevVersion\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"basePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"dayZero\",\"type\":\"uint256\"}],\"name\":\"Init\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Broadcast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"mintedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ancorDrift\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"exchangeRate\",\"type\":\"uint256\"}],\"name\":\"FiatLink\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sellPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"Destruct\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"mintedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "6080604052600b805461ffff19169055600f8054600160a060020a03191690553480156200002c57600080fd5b506040516200241b3803806200241b833981016040908152815160208084015192840151600060028190559285018051909594909401939092839267d02ab486cedc000092635bf1fd00929188918891849184918491620000939185919085019062000164565b508051620000a990600190602084019062000164565b505060025430600090815260036020908152604091829020929092556004805433600160a060020a0319918216811790925560058054821683179055600680548216909217909155600a98909855600c98909855600e8054909716600160a060020a03999099169890981790955550508351600f8152635bf1fd0095810195909552505081517ff0ee3666ded00e4a4054586f71ae9aba172e661b35be2e598af046d5c61c532793819003909201919050a150505062000209565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001a757805160ff1916838001178555620001d7565b82800160010185558215620001d7579182015b82811115620001d7578251825591602001919060010190620001ba565b50620001e5929150620001e9565b5090565b6200020691905b80821115620001e55760008155600101620001f0565b90565b61220280620002196000396000f3006080604052600436106101b65763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146101bb5780630cd0563b1461024557806318160ddd146102a057806323814798146102c757806324562747146102e85780632ac6e2e4146102fd5780632bb1b957146103265780632f7f117514610345578063313ce5671461035a57806337cc18281461038557806338eb519f146103a657806344a78dff146103bb5780634686a527146103d3578063492cc769146103e85780635656fef3146104345780636b760a941461044f57806370a082311461047c5780637960049e1461049d5780638632f2ad146104be57806389f1bd3f146104d357806395d89b41146105315780639c15296a14610546578063a26e11861461055b578063a9059cbb146105a7578063b08663c6146105cb578063b69ef8a8146105e0578063c1ea3853146105f5578063d3fc98641461064e578063d41edb7b146106b7578063dc048cf2146106cc578063e503fe5b1461072a578063e724529c1461073f578063ece5be8614610765578063f4b489e71461077a578063f66bf2291461079b575b600080fd5b3480156101c757600080fd5b506101d06107b0565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020a5781810151838201526020016101f2565b50505050905090810190601f1680156102375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561025157600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261029e94369492936024939284019190819084018382808284375094975061083e9650505050505050565b005b3480156102ac57600080fd5b506102b561092a565b60408051918252519081900360200190f35b3480156102d357600080fd5b5061029e600160a060020a0360043516610930565b3480156102f457600080fd5b506102b5610c38565b34801561030957600080fd5b50610312610c5d565b604080519115158252519081900360200190f35b34801561033257600080fd5b5061029e60043515156024351515610c73565b34801561035157600080fd5b506102b5610ce6565b34801561036657600080fd5b5061036f610cfd565b6040805160ff9092168252519081900360200190f35b34801561039157600080fd5b5061029e600160a060020a0360043516610d02565b3480156103b257600080fd5b506102b5610ed4565b3480156103c757600080fd5b5061029e600435610ef9565b3480156103df57600080fd5b5061029e610f4e565b6040805160206004803580820135601f810184900484028501840190955284845261029e943694929360249392840191908190840183828082843750949750610f599650505050505050565b34801561044057600080fd5b5061029e6004356024356110ab565b34801561045b57600080fd5b5061029e600160a060020a03600435811690602435811690604435166111aa565b34801561048857600080fd5b506102b5600160a060020a0360043516611246565b3480156104a957600080fd5b5061029e600160a060020a0360043516611258565b3480156104ca57600080fd5b5061029e6112d7565b3480156104df57600080fd5b5060408051602060046024803582810135601f810185900485028601850190965285855261029e9583359536956044949193909101919081908401838280828437509497506112e09650505050505050565b34801561053d57600080fd5b506101d06113a9565b34801561055257600080fd5b50610312611403565b6040805160206004803580820135601f810184900484028501840190955284845261029e9436949293602493928401919081908401838280828437509497506114149650505050505050565b3480156105b357600080fd5b50610312600160a060020a03600435166024356114c2565b3480156105d757600080fd5b506102b561158f565b3480156105ec57600080fd5b506102b5611595565b34801561060157600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261029e9436949293602493928401919081908401838280828437509497506115a89650505050505050565b34801561065a57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261029e948235600160a060020a031694602480359536959460649492019190819084018382808284375094975061167b9650505050505050565b3480156106c357600080fd5b506102b56116e4565b3480156106d857600080fd5b5060408051602060046024803582810135601f810185900485028601850190965285855261029e95833595369560449491939091019190819084018382808284375094975061175d9650505050505050565b34801561073657600080fd5b506102b5611879565b34801561074b57600080fd5b5061029e600160a060020a0360043516602435151561187f565b34801561077157600080fd5b506102b5611923565b34801561078657600080fd5b50610312600160a060020a0360043516611931565b3480156107a757600080fd5b506102b5611946565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108365780601f1061080b57610100808354040283529160200191610836565b820191906000526020600020905b81548152906001019060200180831161081957829003601f168201915b505050505081565b600554600160a060020a0316331461088e576040805160e560020a62461bcd02815260206004820152601c6024820152600080516020612177833981519152604482015290519081900360640190fd5b7f9328e51774c9ccc9bf9f6c2fffbf4ac2752b584aa63775a8317772016029a90e816040518080602001828103825283818151815260200191508051906020019080838360005b838110156108ed5781810151838201526020016108d5565b50505050905090810190601f16801561091a5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b60025481565b6005546000908290600160a060020a0316331480610956575033600160a060020a038216145b15156109d2576040805160e560020a62461bcd02815260206004820152602c60248201527f436f6e7472616374206d616e61676572206f722077616c6c6574206f776e657260448201527f2069732072657175697265640000000000000000000000000000000000000000606482015290519081900360840190fd5b6109da611403565b1515610a30576040805160e560020a62461bcd02815260206004820152601d60248201527f4e65772076657273696f6e206e6f742079657420617661696c61626c65000000604482015290519081900360640190fd5b600f54604080517ff4b489e7000000000000000000000000000000000000000000000000000000008152600160a060020a0386811660048301529151919092169350839163f4b489e79160248083019260209291908290030181600087803b158015610a9b57600080fd5b505af1158015610aaf573d6000803e3d6000fd5b505050506040513d6020811015610ac557600080fd5b505115610b42576040805160e560020a62461bcd02815260206004820152602260248201527f596f7572206163636f756e7420616c7265616479206265656e2075706772616460448201527f6564000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b81600160a060020a03166337cc1828846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b158015610bb657600080fd5b505af1158015610bca573d6000803e3d6000fd5b50505050610c33836003600086600160a060020a0316600160a060020a03168152602001908152602001600020546040805190810160405280601881526020017f557067726164696e6720746f206e65772076657273696f6e000000000000000081525061194c565b505050565b600080610c43610ce6565b9050610c57670de0b6b3a764000082611a2b565b91505090565b3360009081526007602052604090205460ff1690565b600554600160a060020a03163314610cc3576040805160e560020a62461bcd02815260206004820152601c6024820152600080516020612177833981519152604482015290519081900360640190fd5b600b805460ff19169215159290921761ff00191661010091151591909102179055565b6000610cf8610cf36116e4565b611ab4565b905090565b601281565b6005546000908190600160a060020a03163314610d57576040805160e560020a62461bcd02815260206004820152601c6024820152600080516020612177833981519152604482015290519081900360640190fd5b600e54600160a060020a0384811691161415610d71573092505b600160a060020a03831660009081526010602052604090205460ff1615610de2576040805160e560020a62461bcd02815260206004820152601d60248201527f4163636f756e7420616c7265616479206265656e207570677261646564000000604482015290519081900360640190fd5b600160a060020a038084166000818152601060209081526040808320805460ff19166001179055600e5481517f70a08231000000000000000000000000000000000000000000000000000000008152600481019590955290519416955085936370a0823193602480820194918390030190829087803b158015610e6457600080fd5b505af1158015610e78573d6000803e3d6000fd5b505050506040513d6020811015610e8e57600080fd5b505160408051808201909152601d81527f557067726164652066726f6d2070726576696f75732076657273696f6e0000006020820152909150610c339084908390611ac8565b60008061016d610ee2611923565b61044702811515610eef57fe5b0460640192915050565b600554600160a060020a03163314610f49576040805160e560020a62461bcd02815260206004820152601c6024820152600080516020612177833981519152604482015290519081900360640190fd5b600d55565b610f5733610d02565b565b600b5460009060ff161515610fb8576040805160e560020a62461bcd02815260206004820152601660248201527f4275792063757272656e746c792064697361626c656400000000000000000000604482015290519081900360640190fd5b3360008181526007602052604090205460ff161561100e576040805160e560020a62461bcd0281526020600482015260116024820152600080516020612197833981519152604482015290519081900360640190fd5b61101734611b5f565b600d549092508211611099576040805160e560020a62461bcd02815260206004820152602760248201527f596f752063616e7420627579206c6573736572207468616e206d696e2055534460448201527f20616d6f756e7400000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610c33346110a5610ce6565b85611b6d565b600554600160a060020a031633146110fb576040805160e560020a62461bcd02815260206004820152601c6024820152600080516020612177833981519152604482015290519081900360640190fd5b60008211801561110b5750600081115b1515611161576040805160e560020a62461bcd02815260206004820152601860248201527f436f6566696369656e74732063616e74206265207a65726f0000000000000000604482015290519081900360640190fd5b60088290556009819055604080518381526020810183905281517f281f4878f86e8af1441e8a46472e5e2c6e4491c18907e5a29f75a52421217409929181900390910190a15050565b600454600160a060020a031633146111fa576040805160e560020a62461bcd02815260206004820152601a60248201526000805160206121b7833981519152604482015290519081900360640190fd5b60048054600160a060020a0394851673ffffffffffffffffffffffffffffffffffffffff1991821617909155600580549385169382169390931790925560068054919093169116179055565b60036020526000908152604090205481565b600454600160a060020a031633146112a8576040805160e560020a62461bcd02815260206004820152601a60248201526000805160206121b7833981519152604482015290519081900360640190fd5b600f805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b610f5733610930565b600b54610100900460ff161515611341576040805160e560020a62461bcd02815260206004820152601760248201527f53656c6c2063757272656e746c792064697361626c6564000000000000000000604482015290519081900360640190fd5b3360008181526007602052604090205460ff1615611397576040805160e560020a62461bcd0281526020600482015260116024820152600080516020612197833981519152604482015290519081900360640190fd5b610c33836113a3610ce6565b84611cac565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108365780601f1061080b57610100808354040283529160200191610836565b600f54600160a060020a0316151590565b33600160a060020a03167f643e927b32d5bfd08eccd2fcbd97057ad413850f857a2359639114e8e8dd3d7b34836040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561148457818101518382015260200161146c565b50505050905090810190601f1680156114b15780820380516001836020036101000a031916815260200191505b50935050505060405180910390a250565b3360008181526007602052604081205490919060ff161561151b576040805160e560020a62461bcd0281526020600482015260116024820152600080516020612197833981519152604482015290519081900360640190fd5b600160a060020a038416600090815260076020526040902054849060ff161561157c576040805160e560020a62461bcd0281526020600482015260116024820152600080516020612197833981519152604482015290519081900360640190fd5b6115868585611dc3565b95945050505050565b60095481565b3360009081526003602052604090205490565b600454600160a060020a031633146115f8576040805160e560020a62461bcd02815260206004820152601a60248201526000805160206121b7833981519152604482015290519081900360640190fd5b600454600160a060020a0316ff5b602083106116255780518252601f199092019160209182019101611606565b5181516020939093036101000a60001901801990911692169190911790526040519201829003822093507f3ffc78143aab5b8bf6b1e09250b7c95c9adb4ebdd701bc60fe29235c6f0db50392506000919050a250565b600454600160a060020a031633146116cb576040805160e560020a62461bcd02815260206004820152601a60248201526000805160206121b7833981519152604482015290519081900360640190fd5b670de0b6b3a76400009190910290610c33838383611ac8565b600c546000906116f381611dd9565b90506116fe81611de7565b905060008111611758576040805160e560020a62461bcd02815260206004820152601660248201527f5553442070726963652063616e74206265207a65726f00000000000000000000604482015290519081900360640190fd5b919050565b600454600160a060020a031633146117ad576040805160e560020a62461bcd02815260206004820152601a60248201526000805160206121b7833981519152604482015290519081900360640190fd5b6006546117c390600160a060020a031683611e1b565b6006546040805184815260208082018381528551938301939093528451600160a060020a03909416937f485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d975193879387939092606084019185019080838360005b8381101561183a578181015183820152602001611822565b50505050905090810190601f1680156118675780820380516001836020036101000a031916815260200191505b50935050505060405180910390a25050565b60085481565b600554600160a060020a031633146118cf576040805160e560020a62461bcd02815260206004820152601c6024820152600080516020612177833981519152604482015290519081900360640190fd5b600160a060020a038216600081815260076020526040808220805460ff191685151590811790915590519092917f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a591a35050565b6000610cf8600a5442611e66565b60106020526000908152604090205460ff1681565b600d5481565b611957333084611e78565b3060009081526003602090815260408083208054869003905560028054869003905580518581528083018281528551928201929092528451600160a060020a038816947f47e772fda56eb54ab211642ce5421882c49fc2b7033455982af14588ae4207ff94889488949390926060850192860191908190849084905b838110156119eb5781810151838201526020016119d3565b50505050905090810190601f168015611a185780820380516001836020036101000a031916815260200191505b50935050505060405180910390a2505050565b600080808311611a85576040805160e560020a62461bcd02815260206004820152601760248201527f43616e7420646564756365207a65726f206368616e6765000000000000000000604482015290519081900360640190fd5b826ec097ce7bc90715b34b9f1000000000811515611a9f57fe5b049050611aac8482611fc6565b949350505050565b6000611ac282600954611a2b565b92915050565b3060008181526003602052604090208054840190556002805484019055611af0908484611e78565b82600160a060020a03167f85a66b9141978db9980f7e0ce3b468cebf4f7999f32b23091c5c03e798b1ba7a8383604051808381526020018060200182810382528381815181526020019150805190602001908083836000838110156119eb5781810151838201526020016119d3565b6000611ac282600954611fc6565b6000808411611bc6576040805160e560020a62461bcd02815260206004820152601960248201527f457468657220616d6f756e742063616e74206265207a65726f00000000000000604482015290519081900360640190fd5b611bd08484611fd9565b9050611bdd303383611e78565b600654611bf390600160a060020a031685611e1b565b33600160a060020a03167f149b84f345a2529777fc0c790a7d9767c1069d6621069d801ec05488e8779dbd8285856040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611c6a578181015183820152602001611c52565b50505050905090810190601f168015611c975780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a250505050565b6000611cb884846120b2565b905060008111611d38576040805160e560020a62461bcd02815260206004820152603260248201527f457468657220616d6f756e7420616674657220636f6e76657274206265636f6d60448201527f65207a65726f202d20726576657274696e670000000000000000000000000000606482015290519081900360840190fd5b611d43333086611e78565b611d4d3385611e1b565b33600160a060020a03167fe277b208662ca07e3fb98c44e06ee31ba18ba82768e31cdbfc20dd489564b00b85858560405180848152602001838152602001806020018281038252838181518152602001915080519060200190808383600083811015611c6a578181015183820152602001611c52565b6000611dd0338484611e78565b50600192915050565b6000611ac282600854611fc6565b6000806064611df4610ed4565b670de0b6b3a764000002811515611e0757fe5b049050611e148382611fc6565b9392505050565b308031821115611e2a57600080fd5b604051600160a060020a0384169083156108fc029084906000818181858888f19350505050158015611e60573d6000803e3d6000fd5b50505050565b6000620151808383035b049392505050565b600160a060020a038316600090815260036020526040902054811115611ee8576040805160e560020a62461bcd02815260206004820152601060248201527f4e6f7420656e6f7567682066756e647300000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a0382166000908152600360205260409020548181011015611f5a576040805160e560020a62461bcd02815260206004820152601f60248201527f4275666665724f766572666c6f77206f6e207265636569766572207369646500604482015290519081900360640190fd5b600160a060020a03808416600081815260036020908152604080832080548790039055938616808352918490208054860190558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3505050565b6000670de0b6b3a7640000838302611e70565b600080808311612033576040805160e560020a62461bcd02815260206004820152601660248201527f4275792070726963652063616e74206265207a65726f00000000000000000000604482015290519081900360640190fd5b670de0b6b3a764000084028410612094576040805160e560020a62461bcd02815260206004820152600e60248201527f4275666665724f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b82670de0b6b3a764000085028115156120a957fe5b04949350505050565b60008080831161210c576040805160e560020a62461bcd02815260206004820152601760248201527f53656c6c2070726963652063616e74206265207a65726f000000000000000000604482015290519081900360640190fd5b8284028410612165576040805160e560020a62461bcd02815260206004820152600e60248201527f4275666665724f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b670de0b6b3a76400008484026120a95600436f6e7472616374206d616e61676572206973207265717569726564000000004163636f756e742069732066726f7a656e000000000000000000000000000000436f6e7472616374206f776e6572206973207265717569726564000000000000a165627a7a723058204f040f52ba0491e992234adbaca35bdd2886d8d7aaa94a0a6f956521735efbc90029000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000940d04b20069475d3757196fda30e6bc4065fa0d00000000000000000000000000000000000000000000000000000000000000114c49535420284c4953432e574f524c442900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000094c4953542076312e330000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000940d04b20069475d3757196fda30e6bc4065fa0d00000000000000000000000000000000000000000000000000000000000000114c49535420284c4953432e574f524c442900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000094c4953542076312e330000000000000000000000000000000000000000000000"
}