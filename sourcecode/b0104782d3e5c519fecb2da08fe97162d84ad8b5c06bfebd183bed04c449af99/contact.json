{
  "address": "0x4492604eefb7a59885a5b7cbe52d82a0b5614cac",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MonethaGateway",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-24\n*/\n\npragma solidity ^0.4.24;\n\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (_a == 0) {\n      return 0;\n    }\n\n    c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = _a / _b;\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n    return _a / _b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    c = _a + _b;\n    assert(c >= _a);\n    return c;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/lifecycle/Destructible.sol\n\n/**\n * @title Destructible\n * @dev Base contract that can be destroyed by owner. All funds in contract will be sent to the owner.\n */\ncontract Destructible is Ownable {\n  /**\n   * @dev Transfers the current balance to the owner and terminates the contract.\n   */\n  function destroy() public onlyOwner {\n    selfdestruct(owner);\n  }\n\n  function destroyAndSend(address _recipient) public onlyOwner {\n    selfdestruct(_recipient);\n  }\n}\n\n// File: openzeppelin-solidity/contracts/lifecycle/Pausable.sol\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() public onlyOwner whenNotPaused {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() public onlyOwner whenPaused {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n// File: openzeppelin-solidity/contracts/ownership/Contactable.sol\n\n/**\n * @title Contactable token\n * @dev Basic version of a contactable contract, allowing the owner to provide a string with their\n * contact information.\n */\ncontract Contactable is Ownable {\n\n  string public contactInformation;\n\n  /**\n    * @dev Allows the owner to set a string with their contact information.\n    * @param _info The contact information to attach to the contract.\n    */\n  function setContactInformation(string _info) public onlyOwner {\n    contactInformation = _info;\n  }\n}\n\n// File: monetha-utility-contracts/contracts/Restricted.sol\n\n/** @title Restricted\n *  Exposes onlyMonetha modifier\n */\ncontract Restricted is Ownable {\n\n    //MonethaAddress set event\n    event MonethaAddressSet(\n        address _address,\n        bool _isMonethaAddress\n    );\n\n    mapping (address => bool) public isMonethaAddress;\n\n    /**\n     *  Restrict methods in such way, that they can be invoked only by monethaAddress account.\n     */\n    modifier onlyMonetha() {\n        require(isMonethaAddress[msg.sender]);\n        _;\n    }\n\n    /**\n     *  Allows owner to set new monetha address\n     */\n    function setMonethaAddress(address _address, bool _isMonethaAddress) onlyOwner public {\n        isMonethaAddress[_address] = _isMonethaAddress;\n\n        emit MonethaAddressSet(_address, _isMonethaAddress);\n    }\n}\n\n// File: monetha-loyalty-contracts/contracts/IMonethaVoucher.sol\n\ninterface IMonethaVoucher {\n    /**\n    * @dev Total number of vouchers in shared pool\n    */\n    function totalInSharedPool() external view returns (uint256);\n\n    /**\n     * @dev Converts vouchers to equivalent amount of wei.\n     * @param _value amount of vouchers (vouchers) to convert to amount of wei\n     * @return A uint256 specifying the amount of wei.\n     */\n    function toWei(uint256 _value) external view returns (uint256);\n\n    /**\n     * @dev Converts amount of wei to equivalent amount of vouchers.\n     * @param _value amount of wei to convert to vouchers (vouchers)\n     * @return A uint256 specifying the amount of vouchers.\n     */\n    function fromWei(uint256 _value) external view returns (uint256);\n\n    /**\n     * @dev Applies discount for address by returning vouchers to shared pool and transferring funds (in wei). May be called only by Monetha.\n     * @param _for address to apply discount for\n     * @param _vouchers amount of vouchers to return to shared pool\n     * @return Actual number of vouchers returned to shared pool and amount of funds (in wei) transferred.\n     */\n    function applyDiscount(address _for, uint256 _vouchers) external returns (uint256 amountVouchers, uint256 amountWei);\n\n    /**\n     * @dev Applies payback by transferring vouchers from the shared pool to the user.\n     * The amount of transferred vouchers is equivalent to the amount of Ether in the `_amountWei` parameter.\n     * @param _for address to apply payback for\n     * @param _amountWei amount of Ether to estimate the amount of vouchers\n     * @return The number of vouchers added\n     */\n    function applyPayback(address _for, uint256 _amountWei) external returns (uint256 amountVouchers);\n\n    /**\n     * @dev Function to buy vouchers by transferring equivalent amount in Ether to contract. May be called only by Monetha.\n     * After the vouchers are purchased, they can be sold or released to another user. Purchased vouchers are stored in\n     * a separate pool and may not be expired.\n     * @param _vouchers The amount of vouchers to buy. The caller must also transfer an equivalent amount of Ether.\n     */\n    function buyVouchers(uint256 _vouchers) external payable;\n\n    /**\n     * @dev The function allows Monetha account to sell previously purchased vouchers and get Ether from the sale.\n     * The equivalent amount of Ether will be transferred to the caller. May be called only by Monetha.\n     * @param _vouchers The amount of vouchers to sell.\n     * @return A uint256 specifying the amount of Ether (in wei) transferred to the caller.\n     */\n    function sellVouchers(uint256 _vouchers) external returns(uint256 weis);\n\n    /**\n     * @dev Function allows Monetha account to release the purchased vouchers to any address.\n     * The released voucher acquires an expiration property and should be used in Monetha ecosystem within 6 months, otherwise\n     * it will be returned to shared pool. May be called only by Monetha.\n     * @param _to address to release vouchers to.\n     * @param _value the amount of vouchers to release.\n     */\n    function releasePurchasedTo(address _to, uint256 _value) external returns (bool);\n\n    /**\n     * @dev Function to check the amount of vouchers that an owner (Monetha account) allowed to sell or release to some user.\n     * @param owner The address which owns the funds.\n     * @return A uint256 specifying the amount of vouchers still available for the owner.\n     */\n    function purchasedBy(address owner) external view returns (uint256);\n}\n\n// File: contracts/GenericERC20.sol\n\n/**\n* @title GenericERC20 interface\n*/\ncontract GenericERC20 {\n    function totalSupply() public view returns (uint256);\n\n    function decimals() public view returns(uint256);\n\n    function balanceOf(address _who) public view returns (uint256);\n\n    function allowance(address _owner, address _spender)\n        public view returns (uint256);\n        \n    // Return type not defined intentionally since not all ERC20 tokens return proper result type\n    function transfer(address _to, uint256 _value) public;\n\n    function approve(address _spender, uint256 _value)\n        public returns (bool);\n\n    function transferFrom(address _from, address _to, uint256 _value)\n        public returns (bool);\n\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 value\n    );\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\n// File: contracts/MonethaGateway.sol\n\n/**\n *  @title MonethaGateway\n *\n *  MonethaGateway forward funds from order payment to merchant's wallet and collects Monetha fee.\n */\ncontract MonethaGateway is Pausable, Contactable, Destructible, Restricted {\n\n    using SafeMath for uint256;\n\n    string constant VERSION = \"0.6\";\n\n    /**\n     *  Fee permille of Monetha fee.\n     *  1 permille (‰) = 0.1 percent (%)\n     *  15‰ = 1.5%\n     */\n    uint public constant FEE_PERMILLE = 15;\n\n\n    uint public constant PERMILLE_COEFFICIENT = 1000;\n\n    /**\n     *  Address of Monetha Vault for fee collection\n     */\n    address public monethaVault;\n\n    /**\n     *  Account for permissions managing\n     */\n    address public admin;\n\n    /**\n     * Monetha voucher contract\n     */\n    IMonethaVoucher public monethaVoucher;\n\n    /**\n     *  Max. discount permille.\n     *  10 permille = 1 %\n     */\n    uint public MaxDiscountPermille;\n\n    event PaymentProcessedEther(address merchantWallet, uint merchantIncome, uint monethaIncome);\n    event PaymentProcessedToken(address tokenAddress, address merchantWallet, uint merchantIncome, uint monethaIncome);\n    event MonethaVoucherChanged(\n        address indexed previousMonethaVoucher,\n        address indexed newMonethaVoucher\n    );\n    event MaxDiscountPermilleChanged(uint prevPermilleValue, uint newPermilleValue);\n\n    /**\n     *  @param _monethaVault Address of Monetha Vault\n     */\n    constructor(address _monethaVault, address _admin, IMonethaVoucher _monethaVoucher) public {\n        require(_monethaVault != 0x0);\n        monethaVault = _monethaVault;\n\n        setAdmin(_admin);\n        setMonethaVoucher(_monethaVoucher);\n        setMaxDiscountPermille(700); // 70%\n    }\n\n    /**\n     *  acceptPayment accept payment from PaymentAcceptor, forwards it to merchant's wallet\n     *      and collects Monetha fee.\n     *  @param _merchantWallet address of merchant's wallet for fund transfer\n     *  @param _monethaFee is a fee collected by Monetha\n     */\n    /**\n     *  acceptPayment accept payment from PaymentAcceptor, forwards it to merchant's wallet\n     *      and collects Monetha fee.\n     *  @param _merchantWallet address of merchant's wallet for fund transfer\n     *  @param _monethaFee is a fee collected by Monetha\n     */\n    function acceptPayment(address _merchantWallet,\n        uint _monethaFee,\n        address _customerAddress,\n        uint _vouchersApply,\n        uint _paybackPermille)\n    external payable onlyMonetha whenNotPaused returns (uint discountWei){\n        require(_merchantWallet != 0x0);\n        uint price = msg.value;\n        // Monetha fee cannot be greater than 1.5% of payment\n        require(_monethaFee >= 0 && _monethaFee <= FEE_PERMILLE.mul(price).div(1000));\n\n        discountWei = 0;\n        if (monethaVoucher != address(0)) {\n            if (_vouchersApply > 0 && MaxDiscountPermille > 0) {\n                uint maxDiscountWei = price.mul(MaxDiscountPermille).div(PERMILLE_COEFFICIENT);\n                uint maxVouchers = monethaVoucher.fromWei(maxDiscountWei);\n                // limit vouchers to apply\n                uint vouchersApply = _vouchersApply;\n                if (vouchersApply > maxVouchers) {\n                    vouchersApply = maxVouchers;\n                }\n\n                (, discountWei) = monethaVoucher.applyDiscount(_customerAddress, vouchersApply);\n            }\n\n            if (_paybackPermille > 0) {\n                uint paybackWei = price.sub(discountWei).mul(_paybackPermille).div(PERMILLE_COEFFICIENT);\n                if (paybackWei > 0) {\n                    monethaVoucher.applyPayback(_customerAddress, paybackWei);\n                }\n            }\n        }\n\n        uint merchantIncome = price.sub(_monethaFee);\n\n        _merchantWallet.transfer(merchantIncome);\n        monethaVault.transfer(_monethaFee);\n\n        emit PaymentProcessedEther(_merchantWallet, merchantIncome, _monethaFee);\n    }\n\n    /**\n     *  acceptTokenPayment accept token payment from PaymentAcceptor, forwards it to merchant's wallet\n     *      and collects Monetha fee.\n     *  @param _merchantWallet address of merchant's wallet for fund transfer\n     *  @param _monethaFee is a fee collected by Monetha\n     *  @param _tokenAddress is the token address\n     *  @param _value is the order value\n     */\n    function acceptTokenPayment(\n        address _merchantWallet,\n        uint _monethaFee,\n        address _tokenAddress,\n        uint _value\n    )\n    external onlyMonetha whenNotPaused\n    {\n        require(_merchantWallet != 0x0);\n\n        // Monetha fee cannot be greater than 1.5% of payment\n        require(_monethaFee >= 0 && _monethaFee <= FEE_PERMILLE.mul(_value).div(1000));\n\n        uint merchantIncome = _value.sub(_monethaFee);\n\n        GenericERC20(_tokenAddress).transfer(_merchantWallet, merchantIncome);\n        GenericERC20(_tokenAddress).transfer(monethaVault, _monethaFee);\n\n        emit PaymentProcessedToken(_tokenAddress, _merchantWallet, merchantIncome, _monethaFee);\n    }\n\n    /**\n     *  changeMonethaVault allows owner to change address of Monetha Vault.\n     *  @param newVault New address of Monetha Vault\n     */\n    function changeMonethaVault(address newVault) external onlyOwner whenNotPaused {\n        monethaVault = newVault;\n    }\n\n    /**\n     *  Allows other monetha account or contract to set new monetha address\n     */\n    function setMonethaAddress(address _address, bool _isMonethaAddress) public {\n        require(msg.sender == admin || msg.sender == owner);\n\n        isMonethaAddress[_address] = _isMonethaAddress;\n\n        emit MonethaAddressSet(_address, _isMonethaAddress);\n    }\n\n    /**\n     *  setAdmin allows owner to change address of admin.\n     *  @param _admin New address of admin\n     */\n    function setAdmin(address _admin) public onlyOwner {\n        require(_admin != address(0));\n        admin = _admin;\n    }\n\n    /**\n     *  setAdmin allows owner to change address of Monetha voucher contract. If set to 0x0 address, discounts and paybacks are disabled.\n     *  @param _monethaVoucher New address of Monetha voucher contract\n     */\n    function setMonethaVoucher(IMonethaVoucher _monethaVoucher) public onlyOwner {\n        if (monethaVoucher != _monethaVoucher) {\n            emit MonethaVoucherChanged(monethaVoucher, _monethaVoucher);\n            monethaVoucher = _monethaVoucher;\n        }\n    }\n\n    /**\n     *  setMaxDiscountPermille allows Monetha to change max.discount percentage\n     *  @param _maxDiscountPermille New value of max.discount (in permille)\n     */\n    function setMaxDiscountPermille(uint _maxDiscountPermille) public onlyOwner {\n        require(_maxDiscountPermille <= PERMILLE_COEFFICIENT);\n        emit MaxDiscountPermilleChanged(MaxDiscountPermille, _maxDiscountPermille);\n        MaxDiscountPermille = _maxDiscountPermille;\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"changeMonethaVault\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMonethaAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contactInformation\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxDiscountPermille\",\"type\":\"uint256\"}],\"name\":\"setMaxDiscountPermille\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_monethaVoucher\",\"type\":\"address\"}],\"name\":\"setMonethaVoucher\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monethaVault\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaxDiscountPermille\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monethaVoucher\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_info\",\"type\":\"string\"}],\"name\":\"setContactInformation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_isMonethaAddress\",\"type\":\"bool\"}],\"name\":\"setMonethaAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMILLE_COEFFICIENT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_merchantWallet\",\"type\":\"address\"},{\"name\":\"_monethaFee\",\"type\":\"uint256\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"acceptTokenPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_merchantWallet\",\"type\":\"address\"},{\"name\":\"_monethaFee\",\"type\":\"uint256\"},{\"name\":\"_customerAddress\",\"type\":\"address\"},{\"name\":\"_vouchersApply\",\"type\":\"uint256\"},{\"name\":\"_paybackPermille\",\"type\":\"uint256\"}],\"name\":\"acceptPayment\",\"outputs\":[{\"name\":\"discountWei\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FEE_PERMILLE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_monethaVault\",\"type\":\"address\"},{\"name\":\"_admin\",\"type\":\"address\"},{\"name\":\"_monethaVoucher\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"merchantWallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"merchantIncome\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"monethaIncome\",\"type\":\"uint256\"}],\"name\":\"PaymentProcessedEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"merchantWallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"merchantIncome\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"monethaIncome\",\"type\":\"uint256\"}],\"name\":\"PaymentProcessedToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousMonethaVoucher\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newMonethaVoucher\",\"type\":\"address\"}],\"name\":\"MonethaVoucherChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"prevPermilleValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newPermilleValue\",\"type\":\"uint256\"}],\"name\":\"MaxDiscountPermilleChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_isMonethaAddress\",\"type\":\"bool\"}],\"name\":\"MonethaAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60806040526000805460a060020a60ff02191690553480156200002157600080fd5b506040516060806200137c83398101604090815281516020830151919092015160008054600160a060020a03191633179055600160a060020a03831615156200006957600080fd5b60038054600160a060020a031916600160a060020a0385161790556200009882640100000000620000cb810204565b620000ac816401000000006200011b810204565b620000c26102bc640100000000620001a2810204565b5050506200020c565b600054600160a060020a03163314620000e357600080fd5b600160a060020a0381161515620000f957600080fd5b60048054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a031633146200013357600080fd5b600554600160a060020a038281169116146200019f57600554604051600160a060020a038084169216907fa638012f0992e8cb7e3af1700e4643463c20e5c6247964ff335411a3d369bd7590600090a360058054600160a060020a031916600160a060020a0383161790555b50565b600054600160a060020a03163314620001ba57600080fd5b6103e8811115620001ca57600080fd5b600654604080519182526020820183905280517f99f2762d865733730352be67c3db5ed72997381e375bac723590700e29f58a3e9281900390910190a1600655565b611160806200021c6000396000f30060806040526004361061013d5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663102deb9c811461014257806331d413251461016557806336f7ab5e1461019a5780633f4ba83a14610224578063552548b5146102395780635c975abb14610251578063704b6c0214610266578063715018a6146102875780637adc580c1461029c578063816dbae4146102bd57806383197ef0146102ee5780638456cb59146103035780638da5cb5b14610318578063a4a876421461032d578063a7abdf0314610354578063b967a52e14610369578063c07e3391146103c2578063c4cc3f4d146103e8578063cc4fbc43146103fd578063d21c39a11461042b578063de8248fb1461044f578063f2fde38b14610464578063f5074f4114610485578063f851a440146104a6575b600080fd5b34801561014e57600080fd5b50610163600160a060020a03600435166104bb565b005b34801561017157600080fd5b50610186600160a060020a0360043516610518565b604080519115158252519081900360200190f35b3480156101a657600080fd5b506101af61052d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e95781810151838201526020016101d1565b50505050905090810190601f1680156102165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023057600080fd5b506101636105ba565b34801561024557600080fd5b50610163600435610630565b34801561025d57600080fd5b50610186610698565b34801561027257600080fd5b50610163600160a060020a03600435166106a8565b34801561029357600080fd5b50610163610703565b3480156102a857600080fd5b50610163600160a060020a036004351661076f565b3480156102c957600080fd5b506102d2610801565b60408051600160a060020a039092168252519081900360200190f35b3480156102fa57600080fd5b50610163610810565b34801561030f57600080fd5b50610163610835565b34801561032457600080fd5b506102d26108b0565b34801561033957600080fd5b506103426108bf565b60408051918252519081900360200190f35b34801561036057600080fd5b506102d26108c5565b34801561037557600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101639436949293602493928401919081908401838280828437509497506108d49650505050505050565b3480156103ce57600080fd5b50610163600160a060020a03600435166024351515610902565b3480156103f457600080fd5b50610342610994565b34801561040957600080fd5b50610163600160a060020a03600435811690602435906044351660643561099a565b610342600160a060020a036004358116906024359060443516606435608435610ba7565b34801561045b57600080fd5b50610342610f6f565b34801561047057600080fd5b50610163600160a060020a0360043516610f74565b34801561049157600080fd5b50610163600160a060020a0360043516610f94565b3480156104b257600080fd5b506102d2610fb7565b600054600160a060020a031633146104d257600080fd5b60005460a060020a900460ff16156104e957600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60026020526000908152604090205460ff1681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105b25780601f10610587576101008083540402835291602001916105b2565b820191906000526020600020905b81548152906001019060200180831161059557829003601f168201915b505050505081565b600054600160a060020a031633146105d157600080fd5b60005460a060020a900460ff1615156105e957600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b600054600160a060020a0316331461064757600080fd5b6103e881111561065657600080fd5b600654604080519182526020820183905280517f99f2762d865733730352be67c3db5ed72997381e375bac723590700e29f58a3e9281900390910190a1600655565b60005460a060020a900460ff1681565b600054600160a060020a031633146106bf57600080fd5b600160a060020a03811615156106d457600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a0316331461071a57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a0316331461078657600080fd5b600554600160a060020a038281169116146107fe57600554604051600160a060020a038084169216907fa638012f0992e8cb7e3af1700e4643463c20e5c6247964ff335411a3d369bd7590600090a36005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b600354600160a060020a031681565b600054600160a060020a0316331461082757600080fd5b600054600160a060020a0316ff5b600054600160a060020a0316331461084c57600080fd5b60005460a060020a900460ff161561086357600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b60065481565b600554600160a060020a031681565b600054600160a060020a031633146108eb57600080fd5b80516108fe906001906020840190611099565b5050565b600454600160a060020a03163314806109255750600054600160a060020a031633145b151561093057600080fd5b600160a060020a038216600081815260026020908152604091829020805460ff191685151590811790915582519384529083015280517fa551de8741dbb2092ce6bc142fd0ff3af5dfbf87d0aa594619fccddb0141e6929281900390910190a15050565b6103e881565b3360009081526002602052604081205460ff1615156109b857600080fd5b60005460a060020a900460ff16156109cf57600080fd5b600160a060020a03851615156109e457600080fd5b60008410158015610a175750610a136103e8610a07600f8563ffffffff610fc616565b9063ffffffff610ff516565b8411155b1515610a2257600080fd5b610a32828563ffffffff61100a16565b905082600160a060020a031663a9059cbb86836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015610ab057600080fd5b505af1158015610ac4573d6000803e3d6000fd5b5050600354604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a039283166004820152602481018990529051918716935063a9059cbb925060448082019260009290919082900301818387803b158015610b3657600080fd5b505af1158015610b4a573d6000803e3d6000fd5b505060408051600160a060020a038088168252891660208201528082018590526060810188905290517f618577a9afe9fd437dc6026a30af8cbadd167797636883a859979d637cfe35619350908190036080019150a15050505050565b3360009081526002602052604081205481908190819081908190819060ff161515610bd157600080fd5b60005460a060020a900460ff1615610be857600080fd5b600160a060020a038c161515610bfd57600080fd5b34955060008b10158015610c275750610c236103e8610a07600f8963ffffffff610fc616565b8b11155b1515610c3257600080fd5b60055460009750600160a060020a031615610e9357600089118015610c5957506000600654115b15610dbd57610c796103e8610a0760065489610fc690919063ffffffff16565b600554604080517fe65d1522000000000000000000000000000000000000000000000000000000008152600481018490529051929750600160a060020a039091169163e65d1522916024808201926020929091908290030181600087803b158015610ce357600080fd5b505af1158015610cf7573d6000803e3d6000fd5b505050506040513d6020811015610d0d57600080fd5b5051935088925083831115610d20578392505b600554604080517f6a2b171a000000000000000000000000000000000000000000000000000000008152600160a060020a038d81166004830152602482018790528251931692636a2b171a926044808401939192918290030181600087803b158015610d8b57600080fd5b505af1158015610d9f573d6000803e3d6000fd5b505050506040513d6040811015610db557600080fd5b506020015196505b6000881115610e9357610dec6103e8610a078a610de08a8c63ffffffff61100a16565b9063ffffffff610fc616565b91506000821115610e9357600554604080517f6daa212f000000000000000000000000000000000000000000000000000000008152600160a060020a038d811660048301526024820186905291519190921691636daa212f9160448083019260209291908290030181600087803b158015610e6657600080fd5b505af1158015610e7a573d6000803e3d6000fd5b505050506040513d6020811015610e9057600080fd5b50505b610ea3868c63ffffffff61100a16565b604051909150600160a060020a038d169082156108fc029083906000818181858888f19350505050158015610edc573d6000803e3d6000fd5b50600354604051600160a060020a03909116908c156108fc02908d906000818181858888f19350505050158015610f17573d6000803e3d6000fd5b5060408051600160a060020a038e168152602081018390528082018d905290517e79faf592f96faaec8c2d96ccc01876425fd8ef52a0837decaef1c007c5fa099181900360600190a150505050505095945050505050565b600f81565b600054600160a060020a03163314610f8b57600080fd5b6107fe8161101c565b600054600160a060020a03163314610fab57600080fd5b80600160a060020a0316ff5b600454600160a060020a031681565b6000821515610fd757506000610fef565b50818102818382811515610fe757fe5b0414610fef57fe5b92915050565b6000818381151561100257fe5b049392505050565b60008282111561101657fe5b50900390565b600160a060020a038116151561103157600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106110da57805160ff1916838001178555611107565b82800160010185558215611107579182015b828111156111075782518255916020019190600101906110ec565b50611113929150611117565b5090565b61113191905b80821115611113576000815560010161111d565b905600a165627a7a7230582043e98be71d792d8330be02cd66c5aa7c57adb06beab818727f7000c2992d4b230029000000000000000000000000003a9f226b282539b161f8704b8dbc783c2f7860000000000000000000000000005479c12b062062fc53606a446b443147b0d1940000000000000000000000004830e1e8d533313d2bb426cf1ef306460f288524",
  "constructorArguments": "000000000000000000000000003a9f226b282539b161f8704b8dbc783c2f7860000000000000000000000000005479c12b062062fc53606a446b443147b0d1940000000000000000000000004830e1e8d533313d2bb426cf1ef306460f288524"
}