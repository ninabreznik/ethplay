{
  "address": "0x254ef3fcae7b468e5ae36d55d9ebb1c5dff21e64",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ERC_20_2",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-18\n*/\n\npragma solidity ^0.4.16;\n\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external; }\n\n/**\n * 标准 ERC-20-2 合约\n */\ncontract ERC_20_2 {\n    //- Token 名称\n    string public name; \n    //- Token 符号\n    string public symbol;\n    //- Token 小数位\n    uint8 public decimals;\n    //- Token 总发行量\n    uint256 public totalSupply;\n    //- 合约锁定状态\n    bool public lockAll = false;\n    //- 合约创造者\n    address public creator;\n    //- 合约所有者\n    address public owner;\n    //- 合约新所有者\n    address internal newOwner = 0x0;\n\n    //- 地址映射关系\n    mapping (address => uint256) public balanceOf;\n    //- 地址对应 Token\n    mapping (address => mapping (address => uint256)) public allowance;\n    //- 冻结列表\n    mapping (address => bool) public frozens;\n\n    //- Token 交易通知事件\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    //- Token 交易扩展通知事件\n    event TransferExtra(address indexed _from, address indexed _to, uint256 _value, bytes _extraData);\n    //- Token 批准通知事件\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    //- Token 消耗通知事件\n    event Burn(address indexed _from, uint256 _value);\n    //- Token 增量通知事件\n    event Offer(uint256 _supplyTM);\n    //- 合约所有者变更通知\n    event OwnerChanged(address _oldOwner, address _newOwner);\n    //- 地址冻结通知\n    event FreezeAddress(address indexed _target, bool _frozen);\n\n    /**\n     * 构造函数\n     *\n     * 初始化一个合约\n     * @param initialSupplyHM 初始总量（单位亿）\n     * @param tokenName Token 名称\n     * @param tokenSymbol Token 符号\n     * @param tokenDecimals Token 小数位\n     */\n    constructor(uint256 initialSupplyHM, string tokenName, string tokenSymbol, uint8 tokenDecimals) public {\n        name = tokenName;\n        symbol = tokenSymbol;\n        decimals = tokenDecimals;\n        totalSupply = initialSupplyHM * 10000 * 10000 * 10 ** uint256(decimals);\n        \n        balanceOf[msg.sender] = totalSupply;\n        owner = msg.sender;\n        creator = msg.sender;\n    }\n\n    /**\n     * 所有者修饰符\n     */\n    modifier onlyOwner {\n        require(msg.sender == owner, \"非法合约执行者\");\n        _;\n    }\n\t\n    /**\n     * 增加发行量\n     * @param _supplyTM 增量（单位千万）\n     */\n    function offer(uint256 _supplyTM) onlyOwner public returns (bool success){\n        //- 非负数验证\n        require(_supplyTM > 0, \"无效数量\");\n\t\tuint256 tm = _supplyTM * 1000 * 10000 * 10 ** uint256(decimals);\n        totalSupply += tm;\n        balanceOf[msg.sender] += tm;\n        emit Offer(_supplyTM);\n        return true;\n    }\n\n    /**\n     * 转移合约所有者\n     * @param _newOwner 新合约所有者地址\n     */\n    function transferOwnership(address _newOwner) onlyOwner public returns (bool success){\n        require(owner != _newOwner, \"无效合约新所有者\");\n        newOwner = _newOwner;\n        return true;\n    }\n    \n    /**\n     * 接受并成为新的合约所有者\n     */\n    function acceptOwnership() public returns (bool success){\n        require(msg.sender == newOwner && newOwner != 0x0, \"无效合约新所有者\");\n        address oldOwner = owner;\n        owner = newOwner;\n        newOwner = 0x0;\n        emit OwnerChanged(oldOwner, owner);\n        return true;\n    }\n\n    /**\n     * 设定合约锁定状态\n     * @param _lockAll 状态\n     */\n    function setLockAll(bool _lockAll) onlyOwner public returns (bool success){\n        lockAll = _lockAll;\n        return true;\n    }\n\n    /**\n     * 设定账户冻结状态\n     * @param _target 冻结目标\n     * @param _freeze 冻结状态\n     */\n    function setFreezeAddress(address _target, bool _freeze) onlyOwner public returns (bool success){\n        frozens[_target] = _freeze;\n        emit FreezeAddress(_target, _freeze);\n        return true;\n    }\n\n    /**\n     * 从持有方转移指定数量的 Token 给接收方\n     * @param _from 持有方\n     * @param _to 接收方\n     * @param _value 数量\n     */\n    function _transfer(address _from, address _to, uint256 _value) internal {\n        //- 锁定校验\n        require(!lockAll, \"合约处于锁定状态\");\n        //- 地址有效验证\n        require(_to != 0x0, \"无效接收地址\");\n        //- 非负数验证\n        require(_value > 0, \"无效数量\");\n        //- 余额验证\n        require(balanceOf[_from] >= _value, \"持有方转移数量不足\");\n        //- 持有方冻结校验\n        require(!frozens[_from], \"持有方处于冻结状态\"); \n        //- 接收方冻结校验\n        //require(!frozenAccount[_to]); \n\n        //- 保存预校验总量\n        uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\n        //- 持有方减少代币\n        balanceOf[_from] -= _value;\n        //- 接收方增加代币\n        balanceOf[_to] += _value;\n        //- 触发转账事件\n\t\temit Transfer(_from, _to, _value);\n\n        //- 确保交易过后，持有方和接收方持有总量不变\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n\n    /**\n     * 转移转指定数量的 Token 给接收方\n     *\n     * @param _to 接收方地址\n     * @param _value 数量\n     */\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\t\n    /**\n     * 转移转指定数量的 Token 给接收方，并包括扩展数据（该方法将会触发两个事件）\n     *\n     * @param _to 接收方地址\n     * @param _value 数量\n     * @param _extraData 扩展数据\n     */\n    function transferExtra(address _to, uint256 _value, bytes _extraData) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n\t\temit TransferExtra(msg.sender, _to, _value, _extraData);\n        return true;\n    }\n\n    /**\n     * 从持有方转移指定数量的 Token 给接收方\n     *\n     * @param _from 持有方\n     * @param _to 接收方\n     * @param _value 数量\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        //- 授权额度校验\n        require(_value <= allowance[_from][msg.sender], \"授权额度不足\");\n\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * 授权指定地址的转移额度\n     *\n     * @param _spender 代理方\n     * @param _value 授权额度\n     */\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * 授权指定地址的转移额度，并通知代理方合约\n     *\n     * @param _spender 代理方\n     * @param _value 转账最高额度\n     * @param _extraData 扩展数据（传递给代理方合约）\n     */\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);//- 代理方合约\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n    function _burn(address _from, uint256 _value) internal {\n        //- 锁定校验\n        require(!lockAll, \"合约处于锁定状态\");\n        //- 余额验证\n        require(balanceOf[_from] >= _value, \"持有方余额不足\");\n        //- 冻结校验\n        require(!frozens[_from], \"持有方处于冻结状态\"); \n\n        //- 消耗 Token\n        balanceOf[_from] -= _value;\n        //- 总量下调\n        totalSupply -= _value;\n\n        emit Burn(_from, _value);\n    }\n\n    /**\n     * 消耗指定数量的 Token\n     *\n     * @param _value 消耗数量\n     */\n    function burn(uint256 _value) public returns (bool success) {\n        //- 非负数验证\n        require(_value > 0, \"无效数量\");\n\n        _burn(msg.sender, _value);\n        return true;\n    }\n\n    /**\n     * 消耗持有方授权额度内指定数量的 Token\n     *\n     * @param _from 持有方\n     * @param _value 消耗数量\n     */\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        //- 授权额度校验\n        require(_value <= allowance[_from][msg.sender], \"授权额度不足\");\n        //- 非负数验证\n        require(_value > 0, \"无效数量\");\n      \n        allowance[_from][msg.sender] -= _value;\n\n        _burn(_from, _value);\n        return true;\n    }\n\n    function() payable public{\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_supplyTM\",\"type\":\"uint256\"}],\"name\":\"offer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lockAll\",\"type\":\"bool\"}],\"name\":\"setLockAll\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"setFreezeAddress\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"transferExtra\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupplyHM\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"TransferExtra\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_supplyTM\",\"type\":\"uint256\"}],\"name\":\"Offer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_frozen\",\"type\":\"bool\"}],\"name\":\"FreezeAddress\",\"type\":\"event\"}]",
  "bytecode": "60806040526004805460ff1916905560068054600160a060020a03191690553480156200002b57600080fd5b506040516200152b3803806200152b833981016040908152815160208084015192840151606085015193850180519395909491019290916200007391600091860190620000fc565b50815162000089906001906020850190620000fc565b506002805460ff191660ff92831617908190556305f5e1009116600a0a939093029290920260038190553360008181526007602052604090209190915560058054600160a060020a031916821790556004805461010060a860020a03191661010090920291909117905550620001a19050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200013f57805160ff19168380011785556200016f565b828001600101855582156200016f579182015b828111156200016f57825182559160200191906001019062000152565b506200017d92915062000181565b5090565b6200019e91905b808211156200017d576000815560010162000188565b90565b61137a80620001b16000396000f3006080604052600436106101275763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302d05d3f811461012957806306fdde031461015a578063095ea7b3146101e457806318160ddd1461021c57806323b872dd14610243578063313ce5671461026d57806342966c681461029857806370a08231146102b0578063761610fc146102d1578063769c9226146102e957806376e44ed81461030357806379ba50971461031857806379cc67901461032d5780638da5cb5b1461035157806395d89b41146103665780639a10f7191461037b578063a002239f146103a1578063a9059cbb1461040a578063c8dbb6861461042e578063cae9ca511461044f578063dd62ed3e146104b8578063f2fde38b146104df575b005b34801561013557600080fd5b5061013e610500565b60408051600160a060020a039092168252519081900360200190f35b34801561016657600080fd5b5061016f610514565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a9578181015183820152602001610191565b50505050905090810190601f1680156101d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f057600080fd5b50610208600160a060020a03600435166024356105a2565b604080519115158252519081900360200190f35b34801561022857600080fd5b50610231610608565b60408051918252519081900360200190f35b34801561024f57600080fd5b50610208600160a060020a036004358116906024351660443561060e565b34801561027957600080fd5b506102826106c8565b6040805160ff9092168252519081900360200190f35b3480156102a457600080fd5b506102086004356106d1565b3480156102bc57600080fd5b50610231600160a060020a036004351661072a565b3480156102dd57600080fd5b5061020860043561073c565b3480156102f557600080fd5b506102086004351515610846565b34801561030f57600080fd5b506102086108b0565b34801561032457600080fd5b506102086108b9565b34801561033957600080fd5b50610208600160a060020a03600435166024356109b9565b34801561035d57600080fd5b5061013e610ab7565b34801561037257600080fd5b5061016f610ac6565b34801561038757600080fd5b50610208600160a060020a03600435166024351515610b20565b3480156103ad57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610208948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610bd89650505050505050565b34801561041657600080fd5b50610208600160a060020a0360043516602435610ca4565b34801561043a57600080fd5b50610208600160a060020a0360043516610cb1565b34801561045b57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610208948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610cc69650505050505050565b3480156104c457600080fd5b50610231600160a060020a0360043581169060243516610ddf565b3480156104eb57600080fd5b50610208600160a060020a0360043516610dfc565b6004546101009004600160a060020a031681565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561059a5780601f1061056f5761010080835404028352916020019161059a565b820191906000526020600020905b81548152906001019060200180831161057d57829003601f168201915b505050505081565b336000818152600860209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60035481565b600160a060020a0383166000908152600860209081526040808320338452909152812054821115610689576040805160e560020a62461bcd02815260206004820152601260248201527fe68e88e69d83e9a29de5baa6e4b88de8b6b30000000000000000000000000000604482015290519081900360640190fd5b600160a060020a03841660009081526008602090815260408083203384529091529020805483900390556106be848484610ee7565b5060019392505050565b60025460ff1681565b6000808211610718576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061132f833981519152604482015290519081900360640190fd5b6107223383611171565b506001919050565b60076020526000908152604090205481565b6005546000908190600160a060020a03163314610791576040805160e560020a62461bcd028152602060048201526015602482015260008051602061130f833981519152604482015290519081900360640190fd5b600083116107d7576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061132f833981519152604482015290519081900360640190fd5b506002546003805460ff909216600a0a84026298968002918201905533600090815260076020908152604091829020805484019055815185815291517fee046dfd9e835fa8731932677c785a4d0b621036ae894acf04d1b38ee2b6cc649281900390910190a150600192915050565b600554600090600160a060020a03163314610899576040805160e560020a62461bcd028152602060048201526015602482015260008051602061130f833981519152604482015290519081900360640190fd5b506004805460ff1916911515919091179055600190565b60045460ff1681565b6006546000908190600160a060020a0316331480156108e25750600654600160a060020a031615155b1515610938576040805160e560020a62461bcd02815260206004820152601860248201527fe697a0e69588e59088e7baa6e696b0e68980e69c89e880850000000000000000604482015290519081900360640190fd5b50600580546006805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091556040805192821680845293909116602083015280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a1600191505090565b600160a060020a0382166000908152600860209081526040808320338452909152812054821115610a34576040805160e560020a62461bcd02815260206004820152601260248201527fe68e88e69d83e9a29de5baa6e4b88de8b6b30000000000000000000000000000604482015290519081900360640190fd5b60008211610a7a576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061132f833981519152604482015290519081900360640190fd5b600160a060020a0383166000908152600860209081526040808320338452909152902080548390039055610aae8383611171565b50600192915050565b600554600160a060020a031681565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561059a5780601f1061056f5761010080835404028352916020019161059a565b600554600090600160a060020a03163314610b73576040805160e560020a62461bcd028152602060048201526015602482015260008051602061130f833981519152604482015290519081900360640190fd5b600160a060020a038316600081815260096020908152604091829020805460ff1916861515908117909155825190815291517fd04653dd11299725c384371cbc7949f8f94e75a2b8063c41d877631cc873c1b49281900390910190a250600192915050565b6000610be5338585610ee7565b83600160a060020a031633600160a060020a03167f13ac6524c59ff6c0dac50dbacc693c6c86731b4a22347d72142a1a0564606b9185856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610c5f578181015183820152602001610c47565b50505050905090810190601f168015610c8c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a35060019392505050565b6000610aae338484610ee7565b60096020526000908152604090205460ff1681565b600083610cd381856105a2565b15610dd7576040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018790523060448401819052608060648501908152875160848601528751600160a060020a03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b83811015610d6b578181015183820152602001610d53565b50505050905090810190601f168015610d985780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610dba57600080fd5b505af1158015610dce573d6000803e3d6000fd5b50505050600191505b509392505050565b600860209081526000928352604080842090915290825290205481565b600554600090600160a060020a03163314610e4f576040805160e560020a62461bcd028152602060048201526015602482015260008051602061130f833981519152604482015290519081900360640190fd5b600554600160a060020a0383811691161415610eb5576040805160e560020a62461bcd02815260206004820152601860248201527fe697a0e69588e59088e7baa6e696b0e68980e69c89e880850000000000000000604482015290519081900360640190fd5b5060068054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff199091161790556001919050565b60045460009060ff1615610f45576040805160e560020a62461bcd02815260206004820152601860248201527fe59088e7baa6e5a484e4ba8ee99481e5ae9ae78ab6e680810000000000000000604482015290519081900360640190fd5b600160a060020a0383161515610fa5576040805160e560020a62461bcd02815260206004820152601260248201527fe697a0e69588e68ea5e694b6e59cb0e59d800000000000000000000000000000604482015290519081900360640190fd5b60008211610feb576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061132f833981519152604482015290519081900360640190fd5b600160a060020a03841660009081526007602052604090205482111561105b576040805160e560020a62461bcd02815260206004820152601b60248201527fe68c81e69c89e696b9e8bdace7a7bbe695b0e9878fe4b88de8b6b30000000000604482015290519081900360640190fd5b600160a060020a03841660009081526009602052604090205460ff16156110cc576040805160e560020a62461bcd02815260206004820152601b60248201527fe68c81e69c89e696b9e5a484e4ba8ee586bbe7bb93e78ab6e680810000000000604482015290519081900360640190fd5b50600160a060020a038083166000818152600760209081526040808320805495891680855282852080548981039091559486905281548801909155815187815291519390950194927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3600160a060020a0380841660009081526007602052604080822054928716825290205401811461116b57fe5b50505050565b60045460ff16156111cc576040805160e560020a62461bcd02815260206004820152601860248201527fe59088e7baa6e5a484e4ba8ee99481e5ae9ae78ab6e680810000000000000000604482015290519081900360640190fd5b600160a060020a03821660009081526007602052604090205481111561123c576040805160e560020a62461bcd02815260206004820152601560248201527fe68c81e69c89e696b9e4bd99e9a29de4b88de8b6b30000000000000000000000604482015290519081900360640190fd5b600160a060020a03821660009081526009602052604090205460ff16156112ad576040805160e560020a62461bcd02815260206004820152601b60248201527fe68c81e69c89e696b9e5a484e4ba8ee586bbe7bb93e78ab6e680810000000000604482015290519081900360640190fd5b600160a060020a03821660008181526007602090815260409182902080548590039055600380548590039055815184815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a250505600e99d9ee6b395e59088e7baa6e689a7e8a18ce880850000000000000000000000e697a0e69588e695b0e9878f0000000000000000000000000000000000000000a165627a7a72305820a6426da480820296ebb3d78af00720285a139a88316dee744f5a100da665d90a00290000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006e88cb6e99d92000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035445420000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "0000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006e88cb6e99d92000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035445420000000000000000000000000000000000000000000000000000000000"
}