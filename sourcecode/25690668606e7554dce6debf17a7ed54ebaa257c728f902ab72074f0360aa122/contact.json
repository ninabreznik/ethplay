{
  "address": "0x85dd50bb40b7770564d35d71b0c6eaf3ec1d9603",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Founder Chibi Fighters Token",
  "contractName": "Founders",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-24\n*/\n\npragma solidity ^0.4.21;\n\n// ----------------------------------------------------------------------------\n// (c) BokkyPooBah / Bok Consulting Pty Ltd 2017. The MIT Licence.\n// modified by Team Chibi Fighters, thanks heaps BokkyPooBah!\n//\n// massive shoutout to https://cryptozombies.io\n// best solidity learning series out there!\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// ERC Token Standard #20 Interface\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n// ----------------------------------------------------------------------------\ncontract ERC20Interface {\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\n\n// ----------------------------------------------------------------------------\n// Contract function to receive approval and execute function in one call\n// Borrowed from MiniMeToken\n// ----------------------------------------------------------------------------\ncontract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\n}\n\n\n// ----------------------------------------------------------------------------\n// Contract owner and transfer functions\n// just in case someone wants to get my bacon\n// ----------------------------------------------------------------------------\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    function Owned() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n    \n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n        newOwner = address(0);\n    }\n}\n\n\n// ----------------------------------------------------------------------------\n// ERC20 compliant Founder Chibi Token\n// Receives ETH and generates Founder Chibi Token\n// 1 Founder Chibi Fighter can be exchanged for 1 Founder Chibi in our upcoming game\n// https://chibifighters.io Chibi Fighters\n// ----------------------------------------------------------------------------\ncontract Founders is ERC20Interface, Owned {\n    string public symbol;\n    string public  name;\n    uint8 public decimals;\n    uint public _totalSupply;\n    uint public _ratio;\n    bool disabled;\n\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n    \n    // ------------------------------------------------------------------------\n    // Launched once when contract starts\n    // ------------------------------------------------------------------------\n    function Founders() public {\n        disabled = false;\n        symbol = \"FCF\";\n        name = \"Founder Chibi Fighters\";\n        decimals = 18;\n        // the first coins go to creator to share among GARRY investors\n        _totalSupply = 330 * 10**uint(decimals);      \n        // set ratio, get 100 Founders for 1 Ether\n        _ratio = 100;\n        balances[owner] = _totalSupply;\n        emit Transfer(address(0), owner, _totalSupply);\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Total supply\n    // ------------------------------------------------------------------------\n    function totalSupply() public constant returns (uint) {\n        return _totalSupply;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Get the token balance for account `tokenOwner`\n    // ------------------------------------------------------------------------\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n        return balances[tokenOwner];\n    }\n    \n\n    // ------------------------------------------------------------------------\n    // Transfer the balance from token owner's account to `to` account\n    // - Owner's account must have sufficient balance to transfer\n    // - 0 value transfers are allowed\n    // ------------------------------------------------------------------------\n    function transfer(address to, uint tokens) public returns (bool success) {\n        require(balances[msg.sender] >= tokens);\n        balances[msg.sender] -= tokens;\n        balances[to] += tokens;\n        emit Transfer(msg.sender, to, tokens);\n        return true;\n    }\n    \n\n    // ------------------------------------------------------------------------\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n    // from the token owner's account\n    //\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n    // recommends that there are no checks for the approval double-spend attack\n    // as this should be implemented in user interfaces \n    // ------------------------------------------------------------------------\n    function approve(address spender, uint tokens) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Transfer `tokens` from the `from` account to the `to` account\n    // \n    // The calling account must already have sufficient tokens approve(...)\n    // for spending from the `from` account and\n    // - From account must have sufficient balance to transfer\n    // - Spender must have sufficient allowance to transfer\n    // - 0 value transfers are allowed\n    // ------------------------------------------------------------------------\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n        require (allowed[from][msg.sender] >= tokens);\n        require (balances[from] >= tokens);\n        \n        balances[from] -= tokens;\n        allowed[from][msg.sender] -= tokens;\n        balances[to] += tokens;\n        emit Transfer(from, to, tokens);\n        return true;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Returns the amount of tokens approved by the owner that can be\n    // transferred to the spender's account\n    // ------------------------------------------------------------------------\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n        return allowed[tokenOwner][spender];\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n    // from the token owner's account. The `spender` contract function\n    // `receiveApproval(...)` is then executed\n    // ------------------------------------------------------------------------\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n        return true;\n    }\n\n    // ------------------------------------------------------------------------\n    // Disable minting of Founder Chibis after Release\n    // ------------------------------------------------------------------------\n    function disableContract(bool _disabled) public onlyOwner returns (bool success) {\n        disabled = _disabled;\n        return true;\n    }\n\n    // ------------------------------------------------------------------------\n    // Tokens per Ethererum at a ratio of 100:1\n    // 0.01 is minimum to avoid spamming\n    // ------------------------------------------------------------------------\n    function () public payable {\n        require(msg.value >= 10000000000000000);\n        require(disabled == false);\n        \n        uint tokens;\n        tokens = msg.value*_ratio;\n\n        balances[msg.sender] += tokens;\n        _totalSupply += tokens;\n        emit Transfer(address(0), msg.sender, tokens);\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Owner can transfer out any accidentally sent ERC20 tokens\n    // Only if he is in the mood though, I won't give a damn if you are an annoying bot\n    // ------------------------------------------------------------------------\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Query Ethereum of contract\n    // ------------------------------------------------------------------------\n    function weiBalance() public constant returns (uint weiBal) {\n        return address(this).balance;\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Send Contracts Ethereum to address owner\n    // ------------------------------------------------------------------------\n    function weiToOwner(address _address, uint amount) public onlyOwner {\n        require(amount <= address(this).balance);\n        _address.transfer(amount);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"weiToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiBalance\",\"outputs\":[{\"name\":\"weiBal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_ratio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disabled\",\"type\":\"bool\"}],\"name\":\"disableContract\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b60008054600160a060020a03191633600160a060020a03161790556007805460ff1916905560408051908101604052600381527f46434600000000000000000000000000000000000000000000000000000000006020820152600290805161007b929160200190610143565b5060408051908101604052601681527f466f756e64657220436869626920466967687465727300000000000000000000602082015260039080516100c3929160200190610143565b5060048054601260ff19909116179081905560ff16600a0a61014a026005819055606460065560008054600160a060020a039081168252600860205260408083208490558254909116927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915190815260200160405180910390a36101de565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061018457805160ff19168380011785556101b1565b828001600101855582156101b1579182015b828111156101b1578251825591602001919060010190610196565b506101bd9291506101c1565b5090565b6101db91905b808211156101bd57600081556001016101c7565b90565b610bb5806101ed6000396000f3006060604052600436106100f85763ffffffff60e060020a60003504166306fdde038114610184578063095ea7b31461020e5780630db5db261461024457806318160ddd1461026857806323b872dd1461028d5780632969d202146102b5578063313ce567146102c85780633eaaf86b146102f15780634330301f1461030457806370a082311461031757806379ba5097146103365780638da5cb5b1461034957806395d89b4114610378578063a9059cbb1461038b578063b5e11819146103ad578063cae9ca51146103c5578063d4ee1d901461042a578063dc39d06d1461043d578063dd62ed3e1461045f578063f2fde38b14610484575b6000662386f26fc1000034101561010e57600080fd5b60075460ff161561011e57600080fd5b50600654600160a060020a033316600081815260086020526040808220805434909502948501905560058054850190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a350005b341561018f57600080fd5b6101976104a3565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101d35780820151838201526020016101bb565b50505050905090810190601f1680156102005780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561021957600080fd5b610230600160a060020a0360043516602435610541565b604051901515815260200160405180910390f35b341561024f57600080fd5b610266600160a060020a03600435166024356105ad565b005b341561027357600080fd5b61027b610614565b60405190815260200160405180910390f35b341561029857600080fd5b610230600160a060020a036004358116906024351660443561061a565b34156102c057600080fd5b61027b610702565b34156102d357600080fd5b6102db610710565b60405160ff909116815260200160405180910390f35b34156102fc57600080fd5b61027b610719565b341561030f57600080fd5b61027b61071f565b341561032257600080fd5b61027b600160a060020a0360043516610725565b341561034157600080fd5b610266610740565b341561035457600080fd5b61035c6107ce565b604051600160a060020a03909116815260200160405180910390f35b341561038357600080fd5b6101976107dd565b341561039657600080fd5b610230600160a060020a0360043516602435610848565b34156103b857600080fd5b61023060043515156108dc565b34156103d057600080fd5b61023060048035600160a060020a03169060248035919060649060443590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061090f95505050505050565b341561043557600080fd5b61035c610a72565b341561044857600080fd5b610230600160a060020a0360043516602435610a81565b341561046a57600080fd5b61027b600160a060020a0360043581169060243516610b14565b341561048f57600080fd5b610266600160a060020a0360043516610b3f565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105395780601f1061050e57610100808354040283529160200191610539565b820191906000526020600020905b81548152906001019060200180831161051c57829003601f168201915b505050505081565b600160a060020a03338116600081815260096020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60005433600160a060020a039081169116146105c857600080fd5b600160a060020a033016318111156105df57600080fd5b600160a060020a03821681156108fc0282604051600060405180830381858888f19350505050151561061057600080fd5b5050565b60055490565b600160a060020a038084166000908152600960209081526040808320339094168352929052908120548290101561065057600080fd5b600160a060020a0384166000908152600860205260409020548290101561067657600080fd5b600160a060020a0380851660008181526008602081815260408084208054899003905560098252808420338716855282528084208054899003905594881680845291905290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b600160a060020a0330163190565b60045460ff1681565b60055481565b60065481565b600160a060020a031660009081526008602052604090205490565b60015433600160a060020a0390811691161461075b57600080fd5b600154600054600160a060020a0391821691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105395780601f1061050e57610100808354040283529160200191610539565b600160a060020a0333166000908152600860205260408120548290101561086e57600080fd5b600160a060020a033381166000818152600860205260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b6000805433600160a060020a039081169116146108f857600080fd5b506007805460ff1916911515919091179055600190565b600160a060020a03338116600081815260096020908152604080832094881680845294909152808220869055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a383600160a060020a0316638f4ffcb1338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610a0a5780820151838201526020016109f2565b50505050905090810190601f168015610a375780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1515610a5857600080fd5b5af11515610a6557600080fd5b5060019695505050505050565b600154600160a060020a031681565b6000805433600160a060020a03908116911614610a9d57600080fd5b600054600160a060020a038085169163a9059cbb91168460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610af757600080fd5b5af11515610b0457600080fd5b5050506040518051949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b60005433600160a060020a03908116911614610b5a57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058207029c73b2aff405b19eb432e910d37dc34cc7ac9c34f30c8ba492433c739890c0029"
}