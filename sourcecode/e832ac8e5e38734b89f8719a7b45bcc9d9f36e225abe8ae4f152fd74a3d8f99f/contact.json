{
  "address": "0x076641af1b8f06b7f8c92587156143c109002cbe",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "SoPay Token",
  "contractName": "SOPToken",
  "compilerVersion": "v0.4.20+commit.3155dd80",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-11\n*/\n\npragma solidity ^0.4.18;\n\ncontract ERC20 {\n//\tfunction totalSupply() public constant returns (uint supply);\n//\tfunction balanceOf(address who) public constant returns (uint value);\n//\tfunction allowance(address owner, address spender) public constant returns (uint _allowance);\n\tfunction transfer(address to, uint value) public returns (bool success);\n\tfunction transferFrom(address from, address to, uint value) public returns (bool success);\n\tfunction approve(address spender, uint value) public returns (bool success);\n\n\tevent Transfer(address indexed from, address indexed to, uint value);\n\tevent Approval(address indexed owner, address indexed spender, uint value);\n}\n\n/**\n * Math operations with safety checks\n */\ncontract SafeMath {\n\n\tfunction mul(uint a, uint b) internal pure returns (uint) {\n\t\tuint c = a * b;\n\t\tassert(a == 0 || c / a == b);\n\t\treturn c;\n\t}\n\n\tfunction div(uint a, uint b) internal pure returns (uint) {\n\t\tassert(b > 0);\n\t\treturn a / b;\n\t}\n\n\tfunction sub(uint a, uint b) internal pure returns (uint) {\n\t\tassert(b <= a);\n\t\treturn a - b;\n\t}\n\n\tfunction add(uint a, uint b) internal pure returns (uint) {\n\t\tuint c = a + b;\n\t\tassert(c >= a && c >= b);\n\t\treturn c;\n\t}\n\n\tfunction min(uint x, uint y) internal pure returns (uint) {\n\t\treturn x <= y ? x : y;\n\t}\n\n\tfunction max(uint x, uint y) internal pure returns (uint) {\n\t\treturn x >= y ? x : y;\n\t}\n}\n\ncontract Owned {\n    address public owner;\n\n    function Owned() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address newOwner) onlyOwner public {\n        owner = newOwner;\n    }\n}\n\ncontract SOPToken is ERC20, SafeMath, Owned {\n\n\t// Public variables of the token\n\tstring public name;\n\tstring public symbol;\n\tuint8 public decimals = 18;\n\t// 18 decimals is the strongly suggested default, avoid changing it\n\tuint public totalSupply;\n\n\t// This creates an array with all balances\n\tmapping(address => uint) public balanceOf;\n\tmapping(address => mapping(address => uint)) public allowance;\n\n\n\tmapping(address=>uint) public lock; \n\tmapping(address=>bool) public freezeIn;\n\tmapping(address=>bool) public freezeOut;\n\t\n\n\t//event definitions\n\t/* This notifies clients about the amount burnt */\n\tevent Burn(address indexed from, uint value);\n\n\tevent FreezeIn(address[] indexed from, bool value);\n\n\tevent FreezeOut(address[] indexed from, bool value);\n\n\n\tfunction SOPToken(string tokenName, string tokenSymbol, uint initSupply) public {\n\t\ttotalSupply=initSupply*10**uint(decimals);      //update total supply\n\t\tname=tokenName;\n\t\tsymbol=tokenSymbol;\n\n\t\tbalanceOf[owner]=totalSupply;       //give the owner all initial tokens\n\n\t}\n\n\t//ERC 20\n\t///////////////////////////////////////////////////////////////////////////////////////////\n\n\tfunction internalTransfer(address from, address toaddr, uint value) internal {\n\t\trequire(toaddr!=0);\n\t\trequire(balanceOf[from]>=value);\n\n\t\trequire(now>=lock[from]);\n\t\trequire(!freezeIn[toaddr]);\n\t\trequire(!freezeOut[from]);\n\n\t\tbalanceOf[from]=sub(balanceOf[from], value);\n\t\tbalanceOf[toaddr]=add(balanceOf[toaddr], value);\n\n\t\tTransfer(from, toaddr, value);\n\t}\n\n\tfunction transfer(address toaddr, uint value) public returns (bool) {\n\t\tinternalTransfer(msg.sender, toaddr, value);\n\n\t\treturn true;\n\t}\n\t\n\tfunction transferFrom(address from, address toaddr, uint value) public returns (bool) {\n\t\trequire(allowance[from][msg.sender]>=value);\n\n\t\tallowance[from][msg.sender]=sub(allowance[from][msg.sender], value);\n\n\t\tinternalTransfer(from, toaddr, value);\n\n\t\treturn true;\n\t}\n\n\tfunction approve(address spender, uint amount) public returns (bool) {\n\t\trequire((amount == 0) || (allowance[msg.sender][spender] == 0));\n\t\t\n\t\tallowance[msg.sender][spender]=amount;\n\n\t\tApproval(msg.sender, spender, amount);\n\n\t\treturn true;\n\t}\n\n\t/////////////////////////////////////////////////////////////////////////////////////////\n\n\tfunction setNameSymbol(string tokenName, string tokenSymbol) public onlyOwner {\n\t\tname=tokenName;\n\t\tsymbol=tokenSymbol;\n\t}\n\n\t////////////////////////////////////////////////////////////////////////////////////////////\n\tfunction setLock(address[] addrs, uint[] times) public onlyOwner {\n\t\trequire(addrs.length==times.length);\n\n\t\tfor (uint i=0; i<addrs.length; i++) {\n\t\t\tlock[addrs[i]]=times[i];\n\t\t}\n\t}\n\n\tfunction setFreezeIn(address[] addrs, bool value) public onlyOwner {\n\t\tfor (uint i=0; i<addrs.length; i++) {\n\t\t\tfreezeIn[addrs[i]]=value;\n\t\t}\n\n\t\tFreezeIn(addrs, value);\n\t}\n\n\tfunction setFreezeOut(address[] addrs, bool value) public onlyOwner {\n\t\tfor (uint i=0; i<addrs.length; i++) {\n\t\t\tfreezeOut[addrs[i]]=value;\n\t\t}\n\n\t\tFreezeOut(addrs, value);\n\t}\n\n\t///////////////////////////////////////////////////////////////////////////////////////////\n\tfunction mint(uint amount) public onlyOwner {\n\t\tbalanceOf[owner]=add(balanceOf[owner], amount);\n\t\ttotalSupply=add(totalSupply, amount);\n\t}\n\n\tfunction burn(uint amount) public {\n\t\tbalanceOf[msg.sender]=sub(balanceOf[msg.sender], amount);\n\t\ttotalSupply=sub(totalSupply, amount);\n\n\t\tBurn(msg.sender, amount);\n\t}\n\n\t///////////////////////////////////////////////////////////////////////////////////////////\n\n\tfunction withdrawEther(uint amount) public onlyOwner {\n\t\towner.transfer(amount);\n\t}\n\n\t// can accept ether\n\tfunction() public payable {\n    }\n\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"toaddr\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrs\",\"type\":\"address[]\"},{\"name\":\"times\",\"type\":\"uint256[]\"}],\"name\":\"setLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrs\",\"type\":\"address[]\"},{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFreezeOut\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"setNameSymbol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeIn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toaddr\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrs\",\"type\":\"address[]\"},{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFreezeIn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOut\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"initSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"FreezeIn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"FreezeOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526003805460ff19166012179055341561001c57600080fd5b60405162001072380380620010728339810160405280805182019190602001805182019190602001805160008054600160a060020a03191633600160a060020a031617905560035460ff16600a0a81026004559150600190508380516100869291602001906100c0565b50600282805161009a9291602001906100c0565b505060045460008054600160a060020a03168152600560205260409020555061015b9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061010157805160ff191683800117855561012e565b8280016001018555821561012e579182015b8281111561012e578251825591602001919060010190610113565b5061013a92915061013e565b5090565b61015891905b8082111561013a5760008155600101610144565b90565b610f07806200016b6000396000f30060606040526004361061011c5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461011e578063095ea7b3146101a857806318160ddd146101de57806323b872dd14610203578063313ce5671461022b5780633bed33ce146102545780633d7240271461026a57806340fe90d0146102f957806342966c681461034c578063504334c21461036257806370a08231146103f55780638da5cb5b1461041457806395d89b41146104435780639cf568c614610456578063a0712d6814610475578063a9059cbb1461048b578063b0c39bbd146104ad578063b81180a314610500578063dd62ed3e1461051f578063f2fde38b14610544578063f435f5a714610563575b005b341561012957600080fd5b610131610582565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016d578082015183820152602001610155565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101b357600080fd5b6101ca600160a060020a0360043516602435610620565b604051901515815260200160405180910390f35b34156101e957600080fd5b6101f16106c6565b60405190815260200160405180910390f35b341561020e57600080fd5b6101ca600160a060020a03600435811690602435166044356106cc565b341561023657600080fd5b61023e61076f565b60405160ff909116815260200160405180910390f35b341561025f57600080fd5b61011c600435610778565b341561027557600080fd5b61011c6004602481358181019083013580602081810201604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437509496506107c995505050505050565b341561030457600080fd5b61011c60046024813581810190830135806020818102016040519081016040528093929190818152602001838360200280828437509496505050509135151591506108579050565b341561035757600080fd5b61011c600435610945565b341561036d57600080fd5b61011c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506109d195505050505050565b341561040057600080fd5b6101f1600160a060020a0360043516610a13565b341561041f57600080fd5b610427610a25565b604051600160a060020a03909116815260200160405180910390f35b341561044e57600080fd5b610131610a34565b341561046157600080fd5b6101ca600160a060020a0360043516610a9f565b341561048057600080fd5b61011c600435610ab4565b341561049657600080fd5b6101ca600160a060020a0360043516602435610b1e565b34156104b857600080fd5b61011c6004602481358181019083013580602081810201604051908101604052809392919081815260200183836020028082843750949650505050913515159150610b349050565b341561050b57600080fd5b6101ca600160a060020a0360043516610c22565b341561052a57600080fd5b6101f1600160a060020a0360043581169060243516610c37565b341561054f57600080fd5b61011c600160a060020a0360043516610c54565b341561056e57600080fd5b6101f1600160a060020a0360043516610c9e565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106185780601f106105ed57610100808354040283529160200191610618565b820191906000526020600020905b8154815290600101906020018083116105fb57829003601f168201915b505050505081565b60008115806106525750600160a060020a03338116600090815260066020908152604080832093871683529290522054155b151561065d57600080fd5b600160a060020a03338116600081815260066020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60045481565b600160a060020a038084166000908152600660209081526040808320339094168352929052908120548290101561070257600080fd5b600160a060020a03808516600090815260066020908152604080832033909416835292905220546107339083610cb0565b600160a060020a0380861660009081526006602090815260408083203390941683529290522055610765848484610cc2565b5060019392505050565b60035460ff1681565b60005433600160a060020a0390811691161461079357600080fd5b600054600160a060020a031681156108fc0282604051600060405180830381858888f1935050505015156107c657600080fd5b50565b6000805433600160a060020a039081169116146107e557600080fd5b81518351146107f357600080fd5b5060005b82518110156108525781818151811061080c57fe5b906020019060200201516007600085848151811061082657fe5b90602001906020020151600160a060020a031681526020810191909152604001600020556001016107f7565b505050565b6000805433600160a060020a0390811691161461087357600080fd5b5060005b82518110156108cb57816009600085848151811061089157fe5b90602001906020020151600160a060020a031681526020810191909152604001600020805460ff1916911515919091179055600101610877565b8260405180828051906020019060200280838360005b838110156108f95780820151838201526020016108e1565b5050505090500191505060405180910390207f43654ecda0d123d59e6228d89cb8c1d65fe882ffb98133e49887736fcbbaed8583604051901515815260200160405180910390a2505050565b600160a060020a0333166000908152600560205260409020546109689082610cb0565b600160a060020a03331660009081526005602052604090205560045461098e9082610cb0565b600455600160a060020a0333167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58260405190815260200160405180910390a250565b60005433600160a060020a039081169116146109ec57600080fd5b60018280516109ff929160200190610e40565b506002818051610852929160200190610e40565b60056020526000908152604090205481565b600054600160a060020a031681565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106185780601f106105ed57610100808354040283529160200191610618565b60086020526000908152604090205460ff1681565b60005433600160a060020a03908116911614610acf57600080fd5b60008054600160a060020a0316815260056020526040902054610af29082610e1c565b60008054600160a060020a0316815260056020526040902055600454610b189082610e1c565b60045550565b6000610b2b338484610cc2565b50600192915050565b6000805433600160a060020a03908116911614610b5057600080fd5b5060005b8251811015610ba8578160086000858481518110610b6e57fe5b90602001906020020151600160a060020a031681526020810191909152604001600020805460ff1916911515919091179055600101610b54565b8260405180828051906020019060200280838360005b83811015610bd6578082015183820152602001610bbe565b5050505090500191505060405180910390207f110963bb3f5926815efaa21791f13d2e45cd09ee5a9903b7ef413526eb9acef183604051901515815260200160405180910390a2505050565b60096020526000908152604090205460ff1681565b600660209081526000928352604080842090915290825290205481565b60005433600160a060020a03908116911614610c6f57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60076020526000908152604090205481565b600082821115610cbc57fe5b50900390565b600160a060020a0382161515610cd757600080fd5b600160a060020a03831660009081526005602052604090205481901015610cfd57600080fd5b600160a060020a038316600090815260076020526040902054421015610d2257600080fd5b600160a060020a03821660009081526008602052604090205460ff1615610d4857600080fd5b600160a060020a03831660009081526009602052604090205460ff1615610d6e57600080fd5b600160a060020a038316600090815260056020526040902054610d919082610cb0565b600160a060020a038085166000908152600560205260408082209390935590841681522054610dc09082610e1c565b600160a060020a03808416600081815260056020526040908190209390935591908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a3505050565b6000828201838110801590610e315750828110155b1515610e3957fe5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610e8157805160ff1916838001178555610eae565b82800160010185558215610eae579182015b82811115610eae578251825591602001919060010190610e93565b50610eba929150610ebe565b5090565b610ed891905b80821115610eba5760008155600101610ec4565b905600a165627a7a72305820a72a7f1eccf87b353f1bf3325c4d89a1e185409e215499380a7c4c9ccc367b180029000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000b2d05e000000000000000000000000000000000000000000000000000000000000000005536f5061790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003534f500000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000b2d05e000000000000000000000000000000000000000000000000000000000000000005536f5061790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003534f500000000000000000000000000000000000000000000000000000000000"
}