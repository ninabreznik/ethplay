{
  "address": "0x8e0456bf48a6c1a5133a5fbc8cbb6a7d035a28b3",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ResultStorage",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-14\n*/\n\npragma solidity ^0.4.25;\n\ninterface IERC20 {\n  function transfer(address _to, uint256 _amount) external returns (bool success);\n  function transferFrom(address _from, address _to, uint256 _amount) external returns (bool success);\n  function balanceOf(address _owner) constant external returns (uint256 balance);\n  function approve(address _spender, uint256 _amount) external returns (bool success);\n  function allowance(address _owner, address _spender) external constant returns (uint256 remaining);\n  function approveAndCall(address _spender, uint256 _amount, bytes _extraData) external returns (bool success);\n  function totalSupply() external constant returns (uint);\n}\n\ninterface IResultStorage {\n    function getResult(bytes32 _predictionId) external returns (uint8);\n}\n\ncontract Owned {\n    address public owner;\n    address public executor;\n    address public superOwner;\n  \n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    constructor() public {\n        superOwner = msg.sender;\n        owner = msg.sender;\n        executor = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner, \"User is not owner\");\n        _;\n    }\n\n    modifier onlySuperOwner {\n        require(msg.sender == superOwner, \"User is not owner\");\n        _;\n    }\n\n    modifier onlyOwnerOrSuperOwner {\n        require(msg.sender == owner || msg.sender == superOwner, \"User is not owner\");\n        _;\n    }\n\n    modifier onlyAllowed {\n        require(msg.sender == owner || msg.sender == executor || msg.sender == superOwner, \"Not allowed\");\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwnerOrSuperOwner {\n        owner = _newOwner;\n    }\n\n    function transferSuperOwnership(address _newOwner) public onlySuperOwner {\n        superOwner = _newOwner;\n    }\n\n    function transferExecutorOwnership(address _newExecutor) public onlyOwnerOrSuperOwner {\n        emit OwnershipTransferred(executor, _newExecutor);\n        executor = _newExecutor;\n    }\n}\n\ncontract ResultStorage is Owned, IResultStorage {\n\n    event ResultAssigned(bytes32 indexed _predictionId, uint8 _outcomeId);\n    event Withdraw(uint _amount);\n\n    struct Result {     \n        uint8 outcomeId;\n        bool resolved; \n    }\n\n    uint8 public constant version = 1;\n    bool public paused;\n    mapping(bytes32 => Result) public results;  \n\n    modifier notPaused() {\n        require(paused == false, \"Contract is paused\");\n        _;\n    }\n\n    modifier resolved(bytes32 _predictionId) {\n        require(results[_predictionId].resolved == true, \"Prediction is not resolved\");\n        _;\n    }\n \n    function setOutcome (bytes32 _predictionId, uint8 _outcomeId)\n            public \n            onlyAllowed\n            notPaused {        \n        \n        results[_predictionId].outcomeId = _outcomeId;\n        results[_predictionId].resolved = true;\n        \n        emit ResultAssigned(_predictionId, _outcomeId);\n    }\n\n    function getResult(bytes32 _predictionId) \n            public \n            view \n            resolved(_predictionId)\n            returns (uint8) {\n        return results[_predictionId].outcomeId;\n    }\n\n    //////////\n    // Safety Methods\n    //////////\n    function () public payable {\n        require(false);\n    }\n\n    function withdrawETH() external onlyOwnerOrSuperOwner {\n        uint balance = address(this).balance;\n        owner.transfer(balance);\n        emit Withdraw(balance);\n    }\n\n    function withdrawTokens(uint _amount, address _token) external onlyOwnerOrSuperOwner {\n        assert(IERC20(_token).transfer(owner, _amount));\n        emit Withdraw(_amount);\n    }\n\n    function pause(bool _paused) external onlyOwnerOrSuperOwner {\n        paused = _paused;\n    }\n}",
  "bytecode": "608060405260028054600160a060020a031990811633908117909255600080548216831790556001805490911690911790556109fa806100406000396000f3006080604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302329a2981146100d6578063131b81ad146100f0578063398d92bb146101115780634c6b25b11461013557806354fd4d501461016a5780635c975abb1461019557806362abb560146101be57806387dcd2b6146101df5780638da5cb5b14610210578063add4c78414610225578063c34c08e51461023d578063ca7e88ba14610252578063e086e5ec14610270578063f2fde38b14610285575b600080fd5b005b3480156100e257600080fd5b506100d460043515156102a6565b3480156100fc57600080fd5b506100d4600160a060020a036004351661034d565b34801561011d57600080fd5b506100d4600435600160a060020a036024351661041d565b34801561014157600080fd5b5061014d60043561055f565b6040805160ff909316835290151560208301528051918290030190f35b34801561017657600080fd5b5061017f61057d565b6040805160ff9092168252519081900360200190f35b3480156101a157600080fd5b506101aa610582565b604080519115158252519081900360200190f35b3480156101ca57600080fd5b506100d4600160a060020a03600435166105a3565b3480156101eb57600080fd5b506101f4610622565b60408051600160a060020a039092168252519081900360200190f35b34801561021c57600080fd5b506101f4610631565b34801561023157600080fd5b5061017f600435610640565b34801561024957600080fd5b506101f46106ca565b34801561025e57600080fd5b506100d460043560ff602435166106d9565b34801561027c57600080fd5b506100d461083c565b34801561029157600080fd5b506100d4600160a060020a0360043516610918565b600054600160a060020a03163314806102c95750600254600160a060020a031633145b151561030d576040805160e560020a62461bcd02815260206004820152601160248201526000805160206109af833981519152604482015290519081900360640190fd5b60028054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b600054600160a060020a03163314806103705750600254600160a060020a031633145b15156103b4576040805160e560020a62461bcd02815260206004820152601160248201526000805160206109af833981519152604482015290519081900360640190fd5b600154604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a03163314806104405750600254600160a060020a031633145b1515610484576040805160e560020a62461bcd02815260206004820152601160248201526000805160206109af833981519152604482015290519081900360640190fd5b60008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810186905290519184169263a9059cbb926044808401936020939083900390910190829087803b1580156104f457600080fd5b505af1158015610508573d6000803e3d6000fd5b505050506040513d602081101561051e57600080fd5b5051151561052857fe5b6040805183815290517f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d9181900360200190a15050565b60036020526000908152604090205460ff8082169161010090041682565b600181565b60025474010000000000000000000000000000000000000000900460ff1681565b600254600160a060020a031633146105f3576040805160e560020a62461bcd02815260206004820152601160248201526000805160206109af833981519152604482015290519081900360640190fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600254600160a060020a031681565b600054600160a060020a031681565b600081815260036020526040812054829060ff6101009091041615156001146106b3576040805160e560020a62461bcd02815260206004820152601a60248201527f50726564696374696f6e206973206e6f74207265736f6c766564000000000000604482015290519081900360640190fd5b505060009081526003602052604090205460ff1690565b600154600160a060020a031681565b600054600160a060020a03163314806106fc5750600154600160a060020a031633145b806107115750600254600160a060020a031633145b1515610767576040805160e560020a62461bcd02815260206004820152600b60248201527f4e6f7420616c6c6f776564000000000000000000000000000000000000000000604482015290519081900360640190fd5b60025474010000000000000000000000000000000000000000900460ff16156107da576040805160e560020a62461bcd02815260206004820152601260248201527f436f6e7472616374206973207061757365640000000000000000000000000000604482015290519081900360640190fd5b600082815260036020908152604091829020805461ff001960ff861660ff19909216821716610100179091558251908152915184927fb0181dced78fbd15133addb8a9d5c4f27a5b294b40f6538c21e30b3a9e62021a92908290030190a25050565b60008054600160a060020a03163314806108605750600254600160a060020a031633145b15156108a4576040805160e560020a62461bcd02815260206004820152601160248201526000805160206109af833981519152604482015290519081900360640190fd5b5060008054604051303192600160a060020a03909216916108fc841502918491818181858888f193505050501580156108e1573d6000803e3d6000fd5b506040805182815290517f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d9181900360200190a150565b600054600160a060020a031633148061093b5750600254600160a060020a031633145b151561097f576040805160e560020a62461bcd02815260206004820152601160248201526000805160206109af833981519152604482015290519081900360640190fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055560055736572206973206e6f74206f776e6572000000000000000000000000000000a165627a7a72305820543836fa7e783da7d77fd42942dd3b93080862bda5b58f716e6d21e632d609bb0029"
}