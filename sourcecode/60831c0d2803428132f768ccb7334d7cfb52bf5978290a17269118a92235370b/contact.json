{
  "address": "0x5d48f293baed247a2d0189058ba37aa238bd4725",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "NeuroChainClausius",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "500",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-22\n*/\n\npragma solidity ^0.4.13;\n\ncontract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\n}\n\ncontract ERC20Interface {\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    function Owned() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n        newOwner = address(0);\n    }\n}\n\ncontract NeuroChainClausius is Owned, ERC20Interface {\n\n  // Adding safe calculation methods to uint256\n  using SafeMath for uint;\n  // Defining balances mapping (ERC20)\n  mapping(address => uint256) balances;\n  // Defining allowances mapping (ERC20)\n  mapping(address => mapping (address => uint256)) allowed;\n  // Defining addresses allowed to bypass global freeze\n  mapping(address => bool) public freezeBypassing;\n  // Defining addresses association between NeuroChain and ETH network\n  mapping(address => string) public neuroChainAddresses;\n  // Event raised when a NeuroChain address is changed\n  event NeuroChainAddressSet(\n    address ethAddress,\n    string neurochainAddress,\n    uint timestamp,\n    bool isForcedChange\n  );\n  // Event raised when trading status is toggled\n  event FreezeStatusChanged(\n    bool toStatus,\n    uint timestamp\n  );\n  // Token Symbol\n  string public symbol = \"NCC\";\n  // Token Name\n  string public name = \"NeuroChain Clausius\";\n  // Token Decimals\n  uint8 public decimals = 18;\n  // Total supply of token\n  uint public _totalSupply = 657440000 * 10**uint(decimals);\n  // Current distributed supply\n  uint public _circulatingSupply = 0;\n  // Global freeze toggle\n  bool public tradingLive = false;\n  // Address of the Crowdsale Contract\n  address public icoContractAddress;\n  /**\n   * @notice Sending Tokens to an address\n   * @param to The receiver address\n   * @param tokens The amount of tokens to send (without de decimal part)\n   * @return {\"success\": \"If the operation completed successfuly\"}\n   */\n  function distributeSupply(\n    address to,\n    uint tokens\n  )\n  public onlyOwner returns (bool success)\n  {\n    uint tokenAmount = tokens.mul(10**uint(decimals));\n    require(_circulatingSupply.add(tokenAmount) <= _totalSupply);\n    _circulatingSupply = _circulatingSupply.add(tokenAmount);\n    balances[to] = tokenAmount;\n    return true;\n  }\n  /**\n   * @notice Allowing a spender to bypass global frezze\n   * @param sender The allowed address\n   * @return {\"success\": \"If the operation completed successfuly\"}\n   */\n  function allowFreezeBypass(\n    address sender\n  )\n  public onlyOwner returns (bool success)\n  {\n    freezeBypassing[sender] = true;\n    return true;\n  }\n  /**\n   * @notice Sets if the trading is live\n   * @param isLive Enabling/Disabling trading\n   */\n  function setTradingStatus(\n    bool isLive\n  )\n  public onlyOwner\n  {\n    tradingLive = isLive;\n    FreezeStatusChanged(tradingLive, block.timestamp);\n  }\n  // Modifier that requires the trading to be live or\n  // allowed to bypass the freeze status\n  modifier tokenTradingMustBeLive(address sender) {\n    require(tradingLive || freezeBypassing[sender]);\n    _;\n  }\n  /**\n   * @notice Sets the ICO Contract Address variable to be used with the\n   * `onlyIcoContract` modifier.\n   * @param contractAddress The NeuroChainCrowdsale deployed address\n   */\n  function setIcoContractAddress(\n    address contractAddress\n  )\n  public onlyOwner\n  {\n    freezeBypassing[contractAddress] = true;\n    icoContractAddress = contractAddress;\n  }\n  // Modifier that requires msg.sender to be Crowdsale Contract\n  modifier onlyIcoContract() {\n    require(msg.sender == icoContractAddress);\n    _;\n  }\n  /**\n   * @notice Permit `msg.sender` to set its NeuroChain Address\n   * @param neurochainAddress The NeuroChain Address\n   */\n  function setNeuroChainAddress(\n    string neurochainAddress\n  )\n  public\n  {\n    neuroChainAddresses[msg.sender] = neurochainAddress;\n    NeuroChainAddressSet(\n      msg.sender,\n      neurochainAddress,\n      block.timestamp,\n      false\n    );\n  }\n  /**\n   * @notice Force NeuroChain Address to be associated to a\n   * standard ERC20 account\n   * @dev Can only be called by the ICO Contract\n   * @param ethAddress The ETH address to associate\n   * @param neurochainAddress The NeuroChain Address\n   */\n  function forceNeuroChainAddress(\n    address ethAddress,\n    string neurochainAddress\n  )\n  public onlyIcoContract\n  {\n    neuroChainAddresses[ethAddress] = neurochainAddress;\n    NeuroChainAddressSet(\n      ethAddress,\n      neurochainAddress,\n      block.timestamp,\n      true\n    );\n  }\n  /**\n   * @notice Return the total supply of the token\n   * @dev This function is part of the ERC20 standard\n   * @return The token supply\n   */\n  function totalSupply() public constant returns (uint) {\n    return _totalSupply;\n  }\n  /**\n   * @notice Get the token balance of `tokenOwner`\n   * @dev This function is part of the ERC20 standard\n   * @param tokenOwner The wallet to get the balance of\n   * @return {\"balance\": \"The balance of `tokenOwner`\"}\n   */\n  function balanceOf(\n    address tokenOwner\n  )\n  public constant returns (uint balance)\n  {\n    return balances[tokenOwner];\n  }\n  /**\n   * @notice Transfers `tokens` from msg.sender to `to`\n   * @dev This function is part of the ERC20 standard\n   * @param to The address that receives the tokens\n   * @param tokens Token amount to transfer\n   * @return {\"success\": \"If the operation completed successfuly\"}\n   */\n  function transfer(\n    address to,\n    uint tokens\n  )\n  public tokenTradingMustBeLive(msg.sender) returns (bool success)\n  {\n    balances[msg.sender] = balances[msg.sender].sub(tokens);\n    balances[to] = balances[to].add(tokens);\n    Transfer(msg.sender, to, tokens);\n    return true;\n  }\n  /**\n   * @notice Transfer tokens from an address to another\n   * through an allowance made beforehand\n   * @dev This function is part of the ERC20 standard\n   * @param from The address sending the tokens\n   * @param to The address recieving the tokens\n   * @param tokens Token amount to transfer\n   * @return {\"success\": \"If the operation completed successfuly\"}\n   */\n  function transferFrom(\n    address from,\n    address to,\n    uint tokens\n  )\n  public tokenTradingMustBeLive(from) returns (bool success)\n  {\n    balances[from] = balances[from].sub(tokens);\n    allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n    balances[to] = balances[to].add(tokens);\n    Transfer(from, to, tokens);\n    return true;\n  }\n  /**\n   * @notice Approve an address to send `tokenAmount` tokens to `msg.sender` (make an allowance)\n   * @dev This function is part of the ERC20 standard\n   * @param spender The allowed address\n   * @param tokens The maximum amount allowed to spend\n   * @return {\"success\": \"If the operation completed successfuly\"}\n   */\n  function approve(\n    address spender,\n    uint tokens\n  )\n  public returns (bool success)\n  {\n    allowed[msg.sender][spender] = tokens;\n    Approval(msg.sender, spender, tokens);\n    return true;\n  }\n  /**\n   * @notice Get the remaining allowance for a spender on a given address\n   * @dev This function is part of the ERC20 standard\n   * @param tokenOwner The address that owns the tokens\n   * @param spender The spender\n   * @return {\"remaining\": \"The amount of tokens remaining in the allowance\"}\n   */\n  function allowance(\n    address tokenOwner,\n    address spender\n  )\n  public constant returns (uint remaining)\n  {\n    return allowed[tokenOwner][spender];\n  }\n  /**\n   * @notice Permits to create an approval on a contract and then call a method\n   * on the approved contract right away.\n   * @param spender The allowed address\n   * @param tokens The maximum amount allowed to spend\n   * @param data The data sent back as parameter to the contract (bytes array)\n   * @return {\"success\": \"If the operation completed successfuly\"}\n   */\n  function approveAndCall(\n    address spender,\n    uint tokens,\n    bytes data\n  )\n  public returns (bool success)\n  {\n    allowed[msg.sender][spender] = tokens;\n    Approval(msg.sender, spender, tokens);\n    ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n    return true;\n  }\n  /**\n   * @notice Permits to withdraw any ERC20 tokens that have been mistakingly sent to this contract\n   * @param tokenAddress The received ERC20 token address\n   * @param tokens The amount of ERC20 tokens to withdraw from this contract\n   * @return {\"success\": \"If the operation completed successfuly\"}\n   */\n  function transferAnyERC20Token(\n    address tokenAddress,\n    uint tokens\n  )\n  public onlyOwner returns (bool success)\n  {\n    return ERC20Interface(tokenAddress).transfer(owner, tokens);\n  }\n}\n\nlibrary SafeMath {\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    function div(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n\n    /**\n    * @dev Divides two numbers with 18 decimals, represented as uints (e.g. ether or token values)\n    */\n    uint constant ETHER_PRECISION = 10 ** 18;\n    function ediv(uint x, uint y) internal pure returns (uint z) {\n        // Put x to the 36th order of magnitude, so natural division will put it back to the 18th\n        // Adding y/2 before putting x back to the 18th order of magnitude is necessary to force the EVM to round up instead of down\n        z = add(mul(x, ETHER_PRECISION), y / 2) / y;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"allowFreezeBypass\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tradingLive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setIcoContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"isLive\",\"type\":\"bool\"}],\"name\":\"setTradingStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"neurochainAddress\",\"type\":\"string\"}],\"name\":\"setNeuroChainAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"distributeSupply\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ethAddress\",\"type\":\"address\"},{\"name\":\"neurochainAddress\",\"type\":\"string\"}],\"name\":\"forceNeuroChainAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeBypassing\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_circulatingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"neuroChainAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ethAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"neurochainAddress\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isForcedChange\",\"type\":\"bool\"}],\"name\":\"NeuroChainAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"toStatus\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FreezeStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "606060405260408051908101604052600381527f4e43430000000000000000000000000000000000000000000000000000000000602082015260069080516200004d929160200190620000eb565b5060408051908101604052601381527f4e6575726f436861696e20436c617573697573000000000000000000000000006020820152600790805162000097929160200190620000eb565b5060088054601260ff19918216179182905560ff909116600a90810a63272fbd0002600955600090819055600b80549092169091558054600160a060020a03191633600160a060020a031617905562000190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200012e57805160ff19168380011785556200015e565b828001600101855582156200015e579182015b828111156200015e57825182559160200191906001019062000141565b506200016c92915062000170565b5090565b6200018d91905b808211156200016c576000815560010162000177565b90565b61127780620001a06000396000f30060606040526004361061015e5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610163578063095ea7b3146101ed5780630dc6bae51461022357806311704f5214610242578063170381fe1461025557806318160ddd1461027657806323b872dd1461029b578063313ce567146102c3578063379ba1d9146102ec5780633eaaf86b14610304578063425654051461031757806344bee639146103685780636cb049931461038a57806370a08231146103e957806379ba5097146104085780638c564ebf1461041b5780638da5cb5b1461043a57806395d89b41146104695780639fe17cc21461047c578063a253c06e1461048f578063a9059cbb146104a2578063ba6b285a146104c4578063cae9ca51146104e3578063d4ee1d9014610548578063dc39d06d1461055b578063dd62ed3e1461057d578063f2fde38b146105a2575b600080fd5b341561016e57600080fd5b6101766105c1565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101b257808201518382015260200161019a565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101f857600080fd5b61020f600160a060020a036004351660243561065f565b604051901515815260200160405180910390f35b341561022e57600080fd5b61020f600160a060020a03600435166106cc565b341561024d57600080fd5b61020f610711565b341561026057600080fd5b610274600160a060020a036004351661071a565b005b341561028157600080fd5b610289610783565b60405190815260200160405180910390f35b34156102a657600080fd5b61020f600160a060020a036004358116906024351660443561078a565b34156102ce57600080fd5b6102d66108d7565b60405160ff909116815260200160405180910390f35b34156102f757600080fd5b61027460043515156108e0565b341561030f57600080fd5b61028961094d565b341561032257600080fd5b61027460046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061095395505050505050565b341561037357600080fd5b61020f600160a060020a0360043516602435610a3d565b341561039557600080fd5b61027460048035600160a060020a03169060446024803590810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610ad695505050505050565b34156103f457600080fd5b610289600160a060020a0360043516610be1565b341561041357600080fd5b610274610bfc565b341561042657600080fd5b61020f600160a060020a0360043516610c8a565b341561044557600080fd5b61044d610c9f565b604051600160a060020a03909116815260200160405180910390f35b341561047457600080fd5b610176610cae565b341561048757600080fd5b61044d610d19565b341561049a57600080fd5b610289610d2d565b34156104ad57600080fd5b61020f600160a060020a0360043516602435610d33565b34156104cf57600080fd5b610176600160a060020a0360043516610e2c565b34156104ee57600080fd5b61020f60048035600160a060020a03169060248035919060649060443590810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610ea995505050505050565b341561055357600080fd5b61044d611029565b341561056657600080fd5b61020f600160a060020a0360043516602435611038565b341561058857600080fd5b610289600160a060020a03600435811690602435166110f4565b34156105ad57600080fd5b610274600160a060020a036004351661111f565b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106575780601f1061062c57610100808354040283529160200191610657565b820191906000526020600020905b81548152906001019060200180831161063a57829003601f168201915b505050505081565b600160a060020a03338116600081815260036020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b6000805433600160a060020a039081169116146106e857600080fd5b50600160a060020a03166000908152600460205260409020805460ff1916600190811790915590565b600b5460ff1681565b60005433600160a060020a0390811691161461073557600080fd5b600160a060020a03166000818152600460205260409020805460ff19166001179055600b805461010090920274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b6009545b90565b600b54600090849060ff16806107b85750600160a060020a03811660009081526004602052604090205460ff165b15156107c357600080fd5b600160a060020a0385166000908152600260205260409020546107ec908463ffffffff61116916565b600160a060020a038087166000908152600260209081526040808320949094556003815283822033909316825291909152205461082f908463ffffffff61116916565b600160a060020a0380871660009081526003602090815260408083203385168452825280832094909455918716815260029091522054610875908463ffffffff61117e16565b600160a060020a03808616600081815260026020526040908190209390935591908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3506001949350505050565b60085460ff1681565b60005433600160a060020a039081169116146108fb57600080fd5b600b805460ff191682151517908190557f694e0db7ae269ecbdc71178380d9e179e855c2c20d04ecd9db36ad465e807df09060ff1642604051911515825260208201526040908101905180910390a150565b60095481565b600160a060020a033316600090815260056020526040902081805161097c9291602001906111b3565b507f205f59c02073146b0aad3a38d1ca0ac19a7ff672b4c233d047730294566e0fea3382426000604051600160a060020a038516815260408101839052811515606082015260806020820181815290820185818151815260200191508051906020019080838360005b838110156109fd5780820151838201526020016109e5565b50505050905090810190601f168015610a2a5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150565b60008054819033600160a060020a03908116911614610a5b57600080fd5b600854610a7590849060ff16600a0a63ffffffff61118e16565b9050600954610a8f82600a5461117e90919063ffffffff16565b1115610a9a57600080fd5b600a54610aad908263ffffffff61117e16565b600a55600160a060020a0384166000908152600260205260409020819055600191505092915050565b600b5433600160a060020a039081166101009092041614610af657600080fd5b600160a060020a0382166000908152600560205260409020818051610b1f9291602001906111b3565b507f205f59c02073146b0aad3a38d1ca0ac19a7ff672b4c233d047730294566e0fea8282426001604051600160a060020a038516815260408101839052811515606082015260806020820181815290820185818151815260200191508051906020019080838360005b83811015610ba0578082015183820152602001610b88565b50505050905090810190601f168015610bcd5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050565b600160a060020a031660009081526002602052604090205490565b60015433600160a060020a03908116911614610c1757600080fd5b600154600054600160a060020a0391821691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b60046020526000908152604090205460ff1681565b600054600160a060020a031681565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106575780601f1061062c57610100808354040283529160200191610657565b600b546101009004600160a060020a031681565b600a5481565b600b54600090339060ff1680610d615750600160a060020a03811660009081526004602052604090205460ff165b1515610d6c57600080fd5b600160a060020a033316600090815260026020526040902054610d95908463ffffffff61116916565b600160a060020a033381166000908152600260205260408082209390935590861681522054610dca908463ffffffff61117e16565b600160a060020a0380861660008181526002602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a35060019392505050565b60056020528060005260406000206000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106575780601f1061062c57610100808354040283529160200191610657565b600160a060020a03338116600081815260036020908152604080832094881680845294909152808220869055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a383600160a060020a0316638f4ffcb1338530866040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610fbd578082015183820152602001610fa5565b50505050905090810190601f168015610fea5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b151561100b57600080fd5b6102c65a03f1151561101c57600080fd5b5060019695505050505050565b600154600160a060020a031681565b6000805433600160a060020a0390811691161461105457600080fd5b60008054600160a060020a038086169263a9059cbb92909116908590604051602001526040517c010000000000000000000000000000000000000000000000000000000063ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156110d357600080fd5b6102c65a03f115156110e457600080fd5b5050506040518051949350505050565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b60005433600160a060020a0390811691161461113a57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008282111561117857600080fd5b50900390565b818101828110156106c657600080fd5b8181028215806111a857508183828115156111a557fe5b04145b15156106c657600080fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106111f457805160ff1916838001178555611221565b82800160010185558215611221579182015b82811115611221578251825591602001919060010190611206565b5061122d929150611231565b5090565b61078791905b8082111561122d57600081556001016112375600a165627a7a723058205a6d6d00881be2eacc6c8e1d7c2f9df679bd51429e2cea0ebc48bbe32dd990cc0029"
}