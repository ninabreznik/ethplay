{
  "address": "0x0f1ed66c251bcb52ecf7e67ac64bb72482048adb",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SEER",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-12-29\n*/\n\n// Copyright (C) Seer Team\ncontract ERC20 {\n    function totalSupply() constant returns (uint supply);\n    function balanceOf( address who ) constant returns (uint value);\n    function allowance( address owner, address spender ) constant returns (uint _allowance);\n\n    function transfer( address to, uint value) returns (bool ok);\n    function transferFrom( address from, address to, uint value) returns (bool ok);\n    function approve( address spender, uint value ) returns (bool ok);\n\n    event Transfer( address indexed from, address indexed to, uint value);\n    event Approval( address indexed owner, address indexed spender, uint value);\n}\n\ncontract DSMath {\n\n    function add(uint256 x, uint256 y) constant internal returns (uint256 z) {\n        assert((z = x + y) >= x);\n    }\n\n    function sub(uint256 x, uint256 y) constant internal returns (uint256 z) {\n        assert((z = x - y) <= x);\n    }\n\n}\n\ncontract SEER is ERC20,DSMath {\n    uint256                                            _supply;\n    mapping (address => uint256)                       _balances;\n    mapping (address => mapping (address => uint256))  _approvals;\n\n    string   public  symbol;\n    string   public  name;\n    uint256  public  decimals = 18;\n    address  public  owner;\n    bool     public  stopped;\n    \n\n\n    function SEER(string _symbol,string _name,address _owner) {\n        symbol=_symbol;\n        name=_name;\n        owner=_owner;\n    }\n\n    modifier auth {\n        assert (msg.sender==owner);\n        _;\n    }\n    modifier stoppable {\n        assert (!stopped);\n        _;\n    }\n    function stop() auth  {\n        stopped = true;\n    }\n    function start() auth  {\n        stopped = false;\n    }\n\n    function totalSupply() constant returns (uint256) {\n        return _supply;\n    }\n    function balanceOf(address src) constant returns (uint256) {\n        return _balances[src];\n    }\n    function allowance(address src, address guy) constant returns (uint256) {\n        return _approvals[src][guy];\n    }\n\n    function transfer(address dst, uint wad) stoppable returns (bool) {\n        assert(_balances[msg.sender] >= wad);\n\n        _balances[msg.sender] = sub(_balances[msg.sender], wad);\n        _balances[dst] = add(_balances[dst], wad);\n\n        Transfer(msg.sender, dst, wad);\n\n        return true;\n    }\n\n    function transferFrom(address src, address dst, uint wad)stoppable returns (bool) {\n        assert(_balances[src] >= wad);\n        assert(_approvals[src][msg.sender] >= wad);\n\n        _approvals[src][msg.sender] = sub(_approvals[src][msg.sender], wad);\n        _balances[src] = sub(_balances[src], wad);\n        _balances[dst] = add(_balances[dst], wad);\n\n        Transfer(src, dst, wad);\n\n        return true;\n    }\n\n    function approve(address guy, uint256 wad) stoppable returns (bool) {\n        _approvals[msg.sender][guy] = wad;\n\n        Approval(msg.sender, guy, wad);\n\n        return true;\n    }\n    function mint(address dst,uint128 wad) auth stoppable {\n        _balances[dst] = add(_balances[dst], wad);\n        _supply = add(_supply, wad);\n    }\n\n    event LogSetOwner     (address indexed owner);\n\n    function setOwner(address owner_) auth\n    {\n        owner = owner_;\n        LogSetOwner(owner);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint128\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526012600555341561001457600080fd5b604051610a97380380610a9783398101604052808051820191906020018051820191906020018051915060039050838051610053929160200190610090565b506004828051610067929160200190610090565b5060068054600160a060020a031916600160a060020a03929092169190911790555061012b9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100d157805160ff19168380011785556100fe565b828001600101855582156100fe579182015b828111156100fe5782518255916020019190600101906100e3565b5061010a92915061010e565b5090565b61012891905b8082111561010a5760008155600101610114565b90565b61095d8061013a6000396000f3006060604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df57806307da68f514610169578063095ea7b31461017e57806313af4035146101b457806318160ddd146101d357806323b872dd146101f8578063313ce5671461022057806370a082311461023357806375f12b21146102525780638da5cb5b1461026557806395d89b4114610294578063a9059cbb146102a7578063be29184f146102c9578063be9a6555146102fd578063dd62ed3e14610310575b600080fd5b34156100ea57600080fd5b6100f2610335565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012e578082015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017457600080fd5b61017c6103d3565b005b341561018957600080fd5b6101a0600160a060020a0360043516602435610411565b604051901515815260200160405180910390f35b34156101bf57600080fd5b61017c600160a060020a0360043516610492565b34156101de57600080fd5b6101e6610508565b60405190815260200160405180910390f35b341561020357600080fd5b6101a0600160a060020a036004358116906024351660443561050e565b341561022b57600080fd5b6101e661067b565b341561023e57600080fd5b6101e6600160a060020a0360043516610681565b341561025d57600080fd5b6101a061069c565b341561027057600080fd5b6102786106ac565b604051600160a060020a03909116815260200160405180910390f35b341561029f57600080fd5b6100f26106bb565b34156102b257600080fd5b6101a0600160a060020a0360043516602435610726565b34156102d457600080fd5b61017c600160a060020a03600435166fffffffffffffffffffffffffffffffff60243516610813565b341561030857600080fd5b61017c6108b4565b341561031b57600080fd5b6101e6600160a060020a03600435811690602435166108ec565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103cb5780601f106103a0576101008083540402835291602001916103cb565b820191906000526020600020905b8154815290600101906020018083116103ae57829003601f168201915b505050505081565b60065433600160a060020a039081169116146103eb57fe5b6006805474ff0000000000000000000000000000000000000000191660a060020a179055565b60065460009060a060020a900460ff161561042857fe5b600160a060020a03338116600081815260026020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60065433600160a060020a039081169116146104aa57fe5b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b60005490565b60065460009060a060020a900460ff161561052557fe5b600160a060020a0384166000908152600160205260409020548290101561054857fe5b600160a060020a03808516600090815260026020908152604080832033909416835292905220548290101561057957fe5b600160a060020a03808516600090815260026020908152604080832033909416835292905220546105aa9083610917565b600160a060020a0380861660008181526002602090815260408083203390951683529381528382209490945590815260019092529020546105eb9083610917565b600160a060020a03808616600090815260016020526040808220939093559085168152205461061a9083610924565b600160a060020a03808516600081815260016020526040908190209390935591908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b60055481565b600160a060020a031660009081526001602052604090205490565b60065460a060020a900460ff1681565b600654600160a060020a031681565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103cb5780601f106103a0576101008083540402835291602001916103cb565b60065460009060a060020a900460ff161561073d57fe5b600160a060020a0333166000908152600160205260409020548290101561076057fe5b600160a060020a0333166000908152600160205260409020546107839083610917565b600160a060020a0333811660009081526001602052604080822093909355908516815220546107b29083610924565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b60065433600160a060020a0390811691161461082b57fe5b60065460a060020a900460ff161561083f57fe5b600160a060020a038216600090815260016020526040902054610874906fffffffffffffffffffffffffffffffff8316610924565b600160a060020a038316600090815260016020526040812091909155546108ad906fffffffffffffffffffffffffffffffff8316610924565b6000555050565b60065433600160a060020a039081169116146108cc57fe5b6006805474ff000000000000000000000000000000000000000019169055565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b8082038281111561048c57fe5b8082018281101561048c57fe00a165627a7a72305820b6181d86bba8f366248f41a8ca68b0cf51c00018da69e04adb05f0a7cb0cfecb0029000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000097d82e90a64278738da87a92abf2baa0bc1ebd60000000000000000000000000000000000000000000000000000000000000000453454552000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010534545522d45524332302d546f6b656e00000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000097d82e90a64278738da87a92abf2baa0bc1ebd60000000000000000000000000000000000000000000000000000000000000000453454552000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010534545522d45524332302d546f6b656e00000000000000000000000000000000"
}