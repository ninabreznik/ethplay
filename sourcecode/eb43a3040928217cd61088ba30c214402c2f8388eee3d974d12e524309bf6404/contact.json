{
  "address": "0xcf7781a3e9e6a3cca86740eba6e4ecf51c739884",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Storage",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-16\n*/\n\npragma solidity ^0.4.24;\n\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address private _owner;\n\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() internal {\n    _owner = msg.sender;\n    emit OwnershipTransferred(address(0), _owner);\n  }\n\n  /**\n   * @return the address of the owner.\n   */\n  function owner() public view returns(address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(isOwner());\n    _;\n  }\n\n  /**\n   * @return true if `msg.sender` is the owner of the contract.\n   */\n  function isOwner() public view returns(bool) {\n    return msg.sender == _owner;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, reverts on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b);\n\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b > 0); // Solidity only automatically asserts when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n  * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n  * @dev Adds two numbers, reverts on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a);\n\n    return c;\n  }\n\n  /**\n  * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\n  * reverts when dividing by zero.\n  */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0);\n    return a % b;\n  }\n}\n\n// File: contracts/token/ERC20/Storage.sol\n\n/**\n * MIT License\n *\n * Copyright (c) 2019 eToroX Labs\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\npragma solidity 0.4.24;\n\n\n\n/**\n * @title External ERC20 Storage\n *\n * @dev The storage contract used in ExternalERC20 token. This contract can\n * provide storage for exactly one contract, referred to as the implementor,\n * inheriting from the ExternalERC20 contract. Only the current implementor or\n * the owner can transfer the implementorship. Change of state is only allowed\n * by the implementor.\n */\ncontract Storage is Ownable {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private balances;\n    mapping (address => mapping (address => uint256)) private allowed;\n    uint256 private totalSupply;\n\n    address private _implementor;\n\n    event StorageImplementorTransferred(address indexed from,\n                                        address indexed to);\n\n    /**\n     * @dev Contructor.\n     * @param owner The address of the owner of the contract.\n     * Must not be the zero address.\n     * @param implementor The address of the contract that is\n     * allowed to change state. Must not be the zero address.\n     */\n    constructor(address owner, address implementor) public {\n\n        require(\n            owner != address(0),\n            \"Owner should not be the zero address\"\n        );\n\n        require(\n            implementor != address(0),\n            \"Implementor should not be the zero address\"\n        );\n\n        transferOwnership(owner);\n        _implementor = implementor;\n    }\n\n    /**\n     * @dev Return whether the sender is an implementor.\n     */\n    function isImplementor() public view returns(bool) {\n        return msg.sender == _implementor;\n    }\n\n    /**\n     * @dev Sets new balance.\n     * Can only be done by owner or implementor contract.\n     */\n    function setBalance(address owner,\n                        uint256 value)\n        public\n        onlyImplementor\n    {\n        balances[owner] = value;\n    }\n\n    /**\n     * @dev Increases the balances relatively\n     * @param owner the address for which to increase balance\n     * @param addedValue the value to increase with\n     */\n    function increaseBalance(address owner, uint256 addedValue)\n        public\n        onlyImplementor\n    {\n        balances[owner] = balances[owner].add(addedValue);\n    }\n\n    /**\n     * @dev Decreases the balances relatively\n     * @param owner the address for which to decrease balance\n     * @param subtractedValue the value to decrease with\n     */\n    function decreaseBalance(address owner, uint256 subtractedValue)\n        public\n        onlyImplementor\n    {\n        balances[owner] = balances[owner].sub(subtractedValue);\n    }\n\n    /**\n     * @dev Can only be done by owner or implementor contract.\n     * @return The current balance of owner\n     */\n    function getBalance(address owner)\n        public\n        view\n        returns (uint256)\n    {\n        return balances[owner];\n    }\n\n    /**\n     * @dev Sets new allowance.\n     * Can only be called by implementor contract.\n     */\n    function setAllowed(address owner,\n                        address spender,\n                        uint256 value)\n        public\n        onlyImplementor\n    {\n        allowed[owner][spender] = value;\n    }\n\n    /**\n     * @dev Increases the allowance relatively\n     * @param owner the address for which to allow from\n     * @param spender the addres for which the allowance increase is granted\n     * @param addedValue the value to increase with\n     */\n    function increaseAllowed(\n        address owner,\n        address spender,\n        uint256 addedValue\n    )\n        public\n        onlyImplementor\n    {\n        allowed[owner][spender] = allowed[owner][spender].add(addedValue);\n    }\n\n    /**\n     * @dev Decreases the allowance relatively\n     * @param owner the address for which to allow from\n     * @param spender the addres for which the allowance decrease is granted\n     * @param subtractedValue the value to decrease with\n     */\n    function decreaseAllowed(\n        address owner,\n        address spender,\n        uint256 subtractedValue\n    )\n        public\n        onlyImplementor\n    {\n        allowed[owner][spender] = allowed[owner][spender].sub(subtractedValue);\n    }\n\n    /**\n     * @dev Can only be called by implementor contract.\n     * @return The current allowance for spender from owner\n     */\n    function getAllowed(address owner,\n                        address spender)\n        public\n        view\n        returns (uint256)\n    {\n        return allowed[owner][spender];\n    }\n\n    /**\n     * @dev Change totalSupply.\n     * Can only be called by implementor contract.\n     */\n    function setTotalSupply(uint256 value)\n        public\n        onlyImplementor\n    {\n        totalSupply = value;\n    }\n\n    /**\n     * @dev Can only be called by implementor contract.\n     * @return Current supply\n     */\n    function getTotalSupply()\n        public\n        view\n        returns (uint256)\n    {\n        return totalSupply;\n    }\n\n    /**\n     * @dev Transfer implementor to new contract\n     * Can only be called by owner or implementor contract.\n     */\n    function transferImplementor(address newImplementor)\n        public\n        requireNonZero(newImplementor)\n        onlyImplementorOrOwner\n    {\n        require(newImplementor != _implementor,\n                \"Cannot transfer to same implementor as existing\");\n        address curImplementor = _implementor;\n        _implementor = newImplementor;\n        emit StorageImplementorTransferred(curImplementor, newImplementor);\n    }\n\n    /**\n     * @dev Asserts that sender is either owner or implementor.\n     */\n    modifier onlyImplementorOrOwner() {\n        require(isImplementor() || isOwner(), \"Is not implementor or owner\");\n        _;\n    }\n\n    /**\n     * @dev Asserts that sender is the implementor.\n     */\n    modifier onlyImplementor() {\n        require(isImplementor(), \"Is not implementor\");\n        _;\n    }\n\n    /**\n     * @dev Asserts that the given address is not the null-address\n     */\n    modifier requireNonZero(address addr) {\n        require(addr != address(0), \"Expected a non-zero address\");\n        _;\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setAllowed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newImplementor\",\"type\":\"address\"}],\"name\":\"transferImplementor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"getAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isImplementor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setTotalSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"implementor\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"StorageImplementorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50604051604080610ced833981016040819052815160209092015160008054600160a060020a03191633178082559192600160a060020a039290921691600080516020610ccd833981519152908290a3600160a060020a03821615156100fc57604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4f776e65722073686f756c64206e6f7420626520746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a038116151561019957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f496d706c656d656e746f722073686f756c64206e6f7420626520746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015290519081900360840190fd5b6101ab826401000000006101d1810204565b60048054600160a060020a031916600160a060020a039290921691909117905550610271565b6101e2640100000000610202810204565b15156101ed57600080fd5b6101ff81640100000000610213810204565b50565b600054600160a060020a0316331490565b600160a060020a038116151561022857600080fd5b60008054604051600160a060020a0380851693921691600080516020610ccd83398151915291a360008054600160a060020a031916600160a060020a0392909216919091179055565b610a4d806102806000396000f3006080604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166326188a3f81146100ea57806333dd1b8a146101165780635b86f5991461014057806363a97d3f14610164578063715018a61461018e5780637a1f3b2c146101a35780638da5cb5b146101c45780638f32d59b146101f5578063c4e41b221461021e578063c7c7e9ea14610245578063e30443bc1461026c578063eeb1934e14610290578063f2fde38b146102a5578063f7ea7a3d146102c6578063f8b2cb4f146102de578063ff056949146102ff575b600080fd5b3480156100f657600080fd5b50610114600160a060020a0360043581169060243516604435610323565b005b34801561012257600080fd5b50610114600160a060020a03600435811690602435166044356103d6565b34801561014c57600080fd5b50610114600160a060020a036004351660243561044e565b34801561017057600080fd5b50610114600160a060020a03600435811690602435166044356104e3565b34801561019a57600080fd5b50610114610565565b3480156101af57600080fd5b50610114600160a060020a03600435166105cf565b3480156101d057600080fd5b506101d961078a565b60408051600160a060020a039092168252519081900360200190f35b34801561020157600080fd5b5061020a610799565b604080519115158252519081900360200190f35b34801561022a57600080fd5b506102336107aa565b60408051918252519081900360200190f35b34801561025157600080fd5b50610233600160a060020a03600435811690602435166107b0565b34801561027857600080fd5b50610114600160a060020a03600435166024356107db565b34801561029c57600080fd5b5061020a610843565b3480156102b157600080fd5b50610114600160a060020a0360043516610854565b3480156102d257600080fd5b50610114600435610873565b3480156102ea57600080fd5b50610233600160a060020a03600435166108c4565b34801561030b57600080fd5b50610114600160a060020a03600435166024356108df565b61032b610843565b151561036f576040805160e560020a62461bcd0281526020600482015260126024820152600080516020610a02833981519152604482015290519081900360640190fd5b600160a060020a038084166000908152600260209081526040808320938616835292905220546103a5908263ffffffff61095416565b600160a060020a03938416600090815260026020908152604080832095909616825293909352929091209190915550565b6103de610843565b1515610422576040805160e560020a62461bcd0281526020600482015260126024820152600080516020610a02833981519152604482015290519081900360640190fd5b600160a060020a0392831660009081526002602090815260408083209490951682529290925291902055565b610456610843565b151561049a576040805160e560020a62461bcd0281526020600482015260126024820152600080516020610a02833981519152604482015290519081900360640190fd5b600160a060020a0382166000908152600160205260409020546104c3908263ffffffff61095416565b600160a060020a0390921660009081526001602052604090209190915550565b6104eb610843565b151561052f576040805160e560020a62461bcd0281526020600482015260126024820152600080516020610a02833981519152604482015290519081900360640190fd5b600160a060020a038084166000908152600260209081526040808320938616835292905220546103a5908263ffffffff61096d16565b61056d610799565b151561057857600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600081600160a060020a0381161515610632576040805160e560020a62461bcd02815260206004820152601b60248201527f45787065637465642061206e6f6e2d7a65726f20616464726573730000000000604482015290519081900360640190fd5b61063a610843565b806106485750610648610799565b151561069e576040805160e560020a62461bcd02815260206004820152601b60248201527f4973206e6f7420696d706c656d656e746f72206f72206f776e65720000000000604482015290519081900360640190fd5b600454600160a060020a038481169116141561072a576040805160e560020a62461bcd02815260206004820152602f60248201527f43616e6e6f74207472616e7366657220746f2073616d6520696d706c656d656e60448201527f746f72206173206578697374696e670000000000000000000000000000000000606482015290519081900360840190fd5b60048054600160a060020a0385811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116935083907f385a1f149ec7287fc5dfa9518eac63290878f4dcee968f0b75fd0931360b272290600090a3505050565b600054600160a060020a031690565b600054600160a060020a0316331490565b60035490565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6107e3610843565b1515610827576040805160e560020a62461bcd0281526020600482015260126024820152600080516020610a02833981519152604482015290519081900360640190fd5b600160a060020a03909116600090815260016020526040902055565b600454600160a060020a0316331490565b61085c610799565b151561086757600080fd5b61087081610984565b50565b61087b610843565b15156108bf576040805160e560020a62461bcd0281526020600482015260126024820152600080516020610a02833981519152604482015290519081900360640190fd5b600355565b600160a060020a031660009081526001602052604090205490565b6108e7610843565b151561092b576040805160e560020a62461bcd0281526020600482015260126024820152600080516020610a02833981519152604482015290519081900360640190fd5b600160a060020a0382166000908152600160205260409020546104c3908263ffffffff61096d16565b60008282018381101561096657600080fd5b9392505050565b6000808383111561097d57600080fd5b5050900390565b600160a060020a038116151561099957600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556004973206e6f7420696d706c656d656e746f720000000000000000000000000000a165627a7a723058201e438fd2c48222a90e73a06e76b9d5a1b28c95683278a0b4b340a3fa4a5a5aba00298be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e00000000000000000000000001e65feadd70c2dbffc91c8ec0e282fcf3e4783cb0000000000000000000000007d2bebd6e41b05384f0a8eb8ff228daac6f39c96",
  "constructorArguments": "0000000000000000000000001e65feadd70c2dbffc91c8ec0e282fcf3e4783cb0000000000000000000000007d2bebd6e41b05384f0a8eb8ff228daac6f39c96"
}