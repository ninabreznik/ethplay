{
  "address": "0xea2884e322a003ea9ccf5fc90da09094afc665a2",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "AutoWallet",
  "compilerVersion": "v0.4.15+commit.bbb8e64f",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-14\n*/\n\npragma solidity ^0.4.15;\n\ncontract owned {\n    function owned() public { owner = msg.sender; }\n    address public owner;\n\n    // This contract only defines a modifier but does not use\n    // it - it will be used in derived contracts.\n    // The function body is inserted where the special symbol\n    // \"_;\" in the definition of a modifier appears.\n    // This means that if the owner calls this function, the\n    // function is executed and otherwise, an exception is\n    // thrown.\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n}\n\ncontract ERC20 {\n    function balanceOf(address _owner) public constant returns (uint balance);\n    function transfer(address _to, uint _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success);\n    function approve(address _spender, uint _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public constant returns (uint remaining);\n    event Transfer(address indexed _from, address indexed _to, uint _value);\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\n}\n\n/// @title Interface for contracts conforming to ERC-721: Non-Fungible Tokens\n/// @author Dieter Shirley <[emailÂ protected]> (https://github.com/dete)\ncontract ERC721 {\n    // Required methods\n    function totalSupply() public returns (uint256 total);\n    function balanceOf(address _owner) public returns (uint256 balance);\n    function ownerOf(uint256 _tokenId) external returns (address owner);\n    function approve(address _to, uint256 _tokenId) external;\n    function transfer(address _to, uint256 _tokenId) external;\n    function transferFrom(address _from, address _to, uint256 _tokenId) external;\n\n    // Events\n    event Transfer(address from, address to, uint256 tokenId);\n    event Approval(address owner, address approved, uint256 tokenId);\n\n    // Optional\n    // function name() public view returns (string name);\n    // function symbol() public view returns (string symbol);\n    // function tokensOfOwner(address _owner) external view returns (uint256[] tokenIds);\n    // function tokenMetadata(uint256 _tokenId, string _preferredTransport) public view returns (string infoUrl);\n\n    // ERC-165 Compatibility (https://github.com/ethereum/EIPs/issues/165)\n    function supportsInterface(bytes4 _interfaceID) external returns (bool);\n}\n\ncontract AutoWallet is owned {\n    function changeOwner(address _newOwner) external onlyOwner {\n        owner = _newOwner;\n    }\n    \n    function () external payable {\n        // this is the fallback function; it is called whenever the contract receives ether\n        // forward that ether onto the contract owner immediately\n        owner.transfer(msg.value);\n        // and emit the EtherReceived event in case anyone is watching it\n        EtherReceived(msg.sender, msg.value);\n    }\n    \n    function sweep() external returns (bool success) {\n        // this can be called by anyone (who wants to pay for gas), but that's safe because it will only sweep\n        // funds to the owner's account. it sweeps the entire ether balance\n        require(this.balance > 0);\n        return owner.send(this.balance);\n    }\n    \n    function transferToken(address _tokenContractAddress, address _to, uint256 _amount) external onlyOwner returns (bool success) {\n        // this can only be called by the owner. it sends some amount of an ERC-20 token to some address\n        ERC20 token = ERC20(_tokenContractAddress);\n        return token.transfer(_to, _amount);\n    }\n    \n    function sweepToken(address _tokenContractAddress) external returns (bool success) {\n        // like sweep(), this can be called by anyone. it sweeps the full balance of an ERC-20 token to the owner's account\n        ERC20 token = ERC20(_tokenContractAddress);\n        uint bal = token.balanceOf(this);\n        require(bal > 0);\n        return token.transfer(owner, bal);\n    }\n    \n    function transferTokenFrom(address _tokenContractAddress, address _from, address _to, uint256 _amount) external onlyOwner returns (bool success) {\n        ERC20 token = ERC20(_tokenContractAddress);\n        return token.transferFrom(_from, _to, _amount);\n    }\n    \n    function approveTokenTransfer(address _tokenContractAddress, address _spender, uint256 _amount) external onlyOwner returns (bool success) {\n        ERC20 token = ERC20(_tokenContractAddress);\n        return token.approve(_spender, _amount);\n    }\n    \n    function transferNonFungibleToken(address _tokenContractAddress, address _to, uint256 _tokenId) external onlyOwner {\n        // for cryptokitties etc\n        ERC721 token = ERC721(_tokenContractAddress);\n        token.transfer(_to, _tokenId);\n    }\n    \n    function transferNonFungibleTokenFrom(address _tokenContractAddress, address _from, address _to, uint256 _tokenId) external onlyOwner {\n        ERC721 token = ERC721(_tokenContractAddress);\n        token.transferFrom(_from, _to, _tokenId);\n    }\n    \n    function transferNonFungibleTokenMulti(address _tokenContractAddress, address _to, uint256[] _tokenIds) external onlyOwner {\n        ERC721 token = ERC721(_tokenContractAddress);\n        for (uint i = 0; i < _tokenIds.length; i++) {\n            token.transfer(_to, _tokenIds[i]);\n        }\n    }\n    \n    event EtherReceived(address _sender, uint256 _value);\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sweep\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferNonFungibleTokenFrom\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approveTokenTransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferNonFungibleToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"transferNonFungibleTokenMulti\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferTokenFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"EtherReceived\",\"type\":\"event\"}]",
  "bytecode": "60606040525b60008054600160a060020a03191633600160a060020a03161790555b5b6108ae806100316000396000f300606060405236156100885763ffffffff60e060020a6000350416631be19560811461010457806335faa41614610137578063486b03c21461015e57806352a23bbb1461018e5780636bbe0bab146101ca57806382b5b8ab146101f45780638da5cb5b14610229578063a6f9dae114610258578063e599490514610279578063f5537ede146102bb575b5b600054600160a060020a03163480156108fc0290604051600060405180830381858888f1935050505015156100bd57600080fd5b7f1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b3334604051600160a060020a03909216825260208201526040908101905180910390a15b005b341561010f57600080fd5b610123600160a060020a03600435166102f7565b604051901515815260200160405180910390f35b341561014257600080fd5b610123610404565b604051901515815260200160405180910390f35b341561016957600080fd5b610102600160a060020a0360043581169060243581169060443516606435610450565b005b341561019957600080fd5b610123600160a060020a03600435811690602435166044356104ec565b604051901515815260200160405180910390f35b34156101d557600080fd5b610102600160a060020a036004358116906024351660443561058f565b005b34156101ff57600080fd5b610102600160a060020a0360048035821691602480359091169160443591820191013561061d565b005b341561023457600080fd5b61023c6106d7565b604051600160a060020a03909116815260200160405180910390f35b341561026357600080fd5b610102600160a060020a03600435166106e6565b005b341561028457600080fd5b610123600160a060020a036004358116906024358116906044351660643561072e565b604051901515815260200160405180910390f35b34156102c657600080fd5b610123600160a060020a03600435811690602435166044356107df565b604051901515815260200160405180910390f35b60008181600160a060020a0382166370a0823130836040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561035157600080fd5b6102c65a03f1151561036257600080fd5b50505060405180519150506000811161037a57600080fd5b60008054600160a060020a038085169263a9059cbb929091169084906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156103e057600080fd5b6102c65a03f115156103f157600080fd5b50505060405180519350505b5050919050565b6000600160a060020a0330163181901161041d57600080fd5b600054600160a060020a039081169030163180156108fc0290604051600060405180830381858888f19450505050505b90565b6000805433600160a060020a0390811691161461046c57600080fd5b5083600160a060020a0381166323b872dd85858560405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401600060405180830381600087803b15156104cf57600080fd5b6102c65a03f115156104e057600080fd5b5050505b5b5050505050565b60008054819033600160a060020a0390811691161461050a57600080fd5b5083600160a060020a03811663095ea7b3858560006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561056957600080fd5b6102c65a03f1151561057a57600080fd5b50505060405180519250505b5b509392505050565b6000805433600160a060020a039081169116146105ab57600080fd5b5082600160a060020a03811663a9059cbb848460405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b151561060157600080fd5b6102c65a03f1151561061257600080fd5b5050505b5b50505050565b60008054819033600160a060020a0390811691161461063b57600080fd5b5084905060005b828110156106cd57600160a060020a03821663a9059cbb8686868581811061066657fe5b9050602002013560405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b15156106b057600080fd5b6102c65a03f115156106c157600080fd5b5050505b600101610642565b5b5b505050505050565b600054600160a060020a031681565b60005433600160a060020a0390811691161461070157600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b60008054819033600160a060020a0390811691161461074c57600080fd5b5084600160a060020a0381166323b872dd86868660006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b15156107b857600080fd5b6102c65a03f115156107c957600080fd5b50505060405180519250505b5b50949350505050565b60008054819033600160a060020a039081169116146107fd57600080fd5b5083600160a060020a03811663a9059cbb858560006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561056957600080fd5b6102c65a03f1151561057a57600080fd5b50505060405180519250505b5b5093925050505600a165627a7a72305820c52f8630959cad38ee2df0e96665886478135e1ac06e855cdebb7004c9aa7bae0029"
}