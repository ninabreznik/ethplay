{
  "address": "0x92b3be4b8ca3b4faaaf9d08ab9a8329465c1bdcc",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Team",
  "compilerVersion": "v0.5.2+commit.1df8f40c",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-14\n*/\n\npragma solidity ^0.5.0;\n\n\n/**\n * @title Team Contract\n * @dev http://www.puzzlebid.com/\n * @author PuzzleBID Game Team \n * @dev Simon<[emailÂ protected]>\n */\ncontract Team {\n\n    address public owner; \n   \n    struct Admin {\n        bool isAdmin; \n        bool isDev;\n        bytes32 name; \n    }\n\n    mapping (address => Admin) admins;\n\n    constructor(address _owner) public {\n        owner = _owner;\n    }\n\n    event OnAddAdmin(\n        address indexed _address, \n        bool _isAdmin, \n        bool _isDev, \n        bytes32 _name\n    );\n    event OnRemoveAdmin(address indexed _address);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function addAdmin(address _address, bool _isAdmin, bool _isDev, bytes32 _name) external onlyOwner() {\n        admins[_address] = Admin(_isAdmin, _isDev, _name);        \n        emit OnAddAdmin(_address, _isAdmin, _isDev, _name);\n    }\n\n    function removeAdmin(address _address) external onlyOwner() {\n        delete admins[_address];        \n        emit OnRemoveAdmin(_address);\n    }\n\n    function isOwner() external view returns (bool) {\n        return owner == msg.sender;\n    }\n\n    function isAdmin(address _sender) external view returns (bool) {\n        return admins[_sender].isAdmin;\n    }\n\n    function isDev(address _sender) external view returns (bool) {\n        return admins[_sender].isDev;\n    }\n\n}",
  "bytecode": "608060405234801561001057600080fd5b506040516020806106c38339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610632806100916000396000f3fe608060405234801561001057600080fd5b506004361061007f576000357c0100000000000000000000000000000000000000000000000000000000900480630c3f64bf146100845780631785f53c146100e057806324d7806c146101245780638da5cb5b146101805780638f32d59b146101ca578063c3afa5fb146101ec575b600080fd5b6100c66004803603602081101561009a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610252565b604051808215151515815260200191505060405180910390f35b610122600480360360208110156100f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ab565b005b6101666004803603602081101561013a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103be565b604051808215151515815260200191505060405180910390f35b610188610417565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101d261043c565b604051808215151515815260200191505060405180910390f35b6102506004803603608081101561020257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919080351515906020019092919080359060200190929190505050610493565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561030657600080fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a81549060ff0219169055600182016000905550508073ffffffffffffffffffffffffffffffffffffffff167fc840a33db06dce05a25def338228eaba7dc58cd00265b06f267310777ec044f260405160405180910390a250565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104ee57600080fd5b6060604051908101604052808415158152602001831515815260200182815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff021916908315150217905550604082015181600101559050508373ffffffffffffffffffffffffffffffffffffffff167fffa831c283573607352488de6cb6de8c8a4ff7841e53d978e8051a61d2762a3f848484604051808415151515815260200183151515158152602001828152602001935050505060405180910390a25050505056fea165627a7a723058204b13a743020a9a414c44283a2b8dcef40e6093af68dfbeb6c3b35dabe790c3970029000000000000000000000000e19379b535a395ef4e05459ec19e5371e16689c6",
  "constructorArguments": "000000000000000000000000e19379b535a395ef4e05459ec19e5371e16689c6"
}