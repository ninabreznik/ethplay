{
  "address": "0x3a306a399085f3460bbcb5b77015ab33806a10d5",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "InstaDApp",
  "contractName": "InstaMaker",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-01\n*/\n\npragma solidity 0.4.24;\n\n\nlibrary SafeMath {\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"Assertion Failed\");\n        return c;\n    }\n    \n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"Assertion Failed\");\n        uint256 c = a / b;\n        return c;\n    }\n\n}\n\ninterface IERC20 {\n    function balanceOf(address who) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\ninterface AddressRegistry {\n    function getAddr(string name) external view returns(address);\n}\n\ninterface MakerCDP {\n    function open() external returns (bytes32 cup);\n    function join(uint wad) external; // Join PETH\n    function exit(uint wad) external; // Exit PETH\n    function give(bytes32 cup, address guy) external;\n    function lock(bytes32 cup, uint wad) external;\n    function free(bytes32 cup, uint wad) external;\n    function draw(bytes32 cup, uint wad) external;\n    function wipe(bytes32 cup, uint wad) external;\n    function per() external view returns (uint ray);\n    function lad(bytes32 cup) external view returns (address);\n}\n\ninterface PriceInterface {\n    function peek() external view returns (bytes32, bool);\n}\n\ninterface WETHFace {\n    function deposit() external payable;\n    function withdraw(uint wad) external;\n}\n\ninterface InstaKyber {\n    function executeTrade(\n        address src,\n        address dest,\n        uint srcAmt,\n        uint minConversionRate,\n        uint maxDestAmt\n    ) external payable returns (uint destAmt);\n\n    function getExpectedPrice(\n        address src,\n        address dest,\n        uint srcAmt\n    ) external view returns (uint, uint);\n}\n\n\ncontract Registry {\n\n    address public addressRegistry;\n    modifier onlyAdmin() {\n        require(\n            msg.sender == getAddress(\"admin\"),\n            \"Permission Denied\"\n        );\n        _;\n    }\n    \n    function getAddress(string name) internal view returns(address) {\n        AddressRegistry addrReg = AddressRegistry(addressRegistry);\n        return addrReg.getAddr(name);\n    }\n\n}\n\n\ncontract GlobalVar is Registry {\n\n    using SafeMath for uint;\n    using SafeMath for uint256;\n\n    bytes32 blankCDP = 0x0000000000000000000000000000000000000000000000000000000000000000;\n    address cdpAddr; // cups\n    mapping (address => bytes32) cdps; // borrower >>> CDP Bytes\n    bool public freezed;\n\n}\n\n\ncontract IssueLoan is GlobalVar {\n\n    event LockedETH(address borrower, uint lockETH, uint lockPETH, address lockedBy);\n    event LoanedDAI(address borrower, uint loanDAI, address payTo);\n    event NewCDP(address borrower, bytes32 cdpBytes);\n\n    function pethPEReth(uint ethNum) public view returns (uint rPETH) {\n        MakerCDP loanMaster = MakerCDP(cdpAddr);\n        rPETH = (ethNum.mul(10 ** 27)).div(loanMaster.per());\n    }\n\n    function borrow(uint daiDraw, address beneficiary) public payable {\n        if (msg.value > 0) {lockETH(msg.sender);}\n        if (daiDraw > 0) {drawDAI(daiDraw, beneficiary);}\n    }\n\n    function lockETH(address borrower) public payable {\n        MakerCDP loanMaster = MakerCDP(cdpAddr);\n        if (cdps[borrower] == blankCDP) {\n            require(msg.sender == borrower, \"Creating CDP for others is not permitted at the moment.\");\n            cdps[msg.sender] = loanMaster.open();\n            emit NewCDP(msg.sender, cdps[msg.sender]);\n        }\n        WETHFace wethTkn = WETHFace(getAddress(\"weth\"));\n        wethTkn.deposit.value(msg.value)(); // ETH to WETH\n        uint pethToLock = pethPEReth(msg.value);\n        loanMaster.join(pethToLock); // WETH to PETH\n        loanMaster.lock(cdps[borrower], pethToLock); // PETH to CDP\n        emit LockedETH(\n            borrower, msg.value, pethToLock, msg.sender\n        );\n    }\n\n    function drawDAI(uint daiDraw, address beneficiary) public {\n        require(!freezed, \"Operation Disabled\");\n        MakerCDP loanMaster = MakerCDP(cdpAddr);\n        loanMaster.draw(cdps[msg.sender], daiDraw);\n        IERC20 daiTkn = IERC20(getAddress(\"dai\"));\n        address payTo = msg.sender;\n        if (payTo != address(0)) {\n            payTo = beneficiary;\n        }\n        daiTkn.transfer(payTo, daiDraw);\n        emit LoanedDAI(msg.sender, daiDraw, payTo);\n    }\n\n}\n\n\ncontract RepayLoan is IssueLoan {\n\n    event WipedDAI(address borrower, uint daiWipe, uint mkrCharged, address wipedBy);\n    event UnlockedETH(address borrower, uint ethFree);\n\n    function repay(uint daiWipe, uint ethFree) public payable {\n        if (daiWipe > 0) {wipeDAI(daiWipe, msg.sender);}\n        if (ethFree > 0) {unlockETH(ethFree);}\n    }\n\n    function wipeDAI(uint daiWipe, address borrower) public payable {\n        address dai = getAddress(\"dai\");\n        address mkr = getAddress(\"mkr\");\n        address eth = getAddress(\"eth\");\n\n        IERC20 daiTkn = IERC20(dai);\n        IERC20 mkrTkn = IERC20(mkr);\n\n        uint contractMKR = mkrTkn.balanceOf(address(this)); // contract MKR balance before wiping\n        daiTkn.transferFrom(msg.sender, address(this), daiWipe); // get DAI to pay the debt\n        MakerCDP loanMaster = MakerCDP(cdpAddr);\n        loanMaster.wipe(cdps[borrower], daiWipe); // wipe DAI\n        uint mkrCharged = contractMKR - mkrTkn.balanceOf(address(this)); // MKR fee = before wiping bal - after wiping bal\n\n        // claiming paid MKR back\n        if (msg.value > 0) { // Interacting with Kyber to swap ETH with MKR\n            swapETHMKR(\n                eth, mkr, mkrCharged, msg.value\n            );\n        } else { // take MKR directly from address\n            mkrTkn.transferFrom(msg.sender, address(this), mkrCharged); // user paying MKR fees\n        }\n\n        emit WipedDAI(\n            borrower, daiWipe, mkrCharged, msg.sender\n        );\n    }\n\n    function unlockETH(uint ethFree) public {\n        require(!freezed, \"Operation Disabled\");\n        uint pethToUnlock = pethPEReth(ethFree);\n        MakerCDP loanMaster = MakerCDP(cdpAddr);\n        loanMaster.free(cdps[msg.sender], pethToUnlock); // CDP to PETH\n        loanMaster.exit(pethToUnlock); // PETH to WETH\n        WETHFace wethTkn = WETHFace(getAddress(\"weth\"));\n        wethTkn.withdraw(ethFree); // WETH to ETH\n        msg.sender.transfer(ethFree);\n        emit UnlockedETH(msg.sender, ethFree);\n    }\n\n    function swapETHMKR(\n        address eth,\n        address mkr,\n        uint mkrCharged,\n        uint ethQty\n    ) internal \n    {\n        InstaKyber instak = InstaKyber(getAddress(\"InstaKyber\"));\n        uint minRate;\n        (, minRate) = instak.getExpectedPrice(eth, mkr, ethQty);\n        uint mkrBought = instak.executeTrade.value(ethQty)(\n            eth, mkr, ethQty, minRate, mkrCharged\n        );\n        require(mkrCharged == mkrBought, \"ETH not sufficient to cover the MKR fees.\");\n        if (address(this).balance > 0) {\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n\n}\n\n\ncontract BorrowTasks is RepayLoan {\n\n    event TranferCDP(bytes32 cdp, address owner, address nextOwner);\n    event CDPClaimed(bytes32 cdp, address owner);\n\n    function transferCDP(address nextOwner) public {\n        require(nextOwner != 0, \"Invalid Address.\");\n        MakerCDP loanMaster = MakerCDP(cdpAddr);\n        loanMaster.give(cdps[msg.sender], nextOwner);\n        cdps[msg.sender] = blankCDP;\n        emit TranferCDP(cdps[msg.sender], msg.sender, nextOwner);\n    }\n\n    function claimCDP(uint cdpNum) public {\n        bytes32 cdpBytes = bytes32(cdpNum);\n        MakerCDP loanMaster = MakerCDP(cdpAddr);\n        address cdpOwner = loanMaster.lad(cdpBytes);\n        require(cdps[cdpOwner] == blankCDP, \"More than 1 CDP is not allowed.\");\n        cdps[cdpOwner] = cdpBytes;\n        emit CDPClaimed(cdpBytes, msg.sender);\n    }\n\n    function getETHRate() public view returns (uint) {\n        PriceInterface ethRate = PriceInterface(getAddress(\"ethfeed\"));\n        bytes32 ethrate;\n        (ethrate, ) = ethRate.peek();\n        return uint(ethrate);\n    }\n\n    function getCDP(address borrower) public view returns (uint, bytes32) {\n        return (uint(cdps[borrower]), cdps[borrower]);\n    }\n\n    function approveERC20() public {\n        IERC20 wethTkn = IERC20(getAddress(\"weth\"));\n        wethTkn.approve(cdpAddr, 2**256 - 1);\n        IERC20 pethTkn = IERC20(getAddress(\"peth\"));\n        pethTkn.approve(cdpAddr, 2**256 - 1);\n        IERC20 mkrTkn = IERC20(getAddress(\"mkr\"));\n        mkrTkn.approve(cdpAddr, 2**256 - 1);\n        IERC20 daiTkn = IERC20(getAddress(\"dai\"));\n        daiTkn.approve(cdpAddr, 2**256 - 1);\n    }\n\n}\n\n\ncontract InstaMaker is BorrowTasks {\n\n    event MKRCollected(uint amount);\n\n    constructor(address rAddr) public {\n        addressRegistry = rAddr;\n        cdpAddr = getAddress(\"cdp\");\n        approveERC20();\n    }\n\n    function () public payable {}\n\n    function freeze(bool stop) public onlyAdmin {\n        freezed = stop;\n    }\n\n    // collecting MKR token kept as balance to pay fees\n    function collectMKR(uint amount) public onlyAdmin {\n        IERC20 mkrTkn = IERC20(getAddress(\"mkr\"));\n        mkrTkn.transfer(msg.sender, amount);\n        emit MKRCollected(amount);\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"ethNum\",\"type\":\"uint256\"}],\"name\":\"pethPEReth\",\"outputs\":[{\"name\":\"rPETH\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"daiWipe\",\"type\":\"uint256\"},{\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"wipeDAI\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"daiDraw\",\"type\":\"uint256\"},{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"daiDraw\",\"type\":\"uint256\"},{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"drawDAI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getETHRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"lockETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ethFree\",\"type\":\"uint256\"}],\"name\":\"unlockETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getCDP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"approveERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"stop\",\"type\":\"bool\"}],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"freezed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cdpNum\",\"type\":\"uint256\"}],\"name\":\"claimCDP\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nextOwner\",\"type\":\"address\"}],\"name\":\"transferCDP\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"daiWipe\",\"type\":\"uint256\"},{\"name\":\"ethFree\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectMKR\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"rAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MKRCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"cdp\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"nextOwner\",\"type\":\"address\"}],\"name\":\"TranferCDP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"cdp\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CDPClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"daiWipe\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"mkrCharged\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"wipedBy\",\"type\":\"address\"}],\"name\":\"WipedDAI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ethFree\",\"type\":\"uint256\"}],\"name\":\"UnlockedETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"lockETH\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lockPETH\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lockedBy\",\"type\":\"address\"}],\"name\":\"LockedETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"loanDAI\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"payTo\",\"type\":\"address\"}],\"name\":\"LoanedDAI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cdpBytes\",\"type\":\"bytes32\"}],\"name\":\"NewCDP\",\"type\":\"event\"}]",
  "bytecode": "608060405260006001026001906000191690553480156200001f57600080fd5b50604051602080620037aa83398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000d26040805190810160405280600381526020017f636470000000000000000000000000000000000000000000000000000000000081525062000132640100000000026401000000009004565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200012b62000276640100000000026401000000009004565b5062000856565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663d502db97846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620001e3578082015181840152602081019050620001c6565b50505050905090810190601f168015620002115780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156200023157600080fd5b505af115801562000246573d6000803e3d6000fd5b505050506040513d60208110156200025d57600080fd5b8101908080519060200190929190505050915050919050565b600080600080620002cb6040805190810160405280600481526020017f776574680000000000000000000000000000000000000000000000000000000081525062000132640100000000026401000000009004565b93508373ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015620003b357600080fd5b505af1158015620003c8573d6000803e3d6000fd5b505050506040513d6020811015620003df57600080fd5b810190808051906020019092919050505050620004406040805190810160405280600481526020017f706574680000000000000000000000000000000000000000000000000000000081525062000132640100000000026401000000009004565b92508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156200052857600080fd5b505af11580156200053d573d6000803e3d6000fd5b505050506040513d60208110156200055457600080fd5b810190808051906020019092919050505050620005b56040805190810160405280600381526020017f6d6b72000000000000000000000000000000000000000000000000000000000081525062000132640100000000026401000000009004565b91508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156200069d57600080fd5b505af1158015620006b2573d6000803e3d6000fd5b505050506040513d6020811015620006c957600080fd5b8101908080519060200190929190505050506200072a6040805190810160405280600381526020017f646169000000000000000000000000000000000000000000000000000000000081525062000132640100000000026401000000009004565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156200081257600080fd5b505af115801562000827573d6000803e3d6000fd5b505050506040513d60208110156200083e57600080fd5b81019080805190602001909291905050505050505050565b612f4480620008666000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631cabe3ef146100e85780632b3e27eb146101295780634b3fd148146101695780634b6bb6ae146101a95780634f97ba49146101f657806384a73e53146102215780638d445bd01461025757806398bdcb111461028457806399035895146102ea578063b5bf15e514610301578063b7540d9f14610330578063b9ca3bf61461035f578063d583b2061461038c578063d8aed145146103cf578063f2fec913146103f9578063f3ad65f414610426575b005b3480156100f457600080fd5b506101136004803603810190808035906020019092919050505061047d565b6040518082815260200191505060405180910390f35b61016760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061057c565b005b6101a760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bef565b005b3480156101b557600080fd5b506101f460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c1a565b005b34801561020257600080fd5b5061020b610fa1565b6040518082815260200191505060405180910390f35b610255600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061109f565b005b34801561026357600080fd5b506102826004803603810190808035906020019092919050505061164e565b005b34801561029057600080fd5b506102c5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119e4565b6040518083815260200182600019166000191681526020019250505060405180910390f35b3480156102f657600080fd5b506102ff611a74565b005b34801561030d57600080fd5b5061032e600480360381019080803515159060200190929190505050612004565b005b34801561033c57600080fd5b50610345612101565b604051808215151515815260200191505060405180910390f35b34801561036b57600080fd5b5061038a60048036038101908080359060200190929190505050612114565b005b34801561039857600080fd5b506103cd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612379565b005b6103f76004803603810190808035906020019092919080359060200190929190505050612664565b005b34801561040557600080fd5b506104246004803603810190808035906020019092919050505061268f565b005b34801561043257600080fd5b5061043b6128cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506105748173ffffffffffffffffffffffffffffffffffffffff16637ec9c3b86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561050c57600080fd5b505af1158015610520573d6000803e3d6000fd5b505050506040513d602081101561053657600080fd5b81019080805190602001909291905050506105666b033b2e3c9fd0803ce8000000866128f090919063ffffffff16565b61299790919063ffffffff16565b915050919050565b6000806000806000806000806105c66040805190810160405280600381526020017f6461690000000000000000000000000000000000000000000000000000000000815250612a2a565b97506106066040805190810160405280600381526020017f6d6b720000000000000000000000000000000000000000000000000000000000815250612a2a565b96506106466040805190810160405280600381526020017f6574680000000000000000000000000000000000000000000000000000000000815250612a2a565b95508794508693508373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156106e957600080fd5b505af11580156106fd573d6000803e3d6000fd5b505050506040513d602081101561071357600080fd5b810190808051906020019092919050505092508473ffffffffffffffffffffffffffffffffffffffff166323b872dd33308d6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156107fd57600080fd5b505af1158015610811573d6000803e3d6000fd5b505050506040513d602081101561082757600080fd5b810190808051906020019092919050505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff166373b38101600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548c6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050600060405180830381600087803b15801561091c57600080fd5b505af1158015610930573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156109cf57600080fd5b505af11580156109e3573d6000803e3d6000fd5b505050506040513d60208110156109f957600080fd5b8101908080519060200190929190505050830390506000341115610a2857610a2386888334612b68565b610b3c565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610aff57600080fd5b505af1158015610b13573d6000803e3d6000fd5b505050506040513d6020811015610b2957600080fd5b8101908080519060200190929190505050505b7fcc6878355865ed21824b44591ff4007019184a8a745b0740f85423266f9a837e898b8333604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390a150505050505050505050565b6000341115610c0257610c013361109f565b5b6000821115610c1657610c158282610c1a565b5b5050565b6000806000600460009054906101000a900460ff16151515610ca4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4f7065726174696f6e2044697361626c6564000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692508273ffffffffffffffffffffffffffffffffffffffff1663440f19ba600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054876040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050600060405180830381600087803b158015610d8757600080fd5b505af1158015610d9b573d6000803e3d6000fd5b50505050610ddd6040805190810160405280600381526020017f6461690000000000000000000000000000000000000000000000000000000000815250612a2a565b9150339050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515610e1c578390505b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ebf57600080fd5b505af1158015610ed3573d6000803e3d6000fd5b505050506040513d6020811015610ee957600080fd5b8101908080519060200190929190505050507f4e393322c078a1291e528e1e8719f9bc6d6845942cb87e9b2c6c1969f71db371338683604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15050505050565b6000806000610fe46040805190810160405280600781526020017f6574686665656400000000000000000000000000000000000000000000000000815250612a2a565b91508173ffffffffffffffffffffffffffffffffffffffff166359e02dd76040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016040805180830381600087803b15801561104957600080fd5b505af115801561105d573d6000803e3d6000fd5b505050506040513d604081101561107357600080fd5b810190808051906020019092919080519060200190929190505050508091505080600190049250505090565b6000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925060015460001916600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460001916141561137c578373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001807f4372656174696e672043445020666f72206f7468657273206973206e6f74207081526020017f65726d697474656420617420746865206d6f6d656e742e00000000000000000081525060400191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663fcfff16f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561124757600080fd5b505af115801561125b573d6000803e3d6000fd5b505050506040513d602081101561127157600080fd5b8101908080519060200190929190505050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600019169055507faacf4dabf7a1318b83a988c9264a97b311ea7cef315258fd7cdab83ef8b8dedb33600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182600019166000191681526020019250505060405180910390a15b6113ba6040805190810160405280600481526020017f7765746800000000000000000000000000000000000000000000000000000000815250612a2a565b91508173ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016000604051808303818588803b15801561142057600080fd5b505af1158015611434573d6000803e3d6000fd5b50505050506114423461047d565b90508273ffffffffffffffffffffffffffffffffffffffff1663049878f3826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b1580156114b357600080fd5b505af11580156114c7573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663b3b77a51600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050600060405180830381600087803b15801561158957600080fd5b505af115801561159d573d6000803e3d6000fd5b505050507fae07a3d5c5e33182092cb26d77cc02764342b0772a21260cff9dfdf47e1dad1984348333604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390a150505050565b6000806000600460009054906101000a900460ff161515156116d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4f7065726174696f6e2044697361626c6564000000000000000000000000000081525060200191505060405180910390fd5b6116e18461047d565b9250600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff1663a5cd184e600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054856040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050600060405180830381600087803b1580156117c657600080fd5b505af11580156117da573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16637f8661a1846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561184d57600080fd5b505af1158015611861573d6000803e3d6000fd5b505050506118a36040805190810160405280600481526020017f7765746800000000000000000000000000000000000000000000000000000000815250612a2a565b90508073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d856040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561191457600080fd5b505af1158015611928573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f19350505050158015611972573d6000803e3d6000fd5b507f535dbd84e6041f33aaf78db176dd666c6b5d00094b3681ac68ea55ec9d0375b43385604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150505050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460019004600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491509150915091565b600080600080611ab86040805190810160405280600481526020017f7765746800000000000000000000000000000000000000000000000000000000815250612a2a565b93508373ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611b9f57600080fd5b505af1158015611bb3573d6000803e3d6000fd5b505050506040513d6020811015611bc957600080fd5b810190808051906020019092919050505050611c196040805190810160405280600481526020017f7065746800000000000000000000000000000000000000000000000000000000815250612a2a565b92508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611d0057600080fd5b505af1158015611d14573d6000803e3d6000fd5b505050506040513d6020811015611d2a57600080fd5b810190808051906020019092919050505050611d7a6040805190810160405280600381526020017f6d6b720000000000000000000000000000000000000000000000000000000000815250612a2a565b91508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611e6157600080fd5b505af1158015611e75573d6000803e3d6000fd5b505050506040513d6020811015611e8b57600080fd5b810190808051906020019092919050505050611edb6040805190810160405280600381526020017f6461690000000000000000000000000000000000000000000000000000000000815250612a2a565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611fc257600080fd5b505af1158015611fd6573d6000803e3d6000fd5b505050506040513d6020811015611fec57600080fd5b81019080805190602001909291905050505050505050565b6120426040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250612a2a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f5065726d697373696f6e2044656e69656400000000000000000000000000000081525060200191505060405180910390fd5b80600460006101000a81548160ff02191690831515021790555050565b600460009054906101000a900460ff1681565b6000806000836001029250600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff1663de5f5517846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b1580156121bb57600080fd5b505af11580156121cf573d6000803e3d6000fd5b505050506040513d60208110156121e557600080fd5b8101908080519060200190929190505050905060015460001916600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600019161415156122b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4d6f7265207468616e203120434450206973206e6f7420616c6c6f7765642e0081525060200191505060405180910390fd5b82600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600019169055507f31f5dffe72808492cb2559d1f67508a7bb36622423aaac12f04b773d58bb3ffd83336040518083600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1614151515612409576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420416464726573732e0000000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663baa8529c600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561251857600080fd5b505af115801561252c573d6000803e3d6000fd5b50505050600154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081600019169055507f54e847b75f10cd7e742b78312fe0079d5a973d8a9b9070bb0515a8390160bd51600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205433846040518084600019166000191681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15050565b600082111561267857612677823361057c565b5b600081111561268b5761268a8161164e565b5b5050565b60006126cf6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250612a2a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612771576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f5065726d697373696f6e2044656e69656400000000000000000000000000000081525060200191505060405180910390fd5b6127af6040805190810160405280600381526020017f6d6b720000000000000000000000000000000000000000000000000000000000815250612a2a565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561285457600080fd5b505af1158015612868573d6000803e3d6000fd5b505050506040513d602081101561287e57600080fd5b8101908080519060200190929190505050507f499d4b63f3a203c58019a864fc2d9cfe72954952ed53a3e40999755432cd3566826040518082815260200191505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008414156129055760009150612990565b828402905082848281151561291657fe5b0414151561298c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f417373657274696f6e204661696c65640000000000000000000000000000000081525060200191505060405180910390fd5b8091505b5092915050565b600080600083111515612a12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f417373657274696f6e204661696c65640000000000000000000000000000000081525060200191505060405180910390fd5b8284811515612a1d57fe5b0490508091505092915050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663d502db97846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612ad9578082015181840152602081019050612abe565b50505050905090810190601f168015612b065780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015612b2557600080fd5b505af1158015612b39573d6000803e3d6000fd5b505050506040513d6020811015612b4f57600080fd5b8101908080519060200190929190505050915050919050565b6000806000612bab6040805190810160405280600a81526020017f496e7374614b7962657200000000000000000000000000000000000000000000815250612a2a565b92508273ffffffffffffffffffffffffffffffffffffffff166332ffe4428888876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200193505050506040805180830381600087803b158015612c8357600080fd5b505af1158015612c97573d6000803e3d6000fd5b505050506040513d6040811015612cad57600080fd5b8101908080519060200190929190805190602001909291905050509050809250508273ffffffffffffffffffffffffffffffffffffffff16633e23ee7e85898988878b6040518763ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001955050505050506020604051808303818588803b158015612db557600080fd5b505af1158015612dc9573d6000803e3d6000fd5b50505050506040513d6020811015612de057600080fd5b810190808051906020019092919050505090508085141515612e90576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f455448206e6f742073756666696369656e7420746f20636f766572207468652081526020017f4d4b5220666565732e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff16311115612f0f573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015612f0d573d6000803e3d6000fd5b505b505050505050505600a165627a7a72305820894e3ac264276d62f18446dc84c3416b626064df89bcb9a0d6fcd5d4d5c0072b0029000000000000000000000000e16d035b8e76303237b9660b3c9c94c1a86aab47",
  "constructorArguments": "000000000000000000000000e16d035b8e76303237b9660b3c9c94c1a86aab47"
}