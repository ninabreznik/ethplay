{
  "address": "0xcc74cb21eba98fda21da9a75ef0c1fa26c9b03c4",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "WEChainCommunity",
  "compilerVersion": "v0.4.20-nightly.2018.1.29+commit.a668b9de",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-31\n*/\n\npragma solidity ^0.4.17;\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b > 0);\n    uint256 c = a / b;\n    assert(a == b * c + a % b);\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\ncontract Ownable {\n  address public owner;\n\n\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    owner = newOwner;\n  }\n}\n\ncontract Migrations {\n  address public owner;\n  uint public last_completed_migration;\n\n  modifier restricted() {\n    if (msg.sender == owner) _;\n  }\n\n  function Migrations() public {\n    owner = msg.sender;\n  }\n\n  function setCompleted(uint completed) public restricted {\n    last_completed_migration = completed;\n  }\n\n  function upgrade(address new_address) public restricted {\n    Migrations upgraded = Migrations(new_address);\n    upgraded.setCompleted(last_completed_migration);\n  }\n}\n\ncontract ERC20Standard {\n\n\n    // total amount of tokens\n    function totalSupply() public constant returns (uint256) ;\n\n    /*\n     *  Events\n     */\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    /*\n     *  Public functions\n     */\n    function transfer(address _to, uint256 _value) public returns (bool);\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\n\n\n    function approve(address _spender, uint256 _value) public returns (bool);\n\n    function balanceOf(address _owner) public constant returns (uint256);\n\n    function allowance(address _owner, address _spender) public constant returns (uint256);\n}\n\ncontract ERC20StandardToken is ERC20Standard {\n    using SafeMath for uint256;\n\n    /*\n     *  Storage\n     */\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowances;\n\n\n    function transfer(address to, uint256 value) public returns (bool){\n        require(to !=address(0));\n\n        balances[msg.sender]=balances[msg.sender].sub(value);\n        balances[to] = balances[to].add(value);\n        Transfer(msg.sender,to,value);\n        return true;\n    }\n\n\n    function transferFrom(address from, address to, uint256 value) public returns (bool){\n        require(to != address(0));\n\n        var allowanceAmount = allowances[from][msg.sender];\n\n        balances[from] = balances[from].sub(value);\n        balances[to] = balances[to].add(value);\n        allowances[from][msg.sender] = allowanceAmount.sub(value);\n        Transfer(from, to, value);\n        return true;\n\n    }\n\n    function approve(address spender, uint256 value) public returns (bool){\n        require((value == 0) || (allowances[msg.sender][spender] == 0));\n        allowances[msg.sender][spender] = value;\n        Approval(msg.sender, spender, value);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public constant returns (uint256){\n        return allowances[owner][spender];\n    }\n\n\n    function balanceOf(address owner) public constant returns (uint256){\n        return balances[owner];\n    }\n}\n\ncontract WEChainCommunity is ERC20StandardToken, Ownable {\n\n    // token information\n    string public constant name = \"WEChainCommunity\";\n    string public constant symbol = \"WECC\";\n    uint256 public constant decimals = 18;\n    uint TotalTokenSupply=60*(10**8)* (10**decimals);\n\n     function totalSupply() public constant returns (uint256 ) {\n          return TotalTokenSupply;\n      }\n\n    /// transfer all tokens to holders\n    address public constant MAIN_HOLDER_ADDR=0xa8fbDB79680641D9f090e36131e2c7df6076aC0a;\n\n\n    function WEChainCommunity() public onlyOwner{\n        balances[MAIN_HOLDER_ADDR]+=TotalTokenSupply;\n        Transfer(0,MAIN_HOLDER_ADDR,TotalTokenSupply);\n      }\n}",
  "bytecode": "60606040526b1363156bbee3016d70000000600355341561001f57600080fd5b60028054600160a060020a03338116600160a060020a0319909216821792839055919091161461004e57600080fd5b60035473a8fbdb79680641d9f090e36131e2c7df6076ac0a600081815260208190527f7da20a8ed673301a36362cddbd51dd354342ff485ae08501d59b9310a935f61380548401905590917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060405190815260200160405180910390a361070f806100db6000396000f3006060604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461017e57806323b872dd146101a3578063313ce567146101cb57806370a08231146101de5780638da5cb5b146101fd57806395d89b411461022c578063a73ee3311461023f578063a9059cbb14610252578063dd62ed3e14610274578063f2fde38b14610299575b600080fd5b34156100c957600080fd5b6100d16102ba565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561010d5780820151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015357600080fd5b61016a600160a060020a03600435166024356102f1565b604051901515815260200160405180910390f35b341561018957600080fd5b610191610397565b60405190815260200160405180910390f35b34156101ae57600080fd5b61016a600160a060020a036004358116906024351660443561039d565b34156101d657600080fd5b6101916104c6565b34156101e957600080fd5b610191600160a060020a03600435166104cb565b341561020857600080fd5b6102106104e6565b604051600160a060020a03909116815260200160405180910390f35b341561023757600080fd5b6100d16104f5565b341561024a57600080fd5b61021061052c565b341561025d57600080fd5b61016a600160a060020a0360043516602435610544565b341561027f57600080fd5b610191600160a060020a0360043581169060243516610631565b34156102a457600080fd5b6102b8600160a060020a036004351661065c565b005b60408051908101604052601081527f5745436861696e436f6d6d756e69747900000000000000000000000000000000602082015281565b60008115806103235750600160a060020a03338116600090815260016020908152604080832093871683529290522054155b151561032e57600080fd5b600160a060020a03338116600081815260016020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60035490565b600080600160a060020a03841615156103b557600080fd5b50600160a060020a0380851660008181526001602090815260408083203390951683529381528382205492825281905291909120546103fa908463ffffffff6106bb16565b600160a060020a03808716600090815260208190526040808220939093559086168152205461042f908463ffffffff6106cd16565b600160a060020a038516600090815260208190526040902055610458818463ffffffff6106bb16565b600160a060020a03808716600081815260016020908152604080832033861684529091529081902093909355908616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3506001949350505050565b601281565b600160a060020a031660009081526020819052604090205490565b600254600160a060020a031681565b60408051908101604052600481527f5745434300000000000000000000000000000000000000000000000000000000602082015281565b73a8fbdb79680641d9f090e36131e2c7df6076ac0a81565b6000600160a060020a038316151561055b57600080fd5b600160a060020a033316600090815260208190526040902054610584908363ffffffff6106bb16565b600160a060020a0333811660009081526020819052604080822093909355908516815220546105b9908363ffffffff6106cd16565b60008085600160a060020a0316600160a060020a031681526020019081526020016000208190555082600160a060020a031633600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60025433600160a060020a0390811691161461067757600080fd5b600160a060020a038116151561068c57600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000828211156106c757fe5b50900390565b6000828201838110156106dc57fe5b93925050505600a165627a7a7230582072d7522e3ae7d7b59043ba60c2d73da002946a0376a87e60d698884bcb9f9df30029"
}