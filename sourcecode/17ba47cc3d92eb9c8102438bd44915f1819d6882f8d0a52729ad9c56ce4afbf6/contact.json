{
  "address": "0x37d404a072056eda0cd10cb714d35552329f8500",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Xrt Token",
  "contractName": "XRT",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-21\n*/\n\npragma solidity ^0.4.24;\ncontract ERC20 {\n  uint256 public totalSupply;\n  function balanceOf(address who) public view returns (uint256 _user);\n  function transfer(address to, uint256 value) public returns (bool success);\n  function allowance(address owner, address spender) public view returns (uint256 value);\n  function transferFrom(address from, address to, uint256 value) public returns (bool success);\n  function approve(address spender, uint256 value) public returns (bool success);\n\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\n  \n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint256 a, uint256 b) internal pure  returns (uint256) {\n    uint c = a + b;\n    assert(c>=a);\n    return c;\n  }\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n}\n\ncontract OnlyOwner {\n  address public owner;\n  address private controller;\n  event Controller(address _user);\n  /** \n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n    controller = owner;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner. \n   */\n  modifier isOwner {\n    require(msg.sender == owner);\n    _;\n  }\n  \n  /**\n   * @dev Throws if called by any account other than the controller. \n   */\n  modifier isController {\n    require(msg.sender == controller);\n    _;\n  }\n  \n  function replaceController(address _user) isController public returns(bool){\n    require(_user != address(0x0));\n    controller = _user;\n    emit Controller(controller);\n    return true;   \n  }\n\n}\n\ncontract StandardToken is ERC20{\n  using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n\n    event Minted(address receiver, uint256 amount);\n    \n    \n    function _transfer(address _from, address _to, uint256 _value) internal returns (bool success){\n      //prevent sending of tokens from genesis address or to self\n      require(_from != address(0) && _from != _to);\n      require(_to != address(0));\n      //subtract tokens from the sender on transfer\n      balances[_from] = balances[_from].safeSub(_value);\n      //add tokens to the receiver on reception\n      balances[_to] = balances[_to].safeAdd(_value);\n      return true;\n    }\n\n  function transfer(address _to, uint256 _value) public returns (bool success) \n  { \n    require(_value <= balances[msg.sender]);\n      _transfer(msg.sender,_to,_value);\n      emit Transfer(msg.sender, _to, _value);\n      return true;\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n      uint256 _allowance = allowed[_from][msg.sender];\n      //value must be less than allowed value\n      require(_value <= _allowance);\n      //balance of sender + token value transferred by sender must be greater than balance of sender\n      require(balances[_to] + _value > balances[_to]);\n      //call transfer function\n      _transfer(_from,_to,_value);\n      //subtract the amount allowed to the sender \n      allowed[_from][msg.sender] = _allowance.safeSub(_value);\n      //trigger Transfer event\n      emit Transfer(_from, _to, _value);\n      return true;\n    }\n\n    function balanceOf(address _owner) public constant returns (uint balance) {\n      return balances[_owner];\n    }\n\n    \n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    // To change the approve amount you first have to reduce the addresses`\n    //  allowance to zero by calling `approve(_spender,0)` if it is not\n    //  already 0 to mitigate the race condition described here:\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n\n\n}\n\ncontract XRT is StandardToken, OnlyOwner{\n  uint8 public constant decimals = 18;\n    uint256 private constant multiplier = 10**27;\n    string public constant name = \"XRT Token\";\n    string public constant symbol = \"XRT\";\n    string public version = \"X1.1\";\n    uint256 private maxSupply = multiplier;\n    uint256 public totalSupply = (50*maxSupply)/100;\n    uint256 private approvalCount =0;\n    uint256 public minApproval =2;\n    address public fundReceiver;\n    \n    constructor(address _takeBackAcc) public{\n        balances[msg.sender] = totalSupply;\n        fundReceiver = _takeBackAcc;\n    }\n    \n    function maximumToken() public view returns (uint){\n        return maxSupply;\n    }\n    \n    event Mint(address indexed to, uint256 amount);\n    event MintFinished();\n    \n  bool public mintingFinished = false;\n\n\n  modifier canMint() {\n    require(!mintingFinished);\n    require(totalSupply <= maxSupply);\n    _;\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(address _to, uint256 _amount) isOwner canMint public returns (bool) {\n      uint256 newAmount = _amount.safeMul(multiplier.safeDiv(100));\n      require(totalSupply <= maxSupply.safeSub(newAmount));\n      totalSupply = totalSupply.safeAdd(newAmount);\n    balances[_to] = balances[_to].safeAdd(newAmount);\n    emit Mint(_to, newAmount);\n    emit Transfer(address(0), _to, newAmount);\n    return true;\n  }\n\n  /**\n   * @dev Function to stop minting new tokens.\n   * @return True if the operation was successful.\n   */\n    function finishMinting() isOwner canMint public returns (bool) {\n      mintingFinished = true;\n      emit MintFinished();\n      return true;\n    }\n    \n    function setApprovalCount(uint _value) public isController {\n        approvalCount = _value;\n    }\n    \n    function setMinApprovalCount(uint _value) public isController returns (bool){\n        require(_value > 0);\n        minApproval = _value;\n        return true;\n    }\n    \n    function getApprovalCount() public view isController returns(uint){\n        return approvalCount;\n    }\n    \n    function getFundReceiver() public view isController returns(address){\n        return fundReceiver;\n    }\n    \n    function controllerApproval(address _from, uint256 _value) public isOwner returns (bool) {\n        require(minApproval <= approvalCount); \n        balances[_from] = balances[_from].safeSub(_value);\n      //add tokens to the receiver on reception\n      balances[fundReceiver] = balances[fundReceiver].safeAdd(_value);\n        emit Transfer(_from,fundReceiver, _value);\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"getApprovalCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"replaceController\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setApprovalCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMinApprovalCount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"controllerApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFundReceiver\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundReceiver\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_takeBackAcc\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"Controller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600460808190527f58312e310000000000000000000000000000000000000000000000000000000060a090815261003e91600591906100eb565b506b033b2e3c9fd0803ce80000006006556b019d971e4fe8401e7400000060075560006008556002600955600a805460a060020a60ff021916905534801561008557600080fd5b50604051602080610f2a83398101604090815290516003805433600160a060020a031991821681179283905560048054600160a060020a039485169084161790556007546000918252600160205294902093909355600a80549093169116179055610186565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012c57805160ff1916838001178555610159565b82800160010185558215610159579182015b8281111561015957825182559160200191906001019061013e565b50610165929150610169565b5090565b61018391905b80821115610165576000815560010161016f565b90565b610d95806101956000396000f3006080604052600436106101325763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630343d550811461013757806303ff90f61461015e57806305d2035b1461017357806306fdde031461019c578063095ea7b31461022657806318160ddd1461024a57806323b872dd1461025f578063313ce5671461028957806340c10f19146102b457806354fd4d50146102d8578063632fbda4146102ed57806370a082311461030e5780637d64bcb41461032f5780638da5cb5b1461034457806395d89b41146103755780639c54b91f1461038a578063a9059cbb146103a4578063b8d5b7f0146103c8578063c46a2925146103dd578063dc3a8372146103f5578063dd62ed3e14610419578063df25322d14610440578063fb4aa0a114610455575b600080fd5b34801561014357600080fd5b5061014c61046a565b60408051918252519081900360200190f35b34801561016a57600080fd5b5061014c61048b565b34801561017f57600080fd5b50610188610491565b604080519115158252519081900360200190f35b3480156101a857600080fd5b506101b16104b2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101eb5781810151838201526020016101d3565b50505050905090810190601f1680156102185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023257600080fd5b50610188600160a060020a03600435166024356104e9565b34801561025657600080fd5b5061014c61058b565b34801561026b57600080fd5b50610188600160a060020a0360043581169060243516604435610591565b34801561029557600080fd5b5061029e61065e565b6040805160ff9092168252519081900360200190f35b3480156102c057600080fd5b50610188600160a060020a0360043516602435610663565b3480156102e457600080fd5b506101b16107d5565b3480156102f957600080fd5b50610188600160a060020a0360043516610863565b34801561031a57600080fd5b5061014c600160a060020a03600435166108fe565b34801561033b57600080fd5b50610188610919565b34801561035057600080fd5b506103596109d0565b60408051600160a060020a039092168252519081900360200190f35b34801561038157600080fd5b506101b16109df565b34801561039657600080fd5b506103a2600435610a16565b005b3480156103b057600080fd5b50610188600160a060020a0360043516602435610a32565b3480156103d457600080fd5b5061014c610a91565b3480156103e957600080fd5b50610188600435610a97565b34801561040157600080fd5b50610188600160a060020a0360043516602435610ac7565b34801561042557600080fd5b5061014c600160a060020a0360043581169060243516610ba9565b34801561044c57600080fd5b50610359610bd4565b34801561046157600080fd5b50610359610bfe565b600454600090600160a060020a0316331461048457600080fd5b5060085490565b60095481565b600a5474010000000000000000000000000000000000000000900460ff1681565b60408051808201909152600981527f58525420546f6b656e0000000000000000000000000000000000000000000000602082015281565b60008115806105195750336000908152600260209081526040808320600160a060020a0387168452909152902054155b151561052457600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60075481565b600160a060020a0383166000908152600260209081526040808320338452909152812054808311156105c257600080fd5b600160a060020a038416600090815260016020526040902054838101116105e857600080fd5b6105f3858585610c0d565b50610604818463ffffffff610cdf16565b600160a060020a0380871660008181526002602090815260408083203384528252918290209490945580518781529051928816939192600080516020610d4a833981519152929181900390910190a3506001949350505050565b601281565b6003546000908190600160a060020a0316331461067f57600080fd5b600a5474010000000000000000000000000000000000000000900460ff16156106a757600080fd5b60065460075411156106b857600080fd5b6106e56106d86b033b2e3c9fd0803ce8000000606463ffffffff610cf116565b849063ffffffff610d0816565b6006549091506106fb908263ffffffff610cdf16565b600754111561070957600080fd5b60075461071c908263ffffffff610d3a16565b600755600160a060020a038416600090815260016020526040902054610748908263ffffffff610d3a16565b600160a060020a038516600081815260016020908152604091829020939093558051848152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518281529051600160a060020a03861691600091600080516020610d4a8339815191529181900360200190a3600191505b5092915050565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561085b5780601f106108305761010080835404028352916020019161085b565b820191906000526020600020905b81548152906001019060200180831161083e57829003601f168201915b505050505081565b600454600090600160a060020a0316331461087d57600080fd5b600160a060020a038216151561089257600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03848116919091179182905560408051929091168252517f64a325b0c24846a2bfa9e259b3235c89d79f5f151b463b72e0f7f5bb290ec229916020908290030190a1506001919050565b600160a060020a031660009081526001602052604090205490565b600354600090600160a060020a0316331461093357600080fd5b600a5474010000000000000000000000000000000000000000900460ff161561095b57600080fd5b600654600754111561096c57600080fd5b600a805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600354600160a060020a031681565b60408051808201909152600381527f5852540000000000000000000000000000000000000000000000000000000000602082015281565b600454600160a060020a03163314610a2d57600080fd5b600855565b33600090815260016020526040812054821115610a4e57600080fd5b610a59338484610c0d565b50604080518381529051600160a060020a038516913391600080516020610d4a8339815191529181900360200190a350600192915050565b60065490565b600454600090600160a060020a03163314610ab157600080fd5b60008211610abe57600080fd5b50600955600190565b600354600090600160a060020a03163314610ae157600080fd5b6008546009541115610af257600080fd5b600160a060020a038316600090815260016020526040902054610b1b908363ffffffff610cdf16565b600160a060020a0380851660009081526001602052604080822093909355600a5490911681522054610b53908363ffffffff610d3a16565b600a8054600160a060020a03908116600090815260016020908152604091829020949094559154825186815292519082169391871692600080516020610d4a83398151915292908290030190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600454600090600160a060020a03163314610bee57600080fd5b50600a54600160a060020a031690565b600a54600160a060020a031681565b6000600160a060020a03841615801590610c39575082600160a060020a031684600160a060020a031614155b1515610c4457600080fd5b600160a060020a0383161515610c5957600080fd5b600160a060020a038416600090815260016020526040902054610c82908363ffffffff610cdf16565b600160a060020a038086166000908152600160205260408082209390935590851681522054610cb7908363ffffffff610d3a16565b600160a060020a03841660009081526001602081905260409091209190915590509392505050565b600082821115610ceb57fe5b50900390565b6000808284811515610cff57fe5b04949350505050565b600080831515610d1b57600091506107ce565b50828202828482811515610d2b57fe5b0414610d3357fe5b9392505050565b600082820183811015610d3357fe00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582002ea39b0aac68b9ee57d7a22a7ebab630b962e785fc0297344f2c93e0989c97600290000000000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "0000000000000000000000000000000000000000000000000000000000000000"
}