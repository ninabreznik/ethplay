{
  "address": "0x7051620d11042c4335069aaa4f10cd3b4290c681",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TCASH",
  "compilerVersion": "v0.4.16+commit.d7661dd9",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-17\n*/\n\npragma solidity ^0.4.16;\n\n  contract ERC20 {\n     function totalSupply() constant returns (uint256 totalsupply);\n     function balanceOf(address _owner) constant returns (uint256 balance);\n     function transfer(address _to, uint256 _value) returns (bool success);\n     function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n     function approve(address _spender, uint256 _value) returns (bool success);\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n     event Transfer(address indexed _from, address indexed _to, uint256 _value);\n     event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n  }\n  \n  contract TCASH is ERC20 {\n     string public constant symbol = \"TCASH\";\n     string public constant name = \"Tcash\";\n     uint8 public constant decimals = 8;\n     uint256 _totalSupply = 88000000 * 10**8;\n     \n\n     address public owner;\n  \n     mapping(address => uint256) balances;\n  \n     mapping(address => mapping (address => uint256)) allowed;\n     \n  \n     function TCASH() {\n         owner = msg.sender;\n         balances[owner] = 88000000 * 10**8;\n     }\n     \n     modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n     \n     \n    function distributeTCASH(address[] addresses) onlyOwner {\n         for (uint i = 0; i < addresses.length; i++) {\n           if (balances[owner] >= 100000000\n             && balances[addresses[i]] + 100000000 > balances[addresses[i]]) {\n             balances[owner] -= 100000000;\n             balances[addresses[i]] += 100000000;\n             Transfer(owner, addresses[i], 100000000);\n           }\n         }\n     }\n     \n  \n     function totalSupply() constant returns (uint256 totalsupply) {\n         totalsupply = _totalSupply;\n     }\n  \n\n     function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n     }\n \n     function transfer(address _to, uint256 _amount) returns (bool success) {\n         require(balances[msg.sender] >= _amount);\n         require(_amount > 0);\n         require(balances[_to] + _amount > balances[_to]);\n         balances[msg.sender] -= _amount;\n         balances[_to] += _amount;\n         Transfer(msg.sender, _to, _amount);\n         return true;\n     }\n     \n     \n     function transferFrom(\n         address _from,\n         address _to,\n         uint256 _amount\n     ) returns (bool success) {\n         require(balances[_from] >= _amount);\n         require(allowed[_from][msg.sender] >= _amount);\n         require(_amount > 0);\n         require(balances[_to] + _amount > balances[_to]);\n         balances[_from] -= _amount;\n         allowed[_from][msg.sender] -= _amount;\n         balances[_to] += _amount;\n         Transfer(_from, _to, _amount);\n         return true;\n     }\n \n     function approve(address _spender, uint256 _amount) returns (bool success) {\n         require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\n         allowed[msg.sender][_spender] = _amount;\n         Approval(msg.sender, _spender, _amount);\n         return true;\n     }\n  \n     function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n         return allowed[_owner][_spender];\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalsupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"distributeTCASH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "6060604052661f438daa060000600055341561001a57600080fd5b5b60018054600160a060020a03191633600160a060020a039081169190911791829055166000908152600260205260409020661f438daa06000090555b5b6108d7806100676000396000f300606060405236156100ac5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b1578063095ea7b31461013c57806318160ddd146101725780631b8de48c1461019757806323b872dd146101e8578063313ce5671461022457806370a082311461024d5780638da5cb5b1461027e57806395d89b41146102ad578063a9059cbb14610338578063dd62ed3e1461036e575b600080fd5b34156100bc57600080fd5b6100c46103a5565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101015780820151818401525b6020016100e8565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014757600080fd5b61015e600160a060020a03600435166024356103dc565b604051901515815260200160405180910390f35b341561017d57600080fd5b610185610483565b60405190815260200160405180910390f35b34156101a257600080fd5b6101e6600460248135818101908301358060208181020160405190810160405280939291908181526020018383602002808284375094965061048a95505050505050565b005b34156101f357600080fd5b61015e600160a060020a0360043581169060243516604435610632565b604051901515815260200160405180910390f35b341561022f57600080fd5b61023761074c565b60405160ff909116815260200160405180910390f35b341561025857600080fd5b610185600160a060020a0360043516610751565b60405190815260200160405180910390f35b341561028957600080fd5b610291610770565b604051600160a060020a03909116815260200160405180910390f35b34156102b857600080fd5b6100c461077f565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101015780820151818401525b6020016100e8565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561034357600080fd5b61015e600160a060020a03600435166024356107b6565b604051901515815260200160405180910390f35b341561037957600080fd5b610185600160a060020a036004358116906024351661087e565b60405190815260200160405180910390f35b60408051908101604052600581527f5463617368000000000000000000000000000000000000000000000000000000602082015281565b600081158061040e5750600160a060020a03338116600090815260036020908152604080832093871683529290522054155b151561041957600080fd5b600160a060020a03338116600081815260036020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b6000545b90565b60015460009033600160a060020a039081169116146104a857600080fd5b5060005b815181101561062c57600154600160a060020a03166000908152600260205260409020546305f5e100901080159061055d5750600260008383815181106104ef57fe5b90602001906020020151600160a060020a0316600160a060020a03168152602001908152602001600020546002600084848151811061052a57fe5b90602001906020020151600160a060020a0316600160a060020a03168152602001908152602001600020546305f5e10001115b1561062357600154600160a060020a03166000908152600260208190526040822080546305f5e0ff190190556305f5e1009184848151811061059b57fe5b90602001906020020151600160a060020a031681526020810191909152604001600020805490910190558181815181106105d157fe5b90602001906020020151600154600160a060020a0391821691167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6305f5e10060405190815260200160405180910390a35b5b6001016104ac565b5b5b5050565b600160a060020a0383166000908152600260205260408120548290101561065857600080fd5b600160a060020a03808516600090815260036020908152604080832033909416835292905220548290101561068c57600080fd5b6000821161069957600080fd5b600160a060020a038316600090815260026020526040902054828101116106bf57600080fd5b600160a060020a0380851660008181526002602081815260408084208054899003905560038252808420338716855282528084208054899003905594881680845291905290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b9392505050565b600881565b600160a060020a0381166000908152600260205260409020545b919050565b600154600160a060020a031681565b60408051908101604052600581527f5443415348000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a033316600090815260026020526040812054829010156107dc57600080fd5b600082116107e957600080fd5b600160a060020a0383166000908152600260205260409020548281011161080f57600080fd5b600160a060020a033381166000818152600260205260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b92915050565b600160a060020a038083166000908152600360209081526040808320938516835292905220545b929150505600a165627a7a723058209ea5252f67454e68af4c25a68fea44b072ed5120c78ad97b9c3608a83f58b7000029"
}