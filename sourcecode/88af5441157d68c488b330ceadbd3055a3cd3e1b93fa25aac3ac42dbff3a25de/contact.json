{
  "address": "0x51fb3da8a67861361281ac56fe2ad8c3b4539ffa",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "InsurChainCoin",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-27\n*/\n\npragma solidity ^0.4.24;\n\nlibrary SafeMath {\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n}\n\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  function batchTransfer(address[] receivers, uint256[] values) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) internal balances;\n  uint256 internal totalSupply_;\n\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  function batchTransfer(address[] _receivers, uint256[] _values) public returns (bool) {\n    require(_receivers.length > 0);\n    require(_receivers.length < 100000);\n    require(_receivers.length == _values.length);\n\n    uint256 sum;\n    for(uint i = 0; i < _values.length; i++) {\n      sum = sum.add(_values[i]);\n    }\n    require(sum <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(sum);\n    for(uint j = 0; j < _receivers.length; j++) {\n      balances[_receivers[j]] = balances[_receivers[j]].add(_values[j]);\n      emit Transfer(msg.sender, _receivers[j], _values[j]);\n    }\n    return true;\n  }\n}\n\ncontract InsurChainCoin is BasicToken {\n  string public name;\n  string public symbol;\n  uint8 public decimals;\n\n  constructor() public {\n    name = \"InsurChain2.0\";\n    symbol = \"INSUR\";\n    decimals = 18;\n    totalSupply_ = 2e28;\n    balances[msg.sender]=totalSupply_;\n    emit Transfer(address(0), msg.sender, totalSupply_);\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receivers\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060408051808201909152600d8082527f496e737572436861696e322e3000000000000000000000000000000000000000602090920191825261005591600291610106565b506040805180820190915260058082527f494e535552000000000000000000000000000000000000000000000000000000602090920191825261009a91600391610106565b506004805460ff191660121790556b409f9cbc7c4a04c220000000600181905533600081815260208181526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36101a1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061014757805160ff1916838001178555610174565b82800160010185558215610174579182015b82811115610174578251825591602001919060010190610159565b50610180929150610184565b5090565b61019e91905b80821115610180576000815560010161018a565b90565b61068f806101b06000396000f3006080604052600436106100825763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461008757806318160ddd14610111578063313ce5671461013857806370a082311461016357806388d695b21461018457806395d89b4114610226578063a9059cbb1461023b575b600080fd5b34801561009357600080fd5b5061009c61025f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100d65781810151838201526020016100be565b50505050905090810190601f1680156101035780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561011d57600080fd5b506101266102ea565b60408051918252519081900360200190f35b34801561014457600080fd5b5061014d6102f0565b6040805160ff9092168252519081900360200190f35b34801561016f57600080fd5b50610126600160a060020a03600435166102f9565b34801561019057600080fd5b506040805160206004803580820135838102808601850190965280855261021295369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506103149650505050505050565b604080519115158252519081900360200190f35b34801561023257600080fd5b5061009c610502565b34801561024757600080fd5b50610212600160a060020a036004351660243561055d565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b505050505081565b60015490565b60045460ff1681565b600160a060020a031660009081526020819052604090205490565b6000806000806000865111151561032a57600080fd5b8551620186a01161033a57600080fd5b845186511461034857600080fd5b600091505b845182101561038b5761037e858381518110151561036757fe5b60209081029091010151849063ffffffff61063e16565b925060019091019061034d565b336000908152602081905260409020548311156103a757600080fd5b336000908152602081905260409020546103c7908463ffffffff61065116565b3360009081526020819052604081209190915590505b85518110156104f65761044185828151811015156103f757fe5b90602001906020020151600080898581518110151561041257fe5b6020908102909101810151600160a060020a03168252810191909152604001600020549063ffffffff61063e16565b600080888481518110151561045257fe5b6020908102909101810151600160a060020a0316825281019190915260400160002055855186908290811061048357fe5b90602001906020020151600160a060020a031633600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef87848151811015156104cf57fe5b906020019060200201516040518082815260200191505060405180910390a36001016103dd565b50600195945050505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102e25780601f106102b7576101008083540402835291602001916102e2565b6000600160a060020a038316151561057457600080fd5b3360009081526020819052604090205482111561059057600080fd5b336000908152602081905260409020546105b0908363ffffffff61065116565b3360009081526020819052604080822092909255600160a060020a038516815220546105e2908363ffffffff61063e16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b8181018281101561064b57fe5b92915050565b60008282111561065d57fe5b509003905600a165627a7a72305820db8a46b2f4e72091ce12008063ba84af099524b806eff11c469ee7dba720d6ad0029"
}