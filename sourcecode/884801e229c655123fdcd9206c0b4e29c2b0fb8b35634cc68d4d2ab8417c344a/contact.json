{
  "address": "0x7b188a8b3a2113621895fb35fc67a779caffa92d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "QOSToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-29\n*/\n\npragma solidity ^0.4.24;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev Total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/issues/20\n * Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    returns (bool)\n  {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(\n    address _spender,\n    uint256 _addedValue\n  )\n    public\n    returns (bool)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(\n    address _spender,\n    uint256 _subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    uint256 oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\ncontract QOSToken is StandardToken {\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 internal totalFrozen;\n    uint256 internal unlockedAt;\n    mapping(address => uint256) frozenAccount;\n\n    address internal sellerAddr = 0x0091426938dFb8F5052F790C4bC40F65eA4aF456;\n    address internal prvPlacementAddr = 0x00B76C436e0784501012e2c436b54c1DA4E82434;\n    address internal communitAddr = 0x00e0916090A85258fb645d58E654492361a853fe;\n    address internal develAddr = 0x0077779160989a61A24ee7D1ed0f87d217e1d30C;\n    address internal fundationAddr = 0x00879858d5ed1Cf4082C1f58064565B0633A3b97;\n    address internal teamAddr = 0x008A3fA7815daBbc02d7517BA083f19D5d6d2aBB;\n\n\n    event Frozen(address indexed from, uint256 value);\n    event UnFrozen(address indexed from, uint256 value);\n\n    constructor(string _name, string _symbol, uint8 _decimals) public {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n\n        uint256 decimalValue = 10 ** uint256(decimals);\n        totalSupply_ = SafeMath.mul(4900000000, decimalValue);\n        unlockedAt = now + 12 * 30 days;\n\n        balances[sellerAddr] = SafeMath.mul(500000000, decimalValue); //for r transaction market\n        balances[prvPlacementAddr] = SafeMath.mul(500000000, decimalValue);//  for private placement\n        balances[communitAddr] = SafeMath.mul(500000000, decimalValue);// for communit operation\n        balances[develAddr] = SafeMath.mul(900000000, decimalValue);// for development\n        balances[fundationAddr] = SafeMath.mul(1500000000, decimalValue); // for foundation\n\n        emit Transfer(this, sellerAddr, balances[sellerAddr]);\n        emit Transfer(this, prvPlacementAddr, balances[prvPlacementAddr]);\n        emit Transfer(this, communitAddr, balances[communitAddr]);\n        emit Transfer(this, develAddr, balances[develAddr]);\n        emit Transfer(this, fundationAddr, balances[fundationAddr]);\n\n        frozenAccount[teamAddr] = SafeMath.mul(1000000000, decimalValue); // 10% for team\n        totalFrozen = frozenAccount[teamAddr];\n        emit Frozen(teamAddr, totalFrozen);\n    }\n\n    function unFrozen() external {\n        require(now > unlockedAt);\n        require(msg.sender == teamAddr);\n\n        uint256 frozenBalance = frozenAccount[msg.sender];\n        require(frozenBalance > 0);\n\n        uint256 nmonth = SafeMath.div(now - unlockedAt, 30 * 1 days) + 1;\n        if (nmonth > 23) {\n            balances[msg.sender] += frozenBalance;\n            frozenAccount[msg.sender] = 0;\n            emit UnFrozen(msg.sender, frozenBalance);\n            return;\n        }\n\n        //23*4166666+4166682 = 100000000\n        uint256 decimalValue = 10 ** uint256(decimals);\n        uint256 oneMonthBalance = SafeMath.mul(4166666, decimalValue);\n        uint256 unfrozenBalance = SafeMath.mul(nmonth, oneMonthBalance);\n        frozenAccount[msg.sender] = totalFrozen - unfrozenBalance;\n        uint256 toTransfer = frozenBalance - frozenAccount[msg.sender];\n\n        require(toTransfer > 0);\n        balances[msg.sender] += toTransfer;\n        emit UnFrozen(msg.sender, toTransfer);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unFrozen\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Frozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UnFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "608060405260098054600160a060020a03199081167291426938dfb8f5052f790c4bc40f65ea4af45617909155600a8054821672b76c436e0784501012e2c436b54c1da4e82434179055600b8054821672e0916090a85258fb645d58e654492361a853fe179055600c805482167277779160989a61a24ee7d1ed0f87d217e1d30c179055600d8054821672879858d5ed1cf4082c1f58064565b0633a3b97179055600e8054909116728a3fa7815dabbc02d7517ba083f19d5d6d2abb179055348015620000cb57600080fd5b5060405162000fdb38038062000fdb8339810160409081528151602080840151928401519184018051909493909301926000916200010f916003918701906200047b565b508251620001259060049060208601906200047b565b50506005805460ff191660ff838116919091179182905516600a0a6200015f6401241011008264010000000062000448810262000a361704565b6001556301da9c0042016007556200018a631dcd65008264010000000062000a366200044882021704565b600954600160a060020a0316600090815260208190526040902055620001c3631dcd65008264010000000062000a366200044882021704565b600a54600160a060020a0316600090815260208190526040902055620001fc631dcd65008264010000000062000a366200044882021704565b600b54600160a060020a0316600090815260208190526040902055620002356335a4e9008264010000000062000a366200044882021704565b600c54600160a060020a03166000908152602081905260409020556200026e6359682f008264010000000062000a366200044882021704565b600d54600160a060020a03908116600090815260208181526040808320949094556009549092168082529083902054835190815292519092309260008051602062000fbb83398151915292918290030190a3600a54600160a060020a0316600081815260208181526040918290205482519081529151309260008051602062000fbb83398151915292908290030190a3600b54600160a060020a0316600081815260208181526040918290205482519081529151309260008051602062000fbb83398151915292908290030190a3600c54600160a060020a0316600081815260208181526040918290205482519081529151309260008051602062000fbb83398151915292908290030190a3600d54600160a060020a0316600081815260208181526040918290205482519081529151309260008051602062000fbb83398151915292908290030190a3620003d6633b9aca008264010000000062000a366200044882021704565b600e8054600160a060020a039081166000908152600860209081526040808320959095559254909116808252908390205460068190558351908152925190927f68e0d8c112165d0949ce87205b719ed7d98c7401866c34a159f7c67c6f5620e792908290030190a25050505062000520565b60008215156200045b5750600062000475565b508181028183828115156200046c57fe5b04146200047557fe5b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004be57805160ff1916838001178555620004ee565b82800160010185558215620004ee579182015b82811115620004ee578251825591602001919060010190620004d1565b50620004fc92915062000500565b5090565b6200051d91905b80821115620004fc576000815560010162000507565b90565b610a8b80620005306000396000f3006080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461018057806323b872dd146101a7578063313ce567146101d157806347d137c5146101fc578063661884631461021357806370a082311461023757806395d89b4114610258578063a9059cbb1461026d578063d73dd62314610291578063dd62ed3e146102b5575b600080fd5b3480156100ca57600080fd5b506100d36102dc565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b5061016c600160a060020a036004351660243561036a565b604080519115158252519081900360200190f35b34801561018c57600080fd5b5061019561040d565b60408051918252519081900360200190f35b3480156101b357600080fd5b5061016c600160a060020a0360043581169060243516604435610413565b3480156101dd57600080fd5b506101e661058a565b6040805160ff9092168252519081900360200190f35b34801561020857600080fd5b50610211610593565b005b34801561021f57600080fd5b5061016c600160a060020a03600435166024356106f7565b34801561024357600080fd5b50610195600160a060020a03600435166107e7565b34801561026457600080fd5b506100d3610802565b34801561027957600080fd5b5061016c600160a060020a036004351660243561085d565b34801561029d57600080fd5b5061016c600160a060020a036004351660243561093e565b3480156102c157600080fd5b50610195600160a060020a03600435811690602435166109d7565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b505050505081565b600081158061039a5750336000908152600260209081526040808320600160a060020a0387168452909152902054155b15156103a557600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60015490565b6000600160a060020a038316151561042a57600080fd5b600160a060020a03841660009081526020819052604090205482111561044f57600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561047f57600080fd5b600160a060020a0384166000908152602081905260409020546104a8908363ffffffff610a0216565b600160a060020a0380861660009081526020819052604080822093909355908516815220546104dd908363ffffffff610a1416565b600160a060020a0380851660009081526020818152604080832094909455918716815260028252828120338252909152205461051f908363ffffffff610a0216565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60055460ff1681565b600080600080600080600754421115156105ac57600080fd5b600e54600160a060020a031633146105c357600080fd5b33600090815260086020526040812054965086116105e057600080fd5b6105f1600754420362278d00610a21565b60010194506017851115610656573360008181526020818152604080832080548b0190556008825280832092909255815189815291517f9c2019e084d5cada06e6835b7d78372e124b1a46ea73c0ecdc91f3432e5dd2239281900390910190a26106ef565b60055460ff16600a0a935061066e623f940a85610a36565b925061067a8584610a36565b60065433600090815260086020526040812091839003918290559193508703915081116106a657600080fd5b3360008181526020818152604091829020805485019055815184815291517f9c2019e084d5cada06e6835b7d78372e124b1a46ea73c0ecdc91f3432e5dd2239281900390910190a25b505050505050565b336000908152600260209081526040808320600160a060020a03861684529091528120548083111561074c57336000908152600260209081526040808320600160a060020a0388168452909152812055610781565b61075c818463ffffffff610a0216565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103625780601f1061033757610100808354040283529160200191610362565b6000600160a060020a038316151561087457600080fd5b3360009081526020819052604090205482111561089057600080fd5b336000908152602081905260409020546108b0908363ffffffff610a0216565b3360009081526020819052604080822092909255600160a060020a038516815220546108e2908363ffffffff610a1416565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610972908363ffffffff610a1416565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600082821115610a0e57fe5b50900390565b8181018281101561040757fe5b60008183811515610a2e57fe5b049392505050565b6000821515610a4757506000610407565b50818102818382811515610a5757fe5b041461040757fe00a165627a7a72305820d4947b3ca369be51ea98e5944d0d56a54a34a68e5072620669cc9eda7d2e3a2f0029ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000125175616c697479206f66205365727669636500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003514f530000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000125175616c697479206f66205365727669636500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003514f530000000000000000000000000000000000000000000000000000000000"
}