{
  "address": "0xd62931ecf577f0e9df73075e234c5c916316a093",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "GlobalFintechCoin",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-05\n*/\n\n/**\n* The Global Fintech Coin contract bases on the ERC20 standard token contracts\n* Author : Gordon T. Asiranawin\n* Orgura Inc. &\n* Global Fintech\n*/\npragma solidity ^0.4.24;\n\n\n/**\n * Math operations with safety checks\n */\nlibrary SafeMath {\n\n    function mul(uint a, uint b) internal returns (uint) {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint a, uint b) internal returns (uint) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint a, uint b) internal returns (uint) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint a, uint b) internal returns (uint) {\n        uint c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    function max64(uint64 a, uint64 b) internal constant returns (uint64) {\n        return a >= b ? a : b;\n    }\n\n    function min64(uint64 a, uint64 b) internal constant returns (uint64) {\n        return a < b ? a : b;\n    }\n\n    function max256(uint256 a, uint256 b) internal constant returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    function min256(uint256 a, uint256 b) internal constant returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    function assert(bool assertion) internal {\n        if (!assertion) {\n            throw;\n        }\n    }\n\n}\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20Basic {\n\n    uint public totalSupply;\n    function balanceOf(address who) constant returns (uint);\n    function transfer(address to, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n}\n\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n\n    using SafeMath for uint;\n\n    mapping(address => uint) balances;\n\n    /**\n    * @dev Fix for the ERC20 short address attack.\n    */\n    modifier onlyPayloadSize(uint size) {\n        if(msg.data.length < size + 4) {\n        throw;\n        }\n        _;\n    }\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) constant returns (uint balance) {\n        return balances[_owner];\n    }\n\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n\n    function allowance(address owner, address spender) constant returns (uint);\n    function transferFrom(address from, address to, uint value);\n    function approve(address spender, uint value);\n    event Approval(address indexed owner, address indexed spender, uint value);\n\n}\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implemantation of the basic standart token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is BasicToken, ERC20 {\n\n    mapping (address => mapping (address => uint)) allowed;\n\n    /**\n    * @dev Transfer tokens from one address to another\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint the amout of tokens to be transfered\n    */\n    function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {\n        var _allowance = allowed[_from][msg.sender];\n\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n        // if (_value > _allowance) throw;\n\n        balances[_to] = balances[_to].add(_value);\n        balances[_from] = balances[_from].sub(_value);\n        allowed[_from][msg.sender] = _allowance.sub(_value);\n        Transfer(_from, _to, _value);\n    }\n\n    /**\n    * @dev Aprove the passed address to spend the specified amount of tokens on beahlf of msg.sender.\n    * @param _spender The address which will spend the funds.\n    * @param _value The amount of tokens to be spent.\n    */\n    function approve(address _spender, uint _value) {\n\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;\n\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n    }\n\n    /**\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\n    * @param _owner address The address which owns the funds.\n    * @param _spender address The address which will spend the funds.\n    * @return A uint specifing the amount of tokens still avaible for the spender.\n    */\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n\n}\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n\n    address public owner;\n\n    /**\n    * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n    * account.\n    */\n    function Ownable() {\n        owner = msg.sender;\n    }\n\n    /**\n    * @dev Throws if called by any account other than the owner.\n    */\n    modifier onlyOwner() {\n        if (msg.sender != owner) {\n            throw;\n        }\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) onlyOwner {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n\n}\n\n\n/**\n * @title Mintable token\n * @dev Simple ERC20 Token example, with mintable token creation\n * @dev Issue: * https://github.com/OpenZeppelin/zeppelin-solidity/issues/120\n * Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\n */\ncontract MintableToken is StandardToken, Ownable {\n\n    event Mint(address indexed to, uint value);\n    event MintFinished();\n\n    bool public mintingFinished = false;\n    uint public totalSupply = 0;\n\n    modifier canMint() {\n        if(mintingFinished) throw;\n        _;\n    }\n\n    /**\n    * @dev Function to mint tokens\n    * @param _to The address that will recieve the minted tokens.\n    * @param _amount The amount of tokens to mint.\n    * @return A boolean that indicates if the operation was successful.\n    */\n    function mint(address _to, uint _amount) onlyOwner canMint returns (bool) {\n        totalSupply = totalSupply.add(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        Mint(_to, _amount);\n        return true;\n    }\n\n    /**\n    * @dev Function to stop minting new tokens.\n    * @return True if the operation was successful.\n    */\n    function finishMinting() onlyOwner returns (bool) {\n        mintingFinished = true;\n        MintFinished();\n        return true;\n    }\n\n}\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n\n    event Pause();\n    event Unpause();\n\n    bool public paused = false;\n\n    /**\n    * @dev modifier to allow actions only when the contract IS paused\n    */\n    modifier whenNotPaused() {\n        if (paused) throw;\n        _;\n    }\n\n    /**\n    * @dev modifier to allow actions only when the contract IS NOT paused\n    */\n    modifier whenPaused {\n        if (!paused) throw;\n        _;\n    }\n\n    /**\n    * @dev called by the owner to pause, triggers stopped state\n    */\n    function pause() onlyOwner whenNotPaused returns (bool) {\n        paused = true;\n        Pause();\n        return true;\n    }\n\n    /**\n    * @dev called by the owner to unpause, returns to normal state\n    */\n    function unpause() onlyOwner whenPaused returns (bool) {\n        paused = false;\n        Unpause();\n        return true;\n    }\n\n}\n\n\n/**\n * Pausable token\n *\n * Simple ERC20 Token example, with pausable token creation\n **/\ncontract PausableToken is StandardToken, Pausable {\n\n    function transfer(address _to, uint _value) whenNotPaused {\n        super.transfer(_to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint _value) whenNotPaused {\n        super.transferFrom(_from, _to, _value);\n    }\n\n}\n\n\n/**\n * @title TokenTimelock\n * @dev TokenTimelock is a token holder contract that will allow a\n * beneficiary to extract the tokens after a time has passed\n */\ncontract TokenTimelock {\n\n    // ERC20 basic token contract being held\n    ERC20Basic token;\n\n    // beneficiary of tokens after they are released\n    address beneficiary;\n\n    // timestamp where token release is enabled\n    uint releaseTime;\n\n    function TokenTimelock(ERC20Basic _token, address _beneficiary, uint _releaseTime) {\n        require(_releaseTime > now);\n        token = _token;\n        beneficiary = _beneficiary;\n        releaseTime = _releaseTime;\n    }\n\n    /**\n    * @dev beneficiary claims tokens held by time lock\n    */\n    function claim() {\n        require(msg.sender == beneficiary);\n        require(now >= releaseTime);\n\n        uint amount = token.balanceOf(this);\n        require(amount > 0);\n\n        token.transfer(beneficiary, amount);\n    }\n\n}\n\n\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n * Based on code by OpenZeppelin: https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/BurnableToken.sol\n */\ncontract BurnableToken is BasicToken {\n\n    event Burn(address indexed burner, uint256 value);\n\n    /**\n    * @dev Burns a specific amount of tokens.\n    * @param _value The amount of token to be burned.\n    */\n    function burn(uint256 _value) public {\n        _burn(msg.sender, _value);\n    }\n\n    function _burn(address _who, uint256 _value) internal {\n        require(_value <= balances[_who]);\n        // no need to require value <= totalSupply, since that would imply the\n        // sender's balance is greater than the totalSupply, which *should* be an assertion failure\n\n        balances[_who] = balances[_who].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        emit Burn(_who, _value);\n        emit Transfer(_who, address(0), _value);\n    }\n\n}\n\n\n/**\n * @title GlobalFintechCoin\n * @dev GlobalFintechCoin contract\n */\ncontract GlobalFintechCoin is PausableToken, MintableToken, BurnableToken {\n\n    using SafeMath for uint256;\n\n    string public name = \"Global Fintech\";\n    string public symbol = \"GFIN\";\n    uint public decimals = 18;\n\n    /// Maximum tokens to be allocated.\n    uint256 public constant HARD_CAP = 1688000000 * 10**uint256(decimals);\n    /* Initial supply is  1,688,000,000 BIG */\n\n    /**\n    * @dev mint timelocked tokens\n    */\n    function mintTimelocked(address _to, uint256 _amount, uint256 _releaseTime)\n        onlyOwner canMint returns (TokenTimelock) {\n\n        TokenTimelock timelock = new TokenTimelock(this, _to, _releaseTime);\n        mint(timelock, _amount);\n\n        return timelock;\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HARD_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_releaseTime\",\"type\":\"uint256\"}],\"name\":\"mintTimelocked\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "6003805460a060020a61ffff0219169055600060045560c0604052600e60808190527f476c6f62616c2046696e7465636800000000000000000000000000000000000060a090815261005491600591906100b6565b506040805180820190915260048082527f4746494e000000000000000000000000000000000000000000000000000000006020909201918252610099916006916100b6565b50601260075560038054600160a060020a03191633179055610151565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100f757805160ff1916838001178555610124565b82800160010185558215610124579182015b82811115610124578251825591602001919060010190610109565b50610130929150610134565b5090565b61014e91905b80821115610130576000815560010161013a565b90565b610f9b806101606000396000f3006080604052600436106101115763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461011657806306fdde031461013f578063095ea7b3146101c957806318160ddd146101ef57806323b872dd14610216578063313ce567146102405780633a03171c146102555780633f4ba83a1461026a57806340c10f191461027f57806342966c68146102a35780635c975abb146102bb57806370a08231146102d05780637d64bcb4146102f15780638456cb59146103065780638da5cb5b1461031b57806395d89b411461034c578063a9059cbb14610361578063c14a3b8c14610385578063dd62ed3e146103ac578063f2fde38b146103d3575b600080fd5b34801561012257600080fd5b5061012b6103f4565b604080519115158252519081900360200190f35b34801561014b57600080fd5b50610154610416565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018e578181015183820152602001610176565b50505050905090810190601f1680156101bb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101d557600080fd5b506101ed600160a060020a03600435166024356104a4565b005b3480156101fb57600080fd5b50610204610541565b60408051918252519081900360200190f35b34801561022257600080fd5b506101ed600160a060020a0360043581169060243516604435610547565b34801561024c57600080fd5b5061020461056e565b34801561026157600080fd5b50610204610574565b34801561027657600080fd5b5061012b610583565b34801561028b57600080fd5b5061012b600160a060020a0360043516602435610602565b3480156102af57600080fd5b506101ed6004356106df565b3480156102c757600080fd5b5061012b6106ec565b3480156102dc57600080fd5b50610204600160a060020a03600435166106fc565b3480156102fd57600080fd5b5061012b610717565b34801561031257600080fd5b5061012b610797565b34801561032757600080fd5b5061033061081b565b60408051600160a060020a039092168252519081900360200190f35b34801561035857600080fd5b5061015461082a565b34801561036d57600080fd5b506101ed600160a060020a0360043516602435610885565b34801561039157600080fd5b50610330600160a060020a03600435166024356044356108aa565b3480156103b857600080fd5b50610204600160a060020a036004358116906024351661094e565b3480156103df57600080fd5b506101ed600160a060020a0360043516610979565b6003547501000000000000000000000000000000000000000000900460ff1681565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561049c5780601f106104715761010080835404028352916020019161049c565b820191906000526020600020905b81548152906001019060200180831161047f57829003601f168201915b505050505081565b80158015906104d55750336000908152600260209081526040808320600160a060020a038616845290915290205415155b156104df57600080fd5b336000818152600260209081526040808320600160a060020a03871680855290835292819020859055805185815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b60045481565b60035460a060020a900460ff161561055e57600080fd5b6105698383836109cc565b505050565b60075481565b600754600a0a63649cd6000281565b600354600090600160a060020a0316331461059d57600080fd5b60035460a060020a900460ff1615156105b557600080fd5b6003805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a150600190565b600354600090600160a060020a0316331461061c57600080fd5b6003547501000000000000000000000000000000000000000000900460ff161561064557600080fd5b600454610658908363ffffffff610ae916565b600455600160a060020a038316600090815260016020526040902054610684908363ffffffff610ae916565b600160a060020a038416600081815260016020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a250600192915050565b6106e93382610b01565b50565b60035460a060020a900460ff1681565b600160a060020a031660009081526001602052604090205490565b600354600090600160a060020a0316331461073157600080fd5b6003805475ff000000000000000000000000000000000000000000191675010000000000000000000000000000000000000000001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600354600090600160a060020a031633146107b157600080fd5b60035460a060020a900460ff16156107c857600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a150600190565b600354600160a060020a031681565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561049c5780601f106104715761010080835404028352916020019161049c565b60035460a060020a900460ff161561089c57600080fd5b6108a68282610c03565b5050565b6003546000908190600160a060020a031633146108c657600080fd5b6003547501000000000000000000000000000000000000000000900460ff16156108ef57600080fd5b3085846108fa610cdf565b600160a060020a039384168152919092166020820152604080820192909252905190819003606001906000f080158015610938573d6000803e3d6000fd5b5090506109458185610602565b50949350505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a0316331461099057600080fd5b600160a060020a038116156106e95760038054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff1990911617905550565b6000606060643610156109de57600080fd5b600160a060020a03808616600090815260026020908152604080832033845282528083205493881683526001909152902054909250610a23908463ffffffff610ae916565b600160a060020a038086166000908152600160205260408082209390935590871681522054610a58908463ffffffff610cbf16565b600160a060020a038616600090815260016020526040902055610a81828463ffffffff610cbf16565b600160a060020a03808716600081815260026020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35050505050565b6000828201610afa84821015610cd3565b9392505050565b600160a060020a038216600090815260016020526040902054811115610b2657600080fd5b600160a060020a038216600090815260016020526040902054610b4f908263ffffffff610cbf16565b600160a060020a03831660009081526001602052604081209190915554610b7c908263ffffffff610cbf16565b600055604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60406044361015610c1357600080fd5b33600090815260016020526040902054610c33908363ffffffff610cbf16565b3360009081526001602052604080822092909255600160a060020a03851681522054610c65908363ffffffff610ae916565b600160a060020a0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050565b6000610ccd83831115610cd3565b50900390565b8015156106e957600080fd5b60405161028080610cf0833901905600608060405234801561001057600080fd5b5060405160608061028083398101604090815281516020830151919092015142811161003b57600080fd5b60008054600160a060020a03948516600160a060020a03199182161790915560018054939094169216919091179091556002556102038061007d6000396000f3006080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416634e71d92d8114610045575b600080fd5b34801561005157600080fd5b5061005a61005c565b005b60015460009073ffffffffffffffffffffffffffffffffffffffff16331461008357600080fd5b60025442101561009257600080fd5b60008054604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905173ffffffffffffffffffffffffffffffffffffffff909216926370a08231926024808401936020939083900390910190829087803b15801561010657600080fd5b505af115801561011a573d6000803e3d6000fd5b505050506040513d602081101561013057600080fd5b505190506000811161014157600080fd5b60008054600154604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820152602481018690529051919092169263a9059cbb926044808201939182900301818387803b1580156101bc57600080fd5b505af11580156101d0573d6000803e3d6000fd5b50505050505600a165627a7a72305820848b43490287760989426e54cf524d0de77d7d84067449516cebd9b9a1d746ea0029a165627a7a723058200bdf55f7f3fb09c1ae85e9648e349e2aeb6c56b7415b28f6d8aa4cf613528c940029"
}