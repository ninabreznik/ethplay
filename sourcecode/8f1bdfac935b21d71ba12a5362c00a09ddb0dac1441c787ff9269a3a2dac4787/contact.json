{
  "address": "0x72d32ac1c5e66bfc5b08806271f8eef915545164",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "KeeToken",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-01-17\n*/\n\npragma solidity ^0.4.19;\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\ncontract Dec {\n    function decimals() public view returns (uint8);\n}\n\ncontract KeeToken is ERC20, Ownable {\n    // ERC20 standards\n    string public symbol = \"KEE\";\n    uint8 public decimals = 0;\n    uint public totalSupply = 1000; // inestimable\n    string public name = \"CryptoKEE\";\n\n    struct AddRec {\n        address add;\n        uint8   decimals;\n    }\n\n    // specific data\n    AddRec[] eligible;\n    AddRec temp;\n        // kovan\n        // 0x3406954E89bB166F7aF1f3cd198527Af6D3b10D2,\n        // 0x7ab59D6dF718c3C5EF2B92777B519782Cc283F60,\n        // 0x9090C02e86402E4D5A6a302a08673A0EE5567C91,\n        // 0x148D3436a6A024d432bD5277EcF6B98407D46a2F,\n        // 0x10Cc6a61b75363789d38ea8A101A51C36C507DEf,\n        // 0x81154d24f4de069d1f0c16E3a52e1Ef68714daD9\n        \n\n    mapping (address => bool) public tokenIncluded;\n    mapping (address => uint256) public bitRegisters;\n    mapping (address => mapping(address => uint256)) public allowed;\n\n    uint256[] public icoArray;\n\n    // functions\n\n    function KeeToken() public {\n        addToken(0xB97048628DB6B661D4C2aA833e95Dbe1A905B280,10);\n        addToken(0x0F5D2fB29fb7d3CFeE444a200298f468908cC942, 18);\n        addToken(0xd26114cd6EE289AccF82350c8d8487fedB8A0C07, 18);\n        addToken(0x7C5A0CE9267ED19B22F8cae653F198e3E8daf098, 18);\n        addToken(0xB63B606Ac810a52cCa15e44bB630fd42D8d1d83d, 8);\n        addToken(0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C, 18);\n        addToken(0x667088b212ce3d06a1b553a7221E1fD19000d9aF, 18);\n        addToken(0xCb94be6f13A1182E4A4B6140cb7bf2025d28e41B, 6);\n        addToken(0xFf3519eeeEA3e76F1F699CCcE5E23ee0bdDa41aC, 0);\n        addToken(0xE94327D07Fc17907b4DB788E5aDf2ed424adDff6, 18);\n        addToken(0x12FEF5e57bF45873Cd9B62E9DBd7BFb99e32D73e, 18);\n        addToken(0xE7775A6e9Bcf904eb39DA2b68c5efb4F9360e08C, 6);\n        addToken(0x4156D3342D5c385a87D264F90653733592000581, 8);\n        addToken(0x58ca3065C0F24C7c96Aee8d6056b5B5deCf9c2f8, 18);\n        addToken(0x22F0AF8D78851b72EE799e05F54A77001586B18A, 0);\n\n        uint mask = 0;\n        for (uint i = 0; i < eligible.length; i++) {\n            tokenIncluded[eligible[i].add] = true;\n        }\n        icoArray.push(0);       // 0 - empty to ensure default ico score = 0\n        icoArray.push(~mask >> 256 - eligible.length);\n    }\n\n    // external\n\n    function updateICOmask(uint256 maskPos, uint256 newMask) external onlyOwner {\n        require(maskPos != 0); // can update loc 0\n        require(maskPos < icoArray.length);\n        icoArray[maskPos] = newMask;\n    }\n\n    function setICObyAddress(address ico, uint256 maskPos) external onlyOwner {\n        require(maskPos != 0);\n        require(maskPos < icoArray.length);\n        bitRegisters[ico] = maskPos;\n    }\n\n    function clearICObyAddress(address ico) external onlyOwner {\n        bitRegisters[ico] = 0;\n    }\n\n    function icoBalanceOf(address from, address ico) external view returns (uint) {\n        uint icoMaskPtr = bitRegisters[ico];\n        return icoNumberBalanceOf(from,icoMaskPtr);\n    }\n\n    // public\n\n    function pushICO(uint256 mask) public onlyOwner {\n        icoArray.push(mask);\n    }\n\n\n    function addToken(address newToken, uint8 decimalPlaces) public onlyOwner {\n        if (tokenIncluded[newToken]) {\n            return;\n        }\n        temp.add = newToken;\n        temp.decimals = decimalPlaces;\n        \n        eligible.push(temp);\n        tokenIncluded[newToken] = true;\n    }\n    \n    function updateToken(uint tokenPos, address newToken, uint8 decimalPlaces)  public onlyOwner {\n        require(tokenPos < eligible.length);\n        eligible[tokenPos].decimals = decimalPlaces;\n        eligible[tokenPos].add = newToken;\n    }\n\n    function approve(address spender, uint256 value) public returns (bool) {\n        allowed[msg.sender][spender] = value;\n        Approval(msg.sender,spender,value);\n    }\n\n    function transfer(address to, uint) public returns (bool) {\n        return transferX(msg.sender,to);\n    }\n\n    function transferFrom(address from, address to, uint) public returns (bool) {\n        if (allowed[from][msg.sender] == 0) {\n            return false;\n        }\n        return transferX(from,to);\n    }\n\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return allowed[owner][spender];\n    }\n\n    function balanceOf(address from) public view returns (uint) {\n        uint zero = 0;\n        return internalBalanceOf(from,~zero);\n    }\n\n    function icoNumberBalanceOf(address from, uint icoMaskPtr) public view returns (uint) {\n        if (icoMaskPtr == 0) \n            return 0;\n        if (icoMaskPtr >= icoArray.length) \n            return 0;\n        uint icoRegister = icoArray[icoMaskPtr];\n        return internalBalanceOf(from,icoRegister);\n    }\n\n    // internal\n\n    function transferX(address from, address to) internal returns (bool) {\n        uint myRegister = bitRegisters[from];\n        uint yourRegister = bitRegisters[to];\n        uint sent = 0;\n        uint added = 0;\n        for (uint i = 0; i < eligible.length; i++) {\n            if (coinBal(eligible[i],from) > 100) {\n                myRegister |= (uint(1) << i);\n                added++;\n            }\n        }\n        if (added > 0) {\n            bitRegisters[from] = myRegister;\n        }      \n        if ((myRegister & ~yourRegister) > 0) {\n            sent = 1;\n            bitRegisters[to] = yourRegister | myRegister;\n        }\n        Transfer(from,to,sent);\n        return true;        \n    }\n\n    function internalBalanceOf(address from, uint icoRegister) internal view returns (uint) {\n        uint myRegister = bitRegisters[from] & icoRegister;\n        uint bal = 0;\n        for (uint i = 0; i < eligible.length; i++) {\n            uint bit = (uint(1) << i);\n            if ( bit & icoRegister == 0 )\n                continue;\n            if ( myRegister & bit > 0 ) {\n                bal++;\n                continue;\n            }\n            uint coins = coinBal(eligible[i], from);\n            if (coins > 100) \n                bal++;\n        }\n        return bal;\n    }\n\n    // internal\n\n    function coinBal(AddRec ico, address from) internal view returns (uint) {\n        uint bal = ERC20(ico.add).balanceOf(from);\n        return bal / (10 ** uint(ico.decimals));\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"bitRegisters\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"ico\",\"type\":\"address\"}],\"name\":\"icoBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenPos\",\"type\":\"uint256\"},{\"name\":\"newToken\",\"type\":\"address\"},{\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"name\":\"updateToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"icoMaskPtr\",\"type\":\"uint256\"}],\"name\":\"icoNumberBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ico\",\"type\":\"address\"}],\"name\":\"clearICObyAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"maskPos\",\"type\":\"uint256\"},{\"name\":\"newMask\",\"type\":\"uint256\"}],\"name\":\"updateICOmask\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newToken\",\"type\":\"address\"},{\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"name\":\"addToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenIncluded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ico\",\"type\":\"address\"},{\"name\":\"maskPos\",\"type\":\"uint256\"}],\"name\":\"setICObyAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"icoArray\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"pushICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "606060405260408051908101604052600381527f4b45450000000000000000000000000000000000000000000000000000000000602082015260029080516200004d9291602001906200056a565b506003805460ff191690556103e860045560408051908101604052600981527f43727970746f4b4545000000000000000000000000000000000000000000000060208201526005908051620000a79291602001906200056a565b503415620000b457600080fd5b60018054600160a060020a03191633600160a060020a03161790556000806200010173b97048628db6b661d4c2aa833e95dbe1a905b280600a640100000000620004548102620008781704565b62000130730f5d2fb29fb7d3cfee444a200298f468908cc9426012640100000000620008786200045482021704565b6200015f73d26114cd6ee289accf82350c8d8487fedb8a0c076012640100000000620008786200045482021704565b6200018e737c5a0ce9267ed19b22f8cae653f198e3e8daf0986012640100000000620008786200045482021704565b620001bd73b63b606ac810a52cca15e44bb630fd42d8d1d83d6008640100000000620008786200045482021704565b620001ec731f573d6fb3f13d689ff844b4ce37794d79a7ff1c6012640100000000620008786200045482021704565b6200021b73667088b212ce3d06a1b553a7221e1fd19000d9af6012640100000000620008786200045482021704565b6200024a73cb94be6f13a1182e4a4b6140cb7bf2025d28e41b6006640100000000620008786200045482021704565b6200027973ff3519eeeea3e76f1f699ccce5e23ee0bdda41ac6000640100000000620008786200045482021704565b620002a873e94327d07fc17907b4db788e5adf2ed424addff66012640100000000620008786200045482021704565b620002d77312fef5e57bf45873cd9b62e9dbd7bfb99e32d73e6012640100000000620008786200045482021704565b6200030673e7775a6e9bcf904eb39da2b68c5efb4f9360e08c6006640100000000620008786200045482021704565b62000335734156d3342d5c385a87d264f906537335920005816008640100000000620008786200045482021704565b620003647358ca3065c0f24c7c96aee8d6056b5b5decf9c2f86012640100000000620008786200045482021704565b620003937322f0af8d78851b72ee799e05f54a77001586b18a6000640100000000620008786200045482021704565b5060009050805b600654811015620003f857600160086000600684815481101515620003bb57fe5b600091825260208083209190910154600160a060020a031683528201929092526040019020805460ff19169115159190911790556001016200039a565b600b8054600181016200040c8382620005ef565b506000918252602082200155600b8054600181016200042c8382620005ef565b50600091825260209091206006546101000360020a9319939093049201919091555062000689565b60015433600160a060020a039081169116146200047057600080fd5b600160a060020a03821660009081526008602052604090205460ff1615620004985762000566565b60078054600160a060020a031916600160a060020a0384161760a060020a60ff0219167401000000000000000000000000000000000000000060ff8416021790556006805460018101620004ed83826200061b565b506000918252602080832060078054939091018054600160a060020a031916600160a060020a0394851617808255915460ff7401000000000000000000000000000000000000000091829004160260a060020a60ff021990921691909117905590841682526008905260409020805460ff191660011790555b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005ad57805160ff1916838001178555620005dd565b82800160010185558215620005dd579182015b82811115620005dd578251825591602001919060010190620005c0565b50620005eb92915062000642565b5090565b81548183558181151162000616576000838152602090206200061691810190830162000642565b505050565b81548183558181151162000616576000838152602090206200061691810190830162000662565b6200065f91905b80821115620005eb576000815560010162000649565b90565b6200065f91905b80821115620005eb578054600160a860020a031916815560010162000669565b610eba80620006996000396000f3006060604052600436106101325763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610137578063095ea7b3146101c157806318160ddd146101f757806318c48e961461021c57806323b872dd1461023b578063313ce5671461026357806334833a6d1461028c5780633b1e2542146102b1578063497d709d146102db5780635c658165146102fd5780635e19d3161461032257806370a08231146103415780638da5cb5b1461036057806395d89b411461038f5780639de12300146103a2578063a74ea63f146103bb578063a9059cbb146103e0578063b3f57bae14610402578063b76b3e3914610421578063d3637c2714610443578063dd62ed3e14610459578063f2fde38b1461047e578063fe32a6a71461049d575b600080fd5b341561014257600080fd5b61014a6104b3565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561018657808201518382015260200161016e565b50505050905090810190601f1680156101b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101cc57600080fd5b6101e3600160a060020a0360043516602435610551565b604051901515815260200160405180910390f35b341561020257600080fd5b61020a6105ba565b60405190815260200160405180910390f35b341561022757600080fd5b61020a600160a060020a03600435166105c0565b341561024657600080fd5b6101e3600160a060020a03600435811690602435166044356105d2565b341561026e57600080fd5b61027661061d565b60405160ff909116815260200160405180910390f35b341561029757600080fd5b61020a600160a060020a0360043581169060243516610626565b34156102bc57600080fd5b6102d9600435600160a060020a036024351660ff60443516610653565b005b34156102e657600080fd5b61020a600160a060020a03600435166024356106fd565b341561030857600080fd5b61020a600160a060020a0360043581169060243516610748565b341561032d57600080fd5b6102d9600160a060020a0360043516610765565b341561034c57600080fd5b61020a600160a060020a036004351661079a565b341561036b57600080fd5b6103736107a9565b604051600160a060020a03909116815260200160405180910390f35b341561039a57600080fd5b61014a6107b8565b34156103ad57600080fd5b6102d9600435602435610823565b34156103c657600080fd5b6102d9600160a060020a036004351660ff60243516610878565b34156103eb57600080fd5b6101e3600160a060020a036004351660243561099d565b341561040d57600080fd5b6101e3600160a060020a03600435166109a9565b341561042c57600080fd5b6102d9600160a060020a03600435166024356109be565b341561044e57600080fd5b61020a600435610a0f565b341561046457600080fd5b61020a600160a060020a0360043581169060243516610a2e565b341561048957600080fd5b6102d9600160a060020a0360043516610a59565b34156104a857600080fd5b6102d9600435610af4565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105495780601f1061051e57610100808354040283529160200191610549565b820191906000526020600020905b81548152906001019060200180831161052c57829003601f168201915b505050505081565b600160a060020a033381166000818152600a6020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a392915050565b60045481565b60096020526000908152604090205481565b600160a060020a038084166000908152600a6020908152604080832033909416835292905290812054151561060957506000610616565b6106138484610b30565b90505b9392505050565b60035460ff1681565b600160a060020a03811660009081526009602052604081205461064984826106fd565b91505b5092915050565b60015433600160a060020a0390811691161461066e57600080fd5b600654831061067c57600080fd5b8060068481548110151561068c57fe5b906000526020600020900160000160146101000a81548160ff021916908360ff160217905550816006848154811015156106c257fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055505050565b600080821515610710576000915061064c565b600b548310610722576000915061064c565b600b80548490811061073057fe5b90600052602060002090015490506106498482610c78565b600a60209081526000928352604080842090915290825290205481565b60015433600160a060020a0390811691161461078057600080fd5b600160a060020a0316600090815260096020526040812055565b60008061061683600019610c78565b600154600160a060020a031681565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105495780601f1061051e57610100808354040283529160200191610549565b60015433600160a060020a0390811691161461083e57600080fd5b81151561084a57600080fd5b600b54821061085857600080fd5b80600b8381548110151561086857fe5b6000918252602090912001555050565b60015433600160a060020a0390811691161461089357600080fd5b600160a060020a03821660009081526008602052604090205460ff16156108b957610999565b6007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161774ff0000000000000000000000000000000000000000191660a060020a60ff84160217905560068054600181016109168382610dee565b50600091825260208083206007805493909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0394851617808255915460ff60a060020a91829004160274ff00000000000000000000000000000000000000001990921691909117905590841682526008905260409020805460ff191660011790555b5050565b60006106163384610b30565b60086020526000908152604090205460ff1681565b60015433600160a060020a039081169116146109d957600080fd5b8015156109e557600080fd5b600b5481106109f357600080fd5b600160a060020a03909116600090815260096020526040902055565b600b805482908110610a1d57fe5b600091825260209091200154905081565b600160a060020a039182166000908152600a6020908152604080832093909416825291909152205490565b60015433600160a060020a03908116911614610a7457600080fd5b600160a060020a0381161515610a8957600080fd5b600154600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60015433600160a060020a03908116911614610b0f57600080fd5b600b805460018101610b218382610e17565b50600091825260209091200155565b600160a060020a038083166000908152600960205260408082205492841682528120549091908280805b600654811015610bd0576064610bb0600683815481101515610b7857fe5b9060005260206000209001604080519081016040529054600160a060020a038116825260a060020a900460ff1660208201528a610d40565b1115610bc857600281900a9490941793600191909101905b600101610b5a565b6000821115610bf557600160a060020a03881660009081526009602052604090208590555b6000841986161115610c2357600160a060020a03871660009081526009602052604090208486179055600192505b86600160a060020a031688600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405190815260200160405180910390a3506001979650505050505050565b600160a060020a0382166000908152600960205260408120548216818080805b600654831015610d3457600283900a91508682161515610cb757610d29565b60008286161115610ccd57600190930192610d29565b610d17600684815481101515610cdf57fe5b9060005260206000209001604080519081016040529054600160a060020a038116825260a060020a900460ff16602082015289610d40565b90506064811115610d29576001909301925b600190920191610c98565b50919695505050505050565b6000808351600160a060020a03166370a08231846000604051602001526040517c010000000000000000000000000000000000000000000000000000000063ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610db457600080fd5b6102c65a03f11515610dc557600080fd5b5050506040518051915050602084015160ff16600a0a81811515610de557fe5b04949350505050565b815481835581811511610e1257600083815260209020610e12918101908301610e3b565b505050565b815481835581811511610e1257600083815260209020610e12918101908301610e74565b610e7191905b80821115610e6d57805474ffffffffffffffffffffffffffffffffffffffffff19168155600101610e41565b5090565b90565b610e7191905b80821115610e6d5760008155600101610e7a5600a165627a7a72305820b0d44b807097dfa8fed01216300de6caf02cb3ea24164b46cce89315605440820029"
}