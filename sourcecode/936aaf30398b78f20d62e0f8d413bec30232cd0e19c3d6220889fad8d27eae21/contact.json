{
  "address": "0xa96b24e4987056859411a8f3c7ea4b163395e664",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "EthereumModern",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-01-23\n*/\n\npragma solidity ^0.4.18;\n\n/*--------------------------------------------------\n\n          __  __                                 \n    ___  / /_/ /_  ___  ________  __  ______ ___ \n   / _ \\/ __/ __ \\/ _ \\/ ___/ _ \\/ / / / __ `__ \\\n  /  __/ /_/ / / /  __/ /  /  __/ /_/ / / / / / /\n  \\___/\\__/_/ /_/\\___/_/   \\___/\\__,_/_/ /_/ /_/                       \n       ____ ___  ____  ____/ /__  _________ \n      / __ `__ \\/ __ \\/ __  / _ \\/ ___/ __ \\\n     / / / / / / /_/ / /_/ /  __/ /  / / / /\n    /_/ /_/ /_/\\____/\\__,_/\\___/_/  /_/ /_/ \n\n              Ethereum Modern 1.17\n             www.ethereummodern.com\n        \n        *******************************\n\n\n        Ethereum Modern\n        ---------------\n        ETHMD\n        Limited 15M Coins\n        18 Decimal\n\n\n        ***********\n        * ROADMAP *\n        ***********\n\n       -Stage 1 Pre Sale\n        Price: 10,000 ETHMD (Bonus x5) = 1 ETH \n        Bonus transaction = 0.001 ETHMD\n\n       -Stage 2 ICO\n        Price: 10,000 ETHMD = 1 ETH\n        Bonus transaction = 0.001 ETHMD\n\n       -Stage 3 Special Sale\n        Price: 10,000 ETHMD/X = 1 ETH (X++ ~ payable() > 0.1 ETH)\n        Bonus transaction = 0.001 ETHMD\n\n       -Stage 4 Done\n        Price: Closed\n        Bonus transaction = 0.01 ETHMD\n        \n\n        **************************\n        * ADMIN POSSIBLE ACTIONS *\n        **************************\n\n        1. Start the Ethereum Modern project\n        2. Change the Ethereum Modern Stage\n\n        \"immutable unstoppable\"\n        (The Admin cannot modify coin limit, users' balances, lock accounts, etc.)\n\n        ******************************************************\n\n        License:\n        Public Domain CC0 License.\n        https://creativecommons.org/publicdomain/zero/1.0/\n\n\n--------------------------------------------------*/\n\n\nlibrary SafeMath {\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    function div(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n}\n\n    // Interface ERC20\ncontract ERC20Interface {\n    function totalSupply() public constant returns (uint256);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function transfer(address to, uint tokens) public returns (bool success);\n    event Transfer(address indexed from, address indexed to, uint tokens);\n}\n\ncontract EthereumModern is ERC20Interface {\n    using SafeMath for uint;\n\n    // Stage 1 Pre Sale Offer\n    // Stage 2 ICO\n    // Stage 3 Special Stage\n    uint private CurrentStage = 1;\n    uint256 private stage3divisor = 2;\n\n    address admin;\n    address vault_developers = 0x2E3067e55FE0F78Cc7C04cdA3A4E200619DaA03F;\n    address vault_designers = 0xa47100b57e3B5c331FA9b4979945335be7d1E5ba;\n    address vault_marketing = 0x308445b1C9349a3E502141FBe77506B7a7e51a95;\n    address vault_community = 0x0C5e9AF88D03528F964760b13fe915C661972246;\n    address vault_manualSale = 0x4FBC7650e9b6973E9949bBd0e3Aa48D72Fb484d4;\n\n    // Max Coins 15M (10M Distribution) Unstoppable\n    uint256 private MaxCoinsLimit15M = 15000000 * 1000000000000000000;\n    \n    // 2M Reserved for the Staff\n    // 2M Reserved for community\n    uint256 private amountPreDonateETHMD = 4000000 * 1000000000000000000;\n\n    // >1M Manual Sale Promotional\n    uint256 private amountManualSaleETHMD = 1125800 * 1000000000000000000;\n    \n    uint256 private amountPreSaleETHMD = 0;\n    uint256 private amountICOETHMD = 0;\n    uint256 private amountSpecialETHMD = 0;\n    uint256 private amountTransETHMD = 0;\n    \n    uint256 private amountPreSaleETH = 0;\n    uint256 private amountICOETH = 0;\n    uint256 private amountSpecialETH = 0;\n    \n\n    string public symbol;\n    string public name;\n    string public webSite;\n    \n    uint8 public decimals;\n    uint private _totalSupply;\n\n    mapping(address => uint) balances;\n    mapping(address => uint) rewards;\n\n    function EthereumModern() public {\n        \n        symbol = \"ETHMD\";\n        name = \"Ethereum Modern\";\n        webSite = \"www.ethereummodern.com\";\n        decimals = 18;\n\n        // Max Coins 15M (2M Staff / 2M Community / 1M Promotional / 10M Distribution / 1M < RewardTransactionSystem)\n        _totalSupply = MaxCoinsLimit15M;\n        \n        admin = msg.sender;\n        \n        // 2M Reserved for the Staff\n        balances[vault_developers] += amountPreDonateETHMD / 4;\n        Transfer(address(0), vault_developers, amountPreDonateETHMD / 4);\n        balances[vault_designers] += amountPreDonateETHMD / 4;\n        Transfer(address(0), vault_designers, amountPreDonateETHMD / 4);\n        \n        // 2M Reserved for Community\n        balances[vault_community] += amountPreDonateETHMD / 2;\n        Transfer(address(0), vault_community, amountPreDonateETHMD / 2);\n        \n        // 1M Manual Sale Promotional\n        balances[vault_manualSale] += amountManualSaleETHMD;\n        Transfer(address(0), vault_manualSale, amountManualSaleETHMD);\n        \n    }\n      \n    function currentStatus() public constant returns (string)\n    {\n        if(CurrentStage==1) { \n            return \"Stage 1/4. Pre Sale.\";\n        }else if (CurrentStage == 2){\n            return \"Stage 2/4. ICO Sale.\";\n        }else if (CurrentStage == 3){\n            return \"Stage 3/4. Special Sale.\";\n        }else{\n            return \"All working correctly.\";\n        }\n    }\n\n    \n    function currentAmountReceivedDeposit1Ether18Decimals() public constant returns (uint256)\n    {\n        uint256 amountETHMD = 0;\n        uint256 amountETH = 1000000000000000000 * 10000;\n        if(CurrentStage==1) { \n            amountETHMD = amountETH.mul(5) ;\n        }else if (CurrentStage == 2){\n            amountETHMD = amountETH ;\n        }else if (CurrentStage == 3){\n            amountETHMD = amountETH.div(stage3divisor);\n        }\n        return amountETHMD;\n    }\n\n    function currentCoinsCreated18Decimals() public constant returns (uint256)\n    {\n        return amountPreSaleETHMD + \n               amountICOETHMD + \n               amountSpecialETHMD + \n               amountPreDonateETHMD + \n               amountManualSaleETHMD + \n               amountTransETHMD;\n    }\n\n    function currentCoinsCreatedInteger() public constant returns (uint256)\n    {\n        return (amountPreSaleETHMD + \n                amountICOETHMD + \n                amountSpecialETHMD + \n                amountPreDonateETHMD + \n                amountManualSaleETHMD + \n                amountTransETHMD).div(1000000000000000000);\n    }\n\n    function CoinsLimitUnalterableInteger() public constant returns (uint256)\n    {\n        return MaxCoinsLimit15M.div(1000000000000000000);\n    }\n\n    function currentCoinsCreatedPercentage() public constant returns (uint256)\n    {\n        return (amountPreSaleETHMD + \n                amountICOETHMD +\n                amountSpecialETHMD + \n                amountPreDonateETHMD + \n                amountManualSaleETHMD + \n                amountTransETHMD).mul(1000).div(MaxCoinsLimit15M).mul(100).div(1000) ;\n    }\n\n    function totalSupply() public constant returns (uint256) {\n        return _totalSupply  - balances[address(0)];\n    }\n\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n        return balances[tokenOwner];\n    }\n\n    function transfer(address to, uint tokens) public returns (bool success) {\n\n        /*********************/\n        /* Transaction Check */\n        /*********************/\n\n        require(to != 0x0);\n        require(tokens > 0);\n        require(balances[msg.sender] >= tokens);\n        require(balances[to] + tokens > balances[to]);\n\n        /***************/\n        /* Transaction */\n        /***************/\n\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n\n        Transfer(msg.sender, to, tokens);\n\n        /*********************************************/\n        /* Ethereum Modern Reward Transaction System */\n        /*********************************************/\n\n            uint256 rewardvalue = 1000000000000000;\n            if (CurrentStage==4) { rewardvalue = 10000000000000000; }\n            if ( amountPreSaleETHMD + \n                 amountICOETHMD + \n                 amountSpecialETHMD + \n                 amountPreDonateETHMD + \n                 amountManualSaleETHMD + \n                 rewardvalue + \n                 amountTransETHMD + 1000000000000000000\n                 <= MaxCoinsLimit15M ) {\n                if (tokens > 100 * 1000000000000000000) {\n                    // 1M Reward Max\n                    if (amountTransETHMD < 1000000 * 1000000000000000000 ) {\n                        if (rewards[msg.sender] < 10 ) { \n                        rewards[msg.sender]++;\n                        amountTransETHMD += rewardvalue;\n                        balances[msg.sender] += rewardvalue;\n                        Transfer(address(0), msg.sender, rewardvalue);\n                        }\n                    }\n                }\n            }\n\n        return true;\n    }\n\n        /*****************/\n        /* Stages System */\n        /*****************/\n\n    function nextStage() public {\n        \n        require(msg.sender == admin);\n        \n        if (CurrentStage == 1) {\n            recoverVault(amountPreSaleETH.div(3).div(3));\n            CurrentStage = 2;\n        }else if( CurrentStage == 2) {\n            recoverVault(amountPreSaleETH.div(3).div(3));\n            recoverVault(amountICOETH.div(2).div(3));\n            CurrentStage = 3;\n        }else if( CurrentStage == 3) {\n            recoverVault(amountPreSaleETH.div(3).div(3));\n            recoverVault(amountICOETH.div(2).div(3));\n            recoverVault(amountSpecialETH.div(3));\n            CurrentStage = 4;\n        }else if( CurrentStage == 4) {\n            stage4();\n        }\n    }\n\n    function stage4() private {\n\n        // if > 1M = exced for community\n        // if < 1M = reward for transactions\n\n        if ( amountPreSaleETHMD + \n            amountICOETHMD + \n            amountSpecialETHMD + \n            amountPreDonateETHMD + \n            amountManualSaleETHMD + \n            1000000 * 1000000000000000000 + \n            amountTransETHMD \n            <= MaxCoinsLimit15M ) {\n\n            balances[vault_community] += 1000000 * 1000000000000000000;\n            Transfer(address(0), vault_community, 1000000 * 1000000000000000000);\n            amountPreDonateETHMD += 1000000 * 1000000000000000000;\n\n        }\n    }\n\n    function recoverVault(uint256 founds) private {\n        vault_developers.transfer(founds);\n        vault_designers.transfer(founds);\n        vault_marketing.transfer(founds);\n    }\n\n        /******************/\n        /* Payable System */\n        /******************/\n\n    function () public payable {\n\n      require(CurrentStage < 4);\n      require( msg.value >= 1* (1 ether) / 100 ); // 0.01 ether min\n          \n          uint256 amountETHMD = 0;\n          uint256 amountETH = msg.value;\n          \n          if(CurrentStage==1) { \n              amountETHMD = (amountETH * 10000).mul(5);\n          }else if (CurrentStage == 2){\n              amountETHMD = amountETH * 10000;\n          }else if (CurrentStage == 3){\n              amountETHMD = (amountETH * 10000).div(stage3divisor) ;\n          }\n          \n      require(  amountPreSaleETHMD + \n                amountICOETHMD + \n                amountSpecialETHMD + \n                amountPreDonateETHMD + \n                amountManualSaleETHMD + \n                amountETHMD + \n                amountTransETHMD \n                <= MaxCoinsLimit15M );\n\n          if(CurrentStage==1) { \n              amountPreSaleETHMD += amountETHMD;\n              amountPreSaleETH += amountETH;\n          }else if (CurrentStage == 2){\n              amountICOETHMD += amountETHMD;\n              amountICOETH += amountETH;\n          }else if (CurrentStage == 3){\n              amountSpecialETHMD += amountETHMD;\n              amountSpecialETH += amountETH;\n              if (amountETH >= 100000000000000000) { // 0.1 eth\n              stage3divisor += 1;\n              }\n          }\n\n        balances[msg.sender] += amountETHMD;\n        Transfer(address(0), msg.sender, amountETHMD);\n         \n    }\n\n\n}",
  "bytecode": "606060405260016000818155600290915560038054600160a060020a0319908116732e3067e55fe0f78cc7c04cda3a4e200619daa03f1790915560048054821673a47100b57e3b5c331fa9b4979945335be7d1e5ba17905560058054821673308445b1c9349a3e502141fbe77506b7a7e51a95179055600680548216730c5e9af88d03528f964760b13fe915c66197224617905560078054909116734fbc7650e9b6973e9949bbd0e3aa48d72fb484d41790556a0c685fa11e01ec6f0000006008556a034f086f3b33b68400000060095569ee65bd8397f66da00000600a55600b819055600c819055600d819055600e819055600f819055601081905560115534156200010b57600080fd5b60408051908101604052600581527f4554484d44000000000000000000000000000000000000000000000000000000602082015260129080516200015492916020019062000389565b5060408051908101604052600f81527f457468657265756d204d6f6465726e0000000000000000000000000000000000602082015260139080516200019e92916020019062000389565b5060408051908101604052601681527f7777772e657468657265756d6d6f6465726e2e636f6d0000000000000000000060208201526014908051620001e892916020019062000389565b506015805460ff1916601217905560085460165560028054600160a060020a033316600160a060020a031990911617905560095460049060038054600160a060020a03908116600090815260176020526040812080549590940490940190925554600954911691906000805160206200119a833981519152906004900460405190815260200160405180910390a360095460049060048054600160a060020a0390811660009081526017602052604081208054959094049094019092558054600954921692916000805160206200119a83398151915291900460405190815260200160405180910390a360095460029060068054600160a060020a03908116600090815260176020526040812080549590940490940190925554600954911691906000805160206200119a833981519152906002900460405190815260200160405180910390a3600a805460078054600160a060020a0390811660009081526017602052604080822080549095019094559154935493169290916000805160206200119a83398151915291905190815260200160405180910390a36200042e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003cc57805160ff1916838001178555620003fc565b82800160010185558215620003fc579182015b82811115620003fc578251825591602001919060010190620003df565b506200040a9291506200040e565b5090565b6200042b91905b808211156200040a576000815560010162000415565b90565b610d5c806200043e6000396000f3006060604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461023e57806318160ddd146102c8578063313ce567146102ed57806334a8c392146103165780633a6fbacb1461032957806370a082311461033c57806371beae971461035b5780638dc850dc1461036e57806395d89b4114610381578063a9059cbb14610394578063bfbccfae146103ca578063ee3743ab146103dd578063ef8a9235146103f2578063f7cb570914610405575b60008060046000541015156100e357600080fd5b662386f26fc100003410156100f757600080fd5b5050600080543490600114156101235761011c6127108202600563ffffffff61041816565b9150610160565b6000546002141561013a5780612710029150610160565b600054600314156101605760015461015d9061271083029063ffffffff61044316565b91505b600854600e54600a54600954600d54600c54600b5401010101840101111561018757600080fd5b600054600114156101a757600b805483019055600f8054820190556101fa565b600054600214156101c757600c80548301905560108054820190556101fa565b600054600314156101fa57600d805483019055601180548201905567016345785d8a000081106101fa5760018054810190555b600160a060020a033316600081815260176020526040808220805486019055600080516020610d118339815191529085905190815260200160405180910390a35050005b341561024957600080fd5b610251610464565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561028d578082015183820152602001610275565b50505050905090810190601f1680156102ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102d357600080fd5b6102db610502565b60405190815260200160405180910390f35b34156102f857600080fd5b610300610535565b60405160ff909116815260200160405180910390f35b341561032157600080fd5b61025161053e565b341561033457600080fd5b6102db6105a9565b341561034757600080fd5b6102db600160a060020a0360043516610616565b341561036657600080fd5b6102db610631565b341561037957600080fd5b6102db61068c565b341561038c57600080fd5b6102516106bf565b341561039f57600080fd5b6103b6600160a060020a036004351660243561072a565b604051901515815260200160405180910390f35b34156103d557600080fd5b6102db610936565b34156103e857600080fd5b6103f0610950565b005b34156103fd57600080fd5b610251610a72565b341561041057600080fd5b6102db610b87565b818102821580610432575081838281151561042f57fe5b04145b151561043d57600080fd5b92915050565b600080821161045157600080fd5b818381151561045c57fe5b049392505050565b60138054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104fa5780601f106104cf576101008083540402835291602001916104fa565b820191906000526020600020905b8154815290600101906020018083116104dd57829003601f168201915b505050505081565b6000805260176020527fd840e16649f6b9a295d95876f4633d3a6b10b55e8162971cf78afd886d5ec89b54601654035b90565b60155460ff1681565b60148054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104fa5780601f106104cf576101008083540402835291602001916104fa565b60008054819069021e19e0c9bab240000090600114156105db576105d481600563ffffffff61041816565b9150610610565b600054600214156105ee57809150610610565b600054600314156106105760015461060d90829063ffffffff61044316565b91505b50919050565b600160a060020a031660009081526017602052604090205490565b60006106876103e861066f606461067b60085461066f6103e8600e54600a54600954600d54600c54600b54010101010161041890919063ffffffff16565b9063ffffffff61044316565b9063ffffffff61041816565b905090565b6000610687670de0b6b3a7640000600e54600a54600954600d54600c54600b54010101010161044390919063ffffffff16565b60128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104fa5780601f106104cf576101008083540402835291602001916104fa565b600080600160a060020a038416151561074257600080fd5b6000831161074f57600080fd5b600160a060020a0333166000908152601760205260409020548390101561077557600080fd5b600160a060020a0384166000908152601760205260409020548381011161079b57600080fd5b600160a060020a0333166000908152601760205260409020546107c4908463ffffffff610ba516565b600160a060020a0333811660009081526017602052604080822093909355908616815220546107f9908463ffffffff610bba16565b600160a060020a038086166000818152601760205260409081902093909355913390911690600080516020610d118339815191529086905190815260200160405180910390a366038d7ea4c6800090506000546004141561085e5750662386f26fc100005b600854600e5482600a54600954600d54600c54600b54010101010101670de0b6b3a76400000111151561092c5768056bc75e2d6310000083111561092c5769d3c21bcecceda1000000600e54101561092c57600160a060020a033316600090815260186020526040902054600a90101561092c57600160a060020a033316600081815260186020908152604080832080546001019055600e8054860190556017909152808220805485019055600080516020610d118339815191529084905190815260200160405180910390a35b5060019392505050565b600e54600a54600954600d54600c54600b54010101010190565b60025433600160a060020a0390811691161461096b57600080fd5b600054600114156109a357610999610994600361066f6003600f5461044390919063ffffffff16565b610bca565b6002600055610a70565b600054600214156109f4576109cc610994600361066f6003600f5461044390919063ffffffff16565b6109ea610994600361066f600260105461044390919063ffffffff16565b6003600055610a70565b60005460031415610a5d57610a1d610994600361066f6003600f5461044390919063ffffffff16565b610a3b610994600361066f600260105461044390919063ffffffff16565b601154610a539061099490600363ffffffff61044316565b6004600055610a70565b60005460041415610a7057610a70610c66565b565b610a7a610cfe565b60005460011415610ac05760408051908101604052601481527f537461676520312f342e205072652053616c652e00000000000000000000000060208201529050610532565b60005460021415610b065760408051908101604052601481527f537461676520322f342e2049434f2053616c652e00000000000000000000000060208201529050610532565b60005460031415610b4c5760408051908101604052601881527f537461676520332f342e205370656369616c2053616c652e000000000000000060208201529050610532565b60408051908101604052601681527f416c6c20776f726b696e6720636f72726563746c792e0000000000000000000060208201529050610532565b60085460009061068790670de0b6b3a764000063ffffffff61044316565b600082821115610bb457600080fd5b50900390565b8181018281101561043d57600080fd5b600354600160a060020a031681156108fc0282604051600060405180830381858888f193505050501515610bfd57600080fd5b600454600160a060020a031681156108fc0282604051600060405180830381858888f193505050501515610c3057600080fd5b600554600160a060020a031681156108fc0282604051600060405180830381858888f193505050501515610c6357600080fd5b50565b600854600e54600a54600954600d54600c54600b54010101010169d3c21bcecceda10000000111610a705760068054600160a060020a03908116600090815260176020526040808220805469d3c21bcecceda10000009081019091559354909216929091600080516020610d1183398151915291905190815260200160405180910390a36009805469d3c21bcecceda1000000019055565b602060405190810160405260008152905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820098bd93d276e0fa0f2f232dbc542668e38024ba54ae502598f12fde0c4e801b50029ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
  "constructorArguments": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
}