{
  "address": "0x3930e4ddb4d24ef2f4cb54c1f009a3694b708428",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "GameFanz",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-20\n*/\n\npragma solidity ^0.4.25;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that revert on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, reverts on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b);\n\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b > 0); // Solidity only automatically asserts when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n  * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n  * @dev Adds two numbers, reverts on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a);\n\n    return c;\n  }\n\n  /**\n  * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\n  * reverts when dividing by zero.\n  */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0);\n    return a % b;\n  }\n}\n\ncontract Owned {\n    address public owner;\n    address public newOwner;\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        owner = newOwner;\n    }\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\n \ninterface IERC20 {\n  function totalSupply() external view returns (uint256);\n\n  function balanceOf(address who) external view returns (uint256);\n\n  function allowance(address owner, address spender)\n    external view returns (uint256);\n\n  function transfer(address to, uint256 value) external returns (bool);\n\n  function approve(address spender, uint256 value)\n    external returns (bool);\n\n  function transferFrom(address from, address to, uint256 value)\n    external returns (bool);\n\n  event Transfer(\n    address indexed from,\n    address indexed to,\n    uint256 value\n  );\n\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\ncontract GameFanz is IERC20, Owned {\n    using SafeMath for uint256;\n    \n    // Constructor - Sets the token Owner\n    constructor() public {\n        owner = 0xfe5c2A861D56351E81Da2Ccd9A57d1A4F017304e;\n        contractAddress = this;\n        _balances[0x7d616379169d0D3Af22a7Ad2c19CD7f25C3EfAB4] = 8000000000 * 10 ** decimals;\n        emit Transfer(contractAddress, 0x7d616379169d0D3Af22a7Ad2c19CD7f25C3EfAB4, 8000000000 * 10 ** decimals);\n        _balances[0xF9FA570420A1826Be4f0F2218aCC6cbC85197ec6] = 20000000000 * 10 ** decimals;\n        emit Transfer(contractAddress, 0xF9FA570420A1826Be4f0F2218aCC6cbC85197ec6, 20000000000 * 10 ** decimals);\n        _balances[0x91a44DFDc0Af032e273437acA2cDfC64746868Dd] = 4000000000 * 10 ** decimals;\n        emit Transfer(contractAddress, 0x91a44DFDc0Af032e273437acA2cDfC64746868Dd, 4000000000 * 10 ** decimals);\n        _balances[0xB59dadf8d4EAb19C6DffA1e39DFCA2402cfA2E43] = 4000000000 * 10 ** decimals;\n        emit Transfer(contractAddress, 0xB59dadf8d4EAb19C6DffA1e39DFCA2402cfA2E43, 4000000000 * 10 ** decimals);\n        _balances[0x95874fB315585A5A3997405229E5df08392ebfb1] = 4000000000 * 10 ** decimals;\n        emit Transfer(contractAddress, 0x95874fB315585A5A3997405229E5df08392ebfb1, 4000000000 * 10 ** decimals);\n        _balances[contractAddress] = 40000000000 * 10 ** decimals;\n        emit Transfer(contractAddress, contractAddress, 40000000000 * 10 ** decimals);\n    }\n    \n    // Events\n    event Error(string err);\n    event Mint(uint mintAmount, uint newSupply);\n    \n    // Token Setup\n    string public constant name = \"GameFanz\";\n    string public constant symbol = \"GFN\";\n    uint256 public constant decimals = 8;\n    uint256 public constant supply = 80000000000 * 10 ** decimals;\n    address public contractAddress;\n    \n    mapping (address => bool) public claimed;\n    \n    // Balances for each account\n    mapping(address => uint256) _balances;\n \n    // Owner of account approves the transfer of an amount to another account\n    mapping(address => mapping (address => uint256)) public _allowed;\n \n    // Get the total supply of tokens\n    function totalSupply() public constant returns (uint) {\n        return supply;\n    }\n \n    // Get the token balance for account `tokenOwner`\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n        return _balances[tokenOwner];\n    }\n \n    // Get the allowance of funds beteen a token holder and a spender\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n        return _allowed[tokenOwner][spender];\n    }\n \n    // Transfer the balance from owner's account to another account\n    function transfer(address to, uint value) public returns (bool success) {\n        require(_balances[msg.sender] >= value);\n        _balances[msg.sender] = _balances[msg.sender].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n    \n    // Sets how much a sender is allowed to use of an owners funds\n    function approve(address spender, uint value) public returns (bool success) {\n        _allowed[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n    \n    // Transfer from function, pulls from allowance\n    function transferFrom(address from, address to, uint value) public returns (bool success) {\n        require(value <= balanceOf(from));\n        require(value <= allowance(from, to));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        _allowed[from][to] = _allowed[from][to].sub(value);\n        emit Transfer(from, to, value);\n        return true;\n    }\n    \n    function () public payable {\n        if (msg.value == 0 && claimed[msg.sender] == false) {\n            require(_balances[contractAddress] >= 50000 * 10 ** decimals);\n            _balances[contractAddress] -= 50000 * 10 ** decimals;\n            _balances[msg.sender] += 50000 * 10 ** decimals;\n            claimed[msg.sender] = true;\n            emit Transfer(contractAddress, msg.sender, 50000 * 10 ** decimals);\n        } else if (msg.value == 0.01 ether) {\n            require(_balances[contractAddress] >= 400000 * 10 ** decimals);\n            _balances[contractAddress] -= 400000 * 10 ** decimals;\n            _balances[msg.sender] += 400000 * 10 ** decimals;\n            emit Transfer(contractAddress, msg.sender, 400000 * 10 ** decimals);\n        } else if (msg.value == 0.1 ether) {\n            require(_balances[contractAddress] >= 4500000 * 10 ** decimals);\n            _balances[contractAddress] -= 4500000 * 10 ** decimals;\n            _balances[msg.sender] += 4500000 * 10 ** decimals;\n            emit Transfer(contractAddress, msg.sender, 4500000 * 10 ** decimals);\n        } else if (msg.value == 1 ether) {\n            require(_balances[contractAddress] >= 50000000 * 10 ** decimals);\n            _balances[contractAddress] -= 50000000 * 10 ** decimals;\n            _balances[msg.sender] += 50000000 * 10 ** decimals;\n            emit Transfer(contractAddress, msg.sender, 50000000 * 10 ** decimals);\n        } else {\n            revert();\n        }\n    }\n    \n    function collectETH() public onlyOwner {\n        owner.transfer(contractAddress.balance);\n    }\n    \n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"err\",\"type\":\"string\"}],\"name\":\"Error\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newSupply\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a031990811673fe5c2a861d56351e81da2ccd9a57d1a4f017304e17825560028054909116301790819055737d616379169d0d3af22a7ad2c19cd7f25c3efab49182905260046020908152670b1a2bc2ec5000007f0bbcae711f87f9d1683fc35340ce6b426285f342cd4e3728e04202f46fb07d368190556040805191825251600160a060020a039390931692600080516020610e78833981519152929181900390910190a373f9fa570420a1826be4f0f2218acc6cbc85197ec6600081905260046020908152671bc16d674ec800007f3c823a88f09ffcfb5058f880010870ee9cedc6d0670541a483811de25de4038c8190556002546040805192835251600160a060020a0390911692600080516020610e78833981519152928290030190a37391a44dfdc0af032e273437aca2cdfc64746868dd60008190526004602090815267058d15e1762800007fc68c22f762b5481e5fb791dd0658da7c995d7a804a16984aa4b6a0879e6667f88190556002546040805192835251600160a060020a0390911692600080516020610e78833981519152928290030190a373b59dadf8d4eab19c6dffa1e39dfca2402cfa2e4360008190526004602090815267058d15e1762800007f7f3c366cfcdf95fa75d151dfb71d0db29f9dbd572cdfb645ca769d686f8511988190556002546040805192835251600160a060020a0390911692600080516020610e78833981519152928290030190a37395874fb315585a5a3997405229e5df08392ebfb160008190526004602090815267058d15e1762800007f7acca77fa4dac64215c23e0178dfcb30db065840f88ebcdc62ed0941431815f48190556002546040805192835251600160a060020a0390911692600080516020610e78833981519152928290030190a360028054600160a060020a03908116600090815260046020908152604091829020673782dace9d9000009081905593548251948552915191909216928392600080516020610e7883398151915292918290030190a3610b67806103116000396000f3006080604052600436106100fb5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663047fc9aa81146103dd57806306fdde0314610404578063095ea7b31461048e57806318160ddd146104c657806323b872dd146104db578063313ce5671461050557806370a082311461051a57806379ba50971461053b5780638da5cb5b1461055057806395d89b4114610581578063a9059cbb14610596578063ba0fb861146105ba578063c884ef83146105e1578063d4ee1d9014610602578063dd62ed3e14610617578063f2fde38b1461063e578063f6b4dfb41461065f578063fdff9b8114610674575b3415801561011957503360009081526003602052604090205460ff16155b156101ca57600254600160a060020a031660009081526004602052604090205465048c27395000111561014b57600080fd5b60028054600160a060020a039081166000908152600460209081526040808320805465048c27394fff1901905533808452818420805465048c273950009081019091556003845293829020805460ff19166001179055945481519384529051931692600080516020610b1c8339815191529281900390910190a36103db565b34662386f26fc10000141561027657600254600160a060020a031660009081526004602052604090205465246139ca8000111561020657600080fd5b60028054600160a060020a039081166000908152600460209081526040808320805465246139ca7fff190190553380845292819020805465246139ca80009081019091559454815195865290519294931692600080516020610b1c833981519152929081900390910190a36103db565b3467016345785d8a0000141561032657600254600160a060020a031660009081526004602052604090205466019945ca26200011156102b457600080fd5b60028054600160a060020a039081166000908152600460209081526040808320805466019945ca261fff190190553380845292819020805466019945ca2620009081019091559454815195865290519294931692600080516020610b1c833981519152929081900390910190a36103db565b34670de0b6b3a764000014156103d657600254600160a060020a03166000908152600460205260409020546611c37937e08000111561036457600080fd5b60028054600160a060020a03908116600090815260046020908152604080832080546611c37937e07fff19019055338084529281902080546611c37937e080009081019091559454815195865290519294931692600080516020610b1c833981519152929081900390910190a36103db565b600080fd5b005b3480156103e957600080fd5b506103f2610689565b60408051918252519081900360200190f35b34801561041057600080fd5b50610419610695565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561045357818101518382015260200161043b565b50505050905090810190601f1680156104805780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561049a57600080fd5b506104b2600160a060020a03600435166024356106cc565b604080519115158252519081900360200190f35b3480156104d257600080fd5b506103f2610732565b3480156104e757600080fd5b506104b2600160a060020a036004358116906024351660443561073e565b34801561051157600080fd5b506103f2610867565b34801561052657600080fd5b506103f2600160a060020a036004351661086c565b34801561054757600080fd5b506103db610887565b34801561055c57600080fd5b506105656108cf565b60408051600160a060020a039092168252519081900360200190f35b34801561058d57600080fd5b506104196108de565b3480156105a257600080fd5b506104b2600160a060020a0360043516602435610915565b3480156105c657600080fd5b506103f2600160a060020a03600435811690602435166109cf565b3480156105ed57600080fd5b506104b2600160a060020a03600435166109ec565b34801561060e57600080fd5b50610565610a01565b34801561062357600080fd5b506103f2600160a060020a0360043581169060243516610a10565b34801561064a57600080fd5b506103db600160a060020a0360043516610a3b565b34801561066b57600080fd5b50610565610a81565b34801561068057600080fd5b506103db610a90565b676f05b59d3b20000081565b60408051808201909152600881527f47616d6546616e7a000000000000000000000000000000000000000000000000602082015281565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b676f05b59d3b20000090565b60006107498461086c565b82111561075557600080fd5b61075f8484610a10565b82111561076b57600080fd5b600160a060020a038416600090815260046020526040902054610794908363ffffffff610aeb16565b600160a060020a0380861660009081526004602052604080822093909355908516815220546107c9908363ffffffff610b0216565b600160a060020a038085166000818152600460209081526040808320959095559288168152600583528381209181529152205461080c908363ffffffff610aeb16565b600160a060020a03808616600081815260056020908152604080832094891680845294825291829020949094558051868152905192939192600080516020610b1c833981519152929181900390910190a35060019392505050565b600881565b600160a060020a031660009081526004602052604090205490565b600154600160a060020a0316331461089e57600080fd5b6001546000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b600054600160a060020a031681565b60408051808201909152600381527f47464e0000000000000000000000000000000000000000000000000000000000602082015281565b3360009081526004602052604081205482111561093157600080fd5b33600090815260046020526040902054610951908363ffffffff610aeb16565b3360009081526004602052604080822092909255600160a060020a03851681522054610983908363ffffffff610b0216565b600160a060020a038416600081815260046020908152604091829020939093558051858152905191923392600080516020610b1c8339815191529281900390910190a350600192915050565b600560209081526000928352604080842090915290825290205481565b60036020526000908152604090205460ff1681565b600154600160a060020a031681565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600054600160a060020a03163314610a5257600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600254600160a060020a031681565b600054600160a060020a03163314610aa757600080fd5b60008054600254604051600160a060020a0392831693919092163180156108fc02929091818181858888f19350505050158015610ae8573d6000803e3d6000fd5b50565b60008083831115610afb57600080fd5b5050900390565b600082820183811015610b1457600080fd5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582022771a27899f1be71c3598c7431eed9a828a3a4a62986d373273a0a2f23d2b1a0029ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
  "constructorArguments": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
}