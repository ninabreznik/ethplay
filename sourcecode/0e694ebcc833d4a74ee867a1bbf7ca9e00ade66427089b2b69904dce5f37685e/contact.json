{
  "address": "0xa51fe7f0ef85c220e4b2c4e4fa131c67f6690d5a",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ImmAirDropB",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-09\n*/\n\npragma solidity ^0.4.21;\n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract ImmAirDropB{\n    using SafeMath for uint256;\n    uint256 public decimals = 18;\n    address public wallet;\n    ERC20 public token;\n    mapping (address => bool) public admins;\n\n\t\n     function ImmAirDropB(ERC20 _token, address _wallet) public {\n        require(_token != address(0));\n        token = _token;\n        admins[msg.sender] = true;\n        admins[_wallet] = true;\n        wallet = _wallet;\n    }\n\n   modifier onlyAdmin {\n        require(admins[msg.sender]);\n        _;\n    }\n\n\tfunction addAdminWhitelist(address _userlist) public onlyAdmin{\n\t\tif(_userlist != address(0) && !admins[_userlist]){\n\t\t\tadmins[_userlist] = true;\n\t\t}\n\t}\n\n    function signupUserWhitelist(address[] _userlist, uint256 _amttype) public onlyAdmin{\n    \trequire(_userlist.length > 0);\n    \tuint256 useamt = _amttype * (10 ** uint256(decimals));\n    \tfor (uint256 i = 0; i < _userlist.length; i++) {\n    \t\tif(_userlist[i] != address(0)){\n    \t\t\ttoken.transfer(_userlist[i], useamt);\n    \t\t}\n    \t}\n    }\n\t\n\tfunction () external payable {\n\t\trevert();\n\t}\n\t\n}",
  "bytecode": "60606040526012600055341561001457600080fd5b6040516040806107aa83398101604052808051906020019091908051906020019091905050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561007557600080fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506105f2806101b86000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063171582281461007d578063313ce567146100e0578063429b62e514610109578063521eb2731461015a578063cbed1568146101af578063fc0c546a146101e8575b600080fd5b341561008857600080fd5b6100de60048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190803590602001909190505061023d565b005b34156100eb57600080fd5b6100f3610414565b6040518082815260200191505060405180910390f35b341561011457600080fd5b610140600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061041a565b604051808215151515815260200191505060405180910390f35b341561016557600080fd5b61016d61043a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101ba57600080fd5b6101e6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610460565b005b34156101f357600080fd5b6101fb6105a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561029857600080fd5b600084511115156102a857600080fd5b600054600a0a83029150600090505b835181101561040e57600073ffffffffffffffffffffffffffffffffffffffff1684828151811015156102e657fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614151561040157600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858381518110151561035957fe5b90602001906020020151846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156103e857600080fd5b5af115156103f557600080fd5b50505060405180519050505b80806001019150506102b7565b50505050565b60005481565b60036020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156104b857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561053f5750600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b1561059d576001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058206516ce6584633faf5401165b0ccacbaeae552bb618a40d092dd9bf669911f4be0029000000000000000000000000df4df8ee1bd1c9f01e60ee15e4c2f7643b69069900000000000000000000000002d03f2e17e8b347f91a8b4bbde73e55bbfe6f5b",
  "constructorArguments": "000000000000000000000000df4df8ee1bd1c9f01e60ee15e4c2f7643b69069900000000000000000000000002d03f2e17e8b347f91a8b4bbde73e55bbfe6f5b"
}