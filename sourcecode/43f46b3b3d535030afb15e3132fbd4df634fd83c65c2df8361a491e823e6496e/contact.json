{
  "address": "0x85e4c6619f6351ab7a40b32eea3250e14d7d3120",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "AsseteGram",
  "compilerVersion": "v0.5.7+commit.6da8b019",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-09\n*/\n\npragma solidity 0.5.7;\n/**\n * ███████╗ ██████╗ ██████╗  █████╗ ███╗   ███╗\n * ██╔════╝██╔════╝ ██╔══██╗██╔══██╗████╗ ████║\n * █████╗  ██║  ███╗██████╔╝███████║██╔████╔██║\n * ██╔══╝  ██║   ██║██╔══██╗██╔══██║██║╚██╔╝██║\n * ███████╗╚██████╔╝██║  ██║██║  ██║██║ ╚═╝ ██║\n * ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝                                         \n */\n\n/**\n * @title SafeMath\n * @dev Unsigned math operations with safety checks that revert on error.\n */\nlibrary SafeMath {\n\n    /**\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Adds two unsigned integers, reverts on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n}\n\n/**\n * Token contract interface for external use\n */\ncontract ERC20TokenInterface {\n\n    function balanceOf(address _owner) public view returns (uint256 value);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\n\n    }\n\n/**\n* @title Token definition\n* @dev Define token paramters including ERC20 ones\n*/\ncontract ERC20Token is ERC20TokenInterface {\n    using SafeMath for uint256;\n    uint256 public totalSupply;\n    mapping (address => uint256) balances; //A mapping of all balances per address\n    mapping (address => mapping (address => uint256)) allowed; //A mapping of all allowances\n\n    /**\n    * @dev Get the balance of an specified address.\n    * @param _owner The address to be query.\n    */\n    function balanceOf(address _owner) public view returns (uint256 value) {\n        return balances[_owner];\n    }\n\n    /**\n    * @dev transfer token to a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n    * @dev transfer token from an address to another specified address using allowance\n    * @param _from The address where token comes.\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n    * @dev Assign allowance to an specified address to use the owner balance\n    * @param _spender The address to be allowed to spend.\n    * @param _value The amount to be allowed.\n    */\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n    * @dev Get the allowance of an specified address to use another address balance.\n    * @param _owner The address of the owner of the tokens.\n    * @param _spender The address of the allowed spender.\n    */\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n    * @dev Log Events\n    */\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n/**\n* @title Asset\n* @dev Initial supply creation\n*/\ncontract AsseteGram is ERC20Token {\n    string public name = 'Electronic Gram';\n    uint8 public decimals = 3;\n    string public symbol = 'eGram';\n    string public version = '2';\n\n    constructor() public {\n        address initialOwner = 0xac775cD446889ac167da466692449ece5439fc12;\n        totalSupply = 180000000 * (10**uint256(decimals)); //initial token creation\n        balances[initialOwner] = totalSupply;\n        emit Transfer(address(0), initialOwner, balances[initialOwner]);\n    }\n\n    /**\n    *@dev Function to handle callback calls\n    */\n    function() external {\n        revert();\n    }\n\n}",
  "bytecode": "60c0604052600f60808190527f456c656374726f6e6963204772616d000000000000000000000000000000000060a090815261003e9160039190610176565b506004805460ff191660031790556040805180820190915260058082527f654772616d000000000000000000000000000000000000000000000000000000602090920191825261008e9181610176565b506040805180820190915260018082527f320000000000000000000000000000000000000000000000000000000000000060209092019182526100d391600691610176565b503480156100e057600080fd5b5060045460ff16600a0a630aba950002600081815573ac775cd446889ac167da466692449ece5439fc12808252600160209081527f0e484484458340a11e2adf4815f78a751759bda8e85ebd93837bb570be240b1a849055604080519485525191938493927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a350610211565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101b757805160ff19168380011785556101e4565b828001600101855582156101e4579182015b828111156101e45782518255916020019190600101906101c9565b506101f09291506101f4565b5090565b61020e91905b808211156101f057600081556001016101fa565b90565b610708806102206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806354fd4d501161006657806354fd4d50146101ce57806370a08231146101d657806395d89b41146101fc578063a9059cbb14610204578063dd62ed3e146102305761009e565b806306fdde03146100a3578063095ea7b31461012057806318160ddd1461016057806323b872dd1461017a578063313ce567146101b0575b600080fd5b6100ab61025e565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e55781810151838201526020016100cd565b50505050905090810190601f1680156101125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61014c6004803603604081101561013657600080fd5b506001600160a01b0381351690602001356102ec565b604080519115158252519081900360200190f35b610168610352565b60408051918252519081900360200190f35b61014c6004803603606081101561019057600080fd5b506001600160a01b03813581169160208101359091169060400135610358565b6101b8610463565b6040805160ff9092168252519081900360200190f35b6100ab61046c565b610168600480360360208110156101ec57600080fd5b50356001600160a01b03166104c7565b6100ab6104e2565b61014c6004803603604081101561021a57600080fd5b506001600160a01b03813516906020013561053d565b6101686004803603604081101561024657600080fd5b506001600160a01b03813581169160200135166105ed565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102e45780601f106102b9576101008083540402835291602001916102e4565b820191906000526020600020905b8154815290600101906020018083116102c757829003601f168201915b505050505081565b3360008181526002602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205461038c908363ffffffff61061816565b6001600160a01b0385166000818152600260209081526040808320338452825280832094909455918152600190915220546103cd908363ffffffff61061816565b6001600160a01b038086166000908152600160205260408082209390935590851681522054610402908363ffffffff61067816565b6001600160a01b0380851660008181526001602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b60045460ff1681565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102e45780601f106102b9576101008083540402835291602001916102e4565b6001600160a01b031660009081526001602052604090205490565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102e45780601f106102b9576101008083540402835291602001916102e4565b3360009081526001602052604081205461055d908363ffffffff61061816565b33600090815260016020526040808220929092556001600160a01b0385168152205461058f908363ffffffff61067816565b6001600160a01b0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156106725760408051600160e51b62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156106d55760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fea165627a7a723058208019925ffa1ad49d14362459fa15cb57b3d62504953c6368b818e621807e62120029"
}