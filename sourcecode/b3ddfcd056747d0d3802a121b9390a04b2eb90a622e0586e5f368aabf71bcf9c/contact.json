{
  "address": "0x4b4787aace23eb70da046bcc0ccfe28d4e4fb899",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Smathium Token",
  "contractName": "MainToken",
  "compilerVersion": "v0.5.0+commit.1d4f565a",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-25\n*/\n\npragma solidity >=0.5.0<0.6.0;\n\n//filename: contracts/Consts.sol\ncontract Consts {\n    string constant TOKEN_NAME = \"Smathium\";\n    string constant TOKEN_SYMBOL = \"SMT\";\n    uint8 constant TOKEN_DECIMALS = 18;\n    uint256 constant TOKEN_AMOUNT = 10000000000;\n\n    address payable[] SALE_ETH_WALLET = [0x9fBFbBac0f1faF30d01FDc862CB750EbfA1cD61b, 0x9fBFbBac0f1faF30d01FDc862CB750EbfA1cD61b, 0x9fBFbBac0f1faF30d01FDc862CB750EbfA1cD61b, 0x9fBFbBac0f1faF30d01FDc862CB750EbfA1cD61b];\n    uint256[] SALE_HARD_CAP = [0, 0, 0, 3000000000];\n    uint256[] SALE_SOFT_CAP = [0, 0, 0, 0];\n    uint256[] SALE_RATE = [34826, 29915, 25926, 24561];\n    uint256[] SALE_OPENING_TIME = [0, 0, 0, 1557068400];\n    uint256[] SALE_CLOSING_TIME = [0, 0, 0, 1564412399];\n    uint256[] SALE_MIN_ETH = [5 ether, 5 ether, 1 ether, 1 ether];\n    uint256[] SALE_MAX_ETH = [500 ether, 500 ether, 500 ether, 500 ether];\n}\n\n//filename: contracts/utils/Ownable.sol\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public owner;\n\n\n    event OwnershipRenounced(address indexed previousOwner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n    /**\n     * @dev Allows the current owner to relinquish control of the contract.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipRenounced(owner);\n        owner = address(0);\n    }\n}\n\n//filename: contracts/tokens/ERC20Basic.sol\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n//filename: contracts/utils/SafeMath.sol\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    /**\n      * @dev Multiplies two numbers, throws on overflow.\n      */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        if (a == 0) {\n            return 0;\n        }\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        // uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return a / b;\n    }\n\n    /**\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n//filename: contracts/tokens/BasicToken.sol\n/**\n * @title Basic tokens\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n\n    uint256 totalSupply_;\n\n    /**\n    * @dev total number of tokens in existence\n    */\n    function totalSupply() public view returns (uint256) {\n        return totalSupply_;\n    }\n\n    /**\n    * @dev transfer tokens for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances[_owner];\n    }\n\n}\n\n//filename: contracts/tokens/ERC20.sol\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public view returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n//filename: contracts/tokens/StandardToken.sol\n/**\n * @title Standard ERC20 tokens\n *\n * @dev Implementation of the basic standard tokens.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n\n    /**\n     * @dev Transfer tokens from one address to another\n     * @param _from address The address which you want to send tokens from\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     *\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param _spender The address which will spend the funds.\n     * @param _value The amount of tokens to be spent.\n     */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param _owner address The address which owns the funds.\n     * @param _spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\n     *\n     * approve should be called when allowed[_spender] == 0. To increment\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * @param _spender The address which will spend the funds.\n     * @param _addedValue The amount of tokens to increase the allowance by.\n     */\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    /**\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\n     *\n     * approve should be called when allowed[_spender] == 0. To decrement\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * @param _spender The address which will spend the funds.\n     * @param _subtractedValue The amount of tokens to decrease the allowance by.\n     */\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n}\n\n//filename: contracts/tokens/TransferableToken.sol\n/**\n * @title TransferableToken\n */\ncontract TransferableToken is StandardToken, Ownable {\n    bool public isLock;\n\n    mapping (address => bool) public transferableAddresses;\n\n    constructor() public {\n        isLock = true;\n        transferableAddresses[msg.sender] = true;\n    }\n\n    event Unlock();\n    event TransferableAddressAdded(address indexed addr);\n    event TransferableAddressRemoved(address indexed addr);\n\n    function unlock() public onlyOwner {\n        isLock = false;\n        emit Unlock();\n    }\n\n    function isTransferable(address addr) public view returns(bool) {\n        return !isLock || transferableAddresses[addr];\n    }\n\n    function addTransferableAddresses(address[] memory addrs) public onlyOwner returns(bool success) {\n        for (uint256 i = 0; i < addrs.length; i++) {\n            if (addTransferableAddress(addrs[i])) {\n                success = true;\n            }\n        }\n    }\n\n    function addTransferableAddress(address addr) public onlyOwner returns(bool success) {\n        if (!transferableAddresses[addr]) {\n            transferableAddresses[addr] = true;\n            emit TransferableAddressAdded(addr);\n            success = true;\n        }\n    }\n\n    function removeTransferableAddresses(address[] memory addrs) public onlyOwner returns(bool success) {\n        for (uint256 i = 0; i < addrs.length; i++) {\n            if (removeTransferableAddress(addrs[i])) {\n                success = true;\n            }\n        }\n    }\n\n    function removeTransferableAddress(address addr) public onlyOwner returns(bool success) {\n        if (transferableAddresses[addr]) {\n            transferableAddresses[addr] = false;\n            emit TransferableAddressRemoved(addr);\n            success = true;\n        }\n    }\n\n    /**\n    */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(isTransferable(_from));\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    /**\n    */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(isTransferable(msg.sender));\n        return super.transfer(_to, _value);\n    }\n}\n\n//filename: contracts/utils/Pausable.sol\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n    event Pause();\n    event Unpause();\n\n    bool public paused = false;\n\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused);\n        _;\n    }\n\n    /**\n     * @dev Modifier to makeWhitelist a function callable only when the contract is paused.\n     */\n    modifier whenPaused() {\n        require(paused);\n        _;\n    }\n\n    /**\n     * @dev called by the owner to pause, triggers stopped state\n     */\n    function pause() onlyOwner whenNotPaused public {\n        paused = true;\n        emit Pause();\n    }\n\n    /**\n     * @dev called by the owner to unpause, returns to normal state\n     */\n    function unpause() onlyOwner whenPaused public {\n        paused = false;\n        emit Unpause();\n    }\n}\n\n//filename: contracts/tokens/PausableToken.sol\n/**\n * @title Pausable tokens\n * @dev StandardToken modified with pausable transfers.\n **/\ncontract PausableToken is StandardToken, Pausable {\n\n    function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n        return super.transfer(_to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n        return super.approve(_spender, _value);\n    }\n\n    function increaseApproval(address _spender, uint _addedValue) public whenNotPaused returns (bool success) {\n        return super.increaseApproval(_spender, _addedValue);\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool success) {\n        return super.decreaseApproval(_spender, _subtractedValue);\n    }\n}\n\n//filename: contracts/tokens/BurnableToken.sol\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract BurnableToken is BasicToken, Pausable {\n\n    event Burn(address indexed burner, uint256 value);\n\n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param _value The amount of tokens to be burned.\n     */\n    function burn(uint256 _value) whenNotPaused public {\n        _burn(msg.sender, _value);\n    }\n\n    function _burn(address _who, uint256 _value) internal {\n        require(_value <= balances[_who]);\n        // no need to require value <= totalSupply, since that would imply the\n        // sender's balance is greater than the totalSupply, which *should* be an assertion failure\n\n        balances[_who] = balances[_who].sub(_value);\n        totalSupply_ = totalSupply_.sub(_value);\n        emit Burn(_who, _value);\n        emit Transfer(_who, address(0), _value);\n    }\n}\n\n//filename: contracts/MainToken.sol\n/**\n * @title MainToken\n */\ncontract MainToken is Consts\n    \n    , TransferableToken\n    , PausableToken\n    \n    , BurnableToken\n    {\n    string public constant name = TOKEN_NAME; // solium-disable-line uppercase\n    string public constant symbol = TOKEN_SYMBOL; // solium-disable-line uppercase\n    uint8 public constant decimals = TOKEN_DECIMALS; // solium-disable-line uppercase\n\n    uint256 public constant INITIAL_SUPPLY = TOKEN_AMOUNT * (10 ** uint256(decimals));\n\n    constructor() public {\n        totalSupply_ = INITIAL_SUPPLY;\n        balances[msg.sender] = INITIAL_SUPPLY;\n        emit Transfer(address(0), msg.sender, INITIAL_SUPPLY);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isTransferable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"addTransferableAddresses\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addTransferableAddress\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"removeTransferableAddresses\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferableAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"removeTransferableAddress\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"TransferableAddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"TransferableAddressRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "610100604052739fbfbbac0f1faf30d01fdc862cb750ebfa1cd61b608081815260a082905260c082905260e0919091526200003f90600090600462000295565b50604080516080810182526000808252602082018190529181019190915263b2d05e00606082015262000077906001906004620002ff565b50604080516080810182526000808252602082018190529181018290526060810191909152620000ac90600290600462000353565b506040805160808101825261880a81526174db602082015261654691810191909152615ff16060820152620000e690600390600462000396565b506040805160808101825260008082526020820181905291810191909152635ccefa7060608201526200011d9060049081620002ff565b506040805160808101825260008082526020820181905291810191909152635d3f09ef606082015262000155906005906004620002ff565b5060408051608081018252674563918244f400008082526020820152670de0b6b3a7640000918101829052606081019190915262000198906006906004620003da565b5060408051608081018252681b1ae4d6e2ef500000808252602082018190529181018290526060810191909152620001d590600790600462000424565b50600d805460ff19169055348015620001ed57600080fd5b50600b80547401000000000000000000000000000000000000000033600160a060020a0319909216821760a060020a60ff021916179091556000818152600c60209081526040808320805460ff191660011790556b204fce5e3e25026110000000600981905560088352818420819055815190815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3620004b4565b828054828255906000526020600020908101928215620002ed579160200282015b82811115620002ed5782518254600160a060020a031916600160a060020a03909116178255602090920191600190910190620002b6565b50620002fb9291506200046d565b5090565b82805482825590600052602060002090810192821562000345579160200282015b8281111562000345578251829063ffffffff1690559160200191906001019062000320565b50620002fb92915062000497565b82805482825590600052602060002090810192821562000345579160200282015b8281111562000345578251829060ff1690559160200191906001019062000374565b82805482825590600052602060002090810192821562000345579160200282015b8281111562000345578251829061ffff16905591602001919060010190620003b7565b82805482825590600052602060002090810192821562000345579160200282015b8281111562000345578251829067ffffffffffffffff16905591602001919060010190620003fb565b82805482825590600052602060002090810192821562000345579160200282015b828111156200034557825182906001604860020a031690559160200191906001019062000445565b6200049491905b80821115620002fb578054600160a060020a031916815560010162000474565b90565b6200049491905b80821115620002fb57600081556001016200049e565b61133d80620004c46000396000f3fe60806040526004361061015e5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610163578063095ea7b3146101ed57806309d8da2e1461023a57806318160ddd1461024f578063195055f11461027657806323b872dd146102a95780632ff2e9dc146102ec5780633050226a14610301578063313ce567146103b1578063336fa72c146103dc5780633f4ba83a1461040f57806342966c68146104265780635c975abb14610450578063618c577214610465578063661884631461051557806370a082311461054e578063715018a6146105815780638456cb59146105965780638da5cb5b146105ab57806395d89b41146105dc578063a3f925dd146105f1578063a69df4b514610624578063a9059cbb14610639578063d73dd62314610672578063dd62ed3e146106ab578063e0bc6dea146106e6578063f2fde38b14610719575b600080fd5b34801561016f57600080fd5b5061017861074c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b257818101518382015260200161019a565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f957600080fd5b506102266004803603604081101561021057600080fd5b50600160a060020a038135169060200135610783565b604080519115158252519081900360200190f35b34801561024657600080fd5b506102266107a7565b34801561025b57600080fd5b506102646107c8565b60408051918252519081900360200190f35b34801561028257600080fd5b506102266004803603602081101561029957600080fd5b5035600160a060020a03166107ce565b3480156102b557600080fd5b50610226600480360360608110156102cc57600080fd5b50600160a060020a0381358116916020810135909116906040013561081b565b3480156102f857600080fd5b50610264610841565b34801561030d57600080fd5b506102266004803603602081101561032457600080fd5b81019060208101813564010000000081111561033f57600080fd5b82018360208201111561035157600080fd5b8035906020019184602083028401116401000000008311171561037357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610851945050505050565b3480156103bd57600080fd5b506103c66108af565b6040805160ff9092168252519081900360200190f35b3480156103e857600080fd5b50610226600480360360208110156103ff57600080fd5b5035600160a060020a03166108b4565b34801561041b57600080fd5b50610424610941565b005b34801561043257600080fd5b506104246004803603602081101561044957600080fd5b503561099e565b34801561045c57600080fd5b506102266109bb565b34801561047157600080fd5b506102266004803603602081101561048857600080fd5b8101906020810181356401000000008111156104a357600080fd5b8201836020820111156104b557600080fd5b803590602001918460208302840111640100000000831117156104d757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506109c4945050505050565b34801561052157600080fd5b506102266004803603604081101561053857600080fd5b50600160a060020a038135169060200135610a1c565b34801561055a57600080fd5b506102646004803603602081101561057157600080fd5b5035600160a060020a0316610a39565b34801561058d57600080fd5b50610424610a54565b3480156105a257600080fd5b50610424610ac2565b3480156105b757600080fd5b506105c0610b21565b60408051600160a060020a039092168252519081900360200190f35b3480156105e857600080fd5b50610178610b30565b3480156105fd57600080fd5b506102266004803603602081101561061457600080fd5b5035600160a060020a0316610b67565b34801561063057600080fd5b50610424610b7c565b34801561064557600080fd5b506102266004803603604081101561065c57600080fd5b50600160a060020a038135169060200135610bdc565b34801561067e57600080fd5b506102266004803603604081101561069557600080fd5b50600160a060020a038135169060200135610bf9565b3480156106b757600080fd5b50610264600480360360408110156106ce57600080fd5b50600160a060020a0381358116916020013516610c16565b3480156106f257600080fd5b506102266004803603602081101561070957600080fd5b5035600160a060020a0316610c41565b34801561072557600080fd5b506104246004803603602081101561073c57600080fd5b5035600160a060020a0316610cca565b60408051808201909152600881527f536d61746869756d000000000000000000000000000000000000000000000000602082015281565b600d5460009060ff161561079657600080fd5b6107a08383610d5f565b9392505050565b600b5474010000000000000000000000000000000000000000900460ff1681565b60095490565b600b5460009074010000000000000000000000000000000000000000900460ff1615806108135750600160a060020a0382166000908152600c602052604090205460ff165b90505b919050565b600d5460009060ff161561082e57600080fd5b610839848484610dc5565b949350505050565b6b204fce5e3e2502611000000081565b600b54600090600160a060020a0316331461086b57600080fd5b60005b82518110156108a957610897838281518110151561088857fe5b906020019060200201516108b4565b156108a157600191505b60010161086e565b50919050565b601281565b600b54600090600160a060020a031633146108ce57600080fd5b600160a060020a0382166000908152600c602052604090205460ff16151561081657600160a060020a0382166000818152600c6020526040808220805460ff19166001179055517f6cc2741c133acd5b0cd839bd8def1cfbca405ccefad1795737e6cd6fe259b2969190a2506001919050565b600b54600160a060020a0316331461095857600080fd5b600d5460ff16151561096957600080fd5b600d805460ff191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600d5460ff16156109ae57600080fd5b6109b83382610de6565b50565b600d5460ff1681565b600b54600090600160a060020a031633146109de57600080fd5b60005b82518110156108a957610a0a83828151811015156109fb57fe5b90602001906020020151610c41565b15610a1457600191505b6001016109e1565b600d5460009060ff1615610a2f57600080fd5b6107a08383610ee7565b600160a060020a031660009081526008602052604090205490565b600b54600160a060020a03163314610a6b57600080fd5b600b54604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a2600b805473ffffffffffffffffffffffffffffffffffffffff19169055565b600b54600160a060020a03163314610ad957600080fd5b600d5460ff1615610ae957600080fd5b600d805460ff191660011790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600b54600160a060020a031681565b60408051808201909152600381527f534d540000000000000000000000000000000000000000000000000000000000602082015281565b600c6020526000908152604090205460ff1681565b600b54600160a060020a03163314610b9357600080fd5b600b805474ff0000000000000000000000000000000000000000191690556040517f70e3fffea7bbb557facdee48ed7f7af5179030adef9ad0c876df039a718f359e90600090a1565b600d5460009060ff1615610bef57600080fd5b6107a08383610fd7565b600d5460009060ff1615610c0c57600080fd5b6107a08383610ff7565b600160a060020a039182166000908152600a6020908152604080832093909416825291909152205490565b600b54600090600160a060020a03163314610c5b57600080fd5b600160a060020a0382166000908152600c602052604090205460ff161561081657600160a060020a0382166000818152600c6020526040808220805460ff19169055517f3967ce7f96e7105370df1a03896bff141625d05b31282a8d9f6f54278a1e0cbf9190a2506001919050565b600b54600160a060020a03163314610ce157600080fd5b600160a060020a0381161515610cf657600080fd5b600b54604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600b805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b336000818152600a60209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6000610dd0846107ce565b1515610ddb57600080fd5b610839848484611090565b600160a060020a038216600090815260086020526040902054811115610e0b57600080fd5b600160a060020a038216600090815260086020526040902054610e34908263ffffffff61120916565b600160a060020a038316600090815260086020526040902055600954610e60908263ffffffff61120916565b600955604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b336000908152600a60209081526040808320600160a060020a038616845290915281205480831115610f3c57336000908152600a60209081526040808320600160a060020a0388168452909152812055610f71565b610f4c818463ffffffff61120916565b336000908152600a60209081526040808320600160a060020a03891684529091529020555b336000818152600a60209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000610fe2336107ce565b1515610fed57600080fd5b6107a0838361121b565b336000908152600a60209081526040808320600160a060020a038616845290915281205461102b908363ffffffff6112fe16565b336000818152600a60209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6000600160a060020a03831615156110a757600080fd5b600160a060020a0384166000908152600860205260409020548211156110cc57600080fd5b600160a060020a0384166000908152600a602090815260408083203384529091529020548211156110fc57600080fd5b600160a060020a038416600090815260086020526040902054611125908363ffffffff61120916565b600160a060020a03808616600090815260086020526040808220939093559085168152205461115a908363ffffffff6112fe16565b600160a060020a038085166000908152600860209081526040808320949094559187168152600a8252828120338252909152205461119e908363ffffffff61120916565b600160a060020a038086166000818152600a6020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60008282111561121557fe5b50900390565b6000600160a060020a038316151561123257600080fd5b3360009081526008602052604090205482111561124e57600080fd5b3360009081526008602052604090205461126e908363ffffffff61120916565b3360009081526008602052604080822092909255600160a060020a038516815220546112a0908363ffffffff6112fe16565b600160a060020a0384166000818152600860209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b8181018281101561130b57fe5b9291505056fea165627a7a72305820e9dd439da21b9e941fb345630b5321e9b43a40bdb539419a8c0275f4f2fe87280029"
}