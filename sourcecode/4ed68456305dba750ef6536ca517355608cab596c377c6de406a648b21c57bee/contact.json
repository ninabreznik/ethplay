{
  "address": "0x8cacd0fa3b9a4b0a8734f0f1c1da162690a50ab1",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Barthor",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-15\n*/\n\npragma solidity ^0.4.24;\n\n// ----------------------------------------------------------------------------\n// 'Barthor' token contract\n//\n// Deployed to : 0xfa281666f3b41f34c7bd7ca794e2417fc3dc8b61\n// Symbol      : BRC\n// Name        : Barthor\n// Total supply: 6000000\n// Decimals    : 18\n//\n// Enjoy.\n//\n// ----------------------------------------------------------------------------\n\n\n// ----------------------------------------------------------------------------\n// Safe maths\n// ----------------------------------------------------------------------------\nlibrary SafeMath {\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    function div(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n}\n\n\n// ----------------------------------------------------------------------------\n// ERC Token Standard #20 Interface\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n// ----------------------------------------------------------------------------\ncontract ERC20Interface {\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\n\n// ----------------------------------------------------------------------------\n// Owned contract\n// ----------------------------------------------------------------------------\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n        newOwner = address(0);\n    }\n}\n\n\n// ----------------------------------------------------------------------------\n// ERC20 Token, with the addition of symbol, name and decimals and assisted\n// token transfers\n// ----------------------------------------------------------------------------\ncontract Barthor is ERC20Interface, Owned {\n    using SafeMath for uint256;\n    string public symbol;\n    string public  name;\n    uint8 public decimals;\n    uint public _totalSupply;\n\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n\n\n    // ------------------------------------------------------------------------\n    // Constructor\n    // ------------------------------------------------------------------------\n    constructor() public {\n        symbol = \"BRC\";\n        name = \"Barthor\";\n        decimals = 18;\n        _totalSupply = 6000000; // 6 million\n        balances[0xfa281666f3b41f34c7bd7ca794e2417fc3dc8b61] = totalSupply();\n        emit Transfer(address(0), 0xfa281666f3b41f34c7bd7ca794e2417fc3dc8b61, totalSupply());\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Total supply\n    // ------------------------------------------------------------------------\n    function totalSupply() public constant returns (uint) {\n        return _totalSupply * 10 **uint(decimals);\n    }\n\n\n    // ------------------------------------------------------------------------\n    // Get the token balance for account `tokenOwner`\n    // ------------------------------------------------------------------------\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n        return balances[tokenOwner];\n    }\n\n    // ------------------------------------------------------------------------\n    // Transfer the balance from token owner's account to `to` account\n    // - Owner's account must have sufficient balance to transfer\n    // - 0 value transfers are allowed\n    // ------------------------------------------------------------------------\n    function transfer(address to, uint tokens) public returns (bool success) {\n        // prevent transfer to 0x0, use burn instead\n        require(to != 0x0);\n        require(balances[msg.sender] >= tokens );\n        require(balances[to] + tokens >= balances[to]);\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        emit Transfer(msg.sender,to,tokens);\n        return true;\n    }\n    \n    // ------------------------------------------------------------------------\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n    // from the token owner's account\n    // ------------------------------------------------------------------------\n    function approve(address spender, uint tokens) public returns (bool success){\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender,spender,tokens);\n        return true;\n    }\n\n    // ------------------------------------------------------------------------\n    // Transfer `tokens` from the `from` account to the `to` account\n    // \n    // The calling account must already have sufficient tokens approve(...)-d\n    // for spending from the `from` account and\n    // - From account must have sufficient balance to transfer\n    // - Spender must have sufficient allowance to transfer\n    // - 0 value transfers are allowed\n    // ------------------------------------------------------------------------\n    function transferFrom(address from, address to, uint tokens) public returns (bool success){\n        require(tokens <= allowed[from][msg.sender]); //check allowance\n        require(balances[from] >= tokens);\n        balances[from] = balances[from].sub(tokens);\n        balances[to] = balances[to].add(tokens);\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n        emit Transfer(from,to,tokens);\n        return true;\n    }\n    // ------------------------------------------------------------------------\n    // Returns the amount of tokens approved by the owner that can be\n    // transferred to the spender's account\n    // ------------------------------------------------------------------------\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n        return allowed[tokenOwner][spender];\n    }\n\n    // ------------------------------------------------------------------------\n    // Don't accept ETH\n    // ------------------------------------------------------------------------\n    function () public payable {\n        revert();\n    }\n\n    function multipleTokensSend (address[] _addresses, uint256[] _values) public onlyOwner {\n\t    for (uint i = 0; i < _addresses.length; i++){\n\t    \t_transfer(_addresses[i], _values[i]*10**uint(decimals));\n\t    }\n    }\n    \n    function _transfer(address _beneficiary, uint256 _tokens) internal{\n        require(_beneficiary != address(0));\n        require(_tokens != 0);\n        transfer(_beneficiary, _tokens);\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"multipleTokensSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a031916331790556040805180820190915260038082527f4252430000000000000000000000000000000000000000000000000000000000602090920191825261006791600291610172565b506040805180820190915260078082527f42617274686f720000000000000000000000000000000000000000000000000060209092019182526100ac91600391610172565b506004805460ff19166012179055625b8d806005556100d264010000000061015f810204565b73fa281666f3b41f34c7bd7ca794e2417fc3dc8b61600081815260066020527fa48d91e7b42c6a9b54820d05cdd3681bf087f51d60f4dbda40447a3d59ebcaa092909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61014964010000000061015f810204565b60408051918252519081900360200190a361020a565b60045460055460ff909116600a0a025b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101b357805160ff19168380011785556101e0565b828001600101855582156101e0579182015b828111156101e05782518255916020019190600101906101c5565b506101ec9291506101f0565b5090565b61016f91905b808211156101ec57600081556001016101f6565b6109be806102196000396000f3006080604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df578063095ea7b31461016957806318160ddd146101a157806323b872dd146101c8578063313ce567146101f25780633eaaf86b1461021d57806370a082311461023257806379ba5097146102535780638da5cb5b1461026a57806395d89b411461029b578063a9059cbb146102b0578063d4ee1d90146102d4578063d7fe270e146102e9578063dd62ed3e14610377578063f2fde38b1461039e575b600080fd5b3480156100eb57600080fd5b506100f46103bf565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012e578181015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017557600080fd5b5061018d600160a060020a036004351660243561044d565b604080519115158252519081900360200190f35b3480156101ad57600080fd5b506101b66104b4565b60408051918252519081900360200190f35b3480156101d457600080fd5b5061018d600160a060020a03600435811690602435166044356104c6565b3480156101fe57600080fd5b50610207610628565b6040805160ff9092168252519081900360200190f35b34801561022957600080fd5b506101b6610631565b34801561023e57600080fd5b506101b6600160a060020a0360043516610637565b34801561025f57600080fd5b50610268610652565b005b34801561027657600080fd5b5061027f6106da565b60408051600160a060020a039092168252519081900360200190f35b3480156102a757600080fd5b506100f46106e9565b3480156102bc57600080fd5b5061018d600160a060020a0360043516602435610741565b3480156102e057600080fd5b5061027f61084b565b3480156102f557600080fd5b506040805160206004803580820135838102808601850190965280855261026895369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375094975061085a9650505050505050565b34801561038357600080fd5b506101b6600160a060020a03600435811690602435166108d1565b3480156103aa57600080fd5b50610268600160a060020a03600435166108fc565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b505050505081565b336000818152600760209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b60045460055460ff909116600a0a0290565b600160a060020a03831660009081526007602090815260408083203384529091528120548211156104f657600080fd5b600160a060020a03841660009081526006602052604090205482111561051b57600080fd5b600160a060020a038416600090815260066020526040902054610544908363ffffffff61094216565b600160a060020a038086166000908152600660205260408082209390935590851681522054610579908363ffffffff61095716565b600160a060020a0380851660009081526006602090815260408083209490945591871681526007825282812033825290915220546105bd908363ffffffff61094216565b600160a060020a03808616600081815260076020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60045460ff1681565b60055481565b600160a060020a031660009081526006602052604090205490565b600154600160a060020a0316331461066957600080fd5b60015460008054604051600160a060020a0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104455780601f1061041a57610100808354040283529160200191610445565b6000600160a060020a038316151561075857600080fd5b3360009081526006602052604090205482111561077457600080fd5b600160a060020a038316600090815260066020526040902054828101101561079b57600080fd5b336000908152600660205260409020546107bb908363ffffffff61094216565b3360009081526006602052604080822092909255600160a060020a038516815220546107ed908363ffffffff61095716565b600160a060020a0384166000818152600660209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600154600160a060020a031681565b60008054600160a060020a0316331461087257600080fd5b5060005b82518110156108cc576108c4838281518110151561089057fe5b60209081029091010151600454845160ff909116600a0a908590859081106108b457fe5b9060200190602002015102610967565b600101610876565b505050565b600160a060020a03918216600090815260076020908152604080832093909416825291909152205490565b600054600160a060020a0316331461091357600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008282111561095157600080fd5b50900390565b818101828110156104ae57600080fd5b600160a060020a038216151561097c57600080fd5b80151561098857600080fd5b6108cc82826107415600a165627a7a723058203ccb7f573e781154fb59bdae7152f8d3cf60ffec1c2b163d0e6f2b26320f41460029"
}