{
  "address": "0x115170eb12107c377046eaed6e0d7179505ce6d1",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "WIMT",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-23\n*/\n\npragma solidity ^0.4.21;\n\n/**\n * @title Description: This code is for creating a token contract\n * This contract is mintable, pausable, burnable, administered, admin-transferrable and \n * has safety Maths and security operations checks done and yet have been kept short and simple\n * It has got 3 contracts\n * 1. Manager Contract - This contract gives a user the power to manage the token functions\n * 2. ERC20 Standard Contract - It implements ERC20 pre requisites\n * 3. WIMT Token Contract - It is a custom contract that inherits from the above two contracts\n * This source code was tested with Remix and solidity compiler version 0.4.21\n * The source code was adapted and modified by wims.io\n * source : https://github.com/tintinweb/smart-contract-sanctuary/blob/master/contracts/ropsten/46/46b8357a9a9361258358308d3668e2072d6732a9_AxelToken.sol\n */\n\n /**\n * @notice Manager contract\n */\n \ncontract Manager\n{\n    address public contractManager; //address to manage the token contract\n    \n    bool public paused = false; // Indicates whether the token contract is paused or not.\n\t\n\tevent NewContractManager(address newManagerAddress); //Will display change of token manager\n\n    /**\n    * @notice Function constructor for contract Manager with no parameters\n    * \n    */\n    function Manager() public\n\t{\n        contractManager = msg.sender; //address that creates contracts will manage it\n    }\n\n\t/**\n\t* @notice onlyManager restrict management operations to the Manager of contract\n\t*/\n    modifier onlyManager()\n\t{\n        require(msg.sender == contractManager); \n        _;\n    }\n    \n\t/**\n\t* @notice Manager set a new manager\n\t*/\n    function newManager(address newManagerAddress) public onlyManager \n\t{\n\t\trequire(newManagerAddress != 0);\n\t\t\n        contractManager = newManagerAddress;\n\t\t\n\t\temit NewContractManager(newManagerAddress);\n\n    }\n    \n    /**\n     * @dev Event fired when the token contracts gets paused.\n     */\n    event Pause();\n\n    /**\n     * @notice Event fired when the token contracts gets unpaused.\n     */\n    event Unpause();\n\n    /**\n     * @notice Allows a function to be called only when the token contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused);\n        _;\n    }\n\n    /**\n     * @dev Pauses the token contract.\n     */\n    function pause() public onlyManager whenNotPaused {\n        paused = true;\n        emit Pause();\n    }\n\n    /**\n     * @notice Unpauses the token contract.\n     */\n    function unpause() public onlyManager {\n        require(paused);\n\n        paused = false;\n        emit Unpause();\n    }\n\n\n}\n\n/**\n *@notice ERC20 This is the traditional ERC20 contract\n */\ncontract ERC20 is Manager\n{\n\n    mapping(address => uint256) public balanceOf; //this variable displays users balances\n    \n    string public name;//this variable displays token contract name\n\t\n    string public symbol;//this variable displays token contract ticker symbol\n\t\n    uint256 public decimal; //this variable displays the number of decimals for the token\n\t\n    uint256 public totalSupply;//this variable displays the total supply of tokens\n    \n    mapping(address => mapping(address => uint256)) public allowance;//this will list of addresses a user will allow to Transfer his/her tokens\n    \n    event Transfer(address indexed from, address indexed to, uint256 value); //this event will notifies Transfers\n\t\n    event Approval(address indexed owner, address indexed spender, uint256 value);//this event will notifies Approval\n    \n    /**\n    * @notice Function constructor for ERC20 contract\n    */\n    function ERC20(uint256 initialSupply, string _name, string _symbol, uint256 _decimal)  public\n\t{\n\t\trequire(initialSupply >= 0);//prevent negative numbers\n\n\t\trequire(_decimal >= 0);//no negative decimals allowed\n\t\t\n        balanceOf[msg.sender] = initialSupply;//give the contract creator address the total created tokens\n\t\t\n        name = _name; //When the contract is being created give it a name\n\t\t\n        symbol = _symbol;//When the contract is being created give it a symbol\n\t\t\n        decimal = _decimal;//When the contract is being created give it decimals standard is  18\n\t\t\n        totalSupply = initialSupply; //When the contract is being created set the token total supply\n    }\n    \n    /**\n    * @notice function transfer which will move tokens from user account to an address specified at to parameter\n    *\n    */\n    function transfer(address _to, uint256 _value)public whenNotPaused returns (bool success)\n\t{\n\t\trequire(_value > 0);//prevent transferring nothing\n\t\t\n\t\trequire(balanceOf[msg.sender] >= _value);//the token sender must have tokens to transfer\n\t\t\n\t\trequire(balanceOf[_to] + _value >= balanceOf[_to]);//the token receiver balance must change and be bigger\n\n        balanceOf[msg.sender] -= _value;//the balance of the token sender must decrease accordingly\n\t\t\n        balanceOf[_to] += _value;//effect the actual transfer of tokens\n\t\t\n        emit Transfer(msg.sender, _to, _value);//publish addresses and amount Transferred\n\n        return true;\n    }\n    \n    /**\n    * @notice function approve gives an address power to spend specified amount\n    *\n    */\n    function approve(address _spender, uint256 _value) public whenNotPaused returns (bool success) \n\t{\n\t\trequire(_value > 0); //approved amount must be greater than zero\n\t\t\n\t\tallowance[msg.sender][_spender] = _value;//_spender will be approved to spend _value from as user's address that called this function\n\n        emit Approval(msg.sender, _spender, _value);//broadcast the activity\n\t\t\n        return true;\n    }\n    \n    /**\n    * @notice function allowance : displays address allow to transfer tokens from owner\n    * \n    */    \n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) \n\t{\n      return allowance[_owner][_spender];\n    }\n\n\t/**\n    * @notice function transferFrom : moves tokens from one address to another\n    * \n    */\n    function transferFrom(address _from, address _to, uint256 _value)public whenNotPaused returns (bool success)\n\t{\n\t\trequire(_value > 0); //move at least 1 token\n\t\t\n        require(balanceOf[_from] >= _value);//check that there tokens to move\n\t\t\n        require(balanceOf[_to] + _value >= balanceOf[_to]);//after the move the new value must be greater\n        \n        require(_value <= allowance[_from][msg.sender]); //only authorized addresses can transferFrom\n\n        balanceOf[_from] -= _value;//remove tokens from _from address\n\t\t\n        balanceOf[_to] += _value;//add these tokens to _to address\n        \n        allowance[_from][msg.sender] -= _value; //change the base token balance\n\n        emit Transfer(_from, _to, _value);//publish transferFrom activity to network\n\n        return true;\n    }\n    \n    /**\n    * @notice function balanceOf will display balance of given address\n    * \n    */\n    function balanceOf(address _owner)public constant returns (uint256 balance) \n\t{\n        return balanceOf[_owner];\n    }\n}\n\n/**\n *@notice  WIMT Token implements Manager and ERC contracts\n */\ncontract WIMT is Manager, ERC20\n{\n    /**\n     * @notice function constructor for the WIMT contract\n     */\n     \n    function WIMT(uint256 _totalSupply, string _name, string _symbol, uint8 _decimal ) public  ERC20(_totalSupply, _name, _symbol, _decimal)\n\t{\n\n        contractManager = msg.sender;\n\n        balanceOf[contractManager] = _totalSupply;\n\t\t\n        totalSupply = _totalSupply;\n\t\t\n\t\tdecimal = _decimal;\n\n    }\n    \n    /**\n    * @notice function mint to be executed by Manager of token\n    * \n    */\n    function mint(address target, uint256 mintedAmount)public onlyManager whenNotPaused\n\t{\n\t\trequire(target != 0);//check executor is supplied \n\t\t\n\t\trequire(mintedAmount > 0);//disallow negative minting\n\t\t\n\t    require(balanceOf[target] + mintedAmount >= balanceOf[target]);//after the move the new value must be greater\n        \n        require(totalSupply + mintedAmount >= totalSupply);//after the move the new value must be greater\n        \n        balanceOf[target] += mintedAmount;//add tokens to address target\n\t\t\n        totalSupply += mintedAmount;//increase totalSupply\n\t\t\n        emit Transfer(0, this, mintedAmount);//publish transfer\n\t\t\n        emit Transfer(this, target, mintedAmount);//publish transfer\n    }\n    \n\t/**\n    * @notice function burn decrease total Supply of tokens\n    * \n    */\n\tfunction burn(uint256 mintedAmount) public onlyManager whenNotPaused\n\t{\n\t\t\n\t\trequire(mintedAmount > 0);//at least 1 token must be destroyed\n\t\t\n\t\trequire(totalSupply - mintedAmount <= totalSupply);//after the move the new value must be greater\n        \n\t    require(balanceOf[msg.sender] - mintedAmount <= balanceOf[msg.sender]);//after the move the new value must be greater\n\n        balanceOf[msg.sender] -= mintedAmount;//decrease balance of destroyer\n\t\t\n        totalSupply -= mintedAmount;//decrease totalSupply by destroyed tokens\n\t\t\n        emit Transfer(0, msg.sender, mintedAmount);//publish burn activity\n\t\t\n        \n\n    }\n\n}",
  "bytecode": "60606040526000805460a060020a60ff0219169055341561001f57600080fd5b604051610cbf380380610cbf833981016040528080519190602001805182019190602001805182019190602001805160008054600160a060020a03191633600160a060020a03161781559092508591508490849060ff85169084101561008457600080fd5b600081101561009257600080fd5b600160a060020a033316600090815260016020526040902084905560028380516100c092916020019061011c565b5060038280516100d492916020019061011c565b505060008054600160a060020a03191633600160a060020a0390811691909117808355168152600160205260409020879055505050600593909355505060ff166004556101b7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015d57805160ff191683800117855561018a565b8280016001018555821561018a579182015b8281111561018a57825182559160200191906001019061016f565b5061019692915061019a565b5090565b6101b491905b8082111561019657600081556001016101a0565b90565b610af9806101c66000396000f3006060604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100ea578063095ea7b31461017457806318160ddd146101aa57806323b872dd146101cf5780633f4ba83a146101f757806340c10f191461020c57806342966c681461022e5780635c975abb1461024457806370a082311461025757806376809ce3146102765780638456cb5914610289578063906e94001461029c57806395d89b41146102bb578063a9059cbb146102ce578063b39e12cf146102f0578063dd62ed3e1461031f575b600080fd5b34156100f557600080fd5b6100fd610344565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610139578082015183820152602001610121565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017f57600080fd5b610196600160a060020a03600435166024356103e2565b604051901515815260200160405180910390f35b34156101b557600080fd5b6101bd610470565b60405190815260200160405180910390f35b34156101da57600080fd5b610196600160a060020a0360043581169060243516604435610476565b341561020257600080fd5b61020a610597565b005b341561021757600080fd5b61020a600160a060020a0360043516602435610616565b341561023957600080fd5b61020a600435610729565b341561024f57600080fd5b6101966107ed565b341561026257600080fd5b6101bd600160a060020a03600435166107fd565b341561028157600080fd5b6101bd610818565b341561029457600080fd5b61020a61081e565b34156102a757600080fd5b61020a600160a060020a03600435166108a2565b34156102c657600080fd5b6100fd61093a565b34156102d957600080fd5b610196600160a060020a03600435166024356109a5565b34156102fb57600080fd5b610303610a73565b604051600160a060020a03909116815260200160405180910390f35b341561032a57600080fd5b6101bd600160a060020a0360043581169060243516610a82565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103da5780601f106103af576101008083540402835291602001916103da565b820191906000526020600020905b8154815290600101906020018083116103bd57829003601f168201915b505050505081565b6000805460a060020a900460ff16156103fa57600080fd5b6000821161040757600080fd5b600160a060020a03338116600081815260066020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60055481565b6000805460a060020a900460ff161561048e57600080fd5b6000821161049b57600080fd5b600160a060020a038416600090815260016020526040902054829010156104c157600080fd5b600160a060020a03831660009081526001602052604090205482810110156104e857600080fd5b600160a060020a038085166000908152600660209081526040808320339094168352929052205482111561051b57600080fd5b600160a060020a0380851660008181526001602090815260408083208054889003905587851680845281842080548901905584845260068352818420339096168452949091529081902080548690039055600080516020610aae8339815191529085905190815260200160405180910390a35060019392505050565b60005433600160a060020a039081169116146105b257600080fd5b60005460a060020a900460ff1615156105ca57600080fd5b6000805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60005433600160a060020a0390811691161461063157600080fd5b60005460a060020a900460ff161561064857600080fd5b600160a060020a038216151561065d57600080fd5b6000811161066a57600080fd5b600160a060020a038216600090815260016020526040902054818101101561069157600080fd5b60055481810110156106a257600080fd5b600160a060020a0380831660009081526001602052604080822080548501905560058054850190553090921691600080516020610aae8339815191529084905190815260200160405180910390a381600160a060020a031630600160a060020a0316600080516020610aae8339815191528360405190815260200160405180910390a35050565b60005433600160a060020a0390811691161461074457600080fd5b60005460a060020a900460ff161561075b57600080fd5b6000811161076857600080fd5b600554818103111561077957600080fd5b600160a060020a03331660009081526001602052604090205481810311156107a057600080fd5b600160a060020a03331660008181526001602052604080822080548590039055600580548590039055600080516020610aae8339815191529084905190815260200160405180910390a350565b60005460a060020a900460ff1681565b600160a060020a031660009081526001602052604090205490565b60045481565b60005433600160a060020a0390811691161461083957600080fd5b60005460a060020a900460ff161561085057600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60005433600160a060020a039081169116146108bd57600080fd5b600160a060020a03811615156108d257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790557f5909e23c57dd8baa9c226dbc1d6fda67b9dd31dc56cd6f347e275923800e8b4e81604051600160a060020a03909116815260200160405180910390a150565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103da5780601f106103af576101008083540402835291602001916103da565b6000805460a060020a900460ff16156109bd57600080fd5b600082116109ca57600080fd5b600160a060020a033316600090815260016020526040902054829010156109f057600080fd5b600160a060020a0383166000908152600160205260409020548281011015610a1757600080fd5b600160a060020a03338116600081815260016020526040808220805487900390559286168082529083902080548601905591600080516020610aae8339815191529085905190815260200160405180910390a350600192915050565b600054600160a060020a031681565b600160a060020a039182166000908152600660209081526040808320939094168252919091522054905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058205c19051cb077c55cc66eca79d70a27a7b3a8a6378b22535d2f42b33cd194964b002900000000000000000000000000000000000000000000000000000012a05f2000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000457494d5400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000457494d5400000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "00000000000000000000000000000000000000000000000000000012a05f2000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000457494d5400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000457494d5400000000000000000000000000000000000000000000000000000000"
}