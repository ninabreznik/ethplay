{
  "address": "0x5a4f67d82001c0f7817a2210686b2469578875fc",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "AssToken",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-27\n*/\n\npragma solidity >=0.4.22 <0.6.0;\n\ninterface tokenRecipient {\n    function receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData) external;\n}\ncontract AssToken{\n    //公共变量\n    string public name;//代币名称\n    string public symbol;//代币符号\n    uint8 public decimals = 18;//小数点位数\n    uint256 public totalSupply;  //代币发行总量\n\n    //创建一个包含所有余额的数组\n    mapping (address => uint256) public balanceOf;  //保存所有账户的代币余额的数组\n    mapping (address => mapping (address => uint256)) public allowance;   //嵌套的数组来保存授权账户、被授权账户和授权额度\n\n    //在区块链上生成一个公共事件，该事件将通知客户端\n    event Transfer(address indexed from, address indexed to, uint256 value);    //每次转账成功后都必须触发该事件\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);   //将在区块链上生成一个公共事件，每次进行授权，都必须触发该事件。参数为：授权人、被授权人和授权额度\n    event Burn(address indexed from, uint256 value);    //关于上涨的客户通知\n    /**\n     * 构造函数初始化契约，\n     * 将初始供应令牌提供给契约的创建者\n    */\n    constructor(\n        uint256 initialSupply,//发行总量\n        string memory tokenName,//代币名称\n        string memory tokenSymbol//代币符号\n    ) public {\n        totalSupply = initialSupply * 10 ** uint256(decimals);  // 用十进制数字更新总供应量\n        balanceOf[msg.sender] = totalSupply;                // 给创建者所有初始令牌\n        name = tokenName;                                   // 代币名称\n        symbol = tokenSymbol;                               // 代币符号\n    }\n    /**\n     * 内部转账，只能按本合同调用\n     */\n    function _transfer(address _from, address _to, uint _value) internal {\n        // 防止传输到无效地址。改用burn（）\n        require(_to != address(0x0));\n        // 检查账号余额是否大于转账金额\n        require(balanceOf[_from] >= _value);\n        // 检查转账金额是否正常\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        // 保存余额状态\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        // Subtract from the sender\n        balanceOf[_from] -= _value;\n        // Add the same to the recipient\n        balanceOf[_to] += _value;\n        emit Transfer(_from, _to, _value);\n        // Asserts are used to use static analysis to find bugs in your code. They should never fail\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n    /**\n     * 转账操作，将指定数量的代币从总账户发送到另一个账户\n     *\n     * Send `_value` tokens to `_to` from your account\n     *\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n    /**\n     * 转账操作，用户转给用户\n     *\n     * Send `_value` tokens to `_to` on behalf of `_from`\n     *\n     * @param _from The address of the sender\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);     // 检查转账金额不能小于手续费\n        allowance[_from][msg.sender] -= _value; //先扣除转账方的手续费\n        _transfer(_from, _to, _value);\n        return true;\n    }\n    /**\n     * 给转账用户设置手续费\n     *\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf\n     *\n     * @param _spender The address authorized to spend\n     * @param _value the max amount they can spend\n     */\n    function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    /**\n     * 获取到账户地址和 手续费的通知\n     *\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\n     *\n     * @param _spender The address authorized to spend\n     * @param _value the max amount they can spend\n     * @param _extraData some extra information to send to the approved contract\n     */\n    function approveAndCall(address _spender, uint256 _value, bytes memory _extraData)\n        public\n        returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, address(this), _extraData);\n            return true;\n        }\n    }\n    /**\n     * 减少代币总余额\n     *\n     * Remove `_value` tokens from the system irreversibly\n     *\n     * @param _value the amount of money to burn\n     */\n    function burn(uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough\n        balanceOf[msg.sender] -= _value;            // Subtract from the sender\n        totalSupply -= _value;                      // Updates totalSupply\n        emit Burn(msg.sender, _value);\n        return true;\n    }\n    /**\n     * 减少用户余额\n     *\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\n     *\n     * @param _from the address of the sender\n     * @param _value the amount of money to burn\n     */\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] >= _value);                // Check if the targeted balance is enough\n        require(_value <= allowance[_from][msg.sender]);    // Check allowance\n        balanceOf[_from] -= _value;                         // Subtract from the targeted balance\n        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance\n        totalSupply -= _value;                              // Update totalSupply\n        emit Burn(_from, _value);\n        return true;\n    }\n    //查询指定账户地址的代币余额\n    function balanceTo(address _owner) public view returns (uint256 balance){\n        return balanceOf[_owner];\n    }\n     //查询指定账户的手续费\n    function allowed(address _owner,address _spender) public view returns (uint256 remaining){\n        return allowance[_owner][_spender];\n    }\n}",
  "bytecode": "60806040526002805460ff1916601217905534801561001d57600080fd5b50604051610bab380380610bab8339810180604052606081101561004057600080fd5b81516020830180519193928301929164010000000081111561006157600080fd5b8201602081018481111561007457600080fd5b815164010000000081118282018710171561008e57600080fd5b505092919060200180516401000000008111156100aa57600080fd5b820160208101848111156100bd57600080fd5b81516401000000008111828201871017156100d757600080fd5b505060025460ff16600a0a8602600381905533600090815260046020908152604082209290925586519295506101129450925085019061012f565b50805161012690600190602084019061012f565b505050506101ca565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017057805160ff191683800117855561019d565b8280016001018555821561019d579182015b8281111561019d578251825591602001919060010190610182565b506101a99291506101ad565b5090565b6101c791905b808211156101a957600081556001016101b3565b90565b6109d2806101d96000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146102dd578063a9059cbb146102e5578063cae9ca5114610311578063dd62ed3e146103cc576100ea565b806370a082311461026557806379cc67901461028b5780638fb16c1a146102b7576100ea565b806323b872dd116100c857806323b872dd146101c6578063313ce567146101fc57806342966c681461021a5780635c65816514610237576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f76103fa565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610488565b604080519115158252519081900360200190f35b6101b46104ee565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b038135811691602081013590911690604001356104f4565b610204610564565b6040805160ff9092168252519081900360200190f35b6101986004803603602081101561023057600080fd5b503561056d565b6101b46004803603604081101561024d57600080fd5b506001600160a01b03813581169160200135166105e5565b6101b46004803603602081101561027b57600080fd5b50356001600160a01b0316610610565b610198600480360360408110156102a157600080fd5b506001600160a01b038135169060200135610622565b6101b4600480360360208110156102cd57600080fd5b50356001600160a01b03166106f3565b6100f761070e565b610198600480360360408110156102fb57600080fd5b506001600160a01b038135169060200135610768565b6101986004803603606081101561032757600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561035757600080fd5b82018360208201111561036957600080fd5b8035906020019184600183028401116401000000008311171561038b57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061077e945050505050565b6101b4600480360360408110156103e257600080fd5b506001600160a01b0381358116916020013516610886565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104805780601f1061045557610100808354040283529160200191610480565b820191906000526020600020905b81548152906001019060200180831161046357829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60035481565b6001600160a01b038316600090815260056020908152604080832033845290915281205482111561052457600080fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020805483900390556105598484846108a3565b5060015b9392505050565b60025460ff1681565b3360009081526004602052604081205482111561058957600080fd5b3360008181526004602090815260409182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a2506001919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b60046020526000908152604090205481565b6001600160a01b03821660009081526004602052604081205482111561064757600080fd5b6001600160a01b038316600090815260056020908152604080832033845290915290205482111561067757600080fd5b6001600160a01b0383166000818152600460209081526040808320805487900390556005825280832033845282529182902080548690039055600380548690039055815185815291517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59281900390910190a250600192915050565b6001600160a01b031660009081526004602052604090205490565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104805780601f1061045557610100808354040283529160200191610480565b60006107753384846108a3565b50600192915050565b60008361078b8185610488565b1561087e57604051600160e01b638f4ffcb102815233600482018181526024830187905230604484018190526080606485019081528751608486015287516001600160a01b03871695638f4ffcb195948b94938b939192909160a490910190602085019080838360005b8381101561080d5781810151838201526020016107f5565b50505050905090810190601f16801561083a5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561085c57600080fd5b505af1158015610870573d6000803e3d6000fd5b50505050600191505061055d565b509392505050565b600560209081526000928352604080842090915290825290205481565b6001600160a01b0382166108b657600080fd5b6001600160a01b0383166000908152600460205260409020548111156108db57600080fd5b6001600160a01b038216600090815260046020526040902054818101101561090257600080fd5b6001600160a01b038083166000818152600460209081526040808320805495891680855282852080548981039091559486905281548801909155815187815291519390950194927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a36001600160a01b038084166000908152600460205260408082205492871682529020540181146109a057fe5b5050505056fea165627a7a72305820d5a410e8ad7a2f680144dbf2d1f85c9f544dff1d858ce4c0474647a1ed81b19b0029000000000000000000000000000000000000000000000000000000014dc93800000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000174173736f63696174696f6e20536f6369616c20536f756c00000000000000000000000000000000000000000000000000000000000000000000000000000000034153530000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000014dc93800000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000174173736f63696174696f6e20536f6369616c20536f756c00000000000000000000000000000000000000000000000000000000000000000000000000000000034153530000000000000000000000000000000000000000000000000000000000"
}