{
  "address": "0x4ac583bb9c55658ebb17805f1cc8c1fa75c210d8",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Lucre",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-02\n*/\n\npragma solidity ^0.4.23;\n\ncontract Token { // ERC20 standard\n\n    function balanceOf(address _owner) public view returns (uint256 balance);\n    function transfer(address _to, uint256 _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n    function approve(address _spender, uint256 _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n}\n\n\n/**\n * Overflow aware uint math functions.\n *\n * Inspired by https://github.com/MakerDAO/maker-otc/blob/master/contracts/simple_market.sol\n */\n\ncontract SafeMath {\n\n    function safeMul(uint a, uint b) internal pure returns (uint) {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function safeSub(uint a, uint b) internal pure returns (uint) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function safeAdd(uint a, uint b) internal pure returns (uint) {\n        uint c = a + b;\n        assert(c>=a && c>=b);\n        return c;\n    }\n\t\n\tfunction safeDiv(uint a, uint b) internal pure returns (uint) {\n\t\t// assert(b > 0); // Solidity automatically throws when dividing by 0\n\t\tuint c = a / b;\n\t\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\t\treturn c;\n\t}\n\n    // mitigate short address attack\n    // thanks to https://github.com/numerai/contract/blob/c182465f82e50ced8dacb3977ec374a892f5fa8c/contracts/Safe.sol#L30-L34.\n    // TODO: doublecheck implication of >= compared to ==\n    modifier onlyPayloadSize(uint numWords) {\n        assert(msg.data.length >= numWords * 32 + 4);\n        _;\n    }\n\n}\n\ncontract StandardToken is Token, SafeMath {\n\n    uint256 public totalSupply;\n\n    // TODO: update tests to expect throw\n    function transfer(address _to, uint256 _value) public onlyPayloadSize(2) returns (bool success) {\n        require(_to != address(0));\n        require(balances[msg.sender] >= _value && _value > 0);\n        balances[msg.sender] = safeSub(balances[msg.sender], _value);\n        balances[_to] = safeAdd(balances[_to], _value);\n        emit Transfer(msg.sender, _to, _value);\n\n        return true;\n    }\n\n    // TODO: update tests to expect throw\n    function transferFrom(address _from, address _to, uint256 _value) public onlyPayloadSize(3) returns (bool success) {\n        require(_to != address(0));\n        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0);\n        balances[_from] = safeSub(balances[_from], _value);\n        balances[_to] = safeAdd(balances[_to], _value);\n        allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\n        emit Transfer(_from, _to, _value);\n\n        return true;\n    }\n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    // To change the approve amount you first have to reduce the addresses'\n    //  allowance to zero by calling 'approve(_spender, 0)' if it is not\n    //  already 0 to mitigate the race condition described here:\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    function approve(address _spender, uint256 _value) public onlyPayloadSize(2) returns (bool success) {\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n\n        return true;\n    }\n\n    function changeApproval(address _spender, uint256 _oldValue, uint256 _newValue) public onlyPayloadSize(3) returns (bool success) {\n        require(allowed[msg.sender][_spender] == _oldValue);\n        allowed[msg.sender][_spender] = _newValue;\n        emit Approval(msg.sender, _spender, _newValue);\n\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n\n}\n\ncontract Lucre is StandardToken {\n\n    // FIELDS\n\n    string public name = \"LUCRE\";\n    string public symbol = \"LCR\";\n    uint256 public decimals = 18;\n    string public version = \"1.0\";\n\n    uint256 public tokenCap = 12500000 * 10**18;  // 10/80 \t\t\t\t\t\t\t  \n\n    // crowdsale parameters\n    uint256 public startTime;\n    uint256 public endTime;\n\n    // root control\n    address public fundWallet;\n    // control of liquidity and limited control of updatePrice\n    address public controlWallet;\n    // company reserve, advisor fee & marketing\n    address public companyWallet;\n\n    // fundWallet controlled state variables\n    // halted: halt buying due to emergency, tradeable: signal that assets have been acquired\n    bool public halted = false;\n    bool public tradeable = false;\n\n    // -- totalSupply defined in StandardToken\n    // -- mapping to token balances done in StandardToken\n\n\n    uint256 public rate;\n    uint256 public minAmount = 0.10 ether;\n\n    // maps addresses\n    mapping (address => bool) public whitelist;\n\n\n    // EVENTS\n\n    event Buy(address indexed participant, address indexed beneficiary, uint256 ethValue, uint256 amountTokens);\n    event AllocatePresale(address indexed participant, uint256 amountTokens);\n    event Whitelist(address indexed participant);\n    event RateUpdate(uint256 rate);\n\n\n    // MODIFIERS\n\n    modifier isTradeable { // exempt companyWallet and fundWallet to allow company allocations\n        require(tradeable || msg.sender == fundWallet || msg.sender == companyWallet);\n        _;\n    }\n\n    modifier onlyWhitelist {\n        require(whitelist[msg.sender]);\n        _;\n    }\n\n    modifier onlyFundWallet {\n        require(msg.sender == fundWallet);\n        _;\n    }\n\n    modifier onlyManagingWallets {\n        require(msg.sender == controlWallet || msg.sender == fundWallet || msg.sender == companyWallet);\n        _;\n    }\n\n    modifier only_if_controlWallet {\n        if (msg.sender == controlWallet) _;\n    }\n\n\n    // CONSTRUCTOR\n\n    constructor (address controlWalletInput, address companyWalletInput, uint preSaleDays, uint mainSaleDays, uint256 rateInput) public {\n        require(controlWalletInput != address(0));\n        require(rateInput > 0);\n        startTime = now + preSaleDays * 1 days; // 30 days of presales (default)\n        fundWallet = msg.sender;\n        controlWallet = controlWalletInput;\n        companyWallet = companyWalletInput;\n        whitelist[fundWallet] = true;\n        whitelist[controlWallet] = true;\n        whitelist[companyWallet] = true;\n        endTime = now + (preSaleDays + mainSaleDays) * 1 days; // mainSaleDays = 28 days (default)\n\t\trate = rateInput;\n\n    }\n\n    // METHODS\n\n    // allows controlWallet to update the price within a time constraint, allows fundWallet complete control\n    function updateRate(uint256 newRate) external onlyManagingWallets {\n        require(newRate > 0);\n        // either controlWallet command is compliant or transaction came from fundWallet\n        rate = newRate;\n        emit RateUpdate(rate);\n    }\n\n\n    function allocateTokens(address participant, uint256 amountTokens) private {\n        // 20% of total allocated for PR, Marketing, Team, Advisers\n        uint256 companyAllocation = safeMul(amountTokens, 25000000000000000) / 100000000000000000; //20/80\n        // check that token cap is not exceeded\n        uint256 newTokens = safeAdd(amountTokens, companyAllocation);\n        require(safeAdd(totalSupply, newTokens) <= tokenCap);\n        // increase token supply, assign tokens to participant\n        totalSupply = safeAdd(totalSupply, newTokens);\n        balances[participant] = safeAdd(balances[participant], amountTokens);\n        balances[companyWallet] = safeAdd(balances[companyWallet], companyAllocation);\n    }\n\n    function allocatePresaleTokens(address participant, uint amountTokens) external onlyFundWallet {\n        require(now < endTime);\n        require(participant != address(0));\n        whitelist[participant] = true; // automatically whitelist accepted presale\n        allocateTokens(participant, amountTokens);\n        emit Whitelist(participant);\n        emit AllocatePresale(participant, amountTokens);\n    }\n\n    function verifyParticipant(address participant) external onlyManagingWallets {\n        whitelist[participant] = true;\n        emit Whitelist(participant);\n    }\n\n    function buy() external payable {\n        buyTo(msg.sender);\n    }\n\n    function buyTo(address participant) public payable onlyWhitelist {\n        require(!halted);\n        require(participant != address(0));\n        require(msg.value >= minAmount);\n        require(now >= startTime && now < endTime);\n\t\tuint256 money = safeMul(msg.value, rate);\n\t\tuint256 bonusMoney = safeMul(money, getBonus()) / 100;\n\t\tuint256 tokensToBuy = safeAdd(money, bonusMoney);  \n        allocateTokens(participant, tokensToBuy);\n        // send ether to fundWallet\n        fundWallet.transfer(msg.value);\n        emit Buy(msg.sender, participant, msg.value, tokensToBuy);\n    }\n\n\n    function getBonus() internal view returns (uint256) {\n        uint256 icoDuration = safeSub(now, startTime);\n        uint256 discount;\n        if (icoDuration < 7 days) { \n            discount = 0;\n        } else if (icoDuration < 14 days) { \n            discount = 10; // 10% bonus\n        } else if (icoDuration < 21 days) { \n            discount = 15; // 15% bonus\n        } else {\n            discount = 20; // 20% bonus\n        } \n\t\treturn discount;\n    }\n\n\n    function changeFundWallet(address newFundWallet) external onlyFundWallet {\n        require(newFundWallet != address(0));\n        fundWallet = newFundWallet;\n    }\n\n    function changeControlWallet(address newControlWallet) external onlyFundWallet {\n        require(newControlWallet != address(0));\n        controlWallet = newControlWallet;\n    }\n\n    function updateFundingStartTime(uint256 newStartTime) external onlyFundWallet {\n        require(now < startTime);\n        require(now < newStartTime);\n        startTime = newStartTime;\n    }\n\n    function updateFundingEndTime(uint256 newEndTime) external onlyFundWallet {\n        require(now < endTime);\n        require(now < newEndTime);\n        endTime = newEndTime;\n    }\n\n    function halt() external onlyFundWallet {\n        halted = true;\n    }\n    function unhalt() external onlyFundWallet {\n        halted = false;\n    }\n\n    function enableTrading() external onlyFundWallet {\n        require(now > endTime);\n        tradeable = true;\n    }\n\n    // fallback function\n    function() external payable {\n        buyTo(msg.sender);\n    }\n\n    function claimTokens(address _token) external onlyFundWallet {\n        require(_token != address(0));\n        Token token = Token(_token);\n        uint256 balance = token.balanceOf(this);\n        token.transfer(fundWallet, balance);\n    }\n\n    // prevent transfers until trading allowed\n    function transfer(address _to, uint256 _value) public isTradeable returns (bool success) {\n        return super.transfer(_to, _value);\n    }\n    function transferFrom(address _from, address _to, uint256 _value) public isTradeable returns (bool success) {\n        return super.transferFrom(_from, _to, _value);\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newEndTime\",\"type\":\"uint256\"}],\"name\":\"updateFundingEndTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"companyWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newControlWallet\",\"type\":\"address\"}],\"name\":\"changeControlWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"verifyParticipant\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"updateRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newFundWallet\",\"type\":\"address\"}],\"name\":\"changeFundWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controlWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"participant\",\"type\":\"address\"},{\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"allocatePresaleTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_oldValue\",\"type\":\"uint256\"},{\"name\":\"_newValue\",\"type\":\"uint256\"}],\"name\":\"changeApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newStartTime\",\"type\":\"uint256\"}],\"name\":\"updateFundingStartTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unhalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"buyTo\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tradeable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"controlWalletInput\",\"type\":\"address\"},{\"name\":\"companyWalletInput\",\"type\":\"address\"},{\"name\":\"preSaleDays\",\"type\":\"uint256\"},{\"name\":\"mainSaleDays\",\"type\":\"uint256\"},{\"name\":\"rateInput\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ethValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"AllocatePresale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"Whitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"RateUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60c0604052600560808190527f4c5543524500000000000000000000000000000000000000000000000000000060a090815262000040916003919062000203565b506040805180820190915260038082527f4c435200000000000000000000000000000000000000000000000000000000006020909201918252620000879160049162000203565b5060126005556040805180820190915260038082527f312e3000000000000000000000000000000000000000000000000000000000006020909201918252620000d39160069162000203565b506a0a56fa5b99019a5c800000600755600c805460a060020a61ffff021916905567016345785d8a0000600e553480156200010d57600080fd5b5060405160a080620017f78339810160409081528151602083015191830151606084015160809094015191939091600160a060020a03851615156200015157600080fd5b600081116200015f57600080fd5b42620151808085028201600855600a8054600160a060020a0319908116331791829055600b8054600160a060020a039a8b16908316178155600c8054998b16999092169890981781559088166000908152600f6020526040808220805460ff19908116600190811790925599548b16835281832080548b168217905592549099168152979097208054909616909617909455910190920201600955600d55620002a8565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024657805160ff191683800117855562000276565b8280016001018555821562000276579182015b828111156200027657825182559160200191906001019062000259565b506200028492915062000288565b5090565b620002a591905b808211156200028457600081556001016200028f565b90565b61153f80620002b86000396000f3006080604052600436106101b65763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146101c1578063095ea7b31461024b5780630e8e99761461028357806318160ddd1461029b5780631ec32d15146102c257806323b872dd146102f35780632c4e722e1461031d578063313ce567146103325780633197cbb61461034757806354fd4d501461035c5780635a8cf571146103715780635ed7ca5b14610392578063643a7695146103a7578063664a1ad6146103c857806369ea1771146103dd5780636fb4adff146103f557806370a082311461041657806378e9792514610437578063823e569e1461044c5780638a8c523c146104615780638fee7687146104765780639281cd651461049a57806395d89b41146104c15780639b19251a146104d65780639b2cb5d8146104f7578063a6f2ae3a1461050c578063a9059cbb14610514578063b9b8af0b14610538578063cac1ad381461054d578063cb3e64fd14610565578063dcf72c101461057a578063dd54291b1461058e578063dd62ed3e146105a3578063df8de3e7146105ca578063f5ac9db6146105eb575b6101bf33610600565b005b3480156101cd57600080fd5b506101d6610757565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102105781810151838201526020016101f8565b50505050905090810190601f16801561023d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561025757600080fd5b5061026f600160a060020a03600435166024356107e5565b604080519115158252519081900360200190f35b34801561028f57600080fd5b506101bf600435610895565b3480156102a757600080fd5b506102b06108cb565b60408051918252519081900360200190f35b3480156102ce57600080fd5b506102d76108d1565b60408051600160a060020a039092168252519081900360200190f35b3480156102ff57600080fd5b5061026f600160a060020a03600435811690602435166044356108e0565b34801561032957600080fd5b506102b061094a565b34801561033e57600080fd5b506102b0610950565b34801561035357600080fd5b506102b0610956565b34801561036857600080fd5b506101d661095c565b34801561037d57600080fd5b506101bf600160a060020a03600435166109b7565b34801561039e57600080fd5b506101bf610a12565b3480156103b357600080fd5b506101bf600160a060020a0360043516610a60565b3480156103d457600080fd5b506102d7610aef565b3480156103e957600080fd5b506101bf600435610afe565b34801561040157600080fd5b506101bf600160a060020a0360043516610b89565b34801561042257600080fd5b506102b0600160a060020a0360043516610be4565b34801561044357600080fd5b506102b0610bff565b34801561045857600080fd5b506102d7610c05565b34801561046d57600080fd5b506101bf610c14565b34801561048257600080fd5b506101bf600160a060020a0360043516602435610c72565b3480156104a657600080fd5b5061026f600160a060020a0360043516602435604435610d50565b3480156104cd57600080fd5b506101d6610df7565b3480156104e257600080fd5b5061026f600160a060020a0360043516610e52565b34801561050357600080fd5b506102b0610e67565b6101bf610e6d565b34801561052057600080fd5b5061026f600160a060020a0360043516602435610e78565b34801561054457600080fd5b5061026f610ee0565b34801561055957600080fd5b506101bf600435610f01565b34801561057157600080fd5b506101bf610f37565b6101bf600160a060020a0360043516610600565b34801561059a57600080fd5b506102b0610f6e565b3480156105af57600080fd5b506102b0600160a060020a0360043581169060243516610f74565b3480156105d657600080fd5b506101bf600160a060020a0360043516610f9f565b3480156105f757600080fd5b5061026f611103565b336000908152600f60205260408120548190819060ff16151561062257600080fd5b600c5474010000000000000000000000000000000000000000900460ff161561064a57600080fd5b600160a060020a038416151561065f57600080fd5b600e5434101561066e57600080fd5b6008544210158015610681575060095442105b151561068c57600080fd5b61069834600d54611125565b925060646106ad846106a8611149565b611125565b8115156106b657fe5b0491506106c3838361119f565b90506106cf84826111b9565b600a54604051600160a060020a03909116903480156108fc02916000818181858888f19350505050158015610708573d6000803e3d6000fd5b5060408051348152602081018390528151600160a060020a0387169233927f89f5adc174562e07c9c9b1cae7109bbecb21cf9d1b2847e550042b8653c54a0e929081900390910190a350505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107dd5780601f106107b2576101008083540402835291602001916107dd565b820191906000526020600020905b8154815290600101906020018083116107c057829003601f168201915b505050505081565b6000600260443610156107f457fe5b8215806108225750336000908152600260209081526040808320600160a060020a0388168452909152902054155b151561082d57600080fd5b336000818152600260209081526040808320600160a060020a03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600a54600160a060020a031633146108ac57600080fd5b60095442106108ba57600080fd5b4281116108c657600080fd5b600955565b60005481565b600c54600160a060020a031681565b600c546000907501000000000000000000000000000000000000000000900460ff16806109175750600a54600160a060020a031633145b8061092c5750600c54600160a060020a031633145b151561093757600080fd5b61094284848461128c565b949350505050565b600d5481565b60055481565b60095481565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107dd5780601f106107b2576101008083540402835291602001916107dd565b600a54600160a060020a031633146109ce57600080fd5b600160a060020a03811615156109e357600080fd5b600b805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600a54600160a060020a03163314610a2957600080fd5b600c805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055565b600b54600160a060020a0316331480610a835750600a54600160a060020a031633145b80610a985750600c54600160a060020a031633145b1515610aa357600080fd5b600160a060020a0381166000818152600f6020526040808220805460ff19166001179055517feb73900b98b6a3e2b8b01708fe544760cf570d21e7fbe5225f24e48b5b2b432e9190a250565b600a54600160a060020a031681565b600b54600160a060020a0316331480610b215750600a54600160a060020a031633145b80610b365750600c54600160a060020a031633145b1515610b4157600080fd5b60008111610b4e57600080fd5b600d8190556040805182815290517f9b831dcbec52dfe52b187da18aae08651dfb726e9baf49d5d9eae6fa264db3a19181900360200190a150565b600a54600160a060020a03163314610ba057600080fd5b600160a060020a0381161515610bb557600080fd5b600a805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a031660009081526001602052604090205490565b60085481565b600b54600160a060020a031681565b600a54600160a060020a03163314610c2b57600080fd5b6009544211610c3957600080fd5b600c805475ff00000000000000000000000000000000000000000019167501000000000000000000000000000000000000000000179055565b600a54600160a060020a03163314610c8957600080fd5b6009544210610c9757600080fd5b600160a060020a0382161515610cac57600080fd5b600160a060020a0382166000908152600f60205260409020805460ff19166001179055610cd982826111b9565b604051600160a060020a038316907feb73900b98b6a3e2b8b01708fe544760cf570d21e7fbe5225f24e48b5b2b432e90600090a2604080518281529051600160a060020a038416917f69488271d7ab6c5d1d852b2fedbeafcee0ad158162b8c58145130bacd56bff76919081900360200190a25050565b600060036064361015610d5f57fe5b336000908152600260209081526040808320600160a060020a03891684529091529020548414610d8e57600080fd5b336000818152600260209081526040808320600160a060020a038a1680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3506001949350505050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107dd5780601f106107b2576101008083540402835291602001916107dd565b600f6020526000908152604090205460ff1681565b600e5481565b610e7633610600565b565b600c546000907501000000000000000000000000000000000000000000900460ff1680610eaf5750600a54600160a060020a031633145b80610ec45750600c54600160a060020a031633145b1515610ecf57600080fd5b610ed9838361140e565b9392505050565b600c5474010000000000000000000000000000000000000000900460ff1681565b600a54600160a060020a03163314610f1857600080fd5b6008544210610f2657600080fd5b428111610f3257600080fd5b600855565b600a54600160a060020a03163314610f4e57600080fd5b600c805474ff000000000000000000000000000000000000000019169055565b60075481565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600a546000908190600160a060020a03163314610fbb57600080fd5b600160a060020a0383161515610fd057600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051849350600160a060020a038416916370a082319160248083019260209291908290030181600087803b15801561103457600080fd5b505af1158015611048573d6000803e3d6000fd5b505050506040513d602081101561105e57600080fd5b5051600a54604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810184905290519293509084169163a9059cbb916044808201926020929091908290030181600087803b1580156110d257600080fd5b505af11580156110e6573d6000803e3d6000fd5b505050506040513d60208110156110fc57600080fd5b5050505050565b600c547501000000000000000000000000000000000000000000900460ff1681565b6000828202831580611141575082848281151561113e57fe5b04145b1515610ed957fe5b600080600061115a42600854611501565b915062093a8082101561116f57506000611199565b621275008210156111825750600a611199565b621baf808210156111955750600f611199565b5060145b92915050565b6000828201838110801590611141575082811015610ed957fe5b60008067016345785d8a00006111d6846658d15e17628000611125565b8115156111df57fe5b0491506111ec838361119f565b90506007546111fd6000548361119f565b111561120857600080fd5b6112146000548261119f565b6000908155600160a060020a038516815260016020526040902054611239908461119f565b600160a060020a0380861660009081526001602052604080822093909355600c549091168152205461126b908361119f565b600c54600160a060020a031660009081526001602052604090205550505050565b60006003606436101561129b57fe5b600160a060020a03841615156112b057600080fd5b600160a060020a03851660009081526001602052604090205483118015906112fb5750600160a060020a03851660009081526002602090815260408083203384529091529020548311155b80156113075750600083115b151561131257600080fd5b600160a060020a0385166000908152600160205260409020546113359084611501565b600160a060020a038087166000908152600160205260408082209390935590861681522054611364908461119f565b600160a060020a0380861660009081526001602090815260408083209490945591881681526002825282812033825290915220546113a29084611501565b600160a060020a03808716600081815260026020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001949350505050565b60006002604436101561141d57fe5b600160a060020a038416151561143257600080fd5b3360009081526001602052604090205483118015906114515750600083115b151561145c57600080fd5b336000908152600160205260409020546114769084611501565b3360009081526001602052604080822092909255600160a060020a038616815220546114a2908461119f565b600160a060020a0385166000818152600160209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b60008282111561150d57fe5b509003905600a165627a7a723058204f110c9d468c8ed59ad06290ea2cafa00afa0a7eaeb9725783407d0007a31f6200290000000000000000000000001868561c3ff89e92602afa604f781e215284c31d000000000000000000000000b4d5056d84d81f0921f48b760d81a23ef56f040c000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000c8",
  "constructorArguments": "0000000000000000000000001868561c3ff89e92602afa604f781e215284c31d000000000000000000000000b4d5056d84d81f0921f48b760d81a23ef56f040c000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000c8"
}