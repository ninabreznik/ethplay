{
  "address": "0xc617d51e3a1f621da8ae67b2f652d6ac02eb8d95",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Hoard: HRD Token",
  "contractName": "HoardToken",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-22\n*/\n\npragma solidity ^0.5.8;\n\n\n/// @title ERC20 Token Interface\n/// @author Hoard Team\n/// @notice See https://github.com/ethereum/EIPs/issues/20\ncontract ERC20Token {\n\n    // PUBLIC INTERFACE\n\n    // /// @dev Returns total amount of tokens\n    // /// @notice params -> (uint256 totalSupply)\n    // It's implamented as a variable which doesn't override this method. Commented to prevent compilation error.\n    // function totalSupply    () constant public returns (uint256);\n\n    /// @dev Returns balance of specified account\n    /// @notice params -> (address _owner)\n    function balanceOf      (address) view public returns (uint256);\n\n    /// @dev  Transfers tokens from msg.sender to a specified address\n    /// @notice params -> (address _to, uint256 _value)\n    function transfer       (address, uint256) public returns (bool);\n\n    /// @dev  Allowance mechanism - delegated transfer\n    /// @notice params -> (address _from, address _to, uint256 _value)\n    function transferFrom   (address, address, uint256) public returns (bool);\n\n    /// @dev  Allowance mechanism - approve delegated transfer\n    /// @notice params -> (address _spender, uint256 _value)\n    function approve        (address, uint256) public returns (bool);\n\n    /// @dev  Allowance mechanism - set allowance for specified address\n    /// @notice params -> (address _owner, address _spender)\n    function allowance      (address, address) public view returns (uint256);\n\n\n    // EVENTS\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n}\n\n\n/// @title Safe Math\n/// @author Open Zeppelin\n/// @notice implementation from - https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/math/SafeMath.sol\nlibrary SafeMath {\n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n  \n  function max256(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a >= b ? a : b;\n  }\n\n  function min256(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a < b ? a : b;\n  }\n\n}\n\n\n\n/// @title Standard ERC20 compliant token\n/// @author Hoard Team\n/// @notice Original taken from https://github.com/ethereum/EIPs/issues/20\n/// @notice SafeMath used as specified by OpenZeppelin\n/// @notice Comments and additional approval code from https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token\ncontract StandardToken is ERC20Token {\n\n    using SafeMath for uint256;\n\n    mapping (address => uint256) balances;\n\n    mapping (address => mapping (address => uint256)) allowed;\n\n    uint256 public totalSupply;\n\n   /// @dev transfer token for a specified address\n   /// @param _to The address to transfer to.\n   /// @param _value The amount to be transferred.\n   function transfer(address _to, uint256 _value) public returns (bool) {\n        balances[msg.sender] = balances[msg.sender].safeSub(_value);\n        balances[_to] = balances[_to].safeAdd(_value);\n\n        emit Transfer(msg.sender, _to, _value);            \n\n        return true;\n    }\n\n    /// @dev Transfer tokens from one address to another\n    /// @param _from address The address which you want to send tokens from\n    /// @param _to address The address which you want to transfer to\n    /// @param _value uint256 the amount of tokens to be transferred\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        uint256 _allowance = allowed[_from][msg.sender];\n\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n        // require (_value <= _allowance);        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\n\n        balances[_to] = balances[_to].safeAdd(_value);\n        balances[_from] = balances[_from].safeSub(_value);\n        allowed[_from][msg.sender] = _allowance.safeSub(_value);\n\n        emit Transfer(_from, _to, _value);\n            \n        return true;\n    }\n\n    /// @dev Gets the balance of the specified address.\n    /// @param _owner The address to query the the balance of. \n    /// @return An uint256 representing the amount owned by the passed address.\n    function balanceOf(address _owner) view public returns (uint256) {\n        return balances[_owner];\n    }\n\n   /// @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   /// @param _spender The address which will spend the funds.\n   /// @param _value The amount of tokens to be spent.\n   function approve(address _spender, uint256 _value) public returns (bool) {\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n        \n        allowed[msg.sender][_spender] = _value;\n\n        emit Approval(msg.sender, _spender, _value);\n\n        return true;\n    }\n\n   /// @dev Function to check the amount of tokens that an owner allowed to a spender.\n   /// @param _owner address The address which owns the funds.\n   /// @param _spender address The address which will spend the funds.\n   /// @return A uint256 specifying the amount of tokens still available for the spender.\n   function allowance(address _owner, address _spender) view public returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n\n    /// @notice approve should be called when allowed[_spender] == 0. To increment\n    /// allowed value it is better to use this function to avoid 2 calls (and wait until \n    /// the first transaction is mined)\n    function increaseApproval (address _spender, uint256 _addedValue) public returns (bool) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].safeAdd(_addedValue);\n\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\n        return true;\n    }\n\n    /// @notice approve should be called when allowed[_spender] == 0. To decrement\n    /// allowed value it is better to use this function to avoid 2 calls (and wait until \n    /// the first transaction is mined)\n    function decreaseApproval (address _spender, uint256 _subtractedValue) public returns (bool) {\n        uint256 oldValue = allowed[msg.sender][_spender];\n        \n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue - _subtractedValue;\n        }\n\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\n        return true;\n    }\n\n}\n\n\n/// @title Migration Agent interface\n/// @author Hoard Team\n/// @notice Based on GNT implementation - https://github.com/golemfactory/golem-crowdfunding/blob/master/contracts/Token.sol\ncontract MigrationAgent {\n\n    /// @dev migrates tokens or other \"assets\" from one contract to another (not yet specified)\n    /// @notice parameters -> (address _from, uint _value)\n    function migrateFrom(address, uint256) public;\n}\n\n\n/// @title Mintable token interface\n/// @author Hoard Team\ncontract Mintable {\n\n    /// @dev Mint new tokens  \n    /// @notice params -> (address _recipient, uint256 _amount)\n    function mintTokens         (address, uint256) public;\n}\n\n\n/// @title Migratable entity interface\n/// @author Hoard Team\ncontract Migratable {\n\n    /// @dev Migrates tokens for msg.sender  \n    /// @notice params -> (uint256 _value)\n    function migrate            (uint256) public;\n\n\n    // EVENTS\n\n    event Migrate               (address indexed _from, address indexed _to, uint256 _value);\n}\n\n\n/// @title Standard ERC20 compliant token\n/// @author Hoard Team\ncontract ExtendedStandardToken is StandardToken, Migratable, Mintable {\n\n    address public migrationAgent;\n    uint256 public totalMigrated;\n\n\n    // MODIFIERS\n\n    modifier migrationAgentSet {\n        require(migrationAgent != address(0));\n        _;\n    }\n\n    modifier migrationAgentNotSet {\n        require(migrationAgent == address(0));\n        _;\n    }\n\n    /// @dev Internal constructor to prevent bare instances of this contract\n    constructor () internal {\n    }\n\n    // MIGRATION LOGIC\n\n    /// @dev Migrates tokens for msg.sender and burns them\n    /// @param _value amount of tokens to migrate\n    function migrate            (uint256 _value) public {\n\n        // Validate input value\n        require(_value > 0);\n    \n        //require(_value <= balances[msg.sender]);\n        //not necessary as safeSub throws in case the above condition does not hold\n    \n        balances[msg.sender] = balances[msg.sender].safeSub(_value);\n        totalSupply = totalSupply.safeSub(_value);\n        totalMigrated = totalMigrated.safeAdd(_value);\n\n        MigrationAgent(migrationAgent).migrateFrom(msg.sender, _value);\n\n        emit Migrate(msg.sender, migrationAgent, _value);\n    }\n\n\n    // MINTING LOGIC\n\n    /// @dev Mints additional tokens\n    /// @param _recipient owner of new tokens \n    /// @param _amount amount of tokens to mint\n    function mintTokens         (address _recipient, uint256 _amount) public {\n        require(_amount > 0);\n\n        balances[_recipient] = balances[_recipient].safeAdd(_amount);\n        totalSupply = totalSupply.safeAdd(_amount);\n\n        // Log token creation event\n        emit Transfer(address(0), msg.sender, _amount);\n    }\n\n\n    // CONTROL LOGIC\n\n    /// @dev Sets address of a new migration agent\n    /// @param _address address of new migration agent \n    function setMigrationAgent  (address _address) public {\n        migrationAgent = _address; \n    }\n\n}\n\n\n\n/// @title Hoard Token (HRD) - crowdfunding code for Hoard token\n/// @author Hoard Team\n/// @notice Based on MLN implementation - https://github.com/melonproject/melon/blob/master/contracts/tokens/MelonToken.sol\n/// @notice Based on GNT implementation - https://github.com/golemfactory/golem-crowdfunding/blob/master/contracts/Token.sol\ncontract HoardToken is ExtendedStandardToken {\n\n    // Token description fields\n    string public constant name = \"Hoard Token\";\n    string public constant symbol = \"HRD\";\n    uint256 public constant decimals = 18;  // 18 decimal places, the same as ETH\n\n    // contract supervision variables\n    address public creator;\n    address public hoard;\n    address public migrationMaster;\n\n\n    // MODIFIERS\n\n    modifier onlyCreator {\n        require(msg.sender == creator);\n        _;\n    }\n\n    modifier onlyHoard {\n        require(msg.sender == hoard);\n        _;\n    }\n\n    modifier onlyMigrationMaster {\n        require(msg.sender == migrationMaster);\n        _;\n    }\n\n    // CONSTRUCTION\n\n    /// @param _hoard Hoard multisig contract\n    /// @param _migrationMaster migration master\n    constructor (address _hoard, address _migrationMaster) public {\n        require(_hoard != address(0));\n        require(_migrationMaster != address(0));\n\n        creator = msg.sender;\n        hoard = _hoard;\n        migrationMaster = _migrationMaster;\n    }\n\n\n    // BASE CLASS IMPLEMENTATION\n\n    /// @notice ExtendedStandardToken is StandardToken\n    function transfer               (address _to, uint256 _value) public\n        returns (bool) \n    {\n        return super.transfer(_to, _value);\n    }\n\n\n    /// @notice ExtendedStandardToken is StandardToken\n    function transferFrom           (address _from, address _to, uint256 _value) public \n        returns (bool)\n    {\n        return super.transferFrom(_from, _to, _value);\n    }\n\n\n    /// @notice ExtendedStandardToken is Migratable\n    function migrate                (uint256 _value) public migrationAgentSet {\n        super.migrate(_value);    \n    }\n\n    /// @notice ExtendedStandardToken\n    function setMigrationAgent      (address _address) public onlyMigrationMaster migrationAgentNotSet {\n        require(_address != address(0));\n\n        super.setMigrationAgent(_address);\n    }\n\n    /// @notice ExtendedStandardToken is Mintable\n    function mintTokens             (address _recipient, uint256 _amount) public onlyCreator {\n        super.mintTokens(_recipient, _amount);\n    }\n\n    // CONTROL LOGIC\n\n    /// @dev changes Hoard multisig address to another one\n    function changeHoardAddress     (address _address) onlyHoard external { hoard = _address; }\n\n    /// @dev changes migration master address to another one\n    function changeMigrationMaster  (address _address) onlyHoard external { migrationMaster = _address; }\n\n}",
  "bytecode": "608060405234801561001057600080fd5b50604051604080610ce98339810180604052604081101561003057600080fd5b5080516020909101516001600160a01b03821661004c57600080fd5b6001600160a01b03811661005f57600080fd5b600580546001600160a01b03199081163317909155600680546001600160a01b0394851690831617905560078054929093169116179055610c44806100a56000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610370578063a9059cbb14610378578063c3f97d4a146103a4578063d73dd623146103ac578063dd62ed3e146103d8578063f0dda65c1461040657610137565b806370a08231146102ee57806375e2ff65146103145780637d8890ca1461033a5780638328dbcd1461036057806395a0f5eb1461036857610137565b8063313ce567116100ff578063313ce5671461026d578063454b0608146102755780635efe96e01461029457806366188463146102ba578063676d2e62146102e657610137565b806302d05d3f1461013c57806306fdde0314610160578063095ea7b3146101dd57806318160ddd1461021d57806323b872dd14610237575b600080fd5b610144610432565b604080516001600160a01b039092168252519081900360200190f35b610168610441565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a257818101518382015260200161018a565b50505050905090810190601f1680156101cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610209600480360360408110156101f357600080fd5b506001600160a01b03813516906020013561046b565b604080519115158252519081900360200190f35b61022561050b565b60408051918252519081900360200190f35b6102096004803603606081101561024d57600080fd5b506001600160a01b03813581169160208101359091169060400135610511565b610225610526565b6102926004803603602081101561028b57600080fd5b503561052b565b005b610292600480360360208110156102aa57600080fd5b50356001600160a01b031661054c565b610209600480360360408110156102d057600080fd5b506001600160a01b038135169060200135610585565b610144610669565b6102256004803603602081101561030457600080fd5b50356001600160a01b0316610678565b6102926004803603602081101561032a57600080fd5b50356001600160a01b0316610693565b6102926004803603602081101561035057600080fd5b50356001600160a01b03166106dc565b610144610715565b610225610724565b61016861072a565b6102096004803603604081101561038e57600080fd5b506001600160a01b03813516906020013561074c565b61014461075f565b610209600480360360408110156103c257600080fd5b506001600160a01b03813516906020013561076e565b610225600480360360408110156103ee57600080fd5b506001600160a01b0381358116916020013516610807565b6102926004803603604081101561041c57600080fd5b506001600160a01b038135169060200135610832565b6005546001600160a01b031681565b6040518060400160405280600b8152602001600160a91b6a2437b0b932102a37b5b2b70281525081565b600081158061049b57503360009081526001602090815260408083206001600160a01b0387168452909152902054155b6104a457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025481565b600061051e848484610857565b949350505050565b601281565b6003546001600160a01b031661054057600080fd5b61054981610965565b50565b6006546001600160a01b0316331461056357600080fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526001602090815260408083206001600160a01b0386168452909152812054808311156105da573360009081526001602090815260408083206001600160a01b0388168452909152812055610603565b3360009081526001602090815260408083206001600160a01b0388168452909152902083820390555b3360008181526001602090815260408083206001600160a01b0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6007546001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b6007546001600160a01b031633146106aa57600080fd5b6003546001600160a01b0316156106c057600080fd5b6001600160a01b0381166106d357600080fd5b61054981610a86565b6006546001600160a01b031633146106f357600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b60045481565b604051806040016040528060038152602001600160ea1b621214910281525081565b60006107588383610aa8565b9392505050565b6006546001600160a01b031681565b3360009081526001602090815260408083206001600160a01b03861684529091528120546107a2908363ffffffff610b5616565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b0316331461084957600080fd5b6108538282610b65565b5050565b6001600160a01b03808416600090815260016020908152604080832033845282528083205493861683529082905281205490919061089b908463ffffffff610b5616565b6001600160a01b0380861660009081526020819052604080822093909355908716815220546108d0908463ffffffff610c0616565b6001600160a01b0386166000908152602081905260409020556108f9818463ffffffff610c0616565b6001600160a01b03808716600081815260016020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001949350505050565b6000811161097257600080fd5b33600090815260208190526040902054610992908263ffffffff610c0616565b336000908152602081905260409020556002546109b5908263ffffffff610c0616565b6002556004546109cb908263ffffffff610b5616565b600490815560035460408051600160e01b637a3130e3028152339381019390935260248301849052516001600160a01b0390911691637a3130e391604480830192600092919082900301818387803b158015610a2657600080fd5b505af1158015610a3a573d6000803e3d6000fd5b50506003546040805185815290516001600160a01b0390921693503392507f18df02dcc52b9c494f391df09661519c0069bd8540141946280399408205ca1a919081900360200190a350565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b33600090815260208190526040812054610ac8908363ffffffff610c0616565b33600090815260208190526040808220929092556001600160a01b03851681522054610afa908363ffffffff610b5616565b6001600160a01b038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60008282018381101561075857fe5b60008111610b7257600080fd5b6001600160a01b038216600090815260208190526040902054610b9b908263ffffffff610b5616565b6001600160a01b038316600090815260208190526040902055600254610bc7908263ffffffff610b5616565b60025560408051828152905133916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600082821115610c1257fe5b5090039056fea165627a7a72305820773aa0e6bb1a136488e3a52befd47cf69ae3e4674aeaf6b20f9d5f520dca97fc0029000000000000000000000000c14f6e197f8116e5ee3dd5d6049635ba6d7060df000000000000000000000000c14f6e197f8116e5ee3dd5d6049635ba6d7060df",
  "constructorArguments": "000000000000000000000000c14f6e197f8116e5ee3dd5d6049635ba6d7060df000000000000000000000000c14f6e197f8116e5ee3dd5d6049635ba6d7060df"
}