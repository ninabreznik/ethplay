{
  "address": "0xa74476443119a942de498590fe1f2454d7d4ac0d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Golem Token",
  "contractName": "GolemNetworkToken",
  "compilerVersion": "v0.4.4+commit.4633f3de",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2016-11-10\n*/\n\npragma solidity ^0.4.4;\n\n\n/// @title Golem Network Token (GNT) - crowdfunding code for Golem Project\ncontract GolemNetworkToken {\n    string public constant name = \"Golem Network Token\";\n    string public constant symbol = \"GNT\";\n    uint8 public constant decimals = 18;  // 18 decimal places, the same as ETH.\n\n    uint256 public constant tokenCreationRate = 1000;\n\n    // The funding cap in weis.\n    uint256 public constant tokenCreationCap = 820000 ether * tokenCreationRate;\n    uint256 public constant tokenCreationMin = 150000 ether * tokenCreationRate;\n\n    uint256 public fundingStartBlock;\n    uint256 public fundingEndBlock;\n\n    // The flag indicates if the GNT contract is in Funding state.\n    bool public funding = true;\n\n    // Receives ETH and its own GNT endowment.\n    address public golemFactory;\n\n    // Has control over token migration to next version of token.\n    address public migrationMaster;\n\n    GNTAllocation lockedAllocation;\n\n    // The current total token supply.\n    uint256 totalTokens;\n\n    mapping (address => uint256) balances;\n\n    address public migrationAgent;\n    uint256 public totalMigrated;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Migrate(address indexed _from, address indexed _to, uint256 _value);\n    event Refund(address indexed _from, uint256 _value);\n\n    function GolemNetworkToken(address _golemFactory,\n                               address _migrationMaster,\n                               uint256 _fundingStartBlock,\n                               uint256 _fundingEndBlock) {\n\n        if (_golemFactory == 0) throw;\n        if (_migrationMaster == 0) throw;\n        if (_fundingStartBlock <= block.number) throw;\n        if (_fundingEndBlock   <= _fundingStartBlock) throw;\n\n        lockedAllocation = new GNTAllocation(_golemFactory);\n        migrationMaster = _migrationMaster;\n        golemFactory = _golemFactory;\n        fundingStartBlock = _fundingStartBlock;\n        fundingEndBlock = _fundingEndBlock;\n    }\n\n    /// @notice Transfer `_value` GNT tokens from sender's account\n    /// `msg.sender` to provided account address `_to`.\n    /// @notice This function is disabled during the funding.\n    /// @dev Required state: Operational\n    /// @param _to The address of the tokens recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transfer(address _to, uint256 _value) returns (bool) {\n        // Abort if not in Operational state.\n        if (funding) throw;\n\n        var senderBalance = balances[msg.sender];\n        if (senderBalance >= _value && _value > 0) {\n            senderBalance -= _value;\n            balances[msg.sender] = senderBalance;\n            balances[_to] += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        }\n        return false;\n    }\n\n    function totalSupply() external constant returns (uint256) {\n        return totalTokens;\n    }\n\n    function balanceOf(address _owner) external constant returns (uint256) {\n        return balances[_owner];\n    }\n\n    // Token migration support:\n\n    /// @notice Migrate tokens to the new token contract.\n    /// @dev Required state: Operational Migration\n    /// @param _value The amount of token to be migrated\n    function migrate(uint256 _value) external {\n        // Abort if not in Operational Migration state.\n        if (funding) throw;\n        if (migrationAgent == 0) throw;\n\n        // Validate input value.\n        if (_value == 0) throw;\n        if (_value > balances[msg.sender]) throw;\n\n        balances[msg.sender] -= _value;\n        totalTokens -= _value;\n        totalMigrated += _value;\n        MigrationAgent(migrationAgent).migrateFrom(msg.sender, _value);\n        Migrate(msg.sender, migrationAgent, _value);\n    }\n\n    /// @notice Set address of migration target contract and enable migration\n\t/// process.\n    /// @dev Required state: Operational Normal\n    /// @dev State transition: -> Operational Migration\n    /// @param _agent The address of the MigrationAgent contract\n    function setMigrationAgent(address _agent) external {\n        // Abort if not in Operational Normal state.\n        if (funding) throw;\n        if (migrationAgent != 0) throw;\n        if (msg.sender != migrationMaster) throw;\n        migrationAgent = _agent;\n    }\n\n    function setMigrationMaster(address _master) external {\n        if (msg.sender != migrationMaster) throw;\n        if (_master == 0) throw;\n        migrationMaster = _master;\n    }\n\n    // Crowdfunding:\n\n    /// @notice Create tokens when funding is active.\n    /// @dev Required state: Funding Active\n    /// @dev State transition: -> Funding Success (only if cap reached)\n    function create() payable external {\n        // Abort if not in Funding Active state.\n        // The checks are split (instead of using or operator) because it is\n        // cheaper this way.\n        if (!funding) throw;\n        if (block.number < fundingStartBlock) throw;\n        if (block.number > fundingEndBlock) throw;\n\n        // Do not allow creating 0 or more than the cap tokens.\n        if (msg.value == 0) throw;\n        if (msg.value > (tokenCreationCap - totalTokens) / tokenCreationRate)\n            throw;\n\n        var numTokens = msg.value * tokenCreationRate;\n        totalTokens += numTokens;\n\n        // Assign new tokens to the sender\n        balances[msg.sender] += numTokens;\n\n        // Log token creation event\n        Transfer(0, msg.sender, numTokens);\n    }\n\n    /// @notice Finalize crowdfunding\n    /// @dev If cap was reached or crowdfunding has ended then:\n    /// create GNT for the Golem Factory and developer,\n    /// transfer ETH to the Golem Factory address.\n    /// @dev Required state: Funding Success\n    /// @dev State transition: -> Operational Normal\n    function finalize() external {\n        // Abort if not in Funding Success state.\n        if (!funding) throw;\n        if ((block.number <= fundingEndBlock ||\n             totalTokens < tokenCreationMin) &&\n            totalTokens < tokenCreationCap) throw;\n\n        // Switch to Operational state. This is the only place this can happen.\n        funding = false;\n\n        // Create additional GNT for the Golem Factory and developers as\n        // the 18% of total number of tokens.\n        // All additional tokens are transfered to the account controller by\n        // GNTAllocation contract which will not allow using them for 6 months.\n        uint256 percentOfTotal = 18;\n        uint256 additionalTokens =\n            totalTokens * percentOfTotal / (100 - percentOfTotal);\n        totalTokens += additionalTokens;\n        balances[lockedAllocation] += additionalTokens;\n        Transfer(0, lockedAllocation, additionalTokens);\n\n        // Transfer ETH to the Golem Factory address.\n        if (!golemFactory.send(this.balance)) throw;\n    }\n\n    /// @notice Get back the ether sent during the funding in case the funding\n    /// has not reached the minimum level.\n    /// @dev Required state: Funding Failure\n    function refund() external {\n        // Abort if not in Funding Failure state.\n        if (!funding) throw;\n        if (block.number <= fundingEndBlock) throw;\n        if (totalTokens >= tokenCreationMin) throw;\n\n        var gntValue = balances[msg.sender];\n        if (gntValue == 0) throw;\n        balances[msg.sender] = 0;\n        totalTokens -= gntValue;\n\n        var ethValue = gntValue / tokenCreationRate;\n        Refund(msg.sender, ethValue);\n        if (!msg.sender.send(ethValue)) throw;\n    }\n}\n\n\n/// @title Migration Agent interface\ncontract MigrationAgent {\n    function migrateFrom(address _from, uint256 _value);\n}\n\n\n/// @title GNT Allocation - Time-locked vault of tokens allocated\n/// to developers and Golem Factory\ncontract GNTAllocation {\n    // Total number of allocations to distribute additional tokens among\n    // developers and the Golem Factory. The Golem Factory has right to 20000\n    // allocations, developers to 10000 allocations, divides among individual\n    // developers by numbers specified in  `allocations` table.\n    uint256 constant totalAllocations = 30000;\n\n    // Addresses of developer and the Golem Factory to allocations mapping.\n    mapping (address => uint256) allocations;\n\n    GolemNetworkToken gnt;\n    uint256 unlockedAt;\n\n    uint256 tokensCreated = 0;\n\n    function GNTAllocation(address _golemFactory) internal {\n        gnt = GolemNetworkToken(msg.sender);\n        unlockedAt = now + 6 * 30 days;\n\n        // For the Golem Factory:\n        allocations[_golemFactory] = 20000; // 12/18 pp of 30000 allocations.\n\n        // For developers:\n        allocations[0x9d3F257827B17161a098d380822fa2614FF540c8] = 2500; // 25.0% of developers' allocations (10000).\n        allocations[0xd7406E50b73972Fa4aa533a881af68B623Ba3F66] =  730; //  7.3% of developers' allocations.\n        allocations[0xd15356D05A7990dE7eC94304B0fD538e550c09C0] =  730;\n        allocations[0x3971D17B62b825b151760E2451F818BfB64489A7] =  730;\n        allocations[0x95e337d09f1bc67681b1cab7ed1125ea2bae5ca8] =  730;\n        allocations[0x0025C58dB686b8CEce05CB8c50C1858b63Aa396E] =  730;\n        allocations[0xB127FC62dE6ca30aAc9D551591daEDdeBB2eFD7A] =  630; //  6.3% of developers' allocations.\n        allocations[0x21AF2E2c240a71E9fB84e90d71c2B2AddE0D0e81] =  630;\n        allocations[0x682AA1C3b3E102ACB9c97B861d595F9fbfF0f1B8] =  630;\n        allocations[0x6edd429c77803606cBd6Bb501CC701a6CAD6be01] =  630;\n        allocations[0x5E455624372FE11b39464e93d41D1F6578c3D9f6] =  310; //  3.1% of developers' allocations.\n        allocations[0xB7c7EaD515Ca275d53e30B39D8EBEdb3F19dA244] =  138; //  1.38% of developers' allocations.\n        allocations[0xD513b1c3fe31F3Fe0b1E42aa8F55e903F19f1730] =  135; //  1.35% of developers' allocations.\n        allocations[0x70cac7f8E404EEFce6526823452e428b5Ab09b00] =  100; //  1.0% of developers' allocations.\n        allocations[0xe0d5861e7be0fac6c85ecde6e8bf76b046a96149] =  100;\n        allocations[0x17488694D2feE4377Ec718836bb9d4910E81D9Cf] =  100;\n        allocations[0xb481372086dEc3ca2FCCD3EB2f462c9C893Ef3C5] =  100;\n        allocations[0xFB6D91E69CD7990651f26a3aa9f8d5a89159fC92] =   70; //  0.7% of developers' allocations.\n        allocations[0xE2ABdAe2980a1447F445cb962f9c0bef1B63EE13] =   70;\n        allocations[0x729A5c0232712caAf365fDd03c39cb361Bd41b1C] =   70;\n        allocations[0x12FBD8fef4903f62e30dD79AC7F439F573E02697] =   70;\n        allocations[0x657013005e5cFAF76f75d03b465cE085d402469A] =   42; //  0.42% of developers' allocations.\n        allocations[0xD0AF9f75EA618163944585bF56aCA98204d0AB66] =   25; //  0.25% of developers' allocations.\n    }\n\n    /// @notice Allow developer to unlock allocated tokens by transferring them\n    /// from GNTAllocation to developer's address.\n    function unlock() external {\n        if (now < unlockedAt) throw;\n\n        // During first unlock attempt fetch total number of locked tokens.\n        if (tokensCreated == 0)\n            tokensCreated = gnt.balanceOf(this);\n\n        var allocation = allocations[msg.sender];\n        allocations[msg.sender] = 0;\n        var toTransfer = tokensCreated * allocation / totalAllocations;\n\n        // Will fail if allocation (and therefore toTransfer) is 0.\n        if (!gnt.transfer(msg.sender, toTransfer)) throw;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"golemFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_master\",\"type\":\"address\"}],\"name\":\"setMigrationMaster\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migrationMaster\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreationCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"setMigrationAgent\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migrationAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingEndBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMigrated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreationMin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"funding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreationRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"create\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_golemFactory\",\"type\":\"address\"},{\"name\":\"_migrationMaster\",\"type\":\"address\"},{\"name\":\"_fundingStartBlock\",\"type\":\"uint256\"},{\"name\":\"_fundingEndBlock\",\"type\":\"uint256\"}],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Migrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"}]",
  "bytecode": "606060408190526002805460ff19166001179055608080610f99833960e06040529051905160a05160c051600160a060020a03841615156100e857610002565b83604051610542806101158339018082600160a060020a03168152602001915050604051809103906000f0801561000257600480546c01000000000000000000000000928302839004600160a060020a03199182161790915560038054868402849004921691909117905560028054868302929092046101000261010060a860020a03199092169190911790556000829055600181905550505050610942806106576000396000f35b600160a060020a03831615156100fd57610002565b43821161010957610002565b81811161003f5761000256606060408190526000600355602080610542833950608060405251600180546c0100000000000000000000000033810204600160a060020a031990911617905562ed4e004201600255600160a060020a0381166000908152602081905260408120614e2090556109c47f2f5182ca3c71fba9448b5797d92da7b954eeaeb24b669d38048e225561035564556102da7f45df8c30765988748331aa685f931bde8d58d486ac2309077e90fd6baaf79e038190557f7ea8a6eced6159c474e51a36ed2fdbeefcbc828cf6c05d46fdd1fad880f548ea8190557fd80aeb97d8ade363914f049101e13bc4c79be147033a8a1fa0e91f954320cfd18190557fd1a1c717e5b5609c72c4991362e166a35ee5521d47496bc9108fc3a6602538008190557fc61bf6c63255306aa3f1daf108b6b962c862b30a9ef9b3111a55cf9a1be9a8d6556102767fe4359dc5a3244eba9cfcf67269b2f0a0a57c214e4cb82f9b6912def299f047528190557fd933b2425e5345f54b48182cee8f889a1054dce093c93ee4a944524ad0af59c48190557ffbefcf091d9562d672e0fdc71891d2d3803db16d6743ea8a23fcfef88796a09d8190557fe5b2b0da35bec8da153886157cd88779fbd6472c27b66913d5c69e1445aa806f556101367f085c12f836c258aa880654d07c75055519a771d8386caee004632ed5afcbe9d155608a7f3a722b2d2783e2bd2f725b60f80f56ff256a418ebecca715894d57d5feb689715560877fd1c40006b594ba5b504908c67a40189432057d2394f1773ab7774bd3123bca545560647f0eef056c83f1149e261cf3b61d9e20a9e0c5f64ada6748701e1b27d1de158ce38190557f7070adbdb8f2d4019cc852cc26afe358144bc7fbe990d77bc637f5c7e722c41c8190557f581488c6d9a945dc9b0fd448f74525266c0b506653a1d4c8fbb199bb557cf58e8190557f943f08fbd86d9c14937cccb5045806305960ee93608df8764c86f5364a3102335560467fb6bd8179f2fe2847ab9692c0c2e093d2f25ee7f1808ba3b0e7d52c98fa7d9f558190557fb63e17ea19e0eaf429d63bb96f3600c9aca74fbce87db89dc7bc4577fc7683b78190557f502063b8af6f4e9d3f416f8166f86c7f3c6c0abe8692397a61182ba8dca7c1208190557fe7e3a4e3c5fd8cb5848bc5c4fe5e5566299670c2bf4adffd95984be3e33a61df55602a7f664cea02e91f34521fafc42bfb9f9365ac4cd7ca869351e22c8d1ed75d54157f5573d0af9f75ea618163944585bf56aca98204d0ab66905260197f0d038efd35c79f794bca2eb26019390c0b2b1975cb3389c23e540ef5ea1670275550610177806103cb6000396000f3606060405260e060020a6000350463a69df4b5811461001e575b610002565b346100025761003c6000600060026000505442101561004257610002565b005b5050565b60035415156100c357600160009054906101000a9004600160a060020a0316600160a060020a03166370a08231306000604051602001526040518260e060020a0281526004018082600160a060020a03168152602001915050602060405180830381600087803b156100025760325a03f11561000257505060405151600355505b600160a060020a03331660009081526020819052604081208054919055600354909250617530908302049050600160009054906101000a9004600160a060020a0316600160a060020a031663a9059cbb33836000604051602001526040518360e060020a0281526004018083600160a060020a0316815260200182815260200192505050602060405180830381600087803b156100025760325a03f115610002575050604051511515905061003e5761000256606060405236156101065760e060020a600035046306fdde03811461010b578063162229501461014a57806318160ddd1461016757806326316e5814610182578063313ce567146101a8578063454b0608146101b55780634bb278f3146101d0578063590e1ae3146101ee578063676d2e621461020c5780636f7920fd1461022357806370a082311461023b57806375e2ff65146102605780638328dbcd1461027b57806391b43d131461029257806395a0f5eb146102a057806395d89b41146102ae578063a9059cbb146102ed578063c039daf614610310578063cb4c86b714610327578063cf8d652c14610338578063d648a64714610346578063efc81a8c14610354575b610002565b346100025761036b60408051808201909152601381527f476f6c656d204e6574776f726b20546f6b656e00000000000000000000000000602082015281565b34610002576103d9600254600160a060020a036101009091041681565b34610002576005545b60408051918252519081900360200190f35b34610002576103f560043560035433600160a060020a0390811691161461042157610002565b34610002576103f7601281565b34610002576103f560043560025460ff161561046b57610002565b34610002576103f5600254600090819060ff16151561059457610002565b34610002576103f5600254600090819060ff16151561069557610002565b34610002576103d9600354600160a060020a031681565b34610002576101706b02a649c112686927b400000081565b3461000257600160a060020a0360043516600090815260066020526040902054610170565b34610002576103f560043560025460ff161561077e57610002565b34610002576103d9600754600160a060020a031681565b346100025761017060015481565b346100025761017060085481565b346100025761036b60408051808201909152600381527f474e540000000000000000000000000000000000000000000000000000000000602082015281565b346100025761040d600435602435600254600090819060ff16156107f057610002565b34610002576101706a7c13bc4b2c133c5600000081565b346100025761040d60025460ff1681565b34610002576101706103e881565b346100025761017060005481565b6103f560025460009060ff16151561089057610002565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156103cb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051600160a060020a039092168252519081900360200190f35b005b6040805160ff9092168252519081900360200190f35b604080519115158252519081900360200190f35b600160a060020a038116151561043657610002565b600380546c010000000000000000000000008084020473ffffffffffffffffffffffffffffffffffffffff1990911617905550565b600754600160a060020a0316151561048257610002565b80151561048e57610002565b600160a060020a0333166000908152600660205260409020548111156104b357610002565b600160a060020a0333811660008181526006602052604080822080548690039055600580548690039055600880548601905560075481517f7a3130e30000000000000000000000000000000000000000000000000000000081526004810194909452602484018690529051931692637a3130e392604480820193929182900301818387803b156100025760325a03f115610002575050600754604080518481529051600160a060020a03928316935033909216917f18df02dcc52b9c494f391df09661519c0069bd8540141946280399408205ca1a9181900360200190a350565b600154431115806105b257506005546a7c13bc4b2c133c5600000090105b80156105cc57506005546b02a649c112686927b400000090105b156105d657610002565b50506002805460ff1916905560058054605260128083029190910491820190925560048054600160a060020a03908116600090815260066020908152604080832080548701905593548451868152945193169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36040516002546101009004600160a060020a0390811691309091163180156108fc02916000818181858888f19350505050151561069157610002565b5050565b60015443116106a357610002565b6005546a7c13bc4b2c133c5600000090106106bd57610002565b600160a060020a03331660009081526006602052604090205491508115156106e457610002565b600160a060020a0333166000908152600660205260408120556005805483900390556103e88204905033600160a060020a03167fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d826040518082815260200191505060405180910390a2604051600160a060020a0333169082156108fc029083906000818181858888f19350505050151561069157610002565b600754600160a060020a03161561079457610002565b60035433600160a060020a039081169116146107af57610002565b600780546c010000000000000000000000008084020473ffffffffffffffffffffffffffffffffffffffff1990911617905550565b600091505b5092915050565b50600160a060020a03331660009081526006602052604090205482811080159061081a5750600083115b156107e457600160a060020a0333811660008181526006602090815260408083209588900395869055938816808352918490208054880190558351878152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3600191506107e9565b60005443101561089f57610002565b6001544311156108ae57610002565b3415156108ba57610002565b6005546103e8906b02a649c112686927b400000003043411156108dc57610002565b5060058054346103e802908101909155600160a060020a0333166000818152600660209081526040808320805486019055805185815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35056",
  "constructorArguments": "0000000000000000000000007da82c7ab4771ff031b66538d2fb9b0b047f6cf90000000000000000000000007da82c7ab4771ff031b66538d2fb9b0b047f6cf9000000000000000000000000000000000000000000000000000000000027cab8000000000000000000000000000000000000000000000000000000000029b814"
}