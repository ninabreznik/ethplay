{
  "address": "0xcac00d55c89a2baaf37768e548d9c7ccd9fb8786",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BatchUtils",
  "compilerVersion": "v0.4.16+commit.d7661dd9",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-07\n*/\n\npragma solidity ^0.4.11;\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  uint8 public decimals;\n  function balanceOf(address who) public constant returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\ncontract BatchUtils is Ownable {\n  using SafeMath for uint256;\n  mapping (address => bool) public operational;\n  uint256 public sendlimit = 10;\n  \n  function BatchUtils() {\n      operational[msg.sender] = true;\n  }\n  \n  function setLimit(uint256 _limit) onlyOwner public {\n      sendlimit = _limit;\n  }\n  \n  function setOperational(address[] addresses, bool op) onlyOwner public {\n    for (uint i = 0; i < addresses.length; i++) {\n        operational[addresses[i]] = op;\n    }\n  }\n  \n  function batchTransfer(address[] _tokens, address[] _receivers, uint256 _value) {\n    require(operational[msg.sender]); \n    require(_value <= sendlimit);\n    \n    uint cnt = _receivers.length;\n    require(cnt > 0 && cnt <= 121);\n    \n    for (uint j = 0; j < _tokens.length; j++) {\n        ERC20Basic token = ERC20Basic(_tokens[j]);\n        \n        uint256 value = _value.mul(10**uint256(token.decimals()));\n        uint256 amount = uint256(cnt).mul(value);\n        \n        require(value > 0 && token.balanceOf(this) >= amount);\n        \n        for (uint i = 0; i < cnt; i++) {\n            token.transfer(_receivers[i], value);\n        }\n    }\n  }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"setLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"op\",\"type\":\"bool\"}],\"name\":\"setOperational\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sendlimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"operational\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokens\",\"type\":\"address[]\"},{\"name\":\"_receivers\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "6060604052600a600255341561001457600080fd5b5b5b60008054600160a060020a03191633600160a060020a03161790555b600160a060020a0333166000908152600160208190526040909120805460ff191690911790555b5b610629806100696000396000f300606060405236156100675763ffffffff60e060020a60003504166327ea6f2b811461006c578063411a1714146100845780638da5cb5b146100d9578063900e1248146101085780639f0c3ae81461012d578063dbf4c54c14610160578063f2fde38b146101f3575b600080fd5b341561007757600080fd5b610082600435610214565b005b341561008f57600080fd5b61008260046024813581810190830135806020818102016040519081016040528093929190818152602001838360200280828437509496505050509135151591506102399050565b005b34156100e457600080fd5b6100ec6102b5565b604051600160a060020a03909116815260200160405180910390f35b341561011357600080fd5b61011b6102c4565b60405190815260200160405180910390f35b341561013857600080fd5b61014c600160a060020a03600435166102ca565b604051901515815260200160405180910390f35b341561016b57600080fd5b61008260046024813581810190830135806020818102016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284375094965050933593506102df92505050565b005b34156101fe57600080fd5b610082600160a060020a0360043516610535565b005b60005433600160a060020a0390811691161461022f57600080fd5b60028190555b5b50565b6000805433600160a060020a0390811691161461025557600080fd5b5060005b82518110156102ae57816001600085848151811061027357fe5b90602001906020020151600160a060020a031681526020810191909152604001600020805460ff19169115159190911790555b600101610259565b5b5b505050565b600054600160a060020a031681565b60025481565b60016020526000908152604090205460ff1681565b600160a060020a0333166000908152600160205260408120548190819081908190819060ff16151561031057600080fd5b60025487111561031f57600080fd5b87519550600086118015610334575060798611155b151561033f57600080fd5b600094505b88518510156105295788858151811061035957fe5b9060200190602002015193506103db84600160a060020a031663313ce5676000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156103ae57600080fd5b6102c65a03f115156103bf57600080fd5b505050604051805189915060ff16600a0a63ffffffff6105ce16565b92506103ed868463ffffffff6105ce16565b915060008311801561047057508184600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561045257600080fd5b6102c65a03f1151561046357600080fd5b5050506040518051905010155b151561047b57600080fd5b5060005b8581101561051d5783600160a060020a031663a9059cbb8983815181106104a257fe5b906020019060200201518560006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156104f957600080fd5b6102c65a03f1151561050a57600080fd5b505050604051805150505b60010161047f565b5b600190940193610344565b5b505050505050505050565b60005433600160a060020a0390811691161461055057600080fd5b600160a060020a038116151561056557600080fd5b600054600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b60008282028315806105ea57508284828115156105e757fe5b04145b15156105f257fe5b8091505b50929150505600a165627a7a723058204512cd5f2f013dcc0455963d4c5a242e22dfeed41ebd9fbfbcac2cecb61ea5d80029"
}