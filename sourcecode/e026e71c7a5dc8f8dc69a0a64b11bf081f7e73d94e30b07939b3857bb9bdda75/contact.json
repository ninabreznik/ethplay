{
  "address": "0x1d448e79eb679c171d43c8f18cc80f79bff4744c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "GMBAirdrop",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-26\n*/\n\npragma solidity ^0.4.11;\n\n// This is a contract for GMB AirDrops\n\ncontract Ownable {\n  address public owner;\n\n  constructor () internal {\n    owner = msg.sender;\n  }\n\n  modifier onlyOwner() {\n    if (msg.sender != owner) {\n      revert();\n    }\n    _;\n  }\n\n  function transferOwnership(address newOwner) onlyOwner {\n    if (newOwner != address(0)) {\n      owner = newOwner;\n    }\n  }\n}\n\ncontract ERC20Basic {\n  uint public totalSupply;\n  function balanceOf(address who) constant returns (uint);\n  function transfer(address to, uint value);\n  event Transfer(address indexed from, address indexed to, uint value);\n}\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) constant returns (uint);\n  function transferFrom(address from, address to, uint value);\n  function approve(address spender, uint value);\n  event Approval(address indexed owner, address indexed spender, uint value);\n}\n\ncontract GMBAirdrop is Ownable {\n\n    function multisend(address[] to, uint256[] value) onlyOwner returns (uint256) {\n\n        address tokenAddr = 0x30093D157DcA641A2906E08F734a930991b77330;\n        uint256 i = 0;\n        while (i < to.length) {\n           ERC20(tokenAddr).transfer(to[i], value[i] * ( 10 ** 18 ));\n           i++;\n        }\n        return(i);\n    }\n}",
  "bytecode": "608060405260008054600160a060020a033316600160a060020a0319909116179055610304806100306000396000f3006080604052600436106100565763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b811461005b578063aad41a411461008c578063f2fde38b1461012c575b600080fd5b34801561006757600080fd5b5061007061014f565b60408051600160a060020a039092168252519081900360200190f35b34801561009857600080fd5b506040805160206004803580820135838102808601850190965280855261011a95369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375094975061015e9650505050505050565b60408051918252519081900360200190f35b34801561013857600080fd5b5061014d600160a060020a0360043516610282565b005b600054600160a060020a031681565b600080548190819033600160a060020a0390811691161461017e57600080fd5b507330093d157dca641a2906e08f734a930991b77330905060005b845181101561027a5781600160a060020a031663a9059cbb86838151811015156101bf57fe5b9060200190602002015186848151811015156101d757fe5b90602001906020020151670de0b6b3a7640000026040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561025657600080fd5b505af115801561026a573d6000803e3d6000fd5b5050600190920191506101999050565b949350505050565b60005433600160a060020a0390811691161461029d57600080fd5b600160a060020a038116156102d5576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a723058201eeddfddba99db2cc542aa0133a0a23e7e69f012f2c7a9b97e2a711c1f15932a0029"
}