{
  "address": "0x13db74b3cf512f65c4b91683940b4f3955e05085",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "SuperKeepTOKEN",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-13\n*/\n\npragma solidity ^ 0.4.18;\n\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns(uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n    function div(uint256 a, uint256 b) internal pure returns(uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n    function add(uint256 a, uint256 b) internal pure returns(uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\ncontract ERC20 {\n    uint256 public totalSupply;\n    function balanceOf(address who) public view returns(uint256);\n    function transfer(address to, uint256 value) public returns(bool);\n    function allowance(address owner, address spender) public view returns(uint256);\n    function transferFrom(address from, address to, uint256 value) public returns(bool);\n    function approve(address spender, uint256 value) public returns(bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\ncontract StandardToken is ERC20 {\n    using SafeMath for uint256;\n        mapping(address => uint256) balances;\n    mapping(address => mapping(address => uint256)) allowed;\n    function balanceOf(address _owner) public view returns(uint256 balance) {\n        return balances[_owner];\n    }\n    function transfer(address _to, uint256 _value) public returns(bool) {\n        require(_to != address(0));\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n    function batchTransfer(address[] _tos, uint256[] _count)  public returns(bool) {\n        require(_tos.length > 0);\n        for (uint32 i = 0; i < _tos.length; i++) {\n            transfer(_tos[i], _count[i]);\n        }\n        return true;\n    }\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool) {\n        uint _allowance = allowed[_from][msg.sender];\n        require(_to != address(0));\n        require(_value <= _allowance);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = _allowance.sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n    function approve(address _spender, uint256 _value) public returns(bool) {\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    function allowance(address _owner, address _spender) public view returns(uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n}\ncontract SuperKeepTOKEN is StandardToken {\n    string public constant name = \"Super Keep Token\";\n    string public constant symbol = \"SKE\";\n    uint8 public constant decimals = 8;\n    function SuperKeepTOKEN() public {\n        totalSupply = 10000000000000000000;\n        balances[msg.sender] = totalSupply;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"_count\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b678ac7230489e800006000818155600160a060020a033316815260016020526040902055610724806100426000396000f3006060604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016857806323b872dd1461018d578063313ce567146101b557806370a08231146101de57806388d695b2146101fd57806395d89b411461028c578063a9059cbb1461029f578063dd62ed3e146102c1575b600080fd5b34156100b357600080fd5b6100bb6102e6565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f75780820151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013d57600080fd5b610154600160a060020a036004351660243561031d565b604051901515815260200160405180910390f35b341561017357600080fd5b61017b6103c3565b60405190815260200160405180910390f35b341561019857600080fd5b610154600160a060020a03600435811690602435166044356103c9565b34156101c057600080fd5b6101c8610501565b60405160ff909116815260200160405180910390f35b34156101e957600080fd5b61017b600160a060020a0360043516610506565b341561020857600080fd5b61015460046024813581810190830135806020818102016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284375094965061052195505050505050565b341561029757600080fd5b6100bb610598565b34156102aa57600080fd5b610154600160a060020a03600435166024356105cf565b34156102cc57600080fd5b61017b600160a060020a03600435811690602435166106a5565b60408051908101604052601081527f5375706572204b65657020546f6b656e00000000000000000000000000000000602082015281565b600081158061034f5750600160a060020a03338116600090815260026020908152604080832093871683529290522054155b151561035a57600080fd5b600160a060020a03338116600081815260026020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60005481565b600160a060020a03808416600090815260026020908152604080832033851684529091528120549091841615156103ff57600080fd5b8083111561040c57600080fd5b600160a060020a038516600090815260016020526040902054610435908463ffffffff6106d016565b600160a060020a03808716600090815260016020526040808220939093559086168152205461046a908463ffffffff6106e216565b600160a060020a038516600090815260016020526040902055610493818463ffffffff6106d016565b600160a060020a03808716600081815260026020908152604080832033861684529091529081902093909355908616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3506001949350505050565b600881565b600160a060020a031660009081526001602052604090205490565b600080600084511161053257600080fd5b5060005b83518163ffffffff16101561058e57610585848263ffffffff168151811061055a57fe5b90602001906020020151848363ffffffff168151811061057657fe5b906020019060200201516105cf565b50600101610536565b5060019392505050565b60408051908101604052600381527f534b450000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a03831615156105e657600080fd5b600160a060020a03331660009081526001602052604090205461060f908363ffffffff6106d016565b600160a060020a033381166000908152600160205260408082209390935590851681522054610644908363ffffffff6106e216565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156106dc57fe5b50900390565b6000828201838110156106f157fe5b93925050505600a165627a7a72305820bc49147e0bad207684050a3b2f4537be2dc84f31eb436ac3491301feed01d8210029"
}