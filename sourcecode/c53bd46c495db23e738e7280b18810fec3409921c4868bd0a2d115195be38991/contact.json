{
  "address": "0xf083f40599741bc576173b492268972ce661e5ec",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "NetkillerAdvancedToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-05\n*/\n\npragma solidity ^0.4.24;\n\n/******************************************/\n/*       Netkiller ADVANCED TOKEN         */\n/******************************************/\n/* Author netkiller <[emailÂ protected]>   */\n/* Home http://www.netkiller.cn           */\n/* Version 2018-06-13 - SafeMatch         */\n/******************************************/\nlibrary SafeMath {\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        if (a == 0) {\n            return 0;\n        }\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract NetkillerAdvancedToken {\n    \n    using SafeMath for uint256;\n    \n    address public owner;\n    string public name;\n    string public symbol;\n    uint public decimals;\n    uint256 public totalSupply;\n    \n    mapping (address => uint256) internal balances;\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Burn(address indexed from, uint256 value);\n    \n    mapping (address => bool) public frozenAccount;\n    event FrozenFunds(address indexed target, bool frozen);\n\n    constructor(\n        uint256 initialSupply,\n        string tokenName,\n        string tokenSymbol,\n        uint decimalUnits\n    ) public {\n        owner = msg.sender;\n        name = tokenName;\n        symbol = tokenSymbol; \n        decimals = decimalUnits;\n        totalSupply = initialSupply * 10 ** uint256(decimals);\n        balances[msg.sender] = totalSupply;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) onlyOwner public {\n        if (_newOwner != address(0)) {\n            owner = _newOwner;\n        }\n    }\n    function balanceOf(address _address) view public returns (uint256 balance) {\n        return balances[_address];\n    }\n    \n    /* Internal transfer, only can be called by this contract */\n    function _transfer(address _from, address _to, uint256 _value) internal {\n        require (_to != address(0));                        // Prevent transfer to 0x0 address. Use burn() instead\n        require (balances[_from] >= _value);                // Check if the sender has enough\n        require (balances[_to] + _value > balances[_to]);   // Check for overflows\n        require(!frozenAccount[_from]);                     // Check if sender is frozen\n        require(!frozenAccount[_to]);                       // Check if recipient is frozen\n        balances[_from] = balances[_from].sub(_value);      // Subtract from the sender\n        balances[_to] = balances[_to].add(_value);          // Add the same to the recipient\n        emit Transfer(_from, _to, _value);\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);     // Check allowance\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    function allowance(address _owner, address _spender) view public returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    function freezeAccount(address target, bool freeze) onlyOwner public {\n        frozenAccount[target] = freeze;\n        emit FrozenFunds(target, freeze);\n    }\n\n    function transferBatch(address[] _to, uint256 _value) public returns (bool success) {\n        for (uint i=0; i<_to.length; i++) {\n            _transfer(msg.sender, _to[i], _value);\n        }\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferBatch\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50604051610a0d380380610a0d833981016040908152815160208084015192840151606085015160008054600160a060020a031916331790559385018051939590949101929091610066916001918601906100a4565b50815161007a9060029060208501906100a4565b506003819055600a0a929092026004819055336000908152600560205260409020555061013f9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100e557805160ff1916838001178555610112565b82800160010185558215610112579182015b828111156101125782518255916020019190600101906100f7565b5061011e929150610122565b5090565b61013c91905b8082111561011e5760008155600101610128565b90565b6108bf8061014e6000396000f3006080604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d4578063095ea7b31461015e57806318160ddd1461019657806323b872dd146101bd578063313ce567146101e757806370a08231146101fc578063806e085e1461021d5780638da5cb5b1461027457806395d89b41146102a5578063a9059cbb146102ba578063b414d4b6146102de578063dd62ed3e146102ff578063e724529c14610326578063f2fde38b1461034e575b600080fd5b3480156100e057600080fd5b506100e961036f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012357818101518382015260200161010b565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016a57600080fd5b50610182600160a060020a03600435166024356103fc565b604080519115158252519081900360200190f35b3480156101a257600080fd5b506101ab610462565b60408051918252519081900360200190f35b3480156101c957600080fd5b50610182600160a060020a0360043581169060243516604435610468565b3480156101f357600080fd5b506101ab61052a565b34801561020857600080fd5b506101ab600160a060020a0360043516610530565b34801561022957600080fd5b506040805160206004803580820135838102808601850190965280855261018295369593946024949385019291829185019084908082843750949750509335945061054b9350505050565b34801561028057600080fd5b50610289610582565b60408051600160a060020a039092168252519081900360200190f35b3480156102b157600080fd5b506100e9610591565b3480156102c657600080fd5b50610182600160a060020a03600435166024356105e9565b3480156102ea57600080fd5b50610182600160a060020a03600435166105ff565b34801561030b57600080fd5b506101ab600160a060020a0360043581169060243516610614565b34801561033257600080fd5b5061034c600160a060020a0360043516602435151561063f565b005b34801561035a57600080fd5b5061034c600160a060020a03600435166106b6565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b505050505081565b336000818152600660209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60045481565b600160a060020a03831660009081526005602052604081205482111561048d57600080fd5b600160a060020a03841660009081526006602090815260408083203384529091529020548211156104bd57600080fd5b600160a060020a03841660009081526006602090815260408083203384529091529020546104f1908363ffffffff61070816565b600160a060020a038516600090815260066020908152604080832033845290915290205561052084848461071a565b5060019392505050565b60035481565b600160a060020a031660009081526005602052604090205490565b6000805b83518110156105205761057a33858381518110151561056a57fe5b906020019060200201518561071a565b60010161054f565b600054600160a060020a031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103f45780601f106103c9576101008083540402835291602001916103f4565b60006105f633848461071a565b50600192915050565b60076020526000908152604090205460ff1681565b600160a060020a03918216600090815260066020908152604080832093909416825291909152205490565b600054600160a060020a0316331461065657600080fd5b600160a060020a038216600081815260076020908152604091829020805460ff1916851515908117909155825190815291517f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a59281900390910190a25050565b600054600160a060020a031633146106cd57600080fd5b600160a060020a03811615610705576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b60008282111561071457fe5b50900390565b600160a060020a038216151561072f57600080fd5b600160a060020a03831660009081526005602052604090205481111561075457600080fd5b600160a060020a0382166000908152600560205260409020548181011161077a57600080fd5b600160a060020a03831660009081526007602052604090205460ff16156107a057600080fd5b600160a060020a03821660009081526007602052604090205460ff16156107c657600080fd5b600160a060020a0383166000908152600560205260409020546107ef908263ffffffff61070816565b600160a060020a038085166000908152600560205260408082209390935590841681522054610824908263ffffffff61088016565b600160a060020a0380841660008181526005602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b8181018281101561088d57fe5b929150505600a165627a7a723058204b893cda1ca013c1315045dff0da7646a16121dd9e19ffee56952e1c58c5dbb3002900000000000000000000000000000000000000000000000000000002540be400000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000124269742056616c7565204172742042616e6b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034256420000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "00000000000000000000000000000000000000000000000000000002540be400000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000124269742056616c7565204172742042616e6b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034256420000000000000000000000000000000000000000000000000000000000"
}