{
  "address": "0x888d2d7bba1869ae13c2af95a312fdc150b7a6ee",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Bounty0xStaking",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-22\n*/\n\npragma solidity ^0.4.23;\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n\n\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\n\n\n\n\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n\n\n\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n\n\ncontract BntyControllerInterface {\n    function destroyTokensInBntyTokenContract(address _owner, uint _amount) public returns (bool);\n}\n\n\n\n\ncontract Bounty0xStaking is Ownable, Pausable {\n\n    using SafeMath for uint256;\n\n    address public Bounty0xToken;\n    uint public lockTime;\n\n    mapping (address => uint) public balances;\n    mapping (uint => mapping (address => uint)) public stakes; // mapping of submission ids to mapping of addresses that staked an amount of bounty token\n    mapping (address => uint) public huntersLockDateTime;\n    mapping (address => uint) public huntersLockAmount;\n    \n    \n    event Deposit(address indexed depositor, uint amount, uint balance);\n    event Withdraw(address indexed depositor, uint amount, uint balance);\n    event Stake(uint indexed submissionId, address indexed hunter, uint amount, uint balance);\n    event StakeReleased(uint indexed submissionId, address indexed from, address indexed to, uint amount);\n    event Lock(address indexed hunter, uint amount, uint endDateTime);\n    event Unlock(address indexed hunter, uint amount);\n\n\n    constructor(address _bounty0xToken) public {\n        Bounty0xToken = _bounty0xToken;\n        lockTime = 30 days;\n    }\n    \n\n    function deposit(uint _amount) external whenNotPaused {\n        require(_amount != 0);\n        //remember to call Token(address).approve(this, amount) or this contract will not be able to do the transfer on your behalf.\n        require(ERC20(Bounty0xToken).transferFrom(msg.sender, this, _amount));\n        balances[msg.sender] = SafeMath.add(balances[msg.sender], _amount);\n\n        emit Deposit(msg.sender, _amount, balances[msg.sender]);\n    }\n    \n    function withdraw(uint _amount) external whenNotPaused {\n        require(_amount != 0);\n        require(balances[msg.sender] >= _amount);\n        balances[msg.sender] = SafeMath.sub(balances[msg.sender], _amount);\n        require(ERC20(Bounty0xToken).transfer(msg.sender, _amount));\n\n        emit Withdraw(msg.sender, _amount, balances[msg.sender]);\n    }\n    \n    \n    function lock(uint _amount) external whenNotPaused {\n        require(_amount != 0);\n        require(balances[msg.sender] >= _amount);\n        \n        balances[msg.sender] = SafeMath.sub(balances[msg.sender], _amount);\n        huntersLockAmount[msg.sender] = SafeMath.add(huntersLockAmount[msg.sender], _amount);\n        huntersLockDateTime[msg.sender] = SafeMath.add(now, lockTime);\n        \n        emit Lock(msg.sender, huntersLockAmount[msg.sender], huntersLockDateTime[msg.sender]);\n    }\n    \n    function depositAndLock(uint _amount) external whenNotPaused {\n        require(_amount != 0);\n        require(ERC20(Bounty0xToken).transferFrom(msg.sender, this, _amount));\n        \n        huntersLockAmount[msg.sender] = SafeMath.add(huntersLockAmount[msg.sender], _amount);\n        huntersLockDateTime[msg.sender] = SafeMath.add(now, lockTime);\n        \n        emit Lock(msg.sender, huntersLockAmount[msg.sender], huntersLockDateTime[msg.sender]);\n    }\n    \n    function unlock() external whenNotPaused {\n        require(huntersLockDateTime[msg.sender] <= now);\n        uint amountLocked = huntersLockAmount[msg.sender];\n        require(amountLocked != 0);\n        \n        huntersLockAmount[msg.sender] = SafeMath.sub(huntersLockAmount[msg.sender], amountLocked);\n        balances[msg.sender] = SafeMath.add(balances[msg.sender], amountLocked);\n        \n        emit Unlock(msg.sender, amountLocked);\n    }\n\n\n    function stake(uint _submissionId, uint _amount) external whenNotPaused {\n        require(balances[msg.sender] >= _amount);\n        balances[msg.sender] = SafeMath.sub(balances[msg.sender], _amount);\n        stakes[_submissionId][msg.sender] = SafeMath.add(stakes[_submissionId][msg.sender], _amount);\n\n        emit Stake(_submissionId, msg.sender, _amount, balances[msg.sender]);\n    }\n\n    function stakeToMany(uint[] _submissionIds, uint[] _amounts) external whenNotPaused {\n        uint totalAmount = 0;\n        for (uint j = 0; j < _amounts.length; j++) {\n            totalAmount = SafeMath.add(totalAmount, _amounts[j]);\n        }\n        require(balances[msg.sender] >= totalAmount);\n        balances[msg.sender] = SafeMath.sub(balances[msg.sender], totalAmount);\n\n        for (uint i = 0; i < _submissionIds.length; i++) {\n            stakes[_submissionIds[i]][msg.sender] = SafeMath.add(stakes[_submissionIds[i]][msg.sender], _amounts[i]);\n\n            emit Stake(_submissionIds[i], msg.sender, _amounts[i], balances[msg.sender]);\n        }\n    }\n\n\n    function releaseStake(uint _submissionId, address _from, address _to) external onlyOwner {\n        require(stakes[_submissionId][_from] != 0);\n\n        balances[_to] = SafeMath.add(balances[_to], stakes[_submissionId][_from]);\n        emit StakeReleased(_submissionId, _from, _to, stakes[_submissionId][_from]);\n        \n        stakes[_submissionId][_from] = 0;\n    }\n\n    function releaseManyStakes(uint[] _submissionIds, address[] _from, address[] _to) external onlyOwner {\n        require(_submissionIds.length == _from.length &&\n                _submissionIds.length == _to.length);\n\n        for (uint i = 0; i < _submissionIds.length; i++) {\n            require(_from[i] != address(0));\n            require(_to[i] != address(0));\n            require(stakes[_submissionIds[i]][_from[i]] != 0);\n            \n            balances[_to[i]] = SafeMath.add(balances[_to[i]], stakes[_submissionIds[i]][_from[i]]);\n            emit StakeReleased(_submissionIds[i], _from[i], _to[i], stakes[_submissionIds[i]][_from[i]]);\n            \n            stakes[_submissionIds[i]][_from[i]] = 0;\n        }\n    }\n    \n\n    function changeLockTime(uint _periodInSeconds) external onlyOwner {\n        lockTime = _periodInSeconds;\n    }\n    \n    \n    // Burnable mechanism\n\n    address public bntyController;\n\n    event Burn(uint indexed submissionId, address indexed from, uint amount);\n\n    function changeBntyController(address _bntyController) external onlyOwner {\n        bntyController = _bntyController;\n    }\n\n\n    function burnStake(uint _submissionId, address _from) external onlyOwner {\n        require(stakes[_submissionId][_from] > 0);\n\n        uint amountToBurn = stakes[_submissionId][_from];\n        stakes[_submissionId][_from] = 0;\n\n        require(BntyControllerInterface(bntyController).destroyTokensInBntyTokenContract(this, amountToBurn));\n        emit Burn(_submissionId, _from, amountToBurn);\n    }\n\n\n    // in case of emergency\n    function emergentWithdraw() external onlyOwner {\n        require(ERC20(Bounty0xToken).transfer(msg.sender, address(this).balance));\n    }\n    \n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositAndLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bntyController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_submissionId\",\"type\":\"uint256\"},{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"burnStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_submissionId\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_submissionId\",\"type\":\"uint256\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"releaseStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"emergentWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_periodInSeconds\",\"type\":\"uint256\"}],\"name\":\"changeLockTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_submissionIds\",\"type\":\"uint256[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"stakeToMany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bntyController\",\"type\":\"address\"}],\"name\":\"changeBntyController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_submissionIds\",\"type\":\"uint256[]\"},{\"name\":\"_from\",\"type\":\"address[]\"},{\"name\":\"_to\",\"type\":\"address[]\"}],\"name\":\"releaseManyStakes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"huntersLockAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Bounty0xToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"huntersLockDateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_bounty0xToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"hunter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hunter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"endDateTime\",\"type\":\"uint256\"}],\"name\":\"Lock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hunter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60806040526000805460a060020a60ff021916905534801561002057600080fd5b506040516020806116a0833981016040525160008054600160a060020a0319908116331790915560018054600160a060020a039093169290911691909117905562278d0060025561162a806100766000396000f3006080604052600436106101535763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630d668087811461015857806327e235e31461017f5780632e1a7d4d146101a057806333e6c509146101ba5780633f4ba83a146101d25780635bf47d40146101e75780635c975abb1461021857806367c3ad8e14610241578063715018a6146102655780637b0472f01461027a5780637de548d8146102955780638456cb59146102bf5780638a9920b7146102d45780638da5cb5b146102e957806396cf5227146102fe57806397e8e520146103165780639ed99951146103425780639f11731714610363578063a69df4b51461039b578063a9a3bba4146103b0578063b1b60ff0146103d4578063b6b55f25146103f5578063c7aaa83f1461040d578063d25e5f0a14610422578063dd46706414610443578063f2fde38b1461045b575b600080fd5b34801561016457600080fd5b5061016d61047c565b60408051918252519081900360200190f35b34801561018b57600080fd5b5061016d600160a060020a0360043516610482565b3480156101ac57600080fd5b506101b8600435610494565b005b3480156101c657600080fd5b506101b86004356105ef565b3480156101de57600080fd5b506101b8610752565b3480156101f357600080fd5b506101fc6107c8565b60408051600160a060020a039092168252519081900360200190f35b34801561022457600080fd5b5061022d6107d7565b604080519115158252519081900360200190f35b34801561024d57600080fd5b506101b8600435600160a060020a03602435166107e7565b34801561027157600080fd5b506101b8610938565b34801561028657600080fd5b506101b86004356024356109a4565b3480156102a157600080fd5b506101b8600435600160a060020a0360243581169060443516610a85565b3480156102cb57600080fd5b506101b8610b9c565b3480156102e057600080fd5b506101b8610c17565b3480156102f557600080fd5b506101fc610cd4565b34801561030a57600080fd5b506101b8600435610ce3565b34801561032257600080fd5b506101b86024600480358281019290820135918135918201910135610cff565b34801561034e57600080fd5b506101b8600160a060020a0360043516610eae565b34801561036f57600080fd5b506101b86024600480358281019290820135918135808301929082013591604435918201910135610ef4565b3480156103a757600080fd5b506101b8611252565b3480156103bc57600080fd5b5061016d600435600160a060020a036024351661132f565b3480156103e057600080fd5b5061016d600160a060020a036004351661134c565b34801561040157600080fd5b506101b860043561135e565b34801561041957600080fd5b506101fc611499565b34801561042e57600080fd5b5061016d600160a060020a03600435166114a8565b34801561044f57600080fd5b506101b86004356114ba565b34801561046757600080fd5b506101b8600160a060020a0360043516611539565b60025481565b60036020526000908152604090205481565b60005460a060020a900460ff16156104ab57600080fd5b8015156104b757600080fd5b336000908152600360205260409020548111156104d357600080fd5b336000908152600360205260409020546104ed908261155c565b3360008181526003602090815260408083209490945560015484517fa9059cbb0000000000000000000000000000000000000000000000000000000081526004810194909452602484018690529351600160a060020a039094169363a9059cbb93604480820194918390030190829087803b15801561056b57600080fd5b505af115801561057f573d6000803e3d6000fd5b505050506040513d602081101561059557600080fd5b505115156105a257600080fd5b336000818152600360209081526040918290205482518581529182015281517ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568929181900390910190a250565b60005460a060020a900460ff161561060657600080fd5b80151561061257600080fd5b600154604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490529051600160a060020a03909216916323b872dd916064808201926020929091908290030181600087803b15801561068557600080fd5b505af1158015610699573d6000803e3d6000fd5b505050506040513d60208110156106af57600080fd5b505115156106bc57600080fd5b336000908152600660205260409020546106d6908261156e565b336000908152600660205260409020556002546106f490429061156e565b3360008181526005602081815260408084208690556006825292839020549181528251918252810193909352805191927f49eaf4942f1237055eb4cfa5f31c9dfe50d5b4ade01e021f7de8be2fbbde557b929081900390910190a250565b600054600160a060020a0316331461076957600080fd5b60005460a060020a900460ff16151561078157600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b600754600160a060020a031681565b60005460a060020a900460ff1681565b60008054600160a060020a031633146107ff57600080fd5b6000838152600460209081526040808320600160a060020a03861684529091528120541161082c57600080fd5b506000828152600460208181526040808420600160a060020a03868116865290835281852080549086905560075483517f252f497700000000000000000000000000000000000000000000000000000000815230968101969096526024860182905292519095929091169363252f4977936044808301949193928390030190829087803b1580156108bc57600080fd5b505af11580156108d0573d6000803e3d6000fd5b505050506040513d60208110156108e657600080fd5b505115156108f357600080fd5b604080518281529051600160a060020a0384169185917fe1b6e34006e9871307436c226f232f9c5e7690c1d2c4f4adda4f607a75a9beca9181900360200190a3505050565b600054600160a060020a0316331461094f57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60005460a060020a900460ff16156109bb57600080fd5b336000908152600360205260409020548111156109d757600080fd5b336000908152600360205260409020546109f1908261155c565b3360008181526003602090815260408083209490945585825260048152838220928252919091522054610a24908261156e565b60008381526004602090815260408083203380855290835281842094909455600382529182902054825185815291820152815185927f507ac39eb33610191cd8fd54286e91c5cc464c262861643be3978f5a9f18ab02928290030190a35050565b600054600160a060020a03163314610a9c57600080fd5b6000838152600460209081526040808320600160a060020a03861684529091529020541515610aca57600080fd5b600160a060020a0380821660009081526003602090815260408083205487845260048352818420948716845293909152902054610b07919061156e565b600160a060020a0380831660008181526003602090815260408083209590955587825260048152848220938716808352938152908490205484519081529351919387927fac8f720ed7882952a138b50752a3b3a7d82d0fbe16c51aa7e83a0599dbe17624929181900390910190a4506000918252600460209081526040808420600160a060020a039093168452919052812055565b600054600160a060020a03163314610bb357600080fd5b60005460a060020a900460ff1615610bca57600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a03163314610c2e57600080fd5b600154604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152303160248201529051600160a060020a039092169163a9059cbb916044808201926020929091908290030181600087803b158015610c9b57600080fd5b505af1158015610caf573d6000803e3d6000fd5b505050506040513d6020811015610cc557600080fd5b50511515610cd257600080fd5b565b600054600160a060020a031681565b600054600160a060020a03163314610cfa57600080fd5b600255565b600080548190819060a060020a900460ff1615610d1b57600080fd5b60009250600091505b83821015610d5557610d4883868685818110610d3c57fe5b9050602002013561156e565b9250600190910190610d24565b33600090815260036020526040902054831115610d7157600080fd5b33600090815260036020526040902054610d8b908461155c565b3360009081526003602052604081209190915590505b85811015610ea557610def60046000898985818110610dbc57fe5b602090810292909201358352508181019290925260409081016000908120338252909252902054868684818110610d3c57fe5b60046000898985818110610dff57fe5b6020908102929092013583525081810192909252604090810160009081203380835293522091909155878783818110610e3457fe5b905060200201357f507ac39eb33610191cd8fd54286e91c5cc464c262861643be3978f5a9f18ab028787858181101515610e6a57fe5b3360009081526003602090815260409182902054825193820295909501358352820193909352825190819003909201919050a3600101610da1565b50505050505050565b600054600160a060020a03163314610ec557600080fd5b6007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008054600160a060020a03163314610f0c57600080fd5b8584148015610f1a57508582145b1515610f2557600080fd5b5060005b85811015610ea5576000858583818110610f3f57fe5b90506020020135600160a060020a0316600160a060020a031614151515610f6557600080fd5b6000838383818110610f7357fe5b90506020020135600160a060020a0316600160a060020a031614151515610f9957600080fd5b60046000888884818110610fa957fe5b90506020020135815260200190815260200160002060008686848181101515610fce57fe5b90506020020135600160a060020a0316600160a060020a0316600160a060020a031681526020019081526020016000205460001415151561100e57600080fd5b6110bf6003600085858581811061102157fe5b90506020020135600160a060020a0316600160a060020a0316600160a060020a0316815260200190815260200160002054600460008a8a86818110151561106457fe5b9050602002013581526020019081526020016000206000888886818110151561108957fe5b90506020020135600160a060020a0316600160a060020a0316600160a060020a031681526020019081526020016000205461156e565b600360008585858181106110cf57fe5b60209081029290920135600160a060020a0316835250810191909152604001600020558282828181106110fe57fe5b90506020020135600160a060020a0316600160a060020a0316858583818110151561112557fe5b90506020020135600160a060020a0316600160a060020a0316888884818110151561114c57fe5b905060200201357fac8f720ed7882952a138b50752a3b3a7d82d0fbe16c51aa7e83a0599dbe17624600460008c8c88818110151561118657fe5b90506020020135815260200190815260200160002060008a8a8881811015156111ab57fe5b90506020020135600160a060020a0316600160a060020a0316600160a060020a03168152602001908152602001600020546040518082815260200191505060405180910390a4600060048189898581811061120257fe5b9050602002013581526020019081526020016000206000878785818110151561122757fe5b60209081029290920135600160a060020a031683525081019190915260400160002055600101610f29565b6000805460a060020a900460ff161561126a57600080fd5b3360009081526005602052604090205442101561128657600080fd5b50336000908152600660205260409020548015156112a357600080fd5b336000908152600660205260409020546112bd908261155c565b336000908152600660209081526040808320939093556003905220546112e3908261156e565b33600081815260036020908152604091829020939093558051848152905191927f6381d9813cabeb57471b5a7e05078e64845ccdb563146a6911d536f24ce960f192918290030190a250565b600460209081526000928352604080842090915290825290205481565b60066020526000908152604090205481565b60005460a060020a900460ff161561137557600080fd5b80151561138157600080fd5b600154604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490529051600160a060020a03909216916323b872dd916064808201926020929091908290030181600087803b1580156113f457600080fd5b505af1158015611408573d6000803e3d6000fd5b505050506040513d602081101561141e57600080fd5b5051151561142b57600080fd5b33600090815260036020526040902054611445908261156e565b33600081815260036020908152604091829020849055815185815290810193909352805191927f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15929081900390910190a250565b600154600160a060020a031681565b60056020526000908152604090205481565b60005460a060020a900460ff16156114d157600080fd5b8015156114dd57600080fd5b336000908152600360205260409020548111156114f957600080fd5b33600090815260036020526040902054611513908261155c565b336000908152600360209081526040808320939093556006905220546106d6908261156e565b600054600160a060020a0316331461155057600080fd5b61155981611581565b50565b60008282111561156857fe5b50900390565b8181018281101561157b57fe5b92915050565b600160a060020a038116151561159657600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058206b8f58bebb5fb514162f30d20593c0a3750758a30205db8269bc884b724c6f750029000000000000000000000000d2d6158683aee4cc838067727209a0aaf4359de3",
  "constructorArguments": "000000000000000000000000d2d6158683aee4cc838067727209a0aaf4359de3"
}