{
  "address": "0xf5b0a3efb8e8e4c201e2a935f110eaaf3ffecb8d",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Axie Token",
  "contractName": "AxieCore",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-04-02\n*/\n\npragma solidity ^0.4.19;\n\n// File: contracts/erc/erc165/IERC165.sol\n\n/// @title ERC-165 Standard Interface Detection\n/// @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\ninterface IERC165 {\n  /// @notice Query if a contract implements an interface\n  /// @param interfaceID The interface identifier, as specified in ERC-165\n  /// @dev Interface identification is specified in ERC-165. This function\n  ///  uses less than 30,000 gas.\n  /// @return `true` if the contract implements `interfaceID` and\n  ///  `interfaceID` is not 0xffffffff, `false` otherwise\n  function supportsInterface(bytes4 interfaceID) external view returns (bool);\n}\n\n// File: contracts/erc/erc165/ERC165.sol\n\ncontract ERC165 is IERC165 {\n  /// @dev You must not set element 0xffffffff to true\n  mapping (bytes4 => bool) internal supportedInterfaces;\n\n  function ERC165() internal {\n    supportedInterfaces[0x01ffc9a7] = true; // ERC-165\n  }\n\n  function supportsInterface(bytes4 interfaceID) external view returns (bool) {\n    return supportedInterfaces[interfaceID];\n  }\n}\n\n// File: contracts/erc/erc721/IERC721Base.sol\n\n/// @title ERC-721 Non-Fungible Token Standard\n/// @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n///  Note: the ERC-165 identifier for this interface is 0x6466353c\ninterface IERC721Base /* is IERC165  */ {\n  /// @dev This emits when ownership of any NFT changes by any mechanism.\n  ///  This event emits when NFTs are created (`from` == 0) and destroyed\n  ///  (`to` == 0). Exception: during contract creation, any number of NFTs\n  ///  may be created and assigned without emitting Transfer. At the time of\n  ///  any transfer, the approved address for that NFT (if any) is reset to none.\n  event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\n\n  /// @dev This emits when the approved address for an NFT is changed or\n  ///  reaffirmed. The zero address indicates there is no approved address.\n  ///  When a Transfer event emits, this also indicates that the approved\n  ///  address for that NFT (if any) is reset to none.\n  event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\n\n  /// @dev This emits when an operator is enabled or disabled for an owner.\n  ///  The operator can manage all NFTs of the owner.\n  event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n\n  /// @notice Count all NFTs assigned to an owner\n  /// @dev NFTs assigned to the zero address are considered invalid, and this\n  ///  function throws for queries about the zero address.\n  /// @param _owner An address for whom to query the balance\n  /// @return The number of NFTs owned by `_owner`, possibly zero\n  function balanceOf(address _owner) external view returns (uint256);\n\n  /// @notice Find the owner of an NFT\n  /// @param _tokenId The identifier for an NFT\n  /// @dev NFTs assigned to zero address are considered invalid, and queries\n  ///  about them do throw.\n  /// @return The address of the owner of the NFT\n  function ownerOf(uint256 _tokenId) external view returns (address);\n\n  /// @notice Transfers the ownership of an NFT from one address to another address\n  /// @dev Throws unless `msg.sender` is the current owner, an authorized\n  ///  operator, or the approved address for this NFT. Throws if `_from` is\n  ///  not the current owner. Throws if `_to` is the zero address. Throws if\n  ///  `_tokenId` is not a valid NFT. When transfer is complete, this function\n  ///  checks if `_to` is a smart contract (code size > 0). If so, it calls\n  ///  `onERC721Received` on `_to` and throws if the return value is not\n  ///  `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`.\n  /// @param _from The current owner of the NFT\n  /// @param _to The new owner\n  /// @param _tokenId The NFT to transfer\n  /// @param _data Additional data with no specified format, sent in call to `_to`\n  // solium-disable-next-line arg-overflow\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes _data) external payable;\n\n  /// @notice Transfers the ownership of an NFT from one address to another address\n  /// @dev This works identically to the other function with an extra data parameter,\n  ///  except this function just sets data to []\n  /// @param _from The current owner of the NFT\n  /// @param _to The new owner\n  /// @param _tokenId The NFT to transfer\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n  /// @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n  ///  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n  ///  THEY MAY BE PERMANENTLY LOST\n  /// @dev Throws unless `msg.sender` is the current owner, an authorized\n  ///  operator, or the approved address for this NFT. Throws if `_from` is\n  ///  not the current owner. Throws if `_to` is the zero address. Throws if\n  ///  `_tokenId` is not a valid NFT.\n  /// @param _from The current owner of the NFT\n  /// @param _to The new owner\n  /// @param _tokenId The NFT to transfer\n  function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n  /// @notice Set or reaffirm the approved address for an NFT\n  /// @dev The zero address indicates there is no approved address.\n  /// @dev Throws unless `msg.sender` is the current NFT owner, or an authorized\n  ///  operator of the current owner.\n  /// @param _approved The new approved NFT controller\n  /// @param _tokenId The NFT to approve\n  function approve(address _approved, uint256 _tokenId) external payable;\n\n  /// @notice Enable or disable approval for a third party (\"operator\") to manage\n  ///  all your asset.\n  /// @dev Emits the ApprovalForAll event\n  /// @param _operator Address to add to the set of authorized operators.\n  /// @param _approved True if the operators is approved, false to revoke approval\n  function setApprovalForAll(address _operator, bool _approved) external;\n\n  /// @notice Get the approved address for a single NFT\n  /// @dev Throws if `_tokenId` is not a valid NFT\n  /// @param _tokenId The NFT to find the approved address for\n  /// @return The approved address for this NFT, or the zero address if there is none\n  function getApproved(uint256 _tokenId) external view returns (address);\n\n  /// @notice Query if an address is an authorized operator for another address\n  /// @param _owner The address that owns the NFTs\n  /// @param _operator The address that acts on behalf of the owner\n  /// @return True if `_operator` is an approved operator for `_owner`, false otherwise\n  function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n}\n\n// File: contracts/erc/erc721/IERC721Enumerable.sol\n\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n/// @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n///  Note: the ERC-165 identifier for this interface is 0x780e9d63\ninterface IERC721Enumerable /* is IERC721Base */ {\n  /// @notice Count NFTs tracked by this contract\n  /// @return A count of valid NFTs tracked by this contract, where each one of\n  ///  them has an assigned and queryable owner not equal to the zero address\n  function totalSupply() external view returns (uint256);\n\n  /// @notice Enumerate valid NFTs\n  /// @dev Throws if `_index` >= `totalSupply()`.\n  /// @param _index A counter less than `totalSupply()`\n  /// @return The token identifier for the `_index`th NFT,\n  ///  (sort order not specified)\n  function tokenByIndex(uint256 _index) external view returns (uint256);\n\n  /// @notice Enumerate NFTs assigned to an owner\n  /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\n  ///  `_owner` is the zero address, representing invalid NFTs.\n  /// @param _owner An address where we are interested in NFTs owned by them\n  /// @param _index A counter less than `balanceOf(_owner)`\n  /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\n  ///   (sort order not specified)\n  function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256 _tokenId);\n}\n\n// File: contracts/erc/erc721/IERC721TokenReceiver.sol\n\n/// @dev Note: the ERC-165 identifier for this interface is 0xf0b9e5ba\ninterface IERC721TokenReceiver {\n  /// @notice Handle the receipt of an NFT\n  /// @dev The ERC721 smart contract calls this function on the recipient\n  ///  after a `transfer`. This function MAY throw to revert and reject the\n  ///  transfer. This function MUST use 50,000 gas or less. Return of other\n  ///  than the magic value MUST result in the transaction being reverted.\n  ///  Note: the contract address is always the message sender.\n  /// @param _from The sending address\n  /// @param _tokenId The NFT identifier which is being transfered\n  /// @param _data Additional data with no specified format\n  /// @return `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\n  ///  unless throwing\n\tfunction onERC721Received(address _from, uint256 _tokenId, bytes _data) external returns (bytes4);\n}\n\n// File: contracts/core/dependency/AxieManager.sol\n\ninterface AxieSpawningManager {\n\tfunction isSpawningAllowed(uint256 _genes, address _owner) external returns (bool);\n  function isRebirthAllowed(uint256 _axieId, uint256 _genes) external returns (bool);\n}\n\ninterface AxieRetirementManager {\n  function isRetirementAllowed(uint256 _axieId, bool _rip) external returns (bool);\n}\n\ninterface AxieMarketplaceManager {\n  function isTransferAllowed(address _from, address _to, uint256 _axieId) external returns (bool);\n}\n\ninterface AxieGeneManager {\n  function isEvolvementAllowed(uint256 _axieId, uint256 _newGenes) external returns (bool);\n}\n\n// File: contracts/core/dependency/AxieDependency.sol\n\ncontract AxieDependency {\n\n  address public whitelistSetterAddress;\n\n  AxieSpawningManager public spawningManager;\n  AxieRetirementManager public retirementManager;\n  AxieMarketplaceManager public marketplaceManager;\n  AxieGeneManager public geneManager;\n\n  mapping (address => bool) public whitelistedSpawner;\n  mapping (address => bool) public whitelistedByeSayer;\n  mapping (address => bool) public whitelistedMarketplace;\n  mapping (address => bool) public whitelistedGeneScientist;\n\n  function AxieDependency() internal {\n    whitelistSetterAddress = msg.sender;\n  }\n\n  modifier onlyWhitelistSetter() {\n    require(msg.sender == whitelistSetterAddress);\n    _;\n  }\n\n  modifier whenSpawningAllowed(uint256 _genes, address _owner) {\n    require(\n      spawningManager == address(0) ||\n        spawningManager.isSpawningAllowed(_genes, _owner)\n    );\n    _;\n  }\n\n  modifier whenRebirthAllowed(uint256 _axieId, uint256 _genes) {\n    require(\n      spawningManager == address(0) ||\n        spawningManager.isRebirthAllowed(_axieId, _genes)\n    );\n    _;\n  }\n\n  modifier whenRetirementAllowed(uint256 _axieId, bool _rip) {\n    require(\n      retirementManager == address(0) ||\n        retirementManager.isRetirementAllowed(_axieId, _rip)\n    );\n    _;\n  }\n\n  modifier whenTransferAllowed(address _from, address _to, uint256 _axieId) {\n    require(\n      marketplaceManager == address(0) ||\n        marketplaceManager.isTransferAllowed(_from, _to, _axieId)\n    );\n    _;\n  }\n\n  modifier whenEvolvementAllowed(uint256 _axieId, uint256 _newGenes) {\n    require(\n      geneManager == address(0) ||\n        geneManager.isEvolvementAllowed(_axieId, _newGenes)\n    );\n    _;\n  }\n\n  modifier onlySpawner() {\n    require(whitelistedSpawner[msg.sender]);\n    _;\n  }\n\n  modifier onlyByeSayer() {\n    require(whitelistedByeSayer[msg.sender]);\n    _;\n  }\n\n  modifier onlyMarketplace() {\n    require(whitelistedMarketplace[msg.sender]);\n    _;\n  }\n\n  modifier onlyGeneScientist() {\n    require(whitelistedGeneScientist[msg.sender]);\n    _;\n  }\n\n  /*\n   * @dev Setting the whitelist setter address to `address(0)` would be a irreversible process.\n   *  This is to lock changes to Axie's contracts after their development is done.\n   */\n  function setWhitelistSetter(address _newSetter) external onlyWhitelistSetter {\n    whitelistSetterAddress = _newSetter;\n  }\n\n  function setSpawningManager(address _manager) external onlyWhitelistSetter {\n    spawningManager = AxieSpawningManager(_manager);\n  }\n\n  function setRetirementManager(address _manager) external onlyWhitelistSetter {\n    retirementManager = AxieRetirementManager(_manager);\n  }\n\n  function setMarketplaceManager(address _manager) external onlyWhitelistSetter {\n    marketplaceManager = AxieMarketplaceManager(_manager);\n  }\n\n  function setGeneManager(address _manager) external onlyWhitelistSetter {\n    geneManager = AxieGeneManager(_manager);\n  }\n\n  function setSpawner(address _spawner, bool _whitelisted) external onlyWhitelistSetter {\n    require(whitelistedSpawner[_spawner] != _whitelisted);\n    whitelistedSpawner[_spawner] = _whitelisted;\n  }\n\n  function setByeSayer(address _byeSayer, bool _whitelisted) external onlyWhitelistSetter {\n    require(whitelistedByeSayer[_byeSayer] != _whitelisted);\n    whitelistedByeSayer[_byeSayer] = _whitelisted;\n  }\n\n  function setMarketplace(address _marketplace, bool _whitelisted) external onlyWhitelistSetter {\n    require(whitelistedMarketplace[_marketplace] != _whitelisted);\n    whitelistedMarketplace[_marketplace] = _whitelisted;\n  }\n\n  function setGeneScientist(address _geneScientist, bool _whitelisted) external onlyWhitelistSetter {\n    require(whitelistedGeneScientist[_geneScientist] != _whitelisted);\n    whitelistedGeneScientist[_geneScientist] = _whitelisted;\n  }\n}\n\n// File: contracts/core/AxieAccessControl.sol\n\ncontract AxieAccessControl {\n\n  address public ceoAddress;\n  address public cfoAddress;\n  address public cooAddress;\n\n  function AxieAccessControl() internal {\n    ceoAddress = msg.sender;\n  }\n\n  modifier onlyCEO() {\n    require(msg.sender == ceoAddress);\n    _;\n  }\n\n  modifier onlyCFO() {\n    require(msg.sender == cfoAddress);\n    _;\n  }\n\n  modifier onlyCOO() {\n    require(msg.sender == cooAddress);\n    _;\n  }\n\n  modifier onlyCLevel() {\n    require(\n      // solium-disable operator-whitespace\n      msg.sender == ceoAddress ||\n        msg.sender == cfoAddress ||\n        msg.sender == cooAddress\n      // solium-enable operator-whitespace\n    );\n    _;\n  }\n\n  function setCEO(address _newCEO) external onlyCEO {\n    require(_newCEO != address(0));\n    ceoAddress = _newCEO;\n  }\n\n  function setCFO(address _newCFO) external onlyCEO {\n    cfoAddress = _newCFO;\n  }\n\n  function setCOO(address _newCOO) external onlyCEO {\n    cooAddress = _newCOO;\n  }\n\n  function withdrawBalance() external onlyCFO {\n    cfoAddress.transfer(this.balance);\n  }\n}\n\n// File: contracts/core/lifecycle/AxiePausable.sol\n\ncontract AxiePausable is AxieAccessControl {\n\n  bool public paused = false;\n\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  modifier whenPaused {\n    require(paused);\n    _;\n  }\n\n  function pause() external onlyCLevel whenNotPaused {\n    paused = true;\n  }\n\n  function unpause() public onlyCEO whenPaused {\n    paused = false;\n  }\n}\n\n// File: zeppelin/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n// File: contracts/core/erc721/AxieERC721BaseEnumerable.sol\n\ncontract AxieERC721BaseEnumerable is ERC165, IERC721Base, IERC721Enumerable, AxieDependency, AxiePausable {\n  using SafeMath for uint256;\n\n  // @dev Total amount of tokens.\n  uint256 private _totalTokens;\n\n  // @dev Mapping from token index to ID.\n  mapping (uint256 => uint256) private _overallTokenId;\n\n  // @dev Mapping from token ID to index.\n  mapping (uint256 => uint256) private _overallTokenIndex;\n\n  // @dev Mapping from token ID to owner.\n  mapping (uint256 => address) private _tokenOwner;\n\n  // @dev For a given owner and a given operator, store whether\n  //  the operator is allowed to manage tokens on behalf of the owner.\n  mapping (address => mapping (address => bool)) private _tokenOperator;\n\n  // @dev Mapping from token ID to approved address.\n  mapping (uint256 => address) private _tokenApproval;\n\n  // @dev Mapping from owner to list of owned token IDs.\n  mapping (address => uint256[]) private _ownedTokens;\n\n  // @dev Mapping from token ID to index in the owned token list.\n  mapping (uint256 => uint256) private _ownedTokenIndex;\n\n  function AxieERC721BaseEnumerable() internal {\n    supportedInterfaces[0x6466353c] = true; // ERC-721 Base\n    supportedInterfaces[0x780e9d63] = true; // ERC-721 Enumerable\n  }\n\n  // solium-disable function-order\n\n  modifier mustBeValidToken(uint256 _tokenId) {\n    require(_tokenOwner[_tokenId] != address(0));\n    _;\n  }\n\n  function _isTokenOwner(address _ownerToCheck, uint256 _tokenId) private view returns (bool) {\n    return _tokenOwner[_tokenId] == _ownerToCheck;\n  }\n\n  function _isTokenOperator(address _operatorToCheck, uint256 _tokenId) private view returns (bool) {\n    return whitelistedMarketplace[_operatorToCheck] ||\n      _tokenOperator[_tokenOwner[_tokenId]][_operatorToCheck];\n  }\n\n  function _isApproved(address _approvedToCheck, uint256 _tokenId) private view returns (bool) {\n    return _tokenApproval[_tokenId] == _approvedToCheck;\n  }\n\n  modifier onlyTokenOwner(uint256 _tokenId) {\n    require(_isTokenOwner(msg.sender, _tokenId));\n    _;\n  }\n\n  modifier onlyTokenOwnerOrOperator(uint256 _tokenId) {\n    require(_isTokenOwner(msg.sender, _tokenId) || _isTokenOperator(msg.sender, _tokenId));\n    _;\n  }\n\n  modifier onlyTokenAuthorized(uint256 _tokenId) {\n    require(\n      // solium-disable operator-whitespace\n      _isTokenOwner(msg.sender, _tokenId) ||\n        _isTokenOperator(msg.sender, _tokenId) ||\n        _isApproved(msg.sender, _tokenId)\n      // solium-enable operator-whitespace\n    );\n    _;\n  }\n\n  // ERC-721 Base\n\n  function balanceOf(address _owner) external view returns (uint256) {\n    require(_owner != address(0));\n    return _ownedTokens[_owner].length;\n  }\n\n  function ownerOf(uint256 _tokenId) external view mustBeValidToken(_tokenId) returns (address) {\n    return _tokenOwner[_tokenId];\n  }\n\n  function _addTokenTo(address _to, uint256 _tokenId) private {\n    require(_to != address(0));\n\n    _tokenOwner[_tokenId] = _to;\n\n    uint256 length = _ownedTokens[_to].length;\n    _ownedTokens[_to].push(_tokenId);\n    _ownedTokenIndex[_tokenId] = length;\n  }\n\n  function _mint(address _to, uint256 _tokenId) internal {\n    require(_tokenOwner[_tokenId] == address(0));\n\n    _addTokenTo(_to, _tokenId);\n\n    _overallTokenId[_totalTokens] = _tokenId;\n    _overallTokenIndex[_tokenId] = _totalTokens;\n    _totalTokens = _totalTokens.add(1);\n\n    Transfer(address(0), _to, _tokenId);\n  }\n\n  function _removeTokenFrom(address _from, uint256 _tokenId) private {\n    require(_from != address(0));\n\n    uint256 _tokenIndex = _ownedTokenIndex[_tokenId];\n    uint256 _lastTokenIndex = _ownedTokens[_from].length.sub(1);\n    uint256 _lastTokenId = _ownedTokens[_from][_lastTokenIndex];\n\n    _tokenOwner[_tokenId] = address(0);\n\n    // Insert the last token into the position previously occupied by the removed token.\n    _ownedTokens[_from][_tokenIndex] = _lastTokenId;\n    _ownedTokenIndex[_lastTokenId] = _tokenIndex;\n\n    // Resize the array.\n    delete _ownedTokens[_from][_lastTokenIndex];\n    _ownedTokens[_from].length--;\n\n    // Remove the array if no more tokens are owned to prevent pollution.\n    if (_ownedTokens[_from].length == 0) {\n      delete _ownedTokens[_from];\n    }\n\n    // Update the index of the removed token.\n    delete _ownedTokenIndex[_tokenId];\n  }\n\n  function _burn(uint256 _tokenId) internal {\n    address _from = _tokenOwner[_tokenId];\n\n    require(_from != address(0));\n\n    _removeTokenFrom(_from, _tokenId);\n    _totalTokens = _totalTokens.sub(1);\n\n    uint256 _tokenIndex = _overallTokenIndex[_tokenId];\n    uint256 _lastTokenId = _overallTokenId[_totalTokens];\n\n    delete _overallTokenIndex[_tokenId];\n    delete _overallTokenId[_totalTokens];\n    _overallTokenId[_tokenIndex] = _lastTokenId;\n    _overallTokenIndex[_lastTokenId] = _tokenIndex;\n\n    Transfer(_from, address(0), _tokenId);\n  }\n\n  function _isContract(address _address) private view returns (bool) {\n    uint _size;\n    // solium-disable-next-line security/no-inline-assembly\n    assembly { _size := extcodesize(_address) }\n    return _size > 0;\n  }\n\n  function _transferFrom(\n    address _from,\n    address _to,\n    uint256 _tokenId,\n    bytes _data,\n    bool _check\n  )\n    internal\n    mustBeValidToken(_tokenId)\n    onlyTokenAuthorized(_tokenId)\n    whenTransferAllowed(_from, _to, _tokenId)\n  {\n    require(_isTokenOwner(_from, _tokenId));\n    require(_to != address(0));\n    require(_to != _from);\n\n    _removeTokenFrom(_from, _tokenId);\n\n    delete _tokenApproval[_tokenId];\n    Approval(_from, address(0), _tokenId);\n\n    _addTokenTo(_to, _tokenId);\n\n    if (_check && _isContract(_to)) {\n      IERC721TokenReceiver(_to).onERC721Received.gas(50000)(_from, _tokenId, _data);\n    }\n\n    Transfer(_from, _to, _tokenId);\n  }\n\n  // solium-disable arg-overflow\n\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes _data) external payable {\n    _transferFrom(_from, _to, _tokenId, _data, true);\n  }\n\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable {\n    _transferFrom(_from, _to, _tokenId, \"\", true);\n  }\n\n  function transferFrom(address _from, address _to, uint256 _tokenId) external payable {\n    _transferFrom(_from, _to, _tokenId, \"\", false);\n  }\n\n  // solium-enable arg-overflow\n\n  function approve(\n    address _approved,\n    uint256 _tokenId\n  )\n    external\n    payable\n    mustBeValidToken(_tokenId)\n    onlyTokenOwnerOrOperator(_tokenId)\n    whenNotPaused\n  {\n    address _owner = _tokenOwner[_tokenId];\n\n    require(_owner != _approved);\n    require(_tokenApproval[_tokenId] != _approved);\n\n    _tokenApproval[_tokenId] = _approved;\n\n    Approval(_owner, _approved, _tokenId);\n  }\n\n  function setApprovalForAll(address _operator, bool _approved) external whenNotPaused {\n    require(_tokenOperator[msg.sender][_operator] != _approved);\n    _tokenOperator[msg.sender][_operator] = _approved;\n    ApprovalForAll(msg.sender, _operator, _approved);\n  }\n\n  function getApproved(uint256 _tokenId) external view mustBeValidToken(_tokenId) returns (address) {\n    return _tokenApproval[_tokenId];\n  }\n\n  function isApprovedForAll(address _owner, address _operator) external view returns (bool) {\n    return _tokenOperator[_owner][_operator];\n  }\n\n  // ERC-721 Enumerable\n\n  function totalSupply() external view returns (uint256) {\n    return _totalTokens;\n  }\n\n  function tokenByIndex(uint256 _index) external view returns (uint256) {\n    require(_index < _totalTokens);\n    return _overallTokenId[_index];\n  }\n\n  function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256 _tokenId) {\n    require(_owner != address(0));\n    require(_index < _ownedTokens[_owner].length);\n    return _ownedTokens[_owner][_index];\n  }\n}\n\n// File: contracts/erc/erc721/IERC721Metadata.sol\n\n/// @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n/// @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n///  Note: the ERC-165 identifier for this interface is 0x5b5e139f\ninterface IERC721Metadata /* is IERC721Base */ {\n  /// @notice A descriptive name for a collection of NFTs in this contract\n  function name() external pure returns (string _name);\n\n  /// @notice An abbreviated name for NFTs in this contract\n  function symbol() external pure returns (string _symbol);\n\n  /// @notice A distinct Uniform Resource Identifier (URI) for a given asset.\n  /// @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n  ///  3986. The URI may point to a JSON file that conforms to the \"ERC721\n  ///  Metadata JSON Schema\".\n  function tokenURI(uint256 _tokenId) external view returns (string);\n}\n\n// File: contracts/core/erc721/AxieERC721Metadata.sol\n\ncontract AxieERC721Metadata is AxieERC721BaseEnumerable, IERC721Metadata {\n  string public tokenURIPrefix = \"https://axieinfinity.com/erc/721/axies/\";\n  string public tokenURISuffix = \".json\";\n\n  function AxieERC721Metadata() internal {\n    supportedInterfaces[0x5b5e139f] = true; // ERC-721 Metadata\n  }\n\n  function name() external pure returns (string) {\n    return \"Axie\";\n  }\n\n  function symbol() external pure returns (string) {\n    return \"AXIE\";\n  }\n\n  function setTokenURIAffixes(string _prefix, string _suffix) external onlyCEO {\n    tokenURIPrefix = _prefix;\n    tokenURISuffix = _suffix;\n  }\n\n  function tokenURI(\n    uint256 _tokenId\n  )\n    external\n    view\n    mustBeValidToken(_tokenId)\n    returns (string)\n  {\n    bytes memory _tokenURIPrefixBytes = bytes(tokenURIPrefix);\n    bytes memory _tokenURISuffixBytes = bytes(tokenURISuffix);\n    uint256 _tmpTokenId = _tokenId;\n    uint256 _length;\n\n    do {\n      _length++;\n      _tmpTokenId /= 10;\n    } while (_tmpTokenId > 0);\n\n    bytes memory _tokenURIBytes = new bytes(_tokenURIPrefixBytes.length + _length + 5);\n    uint256 _i = _tokenURIBytes.length - 6;\n\n    _tmpTokenId = _tokenId;\n\n    do {\n      _tokenURIBytes[_i--] = byte(48 + _tmpTokenId % 10);\n      _tmpTokenId /= 10;\n    } while (_tmpTokenId > 0);\n\n    for (_i = 0; _i < _tokenURIPrefixBytes.length; _i++) {\n      _tokenURIBytes[_i] = _tokenURIPrefixBytes[_i];\n    }\n\n    for (_i = 0; _i < _tokenURISuffixBytes.length; _i++) {\n      _tokenURIBytes[_tokenURIBytes.length + _i - 5] = _tokenURISuffixBytes[_i];\n    }\n\n    return string(_tokenURIBytes);\n  }\n}\n\n// File: contracts/core/erc721/AxieERC721.sol\n\n// solium-disable-next-line no-empty-blocks\ncontract AxieERC721 is AxieERC721BaseEnumerable, AxieERC721Metadata {\n}\n\n// File: contracts/core/AxieCore.sol\n\n// solium-disable-next-line no-empty-blocks\ncontract AxieCore is AxieERC721 {\n  struct Axie {\n    uint256 genes;\n    uint256 bornAt;\n  }\n\n  Axie[] axies;\n\n  event AxieSpawned(uint256 indexed _axieId, address indexed _owner, uint256 _genes);\n  event AxieRebirthed(uint256 indexed _axieId, uint256 _genes);\n  event AxieRetired(uint256 indexed _axieId);\n  event AxieEvolved(uint256 indexed _axieId, uint256 _oldGenes, uint256 _newGenes);\n\n  function AxieCore() public {\n    axies.push(Axie(0, now)); // The void Axie\n    _spawnAxie(0, msg.sender); // Will be Puff\n    _spawnAxie(0, msg.sender); // Will be Kotaro\n    _spawnAxie(0, msg.sender); // Will be Ginger\n    _spawnAxie(0, msg.sender); // Will be Stella\n  }\n\n  function getAxie(\n    uint256 _axieId\n  )\n    external\n    view\n    mustBeValidToken(_axieId)\n    returns (uint256 /* _genes */, uint256 /* _bornAt */)\n  {\n    Axie storage _axie = axies[_axieId];\n    return (_axie.genes, _axie.bornAt);\n  }\n\n  function spawnAxie(\n    uint256 _genes,\n    address _owner\n  )\n    external\n    onlySpawner\n    whenSpawningAllowed(_genes, _owner)\n    returns (uint256)\n  {\n    return _spawnAxie(_genes, _owner);\n  }\n\n  function rebirthAxie(\n    uint256 _axieId,\n    uint256 _genes\n  )\n    external\n    onlySpawner\n    mustBeValidToken(_axieId)\n    whenRebirthAllowed(_axieId, _genes)\n  {\n    Axie storage _axie = axies[_axieId];\n    _axie.genes = _genes;\n    _axie.bornAt = now;\n    AxieRebirthed(_axieId, _genes);\n  }\n\n  function retireAxie(\n    uint256 _axieId,\n    bool _rip\n  )\n    external\n    onlyByeSayer\n    whenRetirementAllowed(_axieId, _rip)\n  {\n    _burn(_axieId);\n\n    if (_rip) {\n      delete axies[_axieId];\n    }\n\n    AxieRetired(_axieId);\n  }\n\n  function evolveAxie(\n    uint256 _axieId,\n    uint256 _newGenes\n  )\n    external\n    onlyGeneScientist\n    mustBeValidToken(_axieId)\n    whenEvolvementAllowed(_axieId, _newGenes)\n  {\n    uint256 _oldGenes = axies[_axieId].genes;\n    axies[_axieId].genes = _newGenes;\n    AxieEvolved(_axieId, _oldGenes, _newGenes);\n  }\n\n  function _spawnAxie(uint256 _genes, address _owner) private returns (uint256 _axieId) {\n    Axie memory _axie = Axie(_genes, now);\n    _axieId = axies.push(_axie) - 1;\n    _mint(_owner, _axieId);\n    AxieSpawned(_axieId, _owner, _genes);\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cfoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_approved\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_axieId\",\"type\":\"uint256\"},{\"name\":\"_genes\",\"type\":\"uint256\"}],\"name\":\"rebirthAxie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whitelistSetterAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketplaceManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setRetirementManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_geneScientist\",\"type\":\"address\"},{\"name\":\"_whitelisted\",\"type\":\"bool\"}],\"name\":\"setGeneScientist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCOO\",\"type\":\"address\"}],\"name\":\"setCOO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setMarketplaceManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCFO\",\"type\":\"address\"}],\"name\":\"setCFO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"retirementManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSetter\",\"type\":\"address\"}],\"name\":\"setWhitelistSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_genes\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"spawnAxie\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketplace\",\"type\":\"address\"},{\"name\":\"_whitelisted\",\"type\":\"bool\"}],\"name\":\"setMarketplace\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"geneManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_byeSayer\",\"type\":\"address\"},{\"name\":\"_whitelisted\",\"type\":\"bool\"}],\"name\":\"setByeSayer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setSpawningManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setGeneManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedByeSayer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"spawningManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedGeneScientist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spawner\",\"type\":\"address\"},{\"name\":\"_whitelisted\",\"type\":\"bool\"}],\"name\":\"setSpawner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedMarketplace\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_axieId\",\"type\":\"uint256\"}],\"name\":\"getAxie\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_axieId\",\"type\":\"uint256\"},{\"name\":\"_newGenes\",\"type\":\"uint256\"}],\"name\":\"evolveAxie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cooAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenURIPrefix\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedSpawner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_axieId\",\"type\":\"uint256\"},{\"name\":\"_rip\",\"type\":\"bool\"}],\"name\":\"retireAxie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenURISuffix\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_prefix\",\"type\":\"string\"},{\"name\":\"_suffix\",\"type\":\"string\"}],\"name\":\"setTokenURIAffixes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_axieId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_genes\",\"type\":\"uint256\"}],\"name\":\"AxieSpawned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_axieId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_genes\",\"type\":\"uint256\"}],\"name\":\"AxieRebirthed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_axieId\",\"type\":\"uint256\"}],\"name\":\"AxieRetired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_axieId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_oldGenes\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newGenes\",\"type\":\"uint256\"}],\"name\":\"AxieEvolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}]",
  "bytecode": ""
}