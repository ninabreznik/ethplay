{
  "address": "0x71065f5b5891c27ae5e48faa7000a7c1c3df7ff3",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Prize",
  "compilerVersion": "v0.5.0+commit.1d4f565a",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-02\n*/\n\npragma solidity ^0.5.0;\n\ncontract Prize {\n\tevent Commit(address sender, uint revealable);\n\n\tbytes32 private flagHash;\n\n\tmapping(address => bytes32) private commits;\n\tmapping(address => uint) private revealable;\n\n\tconstructor(bytes32 _flagHash) public payable {\n\t\tflagHash = _flagHash;\n\t}\n\n\tfunction commit(bytes32 commitment) external {\n\t\tcommits[msg.sender] = commitment;\n\t\temit Commit(msg.sender, revealable[msg.sender] = block.number + 128);\n\t}\n\tfunction reveal(bytes32 flag) external {\n\t\trequire(calcFlagHash(flag) == flagHash);\n\t\trequire(calcCommitment(flag, msg.sender) == commits[msg.sender]);\n\t\trequire(block.number >= revealable[msg.sender]);\n\t\tselfdestruct(msg.sender);\n\t}\n\n\tfunction calcFlagHash(bytes32 flag) public pure returns(bytes32) {\n\t\treturn keccak256(abi.encodePacked(flag));\n\t}\n\tfunction calcCommitment(bytes32 flag, address sender) public pure returns(bytes32) {\n\t\treturn keccak256(abi.encodePacked(flag, sender));\n\t}\n}",
  "bytecode": "60806040526040516020806102cf8339810180604052602081101561002357600080fd5b5051600055610298806100376000396000f3fe6080604052600436106100615763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416634d9fc0098114610066578063701fd0f1146100be578063f14fcbc8146100ea578063fc5a50c814610114575b600080fd5b34801561007257600080fd5b506100ac6004803603604081101561008957600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff1661013e565b60408051918252519081900360200190f35b3480156100ca57600080fd5b506100e8600480360360208110156100e157600080fd5b5035610190565b005b3480156100f657600080fd5b506100e86004803603602081101561010d57600080fd5b50356101eb565b34801561012057600080fd5b506100ac6004803603602081101561013757600080fd5b5035610248565b6040805160208082019490945273ffffffffffffffffffffffffffffffffffffffff929092166c0100000000000000000000000002828201528051808303603401815260549092019052805191012090565b60005461019c82610248565b146101a657600080fd5b33600081815260016020526040902054906101c290839061013e565b146101cc57600080fd5b336000908152600260205260409020544310156101e857600080fd5b33ff5b3360008181526001602090815260408083208590556002825291829020608043019081905582519384529083015280517f5e1dd8c4451717d5ca4ffbefdada35e22e0871220b9ed9dd03a351f0938c5ed79281900390910190a150565b6040805160208082019390935281518082038401815290820190915280519101209056fea165627a7a72305820a90f04746e945f9fb474a878e8c5a831b04e28aa3f050a9fab5eab97049725c40029e19b962d82d79505478a79ec9380ee557e9546b08951656852330214ad5a929f",
  "constructorArguments": "e19b962d82d79505478a79ec9380ee557e9546b08951656852330214ad5a929f"
}