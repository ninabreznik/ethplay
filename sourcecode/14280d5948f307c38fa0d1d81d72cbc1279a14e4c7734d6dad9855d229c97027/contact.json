{
  "address": "0xaf30d2a7e90d7dc361c8c4585e9bb7d2f6f15bc7",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "FirstBlood",
  "contractName": "FirstBloodToken",
  "compilerVersion": "v0.3.6-nightly.2016.8.15+commit.868a167",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2016-09-24\n*/\n\n/**\n * Overflow aware uint math functions.\n *\n * Inspired by https://github.com/MakerDAO/maker-otc/blob/master/contracts/simple_market.sol\n */\ncontract SafeMath {\n  //internals\n\n  function safeMul(uint a, uint b) internal returns (uint) {\n    uint c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function safeSub(uint a, uint b) internal returns (uint) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint a, uint b) internal returns (uint) {\n    uint c = a + b;\n    assert(c>=a && c>=b);\n    return c;\n  }\n\n  function assert(bool assertion) internal {\n    if (!assertion) throw;\n  }\n}\n\n/**\n * ERC 20 token\n *\n * https://github.com/ethereum/EIPs/issues/20\n */\ncontract Token {\n\n    /// @return total amount of tokens\n    function totalSupply() constant returns (uint256 supply) {}\n\n    /// @param _owner The address from which the balance will be retrieved\n    /// @return The balance\n    function balanceOf(address _owner) constant returns (uint256 balance) {}\n\n    /// @notice send `_value` token to `_to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transfer(address _to, uint256 _value) returns (bool success) {}\n\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n    /// @param _from The address of the sender\n    /// @param _to The address of the recipient\n    /// @param _value The amount of token to be transferred\n    /// @return Whether the transfer was successful or not\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}\n\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _value The amount of wei to be approved for transfer\n    /// @return Whether the approval was successful or not\n    function approve(address _spender, uint256 _value) returns (bool success) {}\n\n    /// @param _owner The address of the account owning tokens\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n}\n\n/**\n * ERC 20 token\n *\n * https://github.com/ethereum/EIPs/issues/20\n */\ncontract StandardToken is Token {\n\n    /**\n     * Reviewed:\n     * - Interger overflow = OK, checked\n     */\n    function transfer(address _to, uint256 _value) returns (bool success) {\n        //Default assumes totalSupply can't be over max (2^256 - 1).\n        //If your token leaves out totalSupply and can issue more tokens as time goes on, you need to check if it doesn't wrap.\n        //Replace the if with this one instead.\n        if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\n        //if (balances[msg.sender] >= _value && _value > 0) {\n            balances[msg.sender] -= _value;\n            balances[_to] += _value;\n            Transfer(msg.sender, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n        //same as above. Replace this line with the following if you want to protect against wrapping uints.\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\n        //if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\n            balances[_to] += _value;\n            balances[_from] -= _value;\n            allowed[_from][msg.sender] -= _value;\n            Transfer(_from, _to, _value);\n            return true;\n        } else { return false; }\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n      return allowed[_owner][_spender];\n    }\n\n    mapping(address => uint256) balances;\n\n    mapping (address => mapping (address => uint256)) allowed;\n\n    uint256 public totalSupply;\n\n}\n\n\n/**\n * First blood crowdsale crowdsale contract.\n *\n * Security criteria evaluated against http://ethereum.stackexchange.com/questions/8551/methodological-security-review-of-a-smart-contract\n *\n *\n */\ncontract FirstBloodToken is StandardToken, SafeMath {\n\n    string public name = \"FirstBlood Token\";\n    string public symbol = \"1ST\";\n    uint public decimals = 18;\n    uint public startBlock; //crowdsale start block (set in constructor)\n    uint public endBlock; //crowdsale end block (set in constructor)\n\n    // Initial founder address (set in constructor)\n    // All deposited ETH will be instantly forwarded to this address.\n    // Address is a multisig wallet.\n    address public founder = 0x0;\n\n    // signer address (for clickwrap agreement)\n    // see function() {} for comments\n    address public signer = 0x0;\n\n    uint public etherCap = 465313 * 10**18; //max amount raised during crowdsale (5.5M USD worth of ether will be measured with a moving average market price at beginning of the crowdsale)\n    uint public transferLockup = 370285; //transfers are locked for this many blocks after endBlock (assuming 14 second blocks, this is 2 months)\n    uint public founderLockup = 2252571; //founder allocation cannot be created until this many blocks after endBlock (assuming 14 second blocks, this is 1 year)\n    uint public bountyAllocation = 2500000 * 10**18; //2.5M tokens allocated post-crowdsale for the bounty fund\n    uint public ecosystemAllocation = 5 * 10**16; //5% of token supply allocated post-crowdsale for the ecosystem fund\n    uint public founderAllocation = 10 * 10**16; //10% of token supply allocated post-crowdsale for the founder allocation\n    bool public bountyAllocated = false; //this will change to true when the bounty fund is allocated\n    bool public ecosystemAllocated = false; //this will change to true when the ecosystem fund is allocated\n    bool public founderAllocated = false; //this will change to true when the founder fund is allocated\n    uint public presaleTokenSupply = 0; //this will keep track of the token supply created during the crowdsale\n    uint public presaleEtherRaised = 0; //this will keep track of the Ether raised during the crowdsale\n    bool public halted = false; //the founder address can set this to true to halt the crowdsale due to emergency\n    event Buy(address indexed sender, uint eth, uint fbt);\n    event Withdraw(address indexed sender, address to, uint eth);\n    event AllocateFounderTokens(address indexed sender);\n    event AllocateBountyAndEcosystemTokens(address indexed sender);\n\n    function FirstBloodToken(address founderInput, address signerInput, uint startBlockInput, uint endBlockInput) {\n        founder = founderInput;\n        signer = signerInput;\n        startBlock = startBlockInput;\n        endBlock = endBlockInput;\n    }\n\n    /**\n     * Security review\n     *\n     * - Integer overflow: does not apply, blocknumber can't grow that high\n     * - Division is the last operation and constant, should not cause issues\n     * - Price function plotted https://github.com/Firstbloodio/token/issues/2\n     */\n    function price() constant returns(uint) {\n        if (block.number>=startBlock && block.number<startBlock+250) return 170; //power hour\n        if (block.number<startBlock || block.number>endBlock) return 100; //default price\n        return 100 + 4*(endBlock - block.number)/(endBlock - startBlock + 1)*67/4; //crowdsale price\n    }\n\n    // price() exposed for unit tests\n    function testPrice(uint blockNumber) constant returns(uint) {\n        if (blockNumber>=startBlock && blockNumber<startBlock+250) return 170; //power hour\n        if (blockNumber<startBlock || blockNumber>endBlock) return 100; //default price\n        return 100 + 4*(endBlock - blockNumber)/(endBlock - startBlock + 1)*67/4; //crowdsale price\n    }\n\n    // Buy entry point\n    function buy(uint8 v, bytes32 r, bytes32 s) {\n        buyRecipient(msg.sender, v, r, s);\n    }\n\n    /**\n     * Main token buy function.\n     *\n     * Security review\n     *\n     * - Integer math: ok - using SafeMath\n     *\n     * - halt flag added - ok\n     *\n     * Applicable tests:\n     *\n     * - Test halting, buying, and failing\n     * - Test buying on behalf of a recipient\n     * - Test buy\n     * - Test unhalting, buying, and succeeding\n     * - Test buying after the sale ends\n     *\n     */\n    function buyRecipient(address recipient, uint8 v, bytes32 r, bytes32 s) {\n        bytes32 hash = sha256(msg.sender);\n        if (ecrecover(hash,v,r,s) != signer) throw;\n        if (block.number<startBlock || block.number>endBlock || safeAdd(presaleEtherRaised,msg.value)>etherCap || halted) throw;\n        uint tokens = safeMul(msg.value, price());\n        balances[recipient] = safeAdd(balances[recipient], tokens);\n        totalSupply = safeAdd(totalSupply, tokens);\n        presaleEtherRaised = safeAdd(presaleEtherRaised, msg.value);\n\n        if (!founder.call.value(msg.value)()) throw; //immediately send Ether to founder address\n\n        Buy(recipient, msg.value, tokens);\n    }\n\n    /**\n     * Set up founder address token balance.\n     *\n     * allocateBountyAndEcosystemTokens() must be calld first.\n     *\n     * Security review\n     *\n     * - Integer math: ok - only called once with fixed parameters\n     *\n     * Applicable tests:\n     *\n     * - Test bounty and ecosystem allocation\n     * - Test bounty and ecosystem allocation twice\n     *\n     */\n    function allocateFounderTokens() {\n        if (msg.sender!=founder) throw;\n        if (block.number <= endBlock + founderLockup) throw;\n        if (founderAllocated) throw;\n        if (!bountyAllocated || !ecosystemAllocated) throw;\n        balances[founder] = safeAdd(balances[founder], presaleTokenSupply * founderAllocation / (1 ether));\n        totalSupply = safeAdd(totalSupply, presaleTokenSupply * founderAllocation / (1 ether));\n        founderAllocated = true;\n        AllocateFounderTokens(msg.sender);\n    }\n\n    /**\n     * Set up founder address token balance.\n     *\n     * Set up bounty pool.\n     *\n     * Security review\n     *\n     * - Integer math: ok - only called once with fixed parameters\n     *\n     * Applicable tests:\n     *\n     * - Test founder token allocation too early\n     * - Test founder token allocation on time\n     * - Test founder token allocation twice\n     *\n     */\n    function allocateBountyAndEcosystemTokens() {\n        if (msg.sender!=founder) throw;\n        if (block.number <= endBlock) throw;\n        if (bountyAllocated || ecosystemAllocated) throw;\n        presaleTokenSupply = totalSupply;\n        balances[founder] = safeAdd(balances[founder], presaleTokenSupply * ecosystemAllocation / (1 ether));\n        totalSupply = safeAdd(totalSupply, presaleTokenSupply * ecosystemAllocation / (1 ether));\n        balances[founder] = safeAdd(balances[founder], bountyAllocation);\n        totalSupply = safeAdd(totalSupply, bountyAllocation);\n        bountyAllocated = true;\n        ecosystemAllocated = true;\n        AllocateBountyAndEcosystemTokens(msg.sender);\n    }\n\n    /**\n     * Emergency Stop crowdsale.\n     *\n     *  Applicable tests:\n     *\n     * - Test unhalting, buying, and succeeding\n     */\n    function halt() {\n        if (msg.sender!=founder) throw;\n        halted = true;\n    }\n\n    function unhalt() {\n        if (msg.sender!=founder) throw;\n        halted = false;\n    }\n\n    /**\n     * Change founder address (where crowdsale ETH is being forwarded).\n     *\n     * Applicable tests:\n     *\n     * - Test founder change by hacker\n     * - Test founder change\n     * - Test founder token allocation twice\n     *\n     */\n\n    function changeFounder(address newFounder) {\n        if (msg.sender!=founder) throw;\n        founder = newFounder;\n    }\n\n    /**\n     * ERC 20 Standard Token interface transfer function\n     *\n     * Prevent transfers until freeze period is over.\n     *\n     * Applicable tests:\n     *\n     * - Test restricted early transfer\n     * - Test transfer after restricted period\n     */\n    function transfer(address _to, uint256 _value) returns (bool success) {\n        if (block.number <= endBlock + transferLockup && msg.sender!=founder) throw;\n        return super.transfer(_to, _value);\n    }\n    /**\n     * ERC 20 Standard Token interface transfer function\n     *\n     * Prevent transfers until freeze period is over.\n     */\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n        if (block.number <= endBlock + transferLockup && msg.sender!=founder) throw;\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    /**\n     * Do not allow direct deposits.\n     *\n     * All crowdsale depositors must have read the legal agreement.\n     * This is confirmed by having them signing the terms of service on the website.\n     * They give their crowdsale Ethereum source address on the website.\n     * Website signs this address using crowdsale private key (different from founders key).\n     * buy() takes this signature as input and rejects all deposits that do not have\n     * signature you receive after reading terms of service.\n     *\n     */\n    function() {\n        throw;\n    }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"testPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleEtherRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateBountyAndEcosystemTokens\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecosystemAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderLockup\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newFounder\",\"type\":\"address\"}],\"name\":\"changeFounder\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateFounderTokens\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecosystemAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferLockup\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unhalt\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"buyRecipient\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"buy\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"inputs\":[{\"name\":\"founderInput\",\"type\":\"address\"},{\"name\":\"signerInput\",\"type\":\"address\"},{\"name\":\"startBlockInput\",\"type\":\"uint256\"},{\"name\":\"endBlockInput\",\"type\":\"uint256\"}],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fbt\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllocateFounderTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllocateBountyAndEcosystemTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "",
  "constructorArguments": "000000000000000000000000a5384627f6dcd3440298e2d8b0da9d5f0fcbcef70000000000000000000000003286652eacf7abf27383dd1a9218ba9d8169d15e00000000000000000000000000000000000000000000000000000000002382ac00000000000000000000000000000000000000000000000000000000002625ac"
}