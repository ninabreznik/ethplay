{
  "address": "0x4d829f8c92a6691c56300d020c9e0db984cfe2ba",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "CoinCrowdToken",
  "contractName": "CoinCrowdToken",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-10-25\n*/\n\npragma solidity ^0.4.18;\n\n/**\n * CoinCrowd Token (XCC). More info www.coincrowd.it\n */\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n  \n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() internal {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n}\n\n\n/**\n * @title Authorizable\n * @dev The Authorizable contract has authorized addresses, and provides basic authorization control\n * functions, this simplifies the implementation of \"multiple user permissions\".\n */\ncontract Authorizable is Ownable {\n  mapping(address => bool) public authorized;\n  \n  event AuthorizationSet(address indexed addressAuthorized, bool indexed authorization);\n\n  /**\n   * @dev The Authorizable constructor sets the first `authorized` of the contract to the sender\n   * account.\n   */ \n  function Authorizable() public {\n\tauthorized[msg.sender] = true;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the authorized.\n   */\n  modifier onlyAuthorized() {\n    require(authorized[msg.sender]);\n    _;\n  }\n\n /**\n   * @dev Allows the current owner to set an authorization.\n   * @param addressAuthorized The address to change authorization.\n   */\n  function setAuthorized(address addressAuthorized, bool authorization) onlyOwner public {\n    AuthorizationSet(addressAuthorized, authorization);\n    authorized[addressAuthorized] = authorization;\n  }\n  \n}\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  uint256 public totalSupply;\n  function balanceOf(address who) public constant returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public constant returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  /**\n  * @dev transfer token from an address to another specified address \n  * @param _sender The address to transfer from.\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transferFunction(address _sender, address _to, uint256 _value) internal returns (bool) {\n    require(_to != address(0));\n    require(_to != address(this));\n    require(_value <= balances[_sender]);\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[_sender] = balances[_sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(_sender, _to, _value);\n    return true;\n  }\n  \n  /**\n  * @dev transfer token for a specified address (BasicToken transfer method)\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n\treturn transferFunction(msg.sender, _to, _value);\n  }\n  \n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public constant returns (uint256 balance) {\n    return balances[_owner];\n  }\n}\n\ncontract ERC223TokenCompatible is BasicToken {\n  using SafeMath for uint256;\n  \n  event Transfer(address indexed from, address indexed to, uint256 value, bytes indexed data);\n\n  // Function that is called when a user or another contract wants to transfer funds .\n\tfunction transfer(address _to, uint256 _value, bytes _data, string _custom_fallback) public returns (bool success) {\n\t\trequire(_to != address(0));\n        require(_to != address(this));\n\t\trequire(_value <= balances[msg.sender]);\n\t\t// SafeMath.sub will throw if there is not enough balance.\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n\t\tif( isContract(_to) ) {\n\t\t\t_to.call.value(0)(bytes4(keccak256(_custom_fallback)), msg.sender, _value, _data);\n\t\t} \n\t\tTransfer(msg.sender, _to, _value, _data);\n\t\treturn true;\n\t}\n\n\t// Function that is called when a user or another contract wants to transfer funds .\n\tfunction transfer(address _to, uint256 _value, bytes _data) public returns (bool success) {\n\t\treturn transfer( _to, _value, _data, \"tokenFallback(address,uint256,bytes)\");\n\t}\n\n\t//assemble the given address bytecode. If bytecode exists then the _addr is a contract.\n\tfunction isContract(address _addr) private view returns (bool is_contract) {\n\t\tuint256 length;\n\t\tassembly {\n            //retrieve the size of the code on target address, this needs assembly\n            length := extcodesize(_addr)\n\t\t}\n\t\treturn (length>0);\n    }\n}\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_to != address(this));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   */\n  function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n\n/**\n * @title Startable\n * @dev Base contract which allows owner to implement an start mechanism without ever being stopped more.\n */\ncontract Startable is Ownable, Authorizable {\n  event Start();\n\n  bool public started = false;\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is started.\n   */\n  modifier whenStarted() {\n\trequire( started || authorized[msg.sender] );\n    _;\n  }\n\n  /**\n   * @dev called by the owner to start, go to normal state\n   */\n  function start() onlyOwner public {\n    started = true;\n    Start();\n  }\n}\n\n/**\n * @title Startable token\n *\n * @dev StandardToken modified with startable transfers.\n **/\n\ncontract StartToken is Startable, ERC223TokenCompatible, StandardToken {\n\n  function transfer(address _to, uint256 _value) public whenStarted returns (bool) {\n    return super.transfer(_to, _value);\n  }\n  function transfer(address _to, uint256 _value, bytes _data) public whenStarted returns (bool) {\n    return super.transfer(_to, _value, _data);\n  }\n  function transfer(address _to, uint256 _value, bytes _data, string _custom_fallback) public whenStarted returns (bool) {\n    return super.transfer(_to, _value, _data, _custom_fallback);\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public whenStarted returns (bool) {\n    return super.transferFrom(_from, _to, _value);\n  }\n\n  function approve(address _spender, uint256 _value) public whenStarted returns (bool) {\n    return super.approve(_spender, _value);\n  }\n\n  function increaseApproval(address _spender, uint _addedValue) public whenStarted returns (bool success) {\n    return super.increaseApproval(_spender, _addedValue);\n  }\n\n  function decreaseApproval(address _spender, uint _subtractedValue) public whenStarted returns (bool success) {\n    return super.decreaseApproval(_spender, _subtractedValue);\n  }\n}\n\ncontract HumanStandardToken is StandardToken, StartToken {\n    /* Approves and then calls the receiving contract */\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\n        approve(_spender, _value);\n        require(_spender.call(bytes4(keccak256(\"receiveApproval(address,uint256,bytes)\")), msg.sender, _value, _extraData));\n        return true;\n    }\n}\n\ncontract BurnToken is StandardToken {\n\n    event Burn(address indexed burner, uint256 value);\n\n    /**\n     * @dev Function to burn tokens.\n     * @param _burner The address of token holder.\n     * @param _value The amount of token to be burned.\n     */\n    function burnFunction(address _burner, uint256 _value) internal returns (bool) {\n        require(_value > 0);\n\t\trequire(_value <= balances[_burner]);\n        // no need to require value <= totalSupply, since that would imply the\n        // sender's balance is greater than the totalSupply, which *should* be an assertion failure\n\n        balances[_burner] = balances[_burner].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        Burn(_burner, _value);\n\t\treturn true;\n    }\n    \n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param _value The amount of token to be burned.\n     */\n\tfunction burn(uint256 _value) public returns(bool) {\n        return burnFunction(msg.sender, _value);\n    }\n\t\n\t/**\n\t* @dev Burns tokens from one address\n\t* @param _from address The address which you want to burn tokens from\n\t* @param _value uint256 the amount of tokens to be burned\n\t*/\n\tfunction burnFrom(address _from, uint256 _value) public returns (bool) {\n\t\trequire(_value <= allowed[_from][msg.sender]); // check if it has the budget allowed\n\t\tburnFunction(_from, _value);\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\t\treturn true;\n\t}\n}\n\ncontract OriginToken is Authorizable, BasicToken, BurnToken {\n    \n    /**\n     * @dev transfer token from tx.orgin to a specified address (onlyAuthorized contract)\n     */ \n    function originTransfer(address _to, uint256 _value) onlyAuthorized public returns (bool) {\n\t    return transferFunction(tx.origin, _to, _value);\n    }\n    \n    /**\n     * @dev Burns a specific amount of tokens from tx.orgin. (onlyAuthorized contract)\n     * @param _value The amount of token to be burned.\n     */\t\n\tfunction originBurn(uint256 _value) onlyAuthorized public returns(bool) {\n        return burnFunction(tx.origin, _value);\n    }\n}\n\ncontract CoinCrowdToken is ERC223TokenCompatible, StandardToken, StartToken, HumanStandardToken, BurnToken, OriginToken {\n    uint8 public decimals = 18;\n\n    string public name = \"CoinCrowd\";\n\n    string public symbol = \"XCC\";\n\n    uint256 public initialSupply;\n\n    function CoinCrowdToken() public {\n        totalSupply = 100000000 * 10 ** uint(decimals);  \n        \n        initialSupply = totalSupply;\n        \n        balances[msg.sender] = totalSupply;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"originTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"started\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"originBurn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addressAuthorized\",\"type\":\"address\"},{\"name\":\"authorization\",\"type\":\"bool\"}],\"name\":\"setAuthorized\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_custom_fallback\",\"type\":\"string\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Start\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addressAuthorized\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"authorization\",\"type\":\"bool\"}],\"name\":\"AuthorizationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "606060409081526002805460ff199081169091556006805490911660121790558051908101604052600981527f436f696e43726f7764000000000000000000000000000000000000000000000060208201526007908051620000669291602001906200011b565b5060408051908101604052600381527f584343000000000000000000000000000000000000000000000000000000000060208201526008908051620000b09291602001906200011b565b503415620000bd57600080fd5b60008054600160a060020a03191633600160a060020a031690811782558152600160208181526040808420805460ff191690931790925560065460ff16600a0a6305f5e10002600381905560098190556004909152912055620001c0565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200015e57805160ff19168380011785556200018e565b828001600101855582156200018e579182015b828111156200018e57825182559160200191906001019062000171565b506200019c929150620001a0565b5090565b620001bd91905b808211156200019c5760008155600101620001a7565b90565b61161180620001d06000396000f30060606040526004361061012f5763ffffffff60e060020a60003504166306fdde038114610134578063095ea7b3146101be57806318160ddd146101f45780631d32ab99146102195780631f2698ab1461023b57806323b872dd1461024e578063313ce56714610276578063378dc3dc1461029f57806342966c68146102b257806355684aa6146102c857806366188463146102de57806370a0823114610300578063711bf9b21461031f57806379cc6790146103455780638da5cb5b1461036757806395d89b4114610396578063a9059cbb146103a9578063b9181611146103cb578063be45fd62146103ea578063be9a65551461044f578063cae9ca5114610462578063d73dd623146104c7578063dd62ed3e146104e9578063f2fde38b1461050e578063f6368f8a1461052d575b600080fd5b341561013f57600080fd5b6101476105d4565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561018357808201518382015260200161016b565b50505050905090810190601f1680156101b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101c957600080fd5b6101e0600160a060020a0360043516602435610672565b604051901515815260200160405180910390f35b34156101ff57600080fd5b6102076106ba565b60405190815260200160405180910390f35b341561022457600080fd5b6101e0600160a060020a03600435166024356106c0565b341561024657600080fd5b6101e06106f2565b341561025957600080fd5b6101e0600160a060020a03600435811690602435166044356106fb565b341561028157600080fd5b610289610745565b60405160ff909116815260200160405180910390f35b34156102aa57600080fd5b61020761074e565b34156102bd57600080fd5b6101e0600435610754565b34156102d357600080fd5b6101e0600435610766565b34156102e957600080fd5b6101e0600160a060020a0360043516602435610797565b341561030b57600080fd5b610207600160a060020a03600435166107d8565b341561032a57600080fd5b610343600160a060020a036004351660243515156107f3565b005b341561035057600080fd5b6101e0600160a060020a0360043516602435610872565b341561037257600080fd5b61037a610919565b604051600160a060020a03909116815260200160405180910390f35b34156103a157600080fd5b610147610928565b34156103b457600080fd5b6101e0600160a060020a0360043516602435610993565b34156103d657600080fd5b6101e0600160a060020a03600435166109d4565b34156103f557600080fd5b6101e060048035600160a060020a03169060248035919060649060443590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506109e995505050505050565b341561045a57600080fd5b610343610a2b565b341561046d57600080fd5b6101e060048035600160a060020a03169060248035919060649060443590810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610a8195505050505050565b34156104d257600080fd5b6101e0600160a060020a0360043516602435610bb1565b34156104f457600080fd5b610207600160a060020a0360043581169060243516610bf2565b341561051957600080fd5b610343600160a060020a0360043516610c1d565b341561053857600080fd5b6101e060048035600160a060020a03169060248035919060649060443590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650610cb895505050505050565b60078054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561066a5780601f1061063f5761010080835404028352916020019161066a565b820191906000526020600020905b81548152906001019060200180831161064d57829003601f168201915b505050505081565b60025460009060ff168061069e5750600160a060020a03331660009081526001602052604090205460ff165b15156106a957600080fd5b6106b38383610d04565b9392505050565b60035481565b600160a060020a03331660009081526001602052604081205460ff1615156106e757600080fd5b6106b3328484610d70565b60025460ff1681565b60025460009060ff16806107275750600160a060020a03331660009081526001602052604090205460ff165b151561073257600080fd5b61073d848484610e8c565b949350505050565b60065460ff1681565b60095481565b6000610760338361102f565b92915050565b600160a060020a03331660009081526001602052604081205460ff16151561078d57600080fd5b610760328361102f565b60025460009060ff16806107c35750600160a060020a03331660009081526001602052604090205460ff165b15156107ce57600080fd5b6106b38383611100565b600160a060020a031660009081526004602052604090205490565b60005433600160a060020a0390811691161461080e57600080fd5b80151582600160a060020a03167f5056a36abc1db1625034fdf114a164a0345b3ccf992fc1d51055e017375f473260405160405180910390a3600160a060020a03919091166000908152600160205260409020805460ff1916911515919091179055565b600160a060020a038083166000908152600560209081526040808320339094168352929052908120548211156108a757600080fd5b6108b1838361102f565b50600160a060020a03808416600090815260056020908152604080832033909416835292905220546108e9908363ffffffff6111fa16565b600160a060020a038085166000908152600560209081526040808320339094168352929052205550600192915050565b600054600160a060020a031681565b60088054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561066a5780601f1061063f5761010080835404028352916020019161066a565b60025460009060ff16806109bf5750600160a060020a03331660009081526001602052604090205460ff165b15156109ca57600080fd5b6106b3838361120c565b60016020526000908152604090205460ff1681565b60025460009060ff1680610a155750600160a060020a03331660009081526001602052604090205460ff165b1515610a2057600080fd5b61073d848484611219565b60005433600160a060020a03908116911614610a4657600080fd5b6002805460ff191660011790557f1b55ba3aa851a46be3b365aee5b5c140edd620d578922f3e8466d2cbd96f954b60405160405180910390a1565b6000610a8d8484610672565b5083600160a060020a03166040517f72656365697665417070726f76616c28616464726573732c75696e743235362c81527f62797465732900000000000000000000000000000000000000000000000000006020820152602601604051809103902060e060020a90043385856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b83811015610b53578082015183820152602001610b3b565b50505050905090810190601f168015610b805780820380516001836020036101000a031916815260200191505b50935050505060006040518083038160008761646e5a03f1925050501515610ba757600080fd5b5060019392505050565b60025460009060ff1680610bdd5750600160a060020a03331660009081526001602052604090205460ff165b1515610be857600080fd5b6106b38383611283565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b60005433600160a060020a03908116911614610c3857600080fd5b600160a060020a0381161515610c4d57600080fd5b600054600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60025460009060ff1680610ce45750600160a060020a03331660009081526001602052604090205460ff165b1515610cef57600080fd5b610cfb85858585611327565b95945050505050565b600160a060020a03338116600081815260056020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b6000600160a060020a0383161515610d8757600080fd5b30600160a060020a031683600160a060020a031614151515610da857600080fd5b600160a060020a038416600090815260046020526040902054821115610dcd57600080fd5b600160a060020a038416600090815260046020526040902054610df6908363ffffffff6111fa16565b600160a060020a038086166000908152600460205260408082209390935590851681522054610e2b908363ffffffff6115ce16565b600160a060020a03808516600081815260046020526040908190209390935591908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b6000600160a060020a0383161515610ea357600080fd5b30600160a060020a031683600160a060020a031614151515610ec457600080fd5b600160a060020a038416600090815260046020526040902054821115610ee957600080fd5b600160a060020a0380851660009081526005602090815260408083203390941683529290522054821115610f1c57600080fd5b600160a060020a038416600090815260046020526040902054610f45908363ffffffff6111fa16565b600160a060020a038086166000908152600460205260408082209390935590851681522054610f7a908363ffffffff6115ce16565b600160a060020a03808516600090815260046020908152604080832094909455878316825260058152838220339093168252919091522054610fc2908363ffffffff6111fa16565b600160a060020a03808616600081815260056020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b600080821161103d57600080fd5b600160a060020a03831660009081526004602052604090205482111561106257600080fd5b600160a060020a03831660009081526004602052604090205461108b908363ffffffff6111fa16565b600160a060020a0384166000908152600460205260409020556003546110b7908363ffffffff6111fa16565b600355600160a060020a0383167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58360405190815260200160405180910390a250600192915050565b600160a060020a0333811660009081526005602090815260408083209386168352929052908120548083111561115d57600160a060020a033381166000908152600560209081526040808320938816835292905290812055611194565b61116d818463ffffffff6111fa16565b600160a060020a033381166000908152600560209081526040808320938916835292905220555b600160a060020a0333811660008181526005602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b60008282111561120657fe5b50900390565b60006106b3338484610d70565b600061073d848484606060405190810160405280602481526020017f746f6b656e46616c6c6261636b28616464726573732c75696e743235362c627981526020017f7465732900000000000000000000000000000000000000000000000000000000815250610cb8565b600160a060020a0333811660009081526005602090815260408083209386168352929052908120546112bb908363ffffffff6115ce16565b600160a060020a0333811660008181526005602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b6000600160a060020a038516151561133e57600080fd5b30600160a060020a031685600160a060020a03161415151561135f57600080fd5b600160a060020a03331660009081526004602052604090205484111561138457600080fd5b600160a060020a0333166000908152600460205260409020546113ad908563ffffffff6111fa16565b600160a060020a0333811660009081526004602052604080822093909355908716815220546113e2908563ffffffff6115ce16565b600160a060020a038616600090815260046020526040902055611404856115dd565b156115205784600160a060020a03166000836040518082805190602001908083835b602083106114455780518252601f199092019160209182019101611426565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902060e060020a9004903387876040518563ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a03168152602001838152602001828051906020019080838360005b838110156114d65780820151838201526020016114be565b50505050905090810190601f1680156115035780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185886187965a03f150505050505b826040518082805190602001908083835b602083106115505780518252601f199092019160209182019101611531565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902085600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c168760405190815260200160405180910390a4506001949350505050565b6000828201838110156106b357fe5b6000903b11905600a165627a7a723058200cd610866988d1a0fb233be60216e6246f45850da753bbe2bc035a1a811895a20029"
}