{
  "address": "0xea7a7bc3ba38b2569b6bee8dcd8acb4218c08716",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ControllerProxy",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-06-02\n*/\n\npragma solidity ^0.4.23;\n\ncontract Ownable {\n    address public owner;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    constructor() public {\n        owner = msg.sender; \n    }\n\n    /**\n        @dev Transfers the ownership of the contract.\n\n        @param _owner Address of the new owner\n    */\n    function setOwner(address _owner) public onlyOwner returns (bool) {\n        require(_owner != address(0));\n        owner = _owner;\n        return true;\n    } \n}\n\n\ncontract HasWorkers is Ownable {\n    mapping(address => uint256) private workerToIndex;    \n    address[] private workers;\n\n    event AddedWorker(address _worker);\n    event RemovedWorker(address _worker);\n\n    constructor() public {\n        workers.length++;\n    }\n\n    modifier onlyWorker() {\n        require(isWorker(msg.sender));\n        _;\n    }\n\n    modifier workerOrOwner() {\n        require(isWorker(msg.sender) || msg.sender == owner);\n        _;\n    }\n\n    function isWorker(address _worker) public view returns (bool) {\n        return workerToIndex[_worker] != 0;\n    }\n\n    function allWorkers() public view returns (address[] memory result) {\n        result = new address[](workers.length - 1);\n        for (uint256 i = 1; i < workers.length; i++) {\n            result[i - 1] = workers[i];\n        }\n    }\n\n    function addWorker(address _worker) public onlyOwner returns (bool) {\n        require(!isWorker(_worker));\n        uint256 index = workers.push(_worker) - 1;\n        workerToIndex[_worker] = index;\n        emit AddedWorker(_worker);\n        return true;\n    }\n\n    function removeWorker(address _worker) public onlyOwner returns (bool) {\n        require(isWorker(_worker));\n        uint256 index = workerToIndex[_worker];\n        address lastWorker = workers[workers.length - 1];\n        workerToIndex[lastWorker] = index;\n        workers[index] = lastWorker;\n        workers.length--;\n        delete workerToIndex[_worker];\n        emit RemovedWorker(_worker);\n        return true;\n    }\n}\n\ncontract ControllerStorage {\n    address public walletsDelegate;\n    address public controllerDelegate;\n    address public forward;\n    uint256 public createdWallets;\n    mapping(bytes32 => bytes32) public gStorage;\n}\n\ncontract DelegateProxy {\n  /**\n   * @dev Performs a delegatecall and returns whatever the delegatecall returned (entire context execution will return!)\n   * @param _dst Destination address to perform the delegatecall\n   * @param _calldata Calldata for the delegatecall\n   */\n  function delegatedFwd(address _dst, bytes _calldata) internal {\n    assembly {\n      let result := delegatecall(sub(gas, 10000), _dst, add(_calldata, 0x20), mload(_calldata), 0, 0)\n      let size := returndatasize\n\n      let ptr := mload(0x40)\n      returndatacopy(ptr, 0, size)\n\n      // revert instead of invalid() bc if the underlying call failed with invalid() it already wasted gas.\n      // if the call returned error data, forward it\n      switch result case 0 { revert(ptr, size) }\n      default { return(ptr, size) }\n    }\n  }\n}\n\ncontract DelegateProvider {\n    function getDelegate() public view returns (address delegate);\n}\n\ncontract ControllerProxy is ControllerStorage, Ownable, HasWorkers, DelegateProvider, DelegateProxy {\n    function getDelegate() public view returns (address delegate) {\n        delegate = walletsDelegate;\n    }\n\n    function setWalletsDelegate(address _delegate) public onlyOwner returns (bool) {\n        walletsDelegate = _delegate;\n        return true;\n    }\n\n    function setControllerDelegate(address _delegate) public onlyOwner returns (bool) {\n        controllerDelegate = _delegate;\n        return true;\n    }\n\n    function() public payable {\n        if (gasleft() > 2400) {\n            delegatedFwd(controllerDelegate, msg.data);\n        }\n    }\n}",
  "bytecode": "608060405260058054600160a060020a03191633600160a060020a031617905560078054906100319060018301610037565b50610081565b81548183558181111561005b5760008381526020902061005b918101908301610060565b505050565b61007e91905b8082111561007a5760008155600101610066565b5090565b90565b6107ff806100906000396000f3006080604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166313af4035811461011f57806323aa7e12146101545780633b22f35f146101855780638063ab78146101af578063806ad57e146101d05780638da5cb5b146101f1578063aa15664514610206578063bc7f3b5014610227578063c4f987a51461023c578063cb3eef2c1461025d578063d264e05e146102c2578063d273285b146102d7578063fa34b345146102ec578063ffd85b6814610301575b6109605a111561011d5760015460408051602036601f810182900482028301820190935282825261011d93600160a060020a0316926000918190840183828082843750610322945050505050565b005b34801561012b57600080fd5b50610140600160a060020a036004351661034a565b604080519115158252519081900360200190f35b34801561016057600080fd5b506101696103af565b60408051600160a060020a039092168252519081900360200190f35b34801561019157600080fd5b5061019d6004356103be565b60408051918252519081900360200190f35b3480156101bb57600080fd5b50610140600160a060020a03600435166103d0565b3480156101dc57600080fd5b50610140600160a060020a0360043516610420565b3480156101fd57600080fd5b506101696104fa565b34801561021257600080fd5b50610140600160a060020a0360043516610509565b34801561023357600080fd5b50610169610526565b34801561024857600080fd5b50610140600160a060020a0360043516610535565b34801561026957600080fd5b50610272610678565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102ae578181015183820152602001610296565b505050509050019250505060405180910390f35b3480156102ce57600080fd5b5061016961071b565b3480156102e357600080fd5b5061019d61072a565b3480156102f857600080fd5b50610169610730565b34801561030d57600080fd5b50610140600160a060020a036004351661073f565b600080825160208401856127105a03f43d604051816000823e828015610346578282f35b8282fd5b60055460009033600160a060020a0390811691161461036857600080fd5b600160a060020a038216151561037d57600080fd5b5060058054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff199091161790556001919050565b600154600160a060020a031681565b60046020526000908152604090205481565b60055460009033600160a060020a039081169116146103ee57600080fd5b5060008054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff199091161790556001919050565b600554600090819033600160a060020a0390811691161461044057600080fd5b61044983610509565b1561045357600080fd5b5060078054600181019091557fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6888101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038516908117909155600081815260066020908152604091829020849055815192835290517fdecaaccf65fa0157d575425d16efcccc089f3df91ee0abedec8d1def2f12ab399281900390910190a150600192915050565b600554600160a060020a031681565b600160a060020a0316600090815260066020526040902054151590565b600054600160a060020a031690565b6005546000908190819033600160a060020a0390811691161461055757600080fd5b61056084610509565b151561056b57600080fd5b600160a060020a0384166000908152600660205260409020546007805491935090600019810190811061059a57fe5b6000918252602080832090910154600160a060020a031680835260069091526040909120839055600780549192508291849081106105d457fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600780549061061d90600019830161078d565b50600160a060020a038416600081815260066020908152604080832092909255815192835290517f3edc40c0328998eaea1b10228950034eb711623f80702c71897e856964c203c39281900390910190a15060019392505050565b606060006001600780549050036040519080825280602002602001820160405280156106ae578160200160208202803883390190505b509150600190505b6007548110156107175760078054829081106106ce57fe5b6000918252602090912001548251600160a060020a0390911690839060001984019081106106f857fe5b600160a060020a039092166020928302909101909101526001016106b6565b5090565b600254600160a060020a031681565b60035481565b600054600160a060020a031681565b60055460009033600160a060020a0390811691161461075d57600080fd5b5060018054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116178155919050565b8154818355818111156107b1576000838152602090206107b19181019083016107b6565b505050565b6107d091905b8082111561071757600081556001016107bc565b905600a165627a7a72305820ebd22247a8ef2ac3ae92893e66f4bb4e72eddd556ff5c51a6127438e4205100d0029"
}