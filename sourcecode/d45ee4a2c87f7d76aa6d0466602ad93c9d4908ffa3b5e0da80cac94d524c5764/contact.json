{
  "address": "0xe836481df7c1608c6f261dbbf60aa650ddf30c7b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CARBRC20",
  "compilerVersion": "v0.4.16+commit.d7661dd9",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-03\n*/\n\npragma solidity ^0.4.16;\n\n//Base class of token-owner\ncontract Ownable {\n\taddress public owner;\t\t\t\t\t\t\t\t\t\t\t\t\t\t//owner's address\n\n\tfunction Ownable() public \n\t{\n\t\towner = msg.sender;\n\t}\n\n\tmodifier onlyOwner() {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n\t/*\n\t*\tFuntion: Transfer owner's authority \n\t*\tType:Public and onlyOwner\n\t*\tParameters:\n\t\t\t@newOwner:\taddress of newOwner\n\t*/\n\tfunction transferOwnership(address newOwner) onlyOwner public{\n\t\tif (newOwner != address(0)) {\n\t\towner = newOwner;\n\t\t}\n\t}\n\t\n\tfunction kill() onlyOwner public{\n\t\tselfdestruct(owner);\n\t}\n}\n\n//Announcement of an interface for recipient approving\ninterface tokenRecipient { \n\tfunction receiveApproval(address _from, uint256 _value, address _token, bytes _extraData)public; \n}\n\n\ncontract CARBRC20 is Ownable{\n\t\n\t//===================public variables definition start==================\n    string public name;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Name of your Token\n    string public symbol;\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Symbol of your Token\n    uint8 public decimals;\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Decimals of your Token\n    uint256 public totalSupply;\t\t\t\t\t\t\t\t\t\t\t\t\t//Maximum amount of Token supplies\n\n    //define dictionaries of balance\n    mapping (address => uint256) public balanceOf;\t\t\t\t\t\t\t\t//Announce the dictionary of account's balance\n    mapping (address => mapping (address => uint256)) public allowance;\t\t\t//Announce the dictionary of account's available balance\n\t//===================public variables definition end==================\n\n\t\n\t//===================events definition start==================    \n    event Transfer(address indexed from, address indexed to, uint256 value);\t//Event on blockchain which notify client\n\t//===================events definition end==================\n\t\n\t\n\t//===================Contract Initialization Sequence Definition start===================\n    function CARBRC20 () public {\n\t\tdecimals=8;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Assignment of Token's decimals\n\t\ttotalSupply = 10000000000 * 10 ** uint256(decimals);  \t\t\t\t//Assignment of Token's total supply with decimals\n        balanceOf[owner] = totalSupply;                \t\t\t\t\t\t//Assignment of Token's creator initial tokens\n        name = \"CARB\";                                   \t\t\t\t\t//Set the name of Token\n        symbol = \"CARB\";                               \t\t\t\t\t\t//Set the symbol of  Token\n        \n    }\n\t//===================Contract Initialization Sequence definition end===================\n\t\n\t//===================Contract behavior & funtions definition start===================\n\t\n\t/*\n\t*\tFuntion: Transfer funtions\n\t*\tType:Internal\n\t*\tParameters:\n\t\t\t@_from:\taddress of sender's account\n\t\t\t@_to:\taddress of recipient's account\n\t\t\t@_value:transaction amount\n\t*/\n    function _transfer(address _from, address _to, uint _value) internal {\n\t\t//Fault-tolerant processing\n\t\trequire(_to != 0x0);\t\t\t\t\t\t//\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value > balanceOf[_to]);\n\n        //Execute transaction\n\t\tuint previousBalances = balanceOf[_from] + balanceOf[_to];\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        Transfer(_from, _to, _value);\n\t\t\n\t\t//Verify transaction\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n\t\n\t\n\t/*\n\t*\tFuntion: Transfer tokens\n\t*\tType:Public\n\t*\tParameters:\n\t\t\t@_to:\taddress of recipient's account\n\t\t\t@_value:transaction amount\n\t*/\n    function transfer(address _to, uint256 _value) public {\n\t\t\n        _transfer(msg.sender, _to, _value);\n    }\t\n\t\n\t/*\n\t*\tFuntion: Transfer tokens from other address\n\t*\tType:Public\n\t*\tParameters:\n\t\t\t@_from:\taddress of sender's account\n\t\t\t@_to:\taddress of recipient's account\n\t\t\t@_value:transaction amount\n\t*/\n\n    function transferFrom(address _from, address _to, uint256 _value) public \n\treturns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);     \t\t\t\t\t//Allowance verification\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n    \n\t/*\n\t*\tFuntion: Approve usable amount for an account\n\t*\tType:Public\n\t*\tParameters:\n\t\t\t@_spender:\taddress of spender's account\n\t\t\t@_value:\tapprove amount\n\t*/\n    function approve(address _spender, uint256 _value) public \n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        return true;\n        }\n\n\t/*\n\t*\tFuntion: Approve usable amount for other address and then notify the contract\n\t*\tType:Public\n\t*\tParameters:\n\t\t\t@_spender:\taddress of other account\n\t\t\t@_value:\tapprove amount\n\t\t\t@_extraData:additional information to send to the approved contract\n\t*/\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public \n        returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n    /*\n\t*\tFuntion: Transfer owner's authority and account balance\n\t*\tType:Public and onlyOwner\n\t*\tParameters:\n\t\t\t@newOwner:\taddress of newOwner\n\t*/\n    function transferOwnershipWithBalance(address newOwner) onlyOwner public{\n\t\tif (newOwner != address(0)) {\n\t\t    _transfer(owner,newOwner,balanceOf[owner]);\n\t\t    owner = newOwner;\n\t\t}\n\t}\n   //===================Contract behavior & funtions definition end===================\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipWithBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "606060405234156200001057600080fd5b5b5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6008600360006101000a81548160ff021916908360ff160217905550600360009054906101000a900460ff1660ff16600a0a6402540be40002600481905550600454600560008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506040805190810160405280600481526020017f434152420000000000000000000000000000000000000000000000000000000081525060019080519060200190620001469291906200019c565b506040805190810160405280600481526020017f434152420000000000000000000000000000000000000000000000000000000081525060029080519060200190620001949291906200019c565b505b6200024b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001df57805160ff191683800117855562000210565b8280016001018555821562000210579182015b828111156200020f578251825591602001919060010190620001f2565b5b5090506200021f919062000223565b5090565b6200024891905b80821115620002445760008160009055506001016200022a565b5090565b90565b6110a7806200025b6000396000f300606060405236156100ce576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100d3578063095ea7b31461016257806317faa66f146101bc57806318160ddd146101f557806323b872dd1461021e578063313ce5671461029757806341c0e1b5146102c657806370a08231146102db5780638da5cb5b1461032857806395d89b411461037d578063a9059cbb1461040c578063cae9ca511461044e578063dd62ed3e146104eb578063f2fde38b14610557575b600080fd5b34156100de57600080fd5b6100e6610590565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101275780820151818401525b60208101905061010b565b50505050905090810190601f1680156101545780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016d57600080fd5b6101a2600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061062e565b604051808215151515815260200191505060405180910390f35b34156101c757600080fd5b6101f3600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106bc565b005b341561020057600080fd5b61020861081f565b6040518082815260200191505060405180910390f35b341561022957600080fd5b61027d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610825565b604051808215151515815260200191505060405180910390f35b34156102a257600080fd5b6102aa610953565b604051808260ff1660ff16815260200191505060405180910390f35b34156102d157600080fd5b6102d9610966565b005b34156102e657600080fd5b610312600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109fe565b6040518082815260200191505060405180910390f35b341561033357600080fd5b61033b610a16565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561038857600080fd5b610390610a3b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103d15780820151818401525b6020810190506103b5565b50505050905090810190601f1680156103fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561041757600080fd5b61044c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ad9565b005b341561045957600080fd5b6104d1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610ae9565b604051808215151515815260200191505060405180910390f35b34156104f657600080fd5b610541600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610c68565b6040518082815260200191505060405180910390f35b341561056257600080fd5b61058e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610c8d565b005b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106265780601f106105fb57610100808354040283529160200191610626565b820191906000526020600020905b81548152906001019060200180831161060957829003601f168201915b505050505081565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600190505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561071757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561081a576107d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600560008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d64565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b50565b60045481565b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156108b257600080fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610947848484610d64565b600190505b9392505050565b600360009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109c157600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5b565b60056020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ad15780601f10610aa657610100808354040283529160200191610ad1565b820191906000526020600020905b815481529060010190602001808311610ab457829003601f168201915b505050505081565b610ae4338383610d64565b5b5050565b600080849050610af9858561062e565b15610c5f578073ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338630876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610bf45780820151818401525b602081019050610bd8565b50505050905090810190601f168015610c215780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1515610c4257600080fd5b6102c65a03f11515610c5357600080fd5b50505060019150610c60565b5b509392505050565b6006602052816000526040600020602052806000526040600020600091509150505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ce857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515610d5f57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b50565b6000808373ffffffffffffffffffffffffffffffffffffffff1614151515610d8b57600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610dd957600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401111515610e6757600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401905081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a380600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540114151561107457fe5b5b505050505600a165627a7a72305820d3d62867c1c662e3cbdb9491f6faa831b16693ace3f7b0fbda1f394e0159229b0029"
}