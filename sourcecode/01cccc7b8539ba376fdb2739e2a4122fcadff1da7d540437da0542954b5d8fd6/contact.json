{
  "address": "0x1573d99617e90621488c0938feb33d41e82019b7",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CRYPTOSTAR",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-11\n*/\n\npragma solidity ^0.4.19;\n\ncontract BaseToken {\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 public totalSupply;\n\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    function _transfer(address _from, address _to, uint _value) internal {\n        require(_to != 0x0);\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value > balanceOf[_to]);\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n        Transfer(_from, _to, _value);\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n}\n\ncontract AirdropToken is BaseToken {\n    uint256 public airAmount;\n    uint256 public airBegintime;\n    uint256 public airEndtime;\n    address public airSender;\n    uint32 public airLimitCount;\n\n    mapping (address => uint32) public airCountOf;\n\n    event Airdrop(address indexed from, uint32 indexed count, uint256 tokenValue);\n\n    function airdrop() public payable {\n        require(now >= airBegintime && now <= airEndtime);\n        require(msg.value == 0);\n        if (airLimitCount > 0 && airCountOf[msg.sender] >= airLimitCount) {\n            revert();\n        }\n        _transfer(airSender, msg.sender, airAmount);\n        airCountOf[msg.sender] += 1;\n        Airdrop(msg.sender, airCountOf[msg.sender], airAmount);\n    }\n}\n\ncontract ICOToken is BaseToken {\n    // 1 ether = icoRatio token\n    uint256 public icoRatio;\n    uint256 public icoBegintime;\n    uint256 public icoEndtime;\n    address public icoSender;\n    address public icoHolder;\n\n    event ICO(address indexed from, uint256 indexed value, uint256 tokenValue);\n    event Withdraw(address indexed from, address indexed holder, uint256 value);\n\n    function ico() public payable {\n        require(now >= icoBegintime && now <= icoEndtime);\n        uint256 tokenValue = (msg.value * icoRatio * 10 ** uint256(decimals)) / (1 ether / 1 wei);\n        if (tokenValue == 0 || balanceOf[icoSender] < tokenValue) {\n            revert();\n        }\n        _transfer(icoSender, msg.sender, tokenValue);\n        ICO(msg.sender, msg.value, tokenValue);\n    }\n\n    function withdraw() public {\n        uint256 balance = this.balance;\n        icoHolder.transfer(balance);\n        Withdraw(msg.sender, icoHolder, balance);\n    }\n}\n\ncontract CRYPTOSTAR is BaseToken, AirdropToken, ICOToken {\n    function CRYPTOSTAR() public {\n        totalSupply = 30000000000e18;\n        name = 'CRYPTOSTAR';\n        symbol = 'TOSTER';\n        decimals = 18;\n        balanceOf[0x4F3b742f30BB88521F582eAb68F929F45f79Af03] = totalSupply;\n        Transfer(address(0), 0x4F3b742f30BB88521F582eAb68F929F45f79Af03, totalSupply);\n\n        airAmount = 1200e18;\n        airBegintime = 1554231600;\n        airEndtime = 1562094000;\n        airSender = 0xDa76Db53E563d2E90b8425cEeCc3D3b4473C936F;\n        airLimitCount = 1;\n\n        icoRatio = 10000000;\n        icoBegintime = 1554231600;\n        icoEndtime = 1562094000;\n        icoSender = 0x70b9E07C6D33B026a8Bf4D466B041C5E33Bcf1ac;\n        icoHolder = 0x70b9E07C6D33B026a8Bf4D466B041C5E33Bcf1ac;\n    }\n\n    function() public payable {\n        if (msg.value == 0) {\n            airdrop();\n        } else {\n            ico();\n        }\n    }\n}",
  "bytecode": "606060405234156200001057600080fd5b6b60ef6b1aba6f0723300000006003819055506040805190810160405280600a81526020017f43525950544f535441520000000000000000000000000000000000000000000081525060009080519060200190620000709291906200031e565b506040805190810160405280600681526020017f544f53544552000000000000000000000000000000000000000000000000000081525060019080519060200190620000be9291906200031e565b506012600260006101000a81548160ff021916908360ff16021790555060035460046000734f3b742f30bb88521f582eab68f929f45f79af0373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550734f3b742f30bb88521f582eab68f929f45f79af0373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a368410d586a20a4c00000600681905550635ca3b130600781905550635d1ba9b060088190555073da76db53e563d2e90b8425ceecc3d3b4473c936f600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600960146101000a81548163ffffffff021916908363ffffffff16021790555062989680600b81905550635ca3b130600c81905550635d1ba9b0600d819055507370b9e07c6d33b026a8bf4d466b041c5e33bcf1ac600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507370b9e07c6d33b026a8bf4d466b041c5e33bcf1ac600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620003cd565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036157805160ff191683800117855562000392565b8280016001018555821562000392579182015b828111156200039157825182559160200191906001019062000374565b5b509050620003a19190620003a5565b5090565b620003ca91905b80821115620003c6576000816000905550600101620003ac565b5090565b90565b61139d80620003dd6000396000f300606060405260043610610133576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461015457806307cc6051146101e2578063095ea7b31461020b57806318160ddd1461026557806323b872dd1461028e578063313ce567146103075780633884d635146103365780633ccfd60b146103405780635d4522011461035557806370a082311461035f5780637d720296146103ac57806395d89b4114610401578063a2ebb20b1461048f578063a3fe1ade146104e4578063a9059cbb1461053d578063b0f85a1014610597578063b3b8c620146105c0578063d211fe86146105e9578063dd62ed3e14610612578063de28fc1d1461067e578063e6136d84146106d3578063e67ad254146106fc578063e779a8cf14610725575b60003414156101495761014461075a565b610152565b610151610972565b5b005b341561015f57600080fd5b610167610abc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101a757808201518184015260208101905061018c565b50505050905090810190601f1680156101d45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ed57600080fd5b6101f5610b5a565b6040518082815260200191505060405180910390f35b341561021657600080fd5b61024b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b60565b604051808215151515815260200191505060405180910390f35b341561027057600080fd5b610278610c52565b6040518082815260200191505060405180910390f35b341561029957600080fd5b6102ed600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610c58565b604051808215151515815260200191505060405180910390f35b341561031257600080fd5b61031a610d85565b604051808260ff1660ff16815260200191505060405180910390f35b61033e61075a565b005b341561034b57600080fd5b610353610d98565b005b61035d610972565b005b341561036a57600080fd5b610396600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ea0565b6040518082815260200191505060405180910390f35b34156103b757600080fd5b6103bf610eb8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561040c57600080fd5b610414610ede565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610454578082015181840152602081019050610439565b50505050905090810190601f1680156104815780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561049a57600080fd5b6104a2610f7c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104ef57600080fd5b61051b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610fa2565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b341561054857600080fd5b61057d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610fc5565b604051808215151515815260200191505060405180910390f35b34156105a257600080fd5b6105aa610fdc565b6040518082815260200191505060405180910390f35b34156105cb57600080fd5b6105d3610fe2565b6040518082815260200191505060405180910390f35b34156105f457600080fd5b6105fc610fe8565b6040518082815260200191505060405180910390f35b341561061d57600080fd5b610668600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610fee565b6040518082815260200191505060405180910390f35b341561068957600080fd5b610691611013565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106de57600080fd5b6106e6611039565b6040518082815260200191505060405180910390f35b341561070757600080fd5b61070f61103f565b6040518082815260200191505060405180910390f35b341561073057600080fd5b610738611045565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b600754421015801561076e57506008544211155b151561077957600080fd5b60003414151561078857600080fd5b6000600960149054906101000a900463ffffffff1663ffffffff1611801561081d5750600960149054906101000a900463ffffffff1663ffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1610155b1561082757600080fd5b610856600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163360065461105b565b6001600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff160217905550600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff163373ffffffffffffffffffffffffffffffffffffffff167fcce6ff7d594e7067a58df51c8588740b7c8b42537da7262add9823085de82e486006546040518082815260200191505060405180910390a3565b6000600c5442101580156109885750600d544211155b151561099357600080fd5b670de0b6b3a7640000600260009054906101000a900460ff1660ff16600a0a600b543402028115156109c157fe5b0490506000811480610a3357508060046000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054105b15610a3d57600080fd5b610a6a600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338361105b565b343373ffffffffffffffffffffffffffffffffffffffff167f4a987bc3d04b32db133ad9a3c7c0d8ecc441eb56f45a62b92c38384c095e7ac0836040518082815260200191505060405180910390a350565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b525780601f10610b2757610100808354040283529160200191610b52565b820191906000526020600020905b815481529060010190602001808311610b3557829003601f168201915b505050505081565b60065481565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60035481565b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610ce557600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610d7a84848461105b565b600190509392505050565b600260009054906101000a900460ff1681565b60003073ffffffffffffffffffffffffffffffffffffffff16319050600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501515610e1657600080fd5b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb836040518082815260200191505060405180910390a350565b60046020528060005260406000206000915090505481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f745780601f10610f4957610100808354040283529160200191610f74565b820191906000526020600020905b815481529060010190602001808311610f5757829003601f168201915b505050505081565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915054906101000a900463ffffffff1681565b6000610fd233848461105b565b6001905092915050565b60085481565b600b5481565b600d5481565b6005602052816000526040600020602052806000526040600020600091509150505481565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b60075481565b600960149054906101000a900463ffffffff1681565b6000808373ffffffffffffffffffffffffffffffffffffffff161415151561108257600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156110d057600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540111151561115e57600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401905081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540114151561130657fe5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3505050505600a165627a7a72305820452d92bea1b612ace3c57f413b679c16527b8e603111e20bc82e60e610bcb45b0029"
}