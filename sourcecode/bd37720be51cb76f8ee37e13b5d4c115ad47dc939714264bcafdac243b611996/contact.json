{
  "address": "0xae53e6c464c95ecf1e28a5a447772ccb5f5761ae",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ERC20MetaInfo",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-10\n*/\n\npragma solidity ^0.4.24;\n\n/**\n * @title ERC20 Ownable\n * @dev ERC20 interface\n * @author Comps Pte. Ltd.\n */\ncontract ERC20 {\n  address public owner;\n  string public name;\n  string public symbol;\n  uint256 public decimals;\n  uint256 public totalSupply;\n\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address _who) public view returns (uint256);\n  function transfer(address _to, uint256 _value) public returns (bool);\n  function approve(address _spender, uint256 _value) public returns (bool);\n  function allowance(address _owner, address _spender) public view returns (uint256);\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title  ERC20 Meta Info\n * @dev    Mata data storage for ERC20 compatible tokens\n */\ncontract ERC20MetaInfo {\n  address public owner;\n  mapping (address => mapping (string => string)) keyValues;\n\n  // constructor\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev   setKeyValue Assign (key, value) pair to a token\n   * @param _token      ERC20 compatible token contract's address\n   * @param _key        Key in string\n   * @param _value      Value in string\n   */\n  function setKeyValue(ERC20 _token, string _key, string _value) public returns (bool) {\n    // If a value is empty, anybody can assign a pair of (key, value)\n    // Otherwise, only token contract's \"owner\" (if the token contract is Ownable),\n    // or ERC20MetaInfo contract owner can assign/update a value\n    require(bytes(keyValues[_token][_key]).length == 0 || owner == msg.sender || _token.owner() == msg.sender);\n    keyValues[_token][_key] = _value;\n    return true;\n  }\n\n  /**\n   * @dev   getKeyValue Get value correspoinding to a key\n   * @param _token      ERC20 compatible token contract's address\n   * @param _key        Specify a key in string\n   */\n  function getKeyValue(address _token, string _key) public view returns (string _value) {\n    return keyValues[_token][_key];\n  }\n}",
  "bytecode": "608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610605806100326000396000f3006080604052600436106100565763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631db9d350811461005b5780638016b6ed146101145780638da5cb5b146101f0575b600080fd5b34801561006757600080fd5b5060408051602060046024803582810135601f8101859004850286018501909652858552610100958335600160a060020a031695369560449491939091019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506102219650505050505050565b604080519115158252519081900360200190f35b34801561012057600080fd5b5060408051602060046024803582810135601f810185900485028601850190965285855261017b958335600160a060020a03169536956044949193909101919081908401838280828437509497506104179650505050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b557818101518382015260200161019d565b50505050905090810190601f1680156101e25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101fc57600080fd5b5061020561052f565b60408051600160a060020a039092168252519081900360200190f35b600160a060020a0383166000908152600160209081526040808320905185519192869282918401908083835b6020831061026c5780518252601f19909201916020918201910161024d565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020805460018160011615610100020316600290049050600014806102cc5750600054600160a060020a031633145b8061036a575033600160a060020a031684600160a060020a0316638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561033357600080fd5b505af1158015610347573d6000803e3d6000fd5b505050506040513d602081101561035d57600080fd5b5051600160a060020a0316145b151561037557600080fd5b816001600086600160a060020a0316600160a060020a03168152602001908152602001600020846040518082805190602001908083835b602083106103cb5780518252601f1990920191602091820191016103ac565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101909320845161040c959194919091019250905061053e565b506001949350505050565b60606001600084600160a060020a0316600160a060020a03168152602001908152602001600020826040518082805190602001908083835b6020831061046e5780518252601f19909201916020918201910161044f565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208054601f60026001831615909802909501169590950492830182900482028801820190528187529294509250508301828280156105225780601f106104f757610100808354040283529160200191610522565b820191906000526020600020905b81548152906001019060200180831161050557829003601f168201915b5050505050905092915050565b600054600160a060020a031681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061057f57805160ff19168380011785556105ac565b828001600101855582156105ac579182015b828111156105ac578251825591602001919060010190610591565b506105b89291506105bc565b5090565b6105d691905b808211156105b857600081556001016105c2565b905600a165627a7a72305820b7f64003cd3d3c60bc57d58f3304d4c169ae766b3d9d38e20652ef402ad6da490029"
}