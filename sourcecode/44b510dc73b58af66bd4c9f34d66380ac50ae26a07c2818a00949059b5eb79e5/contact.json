{
  "address": "0xab0C22317A24e194A8FF0594E1bE5f56F748716b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "AmericanPoker",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-21\n*/\n\npragma solidity ^0.5.8;\n\ncontract AmericanPoker {\n\n    mapping (bytes32 => bool) private paymentIds;\n\n    event GameStarted(address _contract);\n    event PaymentReceived(address _player, uint _amount);\n    event PaymentMade(address _player, address _issuer, uint _amount);\n    event UnauthorizedCashoutAttempt(address _bandit, uint _amount);\n\n    constructor()\n        public\n    {\n        emit GameStarted(address(this));\n    }\n\n    function buyCredit(bytes32 _paymentId)\n        public\n        payable\n        returns (bool success)\n    {\n        address payable player = msg.sender;\n        uint amount = msg.value;\n        paymentIds[_paymentId] = true;\n        emit PaymentReceived(player, amount);\n        return true;\n    }\n\n    function verifyPayment(bytes32 _paymentId)\n        public\n        view\n        returns (bool success)\n    {\n        return paymentIds[_paymentId];\n    }\n\n    function payOut()\n        public\n        payable\n        returns (bool success)\n    {\n        msg.sender.transfer(msg.value);\n        return true;\n    }\n\n    function cashOut(address payable _player, uint _amount)\n        public\n        payable\n        returns (bool success)\n    {\n        address payable paymentIssuer = msg.sender;\n        address permitedIssuer = 0xCec9653C69748ed175f0b8eEaF717562BBFa034a;\n\n        if(paymentIssuer!=permitedIssuer) {\n            emit UnauthorizedCashoutAttempt(paymentIssuer, _amount);\n            return false;\n        }\n\n        _player.transfer(_amount);\n\n        emit PaymentMade(_player, paymentIssuer, _amount);\n        return true;\n    }\n\n    function payRoyalty()\n        public\n        payable\n        returns (bool success)\n    {\n        uint royalty = address(this).balance/2;\n        address payable trustedParty1 = 0xbcFAB06E0cc4Fe694Bdf780F1FcB1bB143bD93Ad;\n        address payable trustedParty2 = 0x0651Fa03b46523c12216bE533F604e973DAd0bc8;\n        address payable trustedParty3 = 0xFeF78136d260389eb40AA65C4419eC9A1B5081A9;\n        address payable trustedParty4 = 0x52692d3c980983B42496d3B71988586b3F8F2D83;\n        trustedParty1.transfer((royalty*30)/100);\n        trustedParty2.transfer((royalty*30)/100);\n        trustedParty3.transfer((royalty*30)/100);\n        trustedParty4.transfer((royalty*10)/100);\n        return true;\n    }\n\n    function getContractBalance()\n        public\n        view\n        returns (uint balance)\n    {\n        return address(this).balance;\n    }\n\n}",
  "bytecode": "608060405234801561001057600080fd5b507f67cf7f1535e1c1323fe4e76266f7d55f0c1f67fdf449db65e014f9d35881514d30604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16106da806100836000396000f3fe6080604052600436106100555760003560e01c8063212d67231461005a578063224054431461007c57806348e68950146100e25780636f9fb98a14610135578063818a8abe14610160578063c2052403146101a6575b600080fd5b6100626101c8565b604051808215151515815260200191505060405180910390f35b6100c86004803603604081101561009257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103af565b604051808215151515815260200191505060405180910390f35b3480156100ee57600080fd5b5061011b6004803603602081101561010557600080fd5b810190808035906020019092919050505061056a565b604051808215151515815260200191505060405180910390f35b34801561014157600080fd5b5061014a610593565b6040518082815260200191505060405180910390f35b61018c6004803603602081101561017657600080fd5b81019080803590602001909291905050506105b2565b604051808215151515815260200191505060405180910390f35b6101ae61065e565b604051808215151515815260200191505060405180910390f35b60008060023073ffffffffffffffffffffffffffffffffffffffff1631816101ec57fe5b049050600073bcfab06e0cc4fe694bdf780f1fcb1bb143bd93ad90506000730651fa03b46523c12216be533f604e973dad0bc89050600073fef78136d260389eb40aa65c4419ec9a1b5081a9905060007352692d3c980983b42496d3b71988586b3f8f2d8390508373ffffffffffffffffffffffffffffffffffffffff166108fc6064601e88028161027a57fe5b049081150290604051600060405180830381858888f193505050501580156102a6573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff166108fc6064601e8802816102ce57fe5b049081150290604051600060405180830381858888f193505050501580156102fa573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff166108fc6064601e88028161032257fe5b049081150290604051600060405180830381858888f1935050505015801561034e573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff166108fc6064600a88028161037657fe5b049081150290604051600060405180830381858888f193505050501580156103a2573d6000803e3d6000fd5b5060019550505050505090565b600080339050600073cec9653c69748ed175f0b8eeaf717562bbfa034a90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610477577f42b91e62d1e0029f65ba9a6ea360260044361b9c7c1091fdecaacad5319e52918285604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1600092505050610564565b8473ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f193505050501580156104bd573d6000803e3d6000fd5b507f0a58819e8a8484b4b953261f35757d54a8bb44412938c22784e056a69ffa17c9858386604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a16001925050505b92915050565b600080600083815260200190815260200160002060009054906101000a900460ff169050919050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000803390506000349050600160008086815260200190815260200160002060006101000a81548160ff0219169083151502179055507f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be7708282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1600192505050919050565b60003373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156106a6573d6000803e3d6000fd5b50600190509056fea165627a7a7230582038fdd8cda672cb4c74ee83995a8ffc270c4707c9401511f3a7d9c2fa0850b5870029"
}