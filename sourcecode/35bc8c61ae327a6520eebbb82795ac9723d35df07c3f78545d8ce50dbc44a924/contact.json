{
  "address": "0x1961b3331969ed52770751fc718ef530838b6dee",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "BitDegree Token",
  "contractName": "BitDegreeToken",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-11-30\n*/\n\npragma solidity ^0.4.18;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n    uint256 public totalSupply;\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public view returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n\n        // SafeMath.sub will throw if there is not enough balance.\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint256 representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n    mapping (address => mapping (address => uint256)) internal allowed;\n\n\n    /**\n     * @dev Transfer tokens from one address to another\n     * @param _from address The address which you want to send tokens from\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     *\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param _spender The address which will spend the funds.\n     * @param _value The amount of tokens to be spent.\n     */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param _owner address The address which owns the funds.\n     * @param _spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n     * approve should be called when allowed[_spender] == 0. To increment\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     */\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public owner;\n\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    function Ownable() public {\n        owner = msg.sender;\n    }\n\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0));\n        OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n}\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n    event Pause();\n    event Unpause();\n\n    bool public paused = false;\n\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused);\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     */\n    modifier whenPaused() {\n        require(paused);\n        _;\n    }\n\n    /**\n     * @dev called by the owner to pause, triggers stopped state\n     */\n    function pause() onlyOwner whenNotPaused public {\n        paused = true;\n        Pause();\n    }\n\n    /**\n     * @dev called by the owner to unpause, returns to normal state\n     */\n    function unpause() onlyOwner whenPaused public {\n        paused = false;\n        Unpause();\n    }\n}\n\n/**\n * @title Pausable token\n *\n * @dev StandardToken modified with pausable transfers.\n **/\ncontract PausableToken is StandardToken, Pausable {\n\n    function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n        return super.transfer(_to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n        return super.approve(_spender, _value);\n    }\n\n    function increaseApproval(address _spender, uint _addedValue) public whenNotPaused returns (bool success) {\n        return super.increaseApproval(_spender, _addedValue);\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool success) {\n        return super.decreaseApproval(_spender, _subtractedValue);\n    }\n}\n\n\ncontract BitDegreeToken is PausableToken {\n    string public constant name = \"BitDegree Token\";\n    string public constant symbol = \"BDG\";\n    uint8 public constant decimals = 18;\n\n    uint256 private constant TOKEN_UNIT = 10 ** uint256(decimals);\n\n    uint256 public constant totalSupply = 660000000 * TOKEN_UNIT;\n    uint256 public constant publicAmount = 336600000 * TOKEN_UNIT; // Tokens for public\n\n    uint public startTime;\n    address public crowdsaleAddress;\n\n    struct TokenLock { uint256 amount; uint duration; bool withdrawn; }\n\n    TokenLock public foundationLock = TokenLock({\n        amount: 66000000 * TOKEN_UNIT,\n        duration: 360 days,\n        withdrawn: false\n    });\n\n    TokenLock public teamLock = TokenLock({\n        amount: 66000000 * TOKEN_UNIT,\n        duration: 720 days,\n        withdrawn: false\n    });\n\n    TokenLock public advisorLock = TokenLock({\n        amount: 13200000 * TOKEN_UNIT,\n        duration: 160 days,\n        withdrawn: false\n    });\n\n    function BitDegreeToken() public {\n        startTime = now + 70 days;\n\n        balances[owner] = totalSupply;\n        Transfer(address(0), owner, balances[owner]);\n\n        lockTokens(foundationLock);\n        lockTokens(teamLock);\n        lockTokens(advisorLock);\n    }\n\n    function setCrowdsaleAddress(address _crowdsaleAddress) external onlyOwner {\n        crowdsaleAddress = _crowdsaleAddress;\n        assert(approve(crowdsaleAddress, publicAmount));\n    }\n\n    function withdrawLocked() external onlyOwner {\n        if(unlockTokens(foundationLock)) foundationLock.withdrawn = true;\n        if(unlockTokens(teamLock)) teamLock.withdrawn = true;\n        if(unlockTokens(advisorLock)) advisorLock.withdrawn = true;\n    }\n\n    function lockTokens(TokenLock lock) internal {\n        balances[owner] = balances[owner].sub(lock.amount);\n        balances[address(0)] = balances[address(0)].add(lock.amount);\n        Transfer(owner, address(0), lock.amount);\n    }\n\n    function unlockTokens(TokenLock lock) internal returns (bool) {\n        uint lockReleaseTime = startTime + lock.duration;\n\n        if(lockReleaseTime < now && lock.withdrawn == false) {\n            balances[owner] = balances[owner].add(lock.amount);\n            balances[address(0)] = balances[address(0)].sub(lock.amount);\n            Transfer(address(0), owner, lock.amount);\n            return true;\n        }\n\n        return false;\n    }\n\n    function setStartTime(uint _startTime) external {\n        require(msg.sender == crowdsaleAddress);\n        if(_startTime < startTime) {\n            startTime = _startTime;\n        }\n    }\n\n    function transfer(address _to, uint _value) public returns (bool) {\n        // Only possible after ICO ends\n        require(now >= startTime);\n\n        return super.transfer(_to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\n        // Only owner's tokens can be transferred before ICO ends\n        if (now < startTime)\n            require(_from == owner);\n\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(now >= startTime);\n        super.transferOwnership(newOwner);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_crowdsaleAddress\",\"type\":\"address\"}],\"name\":\"setCrowdsaleAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundationLock\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"duration\",\"type\":\"uint256\"},{\"name\":\"withdrawn\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisorLock\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"duration\",\"type\":\"uint256\"},{\"name\":\"withdrawn\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamLock\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"duration\",\"type\":\"uint256\"},{\"name\":\"withdrawn\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawLocked\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "606060408181526003805460a060020a60ff02191690555190810160409081526a36980b2b50d5438200000082526301da9c006020830152600090820152600681518155602082015181600101556040820151600291909101805460ff191691151591909117905550606060405190810160409081526a36980b2b50d5438200000082526303b538006020830152600090820152600981518155602082015181600101556040820151600291909101805460ff191691151591909117905550606060405190810160409081526a0aeb356f102aa71a000000825262d2f0006020830152600090820152600c81518155602082015181600101556040820151600291909101805460ff19169115159190911790555034156200011f57600080fd5b60038054600160a060020a03191633600160a060020a039081169190911780835542625c49000160045581166000908152600160205260408082206b0221f06fb12854a314000000905592549091168082528282205490926000805160206200149c83398151915291905190815260200160405180910390a3620001df600660606040519081016040908152825482526001830154602083015260029092015460ff1615159181019190915264010000000062000fce6200027382021704565b62000226600960606040519081016040908152825482526001830154602083015260029092015460ff1615159181019190915264010000000062000fce6200027382021704565b6200026d600c60606040519081016040908152825482526001830154602083015260029092015460ff1615159181019190915264010000000062000fce6200027382021704565b62000373565b620002a98151600354600160a060020a03166000908152600160205260409020549064010000000062000ec46200034982021704565b600354600160a060020a0316600090815260016020526040902055620002f981516000805260016020526000805160206200147c833981519152549064010000000062000fbf6200035c82021704565b600080805260016020526000805160206200147c83398151915291909155600354600160a060020a03166000805160206200149c833981519152835160405190815260200160405180910390a350565b6000828211156200035657fe5b50900390565b6000828201838110156200036c57fe5b9392505050565b6110f980620003836000396000f3006060604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461014d578063095ea7b3146101d757806318160ddd1461020d5780631f35bc401461023257806323b872dd146102535780632690f0d51461027b578063313ce567146102b457806331d2f891146102dd5780633e0a322d1461030c5780633f4ba83a146103225780635c975abb14610335578063661884631461034857806370a082311461036a57806378e97925146103895780638456cb591461039c5780638da5cb5b146103af57806395d89b41146103c2578063a27a9e7f146103d5578063a9059cbb146103e8578063b84997501461040a578063ba72cc361461041d578063d135cc4b14610430578063d73dd62314610443578063dd62ed3e14610465578063f2fde38b1461048a575b600080fd5b341561015857600080fd5b6101606104a9565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561019c578082015183820152602001610184565b50505050905090810190601f1680156101c95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101e257600080fd5b6101f9600160a060020a03600435166024356104e0565b604051901515815260200160405180910390f35b341561021857600080fd5b61022061050b565b60405190815260200160405180910390f35b341561023d57600080fd5b610251600160a060020a036004351661051b565b005b341561025e57600080fd5b6101f9600160a060020a0360043581169060243516604435610586565b341561028657600080fd5b61028e6105bf565b604051928352602083019190915215156040808301919091526060909101905180910390f35b34156102bf57600080fd5b6102c76105ce565b60405160ff909116815260200160405180910390f35b34156102e857600080fd5b6102f06105d3565b604051600160a060020a03909116815260200160405180910390f35b341561031757600080fd5b6102516004356105e2565b341561032d57600080fd5b61025161060c565b341561034057600080fd5b6101f961068b565b341561035357600080fd5b6101f9600160a060020a036004351660243561069b565b341561037557600080fd5b610220600160a060020a03600435166106bf565b341561039457600080fd5b6102206106da565b34156103a757600080fd5b6102516106e0565b34156103ba57600080fd5b6102f0610764565b34156103cd57600080fd5b610160610773565b34156103e057600080fd5b6102206107aa565b34156103f357600080fd5b6101f9600160a060020a03600435166024356107ba565b341561041557600080fd5b61028e6107d6565b341561042857600080fd5b61028e6107e5565b341561043b57600080fd5b6102516107f4565b341561044e57600080fd5b6101f9600160a060020a03600435166024356108ef565b341561047057600080fd5b610220600160a060020a0360043581169060243516610913565b341561049557600080fd5b610251600160a060020a036004351661093e565b60408051908101604052600f81527f42697444656772656520546f6b656e0000000000000000000000000000000000602082015281565b60035460009060a060020a900460ff16156104fa57600080fd5b6105048383610971565b9392505050565b6b0221f06fb12854a31400000081565b60035433600160a060020a0390811691161461053657600080fd5b6005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091179182905561057b91166b01166dd2901c3fa5170000006104e0565b151561058357fe5b50565b60006004544210156105ac57600354600160a060020a038581169116146105ac57600080fd5b6105b78484846109dd565b949350505050565b60065460075460085460ff1683565b601281565b600554600160a060020a031681565b60055433600160a060020a039081169116146105fd57600080fd5b60045481101561058357600455565b60035433600160a060020a0390811691161461062757600080fd5b60035460a060020a900460ff16151561063f57600080fd5b6003805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60035460a060020a900460ff1681565b60035460009060a060020a900460ff16156106b557600080fd5b6105048383610a02565b600160a060020a031660009081526001602052604090205490565b60045481565b60035433600160a060020a039081169116146106fb57600080fd5b60035460a060020a900460ff161561071257600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600354600160a060020a031681565b60408051908101604052600381527f4244470000000000000000000000000000000000000000000000000000000000602082015281565b6b01166dd2901c3fa51700000081565b6004546000904210156107cc57600080fd5b6105048383610afc565b600c54600d54600e5460ff1683565b600954600a54600b5460ff1683565b60035433600160a060020a0390811691161461080f57600080fd5b610846600660606040519081016040908152825482526001830154602083015260029092015460ff16151591810191909152610b20565b15610859576008805460ff191660011790555b610890600960606040519081016040908152825482526001830154602083015260029092015460ff16151591810191909152610b20565b156108a357600b805460ff191660011790555b6108da600c60606040519081016040908152825482526001830154602083015260029092015460ff16151591810191909152610b20565b156108ed57600e805460ff191660011790555b565b60035460009060a060020a900460ff161561090957600080fd5b6105048383610c15565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a0390811691161461095957600080fd5b60045442101561096857600080fd5b61058381610cb9565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60035460009060a060020a900460ff16156109f757600080fd5b6105b7848484610d54565b600160a060020a03338116600090815260026020908152604080832093861683529290529081205480831115610a5f57600160a060020a033381166000908152600260209081526040808320938816835292905290812055610a96565b610a6f818463ffffffff610ec416565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b60035460009060a060020a900460ff1615610b1657600080fd5b6105048383610ed6565b60008082602001516004540190504281108015610b3f57508260400151155b15610c0a57610b708351600354600160a060020a03166000908152600160205260409020549063ffffffff610fbf16565b600354600160a060020a0316600090815260016020526040902055610bb5835160008052600160205260008051602061108e833981519152549063ffffffff610ec416565b6000808052600160205260008051602061108e83398151915291909155600354600160a060020a0316906000805160206110ae833981519152855160405190815260200160405180910390a360019150610c0f565b600091505b50919050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610c4d908363ffffffff610fbf16565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b60035433600160a060020a03908116911614610cd457600080fd5b600160a060020a0381161515610ce957600080fd5b600354600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000600160a060020a0383161515610d6b57600080fd5b600160a060020a038416600090815260016020526040902054821115610d9057600080fd5b600160a060020a0380851660009081526002602090815260408083203390941683529290522054821115610dc357600080fd5b600160a060020a038416600090815260016020526040902054610dec908363ffffffff610ec416565b600160a060020a038086166000908152600160205260408082209390935590851681522054610e21908363ffffffff610fbf16565b600160a060020a03808516600090815260016020908152604080832094909455878316825260028152838220339093168252919091522054610e69908363ffffffff610ec416565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516916000805160206110ae8339815191529085905190815260200160405180910390a35060019392505050565b600082821115610ed057fe5b50900390565b6000600160a060020a0383161515610eed57600080fd5b600160a060020a033316600090815260016020526040902054821115610f1257600080fd5b600160a060020a033316600090815260016020526040902054610f3b908363ffffffff610ec416565b600160a060020a033381166000908152600160205260408082209390935590851681522054610f70908363ffffffff610fbf16565b600160a060020a0380851660008181526001602052604090819020939093559133909116906000805160206110ae8339815191529085905190815260200160405180910390a350600192915050565b60008282018381101561050457fe5b610ffa8151600354600160a060020a03166000908152600160205260409020549063ffffffff610ec416565b600354600160a060020a031660009081526001602052604090205561103f815160008052600160205260008051602061108e833981519152549063ffffffff610fbf16565b6000808052600160205260008051602061108e83398151915291909155600354600160a060020a03166000805160206110ae833981519152835160405190815260200160405180910390a3505600a6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820fb9b03732be0e133318fb6017842b223d9ff612f0a3b8a76a55da61644388e7d0029a6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
  "constructorArguments": "a6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
}