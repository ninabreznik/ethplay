{
  "address": "0x190fb342aa6a15eb82903323ae78066ff8616746",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "UmbrellaCoin Token",
  "contractName": "UmbrellaCoin",
  "compilerVersion": "v0.4.11+commit.68ef5810",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-08-20\n*/\n\npragma solidity ^0.4.2;\n\nlibrary SafeMath {\n  function mul(uint a, uint b) internal returns (uint) {\n    uint c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n  function div(uint a, uint b) internal returns (uint) {\n    assert(b > 0);\n    uint c = a / b;\n    assert(a == b * c + a % b);\n    return c;\n  }\n  function sub(uint a, uint b) internal returns (uint) {\n    assert(b <= a);\n    return a - b;\n  }\n  function add(uint a, uint b) internal returns (uint) {\n    uint c = a + b;\n    assert(c >= a);\n    return c;\n  }\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\n    return a >= b ? a : b;\n  }\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\n    return a < b ? a : b;\n  }\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\n    return a >= b ? a : b;\n  }\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\n    return a < b ? a : b;\n  }\n}\n\ncontract ERC20Basic {\n  uint public totalSupply;\n  function balanceOf(address who) constant returns (uint);\n  function transfer(address to, uint value);\n  event Transfer(address indexed from, address indexed to, uint value);\n}\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) constant returns (uint);\n  function transferFrom(address from, address to, uint value);\n  function approve(address spender, uint value);\n  event Approval(address indexed owner, address indexed spender, uint value);\n}\n\ncontract BasicToken is ERC20Basic {\n  \n  using SafeMath for uint;\n  \n  mapping(address => uint) balances;\n  \n  /*\n   * Fix for the ERC20 short address attack  \n  */\n  modifier onlyPayloadSize(uint size) {\n     require(msg.data.length >= size + 4);\n     _;\n  }\n\n  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(msg.sender, _to, _value);\n  }\n\n  function balanceOf(address _owner) constant returns (uint balance) {\n    return balances[_owner];\n  }\n}\n\ncontract StandardToken is BasicToken, ERC20 {\n  mapping (address => mapping (address => uint)) allowed;\n\n  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {\n    var _allowance = allowed[_from][msg.sender];\n    // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n    // if (_value > _allowance) throw;\n    balances[_to] = balances[_to].add(_value);\n    balances[_from] = balances[_from].sub(_value);\n    allowed[_from][msg.sender] = _allowance.sub(_value);\n    Transfer(_from, _to, _value);\n  }\n\n  function approve(address _spender, uint _value) {\n    // To change the approve amount you first have to reduce the addresses`\n    //  allowance to zero by calling `approve(_spender, 0)` if it is not\n    //  already 0 to mitigate the race condition described here:\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) revert();\n    allowed[msg.sender][_spender] = _value;\n    Approval(msg.sender, _spender, _value);\n  }\n\n  function allowance(address _owner, address _spender) constant returns (uint remaining) {\n    return allowed[_owner][_spender];\n  }\n}\n\ncontract PullPayment {\n\n  using SafeMath for uint;\n  \n  mapping(address => uint) public payments;\n\n  event LogRefundETH(address to, uint value);\n\n\n  /**\n  *  Store sent amount as credit to be pulled, called by payer \n  **/\n  function asyncSend(address dest, uint amount) internal {\n    payments[dest] = payments[dest].add(amount);\n  }\n\n  // withdraw accumulated balance, called by payee\n  function withdrawPayments() {\n    address payee = msg.sender;\n    uint payment = payments[payee];\n    \n    require (payment > 0);\n    require (this.balance >= payment);\n\n    payments[payee] = 0;\n\n    require (payee.send(payment));\n    \n    LogRefundETH(payee,payment);\n  }\n}\n\ncontract Ownable {\n    address public owner;\n\n    function Ownable() {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require (msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address newOwner) onlyOwner {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n}\n\ncontract Pausable is Ownable {\n  bool public stopped;\n\n  modifier stopInEmergency {\n    require(!stopped);\n    _;\n  }\n  \n  modifier onlyInEmergency {\n    require(stopped);\n    _;\n  }\n\n  // called by the owner on emergency, triggers stopped state\n  function emergencyStop() external onlyOwner {\n    stopped = true;\n  }\n\n  // called by the owner on end of emergency, returns to normal state\n  function release() external onlyOwner onlyInEmergency {\n    stopped = false;\n  }\n\n}\n\n/**\n *  UmbrellaCoin token contract.\n */\ncontract UmbrellaCoin is StandardToken, Ownable {\n  string public constant name = \"UmbrellaCoin\";\n  string public constant symbol = \"UMC\";\n  uint public constant decimals = 6;\n  address public floatHolder;\n\n  // Constructor\n  function UmbrellaCoin() {\n      totalSupply = 100000000000000;\n      balances[msg.sender] = totalSupply; // Send all tokens to owner\n      floatHolder = msg.sender;\n  }\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"floatHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000c57fe5b5b5b60038054600160a060020a03191633600160a060020a03161790555b655af3107a40006000818155600160a060020a033316808252600160205260409091209190915560048054600160a060020a03191690911790555b5b610789806100756000396000f300606060405236156100b75763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b9578063095ea7b31461014957806318160ddd1461016a57806323b872dd1461018c578063313ce567146101b357806343a47345146101d557806370a08231146102015780638da5cb5b1461022f57806395d89b411461025b578063a9059cbb146102eb578063dd62ed3e1461030c578063f2fde38b14610340575bfe5b34156100c157fe5b6100c961035e565b60408051602080825283518183015283519192839290830191850190808383821561010f575b80518252602083111561010f57601f1990920191602091820191016100ef565b505050905090810190601f16801561013b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015157fe5b610168600160a060020a0360043516602435610395565b005b341561017257fe5b61017a610435565b60408051918252519081900360200190f35b341561019457fe5b610168600160a060020a036004358116906024351660443561043b565b005b34156101bb57fe5b61017a61055f565b60408051918252519081900360200190f35b34156101dd57fe5b6101e5610564565b60408051600160a060020a039092168252519081900360200190f35b341561020957fe5b61017a600160a060020a0360043516610573565b60408051918252519081900360200190f35b341561023757fe5b6101e5610592565b60408051600160a060020a039092168252519081900360200190f35b341561026357fe5b6100c96105a1565b60408051602080825283518183015283519192839290830191850190808383821561010f575b80518252602083111561010f57601f1990920191602091820191016100ef565b505050905090810190601f16801561013b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102f357fe5b610168600160a060020a03600435166024356105d8565b005b341561031457fe5b61017a600160a060020a03600435811690602435166106a6565b60408051918252519081900360200190f35b341561034857fe5b610168600160a060020a03600435166106d3565b005b60408051808201909152600c81527f556d6272656c6c61436f696e0000000000000000000000000000000000000000602082015281565b80158015906103c85750600160a060020a0333811660009081526002602090815260408083209386168352929052205415155b156103d35760006000fd5b600160a060020a03338116600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35b5050565b60005481565b60006060606436101561044e5760006000fd5b600160a060020a038086166000908152600260209081526040808320338516845282528083205493881683526001909152902054909250610495908463ffffffff61072c16565b600160a060020a0380861660009081526001602052604080822093909355908716815220546104ca908463ffffffff61074616565b600160a060020a0386166000908152600160205260409020556104f3828463ffffffff61074616565b600160a060020a038087166000818152600260209081526040808320338616845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35b5b5050505050565b600681565b600454600160a060020a031681565b600160a060020a0381166000908152600160205260409020545b919050565b600354600160a060020a031681565b60408051808201909152600381527f554d430000000000000000000000000000000000000000000000000000000000602082015281565b604060443610156105e95760006000fd5b600160a060020a033316600090815260016020526040902054610612908363ffffffff61074616565b600160a060020a033381166000908152600160205260408082209390935590851681522054610647908363ffffffff61072c16565b600160a060020a038085166000818152600160209081526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35b5b505050565b600160a060020a038083166000908152600260209081526040808320938516835292905220545b92915050565b60035433600160a060020a039081169116146106ef5760006000fd5b600160a060020a03811615610727576003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b5b50565b60008282018381101561073b57fe5b8091505b5092915050565b60008282111561075257fe5b508082035b929150505600a165627a7a723058207bbfeb5f8e87367352ddf91cdd149c0809a7f45ad5a5aae5adb5c0c9d30732bf0029"
}