{
  "address": "0x658fcbed32979cfbe6cd99da69dff23884cc0455",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CompanyToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-06-02\n*/\n\npragma solidity ^0.4.25;\n\ncontract CompanyToken {\n\n    /* variables */\n    string public name; /* ERC20 Name */\n    string public symbol; /* ERC20 Symbol */\n    uint8 public decimals; /* ERC20 Decimals */\n    uint256 public totalSupply; /* ERC20 total Supply */\n    address public owner; /* Owner address */\n    uint256 public rate; /* Token Exchange Rate in Euro */\n\tbool public allow_buy; /* allow token payed with eth */\n    mapping(address => uint256) balances; /* Token Balances */\n\n    /* events */    \n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Mint(address indexed owner, uint256 value);\n    event SetOwner(address indexed owner);\n    event SetAllowBuy(bool allow_buy);\n    event SetRate(uint256 rate);\n    event CreateToken(address indexed sender, uint256 value);\n    \n    /* variables on contract create */\n    constructor() public {\n        totalSupply = 2500000; /* decimals * real value */\n        name = \"BSOnders\";\n        symbol = \"BSO\";\n        decimals = 2;\n        rate = 190;\n        balances[msg.sender] = totalSupply;\n        owner = msg.sender;\n        allow_buy = false;\n    }\n    \n    /* modifier */\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n\tmodifier onlyPayloadSize(uint size) {\n\t\tassert(msg.data.length >= size + 4);\n\t\t_;\n\t}\n\t\n    /* default ERC20 functions */\n    function transfer(address _to, uint256 _value) public onlyPayloadSize(2 * 32) returns (bool success) {\n        require(balances[msg.sender] >= _value);\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n    \n    function transferFrom(address _from, address _to, uint256 _value) private returns (bool success) {\n        require(balances[_from] >= _value);\n        balances[_to] += _value;\n        balances[_from] -= _value;\n        emit Transfer(_from, _to, _value);\n        return true;\n    }    \n\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    /* set functions */ \n    function setRate(uint256 _value) public onlyOwner returns(bool success) {\n        rate = _value;\n        emit SetRate(_value);\n        return true;\n    }        \n\n    function setOwner(address _owner) public onlyOwner returns (bool success) {\n        owner = _owner;\n        emit SetOwner(_owner);\n        return true;\n    }    \n\n    function setAllowBuy(bool _value) public onlyOwner returns(bool success) {\n        allow_buy = _value;\n        emit SetAllowBuy(_value);\n        return true;\n    }\n\n    /* special functions */\n    function distribute(address[] recipients, uint256[] _value) public onlyOwner returns (bool success) {\n        for(uint i = 0; i < recipients.length; i++) {\n            transferFrom(owner, recipients[i], _value[i]);\n        }\n        return true;\n    }    \n   \n    function mint(uint256 _value) private returns (bool success) {\n        require(_value > 0);\n        balances[msg.sender] = balances[msg.sender] + _value;\n        totalSupply = totalSupply + _value;\n        emit Mint(msg.sender, _value);\n        return true;\n    }\n    \n    /*\n    function burn(uint256 _value) public onlyOwner returns (bool success) {\n        require(balances[msg.sender] >= _value);\n        balances[msg.sender] -= _value;\n        totalSupply -= _value;\n        emit Burn(msg.sender, _value);\n        return true;\n    }\n\n    function burnFrom(address _from, uint256 _value) public onlyOwner returns (bool success) {\n        require(balances[_from] >= _value);\n        balances[_from] -= _value;\n        totalSupply -= _value;\n        emit Burn(_from, _value);\n        return true;\n    }    \n    */\n  \n    /* private functions */\n    function createToken(uint256 _value) private returns (bool success) {\n        // require(_value > 0);\n        // uint256 tokens = rate * _value * 10 ** uint(decimals) / (1 ether);\n        uint256 tokens = rate * _value * 100 / (1 ether);\n        mint(tokens);\n        emit CreateToken(msg.sender, _value);\n        return true;\n    }\n\n     /* @notice Will receive any eth sent to the contract */\n    function() external payable {\n        if(allow_buy) {\n            createToken(msg.value);\n        } else {\n            revert(); // Reject any accidental Ether transfer\n        }\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"distribute\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allow_buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setAllowBuy\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"allow_buy\",\"type\":\"bool\"}],\"name\":\"SetAllowBuy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"SetRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"CreateToken\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b50622625a06003556040805180820190915260088082527f42534f6e64657273000000000000000000000000000000000000000000000000602090920191825261005c916000916100ed565b506040805180820190915260038082527f42534f000000000000000000000000000000000000000000000000000000000060209092019182526100a1916001916100ed565b506002805460ff19908116821790915560be6005556003543360008181526007602052604090209190915560048054600160a060020a0319169091179055600680549091169055610188565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012e57805160ff191683800117855561015b565b8280016001018555821561015b579182015b8281111561015b578251825591602001919060010190610140565b5061016792915061016b565b5090565b61018591905b808211156101675760008155600101610171565b90565b610881806101976000396000f3006080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100e557806313af40351461016f57806318160ddd146101a45780632929abe6146101cb5780632c4e722e14610259578063313ce5671461026e57806334fcf4371461029957806370a08231146102b15780638da5cb5b146102d257806395d89b41146103035780639b174fc414610318578063a9059cbb1461032d578063d604683614610351575b60065460ff16156100de576100d83461036b565b506100e3565b600080fd5b005b3480156100f157600080fd5b506100fa6103d4565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013457818101518382015260200161011c565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017b57600080fd5b50610190600160a060020a0360043516610462565b604080519115158252519081900360200190f35b3480156101b057600080fd5b506101b96104d8565b60408051918252519081900360200190f35b3480156101d757600080fd5b506040805160206004803580820135838102808601850190965280855261019095369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506104de9650505050505050565b34801561026557600080fd5b506101b9610560565b34801561027a57600080fd5b50610283610566565b6040805160ff9092168252519081900360200190f35b3480156102a557600080fd5b5061019060043561056f565b3480156102bd57600080fd5b506101b9600160a060020a03600435166105c9565b3480156102de57600080fd5b506102e76105e4565b60408051600160a060020a039092168252519081900360200190f35b34801561030f57600080fd5b506100fa6105f3565b34801561032457600080fd5b5061019061064d565b34801561033957600080fd5b50610190600160a060020a0360043516602435610656565b34801561035d57600080fd5b5061019060043515156106f0565b600080670de0b6b3a7640000836005540260640281151561038857fe5b04905061039481610756565b5060408051848152905133917fb378e89b40ac5bbe0e2241b596fbe1adc3cf1fb7c982aa1b4560165cf264ee93919081900360200190a250600192915050565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561045a5780601f1061042f5761010080835404028352916020019161045a565b820191906000526020600020905b81548152906001019060200180831161043d57829003601f168201915b505050505081565b600454600090600160a060020a0316331461047c57600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384169081179091556040517f167d3e9c1016ab80e58802ca9da10ce5c6a0f4debc46a2e7a2cd9e56899a4fb590600090a2506001919050565b60035481565b6004546000908190600160a060020a031633146104fa57600080fd5b5060005b835181101561055657600454845161054d91600160a060020a03169086908490811061052657fe5b90602001906020020151858481518110151561053e57fe5b906020019060200201516107be565b506001016104fe565b5060019392505050565b60055481565b60025460ff1681565b600454600090600160a060020a0316331461058957600080fd5b60058290556040805183815290517f2640b4015d3473fd09bf2b30939e17deb4068cdacf3892136e737e166ceb32109181900360200190a1506001919050565b600160a060020a031660009081526007602052604090205490565b600454600160a060020a031681565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561045a5780601f1061042f5761010080835404028352916020019161045a565b60065460ff1681565b60006040604436101561066557fe5b3360009081526007602052604090205483111561068157600080fd5b33600081815260076020908152604080832080548890039055600160a060020a03881680845292819020805488019055805187815290519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b600454600090600160a060020a0316331461070a57600080fd5b6006805483151560ff19909116811790915560408051918252517fbe1ddf55c5b4985874f8b283eb5b26718f811e7d29b3dc645c1e34ac3c6a38f59181900360200190a1506001919050565b600080821161076457600080fd5b336000818152600760209081526040918290208054860190556003805486019055815185815291517f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859281900390910190a2506001919050565b600160a060020a0383166000908152600760205260408120548211156107e357600080fd5b600160a060020a038084166000818152600760209081526040808320805488019055938816808352918490208054879003905583518681529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600193925050505600a165627a7a72305820fcb42a4dcef71c1ed2c714a14a9306e16e247328f68b2641a603970f6460292b0029"
}