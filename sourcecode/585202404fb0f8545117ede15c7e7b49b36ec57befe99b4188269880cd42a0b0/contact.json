{
  "address": "0x6b92d76c9d0d40e53019ffa51b6f0c9b6bc657c9",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "ETHUToken",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-08\n*/\n\npragma solidity ^0.4.19;\n\n\n/**\n * Math operations with safety checks\n */\nlibrary SafeMath {\n  function mul(uint a, uint b) internal returns (uint) {\n    uint c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint a, uint b) internal returns (uint) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint a, uint b) internal returns (uint) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint a, uint b) internal returns (uint) {\n    uint c = a + b;\n    assert(c >= a);\n    return c;\n  }\n\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\n    return a >= b ? a : b;\n  }\n\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\n    return a < b ? a : b;\n  }\n\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\n    return a >= b ? a : b;\n  }\n\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\n    return a < b ? a : b;\n  }\n\n  function assert(bool assertion) internal {\n    if (!assertion) {\n      throw;\n    }\n  }\n}\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20Basic {\n  uint public totalSupply;\n  function balanceOf(address who) constant returns (uint);\n  function transfer(address to, uint value);\n  event Transfer(address indexed from, address indexed to, uint value);\n}\n\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint;\n\n  mapping(address => uint) balances;\n\n  /**\n   * @dev Fix for the ERC20 short address attack.\n   */\n  modifier onlyPayloadSize(uint size) {\n     if(msg.data.length < size + 4) {\n       throw;\n     }\n     _;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {\n    if (_to == address(0)) {\n      throw;\n    }\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(msg.sender, _to, _value);\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) constant returns (uint balance) {\n    return balances[_owner];\n  }\n}\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) constant returns (uint);\n  function transferFrom(address from, address to, uint value);\n  function approve(address spender, uint value);\n  event Approval(address indexed owner, address indexed spender, uint value);\n}\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implemantation of the basic standart token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is BasicToken, ERC20 {\n\n  mapping (address => mapping (address => uint)) allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint the amout of tokens to be transfered\n   */\n  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {\n    var _allowance = allowed[_from][msg.sender];\n\n    if(_to == address(0)) {\n      throw; \n    }\n    \n    // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n    // if (_value > _allowance) throw;\n\n    balances[_to] = balances[_to].add(_value);\n    balances[_from] = balances[_from].sub(_value);\n    allowed[_from][msg.sender] = _allowance.sub(_value);\n    Transfer(_from, _to, _value);\n  }\n\n  /**\n   * @dev Aprove the passed address to spend the specified amount of tokens on beahlf of msg.sender.\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint _value) {\n\n    // To change the approve amount you first have to reduce the addresses`\n    //  allowance to zero by calling `approve(_spender, 0)` if it is not\n    //  already 0 to mitigate the race condition described here:\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;\n\n    allowed[msg.sender][_spender] = _value;\n    Approval(msg.sender, _spender, _value);\n  }\n\n  /**\n   * @dev Function to check the amount of tokens than an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint specifing the amount of tokens still avaible for the spender.\n   */\n  function allowance(address _owner, address _spender) constant returns (uint remaining) {\n    return allowed[_owner][_spender];\n  }\n\n}\n\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    if (msg.sender != owner) {\n      throw;\n    }\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner {\n    if (newOwner != address(0)) {\n      owner = newOwner;\n    }\n  }\n}\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev modifier to allow actions only when the contract IS paused\n   */\n  modifier whenNotPaused() {\n    if (paused) throw;\n    _;\n  }\n\n  /**\n   * @dev modifier to allow actions only when the contract IS NOT paused\n   */\n  modifier whenPaused {\n    if (!paused) throw;\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused returns (bool) {\n    paused = true;\n    Pause();\n    return true;\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused returns (bool) {\n    paused = false;\n    Unpause();\n    return true;\n  }\n}\n\n\n/**\n * Pausable token\n *\n * Simple ERC20 Token example, with pausable token creation\n **/\n\ncontract PausableToken is StandardToken, Pausable {\n\n  function transfer(address _to, uint _value) whenNotPaused {\n    super.transfer(_to, _value);\n  }\n\n  function transferFrom(address _from, address _to, uint _value) whenNotPaused {\n    super.transferFrom(_from, _to, _value);\n  }\n}\n\n\n/**\n * @title Equipment Token\n * @dev Equipment Token contract\n */\ncontract ETHUToken is PausableToken {\n  using SafeMath for uint256;\n\n  string public name = \"Ethereum Utility\";\n  string public symbol = \"ETHU\";\n  uint public decimals = 8;\n  uint public totalSupply = 2*10**18;\n  \n    function ETHUToken() {\n        balances[msg.sender] = totalSupply;\n        Transfer(address(0), msg.sender, totalSupply);\n    }\n    \n    /**\n     * @dev Function is used to perform a multi-transfer operation. This could play a significant role in the Ammbr Mesh Routing protocol.\n     *  \n     * Mechanics:\n     * Sends tokens from Sender to destinations[0..n] the amount tokens[0..n]. Both arrays\n     * must have the same size, and must have a greater-than-zero length. Max array size is 127.\n     * \n     * IMPORTANT: ANTIPATTERN\n     * This function performs a loop over arrays. Unless executed in a controlled environment,\n     * it has the potential of failing due to gas running out. This is not dangerous, yet care\n     * must be taken to prevent quality being affected.\n     * \n     * @param destinations An array of destinations we would be sending tokens to\n     * @param tokens An array of tokens, sent to destinations (index is used for destination->token match)\n     */\n    function multiTransfer(address[] destinations, uint[] tokens) public returns (bool success){\n        // Two variables must match in length, and must contain elements\n        // Plus, a maximum of 127 transfers are supported\n        assert(destinations.length > 0);\n        assert(destinations.length < 128);\n        assert(destinations.length == tokens.length);\n        \n        // Check total requested balance\n        uint8 i = 0;\n        uint totalTokensToTransfer = 0;\n        for (i = 0; i < destinations.length; i++){\n            assert(tokens[i] > 0);\n            totalTokensToTransfer = totalTokensToTransfer.add(tokens[i]);\n        }\n        \n        // We have enough tokens, execute the transfer\n        balances[msg.sender] = balances[msg.sender].sub(totalTokensToTransfer);\n        for (i = 0; i < destinations.length; i++){\n            // Add the token to the intended destination\n            balances[destinations[i]] = balances[destinations[i]].add(tokens[i]);\n            // Call the event...\n            emit Transfer(msg.sender, destinations[i], tokens[i]);\n        }\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"destinations\",\"type\":\"address[]\"},{\"name\":\"tokens\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "6003805460a060020a60ff021916905560c0604052601060808190527f457468657265756d205574696c6974790000000000000000000000000000000060a090815261004e9160049190610116565b506040805180820190915260048082527f4554485500000000000000000000000000000000000000000000000000000000602090920191825261009391600591610116565b506008600655671bc16d674ec800006007553480156100b157600080fd5b5060038054600160a060020a03191633908117909155600754600082815260016020908152604080832084905580519384525191927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36101b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015757805160ff1916838001178555610184565b82800160010185558215610184579182015b82811115610184578251825591602001919060010190610169565b50610190929150610194565b5090565b6101ae91905b80821115610190576000815560010161019a565b90565b610bb2806101c06000396000f3006080604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df578063095ea7b31461016957806318160ddd1461018f5780631e89d545146101b657806323b872dd14610258578063313ce567146102825780633f4ba83a146102975780635c975abb146102ac57806370a08231146102c15780638456cb59146102e25780638da5cb5b146102f757806395d89b4114610328578063a9059cbb1461033d578063dd62ed3e14610361578063f2fde38b14610388575b600080fd5b3480156100eb57600080fd5b506100f46103a9565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012e578181015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017557600080fd5b5061018d600160a060020a0360043516602435610437565b005b34801561019b57600080fd5b506101a46104d4565b60408051918252519081900360200190f35b3480156101c257600080fd5b506040805160206004803580820135838102808601850190965280855261024495369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506104da9650505050505050565b604080519115158252519081900360200190f35b34801561026457600080fd5b5061018d600160a060020a03600435811690602435166044356106e1565b34801561028e57600080fd5b506101a4610708565b3480156102a357600080fd5b5061024461070e565b3480156102b857600080fd5b5061024461078d565b3480156102cd57600080fd5b506101a4600160a060020a036004351661079d565b3480156102ee57600080fd5b506102446107b8565b34801561030357600080fd5b5061030c61083c565b60408051600160a060020a039092168252519081900360200190f35b34801561033457600080fd5b506100f461084b565b34801561034957600080fd5b5061018d600160a060020a03600435166024356108a6565b34801561036d57600080fd5b506101a4600160a060020a03600435811690602435166108cb565b34801561039457600080fd5b5061018d600160a060020a03600435166108f6565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b505050505081565b80158015906104685750336000908152600260209081526040808320600160a060020a038616845290915290205415155b1561047257600080fd5b336000818152600260209081526040808320600160a060020a03871680855290835292819020859055805185815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b60075481565b60008060008085511115156104eb57fe5b84516080116104f657fe5b835185511461050157fe5b5060009050805b84518260ff161015610570576000848360ff1681518110151561052757fe5b602090810290910101511161053857fe5b610563848360ff1681518110151561054c57fe5b60209081029091010151829063ffffffff61094816565b6001909201919050610508565b33600090815260016020526040902054610590908263ffffffff61096016565b3360009081526001602052604081209190915591505b84518260ff1610156106d657610614848360ff168151811015156105c657fe5b9060200190602002015160016000888660ff168151811015156105e557fe5b6020908102909101810151600160a060020a03168252810191909152604001600020549063ffffffff61094816565b60016000878560ff1681518110151561062957fe5b6020908102909101810151600160a060020a03168252810191909152604001600020558451859060ff841690811061065d57fe5b90602001906020020151600160a060020a031633600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef868560ff168151811015156106ac57fe5b906020019060200201516040518082815260200191505060405180910390a36001909101906105a6565b506001949350505050565b60035460a060020a900460ff16156106f857600080fd5b610703838383610974565b505050565b60065481565b600354600090600160a060020a0316331461072857600080fd5b60035460a060020a900460ff16151561074057600080fd5b6003805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a150600190565b60035460a060020a900460ff1681565b600160a060020a031660009081526001602052604090205490565b600354600090600160a060020a031633146107d257600080fd5b60035460a060020a900460ff16156107e957600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a150600190565b600354600160a060020a031681565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561042f5780601f106104045761010080835404028352916020019161042f565b60035460a060020a900460ff16156108bd57600080fd5b6108c78282610aa9565b5050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a0316331461090d57600080fd5b600160a060020a03811615610945576003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b600082820161095984821015610b7a565b9392505050565b600061096e83831115610b7a565b50900390565b60006060606436101561098657600080fd5b600160a060020a0380861660009081526002602090815260408083203384529091529020549250841615156109ba57600080fd5b600160a060020a0384166000908152600160205260409020546109e3908463ffffffff61094816565b600160a060020a038086166000908152600160205260408082209390935590871681522054610a18908463ffffffff61096016565b600160a060020a038616600090815260016020526040902055610a41828463ffffffff61096016565b600160a060020a03808716600081815260026020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35050505050565b60406044361015610ab957600080fd5b600160a060020a0383161515610ace57600080fd5b33600090815260016020526040902054610aee908363ffffffff61096016565b3360009081526001602052604080822092909255600160a060020a03851681522054610b20908363ffffffff61094816565b600160a060020a0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050565b80151561094557600080fd00a165627a7a723058203e9d1fb3713d41d54fd93e05d4b3c8deb3847171ce88ddc8ffc0fb319a427c630029"
}