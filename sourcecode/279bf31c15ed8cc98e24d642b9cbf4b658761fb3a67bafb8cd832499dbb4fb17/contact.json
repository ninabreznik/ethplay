{
  "address": "0x688dde13bd594a9030feefe6fa39cb353b7351c7",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CVEN",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-04\n*/\n\npragma solidity 0.4.25;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a / b;\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract ERC20 {\n    \n  function totalSupply()public view returns (uint256 total_Supply);\n  function balanceOf(address who)public view returns (uint256);\n  function allowance(address owner, address spender)public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value)public returns (bool ok);\n  function approve(address spender, uint256 value)public returns (bool ok);\n  function transfer(address to, uint256 value)public returns (bool ok);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n//--- Upgraded tokens must extend UpgradeAgent ----//\ncontract UpgradeAgent {\n  address public oldAddress;\n  function isUpgradeAgent() public pure returns (bool) {\n    return true;\n  }\n  function upgradeFrom(address _from, uint256 _value) public;\n}\n\ncontract CVEN is ERC20 { \n    using SafeMath for uint256;\n    //--- Token configurations ----// \n    string public constant name = \"Concordia Ventures Stablecoin\";\n    string public constant symbol = \"CVEN\";\n    uint8 public constant decimals = 18;\n    \n    //--- Token allocations -------//\n    uint256 public _totalsupply;\n    uint256 public mintedTokens;\n    uint256 public totalUpgraded;\n\n    //--- Address -----------------//\n    address public owner;\n    address public ethFundMain;\n    UpgradeAgent public upgradeAgent;\n    \n    //--- Variables ---------------//\n    bool public lockstatus = false;\n    bool public stopped = false;\n    \n    mapping(address => uint256) public balances;\n    mapping(address => mapping(address => uint256)) public allowed;\n    mapping(address => bool) public locked;\n    event Mint(address indexed from, address indexed to, uint256 amount);\n    event Burn(address indexed from, uint256 amount);\n    event Upgrade(address indexed _from, address indexed _to, uint256 _value);\n    event UpgradeAgentSet(address agent);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner is allowed\");\n        _;\n    }\n\n    constructor() public\n    {\n        owner = msg.sender;\n        ethFundMain = 0x657Eb3CE439CA61e58FF6Cb106df2e962C5e7890;\n    }\n\n    function totalSupply() public view returns (uint256 total_Supply) {\n        total_Supply = _totalsupply;\n    }\n    \n    function balanceOf(address _owner)public view returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function transfer(address _to, uint256 _amount)public returns (bool success) {\n        require(!lockstatus, \"Token is locked now\");\n        require( _to != 0x0, \"Receiver can not be 0x0\");\n        require(balances[msg.sender] >= _amount, \"Balance does not have enough tokens\");\n        require(!locked[msg.sender], \"Sender address is locked\");\n        balances[msg.sender] = (balances[msg.sender]).sub(_amount);\n        balances[_to] = (balances[_to]).add(_amount);\n        emit Transfer(msg.sender, _to, _amount);\n        return true;\n    }\n\n    function transferFrom( address _from, address _to, uint256 _amount ) public returns (bool success)  {\n        require( _to != 0x0, \"Receiver can not be 0x0\");\n        require(!lockstatus, \"Token is locked now\");\n        require(balances[_from] >= _amount, \"Source balance is not enough\");\n        require(allowed[_from][msg.sender] >= _amount, \"Allowance is not enough\");\n        require(!locked[_from], \"From address is locked\");\n        balances[_from] = (balances[_from]).sub(_amount);\n        allowed[_from][msg.sender] = (allowed[_from][msg.sender]).sub(_amount);\n        balances[_to] = (balances[_to]).add(_amount);\n        emit Transfer(_from, _to, _amount);\n        return true;\n    }\n    \n    function approve(address _spender, uint256 _amount)public returns (bool success)  {\n        require(!lockstatus, \"Token is locked now\");\n        require( _spender != 0x0, \"Address can not be 0x0\");\n        require(balances[msg.sender] >= _amount, \"Balance does not have enough tokens\");\n        require(!locked[msg.sender], \"Sender address is locked\");\n        allowed[msg.sender][_spender] = _amount;\n        emit Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n  \n    function allowance(address _owner, address _spender)public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    function burn(uint256 _value) public returns (bool success) {\n        require(balances[msg.sender] >= _value, \"Balance does not have enough tokens\");\n        require(!locked[msg.sender], \"Sender address is locked\");   \n        balances[msg.sender] = (balances[msg.sender]).sub(_value);            \n        _totalsupply = _totalsupply.sub(_value);                     \n        emit Burn(msg.sender, _value);\n        return true;\n    }\n\n    function burnFrom(address from, uint256 _value) public returns (bool success) {\n        require(balances[from] >= _value, \"Source balance does not have enough tokens\");\n        require(allowed[from][msg.sender] >= _value, \"Source balance does not have enough tokens\");\n        require(!locked[from], \"Source address is locked\");   \n        balances[from] = (balances[from]).sub(_value);\n        allowed[from][msg.sender] = (allowed[from][msg.sender]).sub(_value);            \n        _totalsupply = _totalsupply.sub(_value);                     \n        emit Burn(from, _value);\n        return true;\n    }\n\n    function stopTransferToken() external onlyOwner {\n        require(!lockstatus, \"Token is locked\");\n        lockstatus = true;\n    }\n\n    function startTransferToken() external onlyOwner {\n        require(lockstatus, \"Token is transferable\");\n        lockstatus = false;\n    }\n\n    function () public payable {\n        require(!stopped, \"CrowdSale is stopping\");\n        mint(this, msg.sender, msg.value);\n    }\n\n    function manualMint(address receiver, uint256 _value) public onlyOwner{\n        require(!stopped, \"CrowdSale is stopping\");\n        mint(owner, receiver, _value);\n    }\n\n    function mint(address from, address receiver, uint256 value) internal {\n        require(receiver != 0x0, \"Address can not be 0x0\");\n        require(value > 0, \"Value should larger than 0\");\n        balances[receiver] = balances[receiver].add(value);\n        _totalsupply = _totalsupply.add(value);\n        mintedTokens = mintedTokens.add(value);\n        emit Mint(from, receiver, value);\n        emit Transfer(0, receiver, value);\n    }\n    \n    function haltMintToken() external onlyOwner {\n        require(!stopped, \"Minting is stopping\");\n        stopped = true;\n    }\n\n    function resumeMintToken() external onlyOwner {\n        require(stopped, \"Minting is running\");\n        stopped = false;\n    }\n\n    function changeReceiveWallet(address newAddress) external onlyOwner {\n        require(newAddress != 0x0, \"Address can not be 0x0\");\n        ethFundMain = newAddress;\n    }\n\n\tfunction assignOwnership(address newOwner) external onlyOwner {\n\t    require(newOwner != 0x0, \"Address can not be 0x0\");\n\t    balances[newOwner] = (balances[newOwner]).add(balances[owner]);\n\t    balances[owner] = 0;\n\t    owner = newOwner;\n\t    emit Transfer(msg.sender, newOwner, balances[newOwner]);\n\t}\n\n    function forwardFunds() external onlyOwner { \n        address myAddress = this;\n        ethFundMain.transfer(myAddress.balance);\n    }\n\n    function withdrawTokens() external onlyOwner {\n        uint256 value = balances[this];\n        balances[owner] = (balances[owner]).add(value);\n        balances[this] = 0;\n        emit Transfer(this, owner, value);\n    }\n\n    function haltTokenTransferFromAddress(address investor) external onlyOwner {\n        locked[investor] = true;\n    }\n\n    function resumeTokenTransferFromAddress(address investor) external onlyOwner {\n        locked[investor] = false;\n    }\n\n    function setUpgradeAgent(address agent) external onlyOwner{\n        require(agent != 0x0, \"Upgrade agent can not be zero\");\n        require(totalUpgraded == 0, \"Token are upgrading\");\n        upgradeAgent = UpgradeAgent(agent);\n        require(upgradeAgent.isUpgradeAgent(), \"The address is not upgrade agent\");\n        require(upgradeAgent.oldAddress() == address(this), \"This is not right agent\");\n        emit UpgradeAgentSet(upgradeAgent);\n    }\n\n    function upgrade(uint256 value) public {\n        require (value != 0, \"Value can not be zero\");\n        require(balances[msg.sender] >= value, \"Balance is not enough\");\n        require(address(upgradeAgent) != 0x0, \"Upgrade agent is not set\");\n        balances[msg.sender] = (balances[msg.sender]).sub(value);\n        _totalsupply = _totalsupply.sub(value);\n        totalUpgraded = totalUpgraded.add(value);\n        upgradeAgent.upgradeFrom(msg.sender, value);\n        emit Upgrade(msg.sender, upgradeAgent, value);\n        emit Transfer(msg.sender, 0, value);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total_Supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"haltTokenTransferFromAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradeAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethFundMain\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startTransferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"resumeTokenTransferFromAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"forwardFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalsupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"haltMintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resumeMintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"changeReceiveWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalUpgraded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"locked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopTransferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"setUpgradeAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"assignOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"manualMint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockstatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"UpgradeAgentSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": ""
}