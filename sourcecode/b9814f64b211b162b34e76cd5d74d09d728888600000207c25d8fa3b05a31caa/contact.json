{
  "address": "0xf0c53b261a0a8f46795a9f809eaaadae9778842b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CrryptoWallet",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-15\n*/\n\npragma solidity ^0.4.25;\n\n/*\n* CryptoMiningWar - Blockchain-based strategy game\n* Author: InspiGames\n* Website: https://cryptominingwar.github.io/\n*/\n\nlibrary SafeMath {\n\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    /**\n    * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\ninterface MiniGameInterface {\n    function isContractMiniGame() external pure returns( bool /*_isContractMiniGame*/ );\n    function getCurrentReward(address /*_addr*/) external pure returns( uint256 /*_currentReward*/ );\n    function withdrawReward(address /*_addr*/) external;\n    function fallback() external payable;\n}\ncontract CrryptoWallet {\n\tusing SafeMath for uint256;\n\n\taddress public administrator;\n    uint256 public totalContractMiniGame = 0;\n\n    mapping(address => bool)   public miniGames; \n    mapping(uint256 => address) public miniGameAddress;\n\n    modifier onlyContractsMiniGame() \n    {\n        require(miniGames[msg.sender] == true);\n        _;\n    }\n    event Withdraw(address _addr, uint256 _eth);\n\n    constructor() public {\n        administrator = msg.sender;\n    }\n    function () public payable\n    {\n        \n    }\n    /** \n    * @dev MainContract used this function to verify game's contract\n    */\n    function isContractMiniGame() public pure returns( bool _isContractMiniGame )\n    {\n    \t_isContractMiniGame = true;\n    }\n    function isWalletContract() public pure returns(bool)\n    {\n        return true;\n    }\n    function upgrade(address addr) public \n    {\n        require(administrator == msg.sender);\n\n        selfdestruct(addr);\n    }\n    /** \n    * @dev Main Contract call this function to setup mini game.\n    */\n    function setupMiniGame( uint256 /*_miningWarRoundNumber*/, uint256 /*_miningWarDeadline*/) public\n    {\n    }\n    //--------------------------------------------------------------------------\n    // SETTING CONTRACT MINI GAME \n    //--------------------------------------------------------------------------\n    function setContractsMiniGame( address _addr ) public  \n    {\n        require(administrator == msg.sender);\n\n        MiniGameInterface MiniGame = MiniGameInterface( _addr );\n\n        if ( miniGames[_addr] == false ) {\n            miniGames[_addr] = true;\n            miniGameAddress[totalContractMiniGame] = _addr;\n            totalContractMiniGame = totalContractMiniGame + 1;\n        }\n    }\n    /**\n    * @dev remove mini game contract from main contract\n    * @param _addr mini game contract address\n    */\n    function removeContractMiniGame(address _addr) public \n    {\n        require(administrator == msg.sender);\n\n        miniGames[_addr] = false;\n    }\n   \n    \n    // --------------------------------------------------------------------------------------------------------------\n    // CALL FUNCTION\n    // --------------------------------------------------------------------------------------------------------------\n    function getCurrentReward(address _addr) public view returns(uint256 _currentReward)\n    {\n        for(uint256 idx = 0; idx < totalContractMiniGame; idx++) {\n            if (miniGames[miniGameAddress[idx]] == true) {\n                MiniGameInterface MiniGame = MiniGameInterface(miniGameAddress[idx]);\n                _currentReward += MiniGame.getCurrentReward(_addr);\n            }\n        }\n    }\n\n    function withdrawReward() public \n    {\n        for(uint256 idx = 0; idx < totalContractMiniGame; idx++) {\n            if (miniGames[miniGameAddress[idx]] == true) {\n                MiniGameInterface MiniGame = MiniGameInterface(miniGameAddress[idx]);\n                MiniGame.withdrawReward(msg.sender);\n            }\n        }\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isContractMiniGame\",\"outputs\":[{\"name\":\"_isContractMiniGame\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isWalletContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getCurrentReward\",\"outputs\":[{\"name\":\"_currentReward\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContractMiniGame\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setContractsMiniGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"miniGameAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeContractMiniGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"miniGames\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setupMiniGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"administrator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_eth\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]",
  "bytecode": "6080604052600060015534801561001557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a8e806100656000396000f3006080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630900f010146100bc5780633281d576146100ff578063488a24c61461012e5780634d307e3f1461015d5780636a76c522146101b457806384ffcb5d146101df57806391ab1e0e146102225780639ff12bba1461028f578063b239dac6146102d2578063be7ccd7e1461032d578063c885bc5814610364578063f53d0a8e1461037b575b005b3480156100c857600080fd5b506100fd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103d2565b005b34801561010b57600080fd5b50610114610446565b604051808215151515815260200191505060405180910390f35b34801561013a57600080fd5b5061014361044f565b604051808215151515815260200191505060405180910390f35b34801561016957600080fd5b5061019e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610458565b6040518082815260200191505060405180910390f35b3480156101c057600080fd5b506101c961061c565b6040518082815260200191505060405180910390f35b3480156101eb57600080fd5b50610220600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610622565b005b34801561022e57600080fd5b5061024d60048036038101908080359060200190929190505050610797565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029b57600080fd5b506102d0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ca565b005b3480156102de57600080fd5b50610313600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610880565b604051808215151515815260200191505060405180910390f35b34801561033957600080fd5b5061036260048036038101908080359060200190929190803590602001909291905050506108a0565b005b34801561037057600080fd5b506103796108a4565b005b34801561038757600080fd5b50610390610a3d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561042d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60006001905090565b60006001905090565b60008060008091505b6001548210156106155760011515600260006003600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610608576003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16634d307e3f856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156105c857600080fd5b505af11580156105dc573d6000803e3d6000fd5b505050506040513d60208110156105f257600080fd5b8101908080519060200190929190505050830192505b8180600101925050610461565b5050919050565b60015481565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561067f57600080fd5b81905060001515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610793576001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508160036000600154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018054016001819055505b5050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561082557600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60026020528060005260406000206000915054906101000a900460ff1681565b5050565b600080600091505b600154821015610a395760011515600260006003600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610a2c576003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b86e321c336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610a1357600080fd5b505af1158015610a27573d6000803e3d6000fd5b505050505b81806001019250506108ac565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058202a8ad61817ceca369a53316435de4b48362866ac54dc438499293ecfe87fc8d90029"
}