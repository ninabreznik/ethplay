{
  "address": "0xdcd85914b8ae28c1e62f1c488e1d968d5aaffe2b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "TOP Network Token",
  "contractName": "TOPToken",
  "compilerVersion": "v0.5.6+commit.b259423e",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-20\n*/\n\npragma solidity ^0.5.6;\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  uint256 public totalSupply = 2e28;\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract TOPToken is ERC20Basic {\n  bytes32 public name = \"TOP Network\";\n  bytes32 public symbol = \"TOP\";\n  uint256 public decimals = 18;\n  address private owner = address(0);\n  bool private active = false;\n\n  mapping(address => uint256) private balances;\n\n  event OwnershipTransferred(address indexed orgOwner, address indexed newOwner);\n\n  constructor() public {\n    owner = msg.sender;\n    balances[owner] = totalSupply;\n    active = true;\n  }\n\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(active);\n    require(_to != address(0));\n    require(_to != msg.sender);\n    require(_value <= balances[msg.sender]);\n\n    uint256 bal = balances[_to] + _value;\n    require(bal >= balances[_to]);\n\n    balances[msg.sender] = balances[msg.sender] - _value;\n    balances[_to] = bal;\n\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256 bal) {\n    require(active);\n    return balances[_owner];\n  }\n\n  // Only owner can deactivate\n  function deactivate() public onlyOwner {\n    active = false;\n  }\n\n  // Only owner can activate\n  function activate() public onlyOwner {\n    active = true;\n  }\n\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n  // Only owner can kill\n  function kill() public onlyOwner {\n    require(!active);\n    selfdestruct(msg.sender);\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"activate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deactivate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"bal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"orgOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60806040526b409f9cbc7c4a04c2200000006000557f544f50204e6574776f726b0000000000000000000000000000000000000000006001557f544f5000000000000000000000000000000000000000000000000000000000006002556012600355600480546001600160a81b031916905534801561007d57600080fd5b50600480546001600160a01b0319163317808255600080546001600160a01b03929092168152600560205260409020558054600160a01b60ff021916740100000000000000000000000000000000000000001790556103f6806100e16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806351b42b001161006657806351b42b00146100df57806370a08231146100e757806395d89b411461010d578063a9059cbb14610115578063f2fde38b146101555761009e565b806306fdde03146100a35780630f15f4c0146100bd57806318160ddd146100c7578063313ce567146100cf57806341c0e1b5146100d7575b600080fd5b6100ab61017b565b60408051918252519081900360200190f35b6100c5610181565b005b6100ab6101b0565b6100ab6101b6565b6100c56101bc565b6100c56101ed565b6100ab600480360360208110156100fd57600080fd5b50356001600160a01b0316610216565b6100ab61024b565b6101416004803603604081101561012b57600080fd5b506001600160a01b038135169060200135610251565b604080519115158252519081900360200190f35b6100c56004803603602081101561016b57600080fd5b50356001600160a01b0316610344565b60015481565b6004546001600160a01b0316331461019857600080fd5b60048054600160a01b60ff021916600160a01b179055565b60005481565b60035481565b6004546001600160a01b031633146101d357600080fd5b600454600160a01b900460ff16156101ea57600080fd5b33ff5b6004546001600160a01b0316331461020457600080fd5b60048054600160a01b60ff0219169055565b600454600090600160a01b900460ff1661022f57600080fd5b506001600160a01b031660009081526005602052604090205490565b60025481565b600454600090600160a01b900460ff1661026a57600080fd5b6001600160a01b03831661027d57600080fd5b6001600160a01b03831633141561029357600080fd5b336000908152600560205260409020548211156102af57600080fd5b6001600160a01b038316600090815260056020526040902054808301908110156102d857600080fd5b336000818152600560209081526040808320805488900390556001600160a01b03881680845292819020859055805187815290519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b6004546001600160a01b0316331461035b57600080fd5b6001600160a01b03811661036e57600080fd5b6004546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600480546001600160a01b0319166001600160a01b039290921691909117905556fea165627a7a7230582072f11bf2397891e0fd3ce70c1a473187504c3f307c969b1b227eb0cd647dca610029"
}