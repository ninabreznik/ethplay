{
  "address": "0xb363a3c584b1f379c79fbf09df015da5529d4dac",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "MiracleTeleToken",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-04-10\n*/\n\npragma solidity ^0.4.16;\n\ncontract Owned {\n\taddress public owner;\n\taddress public signer;\n\n    function Owned() public {\n    \towner = msg.sender;\n    \tsigner = msg.sender;\n    }\n\n    modifier onlyOwner {\n    \trequire(msg.sender == owner);\n        _;\n    }\n\n\tmodifier onlySigner {\n    \trequire(msg.sender == signer);\n        _;\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n    \towner = newOwner;\n\t}\n\n\tfunction transferSignership(address newSigner) public onlyOwner {\n        signer = newSigner;\n    }\n}\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n    function mul(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b)\n        internal\n        pure\n        returns (uint256)\n    {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n\ncontract ERC20Token {\n\n    // Public variables of the token\n    string public name;\n    string public symbol;\n    uint8 public decimals = 18;\n\n    uint256 public totalSupply;\n\n    // This creates an array with all balances\n    mapping (address => uint256) public balances;\n\n\t// Mapping for allowance\n    mapping (address => mapping (address => uint256)) public allowed;\n\n    // This generates a public event on the blockchain that will notify clients\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    // This generates a public event on the blockchain that will notify clients\n    event Approval(address indexed sender, address indexed spender, uint256 value);\n\n\tfunction ERC20Token(uint256 _supply, string _name, string _symbol)\n\t\tpublic\n\t{\n\t\t//initial mint\n        totalSupply = _supply * 10**uint256(decimals);\n        balances[msg.sender] = totalSupply;\n\n\t\t//set variables\n\t\tname=_name;\n\t\tsymbol=_symbol;\n\n    \t//trigger event\n        Transfer(0x0, msg.sender, totalSupply);\n\t}\n\n\t/**\n\t * Returns current tokens total supply\n\t */\n    function totalSupply()\n    \tpublic\n    \tconstant\n    \treturns (uint256)\n    {\n\t\treturn totalSupply;\n    }\n\n\t/**\n     * Get the token balance for account `tokenOwner`\n     */\n    function balanceOf(address _owner)\n    \tpublic\n    \tconstant\n    \treturns (uint256 balance)\n    {\n        return balances[_owner];\n    }\n\n\t/**\n     * Set allowance for other address\n     *\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf\n     *\n     * @param _spender The address authorized to spend\n     * @param _value the max amount they can spend\n     */\n    function approve(address _spender, uint256 _value)\n    \tpublic\n    \treturns (bool success)\n    {\n\t\t// To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\t\trequire((_value == 0) || (allowed[msg.sender][_spender] == 0));\n\n      \t//set allowance\n      \tallowed[msg.sender][_spender] = _value;\n\n\t\t//trigger event\n      \tApproval(msg.sender, _spender, _value);\n\n\t\treturn true;\n    }\n\n    /**\n     * Show allowance\n     */\n    function allowance(address _owner, address _spender)\n    \tpublic\n    \tconstant\n    \treturns (uint256 remaining)\n    {\n        return allowed[_owner][_spender];\n    }\n\n\t/**\n     * Internal transfer, only can be called by this contract\n     */\n    function _transfer(address _from, address _to, uint256 _value)\n    \tinternal\n    \treturns (bool success)\n    {\n\t\t// Do not allow transfer to 0x0 or the token contract itself or from address to itself\n\t\trequire((_to != address(0)) && (_to != address(this)) && (_to != _from));\n\n        // Check if the sender has enough\n        require((_value > 0) && (balances[_from] >= _value));\n\n        // Check for overflows\n        require(balances[_to] + _value > balances[_to]);\n\n        // Subtract from the sender\n        balances[_from] -= _value;\n\n        // Add the same to the recipient\n        balances[_to] += _value;\n\n        Transfer(_from, _to, _value);\n\n        return true;\n    }\n\n\t/**\n      * Transfer tokens\n      *\n      * Send `_value` tokens to `_to` from your account\n      *\n      * @param _to The address of the recipient\n      * @param _value the amount to send\n      */\n    function transfer(address _to, uint256 _value)\n    \tpublic\n    \treturns (bool success)\n    {\n    \treturn _transfer(msg.sender, _to, _value);\n    }\n\n  \t/**\n     * Transfer tokens from other address\n     *\n     * Send `_value` tokens to `_to` on behalf of `_from`\n     *\n     * @param _from The address of the sender\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transferFrom(address _from, address _to, uint256 _value)\n    \tpublic\n    \treturns (bool success)\n    {\n\t\t// Check allowance\n    \trequire(_value <= allowed[_from][msg.sender]);\n\n\t\t//decrement allowance\n\t\tallowed[_from][msg.sender] -= _value;\n\n    \t//transfer tokens\n        return _transfer(_from, _to, _value);\n    }\n}\n\n\n\ncontract MiracleTeleToken is ERC20Token, Owned {\n\n    using SafeMath for uint256;\n\n    // Mapping for allowance\n    mapping (address => uint8) public delegations;\n\n\tmapping (address => uint256) public contributions;\n\n    // This generates a public event on the blockchain that will notify clients\n    event Delegate(address indexed from, address indexed to);\n    event UnDelegate(address indexed from, address indexed to);\n\n    // This generates a public event on the blockchain that will notify clients\n    event Contribute(address indexed from, uint256 indexed value);\n    event Reward(address indexed from, uint256 indexed value);\n\n    /**\n\t * Initializes contract with initial supply tokens to the creator of the contract\n\t */\n    function MiracleTeleToken(uint256 _supply) ERC20Token(_supply, \"MiracleTele\", \"TELE\") public {}\n\n\t/**\n\t * Mint new tokens\n\t *\n\t * @param _value the amount of new tokens\n\t */\n    function mint(uint256 _value)\n        public\n        onlyOwner\n    {\n    \t// Prevent mine 0 tokens\n        require(_value > 0);\n\n    \t// Check overflow\n    \tbalances[owner] = balances[owner].add(_value);\n        totalSupply = totalSupply.add(_value);\n\n        Transfer(address(0), owner, _value);\n    }\n\n    function delegate(uint8 _v, bytes32 _r, bytes32 _s)\n        public\n        onlySigner\n    {\n\t\taddress allowes = ecrecover(getPrefixedHash(signer), _v, _r, _s);\n\n        delegations[allowes]=1;\n\n        Delegate(allowes, signer);\n    }\n\n\tfunction unDelegate(uint8 _v, bytes32 _r, bytes32 _s)\n        public\n        onlySigner\n    {\n    \taddress allowes = ecrecover(getPrefixedHash(signer), _v, _r, _s);\n\n        delegations[allowes]=0;\n\n        UnDelegate(allowes, signer);\n    }\n\n\t/**\n     * Show delegation\n     */\n    function delegation(address _owner)\n    \tpublic\n    \tconstant\n    \treturns (uint8 status)\n    {\n        return delegations[_owner];\n    }\n\n    /**\n     * @notice Hash a hash with `\"\\x19Ethereum Signed Message:\\n32\"`\n     * @param _message Data to ign\n     * @return signHash Hash to be signed.\n     */\n    function getPrefixedHash(address _message)\n        pure\n        public\n        returns(bytes32 signHash)\n    {\n        signHash = keccak256(\"\\x19Ethereum Signed Message:\\n20\", _message);\n    }\n\n    /**\n     * Transfer tokens from other address\n     *\n     * Send `_value` tokens to `_to` on behalf of `_from`\n     *\n     * @param _from The address of the sender\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transferDelegated(address _from, address _to, uint256 _value)\n        public\n        onlySigner\n        returns (bool success)\n    {\n        // Check delegate\n    \trequire(delegations[_from]==1);\n\n    \t//transfer tokens\n        return _transfer(_from, _to, _value);\n    }\n\n\t/**\n      * Contribute tokens from delegated address\n      *\n      * Contribute `_value` tokens `_from` address\n      *\n      * @param _from The address of the sender\n\t  * @param _value the amount to send\n      */\n    function contributeDelegated(address _from, uint256 _value)\n        public\n        onlySigner\n    {\n        // Check delegate\n    \trequire(delegations[_from]==1);\n\n        // Check if the sender has enough\n        require((_value > 0) && (balances[_from] >= _value));\n\n        // Subtract from the sender\n        balances[_from] = balances[_from].sub(_value);\n\n        contributions[_from] = contributions[_from].add(_value);\n\n        Contribute(_from, _value);\n    }\n\n\t/**\n      * Reward tokens from delegated address\n      *\n      * Reward `_value` tokens to `_from` address\n      *\n      * @param _from The address of the sender\n\t  * @param _value the amount to send\n      */\n    function reward(address _from, uint256 _value)\n        public\n        onlySigner\n    {\n        require(contributions[_from]>=_value);\n\n        contributions[_from] = contributions[_from].sub(_value);\n\n        balances[_from] = balances[_from].add(_value);\n\n        Reward(_from, _value);\n    }\n\n    /**\n     * Don't accept ETH, it is utility token\n     */\n\tfunction ()\n\t    public\n\t    payable\n\t{\n\t\trevert();\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"unDelegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"reward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"transferSignership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"contributeDelegated\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferDelegated\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_message\",\"type\":\"address\"}],\"name\":\"getPrefixedHash\",\"outputs\":[{\"name\":\"signHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delegation\",\"outputs\":[{\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Delegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"UnDelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Contribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Reward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526002805460ff1916601217905534156200001d57600080fd5b604051602080620011ca833981016040528080519150819050604080519081016040908152600b82527f4d697261636c6554656c6500000000000000000000000000000000000000000060208301528051908101604090815260048083527f54454c450000000000000000000000000000000000000000000000000000000060208085019190915260025460ff16600a0a86026003819055600160a060020a03331660009081529290915291812091909155828051620000e292916020019062000170565b506001818051620000f892916020019062000170565b5033600160a060020a031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60035460405190815260200160405180910390a3505060068054600160a060020a033316600160a060020a0319918216811790925560078054909116909117905550620002159050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001b357805160ff1916838001178555620001e3565b82800160010185558215620001e3579182015b82811115620001e3578251825591602001919060010190620001c6565b50620001f1929150620001f5565b5090565b6200021291905b80821115620001f15760008155600101620001fc565b90565b610fa580620002256000396000f3006060604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461014d578063090cebff146101d7578063095ea7b3146101f857806318160ddd1461022e57806321670f2214610253578063238ac9331461027557806323b872dd146102a457806327e235e3146102cc578063313ce567146102eb5780633f55b8951461031457806342e94c90146103335780635c65816514610352578063645ac00b1461037757806370a0823114610396578063751c4d70146103b55780638da5cb5b146103d757806395d89b41146103ea578063a0712d68146103fd578063a4e3374b14610413578063a9059cbb1461043b578063bffe34861461045d578063dd62ed3e1461047c578063eb5a7033146104a1578063eed50a32146104c0578063f2fde38b146104df575b600080fd5b341561015857600080fd5b6101606104fe565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561019c578082015183820152602001610184565b50505050905090810190601f1680156101c95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101e257600080fd5b6101f660ff6004351660243560443561059c565b005b341561020357600080fd5b61021a600160a060020a036004351660243561069c565b604051901515815260200160405180910390f35b341561023957600080fd5b610241610742565b60405190815260200160405180910390f35b341561025e57600080fd5b6101f6600160a060020a0360043516602435610748565b341561028057600080fd5b610288610836565b604051600160a060020a03909116815260200160405180910390f35b34156102af57600080fd5b61021a600160a060020a0360043581169060243516604435610845565b34156102d757600080fd5b610241600160a060020a03600435166108ba565b34156102f657600080fd5b6102fe6108cc565b60405160ff909116815260200160405180910390f35b341561031f57600080fd5b6101f660ff600435166024356044356108d5565b341561033e57600080fd5b610241600160a060020a03600435166109d8565b341561035d57600080fd5b610241600160a060020a03600435811690602435166109ea565b341561038257600080fd5b6101f6600160a060020a0360043516610a07565b34156103a157600080fd5b610241600160a060020a0360043516610a51565b34156103c057600080fd5b6101f6600160a060020a0360043516602435610a6c565b34156103e257600080fd5b610288610b90565b34156103f557600080fd5b610160610b9f565b341561040857600080fd5b6101f6600435610c0a565b341561041e57600080fd5b61021a600160a060020a0360043581169060243516604435610cd2565b341561044657600080fd5b61021a600160a060020a0360043516602435610d23565b341561046857600080fd5b6102fe600160a060020a0360043516610d37565b341561048757600080fd5b610241600160a060020a0360043581169060243516610d4c565b34156104ac57600080fd5b610241600160a060020a0360043516610d77565b34156104cb57600080fd5b6102fe600160a060020a0360043516610dd2565b34156104ea57600080fd5b6101f6600160a060020a0360043516610df0565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105945780601f1061056957610100808354040283529160200191610594565b820191906000526020600020905b81548152906001019060200180831161057757829003601f168201915b505050505081565b60075460009033600160a060020a039081169116146105ba57600080fd5b6007546001906105d290600160a060020a0316610d77565b8585856040516000815260200160405260006040516020015260405193845260ff90921660208085019190915260408085019290925260608401929092526080909201915160208103908084039060008661646e5a03f1151561063457600080fd5b505060206040510351600160a060020a0380821660008181526008602052604090819020805460ff1916905560075493945092909116917fd5fb6b097817420d0d5ca4da2e58fa4cf85aeae8a3e96fa762dfc9f779f36fef905160405180910390a350505050565b60008115806106ce5750600160a060020a03338116600090815260056020908152604080832093871683529290522054155b15156106d957600080fd5b600160a060020a03338116600081815260056020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60035490565b60075433600160a060020a0390811691161461076357600080fd5b600160a060020a0382166000908152600960205260409020548190101561078957600080fd5b600160a060020a0382166000908152600960205260409020546107b2908263ffffffff610e3a16565b600160a060020a0383166000908152600960209081526040808320939093556004905220546107e7908263ffffffff610e4c16565b600160a060020a038316600081815260046020526040908190209290925582917f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9905160405180910390a35050565b600754600160a060020a031681565b600160a060020a0380841660009081526005602090815260408083203390941683529290529081205482111561087a57600080fd5b600160a060020a03808516600090815260056020908152604080832033909416835292905220805483900390556108b2848484610e5b565b949350505050565b60046020526000908152604090205481565b60025460ff1681565b60075460009033600160a060020a039081169116146108f357600080fd5b60075460019061090b90600160a060020a0316610d77565b8585856040516000815260200160405260006040516020015260405193845260ff90921660208085019190915260408085019290925260608401929092526080909201915160208103908084039060008661646e5a03f1151561096d57600080fd5b505060206040510351600160a060020a0380821660008181526008602052604090819020805460ff1916600117905560075493945092909116917fab7d75eccd27c9989942a3a6e4137e415df0ad90ec428751b16361f16fe8780f905160405180910390a350505050565b60096020526000908152604090205481565b600560209081526000928352604080842090915290825290205481565b60065433600160a060020a03908116911614610a2257600080fd5b6007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a031660009081526004602052604090205490565b60075433600160a060020a03908116911614610a8757600080fd5b600160a060020a03821660009081526008602052604090205460ff16600114610aaf57600080fd5b600081118015610ad85750600160a060020a038216600090815260046020526040902054819010155b1515610ae357600080fd5b600160a060020a038216600090815260046020526040902054610b0c908263ffffffff610e3a16565b600160a060020a038316600090815260046020908152604080832093909355600990522054610b41908263ffffffff610e4c16565b600160a060020a038316600081815260096020526040908190209290925582917f906faaf913a60f38b5e8f2d6f5b163239bac2d994fa1a5d21751a51587a94057905160405180910390a35050565b600654600160a060020a031681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105945780601f1061056957610100808354040283529160200191610594565b60065433600160a060020a03908116911614610c2557600080fd5b60008111610c3257600080fd5b600654600160a060020a0316600090815260046020526040902054610c5d908263ffffffff610e4c16565b600654600160a060020a0316600090815260046020526040902055600354610c8b908263ffffffff610e4c16565b600355600654600160a060020a031660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405190815260200160405180910390a350565b60075460009033600160a060020a03908116911614610cf057600080fd5b600160a060020a03841660009081526008602052604090205460ff16600114610d1857600080fd5b6108b2848484610e5b565b6000610d30338484610e5b565b9392505050565b60086020526000908152604090205460ff1681565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b6000816040517f19457468657265756d205369676e6564204d6573736167653a0a3230000000008152600160a060020a03919091166c0100000000000000000000000002601c82015260300160405180910390209050919050565b600160a060020a031660009081526008602052604090205460ff1690565b60065433600160a060020a03908116911614610e0b57600080fd5b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610e4657fe5b50900390565b600082820183811015610d3057fe5b6000600160a060020a03831615801590610e87575030600160a060020a031683600160a060020a031614155b8015610ea5575083600160a060020a031683600160a060020a031614155b1515610eb057600080fd5b600082118015610ed95750600160a060020a038416600090815260046020526040902054829010155b1515610ee457600080fd5b600160a060020a03831660009081526004602052604090205482810111610f0a57600080fd5b600160a060020a038085166000818152600460205260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600193925050505600a165627a7a72305820b5239f953dbddd906d2d07ee57bd83922fa69f628a95cbaf8e6719ed3fd02fce00290000000000000000000000000000000000000000000000000000000008f0d180",
  "constructorArguments": "0000000000000000000000000000000000000000000000000000000008f0d180"
}