{
  "address": "0xbffe4fdcd397e7942fd7c9f99255e0aa34e4b3fb",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Tranium",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-15\n*/\n\npragma solidity 0.4.25;\n   \n    /**\n     * @title SafeMath\n     * @dev Math operations with safety checks that throw on error\n     */\n    library SafeMath {\n      function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n          return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n      }\n    \n      function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n      }\n    \n      function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n      }\n    \n      function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n      }\n    }\n    \n    contract ForeignToken {\n    function balanceOf(address _owner) constant public returns (uint256);\n    function transfer(address _to, uint256 _value) public returns (bool);\n}\n\ncontract ERC20Basic {\n    uint256 public totalSupply;\n    function balanceOf(address who) public constant returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public constant returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract Tranium is ERC20 {\n    \n    using SafeMath for uint256;\n    address owner = msg.sender;\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n    mapping (address => bool) public frozenAccount;\n\n    string public constant name = \"Tranium\";\n    string public constant symbol = \"TRM\";\n    uint public constant decimals = 8;\n        \n        uint256 public totalSupply          = 15000000000e8;\n        uint256 public tokensForSale        = 65000000000e8;\n        uint256 public totalDistributed;\n        uint256 public totalTokenSold; \n        uint256 public totalWeiReceived;\n        uint256 public constant requestMinimum = 1 ether / 100;\n        uint256 public tokensPerEth = 15000000e8;\n        \n        \n        address multisig = 0x24543bC9f23793bdcEa99569b602536C7B2CB6C6;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    \n    event Distr(address indexed to, uint256 amount);\n    event DistrFinished();\n    event ICOStarted();\n    \n    event Airdrop(address indexed _owner, uint _amount, uint _balance);\n\n    event TokensPerEthUpdated(uint _tokensPerEth);\n    \n    event Burn(address indexed burner, uint256 value);\n\n    event FrozenFunds(address target, bool frozen);\n    \n\n    bool public distributionFinished = false;\n    bool public icoStarted = false;\n    \n    modifier canDistr() {\n        require(!distributionFinished);\n        _;\n    }\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    constructor () public {\n        owner = msg.sender;\n        uint256 devTokens = 2500000000e8;\n        distr(owner, devTokens);        \n    }\n    \n    function transferOwnership(address newOwner) onlyOwner public {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n    \n    function startICO() onlyOwner public returns (bool) {\n        icoStarted = true;\n        distributionFinished = false;\n        emit ICOStarted();\n        return true;\n    }\n\n    function finishDistribution() onlyOwner canDistr public returns (bool) {\n        distributionFinished = true;\n        emit DistrFinished();\n        return true;\n    }\n    \n    function distr(address _to, uint256 _amount) canDistr private returns (bool) {\n        totalDistributed = totalDistributed.add(_amount);        \n        balances[_to] = balances[_to].add(_amount);\n        emit Distr(_to, _amount);\n        emit Transfer(address(0), _to, _amount);\n\n        return true;\n    }\n\n    function doAirdrop(address _participant, uint _amount) internal {\n\n        require( _amount > 0 );      \n\n        require( totalDistributed < totalSupply );\n        \n        balances[_participant] = balances[_participant].add(_amount);\n        totalDistributed = totalDistributed.add(_amount);\n\n        if (totalDistributed >= totalSupply) {\n            distributionFinished = true;\n        }\n\n        // log\n        emit Airdrop(_participant, _amount, balances[_participant]);\n        emit Transfer(address(0), _participant, _amount);\n    }\n\n    function transferTokenTo(address _participant, uint _amount) public onlyOwner {        \n        doAirdrop(_participant, _amount);\n    }\n\n    function transferTokenToMultiple(address[] _addresses, uint _amount) public onlyOwner {        \n        for (uint i = 0; i < _addresses.length; i++) doAirdrop(_addresses[i], _amount);\n    }\n    \n    function updateTokensPerEth(uint _tokensPerEth) public onlyOwner {        \n        tokensPerEth = _tokensPerEth;\n        emit TokensPerEthUpdated(_tokensPerEth);\n    }\n    \n    function () external payable {\n        getTokens();\n     }\n    \n    function getTokens() payable canDistr  public {\n        require(icoStarted);\n        uint256 tokens = 0;\n\n        require( msg.value >= requestMinimum );\n\n        require( msg.value > 0 );\n\n        tokens = tokensPerEth.mul(msg.value) / 1 ether;        \n        address investor = msg.sender;\n        \n        if (tokens > 0) {\n            distr(investor, tokens);\n            totalWeiReceived = totalWeiReceived.add(msg.value);\n            totalTokenSold = totalTokenSold.add(tokens);\n        }\n        \n        if (totalTokenSold >= tokensForSale) {\n            distributionFinished = true;\n        }\n        \n         multisig.transfer(msg.value);\n    }\n    \n    function balanceOf(address _owner) constant public returns (uint256) {\n        return balances[_owner];\n    }\n\n    modifier onlyPayloadSize(uint size) {\n        assert(msg.data.length >= size + 4);\n        _;\n    }\n    \n    function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {\n        if (frozenAccount[msg.sender]) return false;\n        require(_to != address(0));\n        require(_amount <= balances[msg.sender]);\n        \n        balances[msg.sender] = balances[msg.sender].sub(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        emit Transfer(msg.sender, _to, _amount);\n        return true;\n    }\n    \n    function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {\n        if (frozenAccount[msg.sender]) return false;\n        require(_to != address(0));\n        require(_amount <= balances[_from]);\n        require(_amount <= allowed[_from][msg.sender]);\n        \n        balances[_from] = balances[_from].sub(_amount);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        emit Transfer(_from, _to, _amount);\n        return true;\n    }\n    \n    function approve(address _spender, uint256 _value) public returns (bool success) {\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    \n    function allowance(address _owner, address _spender) constant public returns (uint256) {\n        return allowed[_owner][_spender];\n    }\n    \n    function getTokenBalance(address tokenAddress, address who) constant public returns (uint){\n        ForeignToken t = ForeignToken(tokenAddress);\n        uint bal = t.balanceOf(who);\n        return bal;\n    }\n    \n    function withdrawAll() onlyOwner public {\n        address myAddress = this;\n        uint256 etherBalance = myAddress.balance;\n        owner.transfer(etherBalance);\n    }\n\n    function withdraw(uint256 _wdamount) onlyOwner public {\n        uint256 wantAmount = _wdamount;\n        owner.transfer(wantAmount);\n    }\n    \n    function withdrawForeignTokens(address _tokenContract) onlyOwner public returns (bool) {\n        ForeignToken token = ForeignToken(_tokenContract);\n        uint256 amount = token.balanceOf(address(this));\n        return token.transfer(owner, amount);\n    }\n    \n    function burn(uint256 _value) onlyOwner public {\n        require(_value <= balances[msg.sender]);\n        address burner = msg.sender;\n        balances[burner] = balances[burner].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        totalDistributed = totalDistributed.sub(_value);\n        emit Burn(burner, _value);\n    }\n    \n    function freezeAccount(address target, bool freeze) onlyOwner public {\n        frozenAccount[target] = freeze;\n      emit  FrozenFunds(target, freeze);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoStarted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensForSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wdamount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requestMinimum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startICO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferTokenTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWeiReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishDistribution\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokensPerEth\",\"type\":\"uint256\"}],\"name\":\"updateTokensPerEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokenSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributionFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferTokenToMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DistrFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ICOStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"Airdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_tokensPerEth\",\"type\":\"uint256\"}],\"name\":\"TokensPerEthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"}]",
  "bytecode": "608060405260018054600160a060020a031990811633179091556714d1120d7b160000600555675a34a38fc00a00006006556605543df729c000600a55600b805460a060020a61ffff021992167324543bc9f23793bdcea99569b602536c7b2cb6c61791909116905534801561007457600080fd5b5060018054600160a060020a0319163317908190556703782dace9d90000906100af90600160a060020a0316826401000000006100b6810204565b50506101e0565b600b5460009074010000000000000000000000000000000000000000900460ff16156100e157600080fd5b6007546100fb90836401000000006112a96101ca82021704565b600755600160a060020a03831660009081526002602052604090205461012e90836401000000006112a96101ca82021704565b600160a060020a038416600081815260026020908152604091829020939093558051858152905191927f8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a7792918290030190a2604080518381529051600160a060020a038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b6000828201838110156101d957fe5b9392505050565b61144080620001f06000396000f30060806040526004361061018a5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610194578063095ea7b31461021e5780630b5e89f41461025657806312aef8c31461026b57806318160ddd1461029257806323b872dd146102a75780632e1a7d4d146102d1578063313ce567146102e957806342966c68146102fe57806370a082311461031657806374ff2324146103375780637fa8c1581461034c5780638144650a14610361578063853828b61461038557806388d12a4d1461039a57806395d89b41146103af5780639b1cbccc146103c45780639ea407be146103d9578063a9059cbb146103f1578063aa6ca8081461018a578063b414d4b614610415578063b5f7f63614610436578063c108d5421461044b578063c3888bce14610460578063c489744b146104b7578063cbdd69b5146104de578063dd62ed3e146104f3578063e58fc54c1461051a578063e724529c1461053b578063efca2eed14610561578063f2fde38b14610576575b610192610597565b005b3480156101a057600080fd5b506101a96106dd565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e35781810151838201526020016101cb565b50505050905090810190601f1680156102105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022a57600080fd5b50610242600160a060020a0360043516602435610714565b604080519115158252519081900360200190f35b34801561026257600080fd5b506102426107bc565b34801561027757600080fd5b506102806107de565b60408051918252519081900360200190f35b34801561029e57600080fd5b506102806107e4565b3480156102b357600080fd5b50610242600160a060020a03600435811690602435166044356107ea565b3480156102dd57600080fd5b50610192600435610980565b3480156102f557600080fd5b506102806109d5565b34801561030a57600080fd5b506101926004356109da565b34801561032257600080fd5b50610280600160a060020a0360043516610ab9565b34801561034357600080fd5b50610280610ad4565b34801561035857600080fd5b50610242610adf565b34801561036d57600080fd5b50610192600160a060020a0360043516602435610b79565b34801561039157600080fd5b50610192610b9e565b3480156103a657600080fd5b50610280610bfb565b3480156103bb57600080fd5b506101a9610c01565b3480156103d057600080fd5b50610242610c38565b3480156103e557600080fd5b50610192600435610cbc565b3480156103fd57600080fd5b50610242600160a060020a0360043516602435610d0e565b34801561042157600080fd5b50610242600160a060020a0360043516610e10565b34801561044257600080fd5b50610280610e25565b34801561045757600080fd5b50610242610e2b565b34801561046c57600080fd5b5060408051602060048035808201358381028086018501909652808552610192953695939460249493850192918291850190849080828437509497505093359450610e3b9350505050565b3480156104c357600080fd5b50610280600160a060020a0360043581169060243516610e8b565b3480156104ea57600080fd5b50610280610f3c565b3480156104ff57600080fd5b50610280600160a060020a0360043581169060243516610f42565b34801561052657600080fd5b50610242600160a060020a0360043516610f6d565b34801561054757600080fd5b50610192600160a060020a036004351660243515156110c1565b34801561056d57600080fd5b5061028061113c565b34801561058257600080fd5b50610192600160a060020a0360043516611142565b600b54600090819060a060020a900460ff16156105b357600080fd5b600b547501000000000000000000000000000000000000000000900460ff1615156105dd57600080fd5b60009150662386f26fc100003410156105f557600080fd5b6000341161060257600080fd5b600a54670de0b6b3a76400009061061f903463ffffffff61119416565b81151561062857fe5b049150339050600082111561066f5761064181836111c6565b50600954610655903463ffffffff6112a916565b60095560085461066b908363ffffffff6112a916565b6008555b6006546008541061069f57600b805474ff0000000000000000000000000000000000000000191660a060020a1790555b600b54604051600160a060020a03909116903480156108fc02916000818181858888f193505050501580156106d8573d6000803e3d6000fd5b505050565b60408051808201909152600781527f5472616e69756d00000000000000000000000000000000000000000000000000602082015281565b600081158015906107475750336000908152600360209081526040808320600160a060020a038716845290915290205415155b15610754575060006107b6565b336000818152600360209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b600b547501000000000000000000000000000000000000000000900460ff1681565b60065481565b60055481565b6000606060643610156107f957fe5b3360009081526004602052604090205460ff161561081a5760009150610978565b600160a060020a038416151561082f57600080fd5b600160a060020a03851660009081526002602052604090205483111561085457600080fd5b600160a060020a038516600090815260036020908152604080832033845290915290205483111561088457600080fd5b600160a060020a0385166000908152600260205260409020546108ad908463ffffffff6112b816565b600160a060020a03861660009081526002602090815260408083209390935560038152828220338352905220546108ea908463ffffffff6112b816565b600160a060020a03808716600090815260036020908152604080832033845282528083209490945591871681526002909152205461092e908463ffffffff6112a916565b600160a060020a0380861660008181526002602090815260409182902094909455805187815290519193928916926000805160206113f583398151915292918290030190a3600191505b509392505050565b600154600090600160a060020a0316331461099a57600080fd5b506001546040518291600160a060020a03169082156108fc029083906000818181858888f193505050501580156106d8573d6000803e3d6000fd5b600881565b600154600090600160a060020a031633146109f457600080fd5b33600090815260026020526040902054821115610a1057600080fd5b5033600081815260026020526040902054610a31908363ffffffff6112b816565b600160a060020a038216600090815260026020526040902055600554610a5d908363ffffffff6112b816565b600555600754610a73908363ffffffff6112b816565b600755604080518381529051600160a060020a038316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25050565b600160a060020a031660009081526002602052604090205490565b662386f26fc1000081565b600154600090600160a060020a03163314610af957600080fd5b600b805474ff00000000000000000000000000000000000000001975ff000000000000000000000000000000000000000000199091167501000000000000000000000000000000000000000000171690556040517ffc618519ae40d98dcc0290aca36bb7869677a04294f2fef8e079935048be9f1b90600090a150600190565b600154600160a060020a03163314610b9057600080fd5b610b9a82826112ca565b5050565b6001546000908190600160a060020a03163314610bba57600080fd5b50506001546040513091823191600160a060020a03909116906108fc8315029083906000818181858888f193505050501580156106d8573d6000803e3d6000fd5b60095481565b60408051808201909152600381527f54524d0000000000000000000000000000000000000000000000000000000000602082015281565b600154600090600160a060020a03163314610c5257600080fd5b600b5460a060020a900460ff1615610c6957600080fd5b600b805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc90600090a150600190565b600154600160a060020a03163314610cd357600080fd5b600a8190556040805182815290517ff7729fa834bbef70b6d3257c2317a562aa88b56c81b544814f93dc5963a2c0039181900360200190a150565b600060406044361015610d1d57fe5b3360009081526004602052604090205460ff1615610d3e5760009150610e09565b600160a060020a0384161515610d5357600080fd5b33600090815260026020526040902054831115610d6f57600080fd5b33600090815260026020526040902054610d8f908463ffffffff6112b816565b3360009081526002602052604080822092909255600160a060020a03861681522054610dc1908463ffffffff6112a916565b600160a060020a0385166000818152600260209081526040918290209390935580518681529051919233926000805160206113f58339815191529281900390910190a3600191505b5092915050565b60046020526000908152604090205460ff1681565b60085481565b600b5460a060020a900460ff1681565b600154600090600160a060020a03163314610e5557600080fd5b5060005b82518110156106d857610e838382815181101515610e7357fe5b90602001906020020151836112ca565b600101610e59565b600080600084915081600160a060020a03166370a08231856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610f0757600080fd5b505af1158015610f1b573d6000803e3d6000fd5b505050506040513d6020811015610f3157600080fd5b505195945050505050565b600a5481565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b60015460009081908190600160a060020a03163314610f8b57600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051859350600160a060020a038416916370a082319160248083019260209291908290030181600087803b158015610fef57600080fd5b505af1158015611003573d6000803e3d6000fd5b505050506040513d602081101561101957600080fd5b5051600154604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810184905290519293509084169163a9059cbb916044808201926020929091908290030181600087803b15801561108d57600080fd5b505af11580156110a1573d6000803e3d6000fd5b505050506040513d60208110156110b757600080fd5b5051949350505050565b600154600160a060020a031633146110d857600080fd5b600160a060020a038216600081815260046020908152604091829020805460ff191685151590811790915582519384529083015280517f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a59281900390910190a15050565b60075481565b600154600160a060020a0316331461115957600080fd5b600160a060020a03811615611191576001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b6000808315156111a75760009150610e09565b508282028284828115156111b757fe5b04146111bf57fe5b9392505050565b600b5460009060a060020a900460ff16156111e057600080fd5b6007546111f3908363ffffffff6112a916565b600755600160a060020a03831660009081526002602052604090205461121f908363ffffffff6112a916565b600160a060020a038416600081815260026020908152604091829020939093558051858152905191927f8940c4b8e215f8822c5c8f0056c12652c746cbc57eedbd2a440b175971d47a7792918290030190a2604080518381529051600160a060020a038516916000916000805160206113f58339815191529181900360200190a350600192915050565b6000828201838110156111bf57fe5b6000828211156112c457fe5b50900390565b600081116112d757600080fd5b600554600754106112e757600080fd5b600160a060020a038216600090815260026020526040902054611310908263ffffffff6112a916565b600160a060020a03831660009081526002602052604090205560075461133c908263ffffffff6112a916565b60078190556005541161136e57600b805474ff0000000000000000000000000000000000000000191660a060020a1790555b600160a060020a0382166000818152600260209081526040918290205482518581529182015281517fada993ad066837289fe186cd37227aa338d27519a8a1547472ecb9831486d272929181900390910190a2604080518281529051600160a060020a038416916000916000805160206113f58339815191529181900360200190a350505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820d5aae72a127edd3da9c480da01bdbe5fc42b3d866b0dd047cd80ff48c79c5a710029"
}