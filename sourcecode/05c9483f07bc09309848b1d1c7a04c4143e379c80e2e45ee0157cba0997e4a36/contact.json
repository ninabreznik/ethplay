{
  "address": "0x26a140783eba5095d7cef24bc4a915f7ee9d8db8",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "FundProxy",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-19\n*/\n\npragma solidity ^0.5.2;\n\ncontract ProxyData {\n    address internal proxied;\n}\n\ncontract Proxy is ProxyData {\n    constructor(address _proxied) public {\n        proxied = _proxied;\n    }\n\n    function () external payable {\n        address addr = proxied;\n        assembly {\n            let freememstart := mload(0x40)\n            calldatacopy(freememstart, 0, calldatasize())\n            let success := delegatecall(not(0), addr, freememstart, calldatasize(), freememstart, 0)\n            returndatacopy(freememstart, 0, returndatasize())\n            switch success\n                case 0 { revert(freememstart, returndatasize()) }\n                default { return(freememstart, returndatasize()) }\n        }\n    }\n}\n\ncontract UniswapFactoryInterface {\n    // Public Variables\n    address public exchangeTemplate;\n    uint256 public tokenCount;\n    // Create Exchange\n    function createExchange(address token) external returns (address exchange);\n    // Get Exchange and Token Info\n    function getExchange(address token) external view returns (address exchange);\n    function getToken(address exchange) external view returns (address token);\n    function getTokenWithId(uint256 tokenId) external view returns (address token);\n    // Never use\n    function initializeFactory(address template) external;\n}\n\ncontract FundHeader {\n    address constant internal cEth = address(0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5);\n    UniswapFactoryInterface constant internal uniswapFactory = UniswapFactoryInterface(0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95);\n}\n\ncontract FundDataInternal is ProxyData, FundHeader {\n    address internal collateralOwner;\n    address internal interestWithdrawer;\n    // cTokenAddress -> sum deposits denominated in underlying\n    mapping(address => uint) internal initialDepositCollateral;\n    // cTokenAddresses\n    address[] internal markets;\n}\n\ncontract CERC20NoBorrowInterface {\n    function mint(uint mintAmount) external returns (uint);\n    address public underlying;\n}\n\ninterface IERC20 {\n    function transfer(address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function allowance(address owner, address spender) external view returns (uint256);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract FundProxy is Proxy, FundDataInternal {\n    constructor(\n        address proxied,\n        address _collateralOwner,\n        address _interestWithdrawer,\n        address[] memory _markets)\n            public\n            Proxy(proxied)\n    {\n        for (uint i=0; i < _markets.length; i++) {\n            markets.push(_markets[i]);\n            if (_markets[i] == cEth) {\n                continue;\n            }\n            address underlying = CERC20NoBorrowInterface(_markets[i]).underlying();\n            require(IERC20(underlying).approve(_markets[i], uint(-1)));\n            require(IERC20(underlying).approve(uniswapFactory.getExchange(underlying), uint(-1)));\n        }\n        collateralOwner = _collateralOwner;\n        interestWithdrawer = _interestWithdrawer;\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b506040516104433803806104438339810180604052608081101561003357600080fd5b815160208301516040840151606085018051939592949193918301929164010000000081111561006257600080fd5b8201602081018481111561007557600080fd5b815185602082028301116401000000008211171561009257600080fd5b5050600080546001600160a01b0319166001600160a01b0389161781559093509150505b81518110156103a45760048282815181106100cd57fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558151734ddc2d193948926d02f9b1fe9e1daa0718270ed59083908390811061012c57fe5b60200260200101516001600160a01b031614156101485761039c565b600082828151811061015657fe5b60200260200101516001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561019657600080fd5b505afa1580156101aa573d6000803e3d6000fd5b505050506040513d60208110156101c057600080fd5b505183519091506001600160a01b0382169063095ea7b3908590859081106101e457fe5b60200260200101516000196040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561023e57600080fd5b505af1158015610252573d6000803e3d6000fd5b505050506040513d602081101561026857600080fd5b505161027357600080fd5b604080517f06f2bf620000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201819052915163095ea7b39173c0a47dfe034b400b47bdad5fecda2621de6c4d95916306f2bf6291602480820192602092909190829003018186803b1580156102ef57600080fd5b505afa158015610303573d6000803e3d6000fd5b505050506040513d602081101561031957600080fd5b50516040805163ffffffff841660e01b81526001600160a01b03909216600483015260001960248301525160448083019260209291908290030181600087803b15801561036557600080fd5b505af1158015610379573d6000803e3d6000fd5b505050506040513d602081101561038f57600080fd5b505161039a57600080fd5b505b6001016100b6565b5050600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055506062806103e16000396000f3fe60806040819052600080546001600160a01b0316919036908237600081368185600019f43d6000833e8080156032573d83f35b3d83fdfea165627a7a723058205c2ffbfbc63a23f7f342d0a4b15d2974d84e22daf85c4ecfaf137facb06c93210029000000000000000000000000f2a25ea7b8c600a56bc4bf46a70390aea1dc03150000000000000000000000000759d524faa4a6f27423496c8eed65daf27bfa96000000000000000000000000babe76bf68b72fd84f43ee08114ee0a383ab2dc100000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003000000000000000000000000f5dce57282a584d2746faf1593d3121fcac444dc00000000000000000000000039aa39c021dfbae8fac545936693ac917d5e75630000000000000000000000004ddc2d193948926d02f9b1fe9e1daa0718270ed5",
  "constructorArguments": "000000000000000000000000f2a25ea7b8c600a56bc4bf46a70390aea1dc03150000000000000000000000000759d524faa4a6f27423496c8eed65daf27bfa96000000000000000000000000babe76bf68b72fd84f43ee08114ee0a383ab2dc100000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003000000000000000000000000f5dce57282a584d2746faf1593d3121fcac444dc00000000000000000000000039aa39c021dfbae8fac545936693ac917d5e75630000000000000000000000004ddc2d193948926d02f9b1fe9e1daa0718270ed5"
}