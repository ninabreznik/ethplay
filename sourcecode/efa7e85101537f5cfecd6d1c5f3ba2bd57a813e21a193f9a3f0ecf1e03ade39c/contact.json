{
  "address": "0x9b70740e708a083c6ff38df52297020f5dfaa5ee",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DaneelToken",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-11-12\n*/\n\npragma solidity ^0.4.18;\n\n/**\n* @title SafeMath\n* @dev Math operations with safety checks that throw on error\n*/\nlibrary SafeMath {\nfunction mul(uint256 a, uint256 b) internal constant returns (uint256) {\nuint256 c = a * b;\nassert(a == 0 || c / a == b);\nreturn c;\n}\n\nfunction div(uint256 a, uint256 b) internal constant returns (uint256) {\n// assert(b > 0); // Solidity automatically throws when dividing by 0\nuint256 c = a / b;\n// assert(a == b * c + a % b); // There is no case in which this doesn't hold\nreturn c;\n}\n\nfunction sub(uint256 a, uint256 b) internal constant returns (uint256) {\nassert(b <= a);\nreturn a - b;\n}\n\nfunction add(uint256 a, uint256 b) internal constant returns (uint256) {\nuint256 c = a + b;\nassert(c >= a);\nreturn c;\n}\n}\n\n/**\n* @title ERC20Basic\n* @dev Simpler version of ERC20 interface\n* @dev see https://github.com/ethereum/EIPs/issues/179\n*/\ncontract ERC20Basic {\nuint256 public totalSupply;\nfunction balanceOf(address who) public constant returns (uint256);\nfunction transfer(address to, uint256 value) public returns (bool);\nevent Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n* @title Basic token\n* @dev Basic version of StandardToken, with no allowances.\n*/\ncontract BasicToken is ERC20Basic {\nusing SafeMath for uint256;\n\nmapping(address => uint256) balances;\n\n/**\n* @dev transfer token for a specified address\n* @param _to The address to transfer to.\n* @param _value The amount to be transferred.\n*/\nfunction transfer(address _to, uint256 _value) public returns (bool) {\nrequire(_to != address(0));\nrequire(_value <= balances[msg.sender]);\n\n// SafeMath.sub will throw if there is not enough balance.\nbalances[msg.sender] = balances[msg.sender].sub(_value);\nbalances[_to] = balances[_to].add(_value);\nTransfer(msg.sender, _to, _value);\nreturn true;\n}\n\n/**\n* @dev Gets the balance of the specified address.\n* @param _owner The address to query the the balance of.\n* @return An uint256 representing the amount owned by the passed address.\n*/\nfunction balanceOf(address _owner) public constant returns (uint256 balance) {\nreturn balances[_owner];\n}\n\n}\n\n/**\n* @title ERC20 interface\n* @dev see https://github.com/ethereum/EIPs/issues/20\n*/\ncontract ERC20 is ERC20Basic {\nfunction allowance(address owner, address spender) public constant returns (uint256);\nfunction transferFrom(address from, address to, uint256 value) public returns (bool);\nfunction approve(address spender, uint256 value) public returns (bool);\nevent Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n* @title Standard ERC20 token\n*\n* @dev Implementation of the basic standard token.\n* @dev https://github.com/ethereum/EIPs/issues/20\n* @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n*/\ncontract StandardToken is ERC20, BasicToken {\n\nmapping (address => mapping (address => uint256)) internal allowed;\n\n\n/**\n* @dev Transfer tokens from one address to another\n* @param _from address The address which you want to send tokens from\n* @param _to address The address which you want to transfer to\n* @param _value uint256 the amount of tokens to be transferred\n*/\nfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\nrequire(_to != address(0));\nrequire(_value <= balances[_from]);\nrequire(_value <= allowed[_from][msg.sender]);\n\nbalances[_from] = balances[_from].sub(_value);\nbalances[_to] = balances[_to].add(_value);\nallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\nTransfer(_from, _to, _value);\nreturn true;\n}\n\n/**\n* @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n*\n* Beware that changing an allowance with this method brings the risk that someone may use both the old\n* and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n* race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n* https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n* @param _spender The address which will spend the funds.\n* @param _value The amount of tokens to be spent.\n*/\nfunction approve(address _spender, uint256 _value) public returns (bool) {\nallowed[msg.sender][_spender] = _value;\nApproval(msg.sender, _spender, _value);\nreturn true;\n}\n\n/**\n* @dev Function to check the amount of tokens that an owner allowed to a spender.\n* @param _owner address The address which owns the funds.\n* @param _spender address The address which will spend the funds.\n* @return A uint256 specifying the amount of tokens still available for the spender.\n*/\nfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\nreturn allowed[_owner][_spender];\n}\n\n/**\n* approve should be called when allowed[_spender] == 0. To increment\n* allowed value is better to use this function to avoid 2 calls (and wait until\n* the first transaction is mined)\n* From MonolithDAO Token.sol\n*/\nfunction increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\nallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\nApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\nreturn true;\n}\n\nfunction decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\nuint oldValue = allowed[msg.sender][_spender];\nif (_subtractedValue > oldValue) {\nallowed[msg.sender][_spender] = 0;\n} else {\nallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n}\nApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\nreturn true;\n}\n\n}\n\ncontract DaneelToken is StandardToken {\nstring public name = 'Daneel';\nstring public symbol = 'DAN';\nuint public decimals = 10;\nuint public INITIAL_SUPPLY = 1000000000000000000;\n\nfunction DaneelToken() {\ntotalSupply = INITIAL_SUPPLY;\nbalances[msg.sender] = INITIAL_SUPPLY;\n}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "606060405260408051908101604052600681527f44616e65656c00000000000000000000000000000000000000000000000000006020820152600390805161004b9291602001906100d3565b5060408051908101604052600381527f44414e0000000000000000000000000000000000000000000000000000000000602082015260049080516100939291602001906100d3565b50600a600555670de0b6b3a764000060065534156100b057600080fd5b6006546000818155600160a060020a03331681526001602052604090205561016e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011457805160ff1916838001178555610141565b82800160010185558215610141579182015b82811115610141578251825591602001919060010190610126565b5061014d929150610151565b5090565b61016b91905b8082111561014d5760008155600101610157565b90565b6108ea8061017d6000396000f3006060604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461017e57806323b872dd146101a35780632ff2e9dc146101cb578063313ce567146101de57806366188463146101f157806370a082311461021357806395d89b4114610232578063a9059cbb14610245578063d73dd62314610267578063dd62ed3e14610289575b600080fd5b34156100c957600080fd5b6100d16102ae565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561010d5780820151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015357600080fd5b61016a600160a060020a036004351660243561034c565b604051901515815260200160405180910390f35b341561018957600080fd5b6101916103b8565b60405190815260200160405180910390f35b34156101ae57600080fd5b61016a600160a060020a03600435811690602435166044356103be565b34156101d657600080fd5b610191610540565b34156101e957600080fd5b610191610546565b34156101fc57600080fd5b61016a600160a060020a036004351660243561054c565b341561021e57600080fd5b610191600160a060020a0360043516610646565b341561023d57600080fd5b6100d1610661565b341561025057600080fd5b61016a600160a060020a03600435166024356106cc565b341561027257600080fd5b61016a600160a060020a03600435166024356107c7565b341561029457600080fd5b610191600160a060020a036004358116906024351661086b565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103445780601f1061031957610100808354040283529160200191610344565b820191906000526020600020905b81548152906001019060200180831161032757829003601f168201915b505050505081565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60005481565b6000600160a060020a03831615156103d557600080fd5b600160a060020a0384166000908152600160205260409020548211156103fa57600080fd5b600160a060020a038085166000908152600260209081526040808320339094168352929052205482111561042d57600080fd5b600160a060020a038416600090815260016020526040902054610456908363ffffffff61089616565b600160a060020a03808616600090815260016020526040808220939093559085168152205461048b908363ffffffff6108a816565b600160a060020a038085166000908152600160209081526040808320949094558783168252600281528382203390931682529190915220546104d3908363ffffffff61089616565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b60065481565b60055481565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054808311156105a957600160a060020a0333811660009081526002602090815260408083209388168352929052908120556105e0565b6105b9818463ffffffff61089616565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600160a060020a031660009081526001602052604090205490565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103445780601f1061031957610100808354040283529160200191610344565b6000600160a060020a03831615156106e357600080fd5b600160a060020a03331660009081526001602052604090205482111561070857600080fd5b600160a060020a033316600090815260016020526040902054610731908363ffffffff61089616565b600160a060020a033381166000908152600160205260408082209390935590851681522054610766908363ffffffff6108a816565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120546107ff908363ffffffff6108a816565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156108a257fe5b50900390565b6000828201838110156108b757fe5b93925050505600a165627a7a72305820296d5efd6f96e44e3ce4e1b521870ff6cc9e8e343e97bc2f758233195be13cd10029"
}