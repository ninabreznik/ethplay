{
  "address": "0x574d60aa41bba8f90e87cfe0581d4e5cd8cd4870",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "EthexJackpot",
  "compilerVersion": "v0.5.1+commit.c8a2cb62",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-17\n*/\n\npragma solidity ^0.5.0;\n\n/**\n * (E)t)h)e)x) Jackpot Contract \n *  This smart-contract is the part of Ethex Lottery fair game.\n *  See latest version at https://github.com/ethex-bet/ethex-contracts \n *  http://ethex.bet\n */\n\ncontract EthexJackpot {\n    mapping(uint256 => address payable) public tickets;\n    uint256 public numberEnd;\n    uint256 public firstNumber;\n    uint256 public dailyAmount;\n    uint256 public weeklyAmount;\n    uint256 public monthlyAmount;\n    uint256 public seasonalAmount;\n    bool public dailyProcessed;\n    bool public weeklyProcessed;\n    bool public monthlyProcessed;\n    bool public seasonalProcessed;\n    address payable private owner;\n    address public lotoAddress;\n    address payable public newVersionAddress;\n    EthexJackpot previousContract;\n    uint256 public dailyNumberStartPrev;\n    uint256 public weeklyNumberStartPrev;\n    uint256 public monthlyNumberStartPrev;\n    uint256 public seasonalNumberStartPrev;\n    uint256 public dailyStart;\n    uint256 public weeklyStart;\n    uint256 public monthlyStart;\n    uint256 public seasonalStart;\n    uint256 public dailyEnd;\n    uint256 public weeklyEnd;\n    uint256 public monthlyEnd;\n    uint256 public seasonalEnd;\n    uint256 public dailyNumberStart;\n    uint256 public weeklyNumberStart;\n    uint256 public monthlyNumberStart;\n    uint256 public seasonalNumberStart;\n    uint256 public dailyNumberEndPrev;\n    uint256 public weeklyNumberEndPrev;\n    uint256 public monthlyNumberEndPrev;\n    uint256 public seasonalNumberEndPrev;\n    \n    event Jackpot (\n        uint256 number,\n        uint256 count,\n        uint256 amount,\n        byte jackpotType\n    );\n    \n    event Ticket (\n        bytes16 indexed id,\n        uint256 number\n    );\n    \n    event SuperPrize (\n        uint256 amount,\n        address winner\n    );\n    \n    uint256 constant DAILY = 5000;\n    uint256 constant WEEKLY = 35000;\n    uint256 constant MONTHLY = 150000;\n    uint256 constant SEASONAL = 450000;\n    uint256 constant PRECISION = 1 ether;\n    uint256 constant DAILY_PART = 84;\n    uint256 constant WEEKLY_PART = 12;\n    uint256 constant MONTHLY_PART = 3;\n    \n    constructor() public payable {\n        owner = msg.sender;\n    }\n    \n    function() external payable { }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    modifier onlyOwnerOrNewVersion {\n        require(msg.sender == owner || msg.sender == newVersionAddress);\n        _;\n    }\n    \n    modifier onlyLoto {\n        require(msg.sender == lotoAddress, \"Loto only\");\n        _;\n    }\n    \n    function migrate() external onlyOwnerOrNewVersion {\n        newVersionAddress.transfer(address(this).balance);\n    }\n\n    function registerTicket(bytes16 id, address payable gamer) external onlyLoto {\n        uint256 number = numberEnd + 1;\n        if (block.number >= dailyEnd) {\n            setDaily();\n            dailyNumberStart = number;\n        }\n        else\n            if (dailyNumberStart == dailyNumberStartPrev)\n                dailyNumberStart = number;\n        if (block.number >= weeklyEnd) {\n            setWeekly();\n            weeklyNumberStart = number;\n        }\n        else\n            if (weeklyNumberStart == weeklyNumberStartPrev)\n                weeklyNumberStart = number;\n        if (block.number >= monthlyEnd) {\n            setMonthly();\n            monthlyNumberStart = number;\n        }\n        else\n            if (monthlyNumberStart == monthlyNumberStartPrev)\n                monthlyNumberStart = number;\n        if (block.number >= seasonalEnd) {\n            setSeasonal();\n            seasonalNumberStart = number;\n        }\n        else\n            if (seasonalNumberStart == seasonalNumberStartPrev)\n                seasonalNumberStart = number;\n        numberEnd = number;\n        tickets[number] = gamer;\n        emit Ticket(id, number);\n    }\n    \n    function setLoto(address loto) external onlyOwner {\n        lotoAddress = loto;\n    }\n    \n    function setNewVersion(address payable newVersion) external onlyOwner {\n        newVersionAddress = newVersion;\n    }\n    \n    function payIn() external payable {\n        uint256 distributedAmount = dailyAmount + weeklyAmount + monthlyAmount + seasonalAmount;\n        if (distributedAmount < address(this).balance) {\n            uint256 amount = (address(this).balance - distributedAmount) / 4;\n            dailyAmount += amount;\n            weeklyAmount += amount;\n            monthlyAmount += amount;\n            seasonalAmount += amount;\n        }\n    }\n    \n    function settleJackpot() external {\n        if (block.number >= dailyEnd)\n            setDaily();\n        if (block.number >= weeklyEnd)\n            setWeekly();\n        if (block.number >= monthlyEnd)\n            setMonthly();\n        if (block.number >= seasonalEnd)\n            setSeasonal();\n        \n        if (block.number == dailyStart || (dailyStart < block.number - 256))\n            return;\n        \n        uint48 modulo = uint48(bytes6(blockhash(dailyStart) << 29));\n        \n        uint256 dailyPayAmount;\n        uint256 weeklyPayAmount;\n        uint256 monthlyPayAmount;\n        uint256 seasonalPayAmount;\n        uint256 dailyWin;\n        uint256 weeklyWin;\n        uint256 monthlyWin;\n        uint256 seasonalWin;\n        if (dailyProcessed == false) {\n            dailyPayAmount = dailyAmount * PRECISION / DAILY_PART / PRECISION;\n            dailyAmount -= dailyPayAmount;\n            dailyProcessed = true;\n            dailyWin = getNumber(dailyNumberStartPrev, dailyNumberEndPrev, modulo);\n            emit Jackpot(dailyWin, dailyNumberEndPrev - dailyNumberStartPrev + 1, dailyPayAmount, 0x01);\n        }\n        if (weeklyProcessed == false) {\n            weeklyPayAmount = weeklyAmount * PRECISION / WEEKLY_PART / PRECISION;\n            weeklyAmount -= weeklyPayAmount;\n            weeklyProcessed = true;\n            weeklyWin = getNumber(weeklyNumberStartPrev, weeklyNumberEndPrev, modulo);\n            emit Jackpot(weeklyWin, weeklyNumberEndPrev - weeklyNumberStartPrev + 1, weeklyPayAmount, 0x02);\n        }\n        if (monthlyProcessed == false) {\n            monthlyPayAmount = monthlyAmount * PRECISION / MONTHLY_PART / PRECISION;\n            monthlyAmount -= monthlyPayAmount;\n            monthlyProcessed = true;\n            monthlyWin = getNumber(monthlyNumberStartPrev, monthlyNumberEndPrev, modulo);\n            emit Jackpot(monthlyWin, monthlyNumberEndPrev - monthlyNumberStartPrev + 1, monthlyPayAmount, 0x04);\n        }\n        if (seasonalProcessed == false) {\n            seasonalPayAmount = seasonalAmount;\n            seasonalAmount -= seasonalPayAmount;\n            seasonalProcessed = true;\n            seasonalWin = getNumber(seasonalNumberStartPrev, seasonalNumberEndPrev, modulo);\n            emit Jackpot(seasonalWin, seasonalNumberEndPrev - seasonalNumberStartPrev + 1, seasonalPayAmount, 0x08);\n        }\n        if (dailyPayAmount > 0)\n            tickets[dailyWin].transfer(dailyPayAmount);\n        if (weeklyPayAmount > 0)\n            tickets[weeklyWin].transfer(weeklyPayAmount);\n        if (monthlyPayAmount > 0)\n            tickets[monthlyWin].transfer(monthlyPayAmount);\n        if (seasonalPayAmount > 0)\n            tickets[seasonalWin].transfer(seasonalPayAmount);\n    }\n    \n    function settleSuperPrize(address payable winner) external onlyLoto {\n        uint256 superPrizeAmount = dailyAmount + weeklyAmount + monthlyAmount + seasonalAmount;\n        emit SuperPrize(superPrizeAmount, winner);\n        winner.transfer(superPrizeAmount);\n    }\n    \n    function loadTickets(address payable[] calldata addresses, uint256[] calldata numbers) external {\n        for (uint i = 0; i < addresses.length; i++)\n            tickets[numbers[i]] = addresses[i];\n    }\n    \n    function setOldVersion(\n        address payable oldAddress,\n        uint256 dailyNumberStartPrevIn,\n        uint256 weeklyNumberStartPrevIn,\n        uint256 monthlyNumberStartPrevIn,\n        uint256 seasonalNumberStartPrevIn,\n        uint256 dailyNumberStartIn,\n        uint256 weeklyNumberStartIn,\n        uint256 monthlyNumberStartIn,\n        uint256 seasonalNumberStartIn,\n        uint256 dailyNumberEndPrevIn,\n        uint256 weeklyNumberEndPrevIn, \n        uint256 monthlyNumberEndPrevIn,\n        uint256 seasonalNumberEndPrevIn\n    ) external onlyOwner {\n        previousContract = EthexJackpot(oldAddress);\n        firstNumber = 1;//previousContract.numberEnd;        \n        dailyStart = block.number / DAILY * DAILY;\n        dailyEnd = dailyStart + DAILY;\n        dailyProcessed = true;\n        weeklyStart = block.number / WEEKLY * WEEKLY;\n        weeklyEnd = weeklyStart + WEEKLY;\n        weeklyProcessed = true;\n        monthlyStart = block.number / MONTHLY * MONTHLY;\n        monthlyEnd = monthlyStart + MONTHLY;\n        monthlyProcessed = true;\n        seasonalStart = block.number / SEASONAL * SEASONAL;\n        seasonalEnd = seasonalStart + SEASONAL;\n        seasonalProcessed = true;\n        dailyNumberStartPrev = dailyNumberStartPrevIn;\n        weeklyNumberStartPrev = weeklyNumberStartPrevIn;\n        monthlyNumberStartPrev = monthlyNumberStartPrevIn;\n        seasonalNumberStartPrev = seasonalNumberStartPrevIn;\n        dailyNumberStart = dailyNumberStartIn;\n        weeklyNumberStart = weeklyNumberStartIn;\n        monthlyNumberStart = monthlyNumberStartIn;\n        seasonalNumberStart = seasonalNumberStartIn;\n        dailyNumberEndPrev = dailyNumberEndPrevIn;\n        weeklyNumberEndPrev = weeklyNumberEndPrevIn;\n        monthlyNumberEndPrev = monthlyNumberEndPrevIn;\n        seasonalNumberEndPrev = seasonalNumberEndPrevIn;\n        numberEnd = previousContract.numberEnd();\n        dailyAmount = previousContract.dailyAmount();\n        weeklyAmount = previousContract.weeklyAmount();\n        monthlyAmount = previousContract.monthlyAmount();\n        seasonalAmount = previousContract.seasonalAmount() + 19599522250000000000;\n    }\n    \n    function getAddress(uint256 number) public returns (address payable) {\n        if (number <= firstNumber)\n            return previousContract.getAddress(number);\n        return tickets[number];\n    }\n    \n    function setDaily() private {\n        dailyProcessed = dailyNumberEndPrev == numberEnd;\n        dailyStart = dailyEnd;\n        dailyEnd = dailyStart + DAILY;\n        dailyNumberStartPrev = dailyNumberStart;\n        dailyNumberEndPrev = numberEnd;\n    }\n    \n    function setWeekly() private {\n        weeklyProcessed = weeklyNumberEndPrev == numberEnd;\n        weeklyStart = weeklyEnd;\n        weeklyEnd = weeklyStart + WEEKLY;\n        weeklyNumberStartPrev = weeklyNumberStart;\n        weeklyNumberEndPrev = numberEnd;\n    }\n    \n    function setMonthly() private {\n        monthlyProcessed = monthlyNumberEndPrev == numberEnd;\n        monthlyStart = monthlyEnd;\n        monthlyEnd = monthlyStart + MONTHLY;\n        monthlyNumberStartPrev = monthlyNumberStart;\n        monthlyNumberEndPrev = numberEnd;\n    }\n    \n    function setSeasonal() private {\n        seasonalProcessed = seasonalNumberEndPrev == numberEnd;\n        seasonalStart = seasonalEnd;\n        seasonalEnd = seasonalStart + SEASONAL;\n        seasonalNumberStartPrev = seasonalNumberStart;\n        seasonalNumberEndPrev = numberEnd;\n    }\n    \n    function getNumber(uint256 startNumber, uint256 endNumber, uint48 modulo) pure private returns (uint256) {\n        return startNumber + modulo % (endNumber - startNumber + 1);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"numberEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyNumberStartPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalNumberStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyNumberStartPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyNumberEndPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyNumberStartPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tickets\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oldAddress\",\"type\":\"address\"},{\"name\":\"dailyNumberStartPrevIn\",\"type\":\"uint256\"},{\"name\":\"weeklyNumberStartPrevIn\",\"type\":\"uint256\"},{\"name\":\"monthlyNumberStartPrevIn\",\"type\":\"uint256\"},{\"name\":\"seasonalNumberStartPrevIn\",\"type\":\"uint256\"},{\"name\":\"dailyNumberStartIn\",\"type\":\"uint256\"},{\"name\":\"weeklyNumberStartIn\",\"type\":\"uint256\"},{\"name\":\"monthlyNumberStartIn\",\"type\":\"uint256\"},{\"name\":\"seasonalNumberStartIn\",\"type\":\"uint256\"},{\"name\":\"dailyNumberEndPrevIn\",\"type\":\"uint256\"},{\"name\":\"weeklyNumberEndPrevIn\",\"type\":\"uint256\"},{\"name\":\"monthlyNumberEndPrevIn\",\"type\":\"uint256\"},{\"name\":\"seasonalNumberEndPrevIn\",\"type\":\"uint256\"}],\"name\":\"setOldVersion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newVersion\",\"type\":\"address\"}],\"name\":\"setNewVersion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"numbers\",\"type\":\"uint256[]\"}],\"name\":\"loadTickets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalNumberStartPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lotoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalProcessed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyNumberEndPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyProcessed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyNumberStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalNumberEndPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyProcessed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyNumberEndPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"settleJackpot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyProcessed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyNumberStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"bytes16\"},{\"name\":\"gamer\",\"type\":\"address\"}],\"name\":\"registerTicket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"loto\",\"type\":\"address\"}],\"name\":\"setLoto\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newVersionAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"settleSuperPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyNumberStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payIn\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"count\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"jackpotType\",\"type\":\"bytes1\"}],\"name\":\"Jackpot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes16\"},{\"indexed\":false,\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"Ticket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"SuperPrize\",\"type\":\"event\"}]",
  "bytecode": "6080604052600780547fffffffffffffffff0000000000000000000000000000000000000000ffffffff163364010000000002179055611805806100446000396000f3fe608060405260043610610208577c010000000000000000000000000000000000000000000000000000000060003504630cb282c6811461020a578063162d61cf146102315780631d2653b7146102465780632173d6e91461025b57806335b3e33f146102705780633ae6e66a146102855780633dda3b3a1461029a5780634d8c999b146102af57806350b44712146102c4578063542cd9f41461030a57806359c1334b1461038b5780635ce7d299146103a057806362eb78db146103d35780636588439c146104a25780636790baad146104b757806374536630146104cc578063755871b7146104e1578063764c8bf61461050a57806378c9773b1461051f57806383fbe833146105345780638401cec5146105495780638fd3ab801461055e5780639430c4801461057357806397b5a26214610588578063995020121461059d5780639b1a09bc146105b2578063a033a19c146105c7578063a6df6ad4146105dc578063ad1b1f8b146105f1578063b91d3f9514610606578063b93f9b0a1461061b578063b99e657114610645578063be94a4dc1461065a578063c056fee31461066f578063c4d2e0aa14610684578063ca16dfec146106d0578063cde36cc1146106e5578063d8220323146106fa578063e23fe94e1461072d578063e36c96eb14610742578063e96dbb6814610775578063fb5182081461078a578063fcddd0561461079f575b005b34801561021657600080fd5b5061021f6107a7565b60408051918252519081900360200190f35b34801561023d57600080fd5b5061021f6107ad565b34801561025257600080fd5b5061021f6107b3565b34801561026757600080fd5b5061021f6107b9565b34801561027c57600080fd5b5061021f6107bf565b34801561029157600080fd5b5061021f6107c5565b3480156102a657600080fd5b5061021f6107cb565b3480156102bb57600080fd5b5061021f6107d1565b3480156102d057600080fd5b506102ee600480360360208110156102e757600080fd5b50356107d7565b60408051600160a060020a039092168252519081900360200190f35b34801561031657600080fd5b5061020860048036036101a081101561032e57600080fd5b50600160a060020a038135169060208101359060408101359060608101359060808101359060a08101359060c08101359060e0810135906101008101359061012081013590610140810135906101608101359061018001356107f2565b34801561039757600080fd5b5061021f610be3565b3480156103ac57600080fd5b50610208600480360360208110156103c357600080fd5b5035600160a060020a0316610be9565b3480156103df57600080fd5b50610208600480360360408110156103f657600080fd5b81019060208101813564010000000081111561041157600080fd5b82018360208201111561042357600080fd5b8035906020019184602083028401116401000000008311171561044557600080fd5b91939092909160208101903564010000000081111561046357600080fd5b82018360208201111561047557600080fd5b8035906020019184602083028401116401000000008311171561049757600080fd5b509092509050610c37565b3480156104ae57600080fd5b5061021f610cc2565b3480156104c357600080fd5b5061021f610cc8565b3480156104d857600080fd5b506102ee610cce565b3480156104ed57600080fd5b506104f6610cdd565b604080519115158252519081900360200190f35b34801561051657600080fd5b5061021f610ced565b34801561052b57600080fd5b5061021f610cf3565b34801561054057600080fd5b506104f6610cf9565b34801561055557600080fd5b5061021f610d07565b34801561056a57600080fd5b50610208610d0d565b34801561057f57600080fd5b5061021f610d80565b34801561059457600080fd5b5061021f610d86565b3480156105a957600080fd5b5061021f610d8c565b3480156105be57600080fd5b506104f6610d92565b3480156105d357600080fd5b5061021f610da1565b3480156105e857600080fd5b5061021f610da7565b3480156105fd57600080fd5b50610208610dad565b34801561061257600080fd5b506104f661125b565b34801561062757600080fd5b506102ee6004803603602081101561063e57600080fd5b5035611264565b34801561065157600080fd5b5061021f611329565b34801561066657600080fd5b5061021f61132f565b34801561067b57600080fd5b5061021f611335565b34801561069057600080fd5b50610208600480360360408110156106a757600080fd5b5080356fffffffffffffffffffffffffffffffff19169060200135600160a060020a031661133b565b3480156106dc57600080fd5b5061021f6114f4565b3480156106f157600080fd5b5061021f6114fa565b34801561070657600080fd5b506102086004803603602081101561071d57600080fd5b5035600160a060020a0316611500565b34801561073957600080fd5b506102ee61154e565b34801561074e57600080fd5b506102086004803603602081101561076557600080fd5b5035600160a060020a031661155d565b34801561078157600080fd5b5061021f611669565b34801561079657600080fd5b5061021f61166f565b610208611675565b60015481565b600d5481565b601a5481565b60025481565b600b5481565b601b5481565b600c5481565b60125481565b600060208190529081526040902054600160a060020a031681565b6007546401000000009004600160a060020a0316331461081157600080fd5b600a805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038f16179055600160025561138880430402600f819055611388016013556007805460ff191660011790556188b88043040260108190556188b8016014556007805461ff001916610100179055620249f0804304026011819055620249f0016015556007805462ff00001916620100001790556206ddd08043040260128190556206ddd0016016556007805463ff00000019166301000000179055600b8c9055600c8b9055600d8a9055600e899055601788905560188790556019869055601a859055601b849055601c839055601d829055601e819055600a54604080517f0cb282c60000000000000000000000000000000000000000000000000000000081529051600160a060020a0390921691630cb282c691600481810192602092909190829003018186803b15801561096857600080fd5b505afa15801561097c573d6000803e3d6000fd5b505050506040513d602081101561099257600080fd5b5051600155600a54604080517f59c1334b0000000000000000000000000000000000000000000000000000000081529051600160a060020a03909216916359c1334b91600480820192602092909190829003018186803b1580156109f557600080fd5b505afa158015610a09573d6000803e3d6000fd5b505050506040513d6020811015610a1f57600080fd5b5051600355600a54604080517fca16dfec0000000000000000000000000000000000000000000000000000000081529051600160a060020a039092169163ca16dfec91600480820192602092909190829003018186803b158015610a8257600080fd5b505afa158015610a96573d6000803e3d6000fd5b505050506040513d6020811015610aac57600080fd5b50516004908155600a54604080517f6588439c0000000000000000000000000000000000000000000000000000000081529051600160a060020a0390921692636588439c928282019260209290829003018186803b158015610b0d57600080fd5b505afa158015610b21573d6000803e3d6000fd5b505050506040513d6020811015610b3757600080fd5b5051600555600a54604080517ffb5182080000000000000000000000000000000000000000000000000000000081529051600160a060020a039092169163fb51820891600480820192602092909190829003018186803b158015610b9a57600080fd5b505afa158015610bae573d6000803e3d6000fd5b505050506040513d6020811015610bc457600080fd5b505168010fff7da4c69d64000160065550505050505050505050505050565b60035481565b6007546401000000009004600160a060020a03163314610c0857600080fd5b6009805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60005b83811015610cbb57848482818110610c4e57fe5b90506020020135600160a060020a03166000808585858181101515610c6f57fe5b60209081029290920135835250810191909152604001600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600101610c3a565b5050505050565b60055481565b600e5481565b600854600160a060020a031681565b6007546301000000900460ff1681565b60145481565b601c5481565b600754610100900460ff1681565b60135481565b6007546401000000009004600160a060020a0316331480610d385750600954600160a060020a031633145b1515610d4357600080fd5b600954604051600160a060020a0390911690303180156108fc02916000818181858888f19350505050158015610d7d573d6000803e3d6000fd5b50565b60115481565b60195481565b601e5481565b60075462010000900460ff1681565b60165481565b601d5481565b6013544310610dbe57610dbe6116bc565b6014544310610dcf57610dcf6116ec565b6015544310610de057610de0611721565b6016544310610df157610df1611759565b600f54431480610e0657506101004303600f54105b15610e1057611259565b600f546007547a01000000000000000000000000000000000000000000000000000091406320000000029190910490600090819081908190819081908190819060ff161515610efa5760038054670de0b6b3a764000060548183020404908190039091556007805460ff19166001179055600b54601b54919950610e94918b611793565b600b54601b54604080518481529290910360010160208301528181018b90527f01000000000000000000000000000000000000000000000000000000000000006060830152519195506000805160206117ba833981519152916080918190039190910190a15b600754610100900460ff161515610fb457600454670de0b6b3a764000090600c9082020460048054929091049182900390556007805461ff001916610100179055600c54601c54919850610f4e918b611793565b600c54601c54604080518481529290910360010160208301528181018a90527f02000000000000000000000000000000000000000000000000000000000000006060830152519194506000805160206117ba833981519152916080918190039190910190a15b60075462010000900460ff16151561106b5760058054670de0b6b3a764000060038183020404908190039091556007805462ff0000191662010000179055600d54601d54919750611005918b611793565b600d54601d54604080518481529290910360010160208301528181018990527f04000000000000000000000000000000000000000000000000000000000000006060830152519193506000805160206117ba833981519152916080918190039190910190a15b6007546301000000900460ff161515611113576006805460009091556007805463ff00000019166301000000179055600e54601e549196506110ad918b611793565b600e54601e54604080518481529290910360010160208301528181018890527f08000000000000000000000000000000000000000000000000000000000000006060830152519192506000805160206117ba833981519152916080918190039190910190a15b600088111561116257600084815260208190526040808220549051600160a060020a03909116918a156108fc02918b91818181858888f19350505050158015611160573d6000803e3d6000fd5b505b60008711156111b157600083815260208190526040808220549051600160a060020a039091169189156108fc02918a91818181858888f193505050501580156111af573d6000803e3d6000fd5b505b600086111561120057600082815260208190526040808220549051600160a060020a039091169188156108fc02918991818181858888f193505050501580156111fe573d6000803e3d6000fd5b505b600085111561124f57600081815260208190526040808220549051600160a060020a039091169187156108fc02918891818181858888f1935050505015801561124d573d6000803e3d6000fd5b505b5050505050505050505b565b60075460ff1681565b600254600090821161130a57600a54604080517fb93f9b0a000000000000000000000000000000000000000000000000000000008152600481018590529051600160a060020a039092169163b93f9b0a916024808201926020929091908290030181600087803b1580156112d757600080fd5b505af11580156112eb573d6000803e3d6000fd5b505050506040513d602081101561130157600080fd5b50519050611324565b50600081815260208190526040902054600160a060020a03165b919050565b60105481565b60155481565b60185481565b600854600160a060020a031633146113b457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4c6f746f206f6e6c790000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6001805460135491019043106113d6576113cc6116bc565b60178190556113e8565b600b5460175414156113e85760178190555b6014544310611403576113f96116ec565b6018819055611415565b600c5460185414156114155760188190555b601554431061143057611426611721565b6019819055611442565b600d5460195414156114425760198190555b601654431061145d57611453611759565b601a81905561146f565b600e54601a54141561146f57601a8190555b600181905560008181526020818152604091829020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038616179055815183815291516fffffffffffffffffffffffffffffffff198616927feaeee4b63638ba79188cbacf3636200f388ed4f9792d1f2430efe55cb0bf0e1492908290030190a2505050565b60045481565b600f5481565b6007546401000000009004600160a060020a0316331461151f57600080fd5b6008805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600954600160a060020a031681565b600854600160a060020a031633146115d657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4c6f746f206f6e6c790000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6006546005546004546003546040805191909201909201909201808252600160a060020a0384166020830152825190927f41b5ae929902dbcdf93b6c894aa2ab762e017b6752ae8bc438284d4356662cee928290030190a1604051600160a060020a0383169082156108fc029083906000818181858888f19350505050158015611664573d6000803e3d6000fd5b505050565b60175481565b60065481565b6006546005546004546003540101013031811015610d7d57600380546004303193909303839004908101909155815481019091556005805482019055600680549091019055565b600154601b80546007805460ff191691841491909117905560138054600f819055611388019055601754600b5555565b600154601c80546007805461ff001916918414610100029190911790556014805460108190556188b8019055601854600c5555565b600154601d80546007805462ff000019169184146201000002919091179055601580546011819055620249f0019055601954600d5555565b600154601e80546007805463ff00000019169184146301000000029190911790556016805460128190556206ddd0019055601a54600e5555565b60008383036001018265ffffffffffff168115156117ad57fe5b0684019050939250505056fe6f5236d5a6a56dd7a75558e51fba2196b3f94a4b80cb678ae9896dceea2a4b03a165627a7a72305820d435eedf908bea369625dccbdb5e2bfa80f353c7fdb8a2e6e2e74edeffe3fb040029"
}