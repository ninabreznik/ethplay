{
  "address": "0x244c8c078368a47ab3343927edb6f78fbdc93524",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "PLT",
  "compilerVersion": "v0.4.21+commit.dfe3193c",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-27\n*/\n\npragma solidity ^0.4.21;\n\ncontract ERC20Interface {\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function transfer(address to, uint tokens) public returns (bool success);\n\tfunction allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n\tfunction approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n    event Transfer(address indexed from, address indexed to, uint tokens);\n}\n\ncontract PLT is ERC20Interface {\n\t\n\t\n\t// ERC20 //////////////\n\n\tfunction totalSupply()public constant returns (uint) {\n\t\treturn fixTotalBalance;\n\t}\n\t\n\tfunction balanceOf(address tokenOwner)public constant returns (uint balance) {\n\t\treturn balances[tokenOwner];\n\t}\n\n\tfunction transfer(address to, uint tokens)public returns (bool success) {\n\t\tif (balances[msg.sender] >= tokens && tokens > 0 && balances[to] + tokens > balances[to]) {\n\t\t\tif(msg.sender == creatorsAddress) //\n\t\t\t{\n\t\t\t\tTryUnLockCreatorBalance();\n\t\t\t\tif(balances[msg.sender] < (creatorsLocked + tokens))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbalances[msg.sender] -= tokens;\n\t\t\tbalances[to] += tokens;\n\t\t\temit Transfer(msg.sender, to, tokens);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction transferFrom(address from, address to, uint tokens)public returns (bool success) {\n\t\tif (balances[from] >= tokens && allowed[from][msg.sender] >= tokens && tokens > 0 && balances[to] + tokens > balances[to]) {\n\t\t\tif(from == creatorsAddress) //\n\t\t\t{\n\t\t\t\tTryUnLockCreatorBalance();\n\t\t\t\tif(balances[from] < (creatorsLocked + tokens))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbalances[from] -= tokens;\n\t\t\tallowed[from][msg.sender] -= tokens;\n\t\t\tbalances[to] += tokens;\n\t\t\temit Transfer(from, to, tokens);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\t\n\tfunction approve(address spender, uint tokens)public returns (bool success) {\n\t\tallowed[msg.sender][spender] = tokens;\n\t\temit Approval(msg.sender, spender, tokens);\n\t\treturn true;\n\t}\n\t\n\tfunction allowance(address tokenOwner, address spender)public constant returns (uint remaining) {\n\t\treturn allowed[tokenOwner][spender];\n\t}\n\t\n\n\t\n\tevent Transfer(address indexed from, address indexed to, uint tokens);//transfer方法调用时的通知事件\n\tevent Approval(address indexed tokenOwner, address indexed spender, uint tokens); //approve方法调用时的通知事件\n\n\t// ERC20 //////////////\n\t\t\n    string public name = \"Polaris\";\n    string public symbol = \"PLT\";\n    uint8 public decimals = 18;\n\tuint256 private fixTotalBalance = 850000000000000000000000000;\n\tuint256 private _totalBalance =   850000000000000000000000000;\n\tuint256 public creatorsLocked =   0; //\n\t\n\taddress public owner = 0x0;\n\t\n    \tmapping (address => uint256) balances;\n\tmapping(address => mapping (address => uint256)) allowed;\n\t\n\tuint  constant    private ONE_DAY_TIME_LEN = 86400; //一天的秒数\n\tuint  constant    private ONE_YEAR_TIME_LEN = 946080000; //一年的秒数\n\tuint32 private constant MAX_UINT32 = 0xFFFFFFFF;\n\t\n\t\n\taddress public creatorsAddress = 0xe9e93E42E89dBD754b22447045eCe22D1304C705; //\n\t\n\tuint      public unLockIdx = 2;\t\t//\n\tuint      public nextUnLockTime = block.timestamp + ONE_YEAR_TIME_LEN;\t//\n\n\t\n\t\n\n\n    function PLT() public {\n\t\n\t\towner = msg.sender;\n\t\tbalances[creatorsAddress] = creatorsLocked;\n\t\tbalances[owner] = _totalBalance;\n       \n    }\n\n\t\n\t\n\t\n\t\n\tfunction TryUnLockCreatorBalance() public {\n\t\twhile(unLockIdx > 0 && block.timestamp >= nextUnLockTime){ \n\t\t\tuint256 append = creatorsLocked/unLockIdx;\n\t\t\tcreatorsLocked -= append;\n\t\t\t\n\t\t\tunLockIdx -= 1;\n\t\t\tnextUnLockTime = block.timestamp + ONE_YEAR_TIME_LEN;\n\t\t}\n\t}\n\t\n\tfunction () public payable\n    {\n    }\n\t\n\tfunction Save() public {\n\t\tif (msg.sender != owner) revert();\n\n\t\towner.transfer(address(this).balance);\n    }\n\t\n\t\n\tfunction changeOwner(address newOwner) public {\n\t\tif (msg.sender != owner) \n\t\t{\n\t\t    revert();\n\t\t}\n\t\telse\n\t\t{\n\t\t\towner = newOwner;\n\t\t}\n    }\n\t\n\tfunction destruct() public {\n\t\tif (msg.sender != owner) \n\t\t{\n\t\t    revert();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tselfdestruct(owner);\n\t\t}\n    }\n}",
  "bytecode": "60606040526040805190810160405280600781526020017f506f6c61726973000000000000000000000000000000000000000000000000008152506000908051906020019062000051929190620002aa565b506040805190810160405280600381526020017f504c540000000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f929190620002aa565b506012600260006101000a81548160ff021916908360ff1602179055506b02bf1a8054a46d00920000006003556b02bf1a8054a46d009200000060045560006005556000600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073e9e93e42e89dbd754b22447045ece22d1304c705600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600a5563386409004201600b5534156200019357600080fd5b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060055460076000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060045460076000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000359565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002ed57805160ff19168380011785556200031e565b828001600101855582156200031e579182015b828111156200031d57825182559160200191906001019062000300565b5b5090506200032d919062000331565b5090565b6200035691905b808211156200035257600081600090555060010162000338565b5090565b90565b61126d80620003696000396000f3006060604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100fe578063095ea7b31461018c57806318160ddd146101e657806323b872dd1461020f57806325cbeb7e146102885780632b68b9c6146102dd578063313ce567146102f257806370a08231146103215780638344d26d1461036e57806388684aa5146103835780638da5cb5b146103ac57806395d89b4114610401578063a6f9dae11461048f578063a9059cbb146104c8578063ad6a054614610522578063c2e171d71461054b578063d1ce36aa14610560578063dd62ed3e14610589575b005b341561010957600080fd5b6101116105f5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610151578082015181840152602081019050610136565b50505050905090810190601f16801561017e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561019757600080fd5b6101cc600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610693565b604051808215151515815260200191505060405180910390f35b34156101f157600080fd5b6101f9610785565b6040518082815260200191505060405180910390f35b341561021a57600080fd5b61026e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061078f565b604051808215151515815260200191505060405180910390f35b341561029357600080fd5b61029b610b49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102e857600080fd5b6102f0610b6f565b005b34156102fd57600080fd5b610305610c06565b604051808260ff1660ff16815260200191505060405180910390f35b341561032c57600080fd5b610358600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610c19565b6040518082815260200191505060405180910390f35b341561037957600080fd5b610381610c62565b005b341561038e57600080fd5b610396610cc6565b6040518082815260200191505060405180910390f35b34156103b757600080fd5b6103bf610ccc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561040c57600080fd5b610414610cf2565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610454578082015181840152602081019050610439565b50505050905090810190601f1680156104815780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561049a57600080fd5b6104c6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d90565b005b34156104d357600080fd5b610508600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e30565b604051808215151515815260200191505060405180910390f35b341561052d57600080fd5b6105356110d7565b6040518082815260200191505060405180910390f35b341561055657600080fd5b61055e6110dd565b005b341561056b57600080fd5b6105736111b4565b6040518082815260200191505060405180910390f35b341561059457600080fd5b6105df600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ba565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561068b5780601f106106605761010080835404028352916020019161068b565b820191906000526020600020905b81548152906001019060200180831161066e57829003601f168201915b505050505081565b600081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600354905090565b600081600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015801561085c575081600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156108685750600082115b80156108f35750600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b15610b3d57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156109ab57610956610c62565b8160055401600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109aa5760009050610b42565b5b81600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050610b42565b600090505b9392505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bcb57600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600260009054906101000a900460ff1681565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60005b6000600a54118015610c795750600b544210155b15610cc357600a54600554811515610c8d57fe5b049050806005600082825403925050819055506001600a6000828254039250508190555063386409004201600b81905550610c65565b50565b600b5481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d885780601f10610d5d57610100808354040283529160200191610d88565b820191906000526020600020905b815481529060010190602001808311610d6b57829003601f168201915b505050505081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dec57600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610e815750600082115b8015610f0c5750600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b156110cc57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610fc457610f6f610c62565b8160055401600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610fc357600090506110d1565b5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190506110d1565b600090505b92915050565b60055481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561113957600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015156111b257600080fd5b565b600a5481565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a72305820436a2ddf6af3aa7681a109a34280f73b6a842992ea1ade272027add7037ab88b0029"
}