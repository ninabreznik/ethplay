{
  "address": "0x2a34949f2eba726370ae4b6659ae3ed697c744d0",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Blacklist",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-17\n*/\n\n// File: openzeppelin-solidity/contracts/access/Roles.sol\n\npragma solidity ^0.5.2;\n\n/**\n * @title Roles\n * @dev Library for managing addresses assigned to a Role.\n */\nlibrary Roles {\n    struct Role {\n        mapping (address => bool) bearer;\n    }\n\n    /**\n     * @dev give an account access to this role\n     */\n    function add(Role storage role, address account) internal {\n        require(account != address(0));\n        require(!has(role, account));\n\n        role.bearer[account] = true;\n    }\n\n    /**\n     * @dev remove an account's access to this role\n     */\n    function remove(Role storage role, address account) internal {\n        require(account != address(0));\n        require(has(role, account));\n\n        role.bearer[account] = false;\n    }\n\n    /**\n     * @dev check if an account has this role\n     * @return bool\n     */\n    function has(Role storage role, address account) internal view returns (bool) {\n        require(account != address(0));\n        return role.bearer[account];\n    }\n}\n\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\npragma solidity ^0.5.2;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @return the address of the owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n\n    /**\n     * @return true if `msg.sender` is the owner of the contract.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Allows the current owner to relinquish control of the contract.\n     * It will not be possible to call the functions with the `onlyOwner`\n     * modifier anymore.\n     * @notice Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// File: contracts/whitelist/IWhitelist.sol\n\npragma solidity ^0.5.0;\n\n\n// Interface to be implemented by the Whitelist contract.\ncontract IWhitelist {\n    function isWhitelisted(address account) public view returns (bool);\n}\n\n// File: contracts/whitelist/Blacklist.sol\n\npragma solidity ^0.5.0;\n\n\n\n\n\ncontract Blacklist is IWhitelist, Ownable {\n    using Roles for Roles.Role;\n\n    event BlacklistAdded(address indexed account);\n    event BlacklistRemoved(address indexed account);\n\n    Roles.Role private _blacklisted;\n\n    function addBlacklisted(address account) public onlyOwner {\n        _blacklisted.add(account);\n    }\n\n    function removeBlacklisted(address account) public onlyOwner {\n        _blacklisted.remove(account);\n    }\n\n    function isWhitelisted(address account) public view returns (bool) {\n        return !_blacklisted.has(account);\n    }\n}",
  "bytecode": "60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36103bd806100576000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ec5780638f32d59b14610110578063c6a276c214610118578063f2fde38b1461013e5761007d565b8063188efc16146100825780633af32abf146100aa578063715018a6146100e4575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b0316610164565b005b6100d0600480360360208110156100c057600080fd5b50356001600160a01b0316610189565b604080519115158252519081900360200190f35b6100a86101a3565b6100f46101fe565b604080516001600160a01b039092168252519081900360200190f35b6100d061020d565b6100a86004803603602081101561012e57600080fd5b50356001600160a01b031661021e565b6100a86004803603602081101561015457600080fd5b50356001600160a01b0316610240565b61016c61020d565b61017557600080fd5b61018660018263ffffffff61025a16565b50565b600061019c60018363ffffffff6102a616565b1592915050565b6101ab61020d565b6101b457600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61022661020d565b61022f57600080fd5b61018660018263ffffffff6102db16565b61024861020d565b61025157600080fd5b61018681610323565b6001600160a01b03811661026d57600080fd5b61027782826102a6565b1561028157600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166102bb57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b0381166102ee57600080fd5b6102f882826102a6565b61030157600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b03811661033657600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea165627a7a7230582068c7363ed12c2a0c10eebf5d30e3ea6f06d112086378352fdaa5d26e30aeb97a0029"
}