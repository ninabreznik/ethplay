{
  "address": "0xaa52b4c0884cf92a5825bd629f17844fe62a342a",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "GOENT",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-08-14\n*/\n\npragma solidity ^0.4.24;\n\nlibrary SafeMath {\n    function mul(uint a, uint b) internal pure returns (uint) {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint a, uint b) internal pure returns (uint) {\n        uint c = a / b;\n        return c;\n    }\n\n    function sub(uint a, uint b) internal pure returns (uint) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint a, uint b) internal pure returns (uint) {\n        uint c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract ERC20Basic {\n    uint public totalSupply;\n    function balanceOf(address who) public view returns (uint);\n    function transfer(address to, uint value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint value);\n}\n\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint;\n\n    mapping(address => uint) balances;\n\n    function transfer(address _to, uint _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) public view returns (uint balance) {\n        return balances[_owner];\n    }\n\n}\n\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public view returns (uint);\n\n    function transferFrom(address from, address to, uint value) public returns (bool);\n\n    function approve(address spender, uint value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint value);\n}\n\ncontract StandardToken is ERC20, BasicToken {\n\n    mapping (address => mapping (address => uint)) allowed;\n\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\n        require(_to != address(0));\n\n        uint _allowance = allowed[_from][msg.sender];\n\n        require (_value <= _allowance);\n        require(_value > 0);\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = _allowance.sub(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint _value) public returns (bool) {\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n}\n\ncontract GOENT is StandardToken {\n\n    string public constant name = \"GOEN TOKEN\";\n    string public constant symbol = \"GOENT\";\n    uint   public constant decimals = 8;\n    uint   public constant INITIAL_SUPPLY =  10000000000 * (10 ** decimals); \n\n    constructor() public { \n        totalSupply = INITIAL_SUPPLY;\n        balances[msg.sender] = INITIAL_SUPPLY;\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b50670de0b6b3a764000060008181553381526001602052604090205561083b8061003b6000396000f3006080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461018057806323b872dd146101a75780632ff2e9dc146101d1578063313ce567146101e657806366188463146101fb57806370a082311461021f57806395d89b4114610240578063a9059cbb14610255578063d73dd62314610279578063dd62ed3e1461029d575b600080fd5b3480156100ca57600080fd5b506100d36102c4565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b5061016c600160a060020a03600435166024356102fb565b604080519115158252519081900360200190f35b34801561018c57600080fd5b5061019561039d565b60408051918252519081900360200190f35b3480156101b357600080fd5b5061016c600160a060020a03600435811690602435166044356103a3565b3480156101dd57600080fd5b506101956104ed565b3480156101f257600080fd5b506101956104f9565b34801561020757600080fd5b5061016c600160a060020a03600435166024356104fe565b34801561022b57600080fd5b50610195600160a060020a03600435166105ee565b34801561024c57600080fd5b506100d3610609565b34801561026157600080fd5b5061016c600160a060020a0360043516602435610640565b34801561028557600080fd5b5061016c600160a060020a0360043516602435610723565b3480156102a957600080fd5b50610195600160a060020a03600435811690602435166107bc565b60408051808201909152600a81527f474f454e20544f4b454e00000000000000000000000000000000000000000000602082015281565b600081158061032b5750336000908152600260209081526040808320600160a060020a0387168452909152902054155b151561033657600080fd5b336000818152600260209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60005481565b600080600160a060020a03841615156103bb57600080fd5b50600160a060020a0384166000908152600260209081526040808320338452909152902054808311156103ed57600080fd5b600083116103fa57600080fd5b600160a060020a038516600090815260016020526040902054610423908463ffffffff6107e716565b600160a060020a038087166000908152600160205260408082209390935590861681522054610458908463ffffffff6107f916565b600160a060020a038516600090815260016020526040902055610481818463ffffffff6107e716565b600160a060020a03808716600081815260026020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001949350505050565b670de0b6b3a764000081565b600881565b336000908152600260209081526040808320600160a060020a03861684529091528120548083111561055357336000908152600260209081526040808320600160a060020a0388168452909152812055610588565b610563818463ffffffff6107e716565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526001602052604090205490565b60408051808201909152600581527f474f454e54000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a038316151561065757600080fd5b3360009081526001602052604090205482111561067357600080fd5b33600090815260016020526040902054610693908363ffffffff6107e716565b3360009081526001602052604080822092909255600160a060020a038516815220546106c5908363ffffffff6107f916565b600160a060020a0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610757908363ffffffff6107f916565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156107f357fe5b50900390565b60008282018381101561080857fe5b93925050505600a165627a7a72305820130da218f9fe976e9d9e6a17d10f4f8a4b3a16c7e02221308a054ee2fe4427cc0029"
}