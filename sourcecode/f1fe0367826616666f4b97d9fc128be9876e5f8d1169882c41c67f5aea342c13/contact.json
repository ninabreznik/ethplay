{
  "address": "0x26f7fbbfd126eca1b28514eb6f279f0b5293308b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CompanyToken",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-03\n*/\n\npragma solidity 0.4.25;\n\n// File: contracts\\lib\\ERC20Basic.sol\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n// File: contracts\\lib\\SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n// File: contracts\\lib\\BasicToken.sol\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0), 'Receiving address cannot be 0!');\n    require(_value <= balances[msg.sender], 'Not enough token funds for sender!');\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n}\n\n// File: contracts\\lib\\ERC20.sol\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 {\n    function allowance(address owner, address spender) public view returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address who) public view returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n// File: contracts\\lib\\StandardToken.sol\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n// File: contracts\\lib\\Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @return the address of the owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"only owner is able call this function\");\n        _;\n    }\n\n    /**\n     * @return true if `msg.sender` is the owner of the contract.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Allows the current owner to relinquish control of the contract.\n     * @notice Renouncing to ownership will leave the contract without an owner.\n     * It will not be possible to call the functions with the `onlyOwner`\n     * modifier anymore.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// File: contracts\\lib\\MintableToken.sol\n\n/**\n * @title Mintable token\n * @dev Simple ERC20 Token example, with mintable token creation\n * @dev Issue: * https://github.com/OpenZeppelin/zeppelin-solidity/issues/120\n * Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\n */\ncontract MintableToken is StandardToken, Ownable {\n  event Mint(address indexed to, uint256 amount);\n  event MintFinished();\n\n  bool public mintingFinished = false;\n\n\n  modifier canMint() {\n    require(!mintingFinished);\n    _;\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\n    totalSupply_ = totalSupply_.add(_amount);\n    balances[_to] = balances[_to].add(_amount);\n    emit Mint(_to, _amount);\n    emit Transfer(address(0), _to, _amount);\n    return true;\n  }\n\n  /**\n   * @dev Function to stop minting new tokens.\n   * @return True if the operation was successful.\n   */\n  function finishMinting() onlyOwner canMint public returns (bool) {\n    mintingFinished = true;\n    emit MintFinished();\n    return true;\n  }\n}\n\n// File: contracts\\lib\\Pausable.sol\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n    event Pause();\n    event Unpause();\n\n    bool private _paused;\n\n    constructor () internal {\n        _paused = false;\n    }\n\n    /**\n     * @return true if the contract is paused, false otherwise.\n     */\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!_paused, \"must not be paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     */\n    modifier whenPaused() {\n        require(_paused, \"must be paused\");\n        _;\n    }\n\n    /**\n     * @dev called by the owner to pause, triggers stopped state\n     */\n    function pause() public onlyOwner whenNotPaused {\n        _paused = true;\n        emit Pause();\n    }\n\n    /**\n     * @dev called by the owner to unpause, returns to normal state\n     */\n    function unpause() onlyOwner whenPaused public {\n        _paused = false;\n        emit Unpause();\n    }\n}\n\n// File: contracts\\lib\\PausableToken.sol\n\n/**\n * @title Pausable token\n * @dev StandardToken modified with pausable transfers.\n **/\ncontract PausableToken is StandardToken, Pausable {\n\n  function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transfer(_to, _value);\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transferFrom(_from, _to, _value);\n  }\n\n  function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n    return super.approve(_spender, _value);\n  }\n\n  function increaseApproval(address _spender, uint _addedValue) public whenNotPaused returns (bool success) {\n    return super.increaseApproval(_spender, _addedValue);\n  }\n\n  function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool success) {\n    return super.decreaseApproval(_spender, _subtractedValue);\n  }\n}\n\n// File: contracts\\CompanyToken.sol\n\n/**\n * @title CompanyToken contract - ERC20 compatible token contract with customized token parameters.\n * @author Gustavo Guimaraes - <[email protected]>\n */\ncontract CompanyToken is PausableToken, MintableToken {\n    string private _name;\n    string private _symbol;\n    uint8 constant private _decimals = 18;\n\n    /**\n     * @dev Contract constructor function\n     * @param name Token name\n     * @param symbol Token symbol - up to 4 characters\n     */\n    constructor(string name, string symbol) public {\n        _name = name;\n        _symbol = symbol;\n\n        pause();\n    }\n\n    /**\n     * @return the name of the token.\n     */\n    function name() public view returns (string) {\n        return _name;\n    }\n\n    /**\n     * @return the symbol of the token.\n     */\n    function symbol() public view returns (string) {\n        return _symbol;\n    }\n\n    /**\n     * @return the number of decimals of the token.\n     */\n    function decimals() public pure returns (uint8) {\n        return _decimals;\n    }\n}",
  "bytecode": "60806040526003805460a860020a60ff02191690553480156200002157600080fd5b506040516200168e3803806200168e8339810160408190528151602083015160038054600160a060020a031916331790819055918401930191600160a060020a0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36003805460a060020a60ff02191690558151620000b49060049060208501906200027c565b508051620000ca9060059060208401906200027c565b50620000de640100000000620000e6810204565b50506200031e565b620000f96401000000006200026a810204565b15156200018d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f6f6e6c79206f776e65722069732061626c652063616c6c20746869732066756e60448201527f6374696f6e000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60035474010000000000000000000000000000000000000000900460ff16156200021857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6d757374206e6f74206265207061757365640000000000000000000000000000604482015290519081900360640190fd5b6003805460a060020a60ff021916740100000000000000000000000000000000000000001790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600354600160a060020a031633145b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002bf57805160ff1916838001178555620002ef565b82800160010185558215620002ef579182015b82811115620002ef578251825591602001919060010190620002d2565b50620002fd92915062000301565b5090565b6200027991905b80821115620002fd576000815560010162000308565b611360806200032e6000396000f3006080604052600436106101275763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461012c57806306fdde0314610155578063095ea7b3146101df57806318160ddd1461020357806323b872dd1461022a578063313ce567146102545780633f4ba83a1461027f57806340c10f19146102965780635c975abb146102ba57806366188463146102cf57806370a08231146102f3578063715018a6146103145780637d64bcb4146103295780638456cb591461033e5780638da5cb5b146103535780638f32d59b1461038457806395d89b4114610399578063a9059cbb146103ae578063b2bdfa7b146103d2578063d73dd623146103e7578063dd62ed3e1461040b578063f2fde38b14610432575b600080fd5b34801561013857600080fd5b50610141610453565b604080519115158252519081900360200190f35b34801561016157600080fd5b5061016a610475565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a457818101518382015260200161018c565b50505050905090810190601f1680156101d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101eb57600080fd5b50610141600160a060020a036004351660243561050b565b34801561020f57600080fd5b5061021861056f565b60408051918252519081900360200190f35b34801561023657600080fd5b50610141600160a060020a0360043581169060243516604435610575565b34801561026057600080fd5b506102696105db565b6040805160ff9092168252519081900360200190f35b34801561028b57600080fd5b506102946105e0565b005b3480156102a257600080fd5b50610141600160a060020a03600435166024356106e9565b3480156102c657600080fd5b5061014161084a565b3480156102db57600080fd5b50610141600160a060020a036004351660243561085a565b3480156102ff57600080fd5b50610218600160a060020a03600435166108b7565b34801561032057600080fd5b506102946108d2565b34801561033557600080fd5b50610141610986565b34801561034a57600080fd5b50610294610a74565b34801561035f57600080fd5b50610368610b70565b60408051600160a060020a039092168252519081900360200190f35b34801561039057600080fd5b50610141610b7f565b3480156103a557600080fd5b5061016a610b90565b3480156103ba57600080fd5b50610141600160a060020a0360043516602435610bf1565b3480156103de57600080fd5b50610368610c4e565b3480156103f357600080fd5b50610141600160a060020a0360043516602435610c5d565b34801561041757600080fd5b50610218600160a060020a0360043581169060243516610cba565b34801561043e57600080fd5b50610294600160a060020a0360043516610ce5565b6003547501000000000000000000000000000000000000000000900460ff1681565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105015780601f106104d657610100808354040283529160200191610501565b820191906000526020600020905b8154815290600101906020018083116104e457829003601f168201915b5050505050905090565b60035460009060a060020a900460ff161561055e576040805160e560020a62461bcd02815260206004820152601260248201526000805160206112f5833981519152604482015290519081900360640190fd5b6105688383610d4e565b9392505050565b60015490565b60035460009060a060020a900460ff16156105c8576040805160e560020a62461bcd02815260206004820152601260248201526000805160206112f5833981519152604482015290519081900360640190fd5b6105d3848484610db4565b949350505050565b601290565b6105e8610b7f565b151561063d576040805160e560020a62461bcd0281526020600482015260256024820152600080516020611315833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b60035460a060020a900460ff1615156106a0576040805160e560020a62461bcd02815260206004820152600e60248201527f6d75737420626520706175736564000000000000000000000000000000000000604482015290519081900360640190fd5b6003805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b60006106f3610b7f565b1515610748576040805160e560020a62461bcd0281526020600482015260256024820152600080516020611315833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b6003547501000000000000000000000000000000000000000000900460ff161561077157600080fd5b600154610784908363ffffffff610f2b16565b600155600160a060020a0383166000908152602081905260409020546107b0908363ffffffff610f2b16565b600160a060020a03841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b60035460a060020a900460ff1690565b60035460009060a060020a900460ff16156108ad576040805160e560020a62461bcd02815260206004820152601260248201526000805160206112f5833981519152604482015290519081900360640190fd5b6105688383610f3e565b600160a060020a031660009081526020819052604090205490565b6108da610b7f565b151561092f576040805160e560020a62461bcd0281526020600482015260256024820152600080516020611315833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b600354604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36003805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000610990610b7f565b15156109e5576040805160e560020a62461bcd0281526020600482015260256024820152600080516020611315833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b6003547501000000000000000000000000000000000000000000900460ff1615610a0e57600080fd5b6003805475ff000000000000000000000000000000000000000000191675010000000000000000000000000000000000000000001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b610a7c610b7f565b1515610ad1576040805160e560020a62461bcd0281526020600482015260256024820152600080516020611315833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b60035460a060020a900460ff1615610b21576040805160e560020a62461bcd02815260206004820152601260248201526000805160206112f5833981519152604482015290519081900360640190fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600354600160a060020a031690565b600354600160a060020a0316331490565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105015780601f106104d657610100808354040283529160200191610501565b60035460009060a060020a900460ff1615610c44576040805160e560020a62461bcd02815260206004820152601260248201526000805160206112f5833981519152604482015290519081900360640190fd5b610568838361102e565b600354600160a060020a031681565b60035460009060a060020a900460ff1615610cb0576040805160e560020a62461bcd02815260206004820152601260248201526000805160206112f5833981519152604482015290519081900360640190fd5b61056883836111cb565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b610ced610b7f565b1515610d42576040805160e560020a62461bcd0281526020600482015260256024820152600080516020611315833981519152604482015260d960020a6431ba34b7b702606482015290519081900360840190fd5b610d4b81611264565b50565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6000600160a060020a0383161515610dcb57600080fd5b600160a060020a038416600090815260208190526040902054821115610df057600080fd5b600160a060020a0384166000908152600260209081526040808320338452909152902054821115610e2057600080fd5b600160a060020a038416600090815260208190526040902054610e49908363ffffffff6112e216565b600160a060020a038086166000908152602081905260408082209390935590851681522054610e7e908363ffffffff610f2b16565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610ec0908363ffffffff6112e216565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b81810182811015610f3857fe5b92915050565b336000908152600260209081526040808320600160a060020a038616845290915281205480831115610f9357336000908152600260209081526040808320600160a060020a0388168452909152812055610fc8565b610fa3818463ffffffff6112e216565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a0383161515611090576040805160e560020a62461bcd02815260206004820152601e60248201527f526563656976696e6720616464726573732063616e6e6f742062652030210000604482015290519081900360640190fd5b3360009081526020819052604090205482111561111d576040805160e560020a62461bcd02815260206004820152602260248201527f4e6f7420656e6f75676820746f6b656e2066756e647320666f722073656e646560448201527f7221000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b3360009081526020819052604090205461113d908363ffffffff6112e216565b3360009081526020819052604080822092909255600160a060020a0385168152205461116f908363ffffffff610f2b16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a03861684529091528120546111ff908363ffffffff610f2b16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a038116151561127957600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000828211156112ee57fe5b5090039056006d757374206e6f742062652070617573656400000000000000000000000000006f6e6c79206f776e65722069732061626c652063616c6c20746869732066756ea165627a7a7230582036c04520eb3939bc39aa4ed134a5d497581ecb64f86759d099286d1cc084fd010029000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000012554e535543434553532d51412d544f4b454e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045551415400000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000012554e535543434553532d51412d544f4b454e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045551415400000000000000000000000000000000000000000000000000000000"
}