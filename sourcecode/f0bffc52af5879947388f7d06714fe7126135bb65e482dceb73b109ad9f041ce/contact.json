{
  "address": "0x1c79ab32c66acaa1e9e81952b8aaa581b43e54e7",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TeamToken",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-03-07\n*/\n\npragma solidity ^0.4.18;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  /**\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    // SafeMath.sub will throw if there is not enough balance.\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) public view returns (uint256);\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n/**\n * @title Mintable token\n * @dev Simple ERC20 Token example, with mintable token creation\n * @dev Issue: * https://github.com/OpenZeppelin/zeppelin-solidity/issues/120\n * Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\n */\ncontract MintableToken is StandardToken, Ownable {\n  event Mint(address indexed to, uint256 amount);\n  event MintFinished();\n\n  bool public mintingFinished = false;\n\n\n  modifier canMint() {\n    require(!mintingFinished);\n    _;\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\n    totalSupply_ = totalSupply_.add(_amount);\n    balances[_to] = balances[_to].add(_amount);\n    Mint(_to, _amount);\n    Transfer(address(0), _to, _amount);\n    return true;\n  }\n\n  /**\n   * @dev Function to stop minting new tokens.\n   * @return True if the operation was successful.\n   */\n  function finishMinting() onlyOwner canMint public returns (bool) {\n    mintingFinished = true;\n    MintFinished();\n    return true;\n  }\n}\n\n// TEAM Token is an index token of TokenStars platform\n// Copyright (c) 2017 TokenStars\n// Made by Aler Denisov\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n\n\n\n\ncontract StarTokenInterface is MintableToken {\n    // Cheatsheet of inherit methods and events\n    // function transferOwnership(address newOwner);\n    // function allowance(address owner, address spender) constant returns (uint256);\n    // function transfer(address _to, uint256 _value) returns (bool);\n    // function transferFrom(address from, address to, uint256 value) returns (bool);\n    // function approve(address spender, uint256 value) returns (bool);\n    // function increaseApproval (address _spender, uint _addedValue) returns (bool success);\n    // function decreaseApproval (address _spender, uint _subtractedValue) returns (bool success);\n    // function finishMinting() returns (bool);\n    // function mint(address _to, uint256 _amount) returns (bool);\n    // event Approval(address indexed owner, address indexed spender, uint256 value);\n    // event Mint(address indexed to, uint256 amount);\n    // event MintFinished();\n\n    // Custom methods and events\n    function openTransfer() public returns (bool);\n    function toggleTransferFor(address _for) public returns (bool);\n    function extraMint() public returns (bool);\n\n    event TransferAllowed();\n    event TransferAllowanceFor(address indexed who, bool indexed state);\n\n\n}\n\n// TEAM Token is an index token of TokenStars platform\n// Copyright (c) 2017 TokenStars\n// Made by Aler Denisov\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n\n\n\n\n\ncontract TeamToken is StarTokenInterface {\n    using SafeMath for uint256;\n    \n    // ERC20 constants\n    string public constant name = \"TEAM\";\n    string public constant symbol = \"TEAM\";\n    uint public constant decimals = 4;\n\n    // Minting constants\n    uint256 public constant MAXSOLD_SUPPLY = 450000000000;\n    uint256 public constant HARDCAPPED_SUPPLY = 750000000000;\n\n    uint256 public investorSupply = 0;\n    uint256 public extraSupply = 0;\n    uint256 public freeToExtraMinting = 0;\n\n    uint256 public constant DISTRIBUTION_INVESTORS = 60;\n    uint256 public constant DISTRIBUTION_TEAM      = 20;\n    uint256 public constant DISTRIBUTION_COMMUNITY = 20;\n\n    address public teamTokensHolder;\n    address public communityTokensHolder;\n\n    // Transfer rules\n    bool public transferAllowed = false;\n    mapping (address=>bool) public specialAllowed;\n\n    // Transfer rules events\n    // event TransferAllowed();\n    // event TransferAllowanceFor(address indexed who, bool indexed state);\n\n    // Holders events\n    event ChangeCommunityHolder(address indexed from, address indexed to);\n    event ChangeTeamHolder(address indexed from, address indexed to);\n\n    /**\n    * @dev check transfer is allowed\n    */\n    modifier allowTransfer() {\n        require(transferAllowed || specialAllowed[msg.sender]);\n        _;\n    }\n\n    function TeamToken() public {\n      teamTokensHolder = msg.sender;\n      communityTokensHolder = msg.sender;\n\n      ChangeTeamHolder(0x0, teamTokensHolder);\n      ChangeCommunityHolder(0x0, communityTokensHolder);\n    }\n\n    /**\n    * @dev change team tokens holder\n    * @param _tokenHolder The address of next team tokens holder\n    */\n    function setTeamTokensHolder(address _tokenHolder) onlyOwner public returns (bool) {\n      require(_tokenHolder != 0);\n      address temporaryEventAddress = teamTokensHolder;\n      teamTokensHolder = _tokenHolder;\n      ChangeTeamHolder(temporaryEventAddress, teamTokensHolder);\n      return true;\n    }\n\n    /**\n    * @dev change community tokens holder\n    * @param _tokenHolder The address of next community tokens holder\n    */\n    function setCommunityTokensHolder(address _tokenHolder) onlyOwner public returns (bool) {\n      require(_tokenHolder != 0);\n      address temporaryEventAddress = communityTokensHolder;\n      communityTokensHolder = _tokenHolder;\n      ChangeCommunityHolder(temporaryEventAddress, communityTokensHolder);\n      return true;\n    }\n\n    /**\n    * @dev Doesn't allow to send funds on contract!\n    */\n    function () payable public {\n        require(false);\n    }\n\n    /**\n    * @dev transfer token for a specified address if transfer is open\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) allowTransfer public returns (bool) {\n        return super.transfer(_to, _value);\n    }\n\n    \n    /**\n    * @dev Transfer tokens from one address to another if transfer is open\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address _from, address _to, uint256 _value) allowTransfer public returns (bool) {\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    /**\n    * @dev Open transfer for everyone or throws\n     */\n    function openTransfer() onlyOwner public returns (bool) {\n        require(!transferAllowed);\n        transferAllowed = true;\n        TransferAllowed();\n        return true;\n    }\n\n    /**\n    * @dev allow transfer for the given address against global rules\n    * @param _for addres The address of special allowed transfer (required for smart contracts)\n     */\n    function toggleTransferFor(address _for) onlyOwner public returns (bool) {\n        specialAllowed[_for] = !specialAllowed[_for];\n        TransferAllowanceFor(_for, specialAllowed[_for]);\n        return specialAllowed[_for];\n    }\n\n    /**\n    * @dev Function to mint tokens for investor\n    * @param _to The address that will receive the minted tokens.\n    * @param _amount The amount of tokens to emit.\n    * @return A boolean that indicates if the operation was successful.\n    */\n    function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\n        require(_amount > 0);\n        totalSupply_ = totalSupply_.add(_amount);\n        investorSupply = investorSupply.add(_amount);\n        freeToExtraMinting = freeToExtraMinting.add(_amount);\n\n        // Prevent to emit more than sale hardcap!\n        assert(investorSupply <= MAXSOLD_SUPPLY);\n        assert(totalSupply_ <= HARDCAPPED_SUPPLY);\n\n        balances[_to] = balances[_to].add(_amount);\n        Mint(_to, _amount);\n        Transfer(address(this), _to, _amount);\n        return true;\n    }\n\n\n    /**\n    * @dev Mint extra token to corresponding token and community holders\n    */\n    function extraMint() onlyOwner canMint public returns (bool) {\n      require(freeToExtraMinting > 0);\n\n      uint256 onePercent = freeToExtraMinting / DISTRIBUTION_INVESTORS;\n      uint256 teamPart = onePercent * DISTRIBUTION_TEAM;\n      uint256 communityPart = onePercent * DISTRIBUTION_COMMUNITY;\n      uint256 extraTokens = teamPart.add(communityPart);\n\n      totalSupply_ = totalSupply_.add(extraTokens);\n      extraSupply = extraSupply.add(extraTokens);\n\n      uint256 leftToNextMinting = freeToExtraMinting % DISTRIBUTION_INVESTORS;\n      freeToExtraMinting = leftToNextMinting;\n\n      assert(totalSupply_ <= HARDCAPPED_SUPPLY);\n      assert(extraSupply <= HARDCAPPED_SUPPLY.sub(MAXSOLD_SUPPLY));\n\n      balances[teamTokensHolder] = balances[teamTokensHolder].add(teamPart);\n      balances[communityTokensHolder] = balances[communityTokensHolder].add(communityPart);\n\n      Mint(teamTokensHolder, teamPart);\n      Transfer(address(this), teamTokensHolder, teamPart);\n      Mint(communityTokensHolder, communityPart);\n      Transfer(address(this), communityTokensHolder, communityPart);\n\n      return true;\n    }\n\n    /**\n    * @dev Increase approved amount to spend \n    * @param _spender The address which will spend the funds.\n    * @param _addedValue The amount of tokens to increase already approved amount. \n     */\n    function increaseApproval (address _spender, uint _addedValue)  public returns (bool success) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    /**\n    * @dev Decrease approved amount to spend \n    * @param _spender The address which will spend the funds.\n    * @param _subtractedValue The amount of tokens to decrease already approved amount. \n     */\n    function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n\n    function finilize() onlyOwner public returns (bool) {\n        require(mintingFinished);\n        require(transferAllowed);\n\n        owner = 0x0;\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"toggleTransferFor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"specialAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finilize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DISTRIBUTION_INVESTORS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"communityTokensHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DISTRIBUTION_TEAM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"freeToExtraMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAXSOLD_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenHolder\",\"type\":\"address\"}],\"name\":\"setTeamTokensHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DISTRIBUTION_COMMUNITY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenHolder\",\"type\":\"address\"}],\"name\":\"setCommunityTokensHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"extraSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"extraMint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investorSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamTokensHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HARDCAPPED_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ChangeCommunityHolder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ChangeTeamHolder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TransferAllowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"who\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"TransferAllowanceFor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "60606040526003805460a060020a60ff0219908116909155600060048190556005819055600655600880549091169055341561003a57600080fd5b60038054600160a060020a03338116600160a060020a03199283168117909355600780548316841790819055600880549093169093179091551660007f6eafbe888d6820eae9a9afe73b56c4ee57e9d5ddd95f9a276ce00e1e34e6c70660405160405180910390a3600854600160a060020a031660007fc83ac557199800e98db357637b4350ad3bce0ae12849c192d960d22e32e6cf2e60405160405180910390a36113cb806100eb6000396000f3006060604052600436106101ab5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b81146101b257806306fdde03146101d9578063095ea7b31461026357806317d286201461028557806318160ddd146102a45780632395e9b6146102c957806323b872dd146102e857806329a3fab9146103105780632f0c59e714610323578063313ce5671461033657806334fec4671461034957806335b1097e1461035c578063384c440b1461038b57806340c10f191461039e57806356d0adac146103c057806366188463146103d35780636e349188146103f5578063708cfb251461040857806370a082311461042757806374e007301461038b5780637d64bcb4146104465780638da5cb5b1461045957806395d89b41146101d95780639acdc0e31461046c578063a9059cbb1461048b578063ad35bdb0146104ad578063af24d25c146104c0578063d73dd623146104d3578063d862b611146104f5578063dc79d06914610508578063dd62ed3e1461051b578063ed6a897d14610540578063f2fde38b14610553578063f344f4fa14610572575b600080fd5b005b34156101bd57600080fd5b6101c5610585565b604051901515815260200160405180910390f35b34156101e457600080fd5b6101ec610595565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610228578082015183820152602001610210565b50505050905090810190601f1680156102555780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561026e57600080fd5b6101c5600160a060020a03600435166024356105cc565b341561029057600080fd5b6101c5600160a060020a0360043516610638565b34156102af57600080fd5b6102b76106d1565b60405190815260200160405180910390f35b34156102d457600080fd5b6101c5600160a060020a03600435166106d7565b34156102f357600080fd5b6101c5600160a060020a03600435811690602435166044356106ec565b341561031b57600080fd5b6101c561073d565b341561032e57600080fd5b6102b76107ae565b341561034157600080fd5b6102b76107b3565b341561035457600080fd5b6101c56107b8565b341561036757600080fd5b61036f6107c8565b604051600160a060020a03909116815260200160405180910390f35b341561039657600080fd5b6102b76107d7565b34156103a957600080fd5b6101c5600160a060020a03600435166024356107dc565b34156103cb57600080fd5b6102b761093d565b34156103de57600080fd5b6101c5600160a060020a0360043516602435610943565b341561040057600080fd5b6102b7610a3d565b341561041357600080fd5b6101c5600160a060020a0360043516610a46565b341561043257600080fd5b6102b7600160a060020a0360043516610ae3565b341561045157600080fd5b6101c5610afe565b341561046457600080fd5b61036f610b89565b341561047757600080fd5b6101c5600160a060020a0360043516610b98565b341561049657600080fd5b6101c5600160a060020a0360043516602435610c35565b34156104b857600080fd5b6102b7610c84565b34156104cb57600080fd5b6101c5610c8a565b34156104de57600080fd5b6101c5600160a060020a0360043516602435610d15565b341561050057600080fd5b6101c5610db9565b341561051357600080fd5b6102b761100c565b341561052657600080fd5b6102b7600160a060020a0360043581169060243516611012565b341561054b57600080fd5b61036f61103d565b341561055e57600080fd5b6101b0600160a060020a036004351661104c565b341561057d57600080fd5b6102b76110e7565b60035460a060020a900460ff1681565b60408051908101604052600481527f5445414d00000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60035460009033600160a060020a0390811691161461065657600080fd5b600160a060020a03821660008181526009602052604090819020805460ff19811660ff91821615179182905516151591907f3b283ff94b6c19f9f0602ecb251a7c81e54d243ae128dd1a958d50a7be16d53e905160405180910390a350600160a060020a031660009081526009602052604090205460ff1690565b60015490565b60096020526000908152604090205460ff1681565b60085460009060a060020a900460ff168061071f5750600160a060020a03331660009081526009602052604090205460ff165b151561072a57600080fd5b6107358484846110f0565b949350505050565b60035460009033600160a060020a0390811691161461075b57600080fd5b60035460a060020a900460ff16151561077357600080fd5b60085460a060020a900460ff16151561078b57600080fd5b506003805473ffffffffffffffffffffffffffffffffffffffff19169055600190565b603c81565b600481565b60085460a060020a900460ff1681565b600854600160a060020a031681565b601481565b60035460009033600160a060020a039081169116146107fa57600080fd5b60035460a060020a900460ff161561081157600080fd5b6000821161081e57600080fd5b600154610831908363ffffffff61125e16565b600155600454610847908363ffffffff61125e16565b60045560065461085d908363ffffffff61125e16565b6006556004546468c617140090111561087257fe5b60015464ae9f7bcc0090111561088457fe5b600160a060020a0383166000908152602081905260409020546108ad908363ffffffff61125e16565b600160a060020a0384166000818152602081905260409081902092909255907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859084905190815260200160405180910390a282600160a060020a031630600160a060020a03166000805160206113808339815191528460405190815260200160405180910390a350600192915050565b60065481565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054808311156109a057600160a060020a0333811660009081526002602090815260408083209388168352929052908120556109d7565b6109b0818463ffffffff61126d16565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b6468c617140081565b600354600090819033600160a060020a03908116911614610a6657600080fd5b600160a060020a0383161515610a7b57600080fd5b5060078054600160a060020a0384811673ffffffffffffffffffffffffffffffffffffffff19831617928390559081169116817f6eafbe888d6820eae9a9afe73b56c4ee57e9d5ddd95f9a276ce00e1e34e6c70660405160405180910390a350600192915050565b600160a060020a031660009081526020819052604090205490565b60035460009033600160a060020a03908116911614610b1c57600080fd5b60035460a060020a900460ff1615610b3357600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790557fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a150600190565b600354600160a060020a031681565b600354600090819033600160a060020a03908116911614610bb857600080fd5b600160a060020a0383161515610bcd57600080fd5b5060088054600160a060020a0384811673ffffffffffffffffffffffffffffffffffffffff19831617928390559081169116817fc83ac557199800e98db357637b4350ad3bce0ae12849c192d960d22e32e6cf2e60405160405180910390a350600192915050565b60085460009060a060020a900460ff1680610c685750600160a060020a03331660009081526009602052604090205460ff165b1515610c7357600080fd5b610c7d838361127f565b9392505050565b60055481565b60035460009033600160a060020a03908116911614610ca857600080fd5b60085460a060020a900460ff1615610cbf57600080fd5b6008805474ff0000000000000000000000000000000000000000191660a060020a1790557f795b0e16c8da9807b0a215f3749bd6dbcc49fc0472183f4e446abb7dcbd9d00760405160405180910390a150600190565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610d4d908363ffffffff61125e16565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b6003546000908190819081908190819033600160a060020a03908116911614610de157600080fd5b60035460a060020a900460ff1615610df857600080fd5b60065460009011610e0857600080fd5b600654603c90049450601485029350839250610e2a838063ffffffff61125e16565b600154909250610e40908363ffffffff61125e16565b600155600554610e56908363ffffffff61125e16565b6005555060068054603c90069081905560015464ae9f7bcc00901115610e7857fe5b610e9264ae9f7bcc006468c617140063ffffffff61126d16565b6005541115610e9d57fe5b600754600160a060020a0316600090815260208190526040902054610ec8908563ffffffff61125e16565b600754600160a060020a039081166000908152602081905260408082209390935560085490911681522054610f03908463ffffffff61125e16565b600854600160a060020a03908116600090815260208190526040908190209290925560075416907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859086905190815260200160405180910390a2600754600160a060020a039081169030166000805160206113808339815191528660405190815260200160405180910390a3600854600160a060020a03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968858460405190815260200160405180910390a2600854600160a060020a039081169030166000805160206113808339815191528560405190815260200160405180910390a360019550505050505090565b60045481565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600754600160a060020a031681565b60035433600160a060020a0390811691161461106757600080fd5b600160a060020a038116151561107c57600080fd5b600354600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b64ae9f7bcc0081565b6000600160a060020a038316151561110757600080fd5b600160a060020a03841660009081526020819052604090205482111561112c57600080fd5b600160a060020a038085166000908152600260209081526040808320339094168352929052205482111561115f57600080fd5b600160a060020a038416600090815260208190526040902054611188908363ffffffff61126d16565b600160a060020a0380861660009081526020819052604080822093909355908516815220546111bd908363ffffffff61125e16565b600160a060020a0380851660009081526020818152604080832094909455878316825260028152838220339093168252919091522054611203908363ffffffff61126d16565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516916000805160206113808339815191529085905190815260200160405180910390a35060019392505050565b600082820183811015610c7d57fe5b60008282111561127957fe5b50900390565b6000600160a060020a038316151561129657600080fd5b600160a060020a0333166000908152602081905260409020548211156112bb57600080fd5b600160a060020a0333166000908152602081905260409020546112e4908363ffffffff61126d16565b600160a060020a033381166000908152602081905260408082209390935590851681522054611319908363ffffffff61125e16565b60008085600160a060020a0316600160a060020a031681526020019081526020016000208190555082600160a060020a031633600160a060020a03166000805160206113808339815191528460405190815260200160405180910390a3506001929150505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820e46123f54ee1c046b089858e900ca2f533b26c1e0aac3c26db1f494744b071920029"
}