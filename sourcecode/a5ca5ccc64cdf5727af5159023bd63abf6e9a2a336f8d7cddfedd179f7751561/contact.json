{
  "address": "0x7b3c4d90e8af6030d66c07f8f815f9505e379d6f",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Burner",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-11\n*/\n\npragma solidity ^0.4.18;\n\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  function Ownable() public {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n\n}\n\n\n/**\n * @title Destructible\n * @dev Base contract that can be destroyed by owner. All funds in contract will be sent to the owner.\n * @dev From https://github.com/OpenZeppelin/openzeppelin-solidity/blob/v1.8.0/contracts/lifecycle/Destructible.sol\n */\ncontract Destructible is Ownable {\n\n  function Destructible() public payable { }\n\n  /**\n   * @dev Transfers the current balance to the owner and terminates the contract.\n   */\n  function destroy() onlyOwner public {\n    selfdestruct(owner);\n  }\n\n  function destroyAndSend(address _recipient) onlyOwner public {\n    selfdestruct(_recipient);\n  }\n}\n\n\n/// @dev From https://github.com/KyberNetwork/smart-contracts/blob/master/contracts/ERC20Interface.sol\ninterface ERC20 {\n    function totalSupply() public view returns (uint supply);\n    function balanceOf(address _owner) public view returns (uint balance);\n    function transfer(address _to, uint _value) public returns (bool success);\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success);\n    function approve(address _spender, uint _value) public returns (bool success);\n    function allowance(address _owner, address _spender) public view returns (uint remaining);\n    function decimals() public view returns(uint digits);\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\n}\n\n/// @title Contract for a burnable ERC\ncontract BurnableErc20 is ERC20 {\n    function burn(uint value) external;\n}\n\ncontract KyberNetwork {\n    function trade(\n        ERC20 src,\n        uint srcAmount,\n        ERC20 dest,\n        address destAddress,\n        uint maxDestAmount,\n        uint minConversionRate,\n        address walletId\n    )\n        public\n        payable\n        returns(uint);\n}\n\n\n/// @title A contract to burn ERC20 tokens from ETH\n/// @notice Sends the ETH on the contract to kyber for conversion to ERC20\n///  The converted ERC20 is then burned\n/// @author Request Network\ncontract Burner is Destructible {\n    /// Kyber contract that will be used for the conversion\n    KyberNetwork public kyberContract;\n\n    // Contract for the ERC20\n    BurnableErc20 public destErc20;\n\n    /// @param _destErc20 Destination token\n    /// @param _kyberContract Kyber contract to use\n    function Burner(address _destErc20, address _kyberContract) public {\n        // Check inputs\n        require(_destErc20 != address(0));\n        require(_kyberContract != address(0));\n\n        destErc20 = BurnableErc20(_destErc20);\n        kyberContract = KyberNetwork(_kyberContract);\n    }\n    \n    /// Fallback function to receive the ETH to burn later\n    function() public payable { }\n\n    /// @dev Main function. Trade the ETH for ERC20 and burn them\n    /// @param _maxSrcAmount Maximum amount of ETH to convert. If set to 0, all ETH on the\n    ///  contract will be burned\n    /// @param _maxDestAmount A limit on the amount of converted ERC20 tokens. Default value is MAX_UINT\n    /// @param _minConversionRate The minimal conversion rate. Default value is 1 (market rate)\n    /// @return amount of dest ERC20 tokens burned\n    function burn(uint _maxSrcAmount, uint _maxDestAmount, uint _minConversionRate)\n        external\n        returns(uint)\n    {\n        // ETH to convert on Kyber, by default the amount of ETH on the contract\n        // If _maxSrcAmount is defined, ethToConvert = min(balance on contract, _maxSrcAmount)\n        uint ethToConvert = address(this).balance;\n        if (_maxSrcAmount != 0 && _maxSrcAmount < ethToConvert) {\n            ethToConvert = _maxSrcAmount;\n        }\n\n        // Set maxDestAmount to MAX_UINT if not sent as parameter\n        uint maxDestAmount = _maxDestAmount != 0 ? _maxDestAmount : 2**256 - 1;\n\n        // Set minConversionRate to 1 if not sent as parameter\n        // A value of 1 will execute the trade according to market price in the time of the transaction confirmation\n        uint minConversionRate = _minConversionRate != 0 ? _minConversionRate : 1;\n\n        // Convert the ETH to ERC20\n        // erc20ToBurn is the amount of the ERC20 tokens converted by Kyber that will be burned\n        uint erc20ToBurn = kyberContract.trade.value(ethToConvert)(\n            // Source. From Kyber docs, this value denotes ETH\n            ERC20(0x00eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee),\n            \n            // Source amount\n            ethToConvert,\n\n            // Destination. Downcast BurnableErc20 to ERC20\n            ERC20(destErc20),\n            \n            // destAddress: this contract\n            this,\n            \n            // maxDestAmount\n            maxDestAmount,\n            \n            // minConversionRate \n            minConversionRate,\n            \n            // walletId\n            0\n        );\n\n        // Burn the converted ERC20 tokens\n        destErc20.burn(erc20ToBurn);\n\n        return erc20ToBurn;\n    }\n\n    /**\n    * @notice Sets the KyberNetwork contract address.\n    */  \n    function setKyberNetworkContract(address _kyberNetworkAddress) \n        external\n        onlyOwner\n    {\n        kyberContract = KyberNetwork(_kyberNetworkAddress);\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_maxSrcAmount\",\"type\":\"uint256\"},{\"name\":\"_maxDestAmount\",\"type\":\"uint256\"},{\"name\":\"_minConversionRate\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kyberContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"destErc20\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_kyberNetworkAddress\",\"type\":\"address\"}],\"name\":\"setKyberNetworkContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_destErc20\",\"type\":\"address\"},{\"name\":\"_kyberContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060405160408061055183398101604052805160209091015160008054600160a060020a03191633179055600160a060020a038216151561005057600080fd5b600160a060020a038116151561006557600080fd5b60028054600160a060020a03938416600160a060020a031991821617909155600180549290931691161790556104b1806100a06000396000f30060806040526004361061008d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305a10028811461008f5780632aed1390146100bf5780637becd54a146100f057806383197ef0146101055780638da5cb5b1461011a578063abd188a81461012f578063f2fde38b14610150578063f5074f4114610171575b005b34801561009b57600080fd5b506100ad600435602435604435610192565b60408051918252519081900360200190f35b3480156100cb57600080fd5b506100d4610336565b60408051600160a060020a039092168252519081900360200190f35b3480156100fc57600080fd5b506100d4610345565b34801561011157600080fd5b5061008d610354565b34801561012657600080fd5b506100d4610379565b34801561013b57600080fd5b5061008d600160a060020a0360043516610388565b34801561015c57600080fd5b5061008d600160a060020a03600435166103ce565b34801561017d57600080fd5b5061008d600160a060020a0360043516610462565b6000303181808087158015906101a757508388105b156101b0578793505b8615156101bf576000196101c1565b865b92508515156101d15760016101d3565b855b600154600254604080517fcb3c28c700000000000000000000000000000000000000000000000000000000815273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee600482015260248101899052600160a060020a0392831660448201523060648201526084810188905260a48101859052600060c4820152905193955091169163cb3c28c791879160e480830192602092919082900301818588803b15801561027c57600080fd5b505af1158015610290573d6000803e3d6000fd5b50505050506040513d60208110156102a757600080fd5b5051600254604080517f42966c68000000000000000000000000000000000000000000000000000000008152600481018490529051929350600160a060020a03909116916342966c689160248082019260009290919082900301818387803b15801561031257600080fd5b505af1158015610326573d6000803e3d6000fd5b50929a9950505050505050505050565b600154600160a060020a031681565b600254600160a060020a031681565b600054600160a060020a0316331461036b57600080fd5b600054600160a060020a0316ff5b600054600160a060020a031681565b600054600160a060020a0316331461039f57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a031633146103e557600080fd5b600160a060020a03811615156103fa57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a0316331461047957600080fd5b80600160a060020a0316ff00a165627a7a72305820a7c61f238db1616a37d6b7c40b0070db917cf2a588f0b994b5712a90ff09bdd800290000000000000000000000008f8221afbb33998d8584a2b05749ba73c37a938a000000000000000000000000818e6fecd516ecc3849daf6845e3ec868087b755",
  "constructorArguments": "0000000000000000000000008f8221afbb33998d8584a2b05749ba73c37a938a000000000000000000000000818e6fecd516ecc3849daf6845e3ec868087b755"
}