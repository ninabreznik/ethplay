{
  "address": "0x4cf286da8dec355bb8d51a3f8ff509e2b594e6ff",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BTYCEC",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-22\n*/\n\npragma solidity ^ 0.4.24;\n\n// ----------------------------------------------------------------------------\n// 安全的加减乘除\n// ----------------------------------------------------------------------------\nlibrary SafeMath {\n\tfunction add(uint a, uint b) internal pure returns(uint c) {\n\t\tc = a + b;\n\t\trequire(c >= a);\n\t}\n\n\tfunction sub(uint a, uint b) internal pure returns(uint c) {\n\t\trequire(b <= a);\n\t\tc = a - b;\n\t}\n\n\tfunction mul(uint a, uint b) internal pure returns(uint c) {\n\t\tc = a * b;\n\t\trequire(a == 0 || c / a == b);\n\t}\n\n\tfunction div(uint a, uint b) internal pure returns(uint c) {\n\t\trequire(b > 0);\n\t\tc = a / b;\n\t}\n}\n\n// ----------------------------------------------------------------------------\n// ERC Token Standard #20 Interface\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n// ----------------------------------------------------------------------------\ncontract ERC20Interface {\n\tfunction totalSupply() public constant returns(uint);\n\n\tfunction balanceOf(address tokenOwner) public constant returns(uint balance);\n\n\tfunction allowance(address tokenOwner, address spender) public constant returns(uint remaining);\n\n\tfunction transfer(address to, uint tokens) public returns(bool success);\n\n\tfunction approve(address spender, uint tokens) public returns(bool success);\n\n\tfunction transferFrom(address from, address to, uint tokens) public returns(bool success);\n\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\n\tevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\n\n\ninterface btycInterface {\n    function balanceOf(address _addr) external view returns (uint256);\n    function getcanuse(address tokenOwner) external view returns(uint);\n}\n// ----------------------------------------------------------------------------\n// 核心类\n// ----------------------------------------------------------------------------\ncontract BTYCEC is ERC20Interface {\n\tusing SafeMath\n\tfor uint;\n\n\tstring public symbol;\n\tstring public name;\n\tuint8 public decimals;\n\tuint _totalSupply;//总发行\n\tuint public sysusermoney;//流通 \n\tuint public sysoutmoney;//矿池 \n\n\tuint public sellPrice; //出售价格 1枚代币换多少以太 /1000\n\tuint public buyPrice; //购买价格 多少以太可购买1枚代币 /1000\n\tuint public btycbuyPrice; //购买价格 多少btyc可购买1枚代币 /1000\n\tuint public btycsellPrice; \n\tuint public sysPer; //挖矿的增量百分比 /2%\n\tuint public sysPrice1; //挖矿的衡量值300\n\tuint public sysPer1; //挖矿的增量百分比 /3.2%\n\tuint public systime1;//120\n\tuint public sysPrice2; //挖矿的衡量值900\n\tuint public sysPer2; //挖矿的增量百分比 /4%\n\tuint public systime2;//200\n\tuint public transper; //转账手续费 /3%\n\t\n\tbool public actived;\n\tuint public onceAddTime; //挖矿的时间 10 days\n\tuint public upper1;//团队奖% \n\tuint public upper2;//团队奖% \n\tuint public teamper1;//团队奖% \n\tuint public teamper2;//团队奖% \n\tuint public outper1;//退出锁仓\n\tuint public outper2;//退出锁仓\n\tuint public sellper;//\n\tuint public sysday;\n\t//bool public openout;\n    uint public sysminteth;\n    uint public hasoutmony;\n    uint public hasbuymoney;\n    uint public hassellmoney;\n    uint public hasbuyeth;\n    uint public hasselleth;\n    uint public hasbtycbuymoney;\n    uint public hasbtycsellmoney;\n\tmapping(address => uint) balances;//总计\n\tmapping(address => uint) myeth;//本金\n\tmapping(address => uint) froeth;//冻结\n\t//mapping(address => uint) used;\n\tmapping(address => mapping(address => uint)) allowed;\n\n\t/* 冻结账户 */\n\tmapping(address => bool) public frozenAccount;\n\n\t//上家地址\n\tmapping(address => address) public fromaddr;\n\n\t// 记录各个账户的增量时间\n\tmapping(address => uint) public crontime;\n\t// 挖矿次数\n\tmapping(address => uint) public mintnum;\n\tuint[] public permans;\n\tmapping(address => uint) public teamget;\n\tstruct sunsdata{\n\t    uint n1;\n\t    uint n2;\n\t    uint getmoney;\n\t}\n    mapping(address => sunsdata) public suns;\n    btycInterface public btycBase = btycInterface(0x25FDf7f507D6124377e48409713292022D9fB69e);\n\t/* 通知 */\n\tevent FrozenFunds(address target, bool frozen);\n\taddress public owner;\n    modifier onlyOwner {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n\t// ------------------------------------------------------------------------\n\t// Constructor\n\t// ------------------------------------------------------------------------\n\tconstructor() public {\n\n\t\tsymbol = \"BTYCEC\";\n\t\tname = \"BTYCEC Coin\";\n\t\tdecimals = 18;\n\t\t_totalSupply = 43200000 ether;//总发行\n\t\tsysusermoney = 21000000 ether;//流通\n\t\tsysoutmoney  = 22200000 ether;//矿池\n\n\t\tsellPrice = 19.545 ether; //出售价格 1btyc can buy how much eth\n\t\tbuyPrice = 19.545 ether; //购买价格 1eth can buy how much btyc\n\t\tbtycbuyPrice = 0.00001 ether;\n\t\tbtycsellPrice = 1 ether;\n\t\tsysPrice1 = 300 ether; //挖矿的衡量值\n\t\t//sysPrice1 = 3 ether;//test\n\t\tsysPer  = 20; //挖矿的增量百分比 /1000\n\t\tsysPer1 = 32; //挖矿的增量百分比 /1000\n\t\tsysPrice2 = 900 ether; //挖矿的衡量值\n\t\t//sysPrice2 = 9 ether; //test\n\t\tsysPer2 = 40; //挖矿的增量百分比 /1000\n\t\ttransper = 3;//转账手续费 /100\n\t\tupper1 = 20;//第1代挖矿分润\n\t\tupper2 = 10;//第2代挖矿分润\n\t\tteamper1 = 10;//团队奖% /100\n\t\tteamper2 = 20;//团队奖% /100\n\t\toutper1 = 80;//退出锁仓 /100\n\t\toutper2 = 70;//退出锁仓 /100\n\t\tsellper = 85;// /100\n\t\tactived = true;\n\t\tonceAddTime = 10 days; //挖矿的时间 正式\n\t\t//onceAddTime = 300 seconds;//test\n\t\tsysday = 1 days; \n\t\t//sysday = 30 seconds;//test\n        systime1 = 13;\n        systime2 = 21;\n        permans = [40,20,12,6];\n        //permans = [8,6,4,2];//test\n\t\tbalances[this] = _totalSupply;\n\t\towner = msg.sender;\n\t\temit Transfer(address(0), owner, _totalSupply);\n\n\t}\n\n\t/* 获取用户金额 */\n\tfunction balanceOf(address user) public view returns(uint balance) {\n\t\treturn balances[user];\n\t}\n\tfunction ethbalance(address user) public view returns(uint balance) {\n\t\treturn user.balance;\n\t}\n\t\n\tfunction btycbalanceOf(address user) public view returns(uint balance) {\n\t\treturn btycBase.balanceOf(user);\n\t}\n    function addcrontime(address addr) private{\n        if(crontime[addr] < now) {\n            crontime[addr] = now + onceAddTime;\n        }\n        \n    }\n    function addusertime(address addr) private{\n        if(balances[addr] < 2) {\n            addcrontime(addr);\n        }\n    }\n\t/*\n\t * 获取用户的挖矿时间\n\t * @param {Object} address\n\t */\n\tfunction getaddtime(address _addr) public view returns(uint) {\n\t\tif(crontime[_addr] < 2) {\n\t\t\treturn(0);\n\t\t}else{\n\t\t    return(crontime[_addr]);\n\t\t}\n\t\t\n\t}\n\tfunction getmy(address user) public view returns(\n\t    uint myblance,\n\t    uint mybtyc,\n\t    uint meth,\n\t    uint myeths,\n\t    uint mypro,\n\t    uint mytime,\n\t    uint bprice,\n\t    uint sprice,\n\t    uint cprice,\n\t    uint tmoney,\n\t    uint myall\n\t){\n\t    myblance = balances[user];//0\n\t    mybtyc = btycbalanceOf(user);//1\n\t    meth = address(user).balance;//2\n\t    myeths = myeth[user];//3\n\t    mypro = froeth[user];//4\n\t    mytime = crontime[user];//5\n\t    bprice = buyPrice;//6\n\t    sprice = sellPrice;//7\n\t    cprice = btycbuyPrice;//8\n\t    tmoney = balances[this];//9\n\t    myall = myblance.add(mypro);//10\n\t}\n\tfunction geteam(address user) public view returns(\n\t    uint nn1,//0\n\t    uint nn2,//1\n\t    uint ms,//2\n\t    uint tm,//3\n\t    uint mintmoneys,//4\n\t    uint usermoneys,//5\n\t    uint fromoneys,//6\n\t    uint lid,//7\n\t    uint tmoney\n\t){\n\t    nn1 = suns[user].n1;\n\t    nn2 = suns[user].n2;\n\t    ms = teamget[user];\n\t    tm = getaddtime(user);\n\t    mintmoneys = sysoutmoney;\n\t    usermoneys = sysusermoney;\n\t    fromoneys = sysminteth;\n\t    if(suns[user].n2 > permans[2] && suns[user].n1 > permans[3]){\n\t        lid = 1;\n\t    }\n\t    if(suns[user].n2 > permans[0] && suns[user].n1 > permans[1]){\n\t        lid = 2;\n\t    }\n\t    tmoney = _totalSupply.sub(balances[this]);//9\n\t}\n\tfunction getsys() public view returns(\n\t    uint tmoney,//0\n\t    uint outm,//1\n\t    uint um,//2\n\t    uint from,//3\n\t    uint hasout,//4\n\t    uint hasbuy,//5\n\t    uint hassell,//6\n\t    uint hasbtycbuy,//7\n\t    uint hasbtycsell,//8\n\t    uint hasbuyeths,//9\n\t    uint hasselleths//10\n\t){\n\t    tmoney = _totalSupply.sub(balances[this]);\n\t    outm = sysoutmoney;\n\t    um = sysusermoney;\n\t    from = sysminteth;\n\t    hasout = hasoutmony;\n\t    hasbuy = hasbuymoney;\n\t    hassell = hassellmoney;\n\t    hasbtycbuy = hasbtycbuymoney;\n\t    hasbtycsell = hasbtycsellmoney;\n\t    hasbuyeths = hasbuyeth;\n\t    hasselleths = hasselleth;\n\t}\n\n\t/*\n\t * 用户转账\n\t * @param {Object} address\n\t */\n\tfunction transfer(address to, uint tokens) public returns(bool success) {\n\t    address from = msg.sender;\n\t\trequire(!frozenAccount[from]);\n\t\trequire(!frozenAccount[to]);\n\t\trequire(tokens > 1 && tokens < _totalSupply);\n\t\trequire(actived == true);\n\t\tuint addper = tokens*transper/100;\n\t\tuint allmoney = tokens + addper;\n\t\trequire(balances[from] >= allmoney);\n\t\trequire(addper < balances[from] && addper > 0);\n\t\t// 防止转移到0x0， 用burn代替这个功能\n        require(to != 0x0);\n\t\trequire(from != to);\n\t\t// 将此保存为将来的断言， 函数最后会有一个检验103 - 3 + 10\n        uint previousBalances = balances[from] - addper + balances[to];\n\t\t//如果用户没有上家\n\t\tif(fromaddr[to] == address(0) && fromaddr[from] != to) {\n\t\t\t//指定上家地址\n\t\t\tfromaddr[to] = from;\n\t\t\tsuns[from].n1++;\n\t\t\tif(fromaddr[from] != address(0)) {\n\t\t\t    suns[fromaddr[from]].n2++;\n\t\t\t}\n\t\t} \n\t\t\n\t\tbalances[from] = balances[from].sub(allmoney);\n\t\tif(balances[from] < myeth[from]) {\n\t\t    myeth[from] = balances[from];\n\t\t}\n\t\tbalances[this] = balances[this].add(addper);\n\t\tbalances[to] = balances[to].add(tokens);\n\t\tmyeth[to] = myeth[to].add(tokens);\n\t\taddcrontime(to);\n\t\temit Transfer(from, this, addper);\n\t\temit Transfer(from, to, tokens);\n\t\t// 断言检测， 不应该为错\n        assert(balances[from] + balances[to] == previousBalances);//90 10\n\t\treturn true;\n\t}\n\n\tfunction getfrom(address _addr) public view returns(address) {\n\t\treturn(fromaddr[_addr]);\n\t}\n\n\tfunction approve(address spender, uint tokens) public returns(bool success) {\n\t    require(balances[msg.sender] >= tokens);\n\t\tallowed[msg.sender][spender] = tokens;\n\t\temit Approval(msg.sender, spender, tokens);\n\t\treturn true;\n\t}\n\t/*\n\t * 授权转账\n\t * @param {Object} address\n\t */\n\tfunction transferFrom(address from, address to, uint tokens) public returns(bool success) {\n\t\trequire(actived == true);\n\t\trequire(!frozenAccount[from]);\n\t\trequire(!frozenAccount[to]);\n\t\trequire(balances[from] >= tokens);\n\t\trequire(tokens > 1 && tokens < _totalSupply);\n\t\tbalances[from] = balances[from].sub(tokens);\n\t\tallowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n\t\tbalances[to] = balances[to].add(tokens);\n\t\temit Transfer(from, to, tokens);\n\t\treturn true;\n\t}\n\n\t/*\n\t * 获取授权信息\n\t * @param {Object} address\n\t */\n\tfunction allowance(address tokenOwner, address spender) public view returns(uint remaining) {\n\t\treturn allowed[tokenOwner][spender];\n\t}\n\n\t/*\n\t * 授权\n\t * @param {Object} address\n\t */\n\tfunction approveAndCall(address spender, uint tokens) public returns(bool success) {\n\t    require(!frozenAccount[spender]);\n\t    require(balances[msg.sender] >= tokens);\n\t    require(tokens > 1 && tokens < _totalSupply);\n\t\tallowed[msg.sender][spender] = tokens;\n\t\temit Approval(msg.sender, spender, tokens);\n\t\t//ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n\t\treturn true;\n\t}\n\n\t/// 冻结 or 解冻账户\n\tfunction freezeAccount(address target, bool freeze) onlyOwner public {\n\t\tfrozenAccount[target] = freeze;\n\t\temit FrozenFunds(target, freeze);\n\t}\n\n\t/*\n\t * 系统设置\n\t * @param {Object} uint\n\t \t\n\t */\n\tfunction setconf(\n    \tuint newonceaddtime, \n    \tuint newBuyPrice, \n    \tuint newSellPrice, \n    \tuint sysPermit,\n    \tuint systyPrice1, \n    \tuint sysPermit1, \n    \tuint systyPrice2, \n    \tuint sysPermit2,\n    \tuint systime1s,\n    \tuint systime2s,\n    \tuint transpers,\n    \tuint sellpers,\n    \tuint outper1s,\n    \tuint outper2s\n    ) onlyOwner public{\n\t\tonceAddTime = newonceaddtime;\n\t\tbuyPrice = newBuyPrice;\n\t\tsellPrice = newSellPrice;\n\t\tsysPer = sysPermit;\n\t\tsysPrice2 = systyPrice2;\n\t\tsysPer2 = sysPermit2;\n\t\tsysPrice1 = systyPrice1;\n\t\tsysPer1 = sysPermit1;\n\t\tsystime1 = systime1s + 1;\n\t\tsystime2 = systime2s + 1;\n\t\ttransper = transpers;\n\t\tsellper = sellpers;\n\t\toutper1 = outper1s;\n\t\toutper2 = outper2s;\n\t\t\n\t}\n\t/*\n\t * 获取系统设置\n\t */\n\tfunction getconf() public view returns(\n\t    uint newonceaddtime, \n    \tuint newBuyPrice, \n    \tuint newSellPrice, \n    \tuint sysPermit,\n    \tuint systyPrice1, \n    \tuint sysPermit1, \n    \tuint systyPrice2, \n    \tuint sysPermit2,\n    \tuint systime1s,\n    \tuint systime2s,\n    \tuint transpers,\n    \tuint sellpers,\n    \tuint outper1s,\n    \tuint outper2s\n\t) {\n\t\tnewonceaddtime = onceAddTime;//0\n\t\tnewBuyPrice = buyPrice;//1\n\t    newSellPrice = \tsellPrice;//2\n\t\tsysPermit = sysPer;//3\n\t\tsystyPrice1 = sysPrice1;//4\n\t\tsysPermit1 = sysPer1;//5\n\t\tsystyPrice2 = sysPrice2;//6\n\t\tsysPermit2 = sysPer2;//7\n\t\tsystime1s = systime1 - 1;//8\n\t\tsystime2s = systime2 - 1;//9\n\t\ttranspers = transper;//10\n\t\tsellpers = sellper;//11\n\t\toutper1s = outper1;//12\n\t\toutper2s = outper2;//13\n\t}\n\tfunction setother(\n\t    uint upper1s,\n    \tuint upper2s,\n    \tuint teamper1s,\n    \tuint teamper2s,\n    \tuint btycbuyPrices,\n    \tuint btycsellPrices,\n    \tuint t1,\n    \tuint t2,\n    \tuint t3,\n    \tuint t4\n\t) public onlyOwner{\n\t    upper1 = upper1s;\n\t\tupper2 = upper2s;\n\t\tteamper1 = teamper1s;\n\t\tteamper2 = teamper2s;\n\t\tbtycbuyPrice = btycbuyPrices;\n\t\tbtycsellPrice = btycsellPrices;\n\t\tpermans = [t1,t2,t3,t4];\n\t}\n\tfunction getother() public view returns(\n\t    uint upper1s,\n    \tuint upper2s,\n    \tuint teamper1s,\n    \tuint teamper2s,\n    \tuint btycbuyPrices,\n    \tuint btycsellPrices,\n    \tuint t1,\n    \tuint t2,\n    \tuint t3,\n    \tuint t4\n\t){\n\t    upper1s = upper1;\n\t\tupper2s = upper2;\n\t\tteamper1s = teamper1;\n\t\tteamper2s = teamper2;\n\t\tbtycbuyPrices = btycbuyPrice;\n\t\tbtycsellPrices = btycsellPrice;\n\t\tt1 = permans[0];\n\t\tt2 = permans[1];\n\t\tt3 = permans[2];\n\t\tt4 = permans[3];\n\t}\n\t/*\n\t * 设置是否开启\n\t * @param {Object} bool\n\t */\n\tfunction setactive(bool tags) public onlyOwner {\n\t\tactived = tags;\n\t}\n\t/*\n\tfunction setbtyctoken(address token) onlyOwner public {\n\t    btyctoken = token;\n\t    //btycBase = btycInterface(token);\n\t    settoken(token, true);\n\t}*/\n\t/*\n\t * 获取总发行\n\t */\n\tfunction totalSupply() public view returns(uint) {\n\t\treturn _totalSupply;\n\t}\n\t/*\n\t * 向指定账户拨发资金\n\t * @param {Object} address\n\t */\n\tfunction adduser(address target, uint256 mintedAmount) public onlyOwner{\n\t\trequire(!frozenAccount[target]);\n\t\trequire(actived == true);\n        require(balances[this] > mintedAmount);\n\t\tbalances[target] = balances[target].add(mintedAmount);\n\t\tmyeth[target] = myeth[target].add(mintedAmount);\n\t\tbalances[this] = balances[this].sub(mintedAmount);\n\t\tsysusermoney = sysusermoney.sub(mintedAmount);\n\t\thasoutmony = hasoutmony.add(mintedAmount);\n\t\taddcrontime(target);\n\t\temit Transfer(this, target, mintedAmount);\n\t}\n\tfunction subuser(address target, uint256 mintedAmount) public onlyOwner{\n\t\trequire(!frozenAccount[target]);\n\t\trequire(actived == true);\n        require(balances[target] > mintedAmount);\n\t\tbalances[target] = balances[target].sub(mintedAmount);\n\t\tif(balances[target] < myeth[target]) {\n\t\t    myeth[target] = balances[target];\n\t\t}\n\t\tbalances[this] = balances[this].add(mintedAmount);\n\t\tsysusermoney = sysusermoney.add(mintedAmount);\n\t\temit Transfer( target,this, mintedAmount);\n\t}\n\n\tfunction mintadd() public{\n\t    address user = msg.sender;\n\t    uint money = balances[user];\n\t\trequire(!frozenAccount[user]);\n\t\trequire(actived == true);\n\t\trequire(money >= sysPrice1);\n\t\tfroeth[user] = froeth[user].add(money);\n\t\tsysminteth = sysminteth.add(money);\n\t\tbalances[user] = 1;\n\t\tmyeth[user] = 1;\n\t\tif(froeth[user] >= sysPrice2) {\n\t\t    mintnum[user] = systime2;\n\t\t}else{\n\t\t    mintnum[user] = systime1;\n\t\t}\n\t\tcrontime[user] = now + onceAddTime;\n\t\temit Transfer(user, this, money);\n\t\t\n\t}\n\tfunction mintsub() public{\n\t    address user = msg.sender;\n\t\trequire(!frozenAccount[user]);\n\t\trequire(actived == true);\n\t\trequire(mintnum[user] > 1);\n\t\trequire(froeth[user] >= sysPrice1);\n\t\tuint getamount = froeth[user]*outper1/100;\n\t\tif(froeth[user] >= sysPrice2) {\n\t\t    getamount = froeth[user]*outper2/100;\n\t\t}\n\t\t\n\t\tuint addthis = froeth[user].sub(getamount);\n\t\tbalances[this] = balances[this].add(addthis);\n\t\temit Transfer(user, this, addthis);\n\t\tif(sysminteth == froeth[user]){\n\t\t    sysminteth = sysminteth.add(1);\n\t\t}\n\t\tsysminteth = sysminteth.sub(froeth[user]);\n\t\tfroeth[user] = 1;\n\t\tmintnum[user] = 1;\n\t\tbalances[user] = balances[user].add(getamount);\n\t\tmyeth[user] = myeth[user].add(getamount);\n\t\temit Transfer(this, user, getamount);\n\t\t\n\t}\n\tfunction setteam(address user, uint amount) private returns(bool) {\n\t    if(suns[user].n2 >= permans[2] && suns[user].n1 >= permans[3]){\n\t        teamget[user] = teamget[user].add(amount);\n\t        uint chkmoney = sysPrice1;\n\t        uint sendmoney = teamget[user]*teamper1/100;\n\t        if(suns[user].n2 >= permans[0] && suns[user].n1 >= permans[1]){\n\t            chkmoney = sysPrice2;\n\t            sendmoney = teamget[user]*teamper2/100;\n\t        }\n\t        if(teamget[user] >= chkmoney) {\n\t            suns[user].getmoney = suns[user].getmoney.add(sendmoney);\n\t            balances[user] = balances[user].add(sendmoney);\n\t            teamget[user] = 1;\n\t            balances[this] = balances[this].sub(sendmoney);\n\t\t        sysoutmoney = sysoutmoney.sub(sendmoney);\n\t\t        sysusermoney = sysusermoney.add(sendmoney);\n\t\t        emit Transfer(this, user, sendmoney);\n\t        }\n\t        return(true);\n\t    }\n\t}\n\t/*\n\t * 用户每隔10天挖矿一次\n\t */\n\tfunction mint() public {\n\t    address user = msg.sender;\n\t\trequire(!frozenAccount[user]);\n\t\trequire(actived == true);\n\t\trequire(crontime[user] > 1);\n\t\trequire(now > crontime[user]);\n\t\tuint amount;\n\t\tuint usmoney;\n\t\tuint mintmoney;\n\t\t//require(balances[user] >= sysPrice1);\n\t\tif(myeth[user] > 1) {\n\t\t    usmoney = myeth[user] * sysPer / 1000;\n\t\t    //amount = amount.add(myeth[user] * sysPer / 1000);\n\t\t}\n\t\tif(froeth[user] >= sysPrice1 && mintnum[user] > 1) {\n\t\t    mintmoney = froeth[user] * sysPer1 / 1000;\n\t\t    if(froeth[user] >= sysPrice2) {\n    \t\t    mintmoney = froeth[user] * sysPer2 / 1000;\n    \t\t}\n\t\t}\n\t\tamount = usmoney.add(mintmoney);\n\t\trequire(balances[this] > amount);\n\t\trequire(sysoutmoney > amount);\n\t\tbalances[user] = balances[user].add(amount);\n\t\tbalances[this] = balances[this].sub(amount);\n\t\tsysoutmoney = sysoutmoney.sub(amount);\n\t\tsysusermoney = sysusermoney.add(amount);\n\t\tcrontime[user] = now + onceAddTime;\n\t\t\n\t\tif(usmoney > 0) {\n\t\t    emit Transfer(this, user, usmoney);\n\t\t}\n\t\tif(mintmoney > 0) {\n\t\t    emit Transfer(this, user, mintmoney);\n\t\t    mintnum[user]--;\n\t\t    if(mintnum[user] < 2) {\n\t\t        balances[user] = balances[user].add(froeth[user]);\n\t\t        myeth[user] = myeth[user].add(froeth[user]);\n\t\t        sysminteth = sysminteth.sub(froeth[user]);\n\t\t        emit Transfer(this, user, froeth[user]);\n\t\t        froeth[user] = 1; \n\t\t    }\n\t\t}\n\t\taddress top1 = fromaddr[user];\n\t\tif(top1 != address(0) && top1 != user) {\n\t\t    uint upmoney1 = amount*upper1/100;\n\t\t    balances[top1] = balances[top1].add(upmoney1);\n\t\t    balances[this] = balances[this].sub(upmoney1);\n\t\t    sysoutmoney = sysoutmoney.sub(upmoney1);\n\t\t    sysusermoney = sysusermoney.add(upmoney1);\n\t\t    emit Transfer(this, top1, upmoney1);\n\t\t    setteam(top1, upmoney1);\n\t\t    address top2 = fromaddr[top1];\n\t\t    if(top2 != address(0) && top2 != user) {\n    \t\t    uint upmoney2 = amount*upper2/100;\n    \t\t    balances[top2] = balances[top2].add(upmoney2);\n    \t\t    balances[this] = balances[this].sub(upmoney2);\n    \t\t    sysoutmoney = sysoutmoney.sub(upmoney2);\n    \t\t    sysusermoney = sysusermoney.add(upmoney2);\n    \t\t    emit Transfer(this, top2, upmoney2);\n    \t\t    setteam(top2, upmoney2);\n    \t\t}\n\t\t}\n\t\t//emit Transfer(this, user, amount);\n\t\t\n\n\t}\n\t/*\n\t * 获取总账目\n\t */\n\tfunction getall() public view returns(uint256 money) {\n\t\tmoney = address(this).balance;\n\t}\n\tfunction gettoday() public view returns(uint d) {\n\t    d = now - now%sysday;\n\t}\n\t/*\n\t * 购买\n\t */\n\tfunction buy() public payable returns(uint) {\n\t\trequire(actived == true);\n\t\taddress user = msg.sender;\n\t\trequire(!frozenAccount[user]);\n\t\trequire(msg.value > 0);\n\t\tuint amount = (msg.value * buyPrice)/1 ether;\n\t\trequire(balances[this] > amount);\n\t\trequire(amount > 1 && amount < _totalSupply);\n\t\tbalances[user] = balances[user].add(amount);\n\t\tmyeth[user] = myeth[user].add(amount);\n\t\tbalances[this] = balances[this].sub(amount);\n\t\tsysusermoney = sysusermoney.sub(amount);\n\t\thasbuymoney = hasbuymoney.add(amount);\n\t\thasbuyeth = hasbuyeth.add(msg.value);\n\t\taddcrontime(user);\n\t\towner.transfer(msg.value);\n\t\temit Transfer(this, user, amount);\n\t\treturn(amount);\n\t}\n\n\t/*\n\t * 系统充值\n\t */\n\tfunction charge() public payable returns(bool) {\n\t\treturn(true);\n\t}\n\t\n\tfunction() payable public {\n\t\tbuy();\n\t}\n\t/*\n\t * 系统提现\n\t * @param {Object} address\n\t */\n\tfunction withdraw(address _to, uint money) public onlyOwner {\n\t\trequire(actived == true);\n\t\trequire(!frozenAccount[_to]);\n\t\trequire(address(this).balance > money);\n\t\trequire(money > 0);\n\t\t_to.transfer(money);\n\t}\n\t/*\n\t * 出售\n\t * @param {Object} uint256\n\t */\n\tfunction sell(uint256 amount) public returns(bool success) {\n\t\trequire(actived == true);\n\t\taddress user = msg.sender;\n\t\trequire(!frozenAccount[user]);\n\t\trequire(amount < _totalSupply);\n\t\trequire(amount > 1);\n\t\trequire(balances[user] >= amount);\n\t\t//uint moneys = (amount * sellPrice) / 10 ** uint(decimals);\n\t\tuint moneys = (amount * sellper * 10 finney)/sellPrice;\n\t\t//uint moneys = (amount * sellPrice * sellper)/100 ether;\n\t\trequire(address(this).balance > moneys);\n\t\tuser.transfer(moneys);\n\t\tuint previousBalances = balances[user] + balances[this];\n\t\tbalances[user] = balances[user].sub(amount);\n\t\tif(balances[user] < myeth[user]) {\n\t\t    myeth[user] = balances[user];\n\t\t}\n\t\tbalances[this] = balances[this].add(amount);\n        sysusermoney = sysusermoney.add(amount);\n        hassellmoney = hassellmoney.add(amount);\n        hasselleth = hasselleth.add(moneys);\n\t\temit Transfer(user, this, amount);\n\t\t// 断言检测， 不应该为错\n        assert(balances[user] + balances[this] == previousBalances);\n\t\treturn(true);\n\t}\n\n\t/*\n\t * 批量发币\n\t * @param {Object} address\n\t */\n\tfunction addBalances(address[] recipients, uint256[] moenys) public onlyOwner{\n\t\tuint256 sum = 0;\n\t\tfor(uint256 i = 0; i < recipients.length; i++) {\n\t\t\tbalances[recipients[i]] = balances[recipients[i]].add(moenys[i]);\n\t\t\tsum = sum.add(moenys[i]);\n\t\t\taddusertime(recipients[i]);\n\t\t\temit Transfer(this, recipients[i], moenys[i]);\n\t\t}\n\t\tbalances[this] = balances[this].sub(sum);\n\t\tsysusermoney = sysusermoney.sub(sum);\n\t}\n\t/*\n\t * 批量减币\n\t * @param {Object} address\n\t */\n\tfunction subBalances(address[] recipients, uint256[] moenys) public onlyOwner{\n\t\tuint256 sum = 0;\n\t\tfor(uint256 i = 0; i < recipients.length; i++) {\n\t\t\tbalances[recipients[i]] = balances[recipients[i]].sub(moenys[i]);\n\t\t\tsum = sum.add(moenys[i]);\n\t\t\temit Transfer(recipients[i], this, moenys[i]);\n\t\t}\n\t\tbalances[this] = balances[this].add(sum);\n\t\tsysusermoney = sysusermoney.add(sum);\n\t}\n\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btycBase\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"systime1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onceAddTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btycsellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"btycbalanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hassellmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getaddtime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"adduser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gettoday\",\"outputs\":[{\"name\":\"d\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getother\",\"outputs\":[{\"name\":\"upper1s\",\"type\":\"uint256\"},{\"name\":\"upper2s\",\"type\":\"uint256\"},{\"name\":\"teamper1s\",\"type\":\"uint256\"},{\"name\":\"teamper2s\",\"type\":\"uint256\"},{\"name\":\"btycbuyPrices\",\"type\":\"uint256\"},{\"name\":\"btycsellPrices\",\"type\":\"uint256\"},{\"name\":\"t1\",\"type\":\"uint256\"},{\"name\":\"t2\",\"type\":\"uint256\"},{\"name\":\"t3\",\"type\":\"uint256\"},{\"name\":\"t4\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"upper1s\",\"type\":\"uint256\"},{\"name\":\"upper2s\",\"type\":\"uint256\"},{\"name\":\"teamper1s\",\"type\":\"uint256\"},{\"name\":\"teamper2s\",\"type\":\"uint256\"},{\"name\":\"btycbuyPrices\",\"type\":\"uint256\"},{\"name\":\"btycsellPrices\",\"type\":\"uint256\"},{\"name\":\"t1\",\"type\":\"uint256\"},{\"name\":\"t2\",\"type\":\"uint256\"},{\"name\":\"t3\",\"type\":\"uint256\"},{\"name\":\"t4\",\"type\":\"uint256\"}],\"name\":\"setother\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysminteth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upper2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getconf\",\"outputs\":[{\"name\":\"newonceaddtime\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"},{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"sysPermit\",\"type\":\"uint256\"},{\"name\":\"systyPrice1\",\"type\":\"uint256\"},{\"name\":\"sysPermit1\",\"type\":\"uint256\"},{\"name\":\"systyPrice2\",\"type\":\"uint256\"},{\"name\":\"sysPermit2\",\"type\":\"uint256\"},{\"name\":\"systime1s\",\"type\":\"uint256\"},{\"name\":\"systime2s\",\"type\":\"uint256\"},{\"name\":\"transpers\",\"type\":\"uint256\"},{\"name\":\"sellpers\",\"type\":\"uint256\"},{\"name\":\"outper1s\",\"type\":\"uint256\"},{\"name\":\"outper2s\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"moenys\",\"type\":\"uint256[]\"}],\"name\":\"subBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromaddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasbuyeth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getmy\",\"outputs\":[{\"name\":\"myblance\",\"type\":\"uint256\"},{\"name\":\"mybtyc\",\"type\":\"uint256\"},{\"name\":\"meth\",\"type\":\"uint256\"},{\"name\":\"myeths\",\"type\":\"uint256\"},{\"name\":\"mypro\",\"type\":\"uint256\"},{\"name\":\"mytime\",\"type\":\"uint256\"},{\"name\":\"bprice\",\"type\":\"uint256\"},{\"name\":\"sprice\",\"type\":\"uint256\"},{\"name\":\"cprice\",\"type\":\"uint256\"},{\"name\":\"tmoney\",\"type\":\"uint256\"},{\"name\":\"myall\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outper2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"charge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outper1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasselleth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"permans\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ethbalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamper2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btycbuyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mintadd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysday\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPrice1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upper1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getall\",\"outputs\":[{\"name\":\"money\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasbtycbuymoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"crontime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"geteam\",\"outputs\":[{\"name\":\"nn1\",\"type\":\"uint256\"},{\"name\":\"nn2\",\"type\":\"uint256\"},{\"name\":\"ms\",\"type\":\"uint256\"},{\"name\":\"tm\",\"type\":\"uint256\"},{\"name\":\"mintmoneys\",\"type\":\"uint256\"},{\"name\":\"usermoneys\",\"type\":\"uint256\"},{\"name\":\"fromoneys\",\"type\":\"uint256\"},{\"name\":\"lid\",\"type\":\"uint256\"},{\"name\":\"tmoney\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPrice2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newonceaddtime\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"},{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"sysPermit\",\"type\":\"uint256\"},{\"name\":\"systyPrice1\",\"type\":\"uint256\"},{\"name\":\"sysPermit1\",\"type\":\"uint256\"},{\"name\":\"systyPrice2\",\"type\":\"uint256\"},{\"name\":\"sysPermit2\",\"type\":\"uint256\"},{\"name\":\"systime1s\",\"type\":\"uint256\"},{\"name\":\"systime2s\",\"type\":\"uint256\"},{\"name\":\"transpers\",\"type\":\"uint256\"},{\"name\":\"sellpers\",\"type\":\"uint256\"},{\"name\":\"outper1s\",\"type\":\"uint256\"},{\"name\":\"outper2s\",\"type\":\"uint256\"}],\"name\":\"setconf\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamper1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mintsub\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasbuymoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"suns\",\"outputs\":[{\"name\":\"n1\",\"type\":\"uint256\"},{\"name\":\"n2\",\"type\":\"uint256\"},{\"name\":\"getmoney\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"systime2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysoutmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"subuser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysusermoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"moenys\",\"type\":\"uint256[]\"}],\"name\":\"addBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getsys\",\"outputs\":[{\"name\":\"tmoney\",\"type\":\"uint256\"},{\"name\":\"outm\",\"type\":\"uint256\"},{\"name\":\"um\",\"type\":\"uint256\"},{\"name\":\"from\",\"type\":\"uint256\"},{\"name\":\"hasout\",\"type\":\"uint256\"},{\"name\":\"hasbuy\",\"type\":\"uint256\"},{\"name\":\"hassell\",\"type\":\"uint256\"},{\"name\":\"hasbtycbuy\",\"type\":\"uint256\"},{\"name\":\"hasbtycsell\",\"type\":\"uint256\"},{\"name\":\"hasbuyeths\",\"type\":\"uint256\"},{\"name\":\"hasselleths\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"actived\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getfrom\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasbtycsellmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tags\",\"type\":\"bool\"}],\"name\":\"setactive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasoutmony\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": ""
}