{
  "address": "0x814f67fa286f7572b041d041b1d99b432c9155ee",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Dragon",
  "compilerVersion": "v0.4.16+commit.d7661dd9",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-12-08\n*/\n\npragma solidity ^ 0.4.11;\n\n\n\n\n\ncontract tokenRecipient {\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);\n}\n\n\ncontract ERC20 {\n\n    function totalSupply() constant returns(uint _totalSupply);\n\n    function balanceOf(address who) constant returns(uint256);\n\n    function transfer(address to, uint256 value) returns(bool ok);\n\n    function transferFrom(address from, address to, uint256 value) returns(bool ok);\n\n    function approve(address spender, uint256 value) returns(bool ok);\n\n    function allowance(address owner, address spender) constant returns(uint256);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n}\n\ncontract Burner { function dragonHandler( uint256 _amount){} }\n \ncontract Dragon is ERC20 {\n\n\n    string public standard = 'DRAGON 1.2';\n    string public constant name = \"DRAGON\";\n    string public constant symbol = \"DRG\";\n    uint8 public decimals;\n    uint256 public totalSupply;\n  \n    \n    address public owner;\n    mapping( address => uint256) public balanceOf;\n    mapping( uint => address) public accountIndex;\n    uint public accountCount;\n    \n    mapping(address => mapping(address => uint256)) public allowance;\n    address public burner;\n    bool public burnerSet;\n    \n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed _owner, address indexed spender, uint value);\n    \n    event Burn(address indexed from, uint256 value);\n\n    \n    function Dragon() {\n         \n        uint supply = 50000000000000000; \n        appendTokenHolders( msg.sender );\n        balanceOf[msg.sender] =  supply;\n        totalSupply = supply; // \n        burnerSet = false;\n        \n        decimals = 8; // Amount of decimals for display purposes\n        owner = msg.sender;\n        \n  \n    }\n    \n    \n    modifier onlyOwner() {\n        if (msg.sender != owner) {\n            throw;\n        }\n        _;\n    }\n\n     modifier onlyBurner() {\n        if (msg.sender != burner) {\n            throw;\n        }\n        _;\n    }\n    \n    function changeOwnership( address _owner ) onlyOwner {\n        \n        owner = _owner;\n        \n    }\n    \n    function setBurner( address _burner ) onlyOwner {\n        require ( !burnerSet );\n        burner = _burner;\n        burnerSet = true;\n        \n    }\n\n    function burnCheck( address _tocheck , uint256 amount ) internal {\n        \n        if ( _tocheck != burner )return;\n        \n        Burner burn = Burner ( burner );\n        burn.dragonHandler( amount );\n        \n        \n    }\n    \n    function burnDragons ( uint256 _amount ) onlyBurner{\n        \n        \n        burn( _amount );\n        \n        \n    }\n    \n    function balanceOf(address tokenHolder) constant returns(uint256) {\n\n        return balanceOf[tokenHolder];\n    }\n\n    function totalSupply() constant returns(uint256) {\n\n        return totalSupply;\n    }\n\n    function getAccountCount() constant returns(uint256) {\n\n        return accountCount;\n    }\n\n    function getAddress(uint256 slot) constant returns(address) {\n\n        return accountIndex[slot];\n\n    }\n\n    \n    function appendTokenHolders(address tokenHolder) private {\n\n        if (balanceOf[tokenHolder] == 0) {\n            if ( tokenHolder == burner ) return;\n            accountIndex[accountCount] = tokenHolder;\n            accountCount++;\n        }\n\n    }\n\n    \n    function transfer(address _to, uint256 _value) returns(bool ok) {\n   \n        if (balanceOf[msg.sender] < _value) throw; \n        if (balanceOf[_to] + _value < balanceOf[_to]) throw;\n        \n        appendTokenHolders(_to);\n        balanceOf[msg.sender] -= _value; \n        balanceOf[_to] += _value; \n        Transfer(msg.sender, _to, _value); \n        burnCheck( _to, _value );\n        \n        return true;\n    }\n    \n    function approve(address _spender, uint256 _value)\n    returns(bool success) {\n        allowance[msg.sender][_spender] = _value;\n        Approval( msg.sender ,_spender, _value);\n        return true;\n    }\n\n \n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\n    returns(bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n    function allowance(address _owner, address _spender) constant returns(uint256 remaining) {\n        return allowance[_owner][_spender];\n    }\n\n \n    function transferFrom(address _from, address _to, uint256 _value) returns(bool success) {\n     \n        if (balanceOf[_from] < _value) throw;  \n        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  \n        if (_value > allowance[_from][msg.sender]) throw; \n        appendTokenHolders(_to);\n        balanceOf[_from] -= _value; \n        balanceOf[_to] += _value; \n        allowance[_from][msg.sender] -= _value;\n        Transfer(_from, _to, _value);\n       \n        return true;\n    }\n  \n    function burn(uint256 _value) returns(bool success) {\n        if (balanceOf[msg.sender] < _value) throw; \n        if( totalSupply -  _value < 2100000000000000) throw;\n        balanceOf[msg.sender] -= _value; \n        totalSupply -= _value; \n        Burn(msg.sender, _value);\n        return true;\n    }\n\n    function burnFrom(address _from, uint256 _value) returns(bool success) {\n        \n        if( totalSupply -  _value < 2100000000000000) throw;\n        if (balanceOf[_from] < _value) throw; \n        if (_value > allowance[_from][msg.sender]) throw; \n        balanceOf[_from] -= _value; \n        allowance[_from][msg.sender] -= _value; \n        totalSupply -= _value; \n        Burn(_from, _value);\n        return true;\n    }\n \n    \n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accountIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnerSet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAccountCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_burner\",\"type\":\"address\"}],\"name\":\"setBurner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnDragons\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accountCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "60606040526040805190810160405280600a81526020017f445241474f4e20312e3200000000000000000000000000000000000000000000815250600090805190602001906200005192919062000266565b5034156200005e57600080fd5b5b600066b1a2bc2ec5000090506200008a33620001556401000000000262001854176401000000009004565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806002819055506000600860146101000a81548160ff0219169083151502179055506008600160006101000a81548160ff021916908360ff16021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5062000315565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156200026257600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620001fb5762000263565b8060056000600654815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006600081548092919060010191905055505b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002a957805160ff1916838001178555620002da565b82800160010185558215620002da579182015b82811115620002d9578251825591602001919060010190620002bc565b5b509050620002e99190620002ed565b5090565b6200031291905b808211156200030e576000816000905550600101620002f4565b5090565b90565b611a9980620003256000396000f30060606040523615610131576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610136578063095ea7b3146101c557806318160ddd1461021f57806323b872dd1461024857806327810b6e146102c15780632af4c31e14610316578063313ce5671461034f57806336f9825f1461037e57806342966c68146103e15780635a3b7e421461041c5780636684ffcd146104ab57806370a08231146104d857806379cc6790146105255780638da5cb5b1461057f57806395d89b41146105d4578063a9059cbb14610663578063a98e4e77146106bd578063a996d6ce146106e6578063b93f9b0a1461071f578063bd679ad614610782578063cae9ca51146107a5578063dd62ed3e14610842578063e4af29fc146108ae575b600080fd5b341561014157600080fd5b6101496108d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018a5780820151818401525b60208101905061016e565b50505050905090810190601f1680156101b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101d057600080fd5b610205600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610910565b604051808215151515815260200191505060405180910390f35b341561022a57600080fd5b610232610a03565b6040518082815260200191505060405180910390f35b341561025357600080fd5b6102a7600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610a0e565b604051808215151515815260200191505060405180910390f35b34156102cc57600080fd5b6102d4610d10565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561032157600080fd5b61034d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d36565b005b341561035a57600080fd5b610362610dd8565b604051808260ff1660ff16815260200191505060405180910390f35b341561038957600080fd5b61039f6004808035906020019091905050610deb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103ec57600080fd5b6104026004808035906020019091905050610e1e565b604051808215151515815260200191505060405180910390f35b341561042757600080fd5b61042f610f39565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104705780820151818401525b602081019050610454565b50505050905090810190601f16801561049d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156104b657600080fd5b6104be610fd7565b604051808215151515815260200191505060405180910390f35b34156104e357600080fd5b61050f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610fea565b6040518082815260200191505060405180910390f35b341561053057600080fd5b610565600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611034565b604051808215151515815260200191505060405180910390f35b341561058a57600080fd5b610592611263565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156105df57600080fd5b6105e7611289565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106285780820151818401525b60208101905061060c565b50505050905090810190601f1680156106555780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561066e57600080fd5b6106a3600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506112c2565b604051808215151515815260200191505060405180910390f35b34156106c857600080fd5b6106d06114ba565b6040518082815260200191505060405180910390f35b34156106f157600080fd5b61071d600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506114c5565b005b341561072a57600080fd5b610740600480803590602001909190505061159e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561078d57600080fd5b6107a360048080359060200190919050506115dc565b005b34156107b057600080fd5b610828600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611647565b604051808215151515815260200191505060405180910390f35b341561084d57600080fd5b610898600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506117c6565b6040518082815260200191505060405180910390f35b34156108b957600080fd5b6108c161184e565b6040518082815260200191505060405180910390f35b6040805190810160405280600681526020017f445241474f4e000000000000000000000000000000000000000000000000000081525081565b600081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3600190505b92915050565b600060025490505b90565b600081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610a5c57600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011015610ae957600080fd5b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610b7257600080fd5b610b7b83611854565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190505b9392505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d9257600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b600160009054906101000a900460ff1681565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610e6c57600080fd5b660775f05a07400082600254031015610e8457600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816002600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a2600190505b919050565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fcf5780601f10610fa457610100808354040283529160200191610fcf565b820191906000526020600020905b815481529060010190602001808311610fb257829003601f168201915b505050505081565b600860149054906101000a900460ff1681565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b6000660775f05a0740008260025403101561104e57600080fd5b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561109a57600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561112357600080fd5b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816002600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a2600190505b92915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600381526020017f445247000000000000000000000000000000000000000000000000000000000081525081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561131057600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401101561139d57600080fd5b6113a683611854565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36114af8383611962565b600190505b92915050565b600060065490505b90565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561152157600080fd5b600860149054906101000a900460ff1615151561153d57600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600860146101000a81548160ff0219169083151502179055505b5b50565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561163857600080fd5b61164181610e1e565b505b5b50565b6000808490506116578585610910565b156117bd578073ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338630876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156117525780820151818401525b602081019050611736565b50505050905090810190601f16801561177f5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15156117a057600080fd5b6102c65a03f115156117b157600080fd5b505050600191506117be565b5b509392505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b60065481565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561195e57600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118f75761195f565b8060056000600654815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006600081548092919060010191905055505b5b50565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156119c057611a68565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16636175f9e2836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b1515611a5357600080fd5b6102c65a03f11515611a6457600080fd5b5050505b5050505600a165627a7a7230582077ba3b1594fd48d0583bf19207e6b5bef20492ce09467982c111ac950a8201c60029"
}