{
  "address": "0x57ad67acf9bf015e4820fbd66ea1a21bed8852ec",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "Lympo: Old Token",
  "contractName": "LympoToken",
  "compilerVersion": "v0.4.19+commit.c4cbbb05",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-01-20\n*/\n\n/*\n *  The Lympo Token contract complies with the ERC20 standard (see https://github.com/ethereum/EIPs/issues/20).\n *  All tokens not being sold during the crowdsale but the reserved token\n *  for tournaments future financing are burned.\n *  Author: Justas Kregzde\n */\n \npragma solidity ^0.4.19;\n\nlibrary SafeMath {\n    function mul(uint a, uint b) internal returns (uint) {\n        uint c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function sub(uint a, uint b) internal returns (uint) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint a, uint b) internal returns (uint) {\n        uint c = a + b;\n        assert(c>=a && c>=b);\n        return c;\n    }\n}\n\ncontract LympoToken {\n    using SafeMath for uint;\n    // Public variables of the token\n    string constant public standard = \"ERC20\";\n    string constant public name = \"Lympo tokens\";\n    string constant public symbol = \"LYM\";\n    uint8 constant public decimals = 18;\n    uint _totalSupply = 1000000000e18; // Total supply of 1 billion Lympo Tokens\n    uint constant public tokensPreICO = 265000000e18; // 26.5%\n    uint constant public tokensICO = 385000000e18; // 38.5%\n    uint constant public teamReserve = 100000000e18; // 10%\n    uint constant public advisersReserve = 30000000e18; // 3%\n    uint constant public ecosystemReserve = 220000000e18; // 22%\n    uint constant public ecoLock23 = 146652000e18; // 2/3 of ecosystem reserve\n    uint constant public ecoLock13 = 73326000e18; // 1/3 of ecosystem reserve\n    uint constant public startTime = 1519815600; // Time after ICO, when tokens became transferable. Wednesday, 28 February 2018 11:00:00 GMT\n    uint public lockReleaseDate1year;\n    uint public lockReleaseDate2year;\n    address public ownerAddr;\n    address public ecosystemAddr;\n    address public advisersAddr;\n    bool burned;\n\n    // Array with all balances\n    mapping (address => uint) balances;\n    mapping (address => mapping (address => uint)) allowed;\n\n    // Public event on the blockchain that will notify clients\n    event Transfer(address indexed from, address indexed to, uint value);\n    event Approval(address indexed _owner, address indexed spender, uint value);\n    event Burned(uint amount);\n\n    // What is the balance of a particular account?\n    function balanceOf(address _owner) constant returns (uint balance) {\n        return balances[_owner];\n    }\n\n    // Returns the amount which _spender is still allowed to withdraw from _owner\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    // Get the total token supply\n    function totalSupply() constant returns (uint totalSupply) {\n        totalSupply = _totalSupply;\n    }\n\n    // Initializes contract with initial supply tokens to the creator of the contract\n    function LympoToken(address _ownerAddr, address _advisersAddr, address _ecosystemAddr) {\n        ownerAddr = _ownerAddr;\n        advisersAddr = _advisersAddr;\n        ecosystemAddr = _ecosystemAddr;\n        lockReleaseDate1year = startTime + 1 years; // 2019\n        lockReleaseDate2year = startTime + 2 years; // 2020\n        balances[ownerAddr] = _totalSupply; // Give the owner all initial tokens\n    }\n\t\n    // Send some of your tokens to a given address\n    function transfer(address _to, uint _value) returns(bool) {\n        require(now >= startTime); // Check if the crowdsale is already over\n\n        // prevent the owner of spending his share of tokens for team within first the two year\n        if (msg.sender == ownerAddr && now < lockReleaseDate2year)\n            require(balances[msg.sender].sub(_value) >= teamReserve);\n\n        // prevent the ecosystem owner of spending 2/3 share of tokens for the first year, 1/3 for the next year\n        if (msg.sender == ecosystemAddr && now < lockReleaseDate1year)\n            require(balances[msg.sender].sub(_value) >= ecoLock23);\n        else if (msg.sender == ecosystemAddr && now < lockReleaseDate2year)\n            require(balances[msg.sender].sub(_value) >= ecoLock13);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value); // Subtract from the sender\n        balances[_to] = balances[_to].add(_value); // Add the same to the recipient\n        Transfer(msg.sender, _to, _value); // Notify anyone listening that this transfer took place\n        return true;\n    }\n\t\n    // A contract or person attempts to get the tokens of somebody else.\n    // This is only allowed if the token holder approved.\n    function transferFrom(address _from, address _to, uint _value) returns(bool) {\n        if (now < startTime)  // Check if the crowdsale is already over\n            require(_from == ownerAddr);\n\n        // prevent the owner of spending his share of tokens for team within the first two year\n        if (_from == ownerAddr && now < lockReleaseDate2year)\n            require(balances[_from].sub(_value) >= teamReserve);\n\n        // prevent the ecosystem owner of spending 2/3 share of tokens for the first year, 1/3 for the next year\n        if (_from == ecosystemAddr && now < lockReleaseDate1year)\n            require(balances[_from].sub(_value) >= ecoLock23);\n        else if (_from == ecosystemAddr && now < lockReleaseDate2year)\n            require(balances[_from].sub(_value) >= ecoLock13);\n\n        var _allowed = allowed[_from][msg.sender];\n        balances[_from] = balances[_from].sub(_value); // Subtract from the sender\n        balances[_to] = balances[_to].add(_value); // Add the same to the recipient\n        allowed[_from][msg.sender] = _allowed.sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\t\n    // Approve the passed address to spend the specified amount of tokens\n    // on behalf of msg.sender.\n    function approve(address _spender, uint _value) returns (bool) {\n        //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    // Called when ICO is closed. Burns the remaining tokens except the tokens reserved:\n    // Anybody may burn the tokens after ICO ended, but only once (in case the owner holds more tokens in the future).\n    // this ensures that the owner will not posses a majority of the tokens.\n    function burn() {\n        // If tokens have not been burned already and the crowdsale ended\n        if (!burned && now > startTime) {\n            uint totalReserve = ecosystemReserve.add(teamReserve);\n            totalReserve = totalReserve.add(advisersReserve);\n            uint difference = balances[ownerAddr].sub(totalReserve);\n            balances[ownerAddr] = teamReserve;\n            balances[advisersAddr] = advisersReserve;\n            balances[ecosystemAddr] = ecosystemReserve;\n            _totalSupply = _totalSupply.sub(difference);\n            burned = true;\n            Burned(difference);\n        }\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisersReserve\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamReserve\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecoLock23\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPreICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockReleaseDate2year\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecosystemReserve\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockReleaseDate1year\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecosystemAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisersAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecoLock13\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ownerAddr\",\"type\":\"address\"},{\"name\":\"_advisersAddr\",\"type\":\"address\"},{\"name\":\"_ecosystemAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"}]",
  "bytecode": "60606040526b033b2e3c9fd0803ce8000000600055341561001f57600080fd5b604051606080611a4d8339810160405280805190602001909190805190602001909190805190602001909190505082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506301e13380635a968bb0016001819055506303c26700635a968bb00160028190555060005460066000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050506118a1806101ac6000396000f30060606040526004361061013e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610143578063095ea7b3146101d15780630a8f8fb91461022b57806318160ddd1461025457806323b872dd1461027d578063313ce567146102f65780634287f14a1461032557806344df8e701461034e5780634a222b74146103635780634d9997561461038c578063565118f7146103b55780635a3b7e42146103de5780636071eb5c1461046c57806370a0823114610495578063721ed9ec146104e257806375df1fe81461050b57806378e979251461053457806393ed013d1461055d57806395d89b41146105b25780639ba3c2e0146106405780639c675eaa14610695578063a9059cbb146106ea578063ba0c177714610744578063dd62ed3e1461076d575b600080fd5b341561014e57600080fd5b6101566107d9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561019657808201518184015260208101905061017b565b50505050905090810190601f1680156101c35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101dc57600080fd5b610211600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610812565b604051808215151515815260200191505060405180910390f35b341561023657600080fd5b61023e610999565b6040518082815260200191505060405180910390f35b341561025f57600080fd5b6102676109a8565b6040518082815260200191505060405180910390f35b341561028857600080fd5b6102dc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506109b1565b604051808215151515815260200191505060405180910390f35b341561030157600080fd5b610309610f3c565b604051808260ff1660ff16815260200191505060405180910390f35b341561033057600080fd5b610338610f41565b6040518082815260200191505060405180910390f35b341561035957600080fd5b610361610f50565b005b341561036e57600080fd5b6103766111fe565b6040518082815260200191505060405180910390f35b341561039757600080fd5b61039f61120d565b6040518082815260200191505060405180910390f35b34156103c057600080fd5b6103c861121c565b6040518082815260200191505060405180910390f35b34156103e957600080fd5b6103f1611222565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610431578082015181840152602081019050610416565b50505050905090810190601f16801561045e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561047757600080fd5b61047f61125b565b6040518082815260200191505060405180910390f35b34156104a057600080fd5b6104cc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061126a565b6040518082815260200191505060405180910390f35b34156104ed57600080fd5b6104f56112b3565b6040518082815260200191505060405180910390f35b341561051657600080fd5b61051e6112c3565b6040518082815260200191505060405180910390f35b341561053f57600080fd5b6105476112c9565b6040518082815260200191505060405180910390f35b341561056857600080fd5b6105706112d1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156105bd57600080fd5b6105c56112f7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106055780820151818401526020810190506105ea565b50505050905090810190601f1680156106325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561064b57600080fd5b610653611330565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106a057600080fd5b6106a8611356565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106f557600080fd5b61072a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061137c565b604051808215151515815260200191505060405180910390f35b341561074f57600080fd5b61075761179c565b6040518082815260200191505060405180910390f35b341561077857600080fd5b6107c3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506117ab565b6040518082815260200191505060405180910390f35b6040805190810160405280600c81526020017f4c796d706f20746f6b656e73000000000000000000000000000000000000000081525081565b60008082148061089e57506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b15156108a957600080fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6a18d0bf423c03d8de00000081565b60008054905090565b600080635a968bb0421015610a1d57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141515610a1c57600080fd5b5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015610a7b575060025442105b15610aec576a52b7d2dcc80cd2e4000000610ade84600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461183290919063ffffffff16565b10151515610aeb57600080fd5b5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015610b4a575060015442105b15610bbf576a794ec4d9977378d1800000610bad84600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461183290919063ffffffff16565b10151515610bba57600080fd5b610c8f565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015610c1d575060025442105b15610c8e576a3ca7626ccbb9bc68c00000610c8084600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461183290919063ffffffff16565b10151515610c8d57600080fd5b5b5b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610d6083600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461183290919063ffffffff16565b600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610df583600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461184b90919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e4b838261183290919063ffffffff16565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b601281565b6a52b7d2dcc80cd2e400000081565b600080600560149054906101000a900460ff16158015610f735750635a968bb042115b156111fa57610fa16a52b7d2dcc80cd2e40000006ab5facfe5b81c365c00000061184b90919063ffffffff16565b9150610fc16a18d0bf423c03d8de0000008361184b90919063ffffffff16565b91506110378260066000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461183290919063ffffffff16565b90506a52b7d2dcc80cd2e400000060066000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506a18d0bf423c03d8de00000060066000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506ab5facfe5b81c365c00000060066000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111a18160005461183290919063ffffffff16565b6000819055506001600560146101000a81548160ff0219169083151502179055507fd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e816040518082815260200191505060405180910390a15b5050565b6a794ec4d9977378d180000081565b6adb33eec91221fba900000081565b60025481565b6040805190810160405280600581526020017f455243323000000000000000000000000000000000000000000000000000000081525081565b6ab5facfe5b81c365c00000081565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6b013e76ebd202315f2100000081565b60015481565b635a968bb081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600381526020017f4c594d000000000000000000000000000000000000000000000000000000000081525081565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000635a968bb0421015151561139157600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156113ef575060025442105b15611460576a52b7d2dcc80cd2e400000061145283600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461183290919063ffffffff16565b1015151561145f57600080fd5b5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156114be575060015442105b15611533576a794ec4d9977378d180000061152183600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461183290919063ffffffff16565b1015151561152e57600080fd5b611603565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015611591575060025442105b15611602576a3ca7626ccbb9bc68c000006115f483600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461183290919063ffffffff16565b1015151561160157600080fd5b5b5b61165582600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461183290919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506116ea82600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461184b90919063ffffffff16565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6a3ca7626ccbb9bc68c0000081565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115151561184057fe5b818303905092915050565b60008082840190508381101580156118635750828110155b151561186b57fe5b80915050929150505600a165627a7a7230582066896b70111518949f4ecfd628993e8b75213aad436ea72fba946b36a7c2706f0029000000000000000000000000c1c04f74a97a1e7eedb23d181023d48933399929000000000000000000000000ca2bef18c2e913364fc782023549a70d237097c20000000000000000000000008f1d6707ce33e0c25be46a137450f0ebeb2f2f09",
  "constructorArguments": "000000000000000000000000c1c04f74a97a1e7eedb23d181023d48933399929000000000000000000000000ca2bef18c2e913364fc782023549a70d237097c20000000000000000000000008f1d6707ce33e0c25be46a137450f0ebeb2f2f09"
}