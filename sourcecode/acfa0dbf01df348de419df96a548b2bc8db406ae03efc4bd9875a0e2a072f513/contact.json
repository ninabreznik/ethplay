{
  "address": "0x9161ffceede0e8b895be72daed25196e41a2dbec",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BOB",
  "compilerVersion": "v0.5.4+commit.9549d8ff",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-03-07\n*/\n\npragma solidity ^0.5.4;\n\ncontract SafeMath {\n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b > 0);\n    uint256 c = a / b;\n    assert(a == b * c + a % b);\n    return c;\n  }\n\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c>=a && c>=b);\n    return c;\n  }\n\n}\n\ncontract BOB is SafeMath{\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 public totalSupply;\n\taddress public owner;\n    mapping (address => uint256) public balanceOf;\n\tmapping (address => uint256) public freezeOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Freeze(address indexed from, uint256 value);\n    event Unfreeze(address indexed from, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    constructor()  public  {\n        balanceOf[msg.sender] = 1000000000000000000000000000;\n        totalSupply = 1000000000000000000000000000;\n        name = \"BOBO Chain\";\n        symbol = \"BOB\";\n        decimals = 18;\n\t\towner = msg.sender;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n\t\trequire(_value > 0); \n        require(balanceOf[msg.sender] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n\t\tuint previousBalances = balanceOf[msg.sender] + balanceOf[_to];\t\t\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);\n        emit Transfer(msg.sender, _to, _value);\n\t\tassert(balanceOf[msg.sender]+balanceOf[_to]==previousBalances);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool success) {\n\t\trequire((_value == 0) || (allowance[msg.sender][_spender] == 0));\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require (_to != address(0));\n\t\trequire (_value > 0); \n        require (balanceOf[_from] >= _value) ;\n        require (balanceOf[_to] + _value > balanceOf[_to]);\n        require (_value <= allowance[_from][msg.sender]);\n        balanceOf[_from] = SafeMath.safeSub(balanceOf[_from], _value);\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);\n        allowance[_from][msg.sender] = SafeMath.safeSub(allowance[_from][msg.sender], _value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\t\n\tfunction freeze(uint256 _value) public returns (bool success) {\n        require (balanceOf[msg.sender] >= _value);\n\t\trequire (_value > 0); \n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);\n        freezeOf[msg.sender] = SafeMath.safeAdd(freezeOf[msg.sender], _value);\n        emit Freeze(msg.sender, _value);\n        return true;\n    }\n\t\n\tfunction unfreeze(uint256 _value) public returns (bool success) {\n        require (freezeOf[msg.sender] >= _value);\n\t\trequire (_value > 0) ; \n        freezeOf[msg.sender] = SafeMath.safeSub(freezeOf[msg.sender], _value);\n\t\tbalanceOf[msg.sender] = SafeMath.safeAdd(balanceOf[msg.sender], _value);\n        emit Unfreeze(msg.sender, _value);\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b503360009081526005602090815260408083206b033b2e3c9fd0803ce8000000908190556003558051808201909152600a8082527f424f424f20436861696e000000000000000000000000000000000000000000009190920190815261007692916100e0565b506040805180820190915260038082527f424f42000000000000000000000000000000000000000000000000000000000060209092019182526100bb916001916100e0565b506002805460ff1916601217905560048054600160a060020a0319163317905561017b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012157805160ff191683800117855561014e565b8280016001018555821561014e579182015b8281111561014e578251825591602001919060010190610133565b5061015a92915061015e565b5090565b61017891905b8082111561015a5760008155600101610164565b90565b6109ca8061018a6000396000f3fe608060405234801561001057600080fd5b50600436106100ec576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100a9578063a9059cbb11610083578063a9059cbb1461028b578063cd4217c1146102b7578063d7a78db8146102dd578063dd62ed3e146102fa576100ec565b806370a08231146102395780638da5cb5b1461025f57806395d89b4114610283576100ec565b806306fdde03146100f1578063095ea7b31461016e57806318160ddd146101ae57806323b872dd146101c8578063313ce567146101fe5780636623fc461461021c575b600080fd5b6100f9610328565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013357818101518382015260200161011b565b50505050905090810190601f1680156101605780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61019a6004803603604081101561018457600080fd5b50600160a060020a0381351690602001356103b6565b604080519115158252519081900360200190f35b6101b6610458565b60408051918252519081900360200190f35b61019a600480360360608110156101de57600080fd5b50600160a060020a0381358116916020810135909116906040013561045e565b6102066105f8565b6040805160ff9092168252519081900360200190f35b61019a6004803603602081101561023257600080fd5b5035610601565b6101b66004803603602081101561024f57600080fd5b5035600160a060020a03166106bb565b6102676106cd565b60408051600160a060020a039092168252519081900360200190f35b6100f96106dc565b61019a600480360360408110156102a157600080fd5b50600160a060020a038135169060200135610736565b6101b6600480360360208110156102cd57600080fd5b5035600160a060020a031661087f565b61019a600480360360208110156102f357600080fd5b5035610891565b6101b66004803603604081101561031057600080fd5b50600160a060020a038135811691602001351661094b565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103ae5780601f10610383576101008083540402835291602001916103ae565b820191906000526020600020905b81548152906001019060200180831161039157829003601f168201915b505050505081565b60008115806103e65750336000908152600760209081526040808320600160a060020a0387168452909152902054155b15156103f157600080fd5b336000818152600760209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60035481565b6000600160a060020a038316151561047557600080fd5b6000821161048257600080fd5b600160a060020a0384166000908152600560205260409020548211156104a757600080fd5b600160a060020a038316600090815260056020526040902054828101116104cd57600080fd5b600160a060020a03841660009081526007602090815260408083203384529091529020548211156104fd57600080fd5b600160a060020a0384166000908152600560205260409020546105209083610968565b600160a060020a03808616600090815260056020526040808220939093559085168152205461054f908361097a565b600160a060020a03808516600090815260056020908152604080832094909455918716815260078252828120338252909152205461058d9083610968565b600160a060020a03808616600081815260076020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60025460ff1681565b3360009081526006602052604081205482111561061d57600080fd5b6000821161062a57600080fd5b336000908152600660205260409020546106449083610968565b3360009081526006602090815260408083209390935560059052205461066a908361097a565b33600081815260056020908152604091829020939093558051858152905191927f2cfce4af01bcb9d6cf6c84ee1b7c491100b8695368264146a94d71e10a63083f92918290030190a2506001919050565b60056020526000908152604090205481565b600454600160a060020a031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103ae5780601f10610383576101008083540402835291602001916103ae565b6000600160a060020a038316151561074d57600080fd5b6000821161075a57600080fd5b3360009081526005602052604090205482111561077657600080fd5b600160a060020a038316600090815260056020526040902054828101101561079d57600080fd5b600160a060020a03831660009081526005602052604080822054338352912054908101906107cb9084610968565b3360009081526005602052604080822092909255600160a060020a038616815220546107f7908461097a565b600160a060020a0385166000818152600560209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3600160a060020a0384166000908152600560205260408082205433835291205401811461087557fe5b5060019392505050565b60066020526000908152604090205481565b336000908152600560205260408120548211156108ad57600080fd5b600082116108ba57600080fd5b336000908152600560205260409020546108d49083610968565b336000908152600560209081526040808320939093556006905220546108fa908361097a565b33600081815260066020908152604091829020939093558051858152905191927ff97a274face0b5517365ad396b1fdba6f68bd3135ef603e44272adba3af5a1e092918290030190a2506001919050565b600760209081526000928352604080842090915290825290205481565b60008282111561097457fe5b50900390565b600082820183811080159061098f5750828110155b151561099757fe5b939250505056fea165627a7a72305820c9e0fe4f705d3f6b2240a1f644d7dbd5530b5e32d563232b2be1596157d09d7e0029"
}