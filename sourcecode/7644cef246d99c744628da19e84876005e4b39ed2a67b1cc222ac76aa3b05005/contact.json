{
  "address": "0xfbabe4005eddd1e7307eeaa84594afcf01eeeb40",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "TokenSwap",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-06-03\n*/\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\n\npragma solidity ^0.4.24;\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address _who) public view returns (uint256);\n  function transfer(address _to, uint256 _value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\n\npragma solidity ^0.4.24;\n\n\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address _owner, address _spender)\n    public view returns (uint256);\n\n  function transferFrom(address _from, address _to, uint256 _value)\n    public returns (bool);\n\n  function approve(address _spender, uint256 _value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\npragma solidity ^0.4.24;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (_a == 0) {\n      return 0;\n    }\n\n    c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = _a / _b;\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n    return _a / _b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    c = _a + _b;\n    assert(c >= _a);\n    return c;\n  }\n}\n\n// File: contracts/Utils/Ownable.sol\n\npragma solidity ^0.4.24;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner, \"msg.sender not owner\");\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0), \"_newOwner == 0\");\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n// File: contracts/Utils/Destructible.sol\n\npragma solidity ^0.4.24;\n\n\n/**\n * @title Destructible\n * @dev Base contract that can be destroyed by owner. All funds in contract will be sent to the owner.\n */\ncontract Destructible is Ownable {\n  /**\n   * @dev Transfers the current balance to the owner and terminates the contract.\n   */\n  function destroy() public onlyOwner {\n    selfdestruct(owner);\n  }\n\n  function destroyAndSend(address _recipient) public onlyOwner {\n    selfdestruct(_recipient);\n  }\n}\n\n// File: contracts/Interfaces/IWallet.sol\n\npragma solidity ^0.4.24;\n\n/**\n * @title Wallet interface.\n * @dev The interface of the SC that own the assets.\n */\ninterface IWallet {\n\n  function transferAssetTo(\n    address _assetAddress,\n    address _to,\n    uint _amount\n  ) external payable returns (bool);\n\n  function withdrawAsset(\n    address _assetAddress,\n    uint _amount\n  ) external returns (bool);\n\n  function setTokenSwapAllowance (\n    address _tokenSwapAddress,\n    bool _allowance\n  ) external returns(bool);\n}\n\n// File: contracts/Utils/Pausable.sol\n\npragma solidity ^0.4.24;\n\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused, \"The contract is paused\");\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused, \"The contract is not paused\");\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() public onlyOwner whenNotPaused {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() public onlyOwner whenPaused {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n// File: contracts/Interfaces/IBadERC20.sol\n\npragma solidity ^0.4.24;\n\n/**\n * @title Bad formed ERC20 token interface.\n * @dev The interface of the a bad formed ERC20 token.\n */\ninterface IBadERC20 {\n    function transfer(address to, uint256 value) external;\n    function approve(address spender, uint256 value) external;\n    function transferFrom(\n      address from,\n      address to,\n      uint256 value\n    ) external;\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(\n      address who\n    ) external view returns (uint256);\n\n    function allowance(\n      address owner,\n      address spender\n    ) external view returns (uint256);\n\n    event Transfer(\n      address indexed from,\n      address indexed to,\n      uint256 value\n    );\n    event Approval(\n      address indexed owner,\n      address indexed spender,\n      uint256 value\n    );\n}\n\n// File: contracts/Utils/SafeTransfer.sol\n\npragma solidity ^0.4.24;\n\n\n/**\n * @title SafeTransfer\n * @dev Transfer Bad ERC20 tokens\n */\nlibrary SafeTransfer {\n/**\n   * @dev Wrapping the ERC20 transferFrom function to avoid missing returns.\n   * @param _tokenAddress The address of bad formed ERC20 token.\n   * @param _from Transfer sender.\n   * @param _to Transfer receiver.\n   * @param _value Amount to be transfered.\n   * @return Success of the safeTransferFrom.\n   */\n\n  function _safeTransferFrom(\n    address _tokenAddress,\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    internal\n    returns (bool result)\n  {\n    IBadERC20(_tokenAddress).transferFrom(_from, _to, _value);\n\n    assembly {\n      switch returndatasize()\n      case 0 {                      // This is our BadToken\n        result := not(0)            // result is true\n      }\n      case 32 {                     // This is our GoodToken\n        returndatacopy(0, 0, 32)\n        result := mload(0)          // result == returndata of external call\n      }\n      default {                     // This is not an ERC20 token\n        revert(0, 0)\n      }\n    }\n  }\n\n  /**\n   * @dev Wrapping the ERC20 transfer function to avoid missing returns.\n   * @param _tokenAddress The address of bad formed ERC20 token.\n   * @param _to Transfer receiver.\n   * @param _amount Amount to be transfered.\n   * @return Success of the safeTransfer.\n   */\n  function _safeTransfer(\n    address _tokenAddress,\n    address _to,\n    uint _amount\n  )\n    internal\n    returns (bool result)\n  {\n    IBadERC20(_tokenAddress).transfer(_to, _amount);\n\n    assembly {\n      switch returndatasize()\n      case 0 {                      // This is our BadToken\n        result := not(0)            // result is true\n      }\n      case 32 {                     // This is our GoodToken\n        returndatacopy(0, 0, 32)\n        result := mload(0)          // result == returndata of external call\n      }\n      default {                     // This is not an ERC20 token\n        revert(0, 0)\n      }\n    }\n  }\n}\n\n// File: contracts/TokenSwap.sol\n\npragma solidity ^0.4.24;\n\n\n\n\n\n\n\n/**\n * @title TokenSwap.\n * @author Eidoo SAGL.\n * @dev A swap asset contract. The offerAmount and wantAmount are collected and sent into the contract itself.\n */\ncontract TokenSwap is\n  Pausable,\n  Destructible\n{\n  using SafeMath for uint;\n\n  address public baseTokenAddress;\n  address public quoteTokenAddress;\n\n  address public wallet;\n\n  uint public buyRate;\n  uint public buyRateDecimals;\n  uint public sellRate;\n  uint public sellRateDecimals;\n\n  event LogWithdrawToken(\n    address indexed _from,\n    address indexed _token,\n    uint amount\n  );\n  event LogSetWallet(address indexed _wallet);\n  event LogSetBaseTokenAddress(address indexed _token);\n  event LogSetQuoteTokenAddress(address indexed _token);\n  event LogSetRateAndRateDecimals(\n    uint _buyRate,\n    uint _buyRateDecimals,\n    uint _sellRate,\n    uint _sellRateDecimals\n  );\n  event LogSetNumberOfZeroesFromLastDigit(\n    uint _numberOfZeroesFromLastDigit\n  );\n  event LogTokenSwap(\n    address indexed _userAddress,\n    address indexed _userSentTokenAddress,\n    uint _userSentTokenAmount,\n    address indexed _userReceivedTokenAddress,\n    uint _userReceivedTokenAmount\n  );\n\n  /**\n   * @dev Contract constructor.\n   * @param _baseTokenAddress  The base of the swap pair.\n   * @param _quoteTokenAddress The quote of the swap pair.\n   * @param _buyRate Purchase rate, how many baseToken for the given quoteToken.\n   * @param _buyRateDecimals Define the decimals precision for the given asset.\n   * @param _sellRate Purchase rate, how many quoteToken for the given baseToken.\n   * @param _sellRateDecimals Define the decimals precision for the given asset.\n   */\n  constructor(\n    address _baseTokenAddress,\n    address _quoteTokenAddress,\n    address _wallet,\n    uint _buyRate,\n    uint _buyRateDecimals,\n    uint _sellRate,\n    uint _sellRateDecimals\n  )\n    public\n  {\n    require(_wallet != address(0), \"_wallet == address(0)\");\n    baseTokenAddress = _baseTokenAddress;\n    quoteTokenAddress = _quoteTokenAddress;\n    wallet = _wallet;\n    buyRate = _buyRate;\n    buyRateDecimals = _buyRateDecimals;\n    sellRate = _sellRate;\n    sellRateDecimals = _sellRateDecimals;\n  }\n\n  function() external {\n    revert(\"fallback function not allowed\");\n  }\n\n  /**\n   * @dev Set base token address.\n   * @param _baseTokenAddress The pair base token address.\n   * @return bool.\n   */\n  function setBaseTokenAddress(address _baseTokenAddress)\n    public\n    onlyOwner\n    returns (bool)\n  {\n    baseTokenAddress = _baseTokenAddress;\n    emit LogSetBaseTokenAddress(_baseTokenAddress);\n    return true;\n  }\n\n  /**\n   * @dev Set quote token address.\n   * @param _quoteTokenAddress The quote token address.\n   * @return bool.\n   */\n  function setQuoteTokenAddress(address _quoteTokenAddress)\n    public\n    onlyOwner\n    returns (bool)\n  {\n    quoteTokenAddress = _quoteTokenAddress;\n    emit LogSetQuoteTokenAddress(_quoteTokenAddress);\n    return true;\n  }\n\n  /**\n   * @dev Set wallet sc address.\n   * @param _wallet The wallet sc address.\n   * @return bool.\n   */\n  function setWallet(address _wallet)\n    public\n    onlyOwner\n    returns (bool)\n  {\n    require(_wallet != address(0), \"_wallet == address(0)\");\n    wallet = _wallet;\n    emit LogSetWallet(_wallet);\n    return true;\n  }\n\n  /**\n   * @dev Set rate.\n   * @param _buyRate Multiplier, how many base token for the quote token.\n   * @param _buyRateDecimals Number of significan digits of the rate.\n   * @param _sellRate Multiplier, how many quote token for the base token.\n   * @param _sellRateDecimals Number of significan digits of the rate.\n   * @return bool.\n   */\n  function setRateAndRateDecimals(\n    uint _buyRate,\n    uint _buyRateDecimals,\n    uint _sellRate,\n    uint _sellRateDecimals\n  )\n    public\n    onlyOwner\n    returns (bool)\n  {\n    require(_buyRate != buyRate, \"_buyRate == buyRate\");\n    require(_buyRate != 0, \"_buyRate == 0\");\n    require(_sellRate != sellRate, \"_sellRate == sellRate\");\n    require(_sellRate != 0, \"_sellRate == 0\");\n    buyRate = _buyRate;\n    sellRate = _sellRate;\n    buyRateDecimals = _buyRateDecimals;\n    sellRateDecimals = _sellRateDecimals;\n    emit LogSetRateAndRateDecimals(\n      _buyRate,\n      _buyRateDecimals,\n      _sellRate,\n      _sellRateDecimals\n    );\n    return true;\n  }\n\n  /**\n   * @dev Withdraw asset.\n   * @param _tokenAddress Asset to be withdrawed.\n   * @return bool.\n   */\n  function withdrawToken(address _tokenAddress)\n    public\n    onlyOwner\n    returns(bool)\n  {\n    uint tokenBalance;\n    if (isETH(_tokenAddress)) {\n      tokenBalance = address(this).balance;\n      msg.sender.transfer(tokenBalance);\n    } else {\n      tokenBalance = ERC20(_tokenAddress).balanceOf(address(this));\n      require(\n        SafeTransfer._safeTransfer(_tokenAddress, msg.sender, tokenBalance),\n        \"withdraw transfer failed\"\n      );\n    }\n    emit LogWithdrawToken(msg.sender, _tokenAddress, tokenBalance);\n    return true;\n  }\n\n  /**\n   * @dev Understand if the user swap request is a BUY or a SELL.\n   * @param _offerTokenAddress The token address the purchaser is offering (It may be the quote or the base).\n   * @return bool.\n   */\n\n  function isBuy(address _offerTokenAddress)\n    public\n    view\n    returns (bool)\n  {\n    return _offerTokenAddress == quoteTokenAddress;\n  }\n\n  /**\n   * @dev Understand if the token is ETH or not.\n   * @param _tokenAddress The token address the purchaser is offering (It may be the quote or the base).\n   * @return bool.\n   */\n\n  function isETH(address _tokenAddress)\n    public\n    pure\n    returns (bool)\n  {\n    return _tokenAddress == address(0);\n  }\n\n  /**\n   * @dev Understand if the user swap request is for the available pair.\n   * @param _offerTokenAddress The token address the purchaser is offering (It may be the quote or the base).\n   * @return bool.\n   */\n\n  function isOfferInPair(address _offerTokenAddress)\n    public\n    view\n    returns (bool)\n  {\n    return _offerTokenAddress == quoteTokenAddress ||\n      _offerTokenAddress == baseTokenAddress;\n  }\n\n  /**\n   * @dev Function to calculate the number of tokens the user is going to receive.\n   * @param _offerTokenAmount The amount of tokne number of WEI to convert in ERC20.\n   * @return uint.\n   */\n  function getAmount(\n    uint _offerTokenAmount,\n    bool _isBuy\n  )\n    public\n    view\n    returns(uint)\n  {\n    uint amount;\n    if (_isBuy) {\n      amount = _offerTokenAmount.mul(buyRate).div(10 ** buyRateDecimals);\n    } else {\n      amount = _offerTokenAmount.mul(sellRate).div(10 ** sellRateDecimals);\n    }\n    return amount;\n  }\n\n  /**\n   * @dev Release purchased asset to the buyer based on pair rate.\n   * @param _userOfferTokenAddress The token address the purchaser is offering (It may be the quote or the base).\n   * @param _userOfferTokenAmount The amount of token the user want to swap.\n   * @return bool.\n   */\n  function swapToken (\n    address _userOfferTokenAddress,\n    uint _userOfferTokenAmount\n  )\n    public\n    whenNotPaused\n    payable\n    returns (bool)\n  {\n    require(_userOfferTokenAmount != 0, \"_userOfferTokenAmount == 0\");\n    // check if offered token address is the base or the quote token address\n    require(\n      isOfferInPair(_userOfferTokenAddress),\n      \"_userOfferTokenAddress not in pair\"\n    );\n    // check if the msg.value is consistent when offered token address is eth\n    if (isETH(_userOfferTokenAddress)) {\n      require(_userOfferTokenAmount == msg.value, \"msg.value != _userOfferTokenAmount\");\n    } else {\n      require(msg.value == 0, \"msg.value != 0\");\n    }\n    bool isUserBuy = isBuy(_userOfferTokenAddress);\n    uint toWalletAmount = _userOfferTokenAmount;\n    uint toUserAmount = getAmount(\n      _userOfferTokenAmount,\n      isUserBuy\n    );\n    require(toUserAmount > 0, \"toUserAmount must be greater than 0\");\n    if (isUserBuy) {\n      // send the quote to wallet\n      require(\n        _transferAmounts(\n          msg.sender,\n          wallet,\n          quoteTokenAddress,\n          toWalletAmount\n        ),\n        \"the transfer from of the quote the user to the TokenSwap SC failed\"\n      );\n      // send the base to user\n      require(\n        _transferAmounts(\n          wallet,\n          msg.sender,\n          baseTokenAddress,\n          toUserAmount\n        ),\n        \"the transfer of the base from the TokenSwap SC to the user failed\"\n      );\n      emit LogTokenSwap(\n        msg.sender,\n        quoteTokenAddress,\n        toWalletAmount,\n        baseTokenAddress,\n        toUserAmount\n      );\n    } else {\n      // send the base to wallet\n      require(\n        _transferAmounts(\n          msg.sender,\n          wallet,\n          baseTokenAddress,\n          toWalletAmount\n        ),\n        \"the transfer of the base from the user to the TokenSwap SC failed\"\n      );\n      // send the quote to user\n      require(\n        _transferAmounts(\n          wallet,\n          msg.sender,\n          quoteTokenAddress,\n          toUserAmount\n        ),\n        \"the transfer of the quote from the TokenSwap SC to the user failed\"\n      );\n      emit LogTokenSwap(\n        msg.sender,\n        baseTokenAddress,\n        toWalletAmount,\n        quoteTokenAddress,\n        toUserAmount\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @dev Transfer amounts from user to this contract and vice versa.\n   * @param _from The 'from' address.\n   * @param _to The 'to' address.\n   * @param _tokenAddress The asset to be transfer.\n   * @param _amount The amount to be transfer.\n   * @return bool.\n   */\n  function _transferAmounts(\n    address _from,\n    address _to,\n    address _tokenAddress,\n    uint _amount\n  )\n    private\n    returns (bool)\n  {\n    if (isETH(_tokenAddress)) {\n      if (_from == wallet) {\n        require(\n          IWallet(_from).transferAssetTo(\n            _tokenAddress,\n            _to,\n            _amount\n          ),\n          \"trasnsferAssetTo failed\"\n        );\n      } else {\n        _to.transfer(_amount);\n      }\n    } else {\n      if (_from == wallet) {\n        require(\n          IWallet(_from).transferAssetTo(\n            _tokenAddress,\n            _to,\n            _amount\n          ),\n          \"trasnsferAssetTo failed\"\n        );\n      } else {\n        require(\n          SafeTransfer._safeTransferFrom(\n            _tokenAddress,\n            _from,\n            _to,\n            _amount\n        ),\n          \"transferFrom reserve to _receiver failed\"\n        );\n      }\n    }\n    return true;\n  }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"_buyRate\",\"type\":\"uint256\"},{\"name\":\"_buyRateDecimals\",\"type\":\"uint256\"},{\"name\":\"_sellRate\",\"type\":\"uint256\"},{\"name\":\"_sellRateDecimals\",\"type\":\"uint256\"}],\"name\":\"setRateAndRateDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellRateDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_baseTokenAddress\",\"type\":\"address\"}],\"name\":\"setBaseTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_quoteTokenAddress\",\"type\":\"address\"}],\"name\":\"setQuoteTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_offerTokenAmount\",\"type\":\"uint256\"},{\"name\":\"_isBuy\",\"type\":\"bool\"}],\"name\":\"getAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyRateDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"quoteTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userOfferTokenAddress\",\"type\":\"address\"},{\"name\":\"_userOfferTokenAmount\",\"type\":\"uint256\"}],\"name\":\"swapToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_offerTokenAddress\",\"type\":\"address\"}],\"name\":\"isBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_offerTokenAddress\",\"type\":\"address\"}],\"name\":\"isOfferInPair\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"isETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_baseTokenAddress\",\"type\":\"address\"},{\"name\":\"_quoteTokenAddress\",\"type\":\"address\"},{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_buyRate\",\"type\":\"uint256\"},{\"name\":\"_buyRateDecimals\",\"type\":\"uint256\"},{\"name\":\"_sellRate\",\"type\":\"uint256\"},{\"name\":\"_sellRateDecimals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdrawToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"LogSetWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"LogSetBaseTokenAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"LogSetQuoteTokenAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_buyRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_buyRateDecimals\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_sellRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_sellRateDecimals\",\"type\":\"uint256\"}],\"name\":\"LogSetRateAndRateDecimals\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_numberOfZeroesFromLastDigit\",\"type\":\"uint256\"}],\"name\":\"LogSetNumberOfZeroesFromLastDigit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_userSentTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_userSentTokenAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_userReceivedTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_userReceivedTokenAmount\",\"type\":\"uint256\"}],\"name\":\"LogTokenSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60806040526000805460a060020a60ff021916905534801561002057600080fd5b5060405160e080611d1e83398101604090815281516020830151918301516060840151608085015160a086015160c09096015160008054600160a060020a031916331790559395929391929091600160a060020a03851615156100e457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f5f77616c6c6574203d3d20616464726573732830290000000000000000000000604482015290519081900360640190fd5b60018054600160a060020a0319908116600160a060020a03998a161790915560028054821697891697909717909655600380549096169490961693909317909355600455600591909155600655600755611bdb806101436000396000f3006080604052600436106101485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630cca8a5881146101a5578063380d1215146101da5780633f4ba83a14610201578063521eb273146102185780635c975abb146102495780635dfc34d41461025e5780636217229b1461027f578063715018a6146102945780637507791a146102a95780637924e0c7146102ca5780637cb374bd146102e757806383197ef0146102fc5780638456cb591461031157806389476069146103265780638acf0212146103475780638da5cb5b1461035c578063bad3462014610371578063cc87ab2a14610386578063deaa59df1461039d578063ee97dec2146103be578063ef383a18146103df578063f2fde38b14610400578063f5074f4114610421578063f70a250814610442578063fc37987b14610463575b34801561015457600080fd5b506040805160e560020a62461bcd02815260206004820152601d60248201527f66616c6c6261636b2066756e6374696f6e206e6f7420616c6c6f776564000000604482015290519081900360640190fd5b3480156101b157600080fd5b506101c6600435602435604435606435610478565b604080519115158252519081900360200190f35b3480156101e657600080fd5b506101ef610691565b60408051918252519081900360200190f35b34801561020d57600080fd5b50610216610697565b005b34801561022457600080fd5b5061022d610791565b60408051600160a060020a039092168252519081900360200190f35b34801561025557600080fd5b506101c66107a0565b34801561026a57600080fd5b506101c6600160a060020a03600435166107b0565b34801561028b57600080fd5b506101ef61085d565b3480156102a057600080fd5b50610216610863565b3480156102b557600080fd5b506101c6600160a060020a0360043516610908565b3480156102d657600080fd5b506101ef60043560243515156109b5565b3480156102f357600080fd5b5061022d610a17565b34801561030857600080fd5b50610216610a26565b34801561031d57600080fd5b50610216610a84565b34801561033257600080fd5b506101c6600160a060020a0360043516610b83565b34801561035357600080fd5b506101ef610d54565b34801561036857600080fd5b5061022d610d5a565b34801561037d57600080fd5b5061022d610d69565b6101c6600160a060020a0360043516602435610d78565b3480156103a957600080fd5b506101c6600160a060020a03600435166113f7565b3480156103ca57600080fd5b506101c6600160a060020a0360043516611504565b3480156103eb57600080fd5b506101c6600160a060020a0360043516611518565b34801561040c57600080fd5b50610216600160a060020a036004351661154a565b34801561042d57600080fd5b50610216600160a060020a03600435166115a6565b34801561044e57600080fd5b506101c6600160a060020a0360043516611602565b34801561046f57600080fd5b506101ef61160f565b60008054600160a060020a031633146104c9576040805160e560020a62461bcd0281526020600482015260146024820152600080516020611b90833981519152604482015290519081900360640190fd5b600454851415610523576040805160e560020a62461bcd02815260206004820152601360248201527f5f62757952617465203d3d206275795261746500000000000000000000000000604482015290519081900360640190fd5b84151561057a576040805160e560020a62461bcd02815260206004820152600d60248201527f5f62757952617465203d3d203000000000000000000000000000000000000000604482015290519081900360640190fd5b6006548314156105d4576040805160e560020a62461bcd02815260206004820152601560248201527f5f73656c6c52617465203d3d2073656c6c526174650000000000000000000000604482015290519081900360640190fd5b82151561062b576040805160e560020a62461bcd02815260206004820152600e60248201527f5f73656c6c52617465203d3d2030000000000000000000000000000000000000604482015290519081900360640190fd5b600485905560068390556005849055600782905560408051868152602081018690528082018590526060810184905290517fc4904be34c8c7b848d5fbcf57c62cfcf418c5802b1d5f4df8e62d9641b920b5d9181900360800190a1506001949350505050565b60075481565b600054600160a060020a031633146106e7576040805160e560020a62461bcd0281526020600482015260146024820152600080516020611b90833981519152604482015290519081900360640190fd5b60005460a060020a900460ff16151561074a576040805160e560020a62461bcd02815260206004820152601a60248201527f54686520636f6e7472616374206973206e6f7420706175736564000000000000604482015290519081900360640190fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b600354600160a060020a031681565b60005460a060020a900460ff1681565b60008054600160a060020a03163314610801576040805160e560020a62461bcd0281526020600482015260146024820152600080516020611b90833981519152604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384169081179091556040517fd57c80a536dd1c12fa331259984ecd4b4239c0fd0d60a6387dc1932ec56a9bbf90600090a2506001919050565b60065481565b600054600160a060020a031633146108b3576040805160e560020a62461bcd0281526020600482015260146024820152600080516020611b90833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60008054600160a060020a03163314610959576040805160e560020a62461bcd0281526020600482015260146024820152600080516020611b90833981519152604482015290519081900360640190fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384169081179091556040517f8d35ae31c9b45ce9f34ec09dd12dab1bc2b26e3d7feb213a721a0b4b2bcd011c90600090a2506001919050565b60008082156109ef576109e8600554600a0a6109dc6004548761161590919063ffffffff16565b9063ffffffff61163e16565b9050610a10565b610a0d600754600a0a6109dc6006548761161590919063ffffffff16565b90505b9392505050565b600154600160a060020a031681565b600054600160a060020a03163314610a76576040805160e560020a62461bcd0281526020600482015260146024820152600080516020611b90833981519152604482015290519081900360640190fd5b600054600160a060020a0316ff5b600054600160a060020a03163314610ad4576040805160e560020a62461bcd0281526020600482015260146024820152600080516020611b90833981519152604482015290519081900360640190fd5b60005460a060020a900460ff1615610b36576040805160e560020a62461bcd02815260206004820152601660248201527f54686520636f6e74726163742069732070617573656400000000000000000000604482015290519081900360640190fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600080548190600160a060020a03163314610bd6576040805160e560020a62461bcd0281526020600482015260146024820152600080516020611b90833981519152604482015290519081900360640190fd5b610bdf83611602565b15610c1b5750604051303190339082156108fc029083906000818181858888f19350505050158015610c15573d6000803e3d6000fd5b50610d0b565b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038516916370a082319160248083019260209291908290030181600087803b158015610c7c57600080fd5b505af1158015610c90573d6000803e3d6000fd5b505050506040513d6020811015610ca657600080fd5b50519050610cb5833383611653565b1515610d0b576040805160e560020a62461bcd02815260206004820152601860248201527f7769746864726177207472616e73666572206661696c65640000000000000000604482015290519081900360640190fd5b604080518281529051600160a060020a0385169133917f46ae78bc7b198b8b534ca0070d125569ac5f955976841c4343223079f3abf0de9181900360200190a350600192915050565b60055481565b600054600160a060020a031681565b600254600160a060020a031681565b6000805481908190819060a060020a900460ff1615610de1576040805160e560020a62461bcd02815260206004820152601660248201527f54686520636f6e74726163742069732070617573656400000000000000000000604482015290519081900360640190fd5b841515610e38576040805160e560020a62461bcd02815260206004820152601a60248201527f5f757365724f66666572546f6b656e416d6f756e74203d3d2030000000000000604482015290519081900360640190fd5b610e4186611518565b1515610ebd576040805160e560020a62461bcd02815260206004820152602260248201527f5f757365724f66666572546f6b656e41646472657373206e6f7420696e20706160448201527f6972000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610ec686611602565b15610f4d57348514610f48576040805160e560020a62461bcd02815260206004820152602260248201527f6d73672e76616c756520213d205f757365724f66666572546f6b656e416d6f7560448201527f6e74000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610fa3565b3415610fa3576040805160e560020a62461bcd02815260206004820152600e60248201527f6d73672e76616c756520213d2030000000000000000000000000000000000000604482015290519081900360640190fd5b610fac86611504565b9250849150610fbb85846109b5565b90506000811161103b576040805160e560020a62461bcd02815260206004820152602360248201527f746f55736572416d6f756e74206d75737420626520677265617465722074686160448201527f6e20300000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b821561121857600354600254611060913391600160a060020a0391821691168561170a565b1515611102576040805160e560020a62461bcd02815260206004820152604260248201527f746865207472616e736665722066726f6d206f66207468652071756f7465207460448201527f6865207573657220746f2074686520546f6b656e53776170205343206661696c60648201527f6564000000000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b60035460015461112191600160a060020a03908116913391168461170a565b15156111c3576040805160e560020a62461bcd02815260206004820152604160248201527f746865207472616e73666572206f662074686520626173652066726f6d20746860448201527f6520546f6b656e5377617020534320746f207468652075736572206661696c6560648201527f6400000000000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b60015460025460408051858152602081018590528151600160a060020a03948516949093169233927f3ec01f4da9d8c31a1cdb8e6e7231364ba5ef0850b01daaa44a9f126f920693c6928290030190a46113eb565b600354600154611237913391600160a060020a0391821691168561170a565b15156112d9576040805160e560020a62461bcd02815260206004820152604160248201527f746865207472616e73666572206f662074686520626173652066726f6d20746860448201527f65207573657220746f2074686520546f6b656e53776170205343206661696c6560648201527f6400000000000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b6003546002546112f891600160a060020a03908116913391168461170a565b151561139a576040805160e560020a62461bcd02815260206004820152604260248201527f746865207472616e73666572206f66207468652071756f74652066726f6d207460448201527f686520546f6b656e5377617020534320746f207468652075736572206661696c60648201527f6564000000000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b60025460015460408051858152602081018590528151600160a060020a03948516949093169233927f3ec01f4da9d8c31a1cdb8e6e7231364ba5ef0850b01daaa44a9f126f920693c6928290030190a45b50600195945050505050565b60008054600160a060020a03163314611448576040805160e560020a62461bcd0281526020600482015260146024820152600080516020611b90833981519152604482015290519081900360640190fd5b600160a060020a03821615156114a8576040805160e560020a62461bcd02815260206004820152601560248201527f5f77616c6c6574203d3d20616464726573732830290000000000000000000000604482015290519081900360640190fd5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384169081179091556040517fc2a4aefc86e461960720b1a2b37ba58c9fa49ae4e4d19dec0ef4e94dc420bf4890600090a2506001919050565b600254600160a060020a0390811691161490565b600254600090600160a060020a03838116911614806115445750600154600160a060020a038381169116145b92915050565b600054600160a060020a0316331461159a576040805160e560020a62461bcd0281526020600482015260146024820152600080516020611b90833981519152604482015290519081900360640190fd5b6115a381611a07565b50565b600054600160a060020a031633146115f6576040805160e560020a62461bcd0281526020600482015260146024820152600080516020611b90833981519152604482015290519081900360640190fd5b80600160a060020a0316ff5b600160a060020a03161590565b60045481565b600082151561162657506000611544565b5081810281838281151561163657fe5b041461154457fe5b6000818381151561164b57fe5b049392505050565b604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03848116600483015260248201849052915160009286169163a9059cbb916044808301928692919082900301818387803b1580156116be57600080fd5b505af11580156116d2573d6000803e3d6000fd5b505050503d600081146116ec57602081146116f657600080fd5b6000199150611702565b60206000803e60005191505b509392505050565b600061171583611602565b1561186857600354600160a060020a038681169116141561182b57604080517ff46e62f0000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015286811660248301526044820185905291519187169163f46e62f0916064808201926020929091908290030181600087803b1580156117a457600080fd5b505af11580156117b8573d6000803e3d6000fd5b505050506040513d60208110156117ce57600080fd5b50511515611826576040805160e560020a62461bcd02815260206004820152601760248201527f747261736e736665724173736574546f206661696c6564000000000000000000604482015290519081900360640190fd5b611863565b604051600160a060020a0385169083156108fc029084906000818181858888f19350505050158015611861573d6000803e3d6000fd5b505b6119fc565b600354600160a060020a038681169116141561197457604080517ff46e62f0000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015286811660248301526044820185905291519187169163f46e62f0916064808201926020929091908290030181600087803b1580156118f257600080fd5b505af1158015611906573d6000803e3d6000fd5b505050506040513d602081101561191c57600080fd5b50511515611863576040805160e560020a62461bcd02815260206004820152601760248201527f747261736e736665724173736574546f206661696c6564000000000000000000604482015290519081900360640190fd5b61198083868685611acf565b15156119fc576040805160e560020a62461bcd02815260206004820152602860248201527f7472616e7366657246726f6d207265736572766520746f205f7265636569766560448201527f72206661696c6564000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b506001949350505050565b600160a060020a0381161515611a67576040805160e560020a62461bcd02815260206004820152600e60248201527f5f6e65774f776e6572203d3d2030000000000000000000000000000000000000604482015290519081900360640190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015284811660248301526044820184905291516000928716916323b872dd916064808301928692919082900301818387803b158015611b4257600080fd5b505af1158015611b56573d6000803e3d6000fd5b505050503d60008114611b705760208114611b7a57600080fd5b6000199150611b86565b60206000803e60005191505b5094935050505056006d73672e73656e646572206e6f74206f776e6572000000000000000000000000a165627a7a723058205a6c41d80e14f008bd2445dbba6d803f76f72f858dc7f048f9ba1b4654f9a9420029000000000000000000000000ced4e93198734ddaff8492d525bd258d49eb388e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f4ba4c2aa5bc3c373537ec85f61a02afdb6971060000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001",
  "constructorArguments": "000000000000000000000000ced4e93198734ddaff8492d525bd258d49eb388e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f4ba4c2aa5bc3c373537ec85f61a02afdb6971060000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001"
}