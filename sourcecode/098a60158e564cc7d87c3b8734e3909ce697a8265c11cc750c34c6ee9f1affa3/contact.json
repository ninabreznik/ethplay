{
  "address": "0x99352d1edfa7f124ec618dfb51014f6d54bac4ae",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Slaughter3D",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-19\n*/\n\npragma solidity ^0.4.25;\n\ninterface Snip3DInterface  {\n    function() payable external;\n   function offerAsSacrifice(address MN)\n        external\n        payable\n        ;\n         function withdraw()\n        external\n        ;\n        function myEarnings()\n        external\n        view\n       \n        returns(uint256);\n        function tryFinalizeStage()\n        external;\n    function sendInSoldier(address masternode, uint256 amount) external payable;\n    function fetchdivs(address toupdate) external;\n    function shootSemiRandom() external;\n    function vaultToWallet(address toPay) external;\n}\n\n// ----------------------------------------------------------------------------\n// Owned contract\n// ----------------------------------------------------------------------------\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    constructor() public {\n        owner = 0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        owner = _newOwner;\n    }\n    \n}\n// ----------------------------------------------------------------------------\n// Safe maths\n// ----------------------------------------------------------------------------\nlibrary SafeMath {\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a);\n    }\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a);\n        c = a - b;\n    }\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b);\n    }\n    function div(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0);\n        c = a / b;\n    }\n}\n// Snip3dbridge contract\ncontract Slaughter3D is  Owned {\n    using SafeMath for uint;\n    Snip3DInterface constant Snip3Dcontract_ = Snip3DInterface(0x31cF8B6E8bB6cB16F23889F902be86775bB1d0B3);\n    uint256 public toSnipe;\n    function harvestableBalance()\n        view\n        public\n        returns(uint256)\n    {\n        uint256 tosend = address(this).balance.sub(toSnipe);\n        return ( tosend)  ;\n    }\n    function unfetchedVault()\n        view\n        public\n        returns(uint256)\n    {\n        return ( Snip3Dcontract_.myEarnings())  ;\n    }\n    function sacUp ()  public payable {\n       \n        toSnipe = toSnipe.add(msg.value);\n    }\n    function sacUpto (address masternode)  public  {\n       require(toSnipe> 0.1 ether);\n        toSnipe = toSnipe.sub(0.1 ether);\n        Snip3Dcontract_.sendInSoldier.value(0.1 ether)(masternode , 1);\n    }\n    function fetchvault ()  public {\n      \n        Snip3Dcontract_.vaultToWallet(address(this));\n    }\n    function fetchBalance () onlyOwner public {\n      uint256 tosend = address(this).balance.sub(toSnipe);\n        msg.sender.transfer(tosend);\n    }\n    function () external payable{} // needs for divs\n}",
  "bytecode": "608060405260008054600160a060020a031916730b0efad4ae088a88ffdc50bce5fb63c6936b92201790556104fd806100396000396000f3006080604052600436106100a35763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416632157c46a81146100a5578063373420d9146100ba5780635ce093de146100e15780638da5cb5b146100e9578063984a2df11461011a57806399d28efc1461012f578063d4ee1d9014610150578063d69ff35214610165578063f139c8e81461017a578063f2fde38b1461018f575b005b3480156100b157600080fd5b506100a36101b0565b3480156100c657600080fd5b506100cf610211565b60408051918252519081900360200190f35b6100a3610231565b3480156100f557600080fd5b506100fe610249565b60408051600160a060020a039092168252519081900360200190f35b34801561012657600080fd5b506100a3610258565b34801561013b57600080fd5b506100a3600160a060020a03600435166102dd565b34801561015c57600080fd5b506100fe6103b3565b34801561017157600080fd5b506100cf6103c2565b34801561018657600080fd5b506100cf610460565b34801561019b57600080fd5b506100a3600160a060020a0360043516610466565b60008054600160a060020a031633146101c857600080fd5b6002546101dd9030319063ffffffff6104ac16565b604051909150339082156108fc029083906000818181858888f1935050505015801561020d573d6000803e3d6000fd5b5050565b600254600090819061022b9030319063ffffffff6104ac16565b92915050565b600254610244903463ffffffff6104c116565b600255565b600054600160a060020a031681565b604080517fdc82a98f00000000000000000000000000000000000000000000000000000000815230600482015290517331cf8b6e8bb6cb16f23889f902be86775bb1d0b39163dc82a98f91602480830192600092919082900301818387803b1580156102c357600080fd5b505af11580156102d7573d6000803e3d6000fd5b50505050565b60025467016345785d8a0000106102f357600080fd5b60025461030e9067016345785d8a000063ffffffff6104ac16565b600255604080517fbe7f3a4c000000000000000000000000000000000000000000000000000000008152600160a060020a03831660048201526001602482015290517331cf8b6e8bb6cb16f23889f902be86775bb1d0b39163be7f3a4c9167016345785d8a00009160448082019260009290919082900301818588803b15801561039757600080fd5b505af11580156103ab573d6000803e3d6000fd5b505050505050565b600154600160a060020a031681565b60007331cf8b6e8bb6cb16f23889f902be86775bb1d0b3600160a060020a031663ffe6bbd86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561042f57600080fd5b505af1158015610443573d6000803e3d6000fd5b505050506040513d602081101561045957600080fd5b5051905090565b60025481565b600054600160a060020a0316331461047d57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000828211156104bb57600080fd5b50900390565b8181018281101561022b57600080fd00a165627a7a723058201c0a40e3e38d43d78ef021d50c4531b6aaf25416f197d53630a48d60699727900029"
}