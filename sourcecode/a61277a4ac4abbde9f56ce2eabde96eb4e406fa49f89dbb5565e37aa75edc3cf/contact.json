{
  "address": "0xbec64108259656f62e0e1af690553436250262bf",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CompoundPayroll",
  "compilerVersion": "v0.5.3+commit.10d17f24",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-01-28\n*/\n\npragma solidity ^0.5.1;\n\n// Interface for interacting with Compound\ninterface CompoundContract {\n    function  supply (address asset, uint256 amount) external returns (uint256);\n    function withdraw (address asset, uint256 requestedAmount) external returns (uint256);\n}\n\n// Interface for interacting with tokens\ninterface token {\n    function transfer(address _to, uint256 _value) external returns (bool success) ;\n    function approve(address _spender, uint256 _value) external returns (bool);\n    function balanceOf(address owner) external returns (uint256);\n}\n\n// Basic ownership library\n contract owned {\n        address public owner;\n\n        constructor() public {\n            owner = msg.sender;\n        }\n\n        modifier onlyOwner {\n            require(msg.sender == owner);\n            _;\n        }\n\n        function transferOwnership(address newOwner) onlyOwner public {\n            owner = newOwner;\n        }\n    }\n\n// Here we start\ncontract CompoundPayroll is owned {\n    // first, let's define the contracts we'll be interacting with\n    address compoundAddress = 0x3FDA67f7583380E67ef93072294a7fAc882FD7E7;\n    address daiAddress = 0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359;\n    CompoundContract compound = CompoundContract(compoundAddress);\n    token dai = token(daiAddress);\n    \n    // Now let's create a payroll object\n    Salary[] public payroll;\n    mapping (address => uint) public salaryId;\n    uint public payrollLength;\n    \n    struct Salary {\n        address recipient;\n        uint payRate;\n        uint lastPaid;\n        string name;\n    }\n    \n    // An event for easier accounting\n    event MemberPaid(address recipient, uint amount, string justification);\n\n    // The constructor is called when you init the contract    \n    constructor() public {\n        owner = msg.sender;\n        dai.approve(compoundAddress, 2 ** 128);\n        changePay(address(0), 0, now, '');\n    }\n    \n    // Sends all the current balance to Compound\n    function putInSavings() public  {\n        compound.supply(daiAddress, dai.balanceOf(address(this)));\n    }\n    \n    // Allows owner to make specific payments\n    function cashOut (uint256 amount, address recipient, string memory justification) public onlyOwner {\n        compound.withdraw(daiAddress, amount);\n        dai.transfer(recipient, amount);\n        emit MemberPaid( recipient,  amount, justification);\n\n    }\n\n    // Allows you to add or change a salary\n    function changePay(address recipient, uint yearlyPay, uint startingDate, string memory initials) onlyOwner public {\n        // check someone's salary ID\n        uint id = salaryId[recipient];\n        // if it returns 0 then create a new one\n        if (id == 0) {\n            salaryId[recipient] = payroll.length;\n            id = payroll.length++;\n        }\n        payroll[id] = Salary({\n            recipient: recipient, \n            payRate: yearlyPay / 365.25 days, \n            lastPaid:  startingDate >  0 ? startingDate : now, \n            name: initials});\n            \n        payrollLength = payroll.length;\n    }\n\n    // Removes a salary from the list\n    function removePay(address recipient) onlyOwner public {\n        require(salaryId[recipient] != 0);\n\n        for (uint i = salaryId[recipient]; i<payroll.length-1; i++){\n            payroll[i] = payroll[i+1];\n            salaryId[payroll[i].recipient] = i;\n        }\n        \n        salaryId[recipient] = 0;\n        delete payroll[payroll.length-1];\n        payroll.length--;\n        payrollLength = payroll.length;\n    }\n    \n    // How much are you owed right now?\n    function getAmountOwed(address recipient) view public returns (uint256) {\n        // get salary ID\n        uint id = salaryId[recipient];\n        if (id > 0) {\n            // If it exists, calculate how much you're owed right now\n            return (now - payroll[id].lastPaid) * payroll[id].payRate;\n        } else {\n            return 0;\n        }\n    }\n    \n    //Make one salary payment\n    function paySalary(address recipient, string memory justification) public {\n        // How much are you owed right now?\n        uint amount = getAmountOwed(recipient);\n        if (amount == 0) return;\n        \n        // Take it out from savings\n        compound.withdraw(daiAddress, amount);\n        \n        // Pay it out\n        payroll[salaryId[recipient]].lastPaid = now;\n        dai.transfer(recipient, amount);\n        emit MemberPaid( recipient,  amount, justification);\n    }\n    \n    // Pay all salaries\n    function payEveryone() public {\n        for (uint i = 1; i<payroll.length; i++){\n            paySalary(payroll[i].recipient, 'payAll');\n        }\n    }\n    \n    // pay everyone!\n    function payAll() public  {\n        uint totalToPay = 0;\n        uint[] memory payments = new uint[](payrollLength);\n        uint amount; \n       \n        for (uint i = 1; i<payrollLength; i++){\n            amount = (now - payroll[i].lastPaid) * payroll[i].payRate;\n            totalToPay += amount;\n            payments[i] = amount;\n        } \n        \n        compound.withdraw(daiAddress, totalToPay);\n                \n        for (uint i = 1; i<payrollLength; i++){\n            payroll[i].lastPaid = now;\n            dai.transfer(payroll[i].recipient, payments[i]);\n            emit MemberPaid(payroll[i].recipient, payments[i], 'payAll');\n        }  \n                \n    }\n    \n    // If pinged, save and pay everyone\n    function () external payable {\n        putInSavings();\n        payAll();\n        msg.sender.transfer(msg.value);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"payroll\",\"outputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"payRate\",\"type\":\"uint256\"},{\"name\":\"lastPaid\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"getAmountOwed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"salaryId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"yearlyPay\",\"type\":\"uint256\"},{\"name\":\"startingDate\",\"type\":\"uint256\"},{\"name\":\"initials\",\"type\":\"string\"}],\"name\":\"changePay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"putInSavings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payrollLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"justification\",\"type\":\"string\"}],\"name\":\"cashOut\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"removePay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"justification\",\"type\":\"string\"}],\"name\":\"paySalary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payEveryone\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"justification\",\"type\":\"string\"}],\"name\":\"MemberPaid\",\"type\":\"event\"}]",
  "bytecode": ""
}