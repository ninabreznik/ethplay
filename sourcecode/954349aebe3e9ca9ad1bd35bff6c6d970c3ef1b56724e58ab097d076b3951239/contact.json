{
  "address": "0xf5a7ef9e461bbbfcfcf44b404e7f255cbd28d428",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "CryptoSpin",
  "compilerVersion": "v0.4.23+commit.124ca40d",
  "optimization": true,
  "runs": "500",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-24\n*/\n\n// File: contracts-raw/CryptoSpin.sol\n\n//   ____                  _          ____        _\n//  / ___|_ __ _   _ _ __ | |_ ___   / ___| _ __ (_)_ __\n// | |   | '__| | | | '_ \\| __/ _ \\  \\___ \\| '_ \\| | '_ \\\n// | |___| |  | |_| | |_) | || (_) |  ___) | |_) | | | | |\n//  \\____|_|   \\__, | .__/ \\__\\___/  |____/| .__/|_|_| |_|\n//             |___/|_|                    |_|\n\n// Crypto Spin - Ethereum Slot Machine with Uncompromised RTP\n// Copyright 2018 www.cryptospin.co\n// In association with www.budapestgame.com\n\npragma solidity ^0.4.18;\n\n// File: contracts-raw/Ownable.sol\n\ncontract Ownable {\n        address public        owner;\n\n        event OwnershipTransferred (address indexed prevOwner, address indexed newOwner);\n\n        constructor () public {\n                owner       = msg.sender;\n        }\n\n        modifier onlyOwner () {\n                require (msg.sender == owner);\n                _;\n        }\n\n        function transferOwnership (address newOwner) public onlyOwner {\n              require (newOwner != address (0));\n\n              emit OwnershipTransferred (owner, newOwner);\n              owner     = newOwner;\n        }\n}\n\n// File: contracts-raw/Pausable.sol\n\ncontract Pausable is Ownable {\n        event Pause ();\n        event Unpause ();\n\n        bool public paused        = false;\n\n        modifier whenNotPaused () {\n                require(!paused);\n                _;\n        }\n\n        modifier whenPaused () {\n                require (paused);\n                _;\n        }\n\n        function pause () onlyOwner whenNotPaused public {\n                paused  = true;\n                emit Pause ();\n        }\n\n        function unpause () onlyOwner whenPaused public {\n                paused = false;\n                emit Unpause ();\n        }\n}\n\n// File: contracts-raw/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n        function add (uint256 a, uint256 b) internal pure returns (uint256) {\n              uint256   c = a + b;\n              assert (c >= a);\n              return c;\n        }\n\n        function sub (uint256 a, uint256 b) internal pure returns (uint256) {\n              assert (b <= a);\n              return a - b;\n        }\n\n        function mul (uint256 a, uint256 b) internal pure returns (uint256) {\n                if (a == 0) {\n                        return 0;\n                }\n                uint256 c = a * b;\n                assert (c/a == b);\n                return c;\n        }\n\n        // Solidty automatically throws\n        // function div (uint256 a, uint256 b) internal pure returns (uint256) {\n        //       // assert(b > 0); // Solidity automatically throws when dividing by 0\n        //       uint256   c = a/b;\n        //       // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        //       return c;\n        // }\n}\n\n// File: contracts-raw/CryptoSpin.sol\n\n//   ____                  _          ____        _\n//  / ___|_ __ _   _ _ __ | |_ ___   / ___| _ __ (_)_ __\n// | |   | '__| | | | '_ \\| __/ _ \\  \\___ \\| '_ \\| | '_ \\\n// | |___| |  | |_| | |_) | || (_) |  ___) | |_) | | | | |\n//  \\____|_|   \\__, | .__/ \\__\\___/  |____/| .__/|_|_| |_|\n//             |___/|_|                    |_|\n\n// Crypto Spin - Ethereum Slot Machine with Uncompromised RTP\n// Copyright 2018 www.cryptospin.co\n// In association with www.budapestgame.com\n\npragma solidity ^0.4.18;\n\n\n\ncontract RSPTokenInterface {\n        function version () public pure returns (uint8);\n\n        function buyTokens (address referral) public payable;\n        function sellTokens (uint256 amount) public;\n\n        function transfer (address to, uint256 amount) public returns (bool);\n\n        // function approve (address spender, uint256 amount) public returns (bool);\n        // function transferFrom (address from, address to, uint256 amount) public returns (bool);\n}\n\n\ncontract CryptoSpin is Pausable {\n        using SafeMath for uint256;\n\n        uint8 public    version             = 2;\n\n        RSPTokenInterface public        rspToken;\n\n        function _setRspTokenAddress (address addr) internal {\n                RSPTokenInterface     candidate     = RSPTokenInterface (addr);\n                require (candidate.version () >= 7);\n                rspToken        = candidate;\n        }\n\n        function setRspTokenAddress (address addr) public onlyOwner {\n                _setRspTokenAddress (addr);\n        }\n\n        // Constructor is not called multiple times, fortunately\n        // function CryptoSpin (address addr) public {\n        constructor (address addr) public {\n                // Onwer should be set up and become msg.sender\n                // During test, mint owner some amount\n                // During deployment, onwer himself has to buy tokens to be fair\n                // _mint (msg.sender, initialAmount);\n\n                if (addr != address(0)) {\n                        _setRspTokenAddress (addr);\n                }\n        }\n\n        event SlotToppedUp (address indexed gamer, uint256 nTokens);\n        event SlotToppedDown (address indexed gamer, uint256 nTokens);\n\n        // mapping (address => uint256) public         weisPaid;\n        mapping (address => uint256) public         nTokensCredited;\n        mapping (address => uint256) public         nTokensWithdrawn;\n\n        // Convenience\n        function playerInfo (address player) public view returns (uint256, uint256) {\n\n                return (\n                    nTokensCredited[player],\n                    nTokensWithdrawn[player]\n                );\n        }\n\n        // Escrew and start game\n        function _markCredit (address player, uint256 nTokens) internal {\n                // Overflow check (unnecessarily)\n                nTokensCredited[player]     = nTokensCredited[player].add (nTokens);\n                emit SlotToppedUp (player, nTokens);\n        }\n\n        function _markWithdraw (address player, uint256 nTokens) internal {\n                // Overflow check (unnecessarily)\n                nTokensWithdrawn[player]    = nTokensWithdrawn[player].add (nTokens);\n                emit SlotToppedDown (player, nTokens);\n        }\n\n        function buyAndTopup (address referral) whenNotPaused public payable {\n                // The contract holds the token until refunding\n                rspToken.buyTokens.value (msg.value) (referral);\n                uint256     nTokens     = msg.value.mul (8000);\n\n                _markCredit (msg.sender, nTokens);\n        }\n\n        function topdownAndCashout (address player, uint256 nTokens) onlyOwner public {\n                uint256     nWeis       = nTokens/8000;\n                uint256     nRspTokens  = nWeis.mul (5000);\n\n                rspToken.sellTokens (nRspTokens);\n\n                _markWithdraw (player, nTokens);\n                player.transfer (nWeis);\n        }\n\n        // EndGame\n        // function transferTokensTo (address to, uint256 nTokens) onlyOwner public {\n        //         rspToken.transfer (to, nTokens);\n        // }\n\n        function markCredit (address player, uint256 nTokens) onlyOwner public {\n                _markCredit (player, nTokens);\n        }\n\n        function () public payable {}\n\n\n}",
  "abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setRspTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"playerInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rspToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"nTokensCredited\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"buyAndTopup\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"nTokens\",\"type\":\"uint256\"}],\"name\":\"topdownAndCashout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"nTokensWithdrawn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"nTokens\",\"type\":\"uint256\"}],\"name\":\"markCredit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gamer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"nTokens\",\"type\":\"uint256\"}],\"name\":\"SlotToppedUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gamer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"nTokens\",\"type\":\"uint256\"}],\"name\":\"SlotToppedDown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]",
  "bytecode": "60806040526000805460a060020a61ffff021916750200000000000000000000000000000000000000000017905534801561003957600080fd5b50604051602080610ada833981016040525160008054600160a060020a03191633600160a060020a0390811691909117909155811615610085576100858164010000000061008b810204565b50610146565b6000819050600781600160a060020a03166354fd4d506040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156100e957600080fd5b505af11580156100fd573d6000803e3d6000fd5b505050506040513d602081101561011357600080fd5b505160ff16101561012357600080fd5b60018054600160a060020a031916600160a060020a039290921691909117905550565b610985806101556000396000f3006080604052600436106100cf5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631b3aaf0681146100d15780633f4ba83a146100f25780634b1146911461010757806354fd4d50146101415780635c975abb1461016c5780637d9201cc1461019557806383b5570c146101c65780638456cb59146101f957806387a9c6c51461020e5780638da5cb5b14610222578063dc56678714610237578063e8325cd21461025b578063ec912d611461027c578063f2fde38b146102a0575b005b3480156100dd57600080fd5b506100cf600160a060020a03600435166102c1565b3480156100fe57600080fd5b506100cf6102e8565b34801561011357600080fd5b50610128600160a060020a0360043516610373565b6040805192835260208301919091528051918290030190f35b34801561014d57600080fd5b5061015661039b565b6040805160ff9092168252519081900360200190f35b34801561017857600080fd5b506101816103bd565b604080519115158252519081900360200190f35b3480156101a157600080fd5b506101aa6103de565b60408051600160a060020a039092168252519081900360200190f35b3480156101d257600080fd5b506101e7600160a060020a03600435166103ed565b60408051918252519081900360200190f35b34801561020557600080fd5b506100cf6103ff565b6100cf600160a060020a03600435166104a0565b34801561022e57600080fd5b506101aa610571565b34801561024357600080fd5b506100cf600160a060020a0360043516602435610580565b34801561026757600080fd5b506101e7600160a060020a036004351661067f565b34801561028857600080fd5b506100cf600160a060020a0360043516602435610691565b3480156102ac57600080fd5b506100cf600160a060020a03600435166106b6565b60005433600160a060020a039081169116146102dc57600080fd5b6102e58161074e565b50565b60005433600160a060020a0390811691161461030357600080fd5b60005474010000000000000000000000000000000000000000900460ff16151561032c57600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b600160a060020a03166000908152600260209081526040808320546003909252909120549091565b6000547501000000000000000000000000000000000000000000900460ff1681565b60005474010000000000000000000000000000000000000000900460ff1681565b600154600160a060020a031681565b60026020526000908152604090205481565b60005433600160a060020a0390811691161461041a57600080fd5b60005474010000000000000000000000000000000000000000900460ff161561044257600080fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b6000805474010000000000000000000000000000000000000000900460ff16156104c957600080fd5b600154604080517fec8ac4d8000000000000000000000000000000000000000000000000000000008152600160a060020a0385811660048301529151919092169163ec8ac4d891349160248082019260009290919082900301818588803b15801561053357600080fd5b505af1158015610547573d6000803e3d6000fd5b5050505050610561611f403461081690919063ffffffff16565b905061056d338261084c565b5050565b600054600160a060020a031681565b60008054819033600160a060020a0390811691161461059e57600080fd5b611f40830491506105b78261138863ffffffff61081616565b600154604080517f6c11bcd3000000000000000000000000000000000000000000000000000000008152600481018490529051929350600160a060020a0390911691636c11bcd39160248082019260009290919082900301818387803b15801561062057600080fd5b505af1158015610634573d6000803e3d6000fd5b5050505061064284846108cb565b604051600160a060020a0385169083156108fc029084906000818181858888f19350505050158015610678573d6000803e3d6000fd5b5050505050565b60036020526000908152604090205481565b60005433600160a060020a039081169116146106ac57600080fd5b61056d828261084c565b60005433600160a060020a039081169116146106d157600080fd5b600160a060020a03811615156106e657600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000819050600781600160a060020a03166354fd4d506040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156107ac57600080fd5b505af11580156107c0573d6000803e3d6000fd5b505050506040513d60208110156107d657600080fd5b505160ff1610156107e657600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905550565b6000808315156108295760009150610845565b5082820282848281151561083957fe5b041461084157fe5b8091505b5092915050565b600160a060020a038216600090815260026020526040902054610875908263ffffffff61094a16565b600160a060020a038316600081815260026020908152604091829020939093558051848152905191927f92314ae4aeb12708f1491b2f05f443c3585d5da70ac78d7e4d6bfeecb1b0a82692918290030190a25050565b600160a060020a0382166000908152600360205260409020546108f4908263ffffffff61094a16565b600160a060020a038316600081815260036020908152604091829020939093558051848152905191927f8ab74d0ecf044d6c0bc8fa6f85114d83db8c3c434a171aed49ca54f76482886492918290030190a25050565b60008282018381101561084157fe00a165627a7a72305820fdee4244d5a997488051cfc52f6ef7d993d1958068683bd50f637775b2a9af3300290000000000000000000000008008292c480b1d23a4203d94468cc899759bc70e",
  "constructorArguments": "0000000000000000000000008008292c480b1d23a4203d94468cc899759bc70e"
}