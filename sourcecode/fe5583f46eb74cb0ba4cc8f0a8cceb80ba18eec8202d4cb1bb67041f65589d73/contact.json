{
  "address": "0x039b5649a59967e3e936d7471f9c3700100ee1ab",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "KuCoin Shares",
  "contractName": "MyToken",
  "compilerVersion": "v0.4.15+commit.bbb8e64f",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-04-02\n*/\n\npragma solidity ^0.4.13;\n\n\n\ncontract MyToken {\n    /* Public variables of the token */\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 public totalSupply;\n\n    /* This creates an array with all balances */\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n\n    /* This generates a public event on the blockchain that will notify clients */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /* This notifies clients about the amount burnt */\n    event Burn(address indexed from, uint256 value);\n\n    /* Initializes contract with initial supply tokens to the creator of the contract */\n    function MyToken(\n        uint256 initialSupply,\n        string tokenName,\n        uint8 decimalUnits,\n        string tokenSymbol\n        ) {\n        balanceOf[msg.sender] = initialSupply;              // Give the creator all initial tokens\n        totalSupply = initialSupply;                        // Update total supply\n        name = tokenName;                                   // Set the name for display purposes\n        symbol = tokenSymbol;                               // Set the symbol for display purposes\n        decimals = decimalUnits;                            // Amount of decimals for display purposes\n    }\n\n    /* Internal transfer, only can be called by this contract */\n    function _transfer(address _from, address _to, uint _value) internal {\n        require (_to != 0x0);                               // Prevent transfer to 0x0 address. Use burn() instead\n        require (balanceOf[_from] > _value);                // Check if the sender has enough\n        require (balanceOf[_to] + _value > balanceOf[_to]); // Check for overflows\n        balanceOf[_from] -= _value;                         // Subtract from the sender\n        balanceOf[_to] += _value;                            // Add the same to the recipient\n        Transfer(_from, _to, _value);\n    }\n\n    /// @notice Send `_value` tokens to `_to` from your account\n    /// @param _to The address of the recipient\n    /// @param _value the amount to send\n    function transfer(address _to, uint256 _value) {\n        _transfer(msg.sender, _to, _value);\n    }\n\n     \n    /// @notice Remove `_value` tokens from the system irreversibly\n    /// @param _value the amount of money to burn\n    function burn(uint256 _value) returns (bool success) {\n        require (balanceOf[msg.sender] > _value);            // Check if the sender has enough\n        balanceOf[msg.sender] -= _value;                      // Subtract from the sender\n        totalSupply -= _value;                                // Updates totalSupply\n        Burn(msg.sender, _value);\n        return true;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b60405161070638038061070683398101604052808051919060200180518201919060200180519190602001805190910190505b600160a060020a033316600090815260046020526040812085905560038590558380516100739291602001906100a1565b5060018180516100879291602001906100a1565b506002805460ff191660ff84161790555b50505050610141565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100e257805160ff191683800117855561010f565b8280016001018555821561010f579182015b8281111561010f5782518255916020019190600101906100f4565b5b5061011c929150610120565b5090565b61013e91905b8082111561011c5760008155600101610126565b5090565b90565b6105b6806101506000396000f3006060604052361561008b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461009057806318160ddd1461011b578063313ce5671461014057806342966c681461016957806370a082311461019357806395d89b41146101c4578063a9059cbb1461024f578063dd62ed3e14610273575b600080fd5b341561009b57600080fd5b6100a36102aa565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100e05780820151818401525b6020016100c7565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561012657600080fd5b61012e610348565b60405190815260200160405180910390f35b341561014b57600080fd5b61015361034e565b60405160ff909116815260200160405180910390f35b341561017457600080fd5b61017f600435610357565b604051901515815260200160405180910390f35b341561019e57600080fd5b61012e600160a060020a03600435166103e2565b60405190815260200160405180910390f35b34156101cf57600080fd5b6100a36103f4565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100e05780820151818401525b6020016100c7565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561025a57600080fd5b610271600160a060020a0360043516602435610492565b005b341561027e57600080fd5b61012e600160a060020a03600435811690602435166104a2565b60405190815260200160405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103405780601f1061031557610100808354040283529160200191610340565b820191906000526020600020905b81548152906001019060200180831161032357829003601f168201915b505050505081565b60035481565b60025460ff1681565b600160a060020a03331660009081526004602052604081205482901161037c57600080fd5b600160a060020a03331660008181526004602052604090819020805485900390556003805485900390557fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59084905190815260200160405180910390a25060015b919050565b60046020526000908152604090205481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103405780601f1061031557610100808354040283529160200191610340565b820191906000526020600020905b81548152906001019060200180831161032357829003601f168201915b505050505081565b61049d3383836104bf565b5b5050565b600560209081526000928352604080842090915290825290205481565b600160a060020a03821615156104d457600080fd5b600160a060020a0383166000908152600460205260409020548190116104f957600080fd5b600160a060020a0382166000908152600460205260409020548181011161051f57600080fd5b600160a060020a038084166000818152600460205260408082208054869003905592851680825290839020805485019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a35b5050505600a165627a7a72305820479233a7ef567d213a57e690d1ff199f64211b3ca418c809764dd4a6659968c300290000000000000000000000000000000000000000000000000000b5e620f480000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000d4b75636f696e205368617265730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034b43530000000000000000000000000000000000000000000000000000000000",
  "constructorArguments": "0000000000000000000000000000000000000000000000000000b5e620f480000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000d4b75636f696e205368617265730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034b43530000000000000000000000000000000000000000000000000000000000"
}