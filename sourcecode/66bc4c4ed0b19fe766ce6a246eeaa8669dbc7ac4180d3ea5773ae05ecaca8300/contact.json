{
  "address": "0xd2ca26891f82d884fb095a28afa884547e434f34",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Forwarder",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-12-14\n*/\n\npragma solidity ^0.4.11;\n/**\n * Contract that exposes the needed erc20 token functions\n */\n\ncontract ERC20Interface {\n  // Send _value amount of tokens to address _to\n  function transfer(address _to, uint256 _value) public returns (bool success);\n  // Get the account balance of another account with address _owner\n  function balanceOf(address _owner) public constant returns (uint256 balance);\n}\n/**\n * Contract that will forward any incoming Ether to the creator of the contract\n */\ncontract Forwarder {\n  // Address to which any funds sent to this contract will be forwarded\n  address public parentAddress;\n  event ForwarderDeposited(address from, uint value, bytes data);\n\n  /**\n   * Create the contract, and sets the destination address to that of the creator\n   */\n  function Forwarder(address pool) public {\n    parentAddress = 0xE4402b9f8034A9B2857FFeE4Cf96605a364B16A1;\n  }\n \n  /**\n   * Modifier that will execute internal code block only if the sender is the parent address\n   */\n  modifier onlyParent {\n    if (msg.sender != parentAddress) {\n      revert();\n    }\n    _;\n  }\n\n  /**\n   * Default function; Gets called when Ether is deposited, and forwards it to the parent address\n   */\n  function() public payable {\n    // throws on failure\n    parentAddress.transfer(msg.value);\n    // Fire off the deposited event if we can forward it\n    ForwarderDeposited(msg.sender, msg.value, msg.data);\n  }\n\n  /**\n   * Execute a token transfer of the full balance from the forwarder token to the parent address\n   * @param tokenContractAddress the address of the erc20 token contract\n   */\n  function flushTokens(address tokenContractAddress) public {\n    ERC20Interface instance = ERC20Interface(tokenContractAddress);\n    var forwarderAddress = address(this);\n    var forwarderBalance = instance.balanceOf(forwarderAddress);\n    if (forwarderBalance == 0) {\n      return;\n    }\n    if (!instance.transfer(parentAddress, forwarderBalance)) {\n      revert();\n    }\n  }\n\n  /**\n   * It is possible that funds were sent to this address before the contract was deployed.\n   * We can flush those funds to the parent address.\n   */\n  function flush() public {\n    // throws on failure\n    parentAddress.transfer(this.balance);\n  }\n}\n\n// This is a test target for a Forwarder.\n// It contains a public function with a side-effect.\ncontract ForwarderTarget {\n  uint public data;\n\n  function ForwarderTarget() public {\n  }\n\n  function createForwarder(address pool) public returns (address) {\n    return new Forwarder(pool);\n  }\n\n  function() public payable {\n    // accept unspendable balance\n  }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"flushTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"flush\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"pool\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ForwarderDeposited\",\"type\":\"event\"}]",
  "bytecode": "608060405234801561001057600080fd5b5060405160208061056a8339810180604052810190808051906020019092919050505073e4402b9f8034a9b2857ffee4cf96605a364b16a16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506104d3806100976000396000f300608060405260043610610056576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062821de31461014e5780633ef13367146101a55780636b9f96ea146101e8575b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156100bd573d6000803e3d6000fd5b507f69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b3334600036604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200180602001828103825284848281815260200192508082843782019150509550505050505060405180910390a1005b34801561015a57600080fd5b506101636101ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b157600080fd5b506101e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610224565b005b3480156101f457600080fd5b506101fd610426565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008392503091508273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156102ca57600080fd5b505af11580156102de573d6000803e3d6000fd5b505050506040513d60208110156102f457600080fd5b81019080805190602001909291905050509050600081141561031557610420565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156103d957600080fd5b505af11580156103ed573d6000803e3d6000fd5b505050506040513d602081101561040357600080fd5b8101908080519060200190929190505050151561041f57600080fd5b5b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156104a4573d6000803e3d6000fd5b505600a165627a7a723058206670e8e8a8883a3ce437357975c16b036a6f0babfd4e39b018c56a900fe4bb0c0029000000000000000000000000e4402b9f8034a9b2857ffee4cf96605a364b16a1",
  "constructorArguments": "000000000000000000000000e4402b9f8034a9b2857ffee4cf96605a364b16a1"
}