{
  "address": "0xf9eedb681ae807521900b7e530ec666970594179",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Airdropper",
  "compilerVersion": "v0.4.11+commit.68ef5810",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-26\n*/\n\npragma solidity ^0.4.11;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control \n * functions, this simplifies the implementation of \"user permissions\". \n */\ncontract Ownable {\n  address public owner;\n\n  function Ownable() {\n    owner = msg.sender;\n  }\n \n  modifier onlyOwner() {\n    if (msg.sender != owner) {\n      revert();\n    }\n    _;\n  }\n \n  function transferOwnership(address newOwner) onlyOwner {\n    if (newOwner != address(0)) {\n      owner = newOwner;\n    }\n  }\n\n}\n\ncontract ERC20Basic {\n  uint public totalSupply;\n  function balanceOf(address who) constant returns (uint);\n  function transfer(address to, uint value);\n  event Transfer(address indexed from, address indexed to, uint value);\n}\n \ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender) constant returns (uint);\n  function transferFrom(address from, address to, uint value);\n  function approve(address spender, uint value);\n  event Approval(address indexed owner, address indexed spender, uint value);\n}\n\ncontract Airdropper is Ownable {\n\n    function multisend(address _tokenAddr, address[] dests, uint256[] values)\n    onlyOwner\n    returns (uint256) {\n        uint256 i = 0;\n        while (i < dests.length) {\n           ERC20(_tokenAddr).transfer(dests[i], values[i]);\n           i += 1;\n        }\n        return(i);\n    }\n}",
  "bytecode": "60606040525b60008054600160a060020a03191633600160a060020a03161790555b5b6102ca806100316000396000f300606060405263ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b8114610050578063ad8733ca1461007c578063f2fde38b14610120575bfe5b341561005857fe5b61006061013e565b60408051600160a060020a039092168252519081900360200190f35b341561008457fe5b60408051602480356004818101356020818102868101820190975281865261010e96600160a060020a0384351696939560449501929182919085019084908082843750506040805187358901803560208181028481018201909552818452989a99890198929750908201955093508392508501908490808284375094965061014d95505050505050565b60408051918252519081900360200190f35b341561012857fe5b61013c600160a060020a0360043516610245565b005b600054600160a060020a031681565b60008054819033600160a060020a0390811691161461016c5760006000fd5b5060005b83518110156102385784600160a060020a031663a9059cbb858381518110151561019657fe5b9060200190602002015185848151811015156101ae57fe5b906020019060200201516040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b151561021f57fe5b6102c65a03f1151561022d57fe5b505050600101610170565b8091505b5b509392505050565b60005433600160a060020a039081169116146102615760006000fd5b600160a060020a03811615610299576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b5b505600a165627a7a72305820bff2b51593f2a0a9f5eecdd2537db423495bb0936df9fca800fdd5b833ff34fb0029"
}