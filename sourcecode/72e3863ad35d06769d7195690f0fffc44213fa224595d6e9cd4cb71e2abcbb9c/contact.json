{
  "address": "0xda35c9ffe43dcac0ae2982b3d753a7dc2352070c",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "DistributeTokens",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-11-08\n*/\n\npragma solidity ^0.4.24;\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n \n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor () public {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n}\n\ninterface token { function transfer(address, uint) external; }\n\ncontract DistributeTokens is Ownable{\n  \n  token tokenReward;\n  address public addressOfTokenUsedAsReward;\n  function setTokenReward(address _addr) public onlyOwner {\n    tokenReward = token(_addr);\n    addressOfTokenUsedAsReward = _addr;\n  }\n\n  function distributeVariable(address[] _addrs, uint[] _bals) public onlyOwner{\n    for(uint i = 0; i < _addrs.length; ++i){\n      tokenReward.transfer(_addrs[i],_bals[i]);\n    }\n  }\n\n  function distributeFixed(address[] _addrs, uint _amoutToEach) public onlyOwner{\n    for(uint i = 0; i < _addrs.length; ++i){\n      tokenReward.transfer(_addrs[i],_amoutToEach);\n    }\n  }\n\n  function withdrawTokens(uint _amount) public onlyOwner {\n    tokenReward.transfer(owner,_amount);\n  }\n}",
  "bytecode": "608060405260008054600160a060020a03191633179055610570806100256000396000f3006080604052600436106100695763ffffffff60e060020a6000350416632e1dc4b8811461006e578063315a095d1461009157806388adbf8f146100a95780638da5cb5b146100da578063a028aa1b146100ef578063f09bfcc21461017d578063f2fde38b146101d4575b600080fd5b34801561007a57600080fd5b5061008f600160a060020a03600435166101f5565b005b34801561009d57600080fd5b5061008f600435610245565b3480156100b557600080fd5b506100be6102e6565b60408051600160a060020a039092168252519081900360200190f35b3480156100e657600080fd5b506100be6102f5565b3480156100fb57600080fd5b506040805160206004803580820135838102808601850190965280855261008f95369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506103049650505050505050565b34801561018957600080fd5b506040805160206004803580820135838102808601850190965280855261008f9536959394602494938501929182918501908490808284375094975050933594506103e89350505050565b3480156101e057600080fd5b5061008f600160a060020a03600435166104b0565b600054600160a060020a0316331461020c57600080fd5b60018054600160a060020a0390921673ffffffffffffffffffffffffffffffffffffffff19928316811790915560028054909216179055565b600054600160a060020a0316331461025c57600080fd5b60015460008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a039283166004820152602481018690529051919093169263a9059cbb92604480830193919282900301818387803b1580156102cb57600080fd5b505af11580156102df573d6000803e3d6000fd5b5050505050565b600254600160a060020a031681565b600054600160a060020a031681565b60008054600160a060020a0316331461031c57600080fd5b5060005b82518110156103e3576001548351600160a060020a039091169063a9059cbb9085908490811061034c57fe5b90602001906020020151848481518110151561036457fe5b906020019060200201516040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156103c057600080fd5b505af11580156103d4573d6000803e3d6000fd5b50505050806001019050610320565b505050565b60008054600160a060020a0316331461040057600080fd5b5060005b82518110156103e3576001548351600160a060020a039091169063a9059cbb9085908490811061043057fe5b90602001906020020151846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561048d57600080fd5b505af11580156104a1573d6000803e3d6000fd5b50505050806001019050610404565b600054600160a060020a031633146104c757600080fd5b600160a060020a03811615156104dc57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058203f2327ed1b9f86ab37bc5ce595aa69c39f7091a2b5578745a739a1f470e913a60029"
}