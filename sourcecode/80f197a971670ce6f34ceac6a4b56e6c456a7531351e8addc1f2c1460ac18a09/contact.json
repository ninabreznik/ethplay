{
  "address": "0x63f584fa56e60e4d0fe8802b27c7e6e3b33e007f",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "BOXToken",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-16\n*/\n\npragma solidity 0.4.18;\n\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal constant returns (uint256) {\n        uint256 c = a / b;\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal constant returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract Ownable {\n    address public owner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    function Ownable() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address newOwner) onlyOwner public {\n        require(newOwner != address(0));\n        OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n}\n\ncontract ERC20 {\n    uint256 public totalSupply;\n    function balanceOf(address who) public constant returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function allowance(address owner, address spender) public constant returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract StandardToken is ERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value > 0);\n\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_from != address(0));\n        require(_to != address(0));\n\n        uint256 _allowance = allowed[_from][msg.sender];\n\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = _allowance.sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n}\n\ncontract BOXToken is StandardToken, Ownable {\n\n    string public name = \"BOX Token\";\n    string public symbol = \"BOX\";\n    uint public decimals = 18;\n\n    // The token allocation\n    uint public constant TOTAL_SUPPLY       = 3000000000e18;\n    uint public constant ALLOC_ECOSYSTEM    =  900000000e18; // 30%\n    uint public constant ALLOC_FOUNDATION   =  600000000e18; // 20%\n    uint public constant ALLOC_TEAM         =  450000000e18; // 15%\n    uint public constant ALLOC_PARTNER      =  300000000e18; // 10%\n    uint public constant ALLOC_SALE         =  750000000e18; // 25%\n\n    // wallets\n    address public constant WALLET_ECOSYSTEM    = 0x49dE776A181603b11116E7DaB15d84BE6711D54A; \n    address public constant WALLET_FOUNDATION   = 0x8546a5a4b3BBE86Bf57fC9F5E497c770ae5D0233;\n    address public constant WALLET_TEAM         = 0x9f255092008F6163395aEB35c4Dec58a1ecbdFd6;\n    address public constant WALLET_PARTNER      = 0xD6d64A62A7fF8F55841b0DD2c02d5052457bCA6c;\n    address public constant WALLET_SALE         = 0x55aaeC60E116086AC3a5e4fDC74b21de9B91CC53;\n    \n    // 2 groups of lockup\n    mapping(address => uint256) public contributors_locked; \n    mapping(address => uint256) public investors_locked;\n\n    // 2 types of releasing\n    mapping(address => uint256) public contributors_countdownDate;\n    mapping(address => uint256) public investors_deliveryDate;\n\n    // MODIFIER\n\n    // checks if the address can transfer certain amount of tokens\n    modifier canTransfer(address _sender, uint256 _value) {\n        require(_sender != address(0));\n\n        uint256 remaining = balances[_sender].sub(_value);\n        uint256 totalLockAmt = 0;\n\n        if (contributors_locked[_sender] > 0) {\n            totalLockAmt = totalLockAmt.add(getLockedAmount_contributors(_sender));\n        }\n\n        if (investors_locked[_sender] > 0) {\n            totalLockAmt = totalLockAmt.add(getLockedAmount_investors(_sender));\n        }\n\n        require(remaining >= totalLockAmt);\n\n        _;\n    }\n\n    // EVENTS\n    event UpdatedLockingState(string whom, address indexed to, uint256 value, uint256 date);\n\n    // FUNCTIONS\n\n    function BOXToken() public {\n        balances[msg.sender] = TOTAL_SUPPLY;\n        totalSupply = TOTAL_SUPPLY;\n\n        // do the distribution of the token, in token transfer\n        transfer(WALLET_ECOSYSTEM, ALLOC_ECOSYSTEM);\n        transfer(WALLET_FOUNDATION, ALLOC_FOUNDATION);\n        transfer(WALLET_TEAM, ALLOC_TEAM);\n        transfer(WALLET_PARTNER, ALLOC_PARTNER);\n        transfer(WALLET_SALE, ALLOC_SALE);\n    }\n\t\n    // get contributors' locked amount of token\n    // this lockup will be released in 8 batches which take place every 180 days\n    function getLockedAmount_contributors(address _contributor) \n        public\n\t\tconstant\n\t\treturns (uint256)\n\t{\n        uint256 countdownDate = contributors_countdownDate[_contributor];\n        uint256 lockedAmt = contributors_locked[_contributor];\n\n        if (now <= countdownDate + (180 * 1 days)) {return lockedAmt;}\n        if (now <= countdownDate + (180 * 2 days)) {return lockedAmt.mul(7).div(8);}\n        if (now <= countdownDate + (180 * 3 days)) {return lockedAmt.mul(6).div(8);}\n        if (now <= countdownDate + (180 * 4 days)) {return lockedAmt.mul(5).div(8);}\n        if (now <= countdownDate + (180 * 5 days)) {return lockedAmt.mul(4).div(8);}\n        if (now <= countdownDate + (180 * 6 days)) {return lockedAmt.mul(3).div(8);}\n        if (now <= countdownDate + (180 * 7 days)) {return lockedAmt.mul(2).div(8);}\n        if (now <= countdownDate + (180 * 8 days)) {return lockedAmt.mul(1).div(8);}\n\t\n        return 0;\n    }\n\n    // get investors' locked amount of token\n    // this lockup will be released in 3 batches: \n    // 1. on delievery date\n    // 2. three months after the delivery date\n    // 3. six months after the delivery date\n    function getLockedAmount_investors(address _investor)\n        public\n\t\tconstant\n\t\treturns (uint256)\n\t{\n        uint256 delieveryDate = investors_deliveryDate[_investor];\n        uint256 lockedAmt = investors_locked[_investor];\n\n        if (now <= delieveryDate) {return lockedAmt;}\n        if (now <= delieveryDate + 90 days) {return lockedAmt.mul(2).div(3);}\n        if (now <= delieveryDate + 180 days) {return lockedAmt.mul(1).div(3);}\n\t\n        return 0;\n    }\n\n    // set lockup for contributors \n    function setLockup_contributors(address _contributor, uint256 _value, uint256 _countdownDate)\n        public\n        onlyOwner\n    {\n        require(_contributor != address(0));\n\n        contributors_locked[_contributor] = _value;\n        contributors_countdownDate[_contributor] = _countdownDate;\n        UpdatedLockingState(\"contributor\", _contributor, _value, _countdownDate);\n    }\n\n    // set lockup for strategic investor\n    function setLockup_investors(address _investor, uint256 _value, uint256 _delieveryDate)\n        public\n        onlyOwner\n    {\n        require(_investor != address(0));\n\n        investors_locked[_investor] = _value;\n        investors_deliveryDate[_investor] = _delieveryDate;\n        UpdatedLockingState(\"investor\", _investor, _value, _delieveryDate);\n    }\n\n\t// Transfer amount of tokens from sender account to recipient.\n    function transfer(address _to, uint _value)\n        public\n        canTransfer(msg.sender, _value)\n\t\treturns (bool success)\n\t{\n        return super.transfer(_to, _value);\n    }\n\n\t// Transfer amount of tokens from a specified address to a recipient.\n    function transferFrom(address _from, address _to, uint _value)\n        public\n        canTransfer(_from, _value)\n\t\treturns (bool success)\n\t{\n        return super.transferFrom(_from, _to, _value);\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getLockedAmount_contributors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investors_locked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributors_locked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_TEAM\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_SALE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_SALE\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_FOUNDATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributors_countdownDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_ECOSYSTEM\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_FOUNDATION\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"getLockedAmount_investors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_PARTNER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_TEAM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_ECOSYSTEM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investors_deliveryDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_PARTNER\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_delieveryDate\",\"type\":\"uint256\"}],\"name\":\"setLockup_investors\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_countdownDate\",\"type\":\"uint256\"}],\"name\":\"setLockup_contributors\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"whom\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"UpdatedLockingState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526040805190810160405280600981526020017f424f5820546f6b656e0000000000000000000000000000000000000000000000815250600490805190602001906200005192919062000bdd565b506040805190810160405280600381526020017f424f580000000000000000000000000000000000000000000000000000000000815250600590805190602001906200009f92919062000bdd565b5060126006553415620000b157600080fd5b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506b09b18ab5df7180b6b8000000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506b09b18ab5df7180b6b8000000600081905550620001957349de776a181603b11116e7dab15d84be6711d54a6b02e87669c308736a040000006200029f64010000000002620012fc176401000000009004565b50620001d6738546a5a4b3bbe86bf57fc9f5e497c770ae5d02336b01f04ef12cb04cf1580000006200029f64010000000002620012fc176401000000009004565b5062000217739f255092008f6163395aeb35c4dec58a1ecbdfd66b01743b34e18439b5020000006200029f64010000000002620012fc176401000000009004565b506200025773d6d64a62a7ff8f55841b0dd2c02d5052457bca6c6af8277896582678ac0000006200029f64010000000002620012fc176401000000009004565b50620002987355aaec60e116086ac3a5e4fdc74b21de9b91cc536b026c62ad77dc602dae0000006200029f64010000000002620012fc176401000000009004565b5062000c8c565b60003382600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515620002e357600080fd5b6200034583600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620004a16401000000000262001a6d179091906401000000009004565b9150600090506000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115620003d857620003d5620003b785620004bb6401000000000262000bfa176401000000009004565b82620008016401000000000262001a86179091906401000000009004565b90505b6000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111562000465576200046262000444856200082064010000000002620011cf176401000000009004565b82620008016401000000000262001a86179091906401000000009004565b90505b8082101515156200047557600080fd5b620004958787620009846401000000000262001dcc176401000000009004565b94505050505092915050565b6000828211151515620004b057fe5b818303905092915050565b6000806000600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905062ed4e008201421115156200055c57809250620007fa565b6301da9c00820142111515620005bb57620005b360086200059660078462000b8b6401000000000262001a1f179091906401000000009004565b62000bc16401000000000262001a52179091906401000000009004565b9250620007fa565b6302c7ea008201421115156200061a57620006126008620005f560068462000b8b6401000000000262001a1f179091906401000000009004565b62000bc16401000000000262001a52179091906401000000009004565b9250620007fa565b6303b5380082014211151562000679576200067160086200065460058462000b8b6401000000000262001a1f179091906401000000009004565b62000bc16401000000000262001a52179091906401000000009004565b9250620007fa565b6304a28600820142111515620006d857620006d06008620006b360048462000b8b6401000000000262001a1f179091906401000000009004565b62000bc16401000000000262001a52179091906401000000009004565b9250620007fa565b63058fd40082014211151562000737576200072f60086200071260038462000b8b6401000000000262001a1f179091906401000000009004565b62000bc16401000000000262001a52179091906401000000009004565b9250620007fa565b63067d220082014211151562000796576200078e60086200077160028462000b8b6401000000000262001a1f179091906401000000009004565b62000bc16401000000000262001a52179091906401000000009004565b9250620007fa565b63076a7000820142111515620007f557620007ed6008620007d060018462000b8b6401000000000262001a1f179091906401000000009004565b62000bc16401000000000262001a52179091906401000000009004565b9250620007fa565b600092505b5050919050565b60008082840190508381101515156200081657fe5b8091505092915050565b6000806000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508142111515620008bc578092506200097d565b6276a7008201421115156200091a57620009126003620008f560028462000b8b6401000000000262001a1f179091906401000000009004565b62000bc16401000000000262001a52179091906401000000009004565b92506200097d565b62ed4e0082014211151562000978576200097060036200095360018462000b8b6401000000000262001a1f179091906401000000009004565b62000bc16401000000000262001a52179091906401000000009004565b92506200097d565b600092505b5050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515620009c257600080fd5b600082111515620009d257600080fd5b62000a3482600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620004a16401000000000262001a6d179091906401000000009004565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000ad982600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620008016401000000000262001a86179091906401000000009004565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000808284029050600084148062000bae575082848281151562000bab57fe5b04145b151562000bb757fe5b8091505092915050565b600080828481151562000bd057fe5b0490508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000c2057805160ff191683800117855562000c51565b8280016001018555821562000c51579182015b8281111562000c5057825182559160200191906001019062000c33565b5b50905062000c60919062000c64565b5090565b62000c8991905b8082111562000c8557600081600090555060010162000c6b565b5090565b90565b611fdd8062000c9c6000396000f300606060405260043610610180576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610185578063095ea7b31461021357806317597b0f1461026d57806318160ddd146102ba57806323b872dd146102e3578063297d79641461035c578063313ce567146103a957806332670d10146103d25780633a9207661461041f578063499fa529146104745780634c176b211461049d578063553fd8ee146104f25780635991faf51461051b57806370a082311461056857806372aa18d7146105b557806377b440e91461060a5780638da5cb5b1461065f578063902d55a5146106b457806395d89b41146106dd57806396bc1a891461076b578063a10b3ffd146107b8578063a9059cbb146107e1578063b475a1c81461083b578063dd62ed3e14610864578063e4fae421146108d0578063f08fa322146108f9578063f10a4f0a14610946578063f2fde38b1461099b578063f937a6eb146109d4578063ff96b46714610a1f575b600080fd5b341561019057600080fd5b610198610a6a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d85780820151818401526020810190506101bd565b50505050905090810190601f1680156102055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561021e57600080fd5b610253600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b08565b604051808215151515815260200191505060405180910390f35b341561027857600080fd5b6102a4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610bfa565b6040518082815260200191505060405180910390f35b34156102c557600080fd5b6102cd610e50565b6040518082815260200191505060405180910390f35b34156102ee57600080fd5b610342600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e56565b604051808215151515815260200191505060405180910390f35b341561036757600080fd5b610393600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610fe4565b6040518082815260200191505060405180910390f35b34156103b457600080fd5b6103bc610ffc565b6040518082815260200191505060405180910390f35b34156103dd57600080fd5b610409600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611002565b6040518082815260200191505060405180910390f35b341561042a57600080fd5b61043261101a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561047f57600080fd5b610487611032565b6040518082815260200191505060405180910390f35b34156104a857600080fd5b6104b0611042565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104fd57600080fd5b61050561105a565b6040518082815260200191505060405180910390f35b341561052657600080fd5b610552600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061106a565b6040518082815260200191505060405180910390f35b341561057357600080fd5b61059f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611082565b6040518082815260200191505060405180910390f35b34156105c057600080fd5b6105c86110cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561061557600080fd5b61061d6110e3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561066a57600080fd5b6106726110fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106bf57600080fd5b6106c7611121565b6040518082815260200191505060405180910390f35b34156106e857600080fd5b6106f0611131565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610730578082015181840152602081019050610715565b50505050905090810190601f16801561075d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561077657600080fd5b6107a2600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111cf565b6040518082815260200191505060405180910390f35b34156107c357600080fd5b6107cb6112ed565b6040518082815260200191505060405180910390f35b34156107ec57600080fd5b610821600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506112fc565b604051808215151515815260200191505060405180910390f35b341561084657600080fd5b61084e611488565b6040518082815260200191505060405180910390f35b341561086f57600080fd5b6108ba600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611498565b6040518082815260200191505060405180910390f35b34156108db57600080fd5b6108e361151f565b6040518082815260200191505060405180910390f35b341561090457600080fd5b610930600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061152f565b6040518082815260200191505060405180910390f35b341561095157600080fd5b610959611547565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156109a657600080fd5b6109d2600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061155f565b005b34156109df57600080fd5b610a1d600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080359060200190919050506116b7565b005b3415610a2a57600080fd5b610a68600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190505061186b565b005b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b005780601f10610ad557610100808354040283529160200191610b00565b820191906000526020600020905b815481529060010190602001808311610ae357829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000806000600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905062ed4e00820142111515610c9957809250610e49565b6301da9c00820142111515610cd657610ccf6008610cc1600784611a1f90919063ffffffff16565b611a5290919063ffffffff16565b9250610e49565b6302c7ea00820142111515610d1357610d0c6008610cfe600684611a1f90919063ffffffff16565b611a5290919063ffffffff16565b9250610e49565b6303b53800820142111515610d5057610d496008610d3b600584611a1f90919063ffffffff16565b611a5290919063ffffffff16565b9250610e49565b6304a28600820142111515610d8d57610d866008610d78600484611a1f90919063ffffffff16565b611a5290919063ffffffff16565b9250610e49565b63058fd400820142111515610dca57610dc36008610db5600384611a1f90919063ffffffff16565b611a5290919063ffffffff16565b9250610e49565b63067d2200820142111515610e0757610e006008610df2600284611a1f90919063ffffffff16565b611a5290919063ffffffff16565b9250610e49565b63076a7000820142111515610e4457610e3d6008610e2f600184611a1f90919063ffffffff16565b611a5290919063ffffffff16565b9250610e49565b600092505b5050919050565b60005481565b60008382600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610e9957600080fd5b610eeb83600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a6d90919063ffffffff16565b9150600090506000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610f5757610f54610f4585610bfa565b82611a8690919063ffffffff16565b90505b6000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610fbd57610fba610fab856111cf565b82611a8690919063ffffffff16565b90505b808210151515610fcc57600080fd5b610fd7888888611aa4565b9450505050509392505050565b60086020528060005260406000206000915090505481565b60065481565b60076020528060005260406000206000915090505481565b739f255092008f6163395aeb35c4dec58a1ecbdfd681565b6b026c62ad77dc602dae00000081565b7355aaec60e116086ac3a5e4fdc74b21de9b91cc5381565b6b01f04ef12cb04cf15800000081565b60096020528060005260406000206000915090505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7349de776a181603b11116e7dab15d84be6711d54a81565b738546a5a4b3bbe86bf57fc9f5e497c770ae5d023381565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6b09b18ab5df7180b6b800000081565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111c75780601f1061119c576101008083540402835291602001916111c7565b820191906000526020600020905b8154815290600101906020018083116111aa57829003601f168201915b505050505081565b6000806000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508142111515611269578092506112e6565b6276a7008201421115156112a55761129e6003611290600284611a1f90919063ffffffff16565b611a5290919063ffffffff16565b92506112e6565b62ed4e008201421115156112e1576112da60036112cc600184611a1f90919063ffffffff16565b611a5290919063ffffffff16565b92506112e6565b600092505b5050919050565b6af8277896582678ac00000081565b60003382600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561133f57600080fd5b61139183600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a6d90919063ffffffff16565b9150600090506000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156113fd576113fa6113eb85610bfa565b82611a8690919063ffffffff16565b90505b6000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561146357611460611451856111cf565b82611a8690919063ffffffff16565b90505b80821015151561147257600080fd5b61147c8787611dcc565b94505050505092915050565b6b01743b34e18439b50200000081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6b02e87669c308736a0400000081565b600a6020528060005260406000206000915090505481565b73d6d64a62a7ff8f55841b0dd2c02d5052457bca6c81565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115bb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156115f757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561171357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561174f57600080fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f66a2d888b4cfd4710bcc94829a8b6901168f767ec29b873c9b2e2b53fe84964683836040518080602001848152602001838152602001828103825260088152602001807f696e766573746f72000000000000000000000000000000000000000000000000815250602001935050505060405180910390a2505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118c757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561190357600080fd5b81600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f66a2d888b4cfd4710bcc94829a8b6901168f767ec29b873c9b2e2b53fe849646838360405180806020018481526020018381526020018281038252600b8152602001807f636f6e7472696275746f72000000000000000000000000000000000000000000815250602001935050505060405180910390a2505050565b60008082840290506000841480611a405750828482811515611a3d57fe5b04145b1515611a4857fe5b8091505092915050565b6000808284811515611a6057fe5b0490508091505092915050565b6000828211151515611a7b57fe5b818303905092915050565b6000808284019050838110151515611a9a57fe5b8091505092915050565b600080600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614151515611ae357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611b1f57600080fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050611bf083600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a6d90919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c8583600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a8690919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611cdb8382611a6d90919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611e0957600080fd5b600082111515611e1857600080fd5b611e6a82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a6d90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611eff82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a8690919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050929150505600a165627a7a723058208aa93948a2d9096564f89fc44d7f64f4e82517b4e2bd2e3daf81bae4addc88940029"
}