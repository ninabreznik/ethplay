{
  "address": "0xe865fe1a1a3b342bf0e2fcb11ff4e3bce58263af",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Zer0netDb",
  "compilerVersion": "v0.4.24+commit.e67f0147",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-07-17\n*/\n\npragma solidity ^0.4.23;\n\n/*******************************************************************************\n *\n * Copyright (c) 2018 Decentralization Authority MDAO.\n * Released under the MIT License.\n *\n * ZeroDb - An eternal database, providing a sustainable storage solution\n *          for use throughout the upgrade lifecycle of managing contracts.\n *\n * Version 18.7.17\n *\n * Web    : https://d14na.org\n * Email  : [emailÂ protected]\n * Github : https://github.com/d14na/zerodb.git/\n */\n\n\n/*******************************************************************************\n * Owned contract\n */\ncontract Owned {\n    address public owner;\n    address public newOwner;\n\n    event OwnershipTransferred(address indexed _from, address indexed _to);\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;\n    }\n\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n\n        emit OwnershipTransferred(owner, newOwner);\n\n        owner = newOwner;\n\n        newOwner = address(0);\n    }\n}\n\n\n/*******************************************************************************\n * Zer0net Db Contract\n */\ncontract Zer0netDb is Owned {\n    /* Initialize all storage types. */\n    mapping(bytes32 => address)    private addressStorage;\n    mapping(bytes32 => bool)       private boolStorage;\n    mapping(bytes32 => bytes)      private bytesStorage;\n    mapping(bytes32 => int256)     private intStorage;\n    mapping(bytes32 => string)     private stringStorage;\n    mapping(bytes32 => uint256)    private uIntStorage;\n\n    /**\n     * @dev Only allow access from the latest version of an 0racle contract\n     *      within the Zer0net after deployment.\n     */\n    modifier onlyAuthBy0racle() {\n        /***********************************************************************\n         * The owner is only allowed to set the authorized contracts upon\n         * deployment, to register the initial contracts, afterwards their\n         * direct access is permanently disabled.\n         */\n        if (msg.sender == owner) {\n            /* Verify owner's write access has not already been disabled. */\n            require(boolStorage[keccak256('owner.auth.disabled')] != true);\n        } else {\n            /* Verify write access is only permitted to authorized accounts. */\n            require(boolStorage[keccak256(msg.sender, '.has.auth')] == true);\n        }\n\n        _;      // function code is inserted here\n    }\n\n    /***************************************************************************\n     * Initialize all getter methods.\n     */\n\n    /// @param _key The key for the record\n    function getAddress(bytes32 _key) external view returns (address) {\n        return addressStorage[_key];\n    }\n\n    /// @param _key The key for the record\n    function getBool(bytes32 _key) external view returns (bool) {\n        return boolStorage[_key];\n    }\n\n    /// @param _key The key for the record\n    function getBytes(bytes32 _key) external view returns (bytes) {\n        return bytesStorage[_key];\n    }\n\n    /// @param _key The key for the record\n    function getInt(bytes32 _key) external view returns (int) {\n        return intStorage[_key];\n    }\n\n    /// @param _key The key for the record\n    function getString(bytes32 _key) external view returns (string) {\n        return stringStorage[_key];\n    }\n\n    /// @param _key The key for the record\n    function getUint(bytes32 _key) external view returns (uint) {\n        return uIntStorage[_key];\n    }\n\n\n    /***************************************************************************\n     * Initialize all setter methods.\n     */\n\n    /// @param _key The key for the record\n    function setAddress(bytes32 _key, address _value) onlyAuthBy0racle external {\n        addressStorage[_key] = _value;\n    }\n\n    /// @param _key The key for the record\n    function setBool(bytes32 _key, bool _value) onlyAuthBy0racle external {\n        boolStorage[_key] = _value;\n    }\n\n    /// @param _key The key for the record\n    function setBytes(bytes32 _key, bytes _value) onlyAuthBy0racle external {\n        bytesStorage[_key] = _value;\n    }\n\n    /// @param _key The key for the record\n    function setInt(bytes32 _key, int _value) onlyAuthBy0racle external {\n        intStorage[_key] = _value;\n    }\n\n    /// @param _key The key for the record\n    function setString(bytes32 _key, string _value) onlyAuthBy0racle external {\n        stringStorage[_key] = _value;\n    }\n\n    /// @param _key The key for the record\n    function setUint(bytes32 _key, uint _value) onlyAuthBy0racle external {\n        uIntStorage[_key] = _value;\n    }\n\n\n    /***************************************************************************\n     * Initialize all delete methods.\n     */\n\n    /// @param _key The key for the record\n    function deleteAddress(bytes32 _key) onlyAuthBy0racle external {\n        delete addressStorage[_key];\n    }\n\n    /// @param _key The key for the record\n    function deleteBool(bytes32 _key) onlyAuthBy0racle external {\n        delete boolStorage[_key];\n    }\n\n    /// @param _key The key for the record\n    function deleteBytes(bytes32 _key) onlyAuthBy0racle external {\n        delete bytesStorage[_key];\n    }\n\n    /// @param _key The key for the record\n    function deleteInt(bytes32 _key) onlyAuthBy0racle external {\n        delete intStorage[_key];\n    }\n\n    /// @param _key The key for the record\n    function deleteString(bytes32 _key) onlyAuthBy0racle external {\n        delete stringStorage[_key];\n    }\n\n    /// @param _key The key for the record\n    function deleteUint(bytes32 _key) onlyAuthBy0racle external {\n        delete uIntStorage[_key];\n    }\n}",
  "bytecode": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612266806100536000396000f300608060405260043610610128576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461012d57806321f8a7211461015e5780632c62ff2d146101cf5780632e28d084146102005780633e49bed014610249578063616b59f6146102845780636e899550146102b557806379ba5097146102fe5780637ae1cfca146103155780638c1600951461035e5780638da5cb5b1461038f578063986e791a146103e6578063abfdcced14610490578063bd02d0f5146104cd578063c031a18014610512578063ca446dd9146105bc578063d4ee1d901461060d578063dc97d96214610664578063e2a4853a146106a9578063e2b202bf146106e4578063f2fde38b14610715578063f6bb3cc414610758575b600080fd5b34801561013957600080fd5b5061015c6004803603810190808035600019169060200190929190505050610789565b005b34801561016a57600080fd5b5061018d6004803603810190808035600019169060200190929190505050610949565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101db57600080fd5b506101fe600480360381019080803560001916906020019092919050505061098e565b005b34801561020c57600080fd5b506102476004803603810190808035600019169060200190929190803590602001908201803590602001919091929391929390505050610b3b565b005b34801561025557600080fd5b50610282600480360381019080803560001916906020019092919080359060200190929190505050610cea565b005b34801561029057600080fd5b506102b36004803603810190808035600019169060200190929190505050610e8d565b005b3480156102c157600080fd5b506102fc6004803603810190808035600019169060200190929190803590602001908201803590602001919091929391929390505050611036565b005b34801561030a57600080fd5b506103136111e5565b005b34801561032157600080fd5b506103446004803603810190808035600019169060200190929190505050611384565b604051808215151515815260200191505060405180910390f35b34801561036a57600080fd5b5061038d60048036038101908080356000191690602001909291905050506113b6565b005b34801561039b57600080fd5b506103a4611557565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103f257600080fd5b50610415600480360381019080803560001916906020019092919050505061157c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045557808201518184015260208101905061043a565b50505050905090810190601f1680156104825780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561049c57600080fd5b506104cb6004803603810190808035600019169060200190929190803515159060200190929190505050611639565b005b3480156104d957600080fd5b506104fc60048036038101908080356000191690602001909291905050506117ef565b6040518082815260200191505060405180910390f35b34801561051e57600080fd5b506105416004803603810190808035600019169060200190929190505050611814565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610581578082015181840152602081019050610566565b50505050905090810190601f1680156105ae5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105c857600080fd5b5061060b6004803603810190808035600019169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118d1565b005b34801561061957600080fd5b50610622611aae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561067057600080fd5b506106936004803603810190808035600019169060200190929190505050611ad4565b6040518082815260200191505060405180910390f35b3480156106b557600080fd5b506106e2600480360381019080803560001916906020019092919080359060200190929190505050611af9565b005b3480156106f057600080fd5b506107136004803603810190808035600019169060200190929190505050611c9c565b005b34801561072157600080fd5b50610756600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e3d565b005b34801561076457600080fd5b506107876004803603810190808035600019169060200190929190505050611edc565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561085457600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615151415151561084f57600080fd5b610908565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151514151561090757600080fd5b5b60026000826000191660001916815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b600060026000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610a5957600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151514151515610a5457600080fd5b610b0d565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515141515610b0c57600080fd5b5b60036000826000191660001916815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c0657600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151514151515610c0157600080fd5b610cba565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515141515610cb957600080fd5b5b81816004600086600019166000191681526020019081526020016000209190610ce4929190612085565b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610db557600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151514151515610db057600080fd5b610e69565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515141515610e6857600080fd5b5b80600560008460001916600019168152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610f5857600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151514151515610f5357600080fd5b61100c565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151514151561100b57600080fd5b5b60046000826000191660001916815260200190815260200160002060006110339190612105565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561110157600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515141515156110fc57600080fd5b6111b5565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615151415156111b457600080fd5b5b818160066000866000191660001916815260200190815260200160002091906111df92919061214d565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561124157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060036000836000191660001916815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561148157600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615151415151561147c57600080fd5b611535565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151514151561153457600080fd5b5b6005600082600019166000191681526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606006600083600019166000191681526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561162d5780601f106116025761010080835404028352916020019161162d565b820191906000526020600020905b81548152906001019060200180831161161057829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561170457600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515141515156116ff57600080fd5b6117b8565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615151415156117b757600080fd5b5b8060036000846000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000600760008360001916600019168152602001908152602001600020549050919050565b60606004600083600019166000191681526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118c55780601f1061189a576101008083540402835291602001916118c5565b820191906000526020600020905b8154815290600101906020018083116118a857829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561199c57600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615151415151561199757600080fd5b611a50565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515141515611a4f57600080fd5b5b8060026000846000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008360001916600019168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611bc457600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151514151515611bbf57600080fd5b611c78565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515141515611c7757600080fd5b5b80600760008460001916600019168152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611d6757600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151514151515611d6257600080fd5b611e1b565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515141515611e1a57600080fd5b5b6007600082600019166000191681526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e9857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611fa757600115156003600060405180807f6f776e65722e617574682e64697361626c656400000000000000000000000000815250601301905060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151514151515611fa257600080fd5b61205b565b600115156003600033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f2e6861732e61757468000000000000000000000000000000000000000000000081525060090191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16151514151561205a57600080fd5b5b600660008260001916600019168152602001908152602001600020600061208291906121cd565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106120c657803560ff19168380011785556120f4565b828001600101855582156120f4579182015b828111156120f35782358255916020019190600101906120d8565b5b5090506121019190612215565b5090565b50805460018160011615610100020316600290046000825580601f1061212b575061214a565b601f0160209004906000526020600020908101906121499190612215565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061218e57803560ff19168380011785556121bc565b828001600101855582156121bc579182015b828111156121bb5782358255916020019190600101906121a0565b5b5090506121c99190612215565b5090565b50805460018160011615610100020316600290046000825580601f106121f35750612212565b601f0160209004906000526020600020908101906122119190612215565b5b50565b61223791905b8082111561223357600081600090555060010161221b565b5090565b905600a165627a7a72305820d343bc07e54f9a17a51d21b679a6d05569666f29d35e535c92c422b44141f58c0029"
}