{
  "address": "0x865e3707a580f9db89304005cddd050ade8873eb",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Hire",
  "compilerVersion": "v0.4.18+commit.9cf6e910",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-12-05\n*/\n\npragma solidity ^0.4.17;\n\nlibrary SafeMath {\n    \n    /**\n     *  Sub function asserts that b is less than or equal to a.\n     * */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * Add function avoids overflow.\n    * */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\ncontract ERC20Basic {\n    uint256 public totalSupply;\n    function balanceOf(address who) constant public returns (uint256);\n    function transfer(address to, uint256 value) public returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) constant public returns (uint256);\n    function transferFrom(address from, address to, uint256 value) public  returns (bool);\n    function approve(address spender, uint256 value) public returns (bool);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract BasicToken is ERC20Basic {\n\n    using SafeMath for uint256;\n\n    //keeps a record of the total balances of each ETH address.\n    mapping (address => uint256) balances;\n\n    modifier onlyPayloadSize(uint size) {\n        if (msg.data.length < size + 4) {\n        revert();\n        }\n        _;\n    }\n\n    /**\n     * Transfer function makes it possible for users to transfer their Hire tokens to another\n     * ETH address.\n     * \n     * @param _to the address of the recipient.\n     * @param _amount the amount of Hire tokens to be sent.\n     * */\n    function transfer(address _to, uint256 _amount) public onlyPayloadSize(2 * 32) returns (bool) {\n        require(balances[msg.sender] >= _amount);\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        Transfer(msg.sender, _to, _amount);\n        return true;\n    }\n\n    /**\n     * BalanceOf function returns the total balance of the queried address.\n     * \n     * @param _addr the address which is being queried.\n     * */\n    function balanceOf(address _addr) public constant returns (uint256) {\n        return balances[_addr];\n    }\n}\n\ncontract AdvancedToken is BasicToken, ERC20 {\n    \n    //keeps a record of all the allowances from one ETH address to another.\n    mapping (address => mapping (address => uint256)) allowances; \n    \n    /**\n     * TransferFrom function allows users to spend ETH on another's behalf, given that the _owner\n     * has allowed them to. \n     * \n     * @param _from the address of the owner.\n     * @param _to the address of the recipient.\n     * @param _amount the total amount of tokens to be sent. '\n     * */\n    function transferFrom(address _from, address _to, uint256 _amount) public onlyPayloadSize(3 * 32) returns (bool) {\n        require(allowances[_from][msg.sender] >= _amount && balances[_from] >= _amount);\n        allowances[_from][msg.sender] = allowances[_from][msg.sender].sub(_amount);\n        balances[_from] = balances[_from].sub(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        Transfer(_from, _to, _amount);\n        return true;\n    }\n\n    /**\n     * Approve function allows users to allow others to spend a specified amount tokens on\n     * their behalf.\n     * \n     * @param _spender the address of the spended who is being granted permission to spend tokens.\n     * @param _amount the total amount of tokens the spender is allowed to spend.\n     * */\n    function approve(address _spender, uint256 _amount) public returns (bool) {\n        allowances[msg.sender][_spender] = _amount;\n        Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n\n    /**\n     * Allowance function returns the total allowance from one address to another.\n     * \n     * @param _owner the address of the owner of the token.\n     * @param _spender the address of the spender who has or has not been allowed to spend\n     * the owners tokens.\n     * */\n    function allowance(address _owner, address _spender) public constant returns (uint256) {\n        return allowances[_owner][_spender];\n    }\n\n}\n\ncontract Hire is AdvancedToken {\n\n    uint8 public decimals;\n    string public name;\n    string public symbol;\n    address public owner;\n\n    /**\n    * Constructor initializes the total supply to 100,000,000, the token name to\n    * Hire, the token symbol to HIRE, sets the decimals to 18 and automatically \n    * sends all tokens to the owner of the contract upon deployment.\n    * */\n    function Hire() public {\n        totalSupply = 100000000e18;\n        decimals = 18;\n        name = \"Hire\";\n        symbol = \"HIRE\";\n        owner = 0xaAa34A22Bd3F496b3A8648367CeeA9c03B130A30;\n        balances[owner] = totalSupply;\n    }\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]",
  "bytecode": "6060604052341561000f57600080fd5b6a52b7d2dcc80cd2e40000006000556003805460ff191660121790556040805190810160405260048082527f48697265000000000000000000000000000000000000000000000000000000006020830152908051610071929160200190610103565b5060408051908101604052600481527f4849524500000000000000000000000000000000000000000000000000000000602082015260059080516100b9929160200190610103565b5060068054600160a060020a03191673aaa34a22bd3f496b3a8648367ceea9c03b130a30179081905560008054600160a060020a039290921681526001602052604090205561019e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061014457805160ff1916838001178555610171565b82800160010185558215610171579182015b82811115610171578251825591602001919060010190610156565b5061017d929150610181565b5090565b61019b91905b8082111561017d5760008155600101610187565b90565b61072d806101ad6000396000f3006060604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016857806323b872dd1461018d578063313ce567146101b557806370a08231146101de5780638da5cb5b146101fd57806395d89b411461022c578063a9059cbb1461023f578063dd62ed3e14610261575b600080fd5b34156100b357600080fd5b6100bb610286565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f75780820151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013d57600080fd5b610154600160a060020a0360043516602435610324565b604051901515815260200160405180910390f35b341561017357600080fd5b61017b610390565b60405190815260200160405180910390f35b341561019857600080fd5b610154600160a060020a0360043581169060243516604435610396565b34156101c057600080fd5b6101c8610518565b60405160ff909116815260200160405180910390f35b34156101e957600080fd5b61017b600160a060020a0360043516610521565b341561020857600080fd5b61021061053c565b604051600160a060020a03909116815260200160405180910390f35b341561023757600080fd5b6100bb61054b565b341561024a57600080fd5b610154600160a060020a03600435166024356105b6565b341561026c57600080fd5b61017b600160a060020a03600435811690602435166106ae565b60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561031c5780601f106102f15761010080835404028352916020019161031c565b820191906000526020600020905b8154815290600101906020018083116102ff57829003601f168201915b505050505081565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60005481565b6000606060643610156103a857600080fd5b600160a060020a03808616600090815260026020908152604080832033909416835292905220548390108015906103f85750600160a060020a038516600090815260016020526040902054839010155b151561040357600080fd5b600160a060020a038086166000908152600260209081526040808320339094168352929052205461043a908463ffffffff6106d916565b600160a060020a038087166000818152600260209081526040808320339095168352938152838220949094559081526001909252902054610481908463ffffffff6106d916565b600160a060020a0380871660009081526001602052604080822093909355908616815220546104b6908463ffffffff6106eb16565b600160a060020a03808616600081815260016020526040908190209390935591908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3506001949350505050565b60035460ff1681565b600160a060020a031660009081526001602052604090205490565b600654600160a060020a031681565b60058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561031c5780601f106102f15761010080835404028352916020019161031c565b6000604060443610156105c857600080fd5b600160a060020a033316600090815260016020526040902054839010156105ee57600080fd5b600160a060020a033316600090815260016020526040902054610617908463ffffffff6106d916565b600160a060020a03338116600090815260016020526040808220939093559086168152205461064c908463ffffffff6106eb16565b600160a060020a0380861660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a35060019392505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156106e557fe5b50900390565b6000828201838110156106fa57fe5b93925050505600a165627a7a7230582077e95292c89f002b652c07efc4aef7db7f4acb2de9129fef5da13690573559000029"
}