{
  "address": "0x3da71558a40f63b960196cc0679847ff50fad22b",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "WithDrawChildDAO",
  "compilerVersion": "v0.3.6-2016-08-17-c499470",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2016-08-22\n*/\n\ncontract DAO {\n    function balanceOf(address addr) returns (uint);\n    function transferFrom(address from, address to, uint balance) returns (bool);\n}\n\n\ncontract WithDrawChildDAO {\n\n    struct SplitData {\n        uint128 balance;\n        uint128 totalSupply;\n    }\n    mapping (address => SplitData) childDAOs;\n\n    function WithDrawPreForkChildDAO() {\n        // set balance and totalSupply at time of split for ChildDAO. Malicious childDAO (did not burn the right amount of DAO tokens\n        // at the time of split) are commented out with a \"b\" at the beginning of the comment. ChildDAOs which habe already executed a \n        // proposal are commented out witha \"e\" in the beginning of the comment. Both types of childDAO have been taken from:\n        // https://github.com/dsystems-io/childDaoWithdraw. Thanks for the work!\n        // Added by @ledgerwatch: childDAOs that are pre-attack and refunded on invidual basis, are commented out with a \"p\" in the beginning\n        // of the comment\n        \n        // 1 e - childDAOs[0xd4fe7bc31cedb7bfb8a345f31e668033056b2728] = SplitData(11727766784716799192555572, 11727751591980739956782275);\n        // 4 e - childDAOs[0x2c19c7f9ae8b751e37aeb2d93a699722395ae18f] = SplitData(11723955902593679358349542, 11723940714794427556781866);\n        // 7 p - childDAOs[0x1975bd06d486162d5dc297798dfc41edd5d160a7] = SplitData(11652675906713000181862887, 11652660811253422556781866);\n        // 8 e - childDAOs[0x319f70bab6845585f412ec7724b744fec6095c85] = SplitData(11727766774716786238037889, 11727751581980739956781866);\n        // 10 p - childDAOs[0x5c8536898fbb74fc7445814902fd08422eac56d0] = SplitData(11652850906939704234171111, 11652835811253422556781866);\n        // 13 e - childDAOs[0x779543a0491a837ca36ce8c635d6154e3c4911a6] = SplitData(11725766772225882912631930, 11725751582080739956781866);\n        // 14 e - childDAOs[0x5c6e67ccd5849c0d29219c4f95f1a7a93b3f5dc5] = SplitData(11725266771578157048894147, 11725251582080739956781866);\n        // 16 p - childDAOs[0x200450f06520bdd6c527622a273333384d870efb] = SplitData(11725205904212994017693999, 11725190714794427556781866);\n        // 18 e - childDAOs[0x6b0c4d41ba9ab8d8cfb5d379c69a612f2ced8ecb] = SplitData(11723955004074335371421094, 11723939816276247556781866);\n        // 19 e - childDAOs[0xd1ac8b1ef1b69ff51d1d401a476e7e612414f091] = SplitData(11689379967484102516657552, 11689364824476247556781866);\n        // 20 p - childDAOs[0x51e0ddd9998364a2eb38588679f0d2c42653e4a6] = SplitData(11672514989096365433114202, 11672499867936247556781866);\n        // 22 e - childDAOs[0xf0b1aa0eb660754448a7937c022e30aa692fe0c5] = SplitData(11672404990435687662718170, 11672389869418067556781866);\n        // 23 p - childDAOs[0x9f27daea7aca0aa0446220b98d028715e3bc803d] = SplitData(11672504989083410915839447, 11672489867936247556781866);\n        // 26 p - childDAOs[0xd9aef3a1e38a39c16b31d1ace71bca8ef58d315b] = SplitData(11657174904348740590804928, 11657159803060936256781866);\n        // 27 p - childDAOs[0x6f6704e5a10332af6672e50b3d9754dc460dfa4d] = SplitData(11660273159043194987425803, 11660258053741756456781866);\n        // 28 p - childDAOs[0x492ea3bb0f3315521c31f273e565b868fc090f17] = SplitData(11672394990422733145443415, 11672379869418067556781866);\n        // 29 p - childDAOs[0x9ea779f907f0b315b364b0cfc39a0fde5b02a416] = SplitData(11651681905425321164752175, 11651666811253422556781866);\n        // 31 p - childDAOs[0xcc34673c6c40e791051898567a1222daf90be287] = SplitData(11672027610039670010098830, 11672012489510927356781866);\n        // 32 e - childDAOs[0xe308bd1ac5fda103967359b2712dd89deffb7973] = SplitData(11672027570039618192029731, 11672012449510927356781866);\n        // 33 e - childDAOs[0xac1ecab32727358dba8962a0f3b261731aad9723] = SplitData(11671920519900940084603472, 11671905399510927356781866);\n        // 34 p - childDAOs[0x440c59b325d2997a134c2c7c60a8c61611212bad] = SplitData(11660540013147733350301278, 11660524907500598656781866);\n        // #35\n        childDAOs[0x9c15b54878ba618f494b38f0ae7443db6af648ba] = SplitData(7913415994245080851884568, 11540303342793816418782834);\n        // #36\n        childDAOs[0x21c7fdb9ed8d291d79ffd82eb2c4356ec0d81241] = SplitData(7913416021673878030553201, 11540303382793816418782834); \n        // 37 p - childDAOs[0x1ca6abd14d30affe533b24d7a21bff4c2d5e1f3b] = SplitData(11658110148448064505365317, 11658095045948698156781866);\n        // 39 p - childDAOs[0x6131c42fa982e56929107413a9d526fd99405560] = SplitData(11660231985697426974621503, 11660216880449326456781866);\n        // 41 p - childDAOs[0x542a9515200d14b68e934e9830d91645a980dd7a] = SplitData(11655924902729425931460472, 11655909803060936256781866); \n        // 44 p - childDAOs[0x782495b7b3355efb2833d56ecb34dc22ad7dfcc4] = SplitData(11657074904219195418057372, 11657059803060936256781866);\n        // 45 e - childDAOs[0x3ba4d81db016dc2890c81f3acec2454bff5aada5] = SplitData(11644042202973928247591111, 11644027118698882556781866);\n        // 52 p - childDAOs[0xe4ae1efdfc53b73893af49113d8694a057b9c0d1] = SplitData(11651686905431798423389552, 11651671811253422556781866);\n        // #53\n        childDAOs[0x0737a6b837f97f46ebade41b9bc3e1c509c85c53] = SplitData(8285423727021618574288915, 11597611623386926056781866);\n        // 54 p - childDAOs[0x52c5317c848ba20c7504cb2c8052abd1fde29d03] = SplitData(11640162228429435032712289, 11640147149180702556781865);\n        // 56 p - childDAOs[0x5d2b2e6fcbe3b11d26b525e085ff818dae332479] = SplitData(11637045764389294338324695, 11637030689177785356781865);\n        // 57 p - childDAOs[0x057b56736d32b86616a10f619859c6cd6f59092a] = SplitData(11632720959688545875602644, 11632705890079605356781865);\n        // 59 b - childDAOs[0x304a554a310c7e546dfe434669c62820b7d83490]\n        // 60 p - childDAOs[0x4deb0033bb26bc534b197e61d19e0733e5679784] = SplitData(11600333244558691014482582, 11600318216906417656781865);\n        // 61 p - childDAOs[0x35a051a0010aba705c9008d7a7eff6fb88f6ea7b] = SplitData(11632720949788533050630542, 11632705880179605356781865);\n        // #62\n        childDAOs[0x9da397b9e80755301a3b32173283a91c0ef6c87e] = SplitData(7930699229747195847409685, 11562914862736318056781866);\n        // 63 p - childDAOs[0x0101f3be8ebb4bbd39a2e3b9a3639d4259832fd9] = SplitData(11599337143263109741834269, 11599318116906417656781865);\n        // 64 p - childDAOs[0xbcf899e6c7d9d5a215ab1e3444c86806fa854c76] = SplitData(11631034981160489608342812, 11631019913735650056781865);\n        // 65 p - childDAOs[0xa2f1ccba9395d7fcb155bba8bc92db9bafaeade7] = SplitData(11600338244565168273119959, 11600323216906417656781865);\n        // 66 p - childDAOs[0xd164b088bd9108b60d0ca3751da4bceb207b0782] = SplitData(11600333144558561469309835, 11600318116906417656781865);\n        // #67\n        childDAOs[0x1cba23d343a983e9b5cfd19496b9a9701ada385f] = SplitData(7929078466662085333989346, 11560551799275847356782634);\n        // #68\n        childDAOs[0x9fcd2deaff372a39cc679d5c5e4de7bafb0b1339] = SplitData(10112931316104865578090844, 11599318102767995456781865);\n        // 69 b - childDAOs[0x0e0da70933f4c7849fc0d203f5d1d43b9ae4532d]\n        // #70\n        childDAOs[0xbc07118b9ac290e4622f5e77a0853539789effbe] = SplitData(7932411170508884080269057, 11565410862736318056781866);\n        // #71\n        childDAOs[0xacd87e28b0c9d1254e868b81cba4cc20d9a32225] = SplitData(7913413658817663126469710, 11540299982102102518782834);\n        // #73\n        childDAOs[0x5524c55fb03cf21f549444ccbecb664d0acad706] = SplitData(7920435670452017684678746, 11550426779375303418782834);\n        // 74 b - childDAOs[0xfe24cdd8648121a43a7c86d289be4dd2951ed49f]\n        // #76\n        childDAOs[0x253488078a4edf4d6f42f113d1e62836a942cf1a] = SplitData(7913160958906206858622565, 11539990270685330718782834);\n        // 78 b -childDAOs[0xb136707642a4ea12fb4bae820f03d2562ebff487]\n        // 81 b - childDAOs[0xf14c14075d6c4ed84b86798af0956deef67365b5]\n        // 85 b - childDAOs[0xaeeb8ff27288bdabc0fa5ebb731b6f409507516c]\n        // #87\n        childDAOs[0x6d87578288b6cb5549d5076a207456a1f6a63dc0] = SplitData(7912878490620133004657286, 11539954374724178476032701);\n        // 94 b - childDAOs[0xaccc230e8a6e5be9160b8cdf2864dd2a001c28b6]\n        // 98 b - childDAOs[0x4613f3bca5c44ea06337a9e439fbc6d42e501d0a]\n        // 99 b - childDAOs[0x84ef4b2357079cd7a7c69fd7a37cd0609a679106]\n        // 101 b - childDAOs[0xf4c64518ea10f995918a454158c6b61407ea345c]  \n    }\n\n    function withdraw(DAO _childDAO){\n        uint balance = _childDAO.balanceOf(msg.sender);\n        uint amount = balance * childDAOs[_childDAO].totalSupply / childDAOs[_childDAO].balance;\n        if (!_childDAO.transferFrom(msg.sender, this, balance) || !msg.sender.send(amount))\n            throw;\n       }\n\n    function checkMyWithdraw(DAO _childDAO, address _tokenHolder) constant returns(uint) {        \n        return _childDAO.balanceOf(_tokenHolder) * childDAOs[_childDAO].totalSupply / childDAOs[_childDAO].balance;\n    }\n\n    address constant curator = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n    \n    /**\n    * Return funds back to the curator.\n    */\n    function clawback() external {\n        if (msg.sender != curator) throw;\n        if (!curator.send(this.balance)) throw;\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[],\"name\":\"clawback\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_childDAO\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"WithDrawPreForkChildDAO\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_childDAO\",\"type\":\"address\"},{\"name\":\"_tokenHolder\",\"type\":\"address\"}],\"name\":\"checkMyWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"}]",
  "bytecode": "6060604052610808806100126000396000f3606060405260e060020a60003504632526d960811461003c57806351cff8d914610068578063770c6cbb146101a1578063a5de811f14610704575b005b61003a73da4a4626d3e16e094de3225a751aab7128e9652633600160a060020a0316146107c357610002565b61003a6004356000600082600160a060020a03166370a08231336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f115610002575050604080518051600160a060020a0387811660008181526020818152868220547f23b872dd00000000000000000000000000000000000000000000000000000000875233851660048801523090941660248701526044860185905295519398506fffffffffffffffffffffffffffffffff838116608060020a90940416890292909204965094506323b872dd936064848101949193929183900301908290876161da5a03f1156100025750506040515115905080610197575060405133600160a060020a031690600090839082818181858883f19350505050155b1561080357610002565b61003a6040805180820182526a068bbb2400cb0cda972a1881526a098bc1190773638eb38e726020828101918252739c15b54878ba618f494b38f0ae7443db6af648ba60009081528082527f7224d7fe78108c0fca0e26af1d606a4ea3171d23ccc3e490108c2fcc65820e31805494519351608060020a9081026fffffffffffffffffffffffffffffffff19968716959095176fffffffffffffffffffffffffffffffff90811695909517909155855180870187526a068bbb24623d655b0a907181526a098bc119958f2d4db78e728185019081527321c7fdb9ed8d291d79ffd82eb2c4356ec0d81241845283855290517fea35b78b738bfc4dcd61b1c194752c561aead01604a5758ba67a9819221d9ef38054925184029288169091178616919091179055855180870187526a06da81b861a5dedd82681381526a0997e3c92fd289d708b82a818501908152730737a6b837f97f46ebade41b9bc3e1c509c85c53845283855290517f603d2fe33c9eadce203f207da2464803ddae84bf136f52af5dc4b61d2b1e04fa8054925184029288169091178616919091179055855180870187526a068f641113f9b7b2ec801581526a09908adee7a62085e2582a818501908152739da397b9e80755301a3b32173283a91c0ef6c87e845283855290517f1e2e5ae48ae07be41eb62ab5c959852342d492ad525ed1aea218344f5cfd87e08054925184029288169091178616919091179055855180870187526a068f0c3478cafafc91b7e281526a09900ac4cfc4e0307c182a818501908152731cba23d343a983e9b5cfd19496b9a9701ada385f845283855290517f374716464bfb4cc6be37d0b6ad94a098113df781e9d937fc87e2a98e49ca0bcc8054925184029288169091178616919091179055855180870187526a085d7f1aeb7ee6c13a015c81526a0998404b58764e4912fe29818501908152739fcd2deaff372a39cc679d5c5e4de7bafb0b1339845283855290517fc49e452614068e0264ee4fb4f3dc738e487201ab7977585a54ac7920b6998ef98054925184029288169091178616919091179055855180870187526a068fc0df075638ddb3170181526a0991122ddcfdc094e2582a81850190815273bc07118b9ac290e4622f5e77a0853539789effbe845283855290517feb3a9d6855f7f102c00af22f07b64e7df0aef862edc6fb7e8128f917e9afd3f58054925184029288169091178616919091179055855180870187526a068bbb0397b02ffa5bfc4e81526a098bc0ea63e014b017db7281850190815273acd87e28b0c9d1254e868b81cba4cc20d9a32225845283855290517f1564a5d866b6896d7b52444af230f28190db97e158b2c8e956f6ce8967b72fc38054925184029288169091178616919091179055855180870187526a068d37ad94796bb5f6085a81526a098de5e3ef11fc4e252472818501908152735524c55fb03cf21f549444ccbecb664d0acad706845283855290517fe2e28c8d62fdbe62bef7c3e65f6e72a35f58d2eca322cbf20bacdfb1ca9c5f2a8054925184029288169091178616919091179055855180870187526a068bad50ad419456d9b66581526a098bb02047e372c1fef57281850190815273253488078a4edf4d6f42f113d1e62836a942cf1a845283855290517f7f358d89ebd0b3d970e445299ebf3342995368dd61ca0e6d0bb7dbceb6b3fe69805492518402928816909117861691909117905585518087019096526a068b9e00a44ff9f55dc28686526a098bae2e1fd0f71b5862bd868401908152736d87578288b6cb5549d5076a207456a1f6a63dc083529190925293517ff9ee44d29a1d5782fc3fb4e277af3fe6423ec9fdddd21934ede2b332242307aa805495519092029490931690921716919091179055565b6107af600435602435600160a060020a038281166000818152602081815260408083205481517f70a082310000000000000000000000000000000000000000000000000000000081529587166004870152905192946fffffffffffffffffffffffffffffffff80831695608060020a909304169391926370a0823192602483810193829003018189876161da5a03f11561000257505050604051805190602001500204905092915050565b60408051918252519081900360200190f35b565b60405173da4a4626d3e16e094de3225a751aab7128e965269060009030600160a060020a0316319082818181858883f1935050505015156107c157610002565b50505056"
}