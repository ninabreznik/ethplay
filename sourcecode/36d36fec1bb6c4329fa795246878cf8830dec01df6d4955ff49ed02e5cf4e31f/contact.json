{
  "address": "0xf68fb1039363a7cd7e6be2b649bbb7043f03e744",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "InvoiceCreator",
  "compilerVersion": "v0.5.8+commit.23d335f2",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2019-05-06\n*/\n\npragma solidity 0.5.8;\n\ninterface IERC20 {\n    function balanceOf(address who) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n}\n\ncontract Invoice {\n    address public owner;\n\n    /**\n    * @dev Throws if called by any account other than the owner.\n    */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    constructor(address _owner) public {\n        owner = _owner;\n    }\n    \n    function reclaimToken(IERC20 _token) external onlyOwner {\n        uint256 balance = _token.balanceOf(address(this));\n        _token.transfer(owner, balance);\n    }\n}\n\ncontract InvoiceCreator {\n    using SafeMath for uint;\n    \n    address public manager;\n    \n    modifier onlyManager() {\n        require(msg.sender == manager);\n        _;\n    }\n    \n    constructor(address _manager) public {\n        manager = _manager;\n    }\n    \n    // id => invoice\n    mapping(uint => address) public invoices;\n    \n    // id => initiator\n    mapping(uint => address) public initiators;\n    \n    uint public counter;\n    \n    function getInvoice() public onlyManager {\n        Invoice newInv = new Invoice(manager);\n        \n        counter = counter.add(1);\n        \n        invoices[counter] = address(newInv);\n        initiators[counter] = msg.sender;\n    }\n    \n    function getCounter() public view returns(uint) {\n        return counter;\n    }\n    \n    function getInvoiceAddr(uint id) public view returns(address) {\n        return invoices[id];\n    }\n    \n    function getInitiatorAddr(uint id) public view returns(address) {\n        return initiators[id];\n    }\n    \n    function changeManager(address _manager) public onlyManager {\n        require(_manager != address(0));\n        \n        manager = _manager;\n    }\n    \n}\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}",
  "bytecode": "608060405234801561001057600080fd5b506040516020806106078339810180604052602081101561003057600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556105a5806100626000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638ada066e116100665780638ada066e14610110578063a3fbbaae14610118578063a72224f514610140578063be40037c1461015d578063e2f8b6191461017a57610093565b8063481c6a75146100985780634862b177146100bc5780634e6d1405146100d957806361bc221a146100f6575b600080fd5b6100a0610182565b604080516001600160a01b039092168252519081900360200190f35b6100a0600480360360208110156100d257600080fd5b5035610191565b6100a0600480360360208110156100ef57600080fd5b50356101ac565b6100fe6101c7565b60408051918252519081900360200190f35b6100fe6101cd565b61013e6004803603602081101561012e57600080fd5b50356001600160a01b03166101d3565b005b6100a06004803603602081101561015657600080fd5b503561021f565b6100a06004803603602081101561017357600080fd5b503561023a565b61013e610255565b6000546001600160a01b031681565b6000908152600260205260409020546001600160a01b031690565b6001602052600090815260409020546001600160a01b031681565b60035481565b60035490565b6000546001600160a01b031633146101ea57600080fd5b6001600160a01b0381166101fd57600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000908152600160205260409020546001600160a01b031690565b6002602052600090815260409020546001600160a01b031681565b6000546001600160a01b0316331461026c57600080fd5b600080546040516001600160a01b03909116906102889061032a565b6001600160a01b03909116815260405190819003602001906000f0801580156102b5573d6000803e3d6000fd5b506003549091506102cd90600163ffffffff61031416565b6003818155600091825260016020908152604080842080546001600160a01b039096166001600160a01b031996871617905591548352600290529020805490911633179055565b60008282018381101561032357fe5b9392505050565b610242806103388339019056fe608060405234801561001057600080fd5b506040516020806102428339810180604052602081101561003057600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556101e0806100626000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806317ffc3201461003b5780638da5cb5b14610063575b600080fd5b6100616004803603602081101561005157600080fd5b50356001600160a01b0316610087565b005b61006b6101a5565b604080516001600160a01b039092168252519081900360200190f35b6000546001600160a01b0316331461009e57600080fd5b60408051600160e01b6370a0823102815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b1580156100eb57600080fd5b505afa1580156100ff573d6000803e3d6000fd5b505050506040513d602081101561011557600080fd5b50516000805460408051600160e01b63a9059cbb0281526001600160a01b0392831660048201526024810185905290519394509085169263a9059cbb92604480840193602093929083900390910190829087803b15801561017557600080fd5b505af1158015610189573d6000803e3d6000fd5b505050506040513d602081101561019f57600080fd5b50505050565b6000546001600160a01b03168156fea165627a7a72305820c7678e4267e83bd56523a0c69e7eaf956938f2a008400072c651337c675456860029a165627a7a7230582088fce4cf59226e6dfd9046557f4656651f1ee3f7c37ffe3a259397f5ab97edeb0029000000000000000000000000bd728f8b17542b3cd15be8bae72e267e37e8c8dc",
  "constructorArguments": "000000000000000000000000bd728f8b17542b3cd15be8bae72e267e37e8c8dc"
}