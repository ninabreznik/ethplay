{
  "address": "0xdc7b3fd9b42a4102cb9cb9b14ea5d79c4fb16fc0",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "LBToken",
  "compilerVersion": "v0.4.15+commit.bbb8e64f",
  "optimization": false,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2018-05-01\n*/\n\npragma solidity 0.4.15;\n\ncontract ERC20 {\n    function totalSupply() constant returns (uint256 totalSupply) {}\n    function balanceOf(address _owner) constant returns (uint256 balance) {}\n    function transfer(address _recipient, uint256 _value) returns (bool success) {}\n    function transferFrom(address _from, address _recipient, uint256 _value) returns (bool success) {}\n    function approve(address _spender, uint256 _value) returns (bool success) {}\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\n\n    event Transfer(address indexed _from, address indexed _recipient, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\ncontract StandardToken is ERC20 {\n\n\tuint256 public totalSupply;\n\tmapping (address => uint256) balances;\n    mapping (address => mapping (address => uint256)) allowed;\n    \n    modifier when_can_transfer(address _from, uint256 _value) {\n        if (balances[_from] >= _value) _;\n    }\n\n    modifier when_can_receive(address _recipient, uint256 _value) {\n        if (balances[_recipient] + _value > balances[_recipient]) _;\n    }\n\n    modifier when_is_allowed(address _from, address _delegate, uint256 _value) {\n        if (allowed[_from][_delegate] >= _value) _;\n    }\n\n    function transfer(address _recipient, uint256 _value)\n        when_can_transfer(msg.sender, _value)\n        when_can_receive(_recipient, _value)\n        returns (bool o_success)\n    {\n        balances[msg.sender] -= _value;\n        balances[_recipient] += _value;\n        Transfer(msg.sender, _recipient, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _recipient, uint256 _value)\n        when_can_transfer(_from, _value)\n        when_can_receive(_recipient, _value)\n        when_is_allowed(_from, msg.sender, _value)\n        returns (bool o_success)\n    {\n        allowed[_from][msg.sender] -= _value;\n        balances[_from] -= _value;\n        balances[_recipient] += _value;\n        Transfer(_from, _recipient, _value);\n        return true;\n    }\n\n    function balanceOf(address _owner) constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n\n    function approve(address _spender, uint256 _value) returns (bool o_success) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) constant returns (uint256 o_remaining) {\n        return allowed[_owner][_spender];\n    }\n}\n\ncontract LBToken is StandardToken {\n\n\tstring public name = \"LB Coin\";\n    string public symbol = \"LB\";\n    uint public decimals = 18;\n\n\tfunction LBToken (address _bank, uint _totalSupply) {\n\t\tbalances[_bank] += _totalSupply;\n\t\ttotalSupply += _totalSupply;\n\t}\n\n\t// Transfer amount of tokens from sender account to recipient.\n\tfunction transfer(address _recipient, uint _amount)\n\t\treturns (bool o_success)\n\t{\n\t\treturn super.transfer(_recipient, _amount);\n\t}\n\n\t// Transfer amount of tokens from a specified address to a recipient.\n\tfunction transferFrom(address _from, address _recipient, uint _amount)\n\t\treturns (bool o_success)\n\t{\n\t\treturn super.transferFrom(_from, _recipient, _amount);\n\t}\n}",
  "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"o_success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"o_remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_bank\",\"type\":\"address\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
  "bytecode": "60606040526040805190810160405280600781526020017f4c4220436f696e000000000000000000000000000000000000000000000000008152506003908051906020019061004f929190610136565b506040805190810160405280600281526020017f4c420000000000000000000000000000000000000000000000000000000000008152506004908051906020019061009b929190610136565b50601260055534156100ac57600080fd5b604051604080610e29833981016040528080519060200190919080519060200190919050505b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508060008082825401925050819055505b50506101db565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017757805160ff19168380011785556101a5565b828001600101855582156101a5579182015b828111156101a4578251825591602001919060010190610189565b5b5090506101b291906101b6565b5090565b6101d891905b808211156101d45760008160009055506001016101bc565b5090565b90565b610c3f806101ea6000396000f30060606040523615610097576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461009c578063095ea7b31461012b57806318160ddd1461018557806323b872dd146101ae578063313ce5671461022757806370a082311461025057806395d89b411461029d578063a9059cbb1461032c578063dd62ed3e14610386575b600080fd5b34156100a757600080fd5b6100af6103f2565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f05780820151818401525b6020810190506100d4565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013657600080fd5b61016b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610490565b604051808215151515815260200191505060405180910390f35b341561019057600080fd5b610198610583565b6040518082815260200191505060405180910390f35b34156101b957600080fd5b61020d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610589565b604051808215151515815260200191505060405180910390f35b341561023257600080fd5b61023a6105a0565b6040518082815260200191505060405180910390f35b341561025b57600080fd5b610287600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506105a6565b6040518082815260200191505060405180910390f35b34156102a857600080fd5b6102b06105f0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102f15780820151818401525b6020810190506102d5565b50505050905090810190601f16801561031e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561033757600080fd5b61036c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061068e565b604051808215151515815260200191505060405180910390f35b341561039157600080fd5b6103dc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106a3565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104885780601f1061045d57610100808354040283529160200191610488565b820191906000526020600020905b81548152906001019060200180831161046b57829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3600190505b92915050565b60005481565b600061059684848461072b565b90505b9392505050565b60055481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106865780601f1061065b57610100808354040283529160200191610686565b820191906000526020600020905b81548152906001019060200180831161066957829003601f168201915b505050505081565b600061069a8383610a2b565b90505b92915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b6000838280600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610a21578484600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115610a1d5787338780600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610a185788600260008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555088600160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555088600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8b6040518082815260200191505060405180910390a3600197505b5b5b5050505b5b50505b5b50509392505050565b6000338280600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515610c0a578484600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115610c065785600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555085600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040518082815260200191505060405180910390a3600194505b5b5b50505b5b5050929150505600a165627a7a7230582075156f3fd65f038101c42c4cb32aa3690f63ee9f113e000e10b2fa1bf196d94c00290000000000000000000000002cde024b3dcf68081f0aa03f33e4631d7293544f000000000000000000000000000000000000000001bead72a838453f9c000000",
  "constructorArguments": "0000000000000000000000002cde024b3dcf68081f0aa03f33e4631d7293544f000000000000000000000000000000000000000001bead72a838453f9c000000"
}