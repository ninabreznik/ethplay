{
  "address": "0xa1877c74562821ff59ffc0bc999e6a2e164f4d87",
  "chain": "ETH",
  "chainID": 1,
  "verifier": "etherscan.io",
  "commonName": "",
  "contractName": "Crowdsale",
  "compilerVersion": "v0.4.8+commit.60cc1668",
  "optimization": true,
  "runs": "200",
  "evmVersion": "default",
  "sourceCode": "/**\n *Submitted for verification at Etherscan.io on 2017-06-04\n*/\n\npragma solidity ^0.4.8;\n\n\ncontract token {function transfer(address receiver, uint amount){ }}\n\ncontract Crowdsale {\n    uint public amountRaised; uint public resAmount; uint public soldTokens;\n    mapping(address => uint256) public balanceOf;\n    event GoalReached(address beneficiary, uint amountRaised);\n    event FundTransfer(address backer, uint amount, bool isContribution);\n    bool public crowdsaleClosed = true;\n    bool public minimumTargetReached = false;\n\n    // initialization\n    address public beneficiary = 0xC1fa2C60Ea649A477e40c0510744f2881C0486D9;/*ifSuccessfulSendTo*/\n    uint public price = 0.0015 ether;/*costOfEachToken*/\n    uint public minimumTarget = 1500000 * price;/*minimumTargetInTokens*/\n    uint public maximumTarget = 9803020 * price;/*maximumTargetInTokens*/\n    uint public deadline =  now + 43200 * 1 minutes;/*durationInMinutes*/\n    token public tokenReward = token(0x2Fd8019ce2AAc3bf9DB18D851A57EFe1a6151BBF);/*addressOfTokenUsedAsReward*/\n\n\n    // the function without name is the default function that is called whenever anyone sends funds to a contract\n    function () payable {\n        if (crowdsaleClosed || (maximumTarget - amountRaised) < msg.value) throw;\n        uint amount = msg.value;\n        balanceOf[msg.sender] += amount;\n        amountRaised += amount;\n        resAmount += amount;\n        soldTokens += amount / price;\n        tokenReward.transfer(msg.sender, amount / price);\n        FundTransfer(msg.sender, amount, true);\n\n        if (amountRaised >= minimumTarget && !minimumTargetReached) {\n            minimumTargetReached = true;\n            GoalReached(beneficiary, minimumTarget);\n        }\n\n        // funds are sending to beneficiary account after minimumTarget will be reached\n        if (minimumTargetReached) {\n            if (beneficiary.send(amount)) {\n                FundTransfer(beneficiary, amount, false);\n                resAmount -= amount;\n            }\n        }\n    }\n\n    // dev function for withdraw any amount from amountRaised (active only if minimumTarget is reached)\n    function devWithdrawal(uint num, uint den) {\n        if (!minimumTargetReached || !(beneficiary == msg.sender)) throw;\n        uint wAmount = num / den;\n        if (beneficiary.send(wAmount)) {\n            FundTransfer(beneficiary, wAmount, false);\n            resAmount -= wAmount;\n        }\n    }\n\n    // dev function for withdraw resAmount (active only if minimumTarget is reached)\n    function devResWithdrawal() {\n        if (!minimumTargetReached || !(beneficiary == msg.sender)) throw;\n        if (beneficiary.send(resAmount)) {\n            FundTransfer(beneficiary, resAmount, false);\n            resAmount -= resAmount;\n        }\n    }\n\n    // dev function for close crowdsale  \n    function closeCrowdsale(bool closeType) {\n         if (beneficiary == msg.sender) {\n            crowdsaleClosed = closeType;\n         }\n    }\n\n\n    modifier afterDeadline() { if (now >= deadline) _; }\n\n    // checks if the minimumTarget has been reached\n    function checkTargetReached() afterDeadline {\n        if (amountRaised >= minimumTarget) {\n            minimumTargetReached = true;\n        }\n    }\n\n    // function for return non sold tokens to dev account after crowdsale\n    function returnTokens(uint tokensAmount) afterDeadline {\n        if (!crowdsaleClosed) throw;\n        if (beneficiary == msg.sender) {\n            tokenReward.transfer(beneficiary, tokensAmount);\n        }\n    }\n\n    // return your funds after deadline if minimumTarget is not reached (active if crowdsale close)\n    function safeWithdrawal() afterDeadline {\n        if (!crowdsaleClosed) throw;\n        if (!minimumTargetReached && crowdsaleClosed) {\n            uint amount = balanceOf[msg.sender];\n            balanceOf[msg.sender] = 0;\n            if (amount > 0) {\n                if (msg.sender.send(amount)) {\n                    FundTransfer(msg.sender, amount, false);\n                    resAmount -= amount;\n                } else {\n                    balanceOf[msg.sender] = amount;\n                }\n            }\n        }\n    }\n}",
  "abi": "[{\"constant\":false,\"inputs\":[],\"name\":\"devResWithdrawal\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumTarget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokensAmount\",\"type\":\"uint256\"}],\"name\":\"returnTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumTarget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkTargetReached\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"soldTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumTargetReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"num\",\"type\":\"uint256\"},{\"name\":\"den\",\"type\":\"uint256\"}],\"name\":\"devWithdrawal\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"closeType\",\"type\":\"bool\"}],\"name\":\"closeCrowdsale\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"resAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]",
  "bytecode": "606060405260048054600160ff199091161761010060b060020a03191675c1fa2c60ea649a477e40c0510744f2881c0486d900001790556605543df729c0006005556879f905c6fd34e8000060065569031d2258df0fa2b500006007554262278d000160085560098054732fd8019ce2aac3bf9db18d851a57efe1a6151bbf600160a060020a031990911617905534610000575b610966806100a26000396000f300606060405236156100e05763ffffffff60e060020a60003504166316ebd6d58114610317578063269714dd1461032657806329dcb0cf1461034557806338af3eed146103645780633ae1786f1461038d57806342235da61461039f57806344b1e09d146103be5780635ed9ebfc146103cd5780636e66f6e9146103ec57806370a08231146104155780637b3e5e7b146104405780638dc719281461045f578063a035b1fe14610480578063b7719ef51461049f578063ccb07cef146104b4578063ecba18c0146104d5578063fc15dcef146104e9578063fd6b7ef814610508575b6103155b60045460009060ff16806100fd57503460005460075403105b1561010757610000565b50600160a060020a03331660009081526003602052604081208054349081019091558154810190915560018054820190556005548181156100005760028054929091049091019055600954600554600160a060020a039091169063a9059cbb90339084811561000057046040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b156100005760325a03f11561000057505060408051600160a060020a033316815260208101849052600181830152905160008051602061091b83398151915292509081900360600190a16006546000541015801561021d5750600454610100900460ff16155b15610283576004805461010061ff001990911617908190556006546040805162010000909304600160a060020a03168352602083019190915280517fec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c859281900390910190a15b600454610100900460ff16156103105760045460405162010000909104600160a060020a0316906108fc8315029083906000818181858888f1935050505015610310576004546040805162010000909204600160a060020a03168252602082018390526000828201525160008051602061091b833981519152916060908290030190a16001805482900390555b5b5b50565b005b3461000057610315610517565b005b34610000576103336105cf565b60408051918252519081900360200190f35b34610000576103336105d5565b60408051918252519081900360200190f35b34610000576103716105db565b60408051600160a060020a039092168252519081900360200190f35b34610000576103156004356105f0565b005b34610000576103336106ac565b60408051918252519081900360200190f35b34610000576103156106b2565b005b34610000576103336106db565b60408051918252519081900360200190f35b34610000576103716106e1565b60408051600160a060020a039092168252519081900360200190f35b3461000057610333600160a060020a03600435166106f0565b60408051918252519081900360200190f35b3461000057610333610702565b60408051918252519081900360200190f35b346100005761046c610708565b604080519115158252519081900360200190f35b3461000057610333610716565b60408051918252519081900360200190f35b346100005761031560043560243561071c565b005b346100005761046c6107e5565b604080519115158252519081900360200190f35b346100005761031560043515156107ee565b005b346100005761033361081e565b60408051918252519081900360200190f35b3461000057610315610824565b005b600454610100900460ff161580610543575060045433600160a060020a03908116620100009092041614155b1561054d57610000565b60045460015460405162010000909204600160a060020a0316916108fc82150291906000818181858888f19350505050156105cc576004546001546040805162010000909304600160a060020a0316835260208301919091526000828201525160008051602061091b833981519152916060908290030190a160006001555b5b565b60075481565b60085481565b600454620100009004600160a060020a031681565b60085442106103105760045460ff16151561060a57610000565b60045433600160a060020a03908116620100009092041614156103105760095460048054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0362010000909304831693810193909352602483018590525192169163a9059cbb9160448082019260009290919082900301818387803b156100005760325a03f115610000575050505b5b5b5b50565b60065481565b60085442106105cc57600654600054106105cc576004805461ff0019166101001790555b5b5b5b565b60025481565b600954600160a060020a031681565b60036020526000908152604090205481565b60005481565b600454610100900460ff1681565b60055481565b600454600090610100900460ff16158061074b575060045433600160a060020a03908116620100009092041614155b1561075557610000565b8183811561000057600454604051929091049250620100009004600160a060020a0316906108fc8315029083906000818181858888f19350505050156107df576004546040805162010000909204600160a060020a03168252602082018390526000828201525160008051602061091b833981519152916060908290030190a16001805482900390555b5b505050565b60045460ff1681565b60045433600160a060020a0390811662010000909204161415610310576004805460ff19168215151790555b5b50565b60015481565b60085460009042106103105760045460ff16151561084157610000565b600454610100900460ff1615801561085b575060045460ff165b156103105750600160a060020a03331660009081526003602052604081208054908290559081111561031057604051600160a060020a0333169082156108fc029083906000818181858888f19350505050156108f65760408051600160a060020a033316815260208101839052600081830152905160008051602061091b8339815191529181900360600190a1600180548290039055610310565b600160a060020a03331660009081526003602052604090208190555b5b5b5b5b5b505600e842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6a165627a7a723058201e04a4c495a68c5d0dd0049040877db75f23f1672d2c7939a063afbd4d3763eb0029"
}